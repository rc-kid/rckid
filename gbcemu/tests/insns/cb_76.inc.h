    TEST(gbcemu, opcode_cb_76) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 76 0000
        gbc.setState(0xa88e, 0x529, 0xa850, 0xbc9b, 0xa188, 0x394, 0x1, 0x1);
        gbc.writeMem(0x394, { 0x6c });
        gbc.writeMem(0xa88e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x529, gbc.sp());
        EXPECT(0xa890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88e));
        EXPECT(0x76, gbc.readMem(0xa88f));
        // CB 76 0001
        gbc.setState(0x3ee2, 0x167d, 0x78d0, 0x6638, 0xaffb, 0x868f, 0x1, 0x1);
        gbc.writeMem(0x3ee2, { 0xcb, 0x76 });
        gbc.writeMem(0x868f, { 0xb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x167d, gbc.sp());
        EXPECT(0x3ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x868f));
        // CB 76 0002
        gbc.setState(0xdb05, 0x5c46, 0x91a0, 0xedf9, 0x63bc, 0xe2a8, 0x1, 0x1);
        gbc.writeMem(0xdb05, { 0xcb, 0x76 });
        gbc.writeMem(0xe2a8, { 0x2a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5c46, gbc.sp());
        EXPECT(0xdb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb05));
        EXPECT(0x76, gbc.readMem(0xdb06));
        EXPECT(0x2a, gbc.readMem(0xe2a8));
        // CB 76 0003
        gbc.setState(0xc260, 0xfd67, 0xd210, 0x75f3, 0xf61f, 0x56b4, 0x0, 0x0);
        gbc.writeMem(0x56b4, { 0xcc });
        gbc.writeMem(0xc260, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfd67, gbc.sp());
        EXPECT(0xc262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc260));
        EXPECT(0x76, gbc.readMem(0xc261));
        // CB 76 0004
        gbc.setState(0xb66f, 0x689f, 0x9590, 0x6bca, 0x1361, 0x9d47, 0x1, 0x0);
        gbc.writeMem(0x9d47, { 0x2d });
        gbc.writeMem(0xb66f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x689f, gbc.sp());
        EXPECT(0xb671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9d47));
        EXPECT(0xcb, gbc.readMem(0xb66f));
        EXPECT(0x76, gbc.readMem(0xb670));
        // CB 76 0005
        gbc.setState(0xd691, 0x2725, 0x5100, 0x5ccf, 0x237b, 0xf63f, 0x0, 0x1);
        gbc.writeMem(0xd691, { 0xcb, 0x76 });
        gbc.writeMem(0xf63f, { 0xd3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2725, gbc.sp());
        EXPECT(0xd693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd691));
        EXPECT(0x76, gbc.readMem(0xd692));
        EXPECT(0xd3, gbc.readMem(0xf63f));
        // CB 76 0007
        gbc.setState(0x534c, 0x9a14, 0x3a70, 0xcb89, 0x2cf6, 0x1691, 0x0, 0x1);
        gbc.writeMem(0x1691, { 0x5 });
        gbc.writeMem(0x534c, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9a14, gbc.sp());
        EXPECT(0x534e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0009
        gbc.setState(0x6614, 0x3c7, 0xb800, 0x2d07, 0xa31, 0x764c, 0x1, 0x1);
        gbc.writeMem(0x6614, { 0xcb, 0x76 });
        gbc.writeMem(0x764c, { 0x12 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3c7, gbc.sp());
        EXPECT(0x6616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 000A
        gbc.setState(0x6ce9, 0xd4c4, 0xee20, 0x7630, 0x7ba3, 0xd5f9, 0x1, 0x1);
        gbc.writeMem(0x6ce9, { 0xcb, 0x76 });
        gbc.writeMem(0xd5f9, { 0x42 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd4c4, gbc.sp());
        EXPECT(0x6ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd5f9));
        // CB 76 000B
        gbc.setState(0x2722, 0x6092, 0x10a0, 0x326e, 0xc57a, 0x3dee, 0x0, 0x0);
        gbc.writeMem(0x2722, { 0xcb, 0x76 });
        gbc.writeMem(0x3dee, { 0xc3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6092, gbc.sp());
        EXPECT(0x2724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 000C
        gbc.setState(0x5229, 0x71c4, 0x490, 0x6899, 0x7de9, 0x90d0, 0x1, 0x1);
        gbc.writeMem(0x5229, { 0xcb, 0x76 });
        gbc.writeMem(0x90d0, { 0x21 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x71c4, gbc.sp());
        EXPECT(0x522b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x90d0));
        // CB 76 000D
        gbc.setState(0x44f1, 0x3a2c, 0x6570, 0x2bac, 0xca6, 0x6471, 0x0, 0x0);
        gbc.writeMem(0x44f1, { 0xcb, 0x76 });
        gbc.writeMem(0x6471, { 0x38 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3a2c, gbc.sp());
        EXPECT(0x44f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 000E
        gbc.setState(0x113c, 0xf963, 0xd6a0, 0x5732, 0xe5d8, 0x263c, 0x1, 0x0);
        gbc.writeMem(0x113c, { 0xcb, 0x76 });
        gbc.writeMem(0x263c, { 0xf6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf963, gbc.sp());
        EXPECT(0x113e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 000F
        gbc.setState(0xb5c9, 0x52d2, 0x44c0, 0x75d3, 0xb12b, 0x7467, 0x0, 0x1);
        gbc.writeMem(0x7467, { 0x7e });
        gbc.writeMem(0xb5c9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x52d2, gbc.sp());
        EXPECT(0xb5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c9));
        EXPECT(0x76, gbc.readMem(0xb5ca));
        // CB 76 0010
        gbc.setState(0xb8e, 0xcdcf, 0x5170, 0x48b3, 0xff40, 0xafb4, 0x0, 0x0);
        gbc.writeMem(0xb8e, { 0xcb, 0x76 });
        gbc.writeMem(0xafb4, { 0xc1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcdcf, gbc.sp());
        EXPECT(0xb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xafb4));
        // CB 76 0011
        gbc.setState(0xce2a, 0x778, 0x9830, 0xb15e, 0x5553, 0x8fb5, 0x1, 0x1);
        gbc.writeMem(0x8fb5, { 0xbe });
        gbc.writeMem(0xce2a, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x778, gbc.sp());
        EXPECT(0xce2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x8fb5));
        EXPECT(0xcb, gbc.readMem(0xce2a));
        EXPECT(0x76, gbc.readMem(0xce2b));
        // CB 76 0012
        gbc.setState(0x2e5, 0xb2c7, 0x3fe0, 0x2dfc, 0x9382, 0xaf59, 0x1, 0x0);
        gbc.writeMem(0x2e5, { 0xcb, 0x76 });
        gbc.writeMem(0xaf59, { 0x7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb2c7, gbc.sp());
        EXPECT(0x2e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaf59));
        // CB 76 0013
        gbc.setState(0x402, 0x89a5, 0x1090, 0xfa3f, 0x3aa4, 0xfc42, 0x0, 0x0);
        gbc.writeMem(0x402, { 0xcb, 0x76 });
        gbc.writeMem(0xfc42, { 0xbf });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x89a5, gbc.sp());
        EXPECT(0x404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xfc42));
        // CB 76 0016
        gbc.setState(0x517c, 0xd0f5, 0x6be0, 0x6b0b, 0x4c67, 0x5f75, 0x0, 0x0);
        gbc.writeMem(0x517c, { 0xcb, 0x76 });
        gbc.writeMem(0x5f75, { 0x3b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd0f5, gbc.sp());
        EXPECT(0x517e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0017
        gbc.setState(0xb9b2, 0x4090, 0xafd0, 0xe651, 0x909, 0xc739, 0x1, 0x1);
        gbc.writeMem(0xb9b2, { 0xcb, 0x76 });
        gbc.writeMem(0xc739, { 0xa3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4090, gbc.sp());
        EXPECT(0xb9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b2));
        EXPECT(0x76, gbc.readMem(0xb9b3));
        EXPECT(0xa3, gbc.readMem(0xc739));
        // CB 76 0018
        gbc.setState(0x3965, 0xba27, 0xbb40, 0xf84f, 0x821c, 0x64f, 0x1, 0x1);
        gbc.writeMem(0x64f, { 0x47 });
        gbc.writeMem(0x3965, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xba27, gbc.sp());
        EXPECT(0x3967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0019
        gbc.setState(0xd9f4, 0x753c, 0x510, 0xd20, 0xd436, 0x94d1, 0x1, 0x0);
        gbc.writeMem(0x94d1, { 0xc9 });
        gbc.writeMem(0xd9f4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x753c, gbc.sp());
        EXPECT(0xd9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x94d1));
        EXPECT(0xcb, gbc.readMem(0xd9f4));
        EXPECT(0x76, gbc.readMem(0xd9f5));
        // CB 76 001A
        gbc.setState(0x59a1, 0xbe2e, 0x6700, 0x78b3, 0x2285, 0xe08b, 0x0, 0x1);
        gbc.writeMem(0x59a1, { 0xcb, 0x76 });
        gbc.writeMem(0xe08b, { 0xd6 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbe2e, gbc.sp());
        EXPECT(0x59a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe08b));
        // CB 76 001B
        gbc.setState(0x5011, 0xacb9, 0x5680, 0xed47, 0x5d87, 0x9875, 0x0, 0x0);
        gbc.writeMem(0x5011, { 0xcb, 0x76 });
        gbc.writeMem(0x9875, { 0x1e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xacb9, gbc.sp());
        EXPECT(0x5013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x9875));
        // CB 76 001C
        gbc.setState(0x1657, 0xed6, 0x77e0, 0xa635, 0x5871, 0x3d93, 0x1, 0x0);
        gbc.writeMem(0x1657, { 0xcb, 0x76 });
        gbc.writeMem(0x3d93, { 0xdd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xed6, gbc.sp());
        EXPECT(0x1659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 001D
        gbc.setState(0x6410, 0x6f2, 0xf750, 0x5533, 0xd90f, 0xff2d, 0x1, 0x1);
        gbc.writeMem(0x6410, { 0xcb, 0x76 });
        gbc.writeMem(0xff2d, { 0xe0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6f2, gbc.sp());
        EXPECT(0x6412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff2d));
        // CB 76 001E
        gbc.setState(0x7338, 0x8c5c, 0xa2b0, 0x352c, 0x8be8, 0xf783, 0x0, 0x1);
        gbc.writeMem(0x7338, { 0xcb, 0x76 });
        gbc.writeMem(0xf783, { 0x72 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8c5c, gbc.sp());
        EXPECT(0x733a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xf783));
        // CB 76 001F
        gbc.setState(0x8341, 0xf6fe, 0x6730, 0x360f, 0x929f, 0xd144, 0x0, 0x1);
        gbc.writeMem(0x8341, { 0xcb, 0x76 });
        gbc.writeMem(0xd144, { 0x69 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf6fe, gbc.sp());
        EXPECT(0x8343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8341));
        EXPECT(0x76, gbc.readMem(0x8342));
        EXPECT(0x69, gbc.readMem(0xd144));
        // CB 76 0020
        gbc.setState(0x4baa, 0xf43e, 0xf280, 0x6e32, 0xaefc, 0x38d0, 0x1, 0x0);
        gbc.writeMem(0x38d0, { 0x71 });
        gbc.writeMem(0x4baa, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf43e, gbc.sp());
        EXPECT(0x4bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0021
        gbc.setState(0x7a3c, 0xcc50, 0x36a0, 0xae82, 0x2079, 0xda5a, 0x1, 0x0);
        gbc.writeMem(0x7a3c, { 0xcb, 0x76 });
        gbc.writeMem(0xda5a, { 0x5a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcc50, gbc.sp());
        EXPECT(0x7a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xda5a));
        // CB 76 0022
        gbc.setState(0xae63, 0x24b6, 0x5c60, 0xc62f, 0x18f5, 0x34ea, 0x0, 0x1);
        gbc.writeMem(0x34ea, { 0x3e });
        gbc.writeMem(0xae63, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x24b6, gbc.sp());
        EXPECT(0xae65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae63));
        EXPECT(0x76, gbc.readMem(0xae64));
        // CB 76 0023
        gbc.setState(0x7ef8, 0xc4ed, 0x520, 0xe3fe, 0x581, 0xec4b, 0x1, 0x0);
        gbc.writeMem(0x7ef8, { 0xcb, 0x76 });
        gbc.writeMem(0xec4b, { 0x70 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc4ed, gbc.sp());
        EXPECT(0x7efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xec4b));
        // CB 76 0024
        gbc.setState(0x12b5, 0x1f10, 0xa250, 0x7558, 0x862d, 0x87b4, 0x1, 0x1);
        gbc.writeMem(0x12b5, { 0xcb, 0x76 });
        gbc.writeMem(0x87b4, { 0x62 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1f10, gbc.sp());
        EXPECT(0x12b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x87b4));
        // CB 76 0025
        gbc.setState(0x2fb2, 0x6fff, 0xbdb0, 0x264a, 0xb53a, 0xd9f2, 0x0, 0x0);
        gbc.writeMem(0x2fb2, { 0xcb, 0x76 });
        gbc.writeMem(0xd9f2, { 0xdd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6fff, gbc.sp());
        EXPECT(0x2fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xd9f2));
        // CB 76 0026
        gbc.setState(0x4736, 0xedf3, 0xc4c0, 0x969e, 0x74eb, 0xcb99, 0x0, 0x1);
        gbc.writeMem(0x4736, { 0xcb, 0x76 });
        gbc.writeMem(0xcb99, { 0xf6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xedf3, gbc.sp());
        EXPECT(0x4738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xcb99));
        // CB 76 0027
        gbc.setState(0x9575, 0x7122, 0x5380, 0x16ce, 0x4bd0, 0xa09e, 0x0, 0x0);
        gbc.writeMem(0x9575, { 0xcb, 0x76 });
        gbc.writeMem(0xa09e, { 0xca });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7122, gbc.sp());
        EXPECT(0x9577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9575));
        EXPECT(0x76, gbc.readMem(0x9576));
        EXPECT(0xca, gbc.readMem(0xa09e));
        // CB 76 0028
        gbc.setState(0x8af4, 0xf0b7, 0x2150, 0x3830, 0x2e97, 0xa92e, 0x0, 0x0);
        gbc.writeMem(0x8af4, { 0xcb, 0x76 });
        gbc.writeMem(0xa92e, { 0xda });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf0b7, gbc.sp());
        EXPECT(0x8af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af4));
        EXPECT(0x76, gbc.readMem(0x8af5));
        EXPECT(0xda, gbc.readMem(0xa92e));
        // CB 76 002A
        gbc.setState(0x8644, 0x4d25, 0x5390, 0xe0e9, 0xfba6, 0xb0c3, 0x0, 0x0);
        gbc.writeMem(0x8644, { 0xcb, 0x76 });
        gbc.writeMem(0xb0c3, { 0x71 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4d25, gbc.sp());
        EXPECT(0x8646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8644));
        EXPECT(0x76, gbc.readMem(0x8645));
        EXPECT(0x71, gbc.readMem(0xb0c3));
        // CB 76 002B
        gbc.setState(0x8b86, 0xfaa5, 0x4950, 0x3b1f, 0x884f, 0xbb78, 0x1, 0x1);
        gbc.writeMem(0x8b86, { 0xcb, 0x76 });
        gbc.writeMem(0xbb78, { 0x30 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfaa5, gbc.sp());
        EXPECT(0x8b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b86));
        EXPECT(0x76, gbc.readMem(0x8b87));
        EXPECT(0x30, gbc.readMem(0xbb78));
        // CB 76 002D
        gbc.setState(0xb6d1, 0x48f0, 0x7a20, 0x3c7e, 0xbd8e, 0x663e, 0x0, 0x1);
        gbc.writeMem(0x663e, { 0x18 });
        gbc.writeMem(0xb6d1, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x48f0, gbc.sp());
        EXPECT(0xb6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d1));
        EXPECT(0x76, gbc.readMem(0xb6d2));
        // CB 76 002E
        gbc.setState(0xc307, 0x4e94, 0xa260, 0xfce4, 0xafc7, 0x3ed4, 0x0, 0x1);
        gbc.writeMem(0x3ed4, { 0xca });
        gbc.writeMem(0xc307, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4e94, gbc.sp());
        EXPECT(0xc309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc307));
        EXPECT(0x76, gbc.readMem(0xc308));
        // CB 76 002F
        gbc.setState(0xc12, 0xd393, 0x9470, 0xae58, 0x7252, 0xc83d, 0x1, 0x1);
        gbc.writeMem(0xc12, { 0xcb, 0x76 });
        gbc.writeMem(0xc83d, { 0x88 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd393, gbc.sp());
        EXPECT(0xc14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc83d));
        // CB 76 0030
        gbc.setState(0xc728, 0x85e1, 0x4210, 0xdc03, 0xf5c3, 0x3e29, 0x1, 0x1);
        gbc.writeMem(0x3e29, { 0xd2 });
        gbc.writeMem(0xc728, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x85e1, gbc.sp());
        EXPECT(0xc72a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc728));
        EXPECT(0x76, gbc.readMem(0xc729));
        // CB 76 0031
        gbc.setState(0x147f, 0x7ecb, 0xa0f0, 0xb6d1, 0x684c, 0xa6e, 0x1, 0x0);
        gbc.writeMem(0xa6e, { 0xd8 });
        gbc.writeMem(0x147f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7ecb, gbc.sp());
        EXPECT(0x1481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0032
        gbc.setState(0x4db0, 0xdfba, 0xa070, 0x6ddc, 0xc1cf, 0x6c91, 0x1, 0x1);
        gbc.writeMem(0x4db0, { 0xcb, 0x76 });
        gbc.writeMem(0x6c91, { 0x37 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdfba, gbc.sp());
        EXPECT(0x4db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0033
        gbc.setState(0xd819, 0xb130, 0x79d0, 0x5526, 0x29b1, 0x55af, 0x0, 0x0);
        gbc.writeMem(0x55af, { 0xe6 });
        gbc.writeMem(0xd819, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb130, gbc.sp());
        EXPECT(0xd81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd819));
        EXPECT(0x76, gbc.readMem(0xd81a));
        // CB 76 0034
        gbc.setState(0x28ae, 0x1735, 0xe940, 0xe01e, 0x1594, 0x82ff, 0x1, 0x0);
        gbc.writeMem(0x28ae, { 0xcb, 0x76 });
        gbc.writeMem(0x82ff, { 0x38 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1735, gbc.sp());
        EXPECT(0x28b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x82ff));
        // CB 76 0035
        gbc.setState(0xddd, 0x2e7d, 0x5300, 0x3567, 0x80fc, 0x3638, 0x0, 0x0);
        gbc.writeMem(0xddd, { 0xcb, 0x76 });
        gbc.writeMem(0x3638, { 0x48 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2e7d, gbc.sp());
        EXPECT(0xddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0036
        gbc.setState(0x79f3, 0x248, 0x8e70, 0xa179, 0xb9f5, 0x65a3, 0x1, 0x1);
        gbc.writeMem(0x65a3, { 0x21 });
        gbc.writeMem(0x79f3, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x248, gbc.sp());
        EXPECT(0x79f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0037
        gbc.setState(0x9f46, 0xeadd, 0x90c0, 0xc490, 0x683, 0x46d, 0x1, 0x0);
        gbc.writeMem(0x46d, { 0xd4 });
        gbc.writeMem(0x9f46, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xeadd, gbc.sp());
        EXPECT(0x9f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f46));
        EXPECT(0x76, gbc.readMem(0x9f47));
        // CB 76 0038
        gbc.setState(0xd828, 0xfc37, 0x95a0, 0xc6df, 0x9d54, 0x5fb0, 0x0, 0x1);
        gbc.writeMem(0x5fb0, { 0x40 });
        gbc.writeMem(0xd828, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfc37, gbc.sp());
        EXPECT(0xd82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd828));
        EXPECT(0x76, gbc.readMem(0xd829));
        // CB 76 0039
        gbc.setState(0x3051, 0x2f36, 0xc050, 0x95e5, 0x7161, 0xe7ce, 0x0, 0x0);
        gbc.writeMem(0x3051, { 0xcb, 0x76 });
        gbc.writeMem(0xe7ce, { 0xd7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2f36, gbc.sp());
        EXPECT(0x3053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xe7ce));
        // CB 76 003A
        gbc.setState(0x8c84, 0x3675, 0x5770, 0x24f9, 0x24c3, 0x479b, 0x0, 0x0);
        gbc.writeMem(0x479b, { 0xad });
        gbc.writeMem(0x8c84, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3675, gbc.sp());
        EXPECT(0x8c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c84));
        EXPECT(0x76, gbc.readMem(0x8c85));
        // CB 76 003B
        gbc.setState(0xb6a8, 0x47fd, 0x7d0, 0x8e3f, 0x2597, 0x9168, 0x0, 0x0);
        gbc.writeMem(0x9168, { 0xa6 });
        gbc.writeMem(0xb6a8, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x47fd, gbc.sp());
        EXPECT(0xb6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9168));
        EXPECT(0xcb, gbc.readMem(0xb6a8));
        EXPECT(0x76, gbc.readMem(0xb6a9));
        // CB 76 003C
        gbc.setState(0x18e0, 0x8d2b, 0xce20, 0x5ad6, 0xcd6, 0x8f9a, 0x0, 0x0);
        gbc.writeMem(0x18e0, { 0xcb, 0x76 });
        gbc.writeMem(0x8f9a, { 0x6e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8d2b, gbc.sp());
        EXPECT(0x18e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8f9a));
        // CB 76 003D
        gbc.setState(0xac80, 0xa971, 0x1d20, 0x5bd2, 0x9771, 0x194, 0x1, 0x0);
        gbc.writeMem(0x194, { 0x69 });
        gbc.writeMem(0xac80, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa971, gbc.sp());
        EXPECT(0xac82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac80));
        EXPECT(0x76, gbc.readMem(0xac81));
        // CB 76 003E
        gbc.setState(0x32f1, 0x6d19, 0x4230, 0xa2e6, 0xd19f, 0xd4d2, 0x1, 0x1);
        gbc.writeMem(0x32f1, { 0xcb, 0x76 });
        gbc.writeMem(0xd4d2, { 0xc1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6d19, gbc.sp());
        EXPECT(0x32f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd4d2));
        // CB 76 003F
        gbc.setState(0x2724, 0x8eff, 0x9820, 0xd1f0, 0x3e61, 0xf41f, 0x0, 0x0);
        gbc.writeMem(0x2724, { 0xcb, 0x76 });
        gbc.writeMem(0xf41f, { 0x4a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8eff, gbc.sp());
        EXPECT(0x2726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xf41f));
        // CB 76 0040
        gbc.setState(0xa78a, 0x4854, 0xfd40, 0x2665, 0xc3fe, 0x52fe, 0x1, 0x0);
        gbc.writeMem(0x52fe, { 0x40 });
        gbc.writeMem(0xa78a, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4854, gbc.sp());
        EXPECT(0xa78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa78a));
        EXPECT(0x76, gbc.readMem(0xa78b));
        // CB 76 0042
        gbc.setState(0xcfdd, 0x4a96, 0x51f0, 0x742f, 0x78b8, 0xcc5f, 0x0, 0x1);
        gbc.writeMem(0xcc5f, { 0xc2 });
        gbc.writeMem(0xcfdd, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4a96, gbc.sp());
        EXPECT(0xcfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcc5f));
        EXPECT(0xcb, gbc.readMem(0xcfdd));
        EXPECT(0x76, gbc.readMem(0xcfde));
        // CB 76 0043
        gbc.setState(0x928f, 0x3726, 0xc190, 0xb8ae, 0x4288, 0x3993, 0x0, 0x0);
        gbc.writeMem(0x3993, { 0x1b });
        gbc.writeMem(0x928f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3726, gbc.sp());
        EXPECT(0x9291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928f));
        EXPECT(0x76, gbc.readMem(0x9290));
        // CB 76 0044
        gbc.setState(0x3a5f, 0x44ed, 0x9140, 0x4cf0, 0xd2b4, 0xff3f, 0x1, 0x0);
        gbc.writeMem(0x3a5f, { 0xcb, 0x76 });
        gbc.writeMem(0xff3f, { 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x44ed, gbc.sp());
        EXPECT(0x3a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xff3f));
        // CB 76 0045
        gbc.setState(0x39c2, 0x1c5f, 0x7990, 0x59ee, 0x7709, 0x9609, 0x0, 0x0);
        gbc.writeMem(0x39c2, { 0xcb, 0x76 });
        gbc.writeMem(0x9609, { 0xb8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1c5f, gbc.sp());
        EXPECT(0x39c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9609));
        // CB 76 0046
        gbc.setState(0x5790, 0xf202, 0x4b40, 0xb459, 0x22d8, 0x33ed, 0x1, 0x1);
        gbc.writeMem(0x33ed, { 0x4a });
        gbc.writeMem(0x5790, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf202, gbc.sp());
        EXPECT(0x5792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0047
        gbc.setState(0x60a3, 0x7cec, 0xde60, 0x8800, 0x9645, 0xc602, 0x1, 0x0);
        gbc.writeMem(0x60a3, { 0xcb, 0x76 });
        gbc.writeMem(0xc602, { 0xdb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7cec, gbc.sp());
        EXPECT(0x60a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xc602));
        // CB 76 0048
        gbc.setState(0x4581, 0x382d, 0x84f0, 0xeef4, 0xb5eb, 0xb19a, 0x0, 0x0);
        gbc.writeMem(0x4581, { 0xcb, 0x76 });
        gbc.writeMem(0xb19a, { 0x17 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x382d, gbc.sp());
        EXPECT(0x4583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xb19a));
        // CB 76 0049
        gbc.setState(0xbe85, 0x34a1, 0xb0a0, 0xf25f, 0xf985, 0xa5d3, 0x0, 0x0);
        gbc.writeMem(0xa5d3, { 0xd8 });
        gbc.writeMem(0xbe85, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x34a1, gbc.sp());
        EXPECT(0xbe87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xa5d3));
        EXPECT(0xcb, gbc.readMem(0xbe85));
        EXPECT(0x76, gbc.readMem(0xbe86));
        // CB 76 004A
        gbc.setState(0x590f, 0x9c5, 0x3970, 0x8393, 0x37e6, 0xf40e, 0x0, 0x0);
        gbc.writeMem(0x590f, { 0xcb, 0x76 });
        gbc.writeMem(0xf40e, { 0x74 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9c5, gbc.sp());
        EXPECT(0x5911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xf40e));
        // CB 76 004B
        gbc.setState(0x24c7, 0x67ac, 0x88a0, 0x5cf6, 0xfea, 0x77ac, 0x0, 0x1);
        gbc.writeMem(0x24c7, { 0xcb, 0x76 });
        gbc.writeMem(0x77ac, { 0x92 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x67ac, gbc.sp());
        EXPECT(0x24c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 004D
        gbc.setState(0xb3bc, 0xe4ad, 0xa880, 0xd390, 0x7833, 0x74f0, 0x0, 0x1);
        gbc.writeMem(0x74f0, { 0x5a });
        gbc.writeMem(0xb3bc, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe4ad, gbc.sp());
        EXPECT(0xb3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bc));
        EXPECT(0x76, gbc.readMem(0xb3bd));
        // CB 76 004E
        gbc.setState(0x94e7, 0x3dc9, 0xd30, 0xa3b7, 0xbff6, 0x9fcb, 0x1, 0x0);
        gbc.writeMem(0x94e7, { 0xcb, 0x76 });
        gbc.writeMem(0x9fcb, { 0x4a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3dc9, gbc.sp());
        EXPECT(0x94e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e7));
        EXPECT(0x76, gbc.readMem(0x94e8));
        EXPECT(0x4a, gbc.readMem(0x9fcb));
        // CB 76 004F
        gbc.setState(0x65e, 0x28a5, 0xf390, 0xf672, 0x7e05, 0x952, 0x0, 0x1);
        gbc.writeMem(0x65e, { 0xcb, 0x76 });
        gbc.writeMem(0x952, { 0x1a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x28a5, gbc.sp());
        EXPECT(0x660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0050
        gbc.setState(0xd096, 0xadba, 0x2320, 0x389d, 0xe66d, 0xd68b, 0x1, 0x1);
        gbc.writeMem(0xd096, { 0xcb, 0x76 });
        gbc.writeMem(0xd68b, { 0x42 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xadba, gbc.sp());
        EXPECT(0xd098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd096));
        EXPECT(0x76, gbc.readMem(0xd097));
        EXPECT(0x42, gbc.readMem(0xd68b));
        // CB 76 0051
        gbc.setState(0xc764, 0x9236, 0xa590, 0xff16, 0xc32c, 0x2ce0, 0x0, 0x1);
        gbc.writeMem(0x2ce0, { 0xb8 });
        gbc.writeMem(0xc764, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9236, gbc.sp());
        EXPECT(0xc766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc764));
        EXPECT(0x76, gbc.readMem(0xc765));
        // CB 76 0052
        gbc.setState(0xad20, 0x36ed, 0xfb00, 0x261a, 0xfd7e, 0x5b0f, 0x0, 0x0);
        gbc.writeMem(0x5b0f, { 0x97 });
        gbc.writeMem(0xad20, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x36ed, gbc.sp());
        EXPECT(0xad22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad20));
        EXPECT(0x76, gbc.readMem(0xad21));
        // CB 76 0053
        gbc.setState(0x4dc2, 0xdc91, 0xa430, 0x270, 0x4dab, 0x8774, 0x0, 0x0);
        gbc.writeMem(0x4dc2, { 0xcb, 0x76 });
        gbc.writeMem(0x8774, { 0xaf });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdc91, gbc.sp());
        EXPECT(0x4dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x8774));
        // CB 76 0054
        gbc.setState(0x3872, 0xd62c, 0xb3b0, 0x2b9b, 0xecbc, 0xa13e, 0x0, 0x0);
        gbc.writeMem(0x3872, { 0xcb, 0x76 });
        gbc.writeMem(0xa13e, { 0x48 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd62c, gbc.sp());
        EXPECT(0x3874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa13e));
        // CB 76 0055
        gbc.setState(0xe85c, 0x73c0, 0x74b0, 0x7d58, 0xc115, 0xdc4d, 0x0, 0x1);
        gbc.writeMem(0xdc4d, { 0xed });
        gbc.writeMem(0xe85c, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x73c0, gbc.sp());
        EXPECT(0xe85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xdc4d));
        EXPECT(0xcb, gbc.readMem(0xe85c));
        EXPECT(0x76, gbc.readMem(0xe85d));
        // CB 76 0056
        gbc.setState(0x53c3, 0x61ca, 0x5630, 0xf8d4, 0xcc86, 0x7323, 0x0, 0x0);
        gbc.writeMem(0x53c3, { 0xcb, 0x76 });
        gbc.writeMem(0x7323, { 0x52 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x61ca, gbc.sp());
        EXPECT(0x53c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0057
        gbc.setState(0x23ac, 0x5bcf, 0xe8d0, 0x24c, 0xfd13, 0x2718, 0x0, 0x1);
        gbc.writeMem(0x23ac, { 0xcb, 0x76 });
        gbc.writeMem(0x2718, { 0xe3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5bcf, gbc.sp());
        EXPECT(0x23ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0058
        gbc.setState(0x63f5, 0x7f83, 0x5c0, 0x5546, 0x9de, 0xc4d0, 0x0, 0x1);
        gbc.writeMem(0x63f5, { 0xcb, 0x76 });
        gbc.writeMem(0xc4d0, { 0xbd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7f83, gbc.sp());
        EXPECT(0x63f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc4d0));
        // CB 76 0059
        gbc.setState(0x6a55, 0xbbc9, 0x1770, 0x213d, 0xeb94, 0x58ec, 0x0, 0x1);
        gbc.writeMem(0x58ec, { 0x10 });
        gbc.writeMem(0x6a55, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbbc9, gbc.sp());
        EXPECT(0x6a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 005A
        gbc.setState(0xa34c, 0xbf15, 0xd30, 0x5956, 0x5d47, 0xdfc2, 0x0, 0x0);
        gbc.writeMem(0xa34c, { 0xcb, 0x76 });
        gbc.writeMem(0xdfc2, { 0x98 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbf15, gbc.sp());
        EXPECT(0xa34e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34c));
        EXPECT(0x76, gbc.readMem(0xa34d));
        EXPECT(0x98, gbc.readMem(0xdfc2));
        // CB 76 005B
        gbc.setState(0xc2ed, 0x3de7, 0x1170, 0x7065, 0x8be2, 0x1343, 0x0, 0x1);
        gbc.writeMem(0x1343, { 0x3e });
        gbc.writeMem(0xc2ed, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3de7, gbc.sp());
        EXPECT(0xc2ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ed));
        EXPECT(0x76, gbc.readMem(0xc2ee));
        // CB 76 005C
        gbc.setState(0xa74d, 0xc6ab, 0x9450, 0x416f, 0x4239, 0xe5b7, 0x1, 0x0);
        gbc.writeMem(0xa74d, { 0xcb, 0x76 });
        gbc.writeMem(0xe5b7, { 0xcb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc6ab, gbc.sp());
        EXPECT(0xa74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74d));
        EXPECT(0x76, gbc.readMem(0xa74e));
        EXPECT(0xcb, gbc.readMem(0xe5b7));
        // CB 76 005D
        gbc.setState(0x21d5, 0xeea9, 0x1cd0, 0xfb97, 0x6826, 0x6e86, 0x0, 0x1);
        gbc.writeMem(0x21d5, { 0xcb, 0x76 });
        gbc.writeMem(0x6e86, { 0xba });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xeea9, gbc.sp());
        EXPECT(0x21d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 005E
        gbc.setState(0xd986, 0x7d83, 0xfd10, 0x5ff5, 0xf22a, 0x9027, 0x1, 0x0);
        gbc.writeMem(0x9027, { 0xb6 });
        gbc.writeMem(0xd986, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7d83, gbc.sp());
        EXPECT(0xd988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9027));
        EXPECT(0xcb, gbc.readMem(0xd986));
        EXPECT(0x76, gbc.readMem(0xd987));
        // CB 76 005F
        gbc.setState(0x6e7, 0xfa28, 0xc040, 0x5632, 0xbe02, 0x4535, 0x1, 0x1);
        gbc.writeMem(0x6e7, { 0xcb, 0x76 });
        gbc.writeMem(0x4535, { 0x5b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfa28, gbc.sp());
        EXPECT(0x6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0060
        gbc.setState(0xec5c, 0x7675, 0x27c0, 0x2ec2, 0xbf2b, 0x159d, 0x1, 0x0);
        gbc.writeMem(0x159d, { 0xe5 });
        gbc.writeMem(0xec5c, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7675, gbc.sp());
        EXPECT(0xec5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5c));
        EXPECT(0x76, gbc.readMem(0xec5d));
        // CB 76 0061
        gbc.setState(0x1412, 0x114e, 0x86b0, 0x8456, 0x77fa, 0xb41e, 0x0, 0x1);
        gbc.writeMem(0x1412, { 0xcb, 0x76 });
        gbc.writeMem(0xb41e, { 0x78 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x114e, gbc.sp());
        EXPECT(0x1414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xb41e));
        // CB 76 0062
        gbc.setState(0x7a28, 0xe0e4, 0x4d0, 0x1041, 0x84b6, 0x83c3, 0x1, 0x0);
        gbc.writeMem(0x7a28, { 0xcb, 0x76 });
        gbc.writeMem(0x83c3, { 0x72 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe0e4, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x83c3));
        // CB 76 0063
        gbc.setState(0x3dc3, 0x7f96, 0x99d0, 0xb324, 0x1fc4, 0x5d52, 0x0, 0x0);
        gbc.writeMem(0x3dc3, { 0xcb, 0x76 });
        gbc.writeMem(0x5d52, { 0x22 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7f96, gbc.sp());
        EXPECT(0x3dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0064
        gbc.setState(0xd19a, 0xb840, 0x2480, 0xa6bc, 0x6a4e, 0x23d8, 0x1, 0x0);
        gbc.writeMem(0x23d8, { 0x9e });
        gbc.writeMem(0xd19a, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb840, gbc.sp());
        EXPECT(0xd19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd19a));
        EXPECT(0x76, gbc.readMem(0xd19b));
        // CB 76 0065
        gbc.setState(0x2ea0, 0x40c, 0x98f0, 0xea54, 0x6bf7, 0x43c7, 0x1, 0x1);
        gbc.writeMem(0x2ea0, { 0xcb, 0x76 });
        gbc.writeMem(0x43c7, { 0x85 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x40c, gbc.sp());
        EXPECT(0x2ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0067
        gbc.setState(0x11cc, 0x6ca5, 0xf3c0, 0xfda7, 0xb8e5, 0xb3a3, 0x0, 0x1);
        gbc.writeMem(0x11cc, { 0xcb, 0x76 });
        gbc.writeMem(0xb3a3, { 0xc1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6ca5, gbc.sp());
        EXPECT(0x11ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb3a3));
        // CB 76 0068
        gbc.setState(0x1a00, 0x1115, 0x4fe0, 0xd4e, 0x1232, 0x4157, 0x0, 0x0);
        gbc.writeMem(0x1a00, { 0xcb, 0x76 });
        gbc.writeMem(0x4157, { 0x9a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1115, gbc.sp());
        EXPECT(0x1a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0069
        gbc.setState(0xd78e, 0x54a5, 0x3890, 0x1884, 0x6ae6, 0x627, 0x1, 0x0);
        gbc.writeMem(0x627, { 0x5a });
        gbc.writeMem(0xd78e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x54a5, gbc.sp());
        EXPECT(0xd790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78e));
        EXPECT(0x76, gbc.readMem(0xd78f));
        // CB 76 006A
        gbc.setState(0xbb84, 0x8e64, 0x78c0, 0x2a25, 0xe82, 0xbbcd, 0x0, 0x1);
        gbc.writeMem(0xbb84, { 0xcb, 0x76 });
        gbc.writeMem(0xbbcd, { 0xcd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8e64, gbc.sp());
        EXPECT(0xbb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb84));
        EXPECT(0x76, gbc.readMem(0xbb85));
        EXPECT(0xcd, gbc.readMem(0xbbcd));
        // CB 76 006B
        gbc.setState(0xcaaa, 0xa131, 0x250, 0xf86, 0x10a, 0x71d0, 0x1, 0x0);
        gbc.writeMem(0x71d0, { 0xf });
        gbc.writeMem(0xcaaa, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa131, gbc.sp());
        EXPECT(0xcaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaaa));
        EXPECT(0x76, gbc.readMem(0xcaab));
        // CB 76 006C
        gbc.setState(0x3b1e, 0x2feb, 0x33a0, 0xc076, 0x21b3, 0xf242, 0x0, 0x1);
        gbc.writeMem(0x3b1e, { 0xcb, 0x76 });
        gbc.writeMem(0xf242, { 0xc1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2feb, gbc.sp());
        EXPECT(0x3b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xf242));
        // CB 76 006D
        gbc.setState(0x5cbe, 0x49d, 0xffb0, 0x8f07, 0x11d6, 0x927f, 0x1, 0x1);
        gbc.writeMem(0x5cbe, { 0xcb, 0x76 });
        gbc.writeMem(0x927f, { 0xf6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x49d, gbc.sp());
        EXPECT(0x5cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x927f));
        // CB 76 006E
        gbc.setState(0xc0a6, 0xe187, 0x51a0, 0x2f4f, 0x52ea, 0xef8d, 0x0, 0x1);
        gbc.writeMem(0xc0a6, { 0xcb, 0x76 });
        gbc.writeMem(0xef8d, { 0x2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe187, gbc.sp());
        EXPECT(0xc0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a6));
        EXPECT(0x76, gbc.readMem(0xc0a7));
        EXPECT(0x2, gbc.readMem(0xef8d));
        // CB 76 006F
        gbc.setState(0x7c22, 0x6ff, 0xbc90, 0x2682, 0xeb47, 0x84ab, 0x0, 0x1);
        gbc.writeMem(0x7c22, { 0xcb, 0x76 });
        gbc.writeMem(0x84ab, { 0x46 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6ff, gbc.sp());
        EXPECT(0x7c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x84ab));
        // CB 76 0070
        gbc.setState(0x5d83, 0x565, 0x5000, 0xb18e, 0x7d51, 0xf647, 0x1, 0x1);
        gbc.writeMem(0x5d83, { 0xcb, 0x76 });
        gbc.writeMem(0xf647, { 0xb2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x565, gbc.sp());
        EXPECT(0x5d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xf647));
        // CB 76 0071
        gbc.setState(0x9917, 0x9ad4, 0xd5b0, 0x6d06, 0xcc82, 0x1cef, 0x0, 0x1);
        gbc.writeMem(0x1cef, { 0x68 });
        gbc.writeMem(0x9917, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0x9919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9917));
        EXPECT(0x76, gbc.readMem(0x9918));
        // CB 76 0072
        gbc.setState(0xe265, 0xc5d5, 0xc1f0, 0xcc52, 0xe027, 0xaa27, 0x1, 0x1);
        gbc.writeMem(0xaa27, { 0xfe });
        gbc.writeMem(0xe265, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc5d5, gbc.sp());
        EXPECT(0xe267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xaa27));
        EXPECT(0xcb, gbc.readMem(0xe265));
        EXPECT(0x76, gbc.readMem(0xe266));
        // CB 76 0073
        gbc.setState(0x234, 0x718c, 0xd160, 0x3a22, 0x697e, 0x186, 0x1, 0x0);
        gbc.writeMem(0x186, { 0x2b });
        gbc.writeMem(0x234, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x718c, gbc.sp());
        EXPECT(0x236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0074
        gbc.setState(0xc3b0, 0x4881, 0xbe50, 0x9cb3, 0x40fc, 0xedee, 0x1, 0x1);
        gbc.writeMem(0xc3b0, { 0xcb, 0x76 });
        gbc.writeMem(0xedee, { 0xad });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4881, gbc.sp());
        EXPECT(0xc3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b0));
        EXPECT(0x76, gbc.readMem(0xc3b1));
        EXPECT(0xad, gbc.readMem(0xedee));
        // CB 76 0075
        gbc.setState(0xb6b0, 0xa6cb, 0x8d10, 0xe9cb, 0xf115, 0xef10, 0x0, 0x0);
        gbc.writeMem(0xb6b0, { 0xcb, 0x76 });
        gbc.writeMem(0xef10, { 0x30 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa6cb, gbc.sp());
        EXPECT(0xb6b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b0));
        EXPECT(0x76, gbc.readMem(0xb6b1));
        EXPECT(0x30, gbc.readMem(0xef10));
        // CB 76 0076
        gbc.setState(0xe775, 0xca0e, 0x4f70, 0x8710, 0x5ba6, 0xd27c, 0x1, 0x1);
        gbc.writeMem(0xd27c, { 0xe3 });
        gbc.writeMem(0xe775, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xca0e, gbc.sp());
        EXPECT(0xe777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xd27c));
        EXPECT(0xcb, gbc.readMem(0xe775));
        EXPECT(0x76, gbc.readMem(0xe776));
        // CB 76 0078
        gbc.setState(0x8b5d, 0x9122, 0xb260, 0x85f5, 0x9a40, 0xf472, 0x1, 0x1);
        gbc.writeMem(0x8b5d, { 0xcb, 0x76 });
        gbc.writeMem(0xf472, { 0x3f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9122, gbc.sp());
        EXPECT(0x8b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5d));
        EXPECT(0x76, gbc.readMem(0x8b5e));
        EXPECT(0x3f, gbc.readMem(0xf472));
        // CB 76 0079
        gbc.setState(0xd921, 0xf6a7, 0x7010, 0xa96, 0xbade, 0x95c2, 0x1, 0x0);
        gbc.writeMem(0x95c2, { 0xad });
        gbc.writeMem(0xd921, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf6a7, gbc.sp());
        EXPECT(0xd923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x95c2));
        EXPECT(0xcb, gbc.readMem(0xd921));
        EXPECT(0x76, gbc.readMem(0xd922));
        // CB 76 007A
        gbc.setState(0xa620, 0x55c6, 0x4340, 0x1951, 0xc749, 0x4e0b, 0x0, 0x1);
        gbc.writeMem(0x4e0b, { 0xcd });
        gbc.writeMem(0xa620, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x55c6, gbc.sp());
        EXPECT(0xa622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa620));
        EXPECT(0x76, gbc.readMem(0xa621));
        // CB 76 007B
        gbc.setState(0xc093, 0xa7dc, 0x7b40, 0x2318, 0x181c, 0x517d, 0x0, 0x0);
        gbc.writeMem(0x517d, { 0x52 });
        gbc.writeMem(0xc093, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa7dc, gbc.sp());
        EXPECT(0xc095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc093));
        EXPECT(0x76, gbc.readMem(0xc094));
        // CB 76 007C
        gbc.setState(0xadbb, 0xab8d, 0xef40, 0x41f2, 0xee4d, 0x52e5, 0x0, 0x1);
        gbc.writeMem(0x52e5, { 0x87 });
        gbc.writeMem(0xadbb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xab8d, gbc.sp());
        EXPECT(0xadbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbb));
        EXPECT(0x76, gbc.readMem(0xadbc));
        // CB 76 007D
        gbc.setState(0xd3f1, 0xa21, 0xd820, 0x5c82, 0x67c9, 0x18c6, 0x0, 0x0);
        gbc.writeMem(0x18c6, { 0xe1 });
        gbc.writeMem(0xd3f1, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa21, gbc.sp());
        EXPECT(0xd3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f1));
        EXPECT(0x76, gbc.readMem(0xd3f2));
        // CB 76 007E
        gbc.setState(0x9075, 0xfda9, 0x3b50, 0x3ab4, 0x7b91, 0x9a73, 0x0, 0x1);
        gbc.writeMem(0x9075, { 0xcb, 0x76 });
        gbc.writeMem(0x9a73, { 0xc2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfda9, gbc.sp());
        EXPECT(0x9077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9075));
        EXPECT(0x76, gbc.readMem(0x9076));
        EXPECT(0xc2, gbc.readMem(0x9a73));
        // CB 76 007F
        gbc.setState(0x564b, 0x1954, 0xa80, 0x5922, 0x1274, 0x2d8a, 0x0, 0x0);
        gbc.writeMem(0x2d8a, { 0x76 });
        gbc.writeMem(0x564b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1954, gbc.sp());
        EXPECT(0x564d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0080
        gbc.setState(0xb8b2, 0xcf31, 0xd330, 0x8e06, 0x1e98, 0x600c, 0x1, 0x1);
        gbc.writeMem(0x600c, { 0xed });
        gbc.writeMem(0xb8b2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcf31, gbc.sp());
        EXPECT(0xb8b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b2));
        EXPECT(0x76, gbc.readMem(0xb8b3));
        // CB 76 0081
        gbc.setState(0xbc51, 0x689d, 0x9070, 0x4ae3, 0x3299, 0xad45, 0x1, 0x0);
        gbc.writeMem(0xad45, { 0x6 });
        gbc.writeMem(0xbc51, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x689d, gbc.sp());
        EXPECT(0xbc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xad45));
        EXPECT(0xcb, gbc.readMem(0xbc51));
        EXPECT(0x76, gbc.readMem(0xbc52));
        // CB 76 0083
        gbc.setState(0x4062, 0x9b52, 0xf80, 0xe037, 0xdb2f, 0x366a, 0x0, 0x1);
        gbc.writeMem(0x366a, { 0xec });
        gbc.writeMem(0x4062, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9b52, gbc.sp());
        EXPECT(0x4064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0084
        gbc.setState(0x352, 0xc652, 0x1420, 0x5bbd, 0xd627, 0x268c, 0x0, 0x0);
        gbc.writeMem(0x352, { 0xcb, 0x76 });
        gbc.writeMem(0x268c, { 0xe9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc652, gbc.sp());
        EXPECT(0x354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0085
        gbc.setState(0x213, 0x4b38, 0xc0, 0x1ce6, 0x53f0, 0xa0a, 0x0, 0x0);
        gbc.writeMem(0x213, { 0xcb, 0x76 });
        gbc.writeMem(0xa0a, { 0x16 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4b38, gbc.sp());
        EXPECT(0x215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0086
        gbc.setState(0xc4bc, 0x425b, 0xc9c0, 0xc248, 0x65f8, 0xaa6, 0x1, 0x0);
        gbc.writeMem(0xaa6, { 0xab });
        gbc.writeMem(0xc4bc, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x425b, gbc.sp());
        EXPECT(0xc4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bc));
        EXPECT(0x76, gbc.readMem(0xc4bd));
        // CB 76 0087
        gbc.setState(0x2993, 0xf486, 0x3b90, 0xf9f7, 0x6f8d, 0x151a, 0x1, 0x1);
        gbc.writeMem(0x151a, { 0xc8 });
        gbc.writeMem(0x2993, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf486, gbc.sp());
        EXPECT(0x2995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0088
        gbc.setState(0xd89, 0xf78, 0xde30, 0xdefd, 0x5fbf, 0x4be1, 0x1, 0x1);
        gbc.writeMem(0xd89, { 0xcb, 0x76 });
        gbc.writeMem(0x4be1, { 0x19 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf78, gbc.sp());
        EXPECT(0xd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0089
        gbc.setState(0xb7ca, 0x2a82, 0x2d0, 0xebf7, 0x8f9e, 0xb72e, 0x0, 0x0);
        gbc.writeMem(0xb72e, { 0xe7 });
        gbc.writeMem(0xb7ca, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2a82, gbc.sp());
        EXPECT(0xb7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb72e));
        EXPECT(0xcb, gbc.readMem(0xb7ca));
        EXPECT(0x76, gbc.readMem(0xb7cb));
        // CB 76 008A
        gbc.setState(0xeb23, 0xfdd2, 0xfce0, 0x7dd3, 0x8a05, 0x38b6, 0x0, 0x1);
        gbc.writeMem(0x38b6, { 0x3e });
        gbc.writeMem(0xeb23, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfdd2, gbc.sp());
        EXPECT(0xeb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb23));
        EXPECT(0x76, gbc.readMem(0xeb24));
        // CB 76 008B
        gbc.setState(0xb489, 0x2a4f, 0xb8c0, 0x6d06, 0x6b41, 0x8a7, 0x0, 0x1);
        gbc.writeMem(0x8a7, { 0x14 });
        gbc.writeMem(0xb489, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2a4f, gbc.sp());
        EXPECT(0xb48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb489));
        EXPECT(0x76, gbc.readMem(0xb48a));
        // CB 76 008C
        gbc.setState(0xd90d, 0x5515, 0xe000, 0xba1c, 0x8634, 0xfa9b, 0x0, 0x0);
        gbc.writeMem(0xd90d, { 0xcb, 0x76 });
        gbc.writeMem(0xfa9b, { 0x51 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5515, gbc.sp());
        EXPECT(0xd90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90d));
        EXPECT(0x76, gbc.readMem(0xd90e));
        EXPECT(0x51, gbc.readMem(0xfa9b));
        // CB 76 008D
        gbc.setState(0x69fd, 0xb7f7, 0xf7f0, 0x2cb3, 0x87cf, 0x16b8, 0x1, 0x1);
        gbc.writeMem(0x16b8, { 0xa1 });
        gbc.writeMem(0x69fd, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb7f7, gbc.sp());
        EXPECT(0x69ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 008E
        gbc.setState(0x6a45, 0xa623, 0xe340, 0xd22b, 0x657c, 0x8d8d, 0x1, 0x1);
        gbc.writeMem(0x6a45, { 0xcb, 0x76 });
        gbc.writeMem(0x8d8d, { 0xdd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa623, gbc.sp());
        EXPECT(0x6a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8d8d));
        // CB 76 008F
        gbc.setState(0xbac9, 0xb9fb, 0x3060, 0xc55d, 0xa591, 0xb792, 0x1, 0x1);
        gbc.writeMem(0xb792, { 0x0 });
        gbc.writeMem(0xbac9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb9fb, gbc.sp());
        EXPECT(0xbacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb792));
        EXPECT(0xcb, gbc.readMem(0xbac9));
        EXPECT(0x76, gbc.readMem(0xbaca));
        // CB 76 0090
        gbc.setState(0x6e2d, 0x10e0, 0xe7f0, 0xcad9, 0xfc17, 0xe996, 0x0, 0x1);
        gbc.writeMem(0x6e2d, { 0xcb, 0x76 });
        gbc.writeMem(0xe996, { 0xbe });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x10e0, gbc.sp());
        EXPECT(0x6e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xe996));
        // CB 76 0091
        gbc.setState(0xce0a, 0xa6c, 0x1570, 0x4bdf, 0xea02, 0xdd87, 0x0, 0x1);
        gbc.writeMem(0xce0a, { 0xcb, 0x76 });
        gbc.writeMem(0xdd87, { 0x56 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa6c, gbc.sp());
        EXPECT(0xce0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0a));
        EXPECT(0x76, gbc.readMem(0xce0b));
        EXPECT(0x56, gbc.readMem(0xdd87));
        // CB 76 0092
        gbc.setState(0x979e, 0xb65f, 0xb740, 0xba50, 0x3fa0, 0xbfde, 0x0, 0x0);
        gbc.writeMem(0x979e, { 0xcb, 0x76 });
        gbc.writeMem(0xbfde, { 0xaa });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb65f, gbc.sp());
        EXPECT(0x97a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979e));
        EXPECT(0x76, gbc.readMem(0x979f));
        EXPECT(0xaa, gbc.readMem(0xbfde));
        // CB 76 0093
        gbc.setState(0x30f, 0xe513, 0x3600, 0x65ec, 0x74b, 0xf725, 0x0, 0x0);
        gbc.writeMem(0x30f, { 0xcb, 0x76 });
        gbc.writeMem(0xf725, { 0x9c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe513, gbc.sp());
        EXPECT(0x311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xf725));
        // CB 76 0094
        gbc.setState(0x1741, 0x9e8b, 0xf920, 0x2144, 0x5810, 0xfc2e, 0x0, 0x1);
        gbc.writeMem(0x1741, { 0xcb, 0x76 });
        gbc.writeMem(0xfc2e, { 0x83 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9e8b, gbc.sp());
        EXPECT(0x1743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xfc2e));
        // CB 76 0095
        gbc.setState(0x2926, 0xf778, 0x3480, 0xfa0, 0x4611, 0x4dd2, 0x1, 0x0);
        gbc.writeMem(0x2926, { 0xcb, 0x76 });
        gbc.writeMem(0x4dd2, { 0xbd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf778, gbc.sp());
        EXPECT(0x2928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0096
        gbc.setState(0xa989, 0xdca5, 0xd0, 0xfa25, 0xac17, 0x5069, 0x1, 0x1);
        gbc.writeMem(0x5069, { 0xc0 });
        gbc.writeMem(0xa989, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdca5, gbc.sp());
        EXPECT(0xa98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa989));
        EXPECT(0x76, gbc.readMem(0xa98a));
        // CB 76 0097
        gbc.setState(0xdbc2, 0xd79a, 0x8170, 0xfcc8, 0x44eb, 0x5cc8, 0x1, 0x1);
        gbc.writeMem(0x5cc8, { 0x2b });
        gbc.writeMem(0xdbc2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd79a, gbc.sp());
        EXPECT(0xdbc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc2));
        EXPECT(0x76, gbc.readMem(0xdbc3));
        // CB 76 0098
        gbc.setState(0xb1a9, 0x4a7b, 0xb980, 0xe504, 0xc56c, 0x3ded, 0x1, 0x1);
        gbc.writeMem(0x3ded, { 0x15 });
        gbc.writeMem(0xb1a9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4a7b, gbc.sp());
        EXPECT(0xb1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a9));
        EXPECT(0x76, gbc.readMem(0xb1aa));
        // CB 76 009A
        gbc.setState(0x8cf4, 0xeec, 0xc10, 0xe12, 0xb1a9, 0x4920, 0x1, 0x1);
        gbc.writeMem(0x4920, { 0xed });
        gbc.writeMem(0x8cf4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xeec, gbc.sp());
        EXPECT(0x8cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf4));
        EXPECT(0x76, gbc.readMem(0x8cf5));
        // CB 76 009B
        gbc.setState(0xd0a8, 0x71ce, 0x7d50, 0x39f1, 0xc8f3, 0x2604, 0x1, 0x0);
        gbc.writeMem(0x2604, { 0x35 });
        gbc.writeMem(0xd0a8, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x71ce, gbc.sp());
        EXPECT(0xd0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a8));
        EXPECT(0x76, gbc.readMem(0xd0a9));
        // CB 76 009C
        gbc.setState(0xaae8, 0xf77a, 0xdd50, 0xbd26, 0xbae8, 0xc78c, 0x0, 0x1);
        gbc.writeMem(0xaae8, { 0xcb, 0x76 });
        gbc.writeMem(0xc78c, { 0x5c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf77a, gbc.sp());
        EXPECT(0xaaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae8));
        EXPECT(0x76, gbc.readMem(0xaae9));
        EXPECT(0x5c, gbc.readMem(0xc78c));
        // CB 76 009D
        gbc.setState(0xd046, 0x6f55, 0x70c0, 0x1b26, 0xb1fe, 0x30f, 0x0, 0x0);
        gbc.writeMem(0x30f, { 0xa6 });
        gbc.writeMem(0xd046, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6f55, gbc.sp());
        EXPECT(0xd048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd046));
        EXPECT(0x76, gbc.readMem(0xd047));
        // CB 76 009E
        gbc.setState(0x664e, 0xe4b1, 0xdfa0, 0x5b15, 0x408b, 0xc53a, 0x0, 0x1);
        gbc.writeMem(0x664e, { 0xcb, 0x76 });
        gbc.writeMem(0xc53a, { 0x60 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe4b1, gbc.sp());
        EXPECT(0x6650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xc53a));
        // CB 76 009F
        gbc.setState(0xa2f, 0x8b4e, 0xf060, 0x8e96, 0xbd62, 0x1dec, 0x1, 0x1);
        gbc.writeMem(0xa2f, { 0xcb, 0x76 });
        gbc.writeMem(0x1dec, { 0x3f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8b4e, gbc.sp());
        EXPECT(0xa31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00A0
        gbc.setState(0x807e, 0xe69f, 0x6de0, 0x13ac, 0x3a3b, 0x3cb9, 0x0, 0x1);
        gbc.writeMem(0x3cb9, { 0x2a });
        gbc.writeMem(0x807e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe69f, gbc.sp());
        EXPECT(0x8080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807e));
        EXPECT(0x76, gbc.readMem(0x807f));
        // CB 76 00A1
        gbc.setState(0x8ca2, 0xeba6, 0xffc0, 0x99ee, 0x2634, 0x6dc6, 0x0, 0x0);
        gbc.writeMem(0x6dc6, { 0xc });
        gbc.writeMem(0x8ca2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xeba6, gbc.sp());
        EXPECT(0x8ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca2));
        EXPECT(0x76, gbc.readMem(0x8ca3));
        // CB 76 00A2
        gbc.setState(0x550e, 0xa3d4, 0xf800, 0xd831, 0x60f2, 0x9180, 0x0, 0x0);
        gbc.writeMem(0x550e, { 0xcb, 0x76 });
        gbc.writeMem(0x9180, { 0x72 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa3d4, gbc.sp());
        EXPECT(0x5510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9180));
        // CB 76 00A3
        gbc.setState(0xcbb7, 0x3767, 0x3fa0, 0xefcb, 0x9581, 0xa6b8, 0x1, 0x0);
        gbc.writeMem(0xa6b8, { 0x1b });
        gbc.writeMem(0xcbb7, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3767, gbc.sp());
        EXPECT(0xcbb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xa6b8));
        EXPECT(0xcb, gbc.readMem(0xcbb7));
        EXPECT(0x76, gbc.readMem(0xcbb8));
        // CB 76 00A4
        gbc.setState(0xbed8, 0x2c9e, 0xa5b0, 0x1d32, 0x890d, 0x43ab, 0x0, 0x1);
        gbc.writeMem(0x43ab, { 0xdb });
        gbc.writeMem(0xbed8, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2c9e, gbc.sp());
        EXPECT(0xbeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed8));
        EXPECT(0x76, gbc.readMem(0xbed9));
        // CB 76 00A5
        gbc.setState(0xd703, 0xf56d, 0x8d60, 0xed3e, 0xf87c, 0x525, 0x0, 0x1);
        gbc.writeMem(0x525, { 0x5a });
        gbc.writeMem(0xd703, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf56d, gbc.sp());
        EXPECT(0xd705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd703));
        EXPECT(0x76, gbc.readMem(0xd704));
        // CB 76 00A6
        gbc.setState(0x60e4, 0xbd00, 0x9740, 0xd3f7, 0x378f, 0xd4a8, 0x1, 0x1);
        gbc.writeMem(0x60e4, { 0xcb, 0x76 });
        gbc.writeMem(0xd4a8, { 0xea });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbd00, gbc.sp());
        EXPECT(0x60e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xd4a8));
        // CB 76 00A7
        gbc.setState(0x7b21, 0x9598, 0x7ca0, 0xa4, 0x4295, 0x3e31, 0x0, 0x1);
        gbc.writeMem(0x3e31, { 0xd9 });
        gbc.writeMem(0x7b21, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9598, gbc.sp());
        EXPECT(0x7b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00A8
        gbc.setState(0x88a4, 0x2984, 0xdd40, 0xde18, 0x4b74, 0x1fef, 0x0, 0x0);
        gbc.writeMem(0x1fef, { 0x6f });
        gbc.writeMem(0x88a4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2984, gbc.sp());
        EXPECT(0x88a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a4));
        EXPECT(0x76, gbc.readMem(0x88a5));
        // CB 76 00A9
        gbc.setState(0x72ec, 0x6aa, 0x2460, 0x8a01, 0xf34c, 0x3879, 0x0, 0x0);
        gbc.writeMem(0x3879, { 0x48 });
        gbc.writeMem(0x72ec, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6aa, gbc.sp());
        EXPECT(0x72ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00AA
        gbc.setState(0xaa55, 0x38a6, 0x35b0, 0xd730, 0x5074, 0x2fa7, 0x0, 0x1);
        gbc.writeMem(0x2fa7, { 0x63 });
        gbc.writeMem(0xaa55, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x38a6, gbc.sp());
        EXPECT(0xaa57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa55));
        EXPECT(0x76, gbc.readMem(0xaa56));
        // CB 76 00AB
        gbc.setState(0xfb5, 0x9d24, 0xbd50, 0x59ff, 0xe967, 0xff91, 0x0, 0x1);
        gbc.writeMem(0xfb5, { 0xcb, 0x76 });
        gbc.writeMem(0xff91, { 0xb8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9d24, gbc.sp());
        EXPECT(0xfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xff91));
        // CB 76 00AC
        gbc.setState(0x3606, 0x8033, 0x4840, 0xcce6, 0xe962, 0xde, 0x1, 0x1);
        gbc.writeMem(0xde, { 0xe0 });
        gbc.writeMem(0x3606, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8033, gbc.sp());
        EXPECT(0x3608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00AD
        gbc.setState(0xd318, 0x1303, 0x1a00, 0xab04, 0x5d3a, 0x4622, 0x1, 0x1);
        gbc.writeMem(0x4622, { 0x8e });
        gbc.writeMem(0xd318, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1303, gbc.sp());
        EXPECT(0xd31a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd318));
        EXPECT(0x76, gbc.readMem(0xd319));
        // CB 76 00AE
        gbc.setState(0x79df, 0x937c, 0x5220, 0xa027, 0xb3d2, 0xf71e, 0x0, 0x0);
        gbc.writeMem(0x79df, { 0xcb, 0x76 });
        gbc.writeMem(0xf71e, { 0x6b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x937c, gbc.sp());
        EXPECT(0x79e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xf71e));
        // CB 76 00AF
        gbc.setState(0x8d5c, 0xe370, 0x5c0, 0xfe01, 0x4c2a, 0xe5b9, 0x0, 0x0);
        gbc.writeMem(0x8d5c, { 0xcb, 0x76 });
        gbc.writeMem(0xe5b9, { 0xe0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe370, gbc.sp());
        EXPECT(0x8d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5c));
        EXPECT(0x76, gbc.readMem(0x8d5d));
        EXPECT(0xe0, gbc.readMem(0xe5b9));
        // CB 76 00B0
        gbc.setState(0x4e99, 0xb99c, 0xafb0, 0x75dc, 0x4551, 0x9188, 0x1, 0x0);
        gbc.writeMem(0x4e99, { 0xcb, 0x76 });
        gbc.writeMem(0x9188, { 0xc1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb99c, gbc.sp());
        EXPECT(0x4e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9188));
        // CB 76 00B2
        gbc.setState(0x788, 0x31e5, 0x4b10, 0xffed, 0x6020, 0x64d4, 0x0, 0x1);
        gbc.writeMem(0x788, { 0xcb, 0x76 });
        gbc.writeMem(0x64d4, { 0x2a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x31e5, gbc.sp());
        EXPECT(0x78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00B3
        gbc.setState(0xef04, 0x4c2, 0xf820, 0x5e3c, 0x676c, 0x6de6, 0x1, 0x1);
        gbc.writeMem(0x6de6, { 0xdd });
        gbc.writeMem(0xef04, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4c2, gbc.sp());
        EXPECT(0xef06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef04));
        EXPECT(0x76, gbc.readMem(0xef05));
        // CB 76 00B4
        gbc.setState(0x6e7c, 0xf067, 0xcae0, 0xdffc, 0x1ff9, 0x5faa, 0x0, 0x0);
        gbc.writeMem(0x5faa, { 0xec });
        gbc.writeMem(0x6e7c, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf067, gbc.sp());
        EXPECT(0x6e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00B5
        gbc.setState(0x5f24, 0xb9ba, 0x2fa0, 0xfaa4, 0xef74, 0x3e4f, 0x1, 0x1);
        gbc.writeMem(0x3e4f, { 0x6b });
        gbc.writeMem(0x5f24, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb9ba, gbc.sp());
        EXPECT(0x5f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00B6
        gbc.setState(0x14b3, 0x29bf, 0xa860, 0xea86, 0x6619, 0x3e72, 0x1, 0x1);
        gbc.writeMem(0x14b3, { 0xcb, 0x76 });
        gbc.writeMem(0x3e72, { 0x73 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x29bf, gbc.sp());
        EXPECT(0x14b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00B7
        gbc.setState(0x41cd, 0x6ac1, 0x22c0, 0xba0d, 0xb949, 0xae2, 0x0, 0x1);
        gbc.writeMem(0xae2, { 0x49 });
        gbc.writeMem(0x41cd, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6ac1, gbc.sp());
        EXPECT(0x41cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00B9
        gbc.setState(0x66eb, 0xa7c0, 0xd880, 0x1f02, 0x6d88, 0x6613, 0x1, 0x0);
        gbc.writeMem(0x6613, { 0x8 });
        gbc.writeMem(0x66eb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa7c0, gbc.sp());
        EXPECT(0x66ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00BA
        gbc.setState(0x3f78, 0xd654, 0xc9a0, 0xf3cf, 0x42a3, 0xf440, 0x1, 0x0);
        gbc.writeMem(0x3f78, { 0xcb, 0x76 });
        gbc.writeMem(0xf440, { 0xc2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd654, gbc.sp());
        EXPECT(0x3f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xf440));
        // CB 76 00BB
        gbc.setState(0x6b02, 0x2d91, 0x2120, 0x919a, 0x9948, 0x1085, 0x1, 0x1);
        gbc.writeMem(0x1085, { 0xed });
        gbc.writeMem(0x6b02, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2d91, gbc.sp());
        EXPECT(0x6b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00BC
        gbc.setState(0xd97e, 0x8aa2, 0x9600, 0x8010, 0xe105, 0xd130, 0x1, 0x1);
        gbc.writeMem(0xd130, { 0xc8 });
        gbc.writeMem(0xd97e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8aa2, gbc.sp());
        EXPECT(0xd980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd130));
        EXPECT(0xcb, gbc.readMem(0xd97e));
        EXPECT(0x76, gbc.readMem(0xd97f));
        // CB 76 00BD
        gbc.setState(0xc433, 0xac0a, 0xba00, 0xa277, 0xdcf6, 0x4c80, 0x1, 0x0);
        gbc.writeMem(0x4c80, { 0x46 });
        gbc.writeMem(0xc433, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xac0a, gbc.sp());
        EXPECT(0xc435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc433));
        EXPECT(0x76, gbc.readMem(0xc434));
        // CB 76 00BE
        gbc.setState(0x96d3, 0xe24e, 0xf710, 0x3719, 0xc858, 0xf35a, 0x1, 0x1);
        gbc.writeMem(0x96d3, { 0xcb, 0x76 });
        gbc.writeMem(0xf35a, { 0x28 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe24e, gbc.sp());
        EXPECT(0x96d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d3));
        EXPECT(0x76, gbc.readMem(0x96d4));
        EXPECT(0x28, gbc.readMem(0xf35a));
        // CB 76 00BF
        gbc.setState(0x7466, 0x6278, 0xdfb0, 0xb468, 0xdf17, 0x99d1, 0x0, 0x0);
        gbc.writeMem(0x7466, { 0xcb, 0x76 });
        gbc.writeMem(0x99d1, { 0x2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6278, gbc.sp());
        EXPECT(0x7468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x99d1));
        // CB 76 00C0
        gbc.setState(0x5ff8, 0xf01d, 0x53b0, 0x70fb, 0x809f, 0x6f31, 0x1, 0x0);
        gbc.writeMem(0x5ff8, { 0xcb, 0x76 });
        gbc.writeMem(0x6f31, { 0x44 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf01d, gbc.sp());
        EXPECT(0x5ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00C1
        gbc.setState(0x3ca, 0x8eb8, 0x4d60, 0x4e69, 0x35b3, 0x61be, 0x0, 0x0);
        gbc.writeMem(0x3ca, { 0xcb, 0x76 });
        gbc.writeMem(0x61be, { 0xa4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8eb8, gbc.sp());
        EXPECT(0x3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00C2
        gbc.setState(0x835e, 0x936a, 0x10b0, 0x8395, 0xeba2, 0x900b, 0x1, 0x0);
        gbc.writeMem(0x835e, { 0xcb, 0x76 });
        gbc.writeMem(0x900b, { 0xf4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x936a, gbc.sp());
        EXPECT(0x8360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835e));
        EXPECT(0x76, gbc.readMem(0x835f));
        EXPECT(0xf4, gbc.readMem(0x900b));
        // CB 76 00C3
        gbc.setState(0x25e8, 0x9a06, 0xc3d0, 0xbea6, 0x3bc8, 0x19bb, 0x1, 0x1);
        gbc.writeMem(0x19bb, { 0x94 });
        gbc.writeMem(0x25e8, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9a06, gbc.sp());
        EXPECT(0x25ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00C4
        gbc.setState(0x70c9, 0x9350, 0x1f40, 0xc89, 0xc244, 0x1384, 0x1, 0x1);
        gbc.writeMem(0x1384, { 0x65 });
        gbc.writeMem(0x70c9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9350, gbc.sp());
        EXPECT(0x70cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00C5
        gbc.setState(0x2f8c, 0x2035, 0x80d0, 0xc029, 0x6747, 0xf151, 0x0, 0x0);
        gbc.writeMem(0x2f8c, { 0xcb, 0x76 });
        gbc.writeMem(0xf151, { 0x9d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2035, gbc.sp());
        EXPECT(0x2f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xf151));
        // CB 76 00C6
        gbc.setState(0x728b, 0xf7dc, 0xf2e0, 0xbf19, 0x5fa7, 0x224a, 0x0, 0x1);
        gbc.writeMem(0x224a, { 0x4d });
        gbc.writeMem(0x728b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf7dc, gbc.sp());
        EXPECT(0x728d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00C7
        gbc.setState(0x6f2d, 0x35e2, 0x7330, 0x7072, 0x83cb, 0xf812, 0x1, 0x0);
        gbc.writeMem(0x6f2d, { 0xcb, 0x76 });
        gbc.writeMem(0xf812, { 0x32 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x35e2, gbc.sp());
        EXPECT(0x6f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xf812));
        // CB 76 00C8
        gbc.setState(0x4401, 0xe5fb, 0xf4f0, 0x606b, 0x8d3a, 0xccb4, 0x0, 0x0);
        gbc.writeMem(0x4401, { 0xcb, 0x76 });
        gbc.writeMem(0xccb4, { 0xc6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe5fb, gbc.sp());
        EXPECT(0x4403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xccb4));
        // CB 76 00C9
        gbc.setState(0x17d2, 0xf3a6, 0x3d10, 0xd19f, 0x20c4, 0x60fa, 0x0, 0x0);
        gbc.writeMem(0x17d2, { 0xcb, 0x76 });
        gbc.writeMem(0x60fa, { 0x6c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf3a6, gbc.sp());
        EXPECT(0x17d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00CA
        gbc.setState(0xf0e, 0xc0c7, 0x1070, 0xa4b7, 0xaf0b, 0x33d0, 0x1, 0x1);
        gbc.writeMem(0xf0e, { 0xcb, 0x76 });
        gbc.writeMem(0x33d0, { 0xcb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc0c7, gbc.sp());
        EXPECT(0xf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00CB
        gbc.setState(0x83ff, 0x97d9, 0x1c20, 0x8097, 0x2a6d, 0xa1f1, 0x1, 0x0);
        gbc.writeMem(0x83ff, { 0xcb, 0x76 });
        gbc.writeMem(0xa1f1, { 0x7d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x97d9, gbc.sp());
        EXPECT(0x8401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ff));
        EXPECT(0x76, gbc.readMem(0x8400));
        EXPECT(0x7d, gbc.readMem(0xa1f1));
        // CB 76 00CC
        gbc.setState(0x4611, 0xde84, 0x71f0, 0x4dcb, 0x354, 0x1405, 0x0, 0x1);
        gbc.writeMem(0x1405, { 0x7d });
        gbc.writeMem(0x4611, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xde84, gbc.sp());
        EXPECT(0x4613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00CD
        gbc.setState(0x6f6a, 0x6bc2, 0x2f60, 0xd8ec, 0xa912, 0xf7a8, 0x0, 0x1);
        gbc.writeMem(0x6f6a, { 0xcb, 0x76 });
        gbc.writeMem(0xf7a8, { 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6bc2, gbc.sp());
        EXPECT(0x6f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xf7a8));
        // CB 76 00CE
        gbc.setState(0xde63, 0xef81, 0x4ad0, 0x6c03, 0xa88a, 0x4461, 0x0, 0x1);
        gbc.writeMem(0x4461, { 0xdb });
        gbc.writeMem(0xde63, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xef81, gbc.sp());
        EXPECT(0xde65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde63));
        EXPECT(0x76, gbc.readMem(0xde64));
        // CB 76 00CF
        gbc.setState(0x3066, 0x6b1c, 0xb960, 0x98b7, 0xa192, 0x90f2, 0x0, 0x0);
        gbc.writeMem(0x3066, { 0xcb, 0x76 });
        gbc.writeMem(0x90f2, { 0x2d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6b1c, gbc.sp());
        EXPECT(0x3068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x90f2));
        // CB 76 00D0
        gbc.setState(0xdcf1, 0xea79, 0xc970, 0x5850, 0xbafa, 0x897c, 0x1, 0x0);
        gbc.writeMem(0x897c, { 0x56 });
        gbc.writeMem(0xdcf1, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xea79, gbc.sp());
        EXPECT(0xdcf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x897c));
        EXPECT(0xcb, gbc.readMem(0xdcf1));
        EXPECT(0x76, gbc.readMem(0xdcf2));
        // CB 76 00D1
        gbc.setState(0x571b, 0x7493, 0xcc20, 0x49b1, 0xad79, 0xabd, 0x1, 0x0);
        gbc.writeMem(0xabd, { 0xe5 });
        gbc.writeMem(0x571b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7493, gbc.sp());
        EXPECT(0x571d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00D2
        gbc.setState(0x8bf5, 0x88fb, 0x1150, 0xc592, 0xd9b1, 0xea5b, 0x1, 0x1);
        gbc.writeMem(0x8bf5, { 0xcb, 0x76 });
        gbc.writeMem(0xea5b, { 0xa9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x88fb, gbc.sp());
        EXPECT(0x8bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf5));
        EXPECT(0x76, gbc.readMem(0x8bf6));
        EXPECT(0xa9, gbc.readMem(0xea5b));
        // CB 76 00D3
        gbc.setState(0x5678, 0xc056, 0x2780, 0x3fcf, 0x6ac7, 0xd194, 0x0, 0x0);
        gbc.writeMem(0x5678, { 0xcb, 0x76 });
        gbc.writeMem(0xd194, { 0x50 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc056, gbc.sp());
        EXPECT(0x567a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd194));
        // CB 76 00D4
        gbc.setState(0xa346, 0xd559, 0xaa70, 0x96b2, 0x5ce5, 0xec89, 0x0, 0x0);
        gbc.writeMem(0xa346, { 0xcb, 0x76 });
        gbc.writeMem(0xec89, { 0x61 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd559, gbc.sp());
        EXPECT(0xa348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa346));
        EXPECT(0x76, gbc.readMem(0xa347));
        EXPECT(0x61, gbc.readMem(0xec89));
        // CB 76 00D5
        gbc.setState(0xd5d2, 0x431b, 0x5a70, 0xcfa2, 0x249b, 0xb5e, 0x0, 0x0);
        gbc.writeMem(0xb5e, { 0x71 });
        gbc.writeMem(0xd5d2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x431b, gbc.sp());
        EXPECT(0xd5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d2));
        EXPECT(0x76, gbc.readMem(0xd5d3));
        // CB 76 00D6
        gbc.setState(0x4f0f, 0xedfc, 0xd490, 0x27ba, 0x47b3, 0xf273, 0x0, 0x0);
        gbc.writeMem(0x4f0f, { 0xcb, 0x76 });
        gbc.writeMem(0xf273, { 0xfa });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xedfc, gbc.sp());
        EXPECT(0x4f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xf273));
        // CB 76 00D7
        gbc.setState(0xe8ef, 0x91f8, 0x800, 0x72bd, 0xe62a, 0xca65, 0x0, 0x0);
        gbc.writeMem(0xca65, { 0xc });
        gbc.writeMem(0xe8ef, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x91f8, gbc.sp());
        EXPECT(0xe8f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xca65));
        EXPECT(0xcb, gbc.readMem(0xe8ef));
        EXPECT(0x76, gbc.readMem(0xe8f0));
        // CB 76 00D8
        gbc.setState(0xcde2, 0x638c, 0xe680, 0x924, 0x13f7, 0xb5ee, 0x0, 0x1);
        gbc.writeMem(0xb5ee, { 0xe8 });
        gbc.writeMem(0xcde2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x638c, gbc.sp());
        EXPECT(0xcde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xb5ee));
        EXPECT(0xcb, gbc.readMem(0xcde2));
        EXPECT(0x76, gbc.readMem(0xcde3));
        // CB 76 00DA
        gbc.setState(0x6f46, 0xae45, 0x41a0, 0x3504, 0x8957, 0x4c97, 0x0, 0x0);
        gbc.writeMem(0x4c97, { 0x59 });
        gbc.writeMem(0x6f46, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xae45, gbc.sp());
        EXPECT(0x6f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00DB
        gbc.setState(0xabb2, 0xed39, 0xdd30, 0x7820, 0x9646, 0x9255, 0x0, 0x0);
        gbc.writeMem(0x9255, { 0x45 });
        gbc.writeMem(0xabb2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xed39, gbc.sp());
        EXPECT(0xabb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9255));
        EXPECT(0xcb, gbc.readMem(0xabb2));
        EXPECT(0x76, gbc.readMem(0xabb3));
        // CB 76 00DC
        gbc.setState(0x7bc5, 0xecf5, 0x1510, 0x3f8e, 0x3305, 0x5b36, 0x1, 0x0);
        gbc.writeMem(0x5b36, { 0x29 });
        gbc.writeMem(0x7bc5, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xecf5, gbc.sp());
        EXPECT(0x7bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00DD
        gbc.setState(0xa9d0, 0x3e0a, 0xd4a0, 0x9908, 0x4a2e, 0x6124, 0x1, 0x1);
        gbc.writeMem(0x6124, { 0x97 });
        gbc.writeMem(0xa9d0, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3e0a, gbc.sp());
        EXPECT(0xa9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d0));
        EXPECT(0x76, gbc.readMem(0xa9d1));
        // CB 76 00DE
        gbc.setState(0x3355, 0xd9c0, 0x8e0, 0x2a16, 0x28ca, 0x338f, 0x0, 0x1);
        gbc.writeMem(0x3355, { 0xcb, 0x76 });
        gbc.writeMem(0x338f, { 0xa9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd9c0, gbc.sp());
        EXPECT(0x3357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00DF
        gbc.setState(0x9cd7, 0xa00d, 0x87d0, 0xb37b, 0x640c, 0x7404, 0x1, 0x1);
        gbc.writeMem(0x7404, { 0x21 });
        gbc.writeMem(0x9cd7, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa00d, gbc.sp());
        EXPECT(0x9cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd7));
        EXPECT(0x76, gbc.readMem(0x9cd8));
        // CB 76 00E1
        gbc.setState(0x6977, 0x2830, 0xc3b0, 0x957d, 0x2fd3, 0x57d6, 0x1, 0x1);
        gbc.writeMem(0x57d6, { 0xb7 });
        gbc.writeMem(0x6977, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2830, gbc.sp());
        EXPECT(0x6979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00E2
        gbc.setState(0x37b5, 0x57c1, 0xeba0, 0x23d, 0x1c5, 0x98b1, 0x1, 0x1);
        gbc.writeMem(0x37b5, { 0xcb, 0x76 });
        gbc.writeMem(0x98b1, { 0x83 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x57c1, gbc.sp());
        EXPECT(0x37b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x98b1));
        // CB 76 00E3
        gbc.setState(0x2073, 0x8bf5, 0x3a10, 0x8f9a, 0x5fe8, 0x7f3e, 0x0, 0x0);
        gbc.writeMem(0x2073, { 0xcb, 0x76 });
        gbc.writeMem(0x7f3e, { 0xdc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8bf5, gbc.sp());
        EXPECT(0x2075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00E5
        gbc.setState(0xe6ba, 0xf7ad, 0x23b0, 0x5ed6, 0xbc8e, 0xbdcc, 0x0, 0x0);
        gbc.writeMem(0xbdcc, { 0xe7 });
        gbc.writeMem(0xe6ba, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf7ad, gbc.sp());
        EXPECT(0xe6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xbdcc));
        EXPECT(0xcb, gbc.readMem(0xe6ba));
        EXPECT(0x76, gbc.readMem(0xe6bb));
        // CB 76 00E6
        gbc.setState(0xb85f, 0x10ea, 0x550, 0x1631, 0xe14c, 0x3685, 0x0, 0x0);
        gbc.writeMem(0x3685, { 0x87 });
        gbc.writeMem(0xb85f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x10ea, gbc.sp());
        EXPECT(0xb861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85f));
        EXPECT(0x76, gbc.readMem(0xb860));
        // CB 76 00E7
        gbc.setState(0xa11f, 0x83f9, 0xbaa0, 0xc4c2, 0x6393, 0x15a, 0x0, 0x0);
        gbc.writeMem(0x15a, { 0xf4 });
        gbc.writeMem(0xa11f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x83f9, gbc.sp());
        EXPECT(0xa121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa11f));
        EXPECT(0x76, gbc.readMem(0xa120));
        // CB 76 00E8
        gbc.setState(0x119c, 0xc5b9, 0xe870, 0x3930, 0x9fbc, 0x1908, 0x1, 0x0);
        gbc.writeMem(0x119c, { 0xcb, 0x76 });
        gbc.writeMem(0x1908, { 0x8c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc5b9, gbc.sp());
        EXPECT(0x119e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00E9
        gbc.setState(0x7f33, 0xed26, 0x19b0, 0x6522, 0x4f96, 0xea3e, 0x0, 0x0);
        gbc.writeMem(0x7f33, { 0xcb, 0x76 });
        gbc.writeMem(0xea3e, { 0x5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xed26, gbc.sp());
        EXPECT(0x7f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xea3e));
        // CB 76 00EA
        gbc.setState(0xdd03, 0x5ae, 0x9f40, 0xb5f5, 0x38d4, 0x2a31, 0x0, 0x1);
        gbc.writeMem(0x2a31, { 0x27 });
        gbc.writeMem(0xdd03, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5ae, gbc.sp());
        EXPECT(0xdd05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd03));
        EXPECT(0x76, gbc.readMem(0xdd04));
        // CB 76 00EB
        gbc.setState(0xce6, 0x55b0, 0xb740, 0xc547, 0x6043, 0x1f99, 0x0, 0x1);
        gbc.writeMem(0xce6, { 0xcb, 0x76 });
        gbc.writeMem(0x1f99, { 0x8f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x55b0, gbc.sp());
        EXPECT(0xce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00EC
        gbc.setState(0x48a1, 0x91c7, 0xf5a0, 0x1d8d, 0x9186, 0xb3ba, 0x0, 0x0);
        gbc.writeMem(0x48a1, { 0xcb, 0x76 });
        gbc.writeMem(0xb3ba, { 0xef });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x91c7, gbc.sp());
        EXPECT(0x48a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xb3ba));
        // CB 76 00ED
        gbc.setState(0x9db8, 0xf811, 0x74b0, 0xedb5, 0x9d7c, 0x4188, 0x1, 0x0);
        gbc.writeMem(0x4188, { 0xec });
        gbc.writeMem(0x9db8, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf811, gbc.sp());
        EXPECT(0x9dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db8));
        EXPECT(0x76, gbc.readMem(0x9db9));
        // CB 76 00EE
        gbc.setState(0x2fad, 0xb22a, 0xdf90, 0xae9c, 0xacef, 0x5271, 0x0, 0x0);
        gbc.writeMem(0x2fad, { 0xcb, 0x76 });
        gbc.writeMem(0x5271, { 0x92 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb22a, gbc.sp());
        EXPECT(0x2faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00EF
        gbc.setState(0x8e5d, 0xdfc4, 0x2080, 0x222b, 0x6bed, 0xac08, 0x0, 0x1);
        gbc.writeMem(0x8e5d, { 0xcb, 0x76 });
        gbc.writeMem(0xac08, { 0xc1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdfc4, gbc.sp());
        EXPECT(0x8e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5d));
        EXPECT(0x76, gbc.readMem(0x8e5e));
        EXPECT(0xc1, gbc.readMem(0xac08));
        // CB 76 00F0
        gbc.setState(0x3944, 0x6dad, 0x5ae0, 0xdd2e, 0x58ab, 0x9506, 0x0, 0x0);
        gbc.writeMem(0x3944, { 0xcb, 0x76 });
        gbc.writeMem(0x9506, { 0xaf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6dad, gbc.sp());
        EXPECT(0x3946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x9506));
        // CB 76 00F1
        gbc.setState(0x55ee, 0xfe66, 0x5a80, 0x94fc, 0x2dd1, 0xcc05, 0x0, 0x1);
        gbc.writeMem(0x55ee, { 0xcb, 0x76 });
        gbc.writeMem(0xcc05, { 0x62 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfe66, gbc.sp());
        EXPECT(0x55f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xcc05));
        // CB 76 00F2
        gbc.setState(0x5911, 0xfa10, 0xcde0, 0x1310, 0x82d5, 0xf168, 0x1, 0x0);
        gbc.writeMem(0x5911, { 0xcb, 0x76 });
        gbc.writeMem(0xf168, { 0xee });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfa10, gbc.sp());
        EXPECT(0x5913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xf168));
        // CB 76 00F3
        gbc.setState(0xb24, 0x661d, 0x5830, 0x3c35, 0xceb2, 0x7cff, 0x0, 0x0);
        gbc.writeMem(0xb24, { 0xcb, 0x76 });
        gbc.writeMem(0x7cff, { 0x65 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x661d, gbc.sp());
        EXPECT(0xb26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00F4
        gbc.setState(0xb9ec, 0x7c58, 0x6730, 0x3bfa, 0x6e2e, 0x74b6, 0x0, 0x1);
        gbc.writeMem(0x74b6, { 0xa2 });
        gbc.writeMem(0xb9ec, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7c58, gbc.sp());
        EXPECT(0xb9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ec));
        EXPECT(0x76, gbc.readMem(0xb9ed));
        // CB 76 00F5
        gbc.setState(0x64ea, 0xa098, 0x850, 0xfee0, 0xb074, 0xd81e, 0x0, 0x0);
        gbc.writeMem(0x64ea, { 0xcb, 0x76 });
        gbc.writeMem(0xd81e, { 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa098, gbc.sp());
        EXPECT(0x64ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd81e));
        // CB 76 00F6
        gbc.setState(0xefea, 0x2085, 0xaf0, 0xc209, 0x4d79, 0x198b, 0x1, 0x0);
        gbc.writeMem(0x198b, { 0x7d });
        gbc.writeMem(0xefea, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2085, gbc.sp());
        EXPECT(0xefec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefea));
        EXPECT(0x76, gbc.readMem(0xefeb));
        // CB 76 00F7
        gbc.setState(0xbd5e, 0x367b, 0xfdc0, 0x17d, 0x9830, 0xa2a3, 0x0, 0x1);
        gbc.writeMem(0xa2a3, { 0x87 });
        gbc.writeMem(0xbd5e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x367b, gbc.sp());
        EXPECT(0xbd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa2a3));
        EXPECT(0xcb, gbc.readMem(0xbd5e));
        EXPECT(0x76, gbc.readMem(0xbd5f));
        // CB 76 00F8
        gbc.setState(0x9e24, 0x68a1, 0x7fd0, 0x6201, 0x21d9, 0x36c1, 0x0, 0x0);
        gbc.writeMem(0x36c1, { 0x5c });
        gbc.writeMem(0x9e24, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x68a1, gbc.sp());
        EXPECT(0x9e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e24));
        EXPECT(0x76, gbc.readMem(0x9e25));
        // CB 76 00F9
        gbc.setState(0x5a67, 0x1b6d, 0xafc0, 0x6c07, 0x96f, 0x4016, 0x1, 0x1);
        gbc.writeMem(0x4016, { 0xa2 });
        gbc.writeMem(0x5a67, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1b6d, gbc.sp());
        EXPECT(0x5a69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 00FA
        gbc.setState(0xedcb, 0x18fa, 0x610, 0xa5e5, 0xe102, 0x49c3, 0x0, 0x0);
        gbc.writeMem(0x49c3, { 0xd2 });
        gbc.writeMem(0xedcb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x18fa, gbc.sp());
        EXPECT(0xedcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedcb));
        EXPECT(0x76, gbc.readMem(0xedcc));
        // CB 76 00FB
        gbc.setState(0xdeda, 0x540f, 0x9040, 0xb94b, 0xc3be, 0x1f09, 0x1, 0x1);
        gbc.writeMem(0x1f09, { 0xb2 });
        gbc.writeMem(0xdeda, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x540f, gbc.sp());
        EXPECT(0xdedc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeda));
        EXPECT(0x76, gbc.readMem(0xdedb));
        // CB 76 00FC
        gbc.setState(0xe125, 0x35eb, 0xa2c0, 0xb449, 0xabba, 0x2b4e, 0x0, 0x0);
        gbc.writeMem(0x2b4e, { 0xa8 });
        gbc.writeMem(0xe125, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x35eb, gbc.sp());
        EXPECT(0xe127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe125));
        EXPECT(0x76, gbc.readMem(0xe126));
        // CB 76 00FD
        gbc.setState(0x4524, 0x60e4, 0xe8e0, 0xf6b2, 0xa16e, 0xe820, 0x0, 0x1);
        gbc.writeMem(0x4524, { 0xcb, 0x76 });
        gbc.writeMem(0xe820, { 0x7b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x60e4, gbc.sp());
        EXPECT(0x4526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe820));
        // CB 76 00FE
        gbc.setState(0x217f, 0x94c6, 0xc970, 0x25b2, 0x3ba3, 0x547d, 0x0, 0x0);
        gbc.writeMem(0x217f, { 0xcb, 0x76 });
        gbc.writeMem(0x547d, { 0xc6 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x94c6, gbc.sp());
        EXPECT(0x2181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 00FF
        gbc.setState(0x3735, 0x5500, 0x5db0, 0x7a0f, 0x4b30, 0x6526, 0x0, 0x0);
        gbc.writeMem(0x3735, { 0xcb, 0x76 });
        gbc.writeMem(0x6526, { 0xda });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5500, gbc.sp());
        EXPECT(0x3737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0101
        gbc.setState(0x631a, 0x2701, 0xe0d0, 0x2e9c, 0x178, 0x189d, 0x1, 0x1);
        gbc.writeMem(0x189d, { 0x2e });
        gbc.writeMem(0x631a, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2701, gbc.sp());
        EXPECT(0x631c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0102
        gbc.setState(0x3e0d, 0x8135, 0x20, 0xca6d, 0x47f, 0xf1fd, 0x0, 0x0);
        gbc.writeMem(0x3e0d, { 0xcb, 0x76 });
        gbc.writeMem(0xf1fd, { 0x2f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8135, gbc.sp());
        EXPECT(0x3e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xf1fd));
        // CB 76 0103
        gbc.setState(0x4621, 0x6ce2, 0x6d40, 0xb05d, 0x2af6, 0x6e56, 0x0, 0x1);
        gbc.writeMem(0x4621, { 0xcb, 0x76 });
        gbc.writeMem(0x6e56, { 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6ce2, gbc.sp());
        EXPECT(0x4623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0104
        gbc.setState(0x464a, 0x7bf0, 0x250, 0x1188, 0x24eb, 0x77cf, 0x0, 0x0);
        gbc.writeMem(0x464a, { 0xcb, 0x76 });
        gbc.writeMem(0x77cf, { 0x71 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7bf0, gbc.sp());
        EXPECT(0x464c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0105
        gbc.setState(0xb79f, 0x8c71, 0x9980, 0xd17a, 0xd2da, 0x9495, 0x0, 0x1);
        gbc.writeMem(0x9495, { 0x4f });
        gbc.writeMem(0xb79f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8c71, gbc.sp());
        EXPECT(0xb7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x9495));
        EXPECT(0xcb, gbc.readMem(0xb79f));
        EXPECT(0x76, gbc.readMem(0xb7a0));
        // CB 76 0107
        gbc.setState(0x95ed, 0x1a94, 0x6cb0, 0xf13d, 0xa2b9, 0x6cca, 0x1, 0x0);
        gbc.writeMem(0x6cca, { 0x52 });
        gbc.writeMem(0x95ed, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1a94, gbc.sp());
        EXPECT(0x95ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ed));
        EXPECT(0x76, gbc.readMem(0x95ee));
        // CB 76 0108
        gbc.setState(0x3431, 0xd566, 0x2fa0, 0x56fd, 0x1525, 0xb6f2, 0x1, 0x0);
        gbc.writeMem(0x3431, { 0xcb, 0x76 });
        gbc.writeMem(0xb6f2, { 0xae });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd566, gbc.sp());
        EXPECT(0x3433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xb6f2));
        // CB 76 0109
        gbc.setState(0x12b6, 0xf186, 0x74b0, 0x530a, 0x272c, 0x994a, 0x1, 0x0);
        gbc.writeMem(0x12b6, { 0xcb, 0x76 });
        gbc.writeMem(0x994a, { 0x77 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf186, gbc.sp());
        EXPECT(0x12b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x994a));
        // CB 76 010A
        gbc.setState(0x6d47, 0x25c0, 0xc2e0, 0x223, 0x4fd, 0x43fb, 0x0, 0x0);
        gbc.writeMem(0x43fb, { 0xbe });
        gbc.writeMem(0x6d47, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x25c0, gbc.sp());
        EXPECT(0x6d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 010C
        gbc.setState(0x5819, 0x32de, 0xf740, 0xfc9c, 0xf0fa, 0xc4ce, 0x1, 0x0);
        gbc.writeMem(0x5819, { 0xcb, 0x76 });
        gbc.writeMem(0xc4ce, { 0xed });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x32de, gbc.sp());
        EXPECT(0x581b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xc4ce));
        // CB 76 010D
        gbc.setState(0x8972, 0xd3cf, 0x3fd0, 0x9e4d, 0x9e36, 0x59a1, 0x0, 0x1);
        gbc.writeMem(0x59a1, { 0x9 });
        gbc.writeMem(0x8972, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd3cf, gbc.sp());
        EXPECT(0x8974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8972));
        EXPECT(0x76, gbc.readMem(0x8973));
        // CB 76 010E
        gbc.setState(0x354c, 0x2d54, 0xb720, 0x6d44, 0x581f, 0xcc08, 0x0, 0x1);
        gbc.writeMem(0x354c, { 0xcb, 0x76 });
        gbc.writeMem(0xcc08, { 0x45 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2d54, gbc.sp());
        EXPECT(0x354e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xcc08));
        // CB 76 010F
        gbc.setState(0x48f3, 0x3a06, 0x7400, 0x76e2, 0x94c8, 0xfe57, 0x1, 0x0);
        gbc.writeMem(0x48f3, { 0xcb, 0x76 });
        gbc.writeMem(0xfe57, { 0x2a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3a06, gbc.sp());
        EXPECT(0x48f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xfe57));
        // CB 76 0111
        gbc.setState(0x6f20, 0x36be, 0x10c0, 0x1159, 0xc700, 0x61b9, 0x0, 0x1);
        gbc.writeMem(0x61b9, { 0x66 });
        gbc.writeMem(0x6f20, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x36be, gbc.sp());
        EXPECT(0x6f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0112
        gbc.setState(0x460, 0x3f94, 0x7070, 0xd789, 0xa2f2, 0xd19, 0x0, 0x0);
        gbc.writeMem(0x460, { 0xcb, 0x76 });
        gbc.writeMem(0xd19, { 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3f94, gbc.sp());
        EXPECT(0x462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0114
        gbc.setState(0xe233, 0x5c5e, 0x78b0, 0x1c7, 0x23dd, 0x12c4, 0x1, 0x0);
        gbc.writeMem(0x12c4, { 0xb1 });
        gbc.writeMem(0xe233, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5c5e, gbc.sp());
        EXPECT(0xe235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe233));
        EXPECT(0x76, gbc.readMem(0xe234));
        // CB 76 0115
        gbc.setState(0xb355, 0xd1e2, 0xca80, 0x85a4, 0x79da, 0x3895, 0x1, 0x0);
        gbc.writeMem(0x3895, { 0x5b });
        gbc.writeMem(0xb355, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd1e2, gbc.sp());
        EXPECT(0xb357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb355));
        EXPECT(0x76, gbc.readMem(0xb356));
        // CB 76 0117
        gbc.setState(0xc759, 0x806c, 0x540, 0x54a1, 0x1ef9, 0x7118, 0x0, 0x0);
        gbc.writeMem(0x7118, { 0x73 });
        gbc.writeMem(0xc759, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x806c, gbc.sp());
        EXPECT(0xc75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc759));
        EXPECT(0x76, gbc.readMem(0xc75a));
        // CB 76 0118
        gbc.setState(0xcb18, 0x4ce2, 0xdc60, 0xe717, 0x5fa1, 0xd154, 0x0, 0x0);
        gbc.writeMem(0xcb18, { 0xcb, 0x76 });
        gbc.writeMem(0xd154, { 0x18 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4ce2, gbc.sp());
        EXPECT(0xcb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb18));
        EXPECT(0x76, gbc.readMem(0xcb19));
        EXPECT(0x18, gbc.readMem(0xd154));
        // CB 76 0119
        gbc.setState(0x7114, 0x9ea6, 0xced0, 0x339d, 0x509f, 0x83f1, 0x1, 0x0);
        gbc.writeMem(0x7114, { 0xcb, 0x76 });
        gbc.writeMem(0x83f1, { 0x5b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9ea6, gbc.sp());
        EXPECT(0x7116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x83f1));
        // CB 76 011B
        gbc.setState(0x49ae, 0x3116, 0xfd90, 0xcfb0, 0x4be2, 0xa824, 0x1, 0x0);
        gbc.writeMem(0x49ae, { 0xcb, 0x76 });
        gbc.writeMem(0xa824, { 0x16 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3116, gbc.sp());
        EXPECT(0x49b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa824));
        // CB 76 011C
        gbc.setState(0x4f9e, 0x5fba, 0xb750, 0xb9a5, 0x9338, 0xd829, 0x0, 0x1);
        gbc.writeMem(0x4f9e, { 0xcb, 0x76 });
        gbc.writeMem(0xd829, { 0x57 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5fba, gbc.sp());
        EXPECT(0x4fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd829));
        // CB 76 011D
        gbc.setState(0x61b2, 0xeee6, 0xa780, 0xdbc4, 0x5723, 0x86f4, 0x0, 0x1);
        gbc.writeMem(0x61b2, { 0xcb, 0x76 });
        gbc.writeMem(0x86f4, { 0x34 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0x61b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x86f4));
        // CB 76 011E
        gbc.setState(0x4586, 0xe601, 0xe640, 0xa7cd, 0x297a, 0x5b0c, 0x1, 0x1);
        gbc.writeMem(0x4586, { 0xcb, 0x76 });
        gbc.writeMem(0x5b0c, { 0x8f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe601, gbc.sp());
        EXPECT(0x4588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0120
        gbc.setState(0xb768, 0xaa95, 0x460, 0x9522, 0xf8d3, 0x982a, 0x1, 0x0);
        gbc.writeMem(0x982a, { 0x20 });
        gbc.writeMem(0xb768, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xaa95, gbc.sp());
        EXPECT(0xb76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x982a));
        EXPECT(0xcb, gbc.readMem(0xb768));
        EXPECT(0x76, gbc.readMem(0xb769));
        // CB 76 0121
        gbc.setState(0xb9d5, 0xee30, 0x3d50, 0x151f, 0xf772, 0x6fef, 0x0, 0x0);
        gbc.writeMem(0x6fef, { 0xfe });
        gbc.writeMem(0xb9d5, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xee30, gbc.sp());
        EXPECT(0xb9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d5));
        EXPECT(0x76, gbc.readMem(0xb9d6));
        // CB 76 0122
        gbc.setState(0x4f4e, 0x688, 0x2370, 0x2772, 0xec51, 0x5200, 0x1, 0x1);
        gbc.writeMem(0x4f4e, { 0xcb, 0x76 });
        gbc.writeMem(0x5200, { 0xe2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x688, gbc.sp());
        EXPECT(0x4f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0123
        gbc.setState(0x4492, 0x5480, 0x1e70, 0x4105, 0x1521, 0xf9cb, 0x0, 0x0);
        gbc.writeMem(0x4492, { 0xcb, 0x76 });
        gbc.writeMem(0xf9cb, { 0xd5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5480, gbc.sp());
        EXPECT(0x4494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xf9cb));
        // CB 76 0124
        gbc.setState(0xa377, 0xd11e, 0xb100, 0xf7ec, 0x955d, 0x7310, 0x0, 0x1);
        gbc.writeMem(0x7310, { 0x29 });
        gbc.writeMem(0xa377, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd11e, gbc.sp());
        EXPECT(0xa379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa377));
        EXPECT(0x76, gbc.readMem(0xa378));
        // CB 76 0125
        gbc.setState(0x6c97, 0xaa77, 0x4810, 0xde6f, 0x3c25, 0x3d0e, 0x1, 0x1);
        gbc.writeMem(0x3d0e, { 0x89 });
        gbc.writeMem(0x6c97, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaa77, gbc.sp());
        EXPECT(0x6c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0126
        gbc.setState(0x424, 0x7972, 0xb6a0, 0x4cf7, 0x66db, 0xf94c, 0x1, 0x1);
        gbc.writeMem(0x424, { 0xcb, 0x76 });
        gbc.writeMem(0xf94c, { 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7972, gbc.sp());
        EXPECT(0x426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xf94c));
        // CB 76 0127
        gbc.setState(0xcf38, 0xcbe7, 0x7df0, 0x407d, 0xb94c, 0xa5e5, 0x1, 0x0);
        gbc.writeMem(0xa5e5, { 0xd5 });
        gbc.writeMem(0xcf38, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcbe7, gbc.sp());
        EXPECT(0xcf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa5e5));
        EXPECT(0xcb, gbc.readMem(0xcf38));
        EXPECT(0x76, gbc.readMem(0xcf39));
        // CB 76 0128
        gbc.setState(0x153c, 0x71d1, 0x18b0, 0xd304, 0x1377, 0x86ac, 0x0, 0x1);
        gbc.writeMem(0x153c, { 0xcb, 0x76 });
        gbc.writeMem(0x86ac, { 0x1f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x71d1, gbc.sp());
        EXPECT(0x153e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x86ac));
        // CB 76 0129
        gbc.setState(0x793c, 0x2564, 0x5d70, 0x85d4, 0xd94, 0x1e2c, 0x0, 0x1);
        gbc.writeMem(0x1e2c, { 0x33 });
        gbc.writeMem(0x793c, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2564, gbc.sp());
        EXPECT(0x793e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 012A
        gbc.setState(0xa29a, 0x25e4, 0xa030, 0x7383, 0xbf0b, 0xb966, 0x0, 0x1);
        gbc.writeMem(0xa29a, { 0xcb, 0x76 });
        gbc.writeMem(0xb966, { 0x12 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x25e4, gbc.sp());
        EXPECT(0xa29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29a));
        EXPECT(0x76, gbc.readMem(0xa29b));
        EXPECT(0x12, gbc.readMem(0xb966));
        // CB 76 012B
        gbc.setState(0x7c2, 0x26a4, 0x7750, 0x7fa5, 0x8192, 0x7bcf, 0x0, 0x0);
        gbc.writeMem(0x7c2, { 0xcb, 0x76 });
        gbc.writeMem(0x7bcf, { 0xc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x26a4, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 012C
        gbc.setState(0x528f, 0xc0a9, 0x5050, 0x7993, 0x4703, 0x96ba, 0x1, 0x1);
        gbc.writeMem(0x528f, { 0xcb, 0x76 });
        gbc.writeMem(0x96ba, { 0x8c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc0a9, gbc.sp());
        EXPECT(0x5291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x96ba));
        // CB 76 012D
        gbc.setState(0x900d, 0x854, 0x1df0, 0xfef3, 0xf1db, 0x874, 0x0, 0x1);
        gbc.writeMem(0x874, { 0x65 });
        gbc.writeMem(0x900d, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x854, gbc.sp());
        EXPECT(0x900f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900d));
        EXPECT(0x76, gbc.readMem(0x900e));
        // CB 76 012E
        gbc.setState(0x2b51, 0xb205, 0xe5f0, 0x1d01, 0x12ed, 0xb1fc, 0x0, 0x0);
        gbc.writeMem(0x2b51, { 0xcb, 0x76 });
        gbc.writeMem(0xb1fc, { 0xb8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb205, gbc.sp());
        EXPECT(0x2b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xb1fc));
        // CB 76 012F
        gbc.setState(0x8225, 0x4ddc, 0x6d00, 0x47a4, 0x18d7, 0x20e4, 0x0, 0x0);
        gbc.writeMem(0x20e4, { 0xcc });
        gbc.writeMem(0x8225, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4ddc, gbc.sp());
        EXPECT(0x8227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8225));
        EXPECT(0x76, gbc.readMem(0x8226));
        // CB 76 0130
        gbc.setState(0x68bb, 0x2f8b, 0x9720, 0xc8a1, 0x9efc, 0x1686, 0x1, 0x0);
        gbc.writeMem(0x1686, { 0x79 });
        gbc.writeMem(0x68bb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2f8b, gbc.sp());
        EXPECT(0x68bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0131
        gbc.setState(0x21ba, 0x7241, 0xec0, 0x436f, 0xe9b6, 0xe729, 0x0, 0x0);
        gbc.writeMem(0x21ba, { 0xcb, 0x76 });
        gbc.writeMem(0xe729, { 0x9d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7241, gbc.sp());
        EXPECT(0x21bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe729));
        // CB 76 0132
        gbc.setState(0xc9ff, 0x21a2, 0xdfb0, 0xc5ab, 0x2387, 0xd851, 0x1, 0x0);
        gbc.writeMem(0xc9ff, { 0xcb, 0x76 });
        gbc.writeMem(0xd851, { 0xe0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x21a2, gbc.sp());
        EXPECT(0xca01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ff));
        EXPECT(0x76, gbc.readMem(0xca00));
        EXPECT(0xe0, gbc.readMem(0xd851));
        // CB 76 0133
        gbc.setState(0xacce, 0x6f0, 0xeb70, 0xbcc0, 0x269f, 0x529f, 0x0, 0x1);
        gbc.writeMem(0x529f, { 0x81 });
        gbc.writeMem(0xacce, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6f0, gbc.sp());
        EXPECT(0xacd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacce));
        EXPECT(0x76, gbc.readMem(0xaccf));
        // CB 76 0134
        gbc.setState(0x84fb, 0x2144, 0x4ec0, 0x8621, 0xbae3, 0x297f, 0x1, 0x0);
        gbc.writeMem(0x297f, { 0x72 });
        gbc.writeMem(0x84fb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2144, gbc.sp());
        EXPECT(0x84fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84fb));
        EXPECT(0x76, gbc.readMem(0x84fc));
        // CB 76 0136
        gbc.setState(0x84bc, 0x5085, 0x8770, 0xb77, 0x1325, 0x7899, 0x1, 0x1);
        gbc.writeMem(0x7899, { 0x38 });
        gbc.writeMem(0x84bc, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5085, gbc.sp());
        EXPECT(0x84be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bc));
        EXPECT(0x76, gbc.readMem(0x84bd));
        // CB 76 0137
        gbc.setState(0xe6b2, 0xc401, 0x350, 0x4d60, 0x4d66, 0x229b, 0x0, 0x0);
        gbc.writeMem(0x229b, { 0x19 });
        gbc.writeMem(0xe6b2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc401, gbc.sp());
        EXPECT(0xe6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b2));
        EXPECT(0x76, gbc.readMem(0xe6b3));
        // CB 76 0138
        gbc.setState(0x49e4, 0xcab2, 0x9250, 0x1bdc, 0x7d42, 0xd50f, 0x1, 0x0);
        gbc.writeMem(0x49e4, { 0xcb, 0x76 });
        gbc.writeMem(0xd50f, { 0x28 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcab2, gbc.sp());
        EXPECT(0x49e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xd50f));
        // CB 76 0139
        gbc.setState(0xbacd, 0x2033, 0xdd40, 0x9267, 0x3b93, 0xea76, 0x0, 0x0);
        gbc.writeMem(0xbacd, { 0xcb, 0x76 });
        gbc.writeMem(0xea76, { 0x19 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2033, gbc.sp());
        EXPECT(0xbacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbacd));
        EXPECT(0x76, gbc.readMem(0xbace));
        EXPECT(0x19, gbc.readMem(0xea76));
        // CB 76 013A
        gbc.setState(0x2adb, 0x882d, 0x2730, 0x3432, 0x93da, 0x1048, 0x0, 0x0);
        gbc.writeMem(0x1048, { 0xab });
        gbc.writeMem(0x2adb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x882d, gbc.sp());
        EXPECT(0x2add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 013B
        gbc.setState(0x2ef3, 0x59bd, 0x7ac0, 0xfd44, 0xcd12, 0x9c11, 0x1, 0x1);
        gbc.writeMem(0x2ef3, { 0xcb, 0x76 });
        gbc.writeMem(0x9c11, { 0x43 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x59bd, gbc.sp());
        EXPECT(0x2ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9c11));
        // CB 76 013C
        gbc.setState(0xe364, 0x8c28, 0xfc00, 0x181f, 0xaf86, 0xb667, 0x1, 0x0);
        gbc.writeMem(0xb667, { 0xb });
        gbc.writeMem(0xe364, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8c28, gbc.sp());
        EXPECT(0xe366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb667));
        EXPECT(0xcb, gbc.readMem(0xe364));
        EXPECT(0x76, gbc.readMem(0xe365));
        // CB 76 013D
        gbc.setState(0x8c5e, 0x67a6, 0x6090, 0x9822, 0x74cc, 0x9819, 0x1, 0x0);
        gbc.writeMem(0x8c5e, { 0xcb, 0x76 });
        gbc.writeMem(0x9819, { 0x28 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x67a6, gbc.sp());
        EXPECT(0x8c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c5e));
        EXPECT(0x76, gbc.readMem(0x8c5f));
        EXPECT(0x28, gbc.readMem(0x9819));
        // CB 76 013E
        gbc.setState(0xb1b7, 0xd8cc, 0xe400, 0xebe0, 0xaca7, 0xaf52, 0x0, 0x1);
        gbc.writeMem(0xaf52, { 0x3e });
        gbc.writeMem(0xb1b7, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd8cc, gbc.sp());
        EXPECT(0xb1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xaf52));
        EXPECT(0xcb, gbc.readMem(0xb1b7));
        EXPECT(0x76, gbc.readMem(0xb1b8));
        // CB 76 013F
        gbc.setState(0x7903, 0x4d15, 0x41b0, 0x1d2d, 0x4c17, 0x23bd, 0x1, 0x1);
        gbc.writeMem(0x23bd, { 0xfe });
        gbc.writeMem(0x7903, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4d15, gbc.sp());
        EXPECT(0x7905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0140
        gbc.setState(0x9878, 0x217c, 0xf6a0, 0x6f24, 0x10b, 0xbfe4, 0x1, 0x1);
        gbc.writeMem(0x9878, { 0xcb, 0x76 });
        gbc.writeMem(0xbfe4, { 0x9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x217c, gbc.sp());
        EXPECT(0x987a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9878));
        EXPECT(0x76, gbc.readMem(0x9879));
        EXPECT(0x9, gbc.readMem(0xbfe4));
        // CB 76 0141
        gbc.setState(0x4ab6, 0xe806, 0xd2b0, 0x8c9d, 0x832e, 0x3311, 0x0, 0x0);
        gbc.writeMem(0x3311, { 0x26 });
        gbc.writeMem(0x4ab6, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe806, gbc.sp());
        EXPECT(0x4ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0142
        gbc.setState(0x1563, 0xac02, 0x4a50, 0x2dc2, 0x85ea, 0x76fc, 0x1, 0x0);
        gbc.writeMem(0x1563, { 0xcb, 0x76 });
        gbc.writeMem(0x76fc, { 0x25 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xac02, gbc.sp());
        EXPECT(0x1565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0143
        gbc.setState(0x5643, 0x4b09, 0x9a40, 0xe238, 0xb1b9, 0x3a22, 0x1, 0x0);
        gbc.writeMem(0x3a22, { 0xd3 });
        gbc.writeMem(0x5643, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4b09, gbc.sp());
        EXPECT(0x5645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0144
        gbc.setState(0xadf2, 0xc7bd, 0x7b90, 0x8c64, 0x8db7, 0xbd42, 0x1, 0x0);
        gbc.writeMem(0xadf2, { 0xcb, 0x76 });
        gbc.writeMem(0xbd42, { 0x56 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc7bd, gbc.sp());
        EXPECT(0xadf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf2));
        EXPECT(0x76, gbc.readMem(0xadf3));
        EXPECT(0x56, gbc.readMem(0xbd42));
        // CB 76 0145
        gbc.setState(0x9feb, 0x24d7, 0x8780, 0x2d10, 0x3691, 0xa952, 0x0, 0x0);
        gbc.writeMem(0x9feb, { 0xcb, 0x76 });
        gbc.writeMem(0xa952, { 0x14 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x24d7, gbc.sp());
        EXPECT(0x9fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9feb));
        EXPECT(0x76, gbc.readMem(0x9fec));
        EXPECT(0x14, gbc.readMem(0xa952));
        // CB 76 0146
        gbc.setState(0xc23f, 0x323b, 0xccf0, 0x868, 0xb0b2, 0x1107, 0x0, 0x0);
        gbc.writeMem(0x1107, { 0xd6 });
        gbc.writeMem(0xc23f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x323b, gbc.sp());
        EXPECT(0xc241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23f));
        EXPECT(0x76, gbc.readMem(0xc240));
        // CB 76 0147
        gbc.setState(0x3c87, 0x701e, 0x1cb0, 0x837f, 0x4a02, 0x345e, 0x1, 0x0);
        gbc.writeMem(0x345e, { 0xd2 });
        gbc.writeMem(0x3c87, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x701e, gbc.sp());
        EXPECT(0x3c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0148
        gbc.setState(0x9d95, 0xf037, 0x9f10, 0x14fb, 0x5b8b, 0xb686, 0x1, 0x0);
        gbc.writeMem(0x9d95, { 0xcb, 0x76 });
        gbc.writeMem(0xb686, { 0x55 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf037, gbc.sp());
        EXPECT(0x9d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d95));
        EXPECT(0x76, gbc.readMem(0x9d96));
        EXPECT(0x55, gbc.readMem(0xb686));
        // CB 76 0149
        gbc.setState(0x6654, 0x6994, 0xd860, 0xf6e0, 0x3cd, 0xf2d3, 0x1, 0x0);
        gbc.writeMem(0x6654, { 0xcb, 0x76 });
        gbc.writeMem(0xf2d3, { 0xe4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6994, gbc.sp());
        EXPECT(0x6656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xf2d3));
        // CB 76 014A
        gbc.setState(0x9369, 0x639d, 0xb370, 0x57b2, 0xa985, 0xc3f4, 0x0, 0x1);
        gbc.writeMem(0x9369, { 0xcb, 0x76 });
        gbc.writeMem(0xc3f4, { 0x4b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x639d, gbc.sp());
        EXPECT(0x936b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9369));
        EXPECT(0x76, gbc.readMem(0x936a));
        EXPECT(0x4b, gbc.readMem(0xc3f4));
        // CB 76 014C
        gbc.setState(0xdb4, 0x9a0d, 0x3980, 0xfceb, 0x1e07, 0x480, 0x0, 0x1);
        gbc.writeMem(0x480, { 0xff });
        gbc.writeMem(0xdb4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9a0d, gbc.sp());
        EXPECT(0xdb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 014D
        gbc.setState(0x3cc1, 0x8401, 0x7f00, 0xe555, 0xd7f, 0xc346, 0x1, 0x1);
        gbc.writeMem(0x3cc1, { 0xcb, 0x76 });
        gbc.writeMem(0xc346, { 0x1c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8401, gbc.sp());
        EXPECT(0x3cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xc346));
        // CB 76 014E
        gbc.setState(0x5f5, 0x2560, 0xcc30, 0xf0d9, 0xb730, 0x7bcc, 0x1, 0x0);
        gbc.writeMem(0x5f5, { 0xcb, 0x76 });
        gbc.writeMem(0x7bcc, { 0x18 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2560, gbc.sp());
        EXPECT(0x5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 014F
        gbc.setState(0xa197, 0xdb19, 0x8c40, 0x5435, 0x7b0a, 0x40f2, 0x0, 0x0);
        gbc.writeMem(0x40f2, { 0x95 });
        gbc.writeMem(0xa197, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdb19, gbc.sp());
        EXPECT(0xa199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa197));
        EXPECT(0x76, gbc.readMem(0xa198));
        // CB 76 0150
        gbc.setState(0x6e84, 0x550f, 0xa9f0, 0xcc49, 0xe86e, 0x8529, 0x1, 0x0);
        gbc.writeMem(0x6e84, { 0xcb, 0x76 });
        gbc.writeMem(0x8529, { 0xed });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x550f, gbc.sp());
        EXPECT(0x6e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8529));
        // CB 76 0151
        gbc.setState(0xa4d7, 0x11ed, 0x4c80, 0x9238, 0x6d6f, 0x642f, 0x0, 0x0);
        gbc.writeMem(0x642f, { 0xa4 });
        gbc.writeMem(0xa4d7, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x11ed, gbc.sp());
        EXPECT(0xa4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d7));
        EXPECT(0x76, gbc.readMem(0xa4d8));
        // CB 76 0152
        gbc.setState(0x106e, 0xac43, 0xded0, 0x768e, 0xbaea, 0xc194, 0x0, 0x1);
        gbc.writeMem(0x106e, { 0xcb, 0x76 });
        gbc.writeMem(0xc194, { 0x33 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xac43, gbc.sp());
        EXPECT(0x1070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc194));
        // CB 76 0153
        gbc.setState(0xaebb, 0xb438, 0xeaa0, 0x3543, 0x1810, 0x1d13, 0x0, 0x1);
        gbc.writeMem(0x1d13, { 0x1d });
        gbc.writeMem(0xaebb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb438, gbc.sp());
        EXPECT(0xaebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaebb));
        EXPECT(0x76, gbc.readMem(0xaebc));
        // CB 76 0154
        gbc.setState(0x5e3e, 0x80c4, 0xa7c0, 0x249f, 0xf1f1, 0x95d8, 0x0, 0x0);
        gbc.writeMem(0x5e3e, { 0xcb, 0x76 });
        gbc.writeMem(0x95d8, { 0x6f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x80c4, gbc.sp());
        EXPECT(0x5e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x95d8));
        // CB 76 0155
        gbc.setState(0x8db9, 0x947d, 0x1a10, 0xb896, 0x7265, 0xe84, 0x0, 0x1);
        gbc.writeMem(0xe84, { 0xe6 });
        gbc.writeMem(0x8db9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x947d, gbc.sp());
        EXPECT(0x8dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db9));
        EXPECT(0x76, gbc.readMem(0x8dba));
        // CB 76 0156
        gbc.setState(0x739d, 0xebd1, 0x10f0, 0x6114, 0x8316, 0x1ad0, 0x0, 0x1);
        gbc.writeMem(0x1ad0, { 0x48 });
        gbc.writeMem(0x739d, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xebd1, gbc.sp());
        EXPECT(0x739f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0157
        gbc.setState(0x709e, 0x12b1, 0xe3f0, 0xcb7b, 0x7246, 0x33b1, 0x0, 0x0);
        gbc.writeMem(0x33b1, { 0x8b });
        gbc.writeMem(0x709e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x12b1, gbc.sp());
        EXPECT(0x70a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0158
        gbc.setState(0x6ee0, 0x7773, 0xfa20, 0x6e9c, 0x6a25, 0xb079, 0x1, 0x1);
        gbc.writeMem(0x6ee0, { 0xcb, 0x76 });
        gbc.writeMem(0xb079, { 0x99 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7773, gbc.sp());
        EXPECT(0x6ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb079));
        // CB 76 0159
        gbc.setState(0x8274, 0x988, 0x67a0, 0x5c97, 0x5a2, 0x553c, 0x1, 0x1);
        gbc.writeMem(0x553c, { 0x4a });
        gbc.writeMem(0x8274, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x988, gbc.sp());
        EXPECT(0x8276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8274));
        EXPECT(0x76, gbc.readMem(0x8275));
        // CB 76 015A
        gbc.setState(0x2c9f, 0x6b55, 0xc780, 0x3150, 0x7cea, 0x6d53, 0x1, 0x0);
        gbc.writeMem(0x2c9f, { 0xcb, 0x76 });
        gbc.writeMem(0x6d53, { 0xaa });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6b55, gbc.sp());
        EXPECT(0x2ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 015B
        gbc.setState(0xdc02, 0x2bc1, 0x220, 0x352, 0xde7a, 0x8e59, 0x1, 0x1);
        gbc.writeMem(0x8e59, { 0x75 });
        gbc.writeMem(0xdc02, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2bc1, gbc.sp());
        EXPECT(0xdc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8e59));
        EXPECT(0xcb, gbc.readMem(0xdc02));
        EXPECT(0x76, gbc.readMem(0xdc03));
        // CB 76 015C
        gbc.setState(0x3c45, 0x5090, 0xe590, 0xd3fe, 0x383c, 0x1750, 0x1, 0x1);
        gbc.writeMem(0x1750, { 0xc8 });
        gbc.writeMem(0x3c45, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5090, gbc.sp());
        EXPECT(0x3c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 015D
        gbc.setState(0x7d91, 0xba3d, 0x84c0, 0x1744, 0xe773, 0x969a, 0x1, 0x0);
        gbc.writeMem(0x7d91, { 0xcb, 0x76 });
        gbc.writeMem(0x969a, { 0x48 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xba3d, gbc.sp());
        EXPECT(0x7d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x969a));
        // CB 76 015E
        gbc.setState(0x59b9, 0x1fce, 0xc760, 0x6a40, 0xf16b, 0x7938, 0x0, 0x1);
        gbc.writeMem(0x59b9, { 0xcb, 0x76 });
        gbc.writeMem(0x7938, { 0x84 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1fce, gbc.sp());
        EXPECT(0x59bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 015F
        gbc.setState(0xa645, 0xaae0, 0x7f10, 0xdc65, 0x8d34, 0xd616, 0x1, 0x1);
        gbc.writeMem(0xa645, { 0xcb, 0x76 });
        gbc.writeMem(0xd616, { 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaae0, gbc.sp());
        EXPECT(0xa647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa645));
        EXPECT(0x76, gbc.readMem(0xa646));
        EXPECT(0x53, gbc.readMem(0xd616));
        // CB 76 0160
        gbc.setState(0x13ca, 0xb887, 0xbc10, 0x3fa2, 0xf3cb, 0xf089, 0x1, 0x1);
        gbc.writeMem(0x13ca, { 0xcb, 0x76 });
        gbc.writeMem(0xf089, { 0xae });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb887, gbc.sp());
        EXPECT(0x13cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xf089));
        // CB 76 0161
        gbc.setState(0xb2ae, 0xa2fd, 0x2e00, 0x8902, 0xf564, 0x7bfe, 0x0, 0x1);
        gbc.writeMem(0x7bfe, { 0x5b });
        gbc.writeMem(0xb2ae, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa2fd, gbc.sp());
        EXPECT(0xb2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ae));
        EXPECT(0x76, gbc.readMem(0xb2af));
        // CB 76 0162
        gbc.setState(0x305d, 0xa4e8, 0x6c50, 0x53a8, 0x153d, 0x81bd, 0x1, 0x1);
        gbc.writeMem(0x305d, { 0xcb, 0x76 });
        gbc.writeMem(0x81bd, { 0x5f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa4e8, gbc.sp());
        EXPECT(0x305f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x81bd));
        // CB 76 0163
        gbc.setState(0xec6a, 0x332b, 0x32b0, 0xbdf7, 0xdb3b, 0xa15, 0x1, 0x0);
        gbc.writeMem(0xa15, { 0xf5 });
        gbc.writeMem(0xec6a, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x332b, gbc.sp());
        EXPECT(0xec6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6a));
        EXPECT(0x76, gbc.readMem(0xec6b));
        // CB 76 0164
        gbc.setState(0x9053, 0xaf5f, 0xd630, 0x9f02, 0x64bc, 0xbb1b, 0x1, 0x1);
        gbc.writeMem(0x9053, { 0xcb, 0x76 });
        gbc.writeMem(0xbb1b, { 0x93 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xaf5f, gbc.sp());
        EXPECT(0x9055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9053));
        EXPECT(0x76, gbc.readMem(0x9054));
        EXPECT(0x93, gbc.readMem(0xbb1b));
        // CB 76 0165
        gbc.setState(0x72a5, 0x9b6, 0xab90, 0x7f40, 0xe1e8, 0x3c0, 0x0, 0x1);
        gbc.writeMem(0x3c0, { 0x53 });
        gbc.writeMem(0x72a5, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9b6, gbc.sp());
        EXPECT(0x72a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0166
        gbc.setState(0x92c, 0xbaf, 0x5a90, 0xd093, 0xd426, 0x160f, 0x1, 0x0);
        gbc.writeMem(0x92c, { 0xcb, 0x76 });
        gbc.writeMem(0x160f, { 0xd0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbaf, gbc.sp());
        EXPECT(0x92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0168
        gbc.setState(0x2ec7, 0x9e3d, 0xec30, 0xd881, 0x27a7, 0xa817, 0x0, 0x1);
        gbc.writeMem(0x2ec7, { 0xcb, 0x76 });
        gbc.writeMem(0xa817, { 0x72 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9e3d, gbc.sp());
        EXPECT(0x2ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa817));
        // CB 76 0169
        gbc.setState(0x3bf7, 0x86a3, 0xdde0, 0xcf2f, 0xb92f, 0xc256, 0x0, 0x1);
        gbc.writeMem(0x3bf7, { 0xcb, 0x76 });
        gbc.writeMem(0xc256, { 0xc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x86a3, gbc.sp());
        EXPECT(0x3bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc256));
        // CB 76 016A
        gbc.setState(0x56a8, 0xcb3c, 0x6520, 0xfeef, 0xc0c0, 0x6dc8, 0x0, 0x0);
        gbc.writeMem(0x56a8, { 0xcb, 0x76 });
        gbc.writeMem(0x6dc8, { 0x2e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcb3c, gbc.sp());
        EXPECT(0x56aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 016B
        gbc.setState(0xb099, 0x36e7, 0x42c0, 0x3fc2, 0x285e, 0xea22, 0x1, 0x0);
        gbc.writeMem(0xb099, { 0xcb, 0x76 });
        gbc.writeMem(0xea22, { 0xb1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x36e7, gbc.sp());
        EXPECT(0xb09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb099));
        EXPECT(0x76, gbc.readMem(0xb09a));
        EXPECT(0xb1, gbc.readMem(0xea22));
        // CB 76 016C
        gbc.setState(0xe153, 0x1ded, 0x8cf0, 0xb3b8, 0xaf6b, 0x848a, 0x0, 0x1);
        gbc.writeMem(0x848a, { 0x3d });
        gbc.writeMem(0xe153, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1ded, gbc.sp());
        EXPECT(0xe155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x848a));
        EXPECT(0xcb, gbc.readMem(0xe153));
        EXPECT(0x76, gbc.readMem(0xe154));
        // CB 76 016D
        gbc.setState(0xc4e7, 0x18c1, 0x56e0, 0x2c66, 0x27f8, 0x6c6, 0x0, 0x0);
        gbc.writeMem(0x6c6, { 0x52 });
        gbc.writeMem(0xc4e7, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x18c1, gbc.sp());
        EXPECT(0xc4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e7));
        EXPECT(0x76, gbc.readMem(0xc4e8));
        // CB 76 016E
        gbc.setState(0x345a, 0x35fa, 0xb0e0, 0x7205, 0x8c72, 0xece3, 0x1, 0x1);
        gbc.writeMem(0x345a, { 0xcb, 0x76 });
        gbc.writeMem(0xece3, { 0x66 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x35fa, gbc.sp());
        EXPECT(0x345c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xece3));
        // CB 76 016F
        gbc.setState(0xb4fb, 0x3343, 0x3f90, 0x471a, 0xcde2, 0x65d0, 0x0, 0x1);
        gbc.writeMem(0x65d0, { 0x22 });
        gbc.writeMem(0xb4fb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3343, gbc.sp());
        EXPECT(0xb4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fb));
        EXPECT(0x76, gbc.readMem(0xb4fc));
        // CB 76 0170
        gbc.setState(0xe5c3, 0xa190, 0xada0, 0x141d, 0xacae, 0x95d6, 0x0, 0x0);
        gbc.writeMem(0x95d6, { 0xc7 });
        gbc.writeMem(0xe5c3, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa190, gbc.sp());
        EXPECT(0xe5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x95d6));
        EXPECT(0xcb, gbc.readMem(0xe5c3));
        EXPECT(0x76, gbc.readMem(0xe5c4));
        // CB 76 0171
        gbc.setState(0xe91, 0xc7bf, 0x13e0, 0x356a, 0xf8f, 0xb230, 0x0, 0x1);
        gbc.writeMem(0xe91, { 0xcb, 0x76 });
        gbc.writeMem(0xb230, { 0x80 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc7bf, gbc.sp());
        EXPECT(0xe93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb230));
        // CB 76 0172
        gbc.setState(0x69b1, 0xade9, 0x3f20, 0xb017, 0xef86, 0x440b, 0x0, 0x1);
        gbc.writeMem(0x440b, { 0x86 });
        gbc.writeMem(0x69b1, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xade9, gbc.sp());
        EXPECT(0x69b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0173
        gbc.setState(0x7a, 0xffc6, 0xe450, 0x636, 0xcaa0, 0x5df2, 0x1, 0x1);
        gbc.writeMem(0x7a, { 0xcb, 0x76 });
        gbc.writeMem(0x5df2, { 0xf0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xffc6, gbc.sp());
        EXPECT(0x7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0174
        gbc.setState(0x9480, 0xe967, 0x5900, 0xc578, 0xffc7, 0x7b16, 0x0, 0x1);
        gbc.writeMem(0x7b16, { 0x47 });
        gbc.writeMem(0x9480, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe967, gbc.sp());
        EXPECT(0x9482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9480));
        EXPECT(0x76, gbc.readMem(0x9481));
        // CB 76 0175
        gbc.setState(0xcd7b, 0xae62, 0x4210, 0xd1f5, 0x9522, 0x3d4e, 0x0, 0x0);
        gbc.writeMem(0x3d4e, { 0x32 });
        gbc.writeMem(0xcd7b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xae62, gbc.sp());
        EXPECT(0xcd7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd7b));
        EXPECT(0x76, gbc.readMem(0xcd7c));
        // CB 76 0176
        gbc.setState(0x6b2e, 0xba3, 0x2a20, 0xcb72, 0xa152, 0x8092, 0x1, 0x1);
        gbc.writeMem(0x6b2e, { 0xcb, 0x76 });
        gbc.writeMem(0x8092, { 0x30 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xba3, gbc.sp());
        EXPECT(0x6b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8092));
        // CB 76 0177
        gbc.setState(0xee48, 0x6680, 0x1d80, 0x50de, 0x7418, 0x19e4, 0x1, 0x0);
        gbc.writeMem(0x19e4, { 0x47 });
        gbc.writeMem(0xee48, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6680, gbc.sp());
        EXPECT(0xee4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee48));
        EXPECT(0x76, gbc.readMem(0xee49));
        // CB 76 0179
        gbc.setState(0x8d3c, 0x50f7, 0x4a70, 0xeec, 0x7eac, 0xf6e3, 0x0, 0x0);
        gbc.writeMem(0x8d3c, { 0xcb, 0x76 });
        gbc.writeMem(0xf6e3, { 0xdf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x50f7, gbc.sp());
        EXPECT(0x8d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3c));
        EXPECT(0x76, gbc.readMem(0x8d3d));
        EXPECT(0xdf, gbc.readMem(0xf6e3));
        // CB 76 017A
        gbc.setState(0xd0e, 0xe47a, 0x7820, 0x49ed, 0x8168, 0x7876, 0x0, 0x1);
        gbc.writeMem(0xd0e, { 0xcb, 0x76 });
        gbc.writeMem(0x7876, { 0xe6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe47a, gbc.sp());
        EXPECT(0xd10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 017B
        gbc.setState(0xc1e2, 0xae37, 0x14a0, 0x1476, 0x5990, 0x856e, 0x1, 0x1);
        gbc.writeMem(0x856e, { 0x8a });
        gbc.writeMem(0xc1e2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xae37, gbc.sp());
        EXPECT(0xc1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x856e));
        EXPECT(0xcb, gbc.readMem(0xc1e2));
        EXPECT(0x76, gbc.readMem(0xc1e3));
        // CB 76 017C
        gbc.setState(0x383d, 0x9fdc, 0x2fd0, 0x2684, 0x7f89, 0xd555, 0x1, 0x1);
        gbc.writeMem(0x383d, { 0xcb, 0x76 });
        gbc.writeMem(0xd555, { 0xb8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9fdc, gbc.sp());
        EXPECT(0x383f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xd555));
        // CB 76 017D
        gbc.setState(0x17c4, 0x969f, 0x8c60, 0xd979, 0x694b, 0x8ce1, 0x1, 0x0);
        gbc.writeMem(0x17c4, { 0xcb, 0x76 });
        gbc.writeMem(0x8ce1, { 0xa9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x969f, gbc.sp());
        EXPECT(0x17c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x8ce1));
        // CB 76 017E
        gbc.setState(0xea5, 0x5ed8, 0x5140, 0x845b, 0xa3ab, 0x54ff, 0x0, 0x0);
        gbc.writeMem(0xea5, { 0xcb, 0x76 });
        gbc.writeMem(0x54ff, { 0xd4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5ed8, gbc.sp());
        EXPECT(0xea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 017F
        gbc.setState(0x3b4f, 0x64b6, 0xb5b0, 0xc892, 0xe496, 0x3db0, 0x1, 0x1);
        gbc.writeMem(0x3b4f, { 0xcb, 0x76 });
        gbc.writeMem(0x3db0, { 0xdd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x64b6, gbc.sp());
        EXPECT(0x3b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0180
        gbc.setState(0x2f59, 0xabee, 0x9c00, 0x276f, 0xb146, 0xcd87, 0x1, 0x1);
        gbc.writeMem(0x2f59, { 0xcb, 0x76 });
        gbc.writeMem(0xcd87, { 0x44 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xabee, gbc.sp());
        EXPECT(0x2f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcd87));
        // CB 76 0181
        gbc.setState(0x546b, 0x6a05, 0x2190, 0x53ed, 0x9e8e, 0x9ebf, 0x1, 0x0);
        gbc.writeMem(0x546b, { 0xcb, 0x76 });
        gbc.writeMem(0x9ebf, { 0x12 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6a05, gbc.sp());
        EXPECT(0x546d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9ebf));
        // CB 76 0182
        gbc.setState(0x3be6, 0xad7b, 0x8620, 0x29ad, 0x312, 0x546e, 0x1, 0x0);
        gbc.writeMem(0x3be6, { 0xcb, 0x76 });
        gbc.writeMem(0x546e, { 0xbf });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xad7b, gbc.sp());
        EXPECT(0x3be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0183
        gbc.setState(0x7bf3, 0x7464, 0xb9e0, 0xf67e, 0x3787, 0xeb67, 0x0, 0x1);
        gbc.writeMem(0x7bf3, { 0xcb, 0x76 });
        gbc.writeMem(0xeb67, { 0x96 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7464, gbc.sp());
        EXPECT(0x7bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xeb67));
        // CB 76 0184
        gbc.setState(0x603b, 0xdadc, 0xc400, 0xad02, 0x16c3, 0xfc7a, 0x1, 0x0);
        gbc.writeMem(0x603b, { 0xcb, 0x76 });
        gbc.writeMem(0xfc7a, { 0x39 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdadc, gbc.sp());
        EXPECT(0x603d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xfc7a));
        // CB 76 0185
        gbc.setState(0x18a7, 0x90bd, 0x42d0, 0x12ec, 0x396b, 0xa874, 0x0, 0x1);
        gbc.writeMem(0x18a7, { 0xcb, 0x76 });
        gbc.writeMem(0xa874, { 0x75 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x90bd, gbc.sp());
        EXPECT(0x18a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa874));
        // CB 76 0186
        gbc.setState(0x81ce, 0x3ee2, 0x8500, 0xfcc4, 0xeb85, 0x7cfc, 0x1, 0x0);
        gbc.writeMem(0x7cfc, { 0xfe });
        gbc.writeMem(0x81ce, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3ee2, gbc.sp());
        EXPECT(0x81d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ce));
        EXPECT(0x76, gbc.readMem(0x81cf));
        // CB 76 0187
        gbc.setState(0xb2f5, 0xf23e, 0x21a0, 0x3a5f, 0x8d9b, 0x597f, 0x1, 0x1);
        gbc.writeMem(0x597f, { 0x98 });
        gbc.writeMem(0xb2f5, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf23e, gbc.sp());
        EXPECT(0xb2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f5));
        EXPECT(0x76, gbc.readMem(0xb2f6));
        // CB 76 0188
        gbc.setState(0x23ca, 0xd5f, 0x2490, 0x404, 0x5bb5, 0xbb1, 0x0, 0x0);
        gbc.writeMem(0xbb1, { 0x1a });
        gbc.writeMem(0x23ca, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd5f, gbc.sp());
        EXPECT(0x23cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0189
        gbc.setState(0x548, 0x3f12, 0xfe00, 0xce9b, 0x44e, 0x1aa8, 0x0, 0x1);
        gbc.writeMem(0x548, { 0xcb, 0x76 });
        gbc.writeMem(0x1aa8, { 0x84 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0x54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 018A
        gbc.setState(0x9bdc, 0x680e, 0xad80, 0x4b40, 0x90a8, 0x693a, 0x1, 0x1);
        gbc.writeMem(0x693a, { 0x28 });
        gbc.writeMem(0x9bdc, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x680e, gbc.sp());
        EXPECT(0x9bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bdc));
        EXPECT(0x76, gbc.readMem(0x9bdd));
        // CB 76 018C
        gbc.setState(0xed94, 0xbe49, 0x7c70, 0xadc3, 0xcba3, 0x9ca7, 0x0, 0x0);
        gbc.writeMem(0x9ca7, { 0xe6 });
        gbc.writeMem(0xed94, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbe49, gbc.sp());
        EXPECT(0xed96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9ca7));
        EXPECT(0xcb, gbc.readMem(0xed94));
        EXPECT(0x76, gbc.readMem(0xed95));
        // CB 76 018D
        gbc.setState(0x3a25, 0xa4c0, 0x8eb0, 0x45e0, 0xdef2, 0x4955, 0x1, 0x1);
        gbc.writeMem(0x3a25, { 0xcb, 0x76 });
        gbc.writeMem(0x4955, { 0xd4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa4c0, gbc.sp());
        EXPECT(0x3a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 018E
        gbc.setState(0x3ea3, 0x5f53, 0x4640, 0x6951, 0xf5ea, 0x8192, 0x1, 0x1);
        gbc.writeMem(0x3ea3, { 0xcb, 0x76 });
        gbc.writeMem(0x8192, { 0x36 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5f53, gbc.sp());
        EXPECT(0x3ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8192));
        // CB 76 018F
        gbc.setState(0xb1e4, 0xfcf4, 0xabe0, 0xd62b, 0xe4a0, 0xce, 0x1, 0x1);
        gbc.writeMem(0xce, { 0x2 });
        gbc.writeMem(0xb1e4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfcf4, gbc.sp());
        EXPECT(0xb1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e4));
        EXPECT(0x76, gbc.readMem(0xb1e5));
        // CB 76 0191
        gbc.setState(0x7cf4, 0x3e9f, 0xbb10, 0x777e, 0x2663, 0x7c1a, 0x1, 0x0);
        gbc.writeMem(0x7c1a, { 0x2f });
        gbc.writeMem(0x7cf4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3e9f, gbc.sp());
        EXPECT(0x7cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0192
        gbc.setState(0xa474, 0x7f94, 0xd220, 0x1a1e, 0x98f, 0x6af9, 0x1, 0x0);
        gbc.writeMem(0x6af9, { 0x4d });
        gbc.writeMem(0xa474, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7f94, gbc.sp());
        EXPECT(0xa476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa474));
        EXPECT(0x76, gbc.readMem(0xa475));
        // CB 76 0193
        gbc.setState(0xec25, 0x611b, 0xd890, 0x8b41, 0xe304, 0xd1e7, 0x0, 0x1);
        gbc.writeMem(0xd1e7, { 0xe6 });
        gbc.writeMem(0xec25, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x611b, gbc.sp());
        EXPECT(0xec27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd1e7));
        EXPECT(0xcb, gbc.readMem(0xec25));
        EXPECT(0x76, gbc.readMem(0xec26));
        // CB 76 0194
        gbc.setState(0x37d5, 0xbe85, 0xafc0, 0xffef, 0xfdce, 0xfdcf, 0x1, 0x0);
        gbc.writeMem(0x37d5, { 0xcb, 0x76 });
        gbc.writeMem(0xfdcf, { 0xb8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbe85, gbc.sp());
        EXPECT(0x37d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xfdcf));
        // CB 76 0195
        gbc.setState(0x3983, 0x98c7, 0x8180, 0xbcc, 0x669f, 0x68f0, 0x1, 0x1);
        gbc.writeMem(0x3983, { 0xcb, 0x76 });
        gbc.writeMem(0x68f0, { 0xfc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x98c7, gbc.sp());
        EXPECT(0x3985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0196
        gbc.setState(0x4a6f, 0xcfda, 0xa500, 0xc51d, 0xcfb2, 0x333e, 0x1, 0x1);
        gbc.writeMem(0x333e, { 0xad });
        gbc.writeMem(0x4a6f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcfda, gbc.sp());
        EXPECT(0x4a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0197
        gbc.setState(0x45, 0x742a, 0xf6e0, 0xd012, 0xb950, 0x8c9, 0x1, 0x1);
        gbc.writeMem(0x45, { 0xcb, 0x76 });
        gbc.writeMem(0x8c9, { 0x97 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x742a, gbc.sp());
        EXPECT(0x47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0198
        gbc.setState(0x77af, 0x1448, 0x2e20, 0x451c, 0xae92, 0xb5b2, 0x1, 0x1);
        gbc.writeMem(0x77af, { 0xcb, 0x76 });
        gbc.writeMem(0xb5b2, { 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1448, gbc.sp());
        EXPECT(0x77b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb5b2));
        // CB 76 0199
        gbc.setState(0xee6d, 0xf022, 0x7840, 0x9573, 0x8594, 0x65cf, 0x1, 0x0);
        gbc.writeMem(0x65cf, { 0xfe });
        gbc.writeMem(0xee6d, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf022, gbc.sp());
        EXPECT(0xee6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6d));
        EXPECT(0x76, gbc.readMem(0xee6e));
        // CB 76 019A
        gbc.setState(0x1277, 0x8604, 0x32f0, 0xcd11, 0xcaf2, 0xbac7, 0x1, 0x1);
        gbc.writeMem(0x1277, { 0xcb, 0x76 });
        gbc.writeMem(0xbac7, { 0xfd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0x1279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xbac7));
        // CB 76 019C
        gbc.setState(0x6427, 0x525f, 0x4f20, 0xa7b4, 0xf75c, 0x80f1, 0x0, 0x0);
        gbc.writeMem(0x6427, { 0xcb, 0x76 });
        gbc.writeMem(0x80f1, { 0xdb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x525f, gbc.sp());
        EXPECT(0x6429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x80f1));
        // CB 76 019D
        gbc.setState(0xdc52, 0x244d, 0x33f0, 0xbb82, 0xaa63, 0xc7d8, 0x1, 0x0);
        gbc.writeMem(0xc7d8, { 0x48 });
        gbc.writeMem(0xdc52, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x244d, gbc.sp());
        EXPECT(0xdc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc7d8));
        EXPECT(0xcb, gbc.readMem(0xdc52));
        EXPECT(0x76, gbc.readMem(0xdc53));
        // CB 76 019E
        gbc.setState(0x1ee5, 0x2e64, 0xf0b0, 0xe7a6, 0x7389, 0xf74, 0x1, 0x0);
        gbc.writeMem(0xf74, { 0xe3 });
        gbc.writeMem(0x1ee5, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2e64, gbc.sp());
        EXPECT(0x1ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01A0
        gbc.setState(0x2d82, 0x7271, 0x5e40, 0x84f9, 0xb264, 0x3ec2, 0x1, 0x1);
        gbc.writeMem(0x2d82, { 0xcb, 0x76 });
        gbc.writeMem(0x3ec2, { 0xf2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7271, gbc.sp());
        EXPECT(0x2d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01A1
        gbc.setState(0x2db3, 0xfcd5, 0x1b30, 0xa660, 0x7209, 0xacbf, 0x0, 0x0);
        gbc.writeMem(0x2db3, { 0xcb, 0x76 });
        gbc.writeMem(0xacbf, { 0x8d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfcd5, gbc.sp());
        EXPECT(0x2db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xacbf));
        // CB 76 01A2
        gbc.setState(0x9272, 0x825e, 0xa6b0, 0xdf53, 0x5464, 0x1466, 0x0, 0x1);
        gbc.writeMem(0x1466, { 0x4d });
        gbc.writeMem(0x9272, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x825e, gbc.sp());
        EXPECT(0x9274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9272));
        EXPECT(0x76, gbc.readMem(0x9273));
        // CB 76 01A3
        gbc.setState(0x4b56, 0x3f43, 0x8a00, 0x20ff, 0x88ac, 0x3a0a, 0x1, 0x0);
        gbc.writeMem(0x3a0a, { 0x5e });
        gbc.writeMem(0x4b56, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3f43, gbc.sp());
        EXPECT(0x4b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01A4
        gbc.setState(0xd1b, 0x15c5, 0xf2c0, 0xab25, 0x387, 0x7679, 0x1, 0x1);
        gbc.writeMem(0xd1b, { 0xcb, 0x76 });
        gbc.writeMem(0x7679, { 0x31 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x15c5, gbc.sp());
        EXPECT(0xd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01A5
        gbc.setState(0x6eb5, 0xe9bc, 0x48f0, 0x6214, 0x7f78, 0xf797, 0x0, 0x0);
        gbc.writeMem(0x6eb5, { 0xcb, 0x76 });
        gbc.writeMem(0xf797, { 0x11 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe9bc, gbc.sp());
        EXPECT(0x6eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xf797));
        // CB 76 01A6
        gbc.setState(0xbe0c, 0xb663, 0x1d50, 0x5aab, 0x64a6, 0xbf8e, 0x1, 0x0);
        gbc.writeMem(0xbe0c, { 0xcb, 0x76 });
        gbc.writeMem(0xbf8e, { 0xc9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb663, gbc.sp());
        EXPECT(0xbe0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0c));
        EXPECT(0x76, gbc.readMem(0xbe0d));
        EXPECT(0xc9, gbc.readMem(0xbf8e));
        // CB 76 01A8
        gbc.setState(0xaa98, 0x6598, 0x7780, 0xa052, 0x5247, 0x2999, 0x1, 0x1);
        gbc.writeMem(0x2999, { 0x70 });
        gbc.writeMem(0xaa98, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6598, gbc.sp());
        EXPECT(0xaa9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa98));
        EXPECT(0x76, gbc.readMem(0xaa99));
        // CB 76 01AA
        gbc.setState(0xe923, 0x2f69, 0xc1c0, 0x7b81, 0x8e2f, 0x6248, 0x1, 0x0);
        gbc.writeMem(0x6248, { 0x3f });
        gbc.writeMem(0xe923, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2f69, gbc.sp());
        EXPECT(0xe925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe923));
        EXPECT(0x76, gbc.readMem(0xe924));
        // CB 76 01AB
        gbc.setState(0x485, 0x6693, 0x3880, 0x5b4b, 0x5868, 0xa840, 0x0, 0x1);
        gbc.writeMem(0x485, { 0xcb, 0x76 });
        gbc.writeMem(0xa840, { 0x66 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6693, gbc.sp());
        EXPECT(0x487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa840));
        // CB 76 01AC
        gbc.setState(0x6818, 0xeb8c, 0x8190, 0xeeab, 0x6169, 0x6e8d, 0x0, 0x1);
        gbc.writeMem(0x6818, { 0xcb, 0x76 });
        gbc.writeMem(0x6e8d, { 0x3f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xeb8c, gbc.sp());
        EXPECT(0x681a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01AD
        gbc.setState(0x7657, 0xe848, 0x82d0, 0xeefd, 0xd3cd, 0xb188, 0x1, 0x0);
        gbc.writeMem(0x7657, { 0xcb, 0x76 });
        gbc.writeMem(0xb188, { 0x30 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe848, gbc.sp());
        EXPECT(0x7659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xb188));
        // CB 76 01AE
        gbc.setState(0xed1, 0xeece, 0x5bc0, 0x2654, 0xe1d0, 0xcb7a, 0x0, 0x0);
        gbc.writeMem(0xed1, { 0xcb, 0x76 });
        gbc.writeMem(0xcb7a, { 0x5e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xeece, gbc.sp());
        EXPECT(0xed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcb7a));
        // CB 76 01AF
        gbc.setState(0x9389, 0x7855, 0x9ea0, 0xcb22, 0x817, 0x514d, 0x0, 0x0);
        gbc.writeMem(0x514d, { 0x4c });
        gbc.writeMem(0x9389, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7855, gbc.sp());
        EXPECT(0x938b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9389));
        EXPECT(0x76, gbc.readMem(0x938a));
        // CB 76 01B0
        gbc.setState(0xc326, 0x891f, 0x4960, 0x9e45, 0xb544, 0xe4bc, 0x1, 0x0);
        gbc.writeMem(0xc326, { 0xcb, 0x76 });
        gbc.writeMem(0xe4bc, { 0x89 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x891f, gbc.sp());
        EXPECT(0xc328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc326));
        EXPECT(0x76, gbc.readMem(0xc327));
        EXPECT(0x89, gbc.readMem(0xe4bc));
        // CB 76 01B2
        gbc.setState(0xa948, 0x71fb, 0xdb40, 0x4635, 0x5c09, 0x2063, 0x0, 0x0);
        gbc.writeMem(0x2063, { 0xa0 });
        gbc.writeMem(0xa948, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x71fb, gbc.sp());
        EXPECT(0xa94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa948));
        EXPECT(0x76, gbc.readMem(0xa949));
        // CB 76 01B3
        gbc.setState(0xa022, 0xbdc4, 0xd140, 0x1a14, 0xec15, 0x5fae, 0x0, 0x1);
        gbc.writeMem(0x5fae, { 0xd });
        gbc.writeMem(0xa022, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbdc4, gbc.sp());
        EXPECT(0xa024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa022));
        EXPECT(0x76, gbc.readMem(0xa023));
        // CB 76 01B4
        gbc.setState(0x86e, 0x9a42, 0xbb0, 0xe10d, 0xe7d4, 0x9baf, 0x1, 0x1);
        gbc.writeMem(0x86e, { 0xcb, 0x76 });
        gbc.writeMem(0x9baf, { 0x33 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9a42, gbc.sp());
        EXPECT(0x870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9baf));
        // CB 76 01B5
        gbc.setState(0xc5c8, 0x48eb, 0x75d0, 0x114b, 0x4ac9, 0xa917, 0x1, 0x1);
        gbc.writeMem(0xa917, { 0x86 });
        gbc.writeMem(0xc5c8, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x48eb, gbc.sp());
        EXPECT(0xc5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa917));
        EXPECT(0xcb, gbc.readMem(0xc5c8));
        EXPECT(0x76, gbc.readMem(0xc5c9));
        // CB 76 01B6
        gbc.setState(0x4965, 0x4454, 0x2cb0, 0x55c1, 0x33c1, 0x36bb, 0x1, 0x1);
        gbc.writeMem(0x36bb, { 0xf6 });
        gbc.writeMem(0x4965, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4454, gbc.sp());
        EXPECT(0x4967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01B7
        gbc.setState(0x8552, 0xb4c0, 0x4130, 0xf1fd, 0x1a74, 0xd3c1, 0x0, 0x1);
        gbc.writeMem(0x8552, { 0xcb, 0x76 });
        gbc.writeMem(0xd3c1, { 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb4c0, gbc.sp());
        EXPECT(0x8554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8552));
        EXPECT(0x76, gbc.readMem(0x8553));
        EXPECT(0xd0, gbc.readMem(0xd3c1));
        // CB 76 01B8
        gbc.setState(0xa51f, 0xd3a1, 0x7730, 0x7929, 0xd0eb, 0x8249, 0x1, 0x1);
        gbc.writeMem(0x8249, { 0x9b });
        gbc.writeMem(0xa51f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd3a1, gbc.sp());
        EXPECT(0xa521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8249));
        EXPECT(0xcb, gbc.readMem(0xa51f));
        EXPECT(0x76, gbc.readMem(0xa520));
        // CB 76 01B9
        gbc.setState(0x96b7, 0x3d9, 0x5af0, 0xfc38, 0x23ff, 0x354d, 0x1, 0x1);
        gbc.writeMem(0x354d, { 0x5b });
        gbc.writeMem(0x96b7, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3d9, gbc.sp());
        EXPECT(0x96b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b7));
        EXPECT(0x76, gbc.readMem(0x96b8));
        // CB 76 01BA
        gbc.setState(0xb273, 0xefd6, 0x1af0, 0x11f4, 0x6365, 0x8d9f, 0x0, 0x1);
        gbc.writeMem(0x8d9f, { 0x13 });
        gbc.writeMem(0xb273, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xefd6, gbc.sp());
        EXPECT(0xb275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8d9f));
        EXPECT(0xcb, gbc.readMem(0xb273));
        EXPECT(0x76, gbc.readMem(0xb274));
        // CB 76 01BB
        gbc.setState(0x79f4, 0xbcba, 0xca20, 0x283a, 0x636d, 0xdbda, 0x0, 0x1);
        gbc.writeMem(0x79f4, { 0xcb, 0x76 });
        gbc.writeMem(0xdbda, { 0x8b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbcba, gbc.sp());
        EXPECT(0x79f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xdbda));
        // CB 76 01BC
        gbc.setState(0x2fb4, 0x39d, 0x38f0, 0x86e, 0xb887, 0x3423, 0x1, 0x1);
        gbc.writeMem(0x2fb4, { 0xcb, 0x76 });
        gbc.writeMem(0x3423, { 0xd4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x39d, gbc.sp());
        EXPECT(0x2fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01BD
        gbc.setState(0x2cc9, 0x722f, 0x3b00, 0x66ca, 0x65bc, 0x2284, 0x1, 0x1);
        gbc.writeMem(0x2284, { 0x58 });
        gbc.writeMem(0x2cc9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x722f, gbc.sp());
        EXPECT(0x2ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01BE
        gbc.setState(0x68c, 0xce0f, 0x1870, 0x969a, 0x3b53, 0xbbfd, 0x1, 0x0);
        gbc.writeMem(0x68c, { 0xcb, 0x76 });
        gbc.writeMem(0xbbfd, { 0xca });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xce0f, gbc.sp());
        EXPECT(0x68e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xbbfd));
        // CB 76 01BF
        gbc.setState(0x3b1b, 0x4257, 0xd7c0, 0xda90, 0x3335, 0xd79c, 0x1, 0x1);
        gbc.writeMem(0x3b1b, { 0xcb, 0x76 });
        gbc.writeMem(0xd79c, { 0x1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4257, gbc.sp());
        EXPECT(0x3b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xd79c));
        // CB 76 01C0
        gbc.setState(0x6106, 0x365d, 0x5a80, 0xc4f0, 0x57c7, 0x66fd, 0x0, 0x0);
        gbc.writeMem(0x6106, { 0xcb, 0x76 });
        gbc.writeMem(0x66fd, { 0xb9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x365d, gbc.sp());
        EXPECT(0x6108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01C2
        gbc.setState(0x9031, 0xad32, 0x48c0, 0xc4b2, 0xf598, 0x6301, 0x1, 0x0);
        gbc.writeMem(0x6301, { 0x16 });
        gbc.writeMem(0x9031, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xad32, gbc.sp());
        EXPECT(0x9033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9031));
        EXPECT(0x76, gbc.readMem(0x9032));
        // CB 76 01C4
        gbc.setState(0xbb98, 0x9d7d, 0x62c0, 0xdc1d, 0x334, 0xce16, 0x0, 0x0);
        gbc.writeMem(0xbb98, { 0xcb, 0x76 });
        gbc.writeMem(0xce16, { 0xa9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9d7d, gbc.sp());
        EXPECT(0xbb9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb98));
        EXPECT(0x76, gbc.readMem(0xbb99));
        EXPECT(0xa9, gbc.readMem(0xce16));
        // CB 76 01C5
        gbc.setState(0xafd1, 0x3044, 0x84f0, 0x3e33, 0x6ae3, 0xe708, 0x1, 0x1);
        gbc.writeMem(0xafd1, { 0xcb, 0x76 });
        gbc.writeMem(0xe708, { 0x88 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3044, gbc.sp());
        EXPECT(0xafd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd1));
        EXPECT(0x76, gbc.readMem(0xafd2));
        EXPECT(0x88, gbc.readMem(0xe708));
        // CB 76 01C6
        gbc.setState(0x526f, 0x64a0, 0x7680, 0xc712, 0x9480, 0x1c3d, 0x0, 0x0);
        gbc.writeMem(0x1c3d, { 0x29 });
        gbc.writeMem(0x526f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x64a0, gbc.sp());
        EXPECT(0x5271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01C7
        gbc.setState(0xc40e, 0xe72e, 0xef50, 0x3a15, 0xb79f, 0xa778, 0x0, 0x1);
        gbc.writeMem(0xa778, { 0x4b });
        gbc.writeMem(0xc40e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe72e, gbc.sp());
        EXPECT(0xc410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa778));
        EXPECT(0xcb, gbc.readMem(0xc40e));
        EXPECT(0x76, gbc.readMem(0xc40f));
        // CB 76 01C8
        gbc.setState(0x1ec2, 0xce77, 0x4110, 0xb5d8, 0x4525, 0x47bb, 0x0, 0x1);
        gbc.writeMem(0x1ec2, { 0xcb, 0x76 });
        gbc.writeMem(0x47bb, { 0x15 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xce77, gbc.sp());
        EXPECT(0x1ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01C9
        gbc.setState(0x2ee1, 0x3259, 0x6ec0, 0xab52, 0x11cd, 0x7b4c, 0x1, 0x1);
        gbc.writeMem(0x2ee1, { 0xcb, 0x76 });
        gbc.writeMem(0x7b4c, { 0xb8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3259, gbc.sp());
        EXPECT(0x2ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01CA
        gbc.setState(0x3ef9, 0x7b01, 0xb910, 0x9ccc, 0x6783, 0x6c9, 0x1, 0x0);
        gbc.writeMem(0x6c9, { 0x72 });
        gbc.writeMem(0x3ef9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7b01, gbc.sp());
        EXPECT(0x3efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01CB
        gbc.setState(0x4720, 0xbb1c, 0x4870, 0xd60d, 0x2d8b, 0x81f8, 0x1, 0x1);
        gbc.writeMem(0x4720, { 0xcb, 0x76 });
        gbc.writeMem(0x81f8, { 0x59 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbb1c, gbc.sp());
        EXPECT(0x4722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x81f8));
        // CB 76 01CC
        gbc.setState(0x89b8, 0x9ea4, 0xc410, 0xfa76, 0xf66e, 0xca84, 0x0, 0x1);
        gbc.writeMem(0x89b8, { 0xcb, 0x76 });
        gbc.writeMem(0xca84, { 0x22 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9ea4, gbc.sp());
        EXPECT(0x89ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b8));
        EXPECT(0x76, gbc.readMem(0x89b9));
        EXPECT(0x22, gbc.readMem(0xca84));
        // CB 76 01CD
        gbc.setState(0x42b6, 0x4cf5, 0x1850, 0x9a05, 0x2b44, 0xeb40, 0x0, 0x0);
        gbc.writeMem(0x42b6, { 0xcb, 0x76 });
        gbc.writeMem(0xeb40, { 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4cf5, gbc.sp());
        EXPECT(0x42b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xeb40));
        // CB 76 01CE
        gbc.setState(0xcc85, 0xe4cc, 0x97d0, 0xd33b, 0xc2f7, 0x8efc, 0x1, 0x1);
        gbc.writeMem(0x8efc, { 0x27 });
        gbc.writeMem(0xcc85, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe4cc, gbc.sp());
        EXPECT(0xcc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8efc));
        EXPECT(0xcb, gbc.readMem(0xcc85));
        EXPECT(0x76, gbc.readMem(0xcc86));
        // CB 76 01CF
        gbc.setState(0x8e6d, 0x20b0, 0x3910, 0x7e54, 0xa719, 0x1bd, 0x1, 0x0);
        gbc.writeMem(0x1bd, { 0x99 });
        gbc.writeMem(0x8e6d, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x20b0, gbc.sp());
        EXPECT(0x8e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6d));
        EXPECT(0x76, gbc.readMem(0x8e6e));
        // CB 76 01D0
        gbc.setState(0x887, 0x613f, 0x9370, 0xc24e, 0xd848, 0x5a5, 0x1, 0x0);
        gbc.writeMem(0x5a5, { 0x76 });
        gbc.writeMem(0x887, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x613f, gbc.sp());
        EXPECT(0x889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01D1
        gbc.setState(0x374a, 0x9873, 0xa830, 0x18c6, 0x4b75, 0x5abf, 0x0, 0x0);
        gbc.writeMem(0x374a, { 0xcb, 0x76 });
        gbc.writeMem(0x5abf, { 0xc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9873, gbc.sp());
        EXPECT(0x374c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01D2
        gbc.setState(0x2c83, 0x8cb5, 0xae20, 0x3fe1, 0xbf5c, 0x61f6, 0x1, 0x0);
        gbc.writeMem(0x2c83, { 0xcb, 0x76 });
        gbc.writeMem(0x61f6, { 0x15 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8cb5, gbc.sp());
        EXPECT(0x2c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01D3
        gbc.setState(0x9efe, 0x20e, 0xe650, 0x183, 0x34d5, 0xe679, 0x0, 0x0);
        gbc.writeMem(0x9efe, { 0xcb, 0x76 });
        gbc.writeMem(0xe679, { 0xb2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x20e, gbc.sp());
        EXPECT(0x9f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9efe));
        EXPECT(0x76, gbc.readMem(0x9eff));
        EXPECT(0xb2, gbc.readMem(0xe679));
        // CB 76 01D4
        gbc.setState(0x9c7b, 0x1222, 0xd500, 0x5b13, 0xb2f0, 0x7afd, 0x1, 0x0);
        gbc.writeMem(0x7afd, { 0x21 });
        gbc.writeMem(0x9c7b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1222, gbc.sp());
        EXPECT(0x9c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7b));
        EXPECT(0x76, gbc.readMem(0x9c7c));
        // CB 76 01D5
        gbc.setState(0x2439, 0x8ff8, 0x5870, 0x3e55, 0xeee9, 0x455c, 0x0, 0x0);
        gbc.writeMem(0x2439, { 0xcb, 0x76 });
        gbc.writeMem(0x455c, { 0xfc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8ff8, gbc.sp());
        EXPECT(0x243b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01D6
        gbc.setState(0x272d, 0x64a4, 0x3080, 0x672e, 0xb8b4, 0x8cb4, 0x0, 0x1);
        gbc.writeMem(0x272d, { 0xcb, 0x76 });
        gbc.writeMem(0x8cb4, { 0xa8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0x272f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x8cb4));
        // CB 76 01D7
        gbc.setState(0xc884, 0x7285, 0xc510, 0x9ce0, 0xd9d5, 0x77eb, 0x1, 0x0);
        gbc.writeMem(0x77eb, { 0xeb });
        gbc.writeMem(0xc884, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7285, gbc.sp());
        EXPECT(0xc886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc884));
        EXPECT(0x76, gbc.readMem(0xc885));
        // CB 76 01D8
        gbc.setState(0x8731, 0x96ee, 0x3fa0, 0xa7aa, 0x4b3c, 0x7a65, 0x1, 0x0);
        gbc.writeMem(0x7a65, { 0x7b });
        gbc.writeMem(0x8731, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x96ee, gbc.sp());
        EXPECT(0x8733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8731));
        EXPECT(0x76, gbc.readMem(0x8732));
        // CB 76 01D9
        gbc.setState(0xc1ce, 0x209d, 0x46d0, 0xb6fb, 0x6e1, 0x5953, 0x1, 0x0);
        gbc.writeMem(0x5953, { 0x1 });
        gbc.writeMem(0xc1ce, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x209d, gbc.sp());
        EXPECT(0xc1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ce));
        EXPECT(0x76, gbc.readMem(0xc1cf));
        // CB 76 01DA
        gbc.setState(0xdfa0, 0x2ded, 0x54f0, 0xe004, 0xd3d5, 0x517e, 0x0, 0x0);
        gbc.writeMem(0x517e, { 0x49 });
        gbc.writeMem(0xdfa0, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2ded, gbc.sp());
        EXPECT(0xdfa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa0));
        EXPECT(0x76, gbc.readMem(0xdfa1));
        // CB 76 01DB
        gbc.setState(0xb6f4, 0x420f, 0x9d90, 0x7f5b, 0xc288, 0xa55c, 0x1, 0x0);
        gbc.writeMem(0xa55c, { 0xb1 });
        gbc.writeMem(0xb6f4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x420f, gbc.sp());
        EXPECT(0xb6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xa55c));
        EXPECT(0xcb, gbc.readMem(0xb6f4));
        EXPECT(0x76, gbc.readMem(0xb6f5));
        // CB 76 01DC
        gbc.setState(0xa027, 0x2bf2, 0xef50, 0x6fb4, 0xc363, 0x8ac0, 0x1, 0x1);
        gbc.writeMem(0x8ac0, { 0x8 });
        gbc.writeMem(0xa027, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2bf2, gbc.sp());
        EXPECT(0xa029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x8ac0));
        EXPECT(0xcb, gbc.readMem(0xa027));
        EXPECT(0x76, gbc.readMem(0xa028));
        // CB 76 01DD
        gbc.setState(0xb5db, 0x6a96, 0x1ba0, 0xc1b6, 0x617d, 0x5f7f, 0x1, 0x1);
        gbc.writeMem(0x5f7f, { 0x59 });
        gbc.writeMem(0xb5db, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6a96, gbc.sp());
        EXPECT(0xb5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5db));
        EXPECT(0x76, gbc.readMem(0xb5dc));
        // CB 76 01DE
        gbc.setState(0x3c95, 0x430e, 0x9d00, 0x8fd1, 0xb061, 0xe55d, 0x0, 0x0);
        gbc.writeMem(0x3c95, { 0xcb, 0x76 });
        gbc.writeMem(0xe55d, { 0x84 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x430e, gbc.sp());
        EXPECT(0x3c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe55d));
        // CB 76 01DF
        gbc.setState(0x395d, 0x4a6, 0xd20, 0x194c, 0x4c15, 0x3ed9, 0x1, 0x0);
        gbc.writeMem(0x395d, { 0xcb, 0x76 });
        gbc.writeMem(0x3ed9, { 0x3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4a6, gbc.sp());
        EXPECT(0x395f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01E1
        gbc.setState(0x103c, 0xdc88, 0x67e0, 0x22c3, 0xc237, 0xeef1, 0x0, 0x1);
        gbc.writeMem(0x103c, { 0xcb, 0x76 });
        gbc.writeMem(0xeef1, { 0x8b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdc88, gbc.sp());
        EXPECT(0x103e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xeef1));
        // CB 76 01E2
        gbc.setState(0xc614, 0xf916, 0xb450, 0x9c72, 0xcaf, 0x81af, 0x1, 0x0);
        gbc.writeMem(0x81af, { 0x2c });
        gbc.writeMem(0xc614, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf916, gbc.sp());
        EXPECT(0xc616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x81af));
        EXPECT(0xcb, gbc.readMem(0xc614));
        EXPECT(0x76, gbc.readMem(0xc615));
        // CB 76 01E3
        gbc.setState(0x2925, 0xbdc7, 0x1fc0, 0xbd34, 0xea26, 0x4279, 0x1, 0x0);
        gbc.writeMem(0x2925, { 0xcb, 0x76 });
        gbc.writeMem(0x4279, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbdc7, gbc.sp());
        EXPECT(0x2927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01E4
        gbc.setState(0x752a, 0x7eef, 0xe100, 0x2eea, 0x70c5, 0x1c28, 0x1, 0x1);
        gbc.writeMem(0x1c28, { 0x79 });
        gbc.writeMem(0x752a, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7eef, gbc.sp());
        EXPECT(0x752c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01E5
        gbc.setState(0xeeb, 0xce7c, 0xeeb0, 0xd705, 0x1ad4, 0x57c8, 0x1, 0x0);
        gbc.writeMem(0xeeb, { 0xcb, 0x76 });
        gbc.writeMem(0x57c8, { 0xa1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xce7c, gbc.sp());
        EXPECT(0xeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01E6
        gbc.setState(0x5448, 0xe74e, 0x7350, 0xd8b4, 0x7415, 0xbfb2, 0x0, 0x0);
        gbc.writeMem(0x5448, { 0xcb, 0x76 });
        gbc.writeMem(0xbfb2, { 0x7d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe74e, gbc.sp());
        EXPECT(0x544a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbfb2));
        // CB 76 01E7
        gbc.setState(0xa45e, 0xbf79, 0x1af0, 0x313a, 0xcd88, 0xf283, 0x0, 0x0);
        gbc.writeMem(0xa45e, { 0xcb, 0x76 });
        gbc.writeMem(0xf283, { 0x62 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbf79, gbc.sp());
        EXPECT(0xa460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45e));
        EXPECT(0x76, gbc.readMem(0xa45f));
        EXPECT(0x62, gbc.readMem(0xf283));
        // CB 76 01E8
        gbc.setState(0xee48, 0x41cf, 0x9ff0, 0xed3d, 0x30dd, 0xf16c, 0x1, 0x1);
        gbc.writeMem(0xee48, { 0xcb, 0x76 });
        gbc.writeMem(0xf16c, { 0xc4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x41cf, gbc.sp());
        EXPECT(0xee4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee48));
        EXPECT(0x76, gbc.readMem(0xee49));
        EXPECT(0xc4, gbc.readMem(0xf16c));
        // CB 76 01E9
        gbc.setState(0xc78e, 0x3864, 0x2830, 0x868d, 0xb525, 0x3548, 0x0, 0x1);
        gbc.writeMem(0x3548, { 0x13 });
        gbc.writeMem(0xc78e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3864, gbc.sp());
        EXPECT(0xc790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78e));
        EXPECT(0x76, gbc.readMem(0xc78f));
        // CB 76 01EA
        gbc.setState(0xd345, 0x172e, 0x33e0, 0xca81, 0x93c8, 0x4a9, 0x1, 0x0);
        gbc.writeMem(0x4a9, { 0xd1 });
        gbc.writeMem(0xd345, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x172e, gbc.sp());
        EXPECT(0xd347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd345));
        EXPECT(0x76, gbc.readMem(0xd346));
        // CB 76 01EB
        gbc.setState(0x59dc, 0xf56a, 0xd5f0, 0xf4eb, 0x5357, 0xf6a5, 0x0, 0x0);
        gbc.writeMem(0x59dc, { 0xcb, 0x76 });
        gbc.writeMem(0xf6a5, { 0xb0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf56a, gbc.sp());
        EXPECT(0x59de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xf6a5));
        // CB 76 01ED
        gbc.setState(0x5354, 0x1df6, 0x84f0, 0xb6ee, 0xc6e0, 0x7c98, 0x1, 0x0);
        gbc.writeMem(0x5354, { 0xcb, 0x76 });
        gbc.writeMem(0x7c98, { 0xd6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1df6, gbc.sp());
        EXPECT(0x5356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01EE
        gbc.setState(0x73bd, 0x7d13, 0x5ef0, 0xe062, 0xd249, 0x2db6, 0x1, 0x1);
        gbc.writeMem(0x2db6, { 0xcb });
        gbc.writeMem(0x73bd, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7d13, gbc.sp());
        EXPECT(0x73bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01F0
        gbc.setState(0x80a4, 0xc75a, 0x5a70, 0xbd66, 0x4481, 0xe1cd, 0x0, 0x1);
        gbc.writeMem(0x80a4, { 0xcb, 0x76 });
        gbc.writeMem(0xe1cd, { 0x39 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc75a, gbc.sp());
        EXPECT(0x80a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a4));
        EXPECT(0x76, gbc.readMem(0x80a5));
        EXPECT(0x39, gbc.readMem(0xe1cd));
        // CB 76 01F1
        gbc.setState(0x5c57, 0x7d92, 0xff90, 0xd148, 0x5961, 0x218, 0x1, 0x0);
        gbc.writeMem(0x218, { 0x3d });
        gbc.writeMem(0x5c57, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7d92, gbc.sp());
        EXPECT(0x5c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01F2
        gbc.setState(0x6226, 0x422c, 0x26f0, 0xded3, 0x8060, 0x3f87, 0x0, 0x0);
        gbc.writeMem(0x3f87, { 0xbc });
        gbc.writeMem(0x6226, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x422c, gbc.sp());
        EXPECT(0x6228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01F3
        gbc.setState(0xc9eb, 0xaaed, 0xb380, 0x3d9, 0x3cb3, 0xe3b1, 0x0, 0x1);
        gbc.writeMem(0xc9eb, { 0xcb, 0x76 });
        gbc.writeMem(0xe3b1, { 0xf3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaaed, gbc.sp());
        EXPECT(0xc9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9eb));
        EXPECT(0x76, gbc.readMem(0xc9ec));
        EXPECT(0xf3, gbc.readMem(0xe3b1));
        // CB 76 01F4
        gbc.setState(0xd6fe, 0x478, 0xb9b0, 0x2cf, 0x4260, 0x3b4c, 0x0, 0x0);
        gbc.writeMem(0x3b4c, { 0x7d });
        gbc.writeMem(0xd6fe, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x478, gbc.sp());
        EXPECT(0xd700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fe));
        EXPECT(0x76, gbc.readMem(0xd6ff));
        // CB 76 01F5
        gbc.setState(0x4b5b, 0xb6c6, 0xac20, 0x5f4f, 0xf5fe, 0xc118, 0x1, 0x0);
        gbc.writeMem(0x4b5b, { 0xcb, 0x76 });
        gbc.writeMem(0xc118, { 0xbd });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb6c6, gbc.sp());
        EXPECT(0x4b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc118));
        // CB 76 01F6
        gbc.setState(0x69a8, 0x9f3a, 0x77d0, 0x1499, 0x4d15, 0xd991, 0x1, 0x0);
        gbc.writeMem(0x69a8, { 0xcb, 0x76 });
        gbc.writeMem(0xd991, { 0x22 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9f3a, gbc.sp());
        EXPECT(0x69aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xd991));
        // CB 76 01F7
        gbc.setState(0xc9f9, 0x2daa, 0x5b0, 0xe017, 0x89ec, 0xbe6e, 0x1, 0x0);
        gbc.writeMem(0xbe6e, { 0xb6 });
        gbc.writeMem(0xc9f9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2daa, gbc.sp());
        EXPECT(0xc9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xbe6e));
        EXPECT(0xcb, gbc.readMem(0xc9f9));
        EXPECT(0x76, gbc.readMem(0xc9fa));
        // CB 76 01F8
        gbc.setState(0x7931, 0x658, 0x2e40, 0x8f61, 0xb1bb, 0x5aaf, 0x0, 0x1);
        gbc.writeMem(0x5aaf, { 0xad });
        gbc.writeMem(0x7931, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x658, gbc.sp());
        EXPECT(0x7933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01F9
        gbc.setState(0xcb67, 0xcd87, 0x8100, 0xc4bf, 0x35ea, 0xa7e3, 0x0, 0x1);
        gbc.writeMem(0xa7e3, { 0x45 });
        gbc.writeMem(0xcb67, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcd87, gbc.sp());
        EXPECT(0xcb69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xa7e3));
        EXPECT(0xcb, gbc.readMem(0xcb67));
        EXPECT(0x76, gbc.readMem(0xcb68));
        // CB 76 01FB
        gbc.setState(0x3d2d, 0x396d, 0x3090, 0x9bc7, 0x24b3, 0x6afd, 0x0, 0x1);
        gbc.writeMem(0x3d2d, { 0xcb, 0x76 });
        gbc.writeMem(0x6afd, { 0x46 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x396d, gbc.sp());
        EXPECT(0x3d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 01FC
        gbc.setState(0x5efd, 0x4ff5, 0x31a0, 0x80c8, 0x6db, 0x799c, 0x1, 0x0);
        gbc.writeMem(0x5efd, { 0xcb, 0x76 });
        gbc.writeMem(0x799c, { 0x72 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4ff5, gbc.sp());
        EXPECT(0x5eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 01FD
        gbc.setState(0x5b28, 0x980c, 0x9790, 0x7f6a, 0x6984, 0xf874, 0x0, 0x0);
        gbc.writeMem(0x5b28, { 0xcb, 0x76 });
        gbc.writeMem(0xf874, { 0x44 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x980c, gbc.sp());
        EXPECT(0x5b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xf874));
        // CB 76 01FE
        gbc.setState(0xec25, 0xa096, 0x16d0, 0x74b0, 0x7959, 0x142c, 0x1, 0x0);
        gbc.writeMem(0x142c, { 0xf7 });
        gbc.writeMem(0xec25, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa096, gbc.sp());
        EXPECT(0xec27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec25));
        EXPECT(0x76, gbc.readMem(0xec26));
        // CB 76 01FF
        gbc.setState(0xcf20, 0x63c0, 0x3710, 0x8a6c, 0x1ca9, 0xabed, 0x0, 0x0);
        gbc.writeMem(0xabed, { 0x4a });
        gbc.writeMem(0xcf20, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x63c0, gbc.sp());
        EXPECT(0xcf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xabed));
        EXPECT(0xcb, gbc.readMem(0xcf20));
        EXPECT(0x76, gbc.readMem(0xcf21));
        // CB 76 0200
        gbc.setState(0x7f5b, 0x3a4c, 0xbdb0, 0x309a, 0xc120, 0xa9ff, 0x0, 0x0);
        gbc.writeMem(0x7f5b, { 0xcb, 0x76 });
        gbc.writeMem(0xa9ff, { 0x19 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3a4c, gbc.sp());
        EXPECT(0x7f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa9ff));
        // CB 76 0201
        gbc.setState(0x869, 0xfa99, 0xc110, 0x3316, 0x1c61, 0xedc8, 0x0, 0x0);
        gbc.writeMem(0x869, { 0xcb, 0x76 });
        gbc.writeMem(0xedc8, { 0x7f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfa99, gbc.sp());
        EXPECT(0x86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xedc8));
        // CB 76 0202
        gbc.setState(0x85fb, 0xc2d5, 0xf110, 0x3f58, 0x6d10, 0xe811, 0x1, 0x0);
        gbc.writeMem(0x85fb, { 0xcb, 0x76 });
        gbc.writeMem(0xe811, { 0xb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc2d5, gbc.sp());
        EXPECT(0x85fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fb));
        EXPECT(0x76, gbc.readMem(0x85fc));
        EXPECT(0xb, gbc.readMem(0xe811));
        // CB 76 0203
        gbc.setState(0x1a16, 0x2ddd, 0xd4a0, 0xd5a7, 0x90bd, 0x43dc, 0x0, 0x1);
        gbc.writeMem(0x1a16, { 0xcb, 0x76 });
        gbc.writeMem(0x43dc, { 0xf4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2ddd, gbc.sp());
        EXPECT(0x1a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0204
        gbc.setState(0x8579, 0xe183, 0x8f50, 0x5ae3, 0xe766, 0x47e4, 0x0, 0x0);
        gbc.writeMem(0x47e4, { 0x84 });
        gbc.writeMem(0x8579, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe183, gbc.sp());
        EXPECT(0x857b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8579));
        EXPECT(0x76, gbc.readMem(0x857a));
        // CB 76 0205
        gbc.setState(0xa995, 0x8760, 0x5cd0, 0x2d33, 0x354e, 0xe468, 0x0, 0x1);
        gbc.writeMem(0xa995, { 0xcb, 0x76 });
        gbc.writeMem(0xe468, { 0x15 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8760, gbc.sp());
        EXPECT(0xa997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa995));
        EXPECT(0x76, gbc.readMem(0xa996));
        EXPECT(0x15, gbc.readMem(0xe468));
        // CB 76 0206
        gbc.setState(0x7f81, 0x8c62, 0xbcc0, 0x200f, 0x2ff3, 0xd305, 0x0, 0x0);
        gbc.writeMem(0x7f81, { 0xcb, 0x76 });
        gbc.writeMem(0xd305, { 0xa7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8c62, gbc.sp());
        EXPECT(0x7f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd305));
        // CB 76 0207
        gbc.setState(0xb30f, 0xab95, 0x5560, 0x41fb, 0x1234, 0x9a7e, 0x1, 0x1);
        gbc.writeMem(0x9a7e, { 0x36 });
        gbc.writeMem(0xb30f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xab95, gbc.sp());
        EXPECT(0xb311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9a7e));
        EXPECT(0xcb, gbc.readMem(0xb30f));
        EXPECT(0x76, gbc.readMem(0xb310));
        // CB 76 0208
        gbc.setState(0x8eb6, 0xe248, 0x12f0, 0xbc30, 0xf5ce, 0x6d6d, 0x1, 0x1);
        gbc.writeMem(0x6d6d, { 0xb1 });
        gbc.writeMem(0x8eb6, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe248, gbc.sp());
        EXPECT(0x8eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb6));
        EXPECT(0x76, gbc.readMem(0x8eb7));
        // CB 76 0209
        gbc.setState(0x3e45, 0x619d, 0x89f0, 0xb51f, 0x85cb, 0x2842, 0x1, 0x0);
        gbc.writeMem(0x2842, { 0x47 });
        gbc.writeMem(0x3e45, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x619d, gbc.sp());
        EXPECT(0x3e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 020A
        gbc.setState(0x3fce, 0xd1c5, 0xe6f0, 0xfb87, 0x3683, 0xfdc7, 0x1, 0x1);
        gbc.writeMem(0x3fce, { 0xcb, 0x76 });
        gbc.writeMem(0xfdc7, { 0xf5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd1c5, gbc.sp());
        EXPECT(0x3fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xfdc7));
        // CB 76 020C
        gbc.setState(0xdff2, 0x92c2, 0xf590, 0xbe62, 0xf3a8, 0x1b23, 0x0, 0x0);
        gbc.writeMem(0x1b23, { 0xbf });
        gbc.writeMem(0xdff2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x92c2, gbc.sp());
        EXPECT(0xdff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff2));
        EXPECT(0x76, gbc.readMem(0xdff3));
        // CB 76 020D
        gbc.setState(0x885f, 0xf30b, 0x320, 0x8a4e, 0x92af, 0xf038, 0x1, 0x1);
        gbc.writeMem(0x885f, { 0xcb, 0x76 });
        gbc.writeMem(0xf038, { 0x53 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf30b, gbc.sp());
        EXPECT(0x8861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x885f));
        EXPECT(0x76, gbc.readMem(0x8860));
        EXPECT(0x53, gbc.readMem(0xf038));
        // CB 76 020E
        gbc.setState(0x9c45, 0xa19e, 0x3400, 0x8d92, 0x86c, 0x1300, 0x1, 0x1);
        gbc.writeMem(0x1300, { 0x10 });
        gbc.writeMem(0x9c45, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa19e, gbc.sp());
        EXPECT(0x9c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c45));
        EXPECT(0x76, gbc.readMem(0x9c46));
        // CB 76 020F
        gbc.setState(0x1981, 0x891c, 0xf3c0, 0x5a78, 0xb33a, 0x79f9, 0x1, 0x0);
        gbc.writeMem(0x1981, { 0xcb, 0x76 });
        gbc.writeMem(0x79f9, { 0x1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x891c, gbc.sp());
        EXPECT(0x1983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0210
        gbc.setState(0x474c, 0xebe4, 0xaaa0, 0x5063, 0xd04d, 0x65e9, 0x1, 0x1);
        gbc.writeMem(0x474c, { 0xcb, 0x76 });
        gbc.writeMem(0x65e9, { 0x82 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xebe4, gbc.sp());
        EXPECT(0x474e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0211
        gbc.setState(0x5cfb, 0x432d, 0xe100, 0xf3df, 0x9ea1, 0xc9ce, 0x1, 0x1);
        gbc.writeMem(0x5cfb, { 0xcb, 0x76 });
        gbc.writeMem(0xc9ce, { 0xdd });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x432d, gbc.sp());
        EXPECT(0x5cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xc9ce));
        // CB 76 0212
        gbc.setState(0x7d8, 0x952d, 0x8b20, 0x5d0a, 0x960e, 0xd1d5, 0x0, 0x1);
        gbc.writeMem(0x7d8, { 0xcb, 0x76 });
        gbc.writeMem(0xd1d5, { 0xdc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x952d, gbc.sp());
        EXPECT(0x7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xd1d5));
        // CB 76 0213
        gbc.setState(0x9491, 0xf51d, 0x3860, 0xd649, 0xc412, 0x469f, 0x1, 0x0);
        gbc.writeMem(0x469f, { 0x7b });
        gbc.writeMem(0x9491, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf51d, gbc.sp());
        EXPECT(0x9493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9491));
        EXPECT(0x76, gbc.readMem(0x9492));
        // CB 76 0214
        gbc.setState(0xa1f2, 0x5a36, 0x1080, 0xe139, 0x98c0, 0x10ac, 0x0, 0x0);
        gbc.writeMem(0x10ac, { 0x21 });
        gbc.writeMem(0xa1f2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5a36, gbc.sp());
        EXPECT(0xa1f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f2));
        EXPECT(0x76, gbc.readMem(0xa1f3));
        // CB 76 0215
        gbc.setState(0x5009, 0x94c9, 0x58c0, 0x3f83, 0xe445, 0xf78, 0x1, 0x0);
        gbc.writeMem(0xf78, { 0xd6 });
        gbc.writeMem(0x5009, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x94c9, gbc.sp());
        EXPECT(0x500b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0216
        gbc.setState(0xa9a2, 0x59c4, 0xfcc0, 0x31d1, 0x3607, 0x57a6, 0x0, 0x1);
        gbc.writeMem(0x57a6, { 0x29 });
        gbc.writeMem(0xa9a2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x59c4, gbc.sp());
        EXPECT(0xa9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a2));
        EXPECT(0x76, gbc.readMem(0xa9a3));
        // CB 76 0217
        gbc.setState(0x47f1, 0xdb4, 0x9120, 0x1b2, 0xb635, 0xa7a5, 0x0, 0x1);
        gbc.writeMem(0x47f1, { 0xcb, 0x76 });
        gbc.writeMem(0xa7a5, { 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdb4, gbc.sp());
        EXPECT(0x47f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa7a5));
        // CB 76 0218
        gbc.setState(0x3ce1, 0x645e, 0x9bf0, 0xa085, 0x3c54, 0xdaa8, 0x1, 0x0);
        gbc.writeMem(0x3ce1, { 0xcb, 0x76 });
        gbc.writeMem(0xdaa8, { 0x1e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x645e, gbc.sp());
        EXPECT(0x3ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xdaa8));
        // CB 76 0219
        gbc.setState(0xecc2, 0x9690, 0xd3e0, 0x50e3, 0x706c, 0x5c73, 0x1, 0x1);
        gbc.writeMem(0x5c73, { 0xd5 });
        gbc.writeMem(0xecc2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9690, gbc.sp());
        EXPECT(0xecc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc2));
        EXPECT(0x76, gbc.readMem(0xecc3));
        // CB 76 021A
        gbc.setState(0x5547, 0xf131, 0x7970, 0x10d1, 0xaf5d, 0xeaf7, 0x0, 0x1);
        gbc.writeMem(0x5547, { 0xcb, 0x76 });
        gbc.writeMem(0xeaf7, { 0xc1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf131, gbc.sp());
        EXPECT(0x5549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xeaf7));
        // CB 76 021B
        gbc.setState(0x1ed, 0xfc16, 0x8400, 0xefc5, 0xc5f, 0xbf52, 0x1, 0x0);
        gbc.writeMem(0x1ed, { 0xcb, 0x76 });
        gbc.writeMem(0xbf52, { 0xcd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfc16, gbc.sp());
        EXPECT(0x1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xbf52));
        // CB 76 021C
        gbc.setState(0xd677, 0x370d, 0x3750, 0xd833, 0xccf1, 0xb002, 0x1, 0x0);
        gbc.writeMem(0xb002, { 0x38 });
        gbc.writeMem(0xd677, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x370d, gbc.sp());
        EXPECT(0xd679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb002));
        EXPECT(0xcb, gbc.readMem(0xd677));
        EXPECT(0x76, gbc.readMem(0xd678));
        // CB 76 021E
        gbc.setState(0xb745, 0x72d, 0xffb0, 0x7944, 0x40bb, 0x9fa0, 0x0, 0x1);
        gbc.writeMem(0x9fa0, { 0xa9 });
        gbc.writeMem(0xb745, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x72d, gbc.sp());
        EXPECT(0xb747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x9fa0));
        EXPECT(0xcb, gbc.readMem(0xb745));
        EXPECT(0x76, gbc.readMem(0xb746));
        // CB 76 021F
        gbc.setState(0x9e18, 0xb53a, 0xfcc0, 0x888d, 0xb17e, 0x1085, 0x0, 0x0);
        gbc.writeMem(0x1085, { 0xed });
        gbc.writeMem(0x9e18, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb53a, gbc.sp());
        EXPECT(0x9e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e18));
        EXPECT(0x76, gbc.readMem(0x9e19));
        // CB 76 0220
        gbc.setState(0xa3c6, 0xa1b5, 0xf740, 0x1ed0, 0xe617, 0xdc16, 0x0, 0x0);
        gbc.writeMem(0xa3c6, { 0xcb, 0x76 });
        gbc.writeMem(0xdc16, { 0x12 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa1b5, gbc.sp());
        EXPECT(0xa3c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c6));
        EXPECT(0x76, gbc.readMem(0xa3c7));
        EXPECT(0x12, gbc.readMem(0xdc16));
        // CB 76 0221
        gbc.setState(0xa9f0, 0x40cf, 0x8530, 0xb72b, 0x3b4c, 0x9780, 0x0, 0x1);
        gbc.writeMem(0x9780, { 0xe4 });
        gbc.writeMem(0xa9f0, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x40cf, gbc.sp());
        EXPECT(0xa9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x9780));
        EXPECT(0xcb, gbc.readMem(0xa9f0));
        EXPECT(0x76, gbc.readMem(0xa9f1));
        // CB 76 0222
        gbc.setState(0x7f96, 0xfdc7, 0xf930, 0x4dc8, 0x58d7, 0x3056, 0x1, 0x1);
        gbc.writeMem(0x3056, { 0x3c });
        gbc.writeMem(0x7f96, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfdc7, gbc.sp());
        EXPECT(0x7f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0223
        gbc.setState(0x1602, 0x4be2, 0x6ca0, 0xf109, 0x8a26, 0x5512, 0x1, 0x1);
        gbc.writeMem(0x1602, { 0xcb, 0x76 });
        gbc.writeMem(0x5512, { 0x35 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4be2, gbc.sp());
        EXPECT(0x1604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0224
        gbc.setState(0x980f, 0x1d23, 0xa3c0, 0x13a2, 0x4eec, 0x60b5, 0x0, 0x1);
        gbc.writeMem(0x60b5, { 0xac });
        gbc.writeMem(0x980f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1d23, gbc.sp());
        EXPECT(0x9811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x980f));
        EXPECT(0x76, gbc.readMem(0x9810));
        // CB 76 0225
        gbc.setState(0x2b32, 0xebc5, 0x6a00, 0xa7f8, 0x6f3f, 0x33b0, 0x1, 0x1);
        gbc.writeMem(0x2b32, { 0xcb, 0x76 });
        gbc.writeMem(0x33b0, { 0xa0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xebc5, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0226
        gbc.setState(0x7469, 0x914c, 0x3980, 0x4ac1, 0x4374, 0xac72, 0x0, 0x0);
        gbc.writeMem(0x7469, { 0xcb, 0x76 });
        gbc.writeMem(0xac72, { 0x66 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x914c, gbc.sp());
        EXPECT(0x746b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xac72));
        // CB 76 0227
        gbc.setState(0xd59c, 0x589c, 0xabc0, 0x4591, 0x5f27, 0xb62d, 0x1, 0x0);
        gbc.writeMem(0xb62d, { 0x24 });
        gbc.writeMem(0xd59c, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x589c, gbc.sp());
        EXPECT(0xd59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xb62d));
        EXPECT(0xcb, gbc.readMem(0xd59c));
        EXPECT(0x76, gbc.readMem(0xd59d));
        // CB 76 0228
        gbc.setState(0xd27b, 0xcd94, 0x1190, 0xc41b, 0xf22e, 0x2453, 0x0, 0x1);
        gbc.writeMem(0x2453, { 0x5d });
        gbc.writeMem(0xd27b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcd94, gbc.sp());
        EXPECT(0xd27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27b));
        EXPECT(0x76, gbc.readMem(0xd27c));
        // CB 76 0229
        gbc.setState(0x1db7, 0x88bb, 0xc8d0, 0x7f66, 0x8e5a, 0x1f0e, 0x0, 0x0);
        gbc.writeMem(0x1db7, { 0xcb, 0x76 });
        gbc.writeMem(0x1f0e, { 0xae });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x88bb, gbc.sp());
        EXPECT(0x1db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 022A
        gbc.setState(0x5c67, 0xda1, 0x1df0, 0x2733, 0x8d9f, 0xea1e, 0x1, 0x0);
        gbc.writeMem(0x5c67, { 0xcb, 0x76 });
        gbc.writeMem(0xea1e, { 0x9a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xda1, gbc.sp());
        EXPECT(0x5c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xea1e));
        // CB 76 022B
        gbc.setState(0x65db, 0x458a, 0x90e0, 0x2f4d, 0x4cde, 0x744, 0x1, 0x0);
        gbc.writeMem(0x744, { 0x1c });
        gbc.writeMem(0x65db, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x458a, gbc.sp());
        EXPECT(0x65dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 022D
        gbc.setState(0x2ee9, 0x4bc4, 0x14b0, 0xf486, 0xaf16, 0x679, 0x0, 0x1);
        gbc.writeMem(0x679, { 0xc6 });
        gbc.writeMem(0x2ee9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4bc4, gbc.sp());
        EXPECT(0x2eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 022E
        gbc.setState(0x45db, 0xec58, 0xb10, 0xc9c9, 0xd4c5, 0xb38, 0x1, 0x0);
        gbc.writeMem(0xb38, { 0x9b });
        gbc.writeMem(0x45db, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xec58, gbc.sp());
        EXPECT(0x45dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 022F
        gbc.setState(0xd30c, 0xb2f1, 0x7b50, 0x72f6, 0xa2ee, 0xe8ef, 0x0, 0x1);
        gbc.writeMem(0xd30c, { 0xcb, 0x76 });
        gbc.writeMem(0xe8ef, { 0x60 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb2f1, gbc.sp());
        EXPECT(0xd30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd30c));
        EXPECT(0x76, gbc.readMem(0xd30d));
        EXPECT(0x60, gbc.readMem(0xe8ef));
        // CB 76 0230
        gbc.setState(0x6ae0, 0xaed6, 0xaa80, 0x571e, 0x8333, 0x608b, 0x1, 0x0);
        gbc.writeMem(0x608b, { 0xa6 });
        gbc.writeMem(0x6ae0, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaed6, gbc.sp());
        EXPECT(0x6ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0231
        gbc.setState(0xab53, 0x7da9, 0x43f0, 0xdd72, 0xbc74, 0x735f, 0x0, 0x1);
        gbc.writeMem(0x735f, { 0x75 });
        gbc.writeMem(0xab53, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7da9, gbc.sp());
        EXPECT(0xab55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab53));
        EXPECT(0x76, gbc.readMem(0xab54));
        // CB 76 0232
        gbc.setState(0xad37, 0x7fec, 0x45b0, 0xf008, 0xbe51, 0xce0b, 0x0, 0x1);
        gbc.writeMem(0xad37, { 0xcb, 0x76 });
        gbc.writeMem(0xce0b, { 0x9e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7fec, gbc.sp());
        EXPECT(0xad39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad37));
        EXPECT(0x76, gbc.readMem(0xad38));
        EXPECT(0x9e, gbc.readMem(0xce0b));
        // CB 76 0233
        gbc.setState(0xbff2, 0xfc32, 0x3270, 0xc533, 0x7bd4, 0xffd3, 0x1, 0x0);
        gbc.writeMem(0xbff2, { 0xcb, 0x76 });
        gbc.writeMem(0xffd3, { 0xbb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfc32, gbc.sp());
        EXPECT(0xbff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff2));
        EXPECT(0x76, gbc.readMem(0xbff3));
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // CB 76 0234
        gbc.setState(0xe1b9, 0x1cc0, 0x2ed0, 0xd89, 0x7590, 0xb313, 0x1, 0x0);
        gbc.writeMem(0xb313, { 0x51 });
        gbc.writeMem(0xe1b9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1cc0, gbc.sp());
        EXPECT(0xe1bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb313));
        EXPECT(0xcb, gbc.readMem(0xe1b9));
        EXPECT(0x76, gbc.readMem(0xe1ba));
        // CB 76 0235
        gbc.setState(0xcea4, 0x7e3a, 0xa650, 0xa7d7, 0x48d0, 0x5f9e, 0x1, 0x1);
        gbc.writeMem(0x5f9e, { 0x4e });
        gbc.writeMem(0xcea4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7e3a, gbc.sp());
        EXPECT(0xcea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea4));
        EXPECT(0x76, gbc.readMem(0xcea5));
        // CB 76 0236
        gbc.setState(0x27dd, 0x3ec9, 0xac0, 0xb173, 0xa8eb, 0xd57d, 0x0, 0x1);
        gbc.writeMem(0x27dd, { 0xcb, 0x76 });
        gbc.writeMem(0xd57d, { 0xab });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3ec9, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xd57d));
        // CB 76 0237
        gbc.setState(0xedaa, 0x88c9, 0xb120, 0xde5c, 0xf22b, 0xe948, 0x1, 0x1);
        gbc.writeMem(0xe948, { 0xa0 });
        gbc.writeMem(0xedaa, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x88c9, gbc.sp());
        EXPECT(0xedac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe948));
        EXPECT(0xcb, gbc.readMem(0xedaa));
        EXPECT(0x76, gbc.readMem(0xedab));
        // CB 76 0238
        gbc.setState(0x9cd4, 0x105c, 0x7e90, 0x6afa, 0x7016, 0x16df, 0x1, 0x0);
        gbc.writeMem(0x16df, { 0x40 });
        gbc.writeMem(0x9cd4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x105c, gbc.sp());
        EXPECT(0x9cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd4));
        EXPECT(0x76, gbc.readMem(0x9cd5));
        // CB 76 0239
        gbc.setState(0x8b12, 0xed65, 0x8fa0, 0xe96f, 0x806c, 0xb2c, 0x1, 0x0);
        gbc.writeMem(0xb2c, { 0xda });
        gbc.writeMem(0x8b12, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xed65, gbc.sp());
        EXPECT(0x8b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b12));
        EXPECT(0x76, gbc.readMem(0x8b13));
        // CB 76 023A
        gbc.setState(0x22aa, 0x92e, 0xdd70, 0x4eeb, 0xdf39, 0xb5dd, 0x0, 0x1);
        gbc.writeMem(0x22aa, { 0xcb, 0x76 });
        gbc.writeMem(0xb5dd, { 0x8c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x92e, gbc.sp());
        EXPECT(0x22ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb5dd));
        // CB 76 023B
        gbc.setState(0x7b98, 0xa12a, 0xc30, 0xfb19, 0x90a2, 0xd1ca, 0x0, 0x0);
        gbc.writeMem(0x7b98, { 0xcb, 0x76 });
        gbc.writeMem(0xd1ca, { 0x38 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa12a, gbc.sp());
        EXPECT(0x7b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd1ca));
        // CB 76 023C
        gbc.setState(0x7d9c, 0x4ff0, 0x54b0, 0x7968, 0x9982, 0x5095, 0x1, 0x0);
        gbc.writeMem(0x5095, { 0x5f });
        gbc.writeMem(0x7d9c, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4ff0, gbc.sp());
        EXPECT(0x7d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 023D
        gbc.setState(0xdeff, 0x897a, 0x6ca0, 0x175, 0x109d, 0xfcfa, 0x1, 0x0);
        gbc.writeMem(0xdeff, { 0xcb, 0x76 });
        gbc.writeMem(0xfcfa, { 0x31 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x897a, gbc.sp());
        EXPECT(0xdf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeff));
        EXPECT(0x76, gbc.readMem(0xdf00));
        EXPECT(0x31, gbc.readMem(0xfcfa));
        // CB 76 023E
        gbc.setState(0x3709, 0x8452, 0xda30, 0x4215, 0x27a2, 0x3051, 0x0, 0x1);
        gbc.writeMem(0x3051, { 0xa5 });
        gbc.writeMem(0x3709, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8452, gbc.sp());
        EXPECT(0x370b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 023F
        gbc.setState(0x5fef, 0x7598, 0x59f0, 0x3ed8, 0xbf27, 0x817b, 0x0, 0x1);
        gbc.writeMem(0x5fef, { 0xcb, 0x76 });
        gbc.writeMem(0x817b, { 0x87 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7598, gbc.sp());
        EXPECT(0x5ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x817b));
        // CB 76 0240
        gbc.setState(0xd495, 0xf4b8, 0x6c0, 0x1420, 0xa5e6, 0x4f66, 0x0, 0x0);
        gbc.writeMem(0x4f66, { 0x24 });
        gbc.writeMem(0xd495, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf4b8, gbc.sp());
        EXPECT(0xd497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd495));
        EXPECT(0x76, gbc.readMem(0xd496));
        // CB 76 0241
        gbc.setState(0x804f, 0xbeb3, 0x1e60, 0x7dac, 0xe9dd, 0x9fae, 0x0, 0x1);
        gbc.writeMem(0x804f, { 0xcb, 0x76 });
        gbc.writeMem(0x9fae, { 0xbb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbeb3, gbc.sp());
        EXPECT(0x8051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804f));
        EXPECT(0x76, gbc.readMem(0x8050));
        EXPECT(0xbb, gbc.readMem(0x9fae));
        // CB 76 0242
        gbc.setState(0x5812, 0xed53, 0x7020, 0x5f6d, 0xe0d3, 0x57b1, 0x0, 0x0);
        gbc.writeMem(0x57b1, { 0x9f });
        gbc.writeMem(0x5812, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xed53, gbc.sp());
        EXPECT(0x5814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0243
        gbc.setState(0xeeb9, 0xa37, 0xd7c0, 0x48b9, 0xec1a, 0x5594, 0x1, 0x0);
        gbc.writeMem(0x5594, { 0xc0 });
        gbc.writeMem(0xeeb9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa37, gbc.sp());
        EXPECT(0xeebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb9));
        EXPECT(0x76, gbc.readMem(0xeeba));
        // CB 76 0244
        gbc.setState(0x2b88, 0xe1e9, 0x4e60, 0xfc37, 0x459a, 0xfe70, 0x0, 0x1);
        gbc.writeMem(0x2b88, { 0xcb, 0x76 });
        gbc.writeMem(0xfe70, { 0xc9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe1e9, gbc.sp());
        EXPECT(0x2b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xfe70));
        // CB 76 0245
        gbc.setState(0xba07, 0x4018, 0x5d30, 0x9120, 0x7701, 0x9675, 0x0, 0x0);
        gbc.writeMem(0x9675, { 0xc0 });
        gbc.writeMem(0xba07, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4018, gbc.sp());
        EXPECT(0xba09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9675));
        EXPECT(0xcb, gbc.readMem(0xba07));
        EXPECT(0x76, gbc.readMem(0xba08));
        // CB 76 0246
        gbc.setState(0x3fd, 0xd347, 0xc970, 0x75fc, 0x1791, 0xa259, 0x0, 0x1);
        gbc.writeMem(0x3fd, { 0xcb, 0x76 });
        gbc.writeMem(0xa259, { 0xde });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd347, gbc.sp());
        EXPECT(0x3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xa259));
        // CB 76 0247
        gbc.setState(0x3662, 0xf061, 0xa5a0, 0x44f2, 0xc178, 0x4e01, 0x1, 0x1);
        gbc.writeMem(0x3662, { 0xcb, 0x76 });
        gbc.writeMem(0x4e01, { 0x8f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf061, gbc.sp());
        EXPECT(0x3664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0248
        gbc.setState(0x9513, 0xa44a, 0xe070, 0xc5f1, 0x799, 0x5eb6, 0x1, 0x1);
        gbc.writeMem(0x5eb6, { 0x82 });
        gbc.writeMem(0x9513, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa44a, gbc.sp());
        EXPECT(0x9515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9513));
        EXPECT(0x76, gbc.readMem(0x9514));
        // CB 76 0249
        gbc.setState(0x26be, 0xb4b6, 0x87f0, 0xc440, 0x3f08, 0x449d, 0x1, 0x0);
        gbc.writeMem(0x26be, { 0xcb, 0x76 });
        gbc.writeMem(0x449d, { 0xed });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb4b6, gbc.sp());
        EXPECT(0x26c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 024A
        gbc.setState(0x11d3, 0x41ec, 0x23b0, 0x4030, 0x6217, 0x5fe6, 0x0, 0x0);
        gbc.writeMem(0x11d3, { 0xcb, 0x76 });
        gbc.writeMem(0x5fe6, { 0x40 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x41ec, gbc.sp());
        EXPECT(0x11d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 024B
        gbc.setState(0xebce, 0x2614, 0xedb0, 0x3a4c, 0xc165, 0x72c3, 0x1, 0x0);
        gbc.writeMem(0x72c3, { 0x66 });
        gbc.writeMem(0xebce, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2614, gbc.sp());
        EXPECT(0xebd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebce));
        EXPECT(0x76, gbc.readMem(0xebcf));
        // CB 76 024C
        gbc.setState(0x4c46, 0x93d0, 0x8630, 0x2e83, 0xdb47, 0xd10c, 0x0, 0x1);
        gbc.writeMem(0x4c46, { 0xcb, 0x76 });
        gbc.writeMem(0xd10c, { 0x91 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x93d0, gbc.sp());
        EXPECT(0x4c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd10c));
        // CB 76 024D
        gbc.setState(0xe32f, 0x7b8d, 0xd8a0, 0xb256, 0x7dec, 0xf1d5, 0x0, 0x1);
        gbc.writeMem(0xe32f, { 0xcb, 0x76 });
        gbc.writeMem(0xf1d5, { 0x46 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7b8d, gbc.sp());
        EXPECT(0xe331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe32f));
        EXPECT(0x76, gbc.readMem(0xe330));
        EXPECT(0x46, gbc.readMem(0xf1d5));
        // CB 76 024E
        gbc.setState(0xdc9, 0xf461, 0x6240, 0x12df, 0x4525, 0x6ef1, 0x1, 0x0);
        gbc.writeMem(0xdc9, { 0xcb, 0x76 });
        gbc.writeMem(0x6ef1, { 0xba });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf461, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 024F
        gbc.setState(0x940a, 0x5fdd, 0xed60, 0x176, 0x96c7, 0xb5ec, 0x1, 0x0);
        gbc.writeMem(0x940a, { 0xcb, 0x76 });
        gbc.writeMem(0xb5ec, { 0x3c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5fdd, gbc.sp());
        EXPECT(0x940c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940a));
        EXPECT(0x76, gbc.readMem(0x940b));
        EXPECT(0x3c, gbc.readMem(0xb5ec));
        // CB 76 0250
        gbc.setState(0x4971, 0xebdc, 0xea50, 0xc25d, 0x11d, 0x251b, 0x1, 0x1);
        gbc.writeMem(0x251b, { 0x0 });
        gbc.writeMem(0x4971, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xebdc, gbc.sp());
        EXPECT(0x4973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0251
        gbc.setState(0x4ee4, 0xb4c6, 0xdc70, 0x231d, 0x9a97, 0x8699, 0x1, 0x0);
        gbc.writeMem(0x4ee4, { 0xcb, 0x76 });
        gbc.writeMem(0x8699, { 0xd6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb4c6, gbc.sp());
        EXPECT(0x4ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8699));
        // CB 76 0252
        gbc.setState(0x1b17, 0x89fe, 0x5170, 0xd658, 0x57ed, 0xe8e5, 0x0, 0x1);
        gbc.writeMem(0x1b17, { 0xcb, 0x76 });
        gbc.writeMem(0xe8e5, { 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x89fe, gbc.sp());
        EXPECT(0x1b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe8e5));
        // CB 76 0253
        gbc.setState(0x1092, 0x6ce5, 0x2fb0, 0xbd7f, 0x1a58, 0xca63, 0x1, 0x1);
        gbc.writeMem(0x1092, { 0xcb, 0x76 });
        gbc.writeMem(0xca63, { 0x10 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6ce5, gbc.sp());
        EXPECT(0x1094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xca63));
        // CB 76 0254
        gbc.setState(0x3029, 0xf41b, 0xa500, 0xb892, 0xd286, 0x4239, 0x1, 0x1);
        gbc.writeMem(0x3029, { 0xcb, 0x76 });
        gbc.writeMem(0x4239, { 0x24 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf41b, gbc.sp());
        EXPECT(0x302b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0255
        gbc.setState(0x9d0d, 0x8654, 0xd6b0, 0x813f, 0x2a22, 0x8e1f, 0x1, 0x0);
        gbc.writeMem(0x8e1f, { 0x79 });
        gbc.writeMem(0x9d0d, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8654, gbc.sp());
        EXPECT(0x9d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8e1f));
        EXPECT(0xcb, gbc.readMem(0x9d0d));
        EXPECT(0x76, gbc.readMem(0x9d0e));
        // CB 76 0256
        gbc.setState(0xc53f, 0x5053, 0xe820, 0x5af8, 0xb5be, 0x4b2d, 0x0, 0x0);
        gbc.writeMem(0x4b2d, { 0xd7 });
        gbc.writeMem(0xc53f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5053, gbc.sp());
        EXPECT(0xc541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53f));
        EXPECT(0x76, gbc.readMem(0xc540));
        // CB 76 0257
        gbc.setState(0x7cbc, 0x400f, 0x8fc0, 0x61b0, 0x4b47, 0xe72, 0x0, 0x1);
        gbc.writeMem(0xe72, { 0xd1 });
        gbc.writeMem(0x7cbc, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x400f, gbc.sp());
        EXPECT(0x7cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0258
        gbc.setState(0x7462, 0x7acb, 0xecf0, 0xc8de, 0x9b2a, 0xe036, 0x0, 0x0);
        gbc.writeMem(0x7462, { 0xcb, 0x76 });
        gbc.writeMem(0xe036, { 0xd6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7acb, gbc.sp());
        EXPECT(0x7464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe036));
        // CB 76 0259
        gbc.setState(0xc106, 0x8b42, 0x5400, 0x677b, 0x5fc7, 0x295, 0x1, 0x0);
        gbc.writeMem(0x295, { 0x1 });
        gbc.writeMem(0xc106, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8b42, gbc.sp());
        EXPECT(0xc108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc106));
        EXPECT(0x76, gbc.readMem(0xc107));
        // CB 76 025A
        gbc.setState(0x31aa, 0x160f, 0xa300, 0x89e0, 0xb15c, 0x8281, 0x1, 0x0);
        gbc.writeMem(0x31aa, { 0xcb, 0x76 });
        gbc.writeMem(0x8281, { 0xb8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x160f, gbc.sp());
        EXPECT(0x31ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8281));
        // CB 76 025B
        gbc.setState(0x8f73, 0xbf9, 0x9870, 0x8a22, 0x89dd, 0x98a1, 0x1, 0x1);
        gbc.writeMem(0x8f73, { 0xcb, 0x76 });
        gbc.writeMem(0x98a1, { 0x56 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbf9, gbc.sp());
        EXPECT(0x8f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f73));
        EXPECT(0x76, gbc.readMem(0x8f74));
        EXPECT(0x56, gbc.readMem(0x98a1));
        // CB 76 025C
        gbc.setState(0x52e, 0x99b9, 0x9ee0, 0x7952, 0x9354, 0xf3a5, 0x1, 0x0);
        gbc.writeMem(0x52e, { 0xcb, 0x76 });
        gbc.writeMem(0xf3a5, { 0x11 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x99b9, gbc.sp());
        EXPECT(0x530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xf3a5));
        // CB 76 025E
        gbc.setState(0xca0, 0x233b, 0xcdf0, 0x29e, 0x90de, 0x6295, 0x0, 0x0);
        gbc.writeMem(0xca0, { 0xcb, 0x76 });
        gbc.writeMem(0x6295, { 0x66 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x233b, gbc.sp());
        EXPECT(0xca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 025F
        gbc.setState(0xc50b, 0x14b4, 0xf8d0, 0xa3f9, 0xb0a1, 0xca64, 0x0, 0x1);
        gbc.writeMem(0xc50b, { 0xcb, 0x76 });
        gbc.writeMem(0xca64, { 0xd5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x14b4, gbc.sp());
        EXPECT(0xc50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50b));
        EXPECT(0x76, gbc.readMem(0xc50c));
        EXPECT(0xd5, gbc.readMem(0xca64));
        // CB 76 0260
        gbc.setState(0xf5c, 0x2c41, 0xa0d0, 0x55e8, 0x6f15, 0x204c, 0x1, 0x0);
        gbc.writeMem(0xf5c, { 0xcb, 0x76 });
        gbc.writeMem(0x204c, { 0xb8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2c41, gbc.sp());
        EXPECT(0xf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0261
        gbc.setState(0x47d, 0x5e7, 0xdde0, 0xd4da, 0xf403, 0xfa6b, 0x1, 0x1);
        gbc.writeMem(0x47d, { 0xcb, 0x76 });
        gbc.writeMem(0xfa6b, { 0x2e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5e7, gbc.sp());
        EXPECT(0x47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xfa6b));
        // CB 76 0262
        gbc.setState(0x6b03, 0x2800, 0x1750, 0x1b7a, 0x540d, 0xfc0, 0x1, 0x1);
        gbc.writeMem(0xfc0, { 0x60 });
        gbc.writeMem(0x6b03, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2800, gbc.sp());
        EXPECT(0x6b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0263
        gbc.setState(0x8dad, 0xc7d9, 0xb990, 0xd540, 0x622e, 0x8726, 0x1, 0x1);
        gbc.writeMem(0x8726, { 0x99 });
        gbc.writeMem(0x8dad, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc7d9, gbc.sp());
        EXPECT(0x8daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8726));
        EXPECT(0xcb, gbc.readMem(0x8dad));
        EXPECT(0x76, gbc.readMem(0x8dae));
        // CB 76 0264
        gbc.setState(0xdafa, 0x5566, 0x7710, 0x2828, 0x6c27, 0xb1d1, 0x1, 0x0);
        gbc.writeMem(0xb1d1, { 0xa9 });
        gbc.writeMem(0xdafa, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5566, gbc.sp());
        EXPECT(0xdafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xb1d1));
        EXPECT(0xcb, gbc.readMem(0xdafa));
        EXPECT(0x76, gbc.readMem(0xdafb));
        // CB 76 0265
        gbc.setState(0x309f, 0xe955, 0x8f90, 0x8b20, 0x5050, 0x8419, 0x0, 0x1);
        gbc.writeMem(0x309f, { 0xcb, 0x76 });
        gbc.writeMem(0x8419, { 0xe2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe955, gbc.sp());
        EXPECT(0x30a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8419));
        // CB 76 0268
        gbc.setState(0xa39b, 0x2027, 0xc2a0, 0xf026, 0x78dd, 0xea56, 0x1, 0x0);
        gbc.writeMem(0xa39b, { 0xcb, 0x76 });
        gbc.writeMem(0xea56, { 0x2b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2027, gbc.sp());
        EXPECT(0xa39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39b));
        EXPECT(0x76, gbc.readMem(0xa39c));
        EXPECT(0x2b, gbc.readMem(0xea56));
        // CB 76 0269
        gbc.setState(0x299b, 0x2613, 0x69f0, 0xedde, 0xbc87, 0x35e0, 0x0, 0x0);
        gbc.writeMem(0x299b, { 0xcb, 0x76 });
        gbc.writeMem(0x35e0, { 0xf6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2613, gbc.sp());
        EXPECT(0x299d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 026A
        gbc.setState(0xbd18, 0x5b9e, 0x1f20, 0xa62d, 0xb10f, 0x2fb5, 0x1, 0x0);
        gbc.writeMem(0x2fb5, { 0x88 });
        gbc.writeMem(0xbd18, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5b9e, gbc.sp());
        EXPECT(0xbd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd18));
        EXPECT(0x76, gbc.readMem(0xbd19));
        // CB 76 026B
        gbc.setState(0xa0bd, 0xbb43, 0x7a00, 0xef54, 0x596f, 0xa53f, 0x0, 0x0);
        gbc.writeMem(0xa0bd, { 0xcb, 0x76 });
        gbc.writeMem(0xa53f, { 0xe1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbb43, gbc.sp());
        EXPECT(0xa0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0bd));
        EXPECT(0x76, gbc.readMem(0xa0be));
        EXPECT(0xe1, gbc.readMem(0xa53f));
        // CB 76 026C
        gbc.setState(0xc4ef, 0xa2b4, 0xd490, 0x9c20, 0x3179, 0x2615, 0x1, 0x1);
        gbc.writeMem(0x2615, { 0x5b });
        gbc.writeMem(0xc4ef, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa2b4, gbc.sp());
        EXPECT(0xc4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ef));
        EXPECT(0x76, gbc.readMem(0xc4f0));
        // CB 76 026D
        gbc.setState(0x823a, 0xb2b5, 0x100, 0xda4c, 0xa4b1, 0x8c4, 0x1, 0x1);
        gbc.writeMem(0x8c4, { 0x38 });
        gbc.writeMem(0x823a, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb2b5, gbc.sp());
        EXPECT(0x823c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823a));
        EXPECT(0x76, gbc.readMem(0x823b));
        // CB 76 026E
        gbc.setState(0xdaf2, 0x5f2a, 0x4070, 0x2baf, 0x7383, 0xc7d9, 0x1, 0x1);
        gbc.writeMem(0xc7d9, { 0xf7 });
        gbc.writeMem(0xdaf2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5f2a, gbc.sp());
        EXPECT(0xdaf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xc7d9));
        EXPECT(0xcb, gbc.readMem(0xdaf2));
        EXPECT(0x76, gbc.readMem(0xdaf3));
        // CB 76 026F
        gbc.setState(0x9cbf, 0x5bf0, 0x8660, 0xa7, 0x3228, 0x5768, 0x0, 0x1);
        gbc.writeMem(0x5768, { 0xcc });
        gbc.writeMem(0x9cbf, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5bf0, gbc.sp());
        EXPECT(0x9cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbf));
        EXPECT(0x76, gbc.readMem(0x9cc0));
        // CB 76 0270
        gbc.setState(0x7de5, 0xb9b6, 0xad80, 0x1e76, 0x6ecd, 0x8092, 0x1, 0x0);
        gbc.writeMem(0x7de5, { 0xcb, 0x76 });
        gbc.writeMem(0x8092, { 0x30 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb9b6, gbc.sp());
        EXPECT(0x7de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8092));
        // CB 76 0271
        gbc.setState(0x9c1c, 0x2355, 0xef70, 0x27ff, 0x4856, 0x84ec, 0x0, 0x0);
        gbc.writeMem(0x84ec, { 0x26 });
        gbc.writeMem(0x9c1c, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2355, gbc.sp());
        EXPECT(0x9c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x84ec));
        EXPECT(0xcb, gbc.readMem(0x9c1c));
        EXPECT(0x76, gbc.readMem(0x9c1d));
        // CB 76 0272
        gbc.setState(0x9dfb, 0x84cf, 0xcde0, 0x220a, 0x5b25, 0x9466, 0x1, 0x1);
        gbc.writeMem(0x9466, { 0x9f });
        gbc.writeMem(0x9dfb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0x9dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9466));
        EXPECT(0xcb, gbc.readMem(0x9dfb));
        EXPECT(0x76, gbc.readMem(0x9dfc));
        // CB 76 0273
        gbc.setState(0xe7ac, 0xe1db, 0x2120, 0x2e23, 0x92c0, 0x3dd3, 0x1, 0x0);
        gbc.writeMem(0x3dd3, { 0x6 });
        gbc.writeMem(0xe7ac, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe1db, gbc.sp());
        EXPECT(0xe7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ac));
        EXPECT(0x76, gbc.readMem(0xe7ad));
        // CB 76 0274
        gbc.setState(0xd480, 0x84aa, 0x6380, 0x16e2, 0x1f0a, 0x5b8c, 0x0, 0x1);
        gbc.writeMem(0x5b8c, { 0x75 });
        gbc.writeMem(0xd480, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x84aa, gbc.sp());
        EXPECT(0xd482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd480));
        EXPECT(0x76, gbc.readMem(0xd481));
        // CB 76 0275
        gbc.setState(0x86ef, 0x8e4d, 0xa8b0, 0xd573, 0x9cf8, 0xd0ea, 0x0, 0x1);
        gbc.writeMem(0x86ef, { 0xcb, 0x76 });
        gbc.writeMem(0xd0ea, { 0x62 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8e4d, gbc.sp());
        EXPECT(0x86f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ef));
        EXPECT(0x76, gbc.readMem(0x86f0));
        EXPECT(0x62, gbc.readMem(0xd0ea));
        // CB 76 0277
        gbc.setState(0x29f4, 0xead7, 0x5e90, 0xa7f0, 0x7b02, 0x30e4, 0x1, 0x0);
        gbc.writeMem(0x29f4, { 0xcb, 0x76 });
        gbc.writeMem(0x30e4, { 0x19 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xead7, gbc.sp());
        EXPECT(0x29f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0278
        gbc.setState(0x30be, 0x968d, 0xda20, 0x747d, 0xc163, 0x68d9, 0x0, 0x0);
        gbc.writeMem(0x30be, { 0xcb, 0x76 });
        gbc.writeMem(0x68d9, { 0xbe });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x968d, gbc.sp());
        EXPECT(0x30c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0279
        gbc.setState(0xaa26, 0x189, 0x6d90, 0xe316, 0xbf7c, 0x5cde, 0x0, 0x1);
        gbc.writeMem(0x5cde, { 0x97 });
        gbc.writeMem(0xaa26, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x189, gbc.sp());
        EXPECT(0xaa28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa26));
        EXPECT(0x76, gbc.readMem(0xaa27));
        // CB 76 027A
        gbc.setState(0xc1be, 0x462b, 0x6fb0, 0xe317, 0x6c1e, 0xffd3, 0x1, 0x0);
        gbc.writeMem(0xc1be, { 0xcb, 0x76 });
        gbc.writeMem(0xffd3, { 0xbb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x462b, gbc.sp());
        EXPECT(0xc1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1be));
        EXPECT(0x76, gbc.readMem(0xc1bf));
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // CB 76 027B
        gbc.setState(0x937c, 0x3fb3, 0x2320, 0x431, 0x3668, 0xb13f, 0x1, 0x1);
        gbc.writeMem(0x937c, { 0xcb, 0x76 });
        gbc.writeMem(0xb13f, { 0x91 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3fb3, gbc.sp());
        EXPECT(0x937e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937c));
        EXPECT(0x76, gbc.readMem(0x937d));
        EXPECT(0x91, gbc.readMem(0xb13f));
        // CB 76 027C
        gbc.setState(0x9441, 0xcd7e, 0xe8c0, 0x536e, 0xebe0, 0xa742, 0x1, 0x0);
        gbc.writeMem(0x9441, { 0xcb, 0x76 });
        gbc.writeMem(0xa742, { 0xf7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcd7e, gbc.sp());
        EXPECT(0x9443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9441));
        EXPECT(0x76, gbc.readMem(0x9442));
        EXPECT(0xf7, gbc.readMem(0xa742));
        // CB 76 027E
        gbc.setState(0x10b0, 0x5a18, 0xaf10, 0xdf24, 0x12bd, 0xe34a, 0x0, 0x1);
        gbc.writeMem(0x10b0, { 0xcb, 0x76 });
        gbc.writeMem(0xe34a, { 0x33 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5a18, gbc.sp());
        EXPECT(0x10b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe34a));
        // CB 76 027F
        gbc.setState(0xe908, 0xd720, 0xa150, 0xcee1, 0xc4e, 0x4424, 0x1, 0x0);
        gbc.writeMem(0x4424, { 0xa });
        gbc.writeMem(0xe908, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd720, gbc.sp());
        EXPECT(0xe90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe908));
        EXPECT(0x76, gbc.readMem(0xe909));
        // CB 76 0280
        gbc.setState(0xe879, 0x931, 0xf700, 0x51a3, 0xbb0f, 0xc649, 0x1, 0x1);
        gbc.writeMem(0xc649, { 0xc6 });
        gbc.writeMem(0xe879, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x931, gbc.sp());
        EXPECT(0xe87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc649));
        EXPECT(0xcb, gbc.readMem(0xe879));
        EXPECT(0x76, gbc.readMem(0xe87a));
        // CB 76 0281
        gbc.setState(0xcf11, 0x1d6c, 0x1e40, 0xdd5f, 0xd558, 0xac9b, 0x1, 0x1);
        gbc.writeMem(0xac9b, { 0x29 });
        gbc.writeMem(0xcf11, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1d6c, gbc.sp());
        EXPECT(0xcf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xac9b));
        EXPECT(0xcb, gbc.readMem(0xcf11));
        EXPECT(0x76, gbc.readMem(0xcf12));
        // CB 76 0282
        gbc.setState(0xcd3f, 0x552d, 0x3e30, 0xbb74, 0x3880, 0x73f3, 0x0, 0x0);
        gbc.writeMem(0x73f3, { 0x10 });
        gbc.writeMem(0xcd3f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x552d, gbc.sp());
        EXPECT(0xcd41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3f));
        EXPECT(0x76, gbc.readMem(0xcd40));
        // CB 76 0283
        gbc.setState(0xc6b7, 0x2ce8, 0x4ed0, 0x7538, 0x4c15, 0xdeff, 0x0, 0x1);
        gbc.writeMem(0xc6b7, { 0xcb, 0x76 });
        gbc.writeMem(0xdeff, { 0x9c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2ce8, gbc.sp());
        EXPECT(0xc6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b7));
        EXPECT(0x76, gbc.readMem(0xc6b8));
        EXPECT(0x9c, gbc.readMem(0xdeff));
        // CB 76 0284
        gbc.setState(0x1d4f, 0xab7, 0x4970, 0xf15b, 0x4977, 0xaf9c, 0x0, 0x0);
        gbc.writeMem(0x1d4f, { 0xcb, 0x76 });
        gbc.writeMem(0xaf9c, { 0x66 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xab7, gbc.sp());
        EXPECT(0x1d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xaf9c));
        // CB 76 0285
        gbc.setState(0xa113, 0x60f6, 0x29e0, 0x502f, 0xda60, 0x97c6, 0x1, 0x1);
        gbc.writeMem(0x97c6, { 0x28 });
        gbc.writeMem(0xa113, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x60f6, gbc.sp());
        EXPECT(0xa115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x97c6));
        EXPECT(0xcb, gbc.readMem(0xa113));
        EXPECT(0x76, gbc.readMem(0xa114));
        // CB 76 0287
        gbc.setState(0xb526, 0x214c, 0xd840, 0xb0f3, 0xdcb4, 0x531c, 0x1, 0x0);
        gbc.writeMem(0x531c, { 0xa6 });
        gbc.writeMem(0xb526, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x214c, gbc.sp());
        EXPECT(0xb528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb526));
        EXPECT(0x76, gbc.readMem(0xb527));
        // CB 76 0288
        gbc.setState(0x6db9, 0x5dbf, 0xd550, 0xa621, 0xadd2, 0x91fc, 0x1, 0x1);
        gbc.writeMem(0x6db9, { 0xcb, 0x76 });
        gbc.writeMem(0x91fc, { 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5dbf, gbc.sp());
        EXPECT(0x6dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x91fc));
        // CB 76 0289
        gbc.setState(0x4644, 0x39a3, 0x3c50, 0x3e2d, 0xfca, 0xe90a, 0x0, 0x0);
        gbc.writeMem(0x4644, { 0xcb, 0x76 });
        gbc.writeMem(0xe90a, { 0xdd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x39a3, gbc.sp());
        EXPECT(0x4646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xe90a));
        // CB 76 028A
        gbc.setState(0x2936, 0x84f0, 0x1610, 0xa9d1, 0xf1bd, 0x4cd2, 0x0, 0x0);
        gbc.writeMem(0x2936, { 0xcb, 0x76 });
        gbc.writeMem(0x4cd2, { 0x69 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x84f0, gbc.sp());
        EXPECT(0x2938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 028B
        gbc.setState(0x4e26, 0x9899, 0xcbd0, 0x4dec, 0x86bc, 0x2518, 0x1, 0x1);
        gbc.writeMem(0x2518, { 0x78 });
        gbc.writeMem(0x4e26, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9899, gbc.sp());
        EXPECT(0x4e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 028C
        gbc.setState(0xd847, 0x331b, 0xbd90, 0x3a1, 0x93cb, 0x8ab9, 0x0, 0x0);
        gbc.writeMem(0x8ab9, { 0xdd });
        gbc.writeMem(0xd847, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x331b, gbc.sp());
        EXPECT(0xd849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8ab9));
        EXPECT(0xcb, gbc.readMem(0xd847));
        EXPECT(0x76, gbc.readMem(0xd848));
        // CB 76 028D
        gbc.setState(0xdac, 0x909f, 0x39d0, 0x1296, 0x8051, 0xd599, 0x0, 0x1);
        gbc.writeMem(0xdac, { 0xcb, 0x76 });
        gbc.writeMem(0xd599, { 0x55 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x909f, gbc.sp());
        EXPECT(0xdae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd599));
        // CB 76 028E
        gbc.setState(0x2a0c, 0x3eef, 0xc20, 0xd3e5, 0xdaa4, 0xaf66, 0x0, 0x1);
        gbc.writeMem(0x2a0c, { 0xcb, 0x76 });
        gbc.writeMem(0xaf66, { 0x41 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3eef, gbc.sp());
        EXPECT(0x2a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xaf66));
        // CB 76 028F
        gbc.setState(0x4e71, 0x627b, 0xca10, 0xc5b8, 0x6cd8, 0xb2a1, 0x1, 0x1);
        gbc.writeMem(0x4e71, { 0xcb, 0x76 });
        gbc.writeMem(0xb2a1, { 0x14 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x627b, gbc.sp());
        EXPECT(0x4e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb2a1));
        // CB 76 0290
        gbc.setState(0x46b5, 0xab48, 0x5f20, 0x889a, 0x5010, 0x7ac1, 0x0, 0x0);
        gbc.writeMem(0x46b5, { 0xcb, 0x76 });
        gbc.writeMem(0x7ac1, { 0x48 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xab48, gbc.sp());
        EXPECT(0x46b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0291
        gbc.setState(0x1616, 0x62ea, 0xa180, 0x671d, 0xd53a, 0x439d, 0x1, 0x1);
        gbc.writeMem(0x1616, { 0xcb, 0x76 });
        gbc.writeMem(0x439d, { 0x19 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x62ea, gbc.sp());
        EXPECT(0x1618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0292
        gbc.setState(0x39e7, 0xdbea, 0x6620, 0x79e6, 0xd1d0, 0x7cb, 0x0, 0x0);
        gbc.writeMem(0x7cb, { 0x6d });
        gbc.writeMem(0x39e7, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdbea, gbc.sp());
        EXPECT(0x39e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0293
        gbc.setState(0x4f63, 0xf6cd, 0x2580, 0x5552, 0xd342, 0x146d, 0x1, 0x1);
        gbc.writeMem(0x146d, { 0x16 });
        gbc.writeMem(0x4f63, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf6cd, gbc.sp());
        EXPECT(0x4f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0294
        gbc.setState(0x2bb3, 0x7ee8, 0x6e60, 0x8993, 0xdbf, 0x6612, 0x1, 0x0);
        gbc.writeMem(0x2bb3, { 0xcb, 0x76 });
        gbc.writeMem(0x6612, { 0x46 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7ee8, gbc.sp());
        EXPECT(0x2bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0295
        gbc.setState(0x1827, 0xb52c, 0x6b30, 0x8c82, 0x8cdf, 0x28d1, 0x0, 0x0);
        gbc.writeMem(0x1827, { 0xcb, 0x76 });
        gbc.writeMem(0x28d1, { 0x95 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb52c, gbc.sp());
        EXPECT(0x1829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0296
        gbc.setState(0x28e1, 0xf437, 0x16f0, 0x414e, 0xe09d, 0xed94, 0x0, 0x0);
        gbc.writeMem(0x28e1, { 0xcb, 0x76 });
        gbc.writeMem(0xed94, { 0x12 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf437, gbc.sp());
        EXPECT(0x28e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xed94));
        // CB 76 0297
        gbc.setState(0xbc7f, 0x9b58, 0x330, 0xc0b3, 0xcf54, 0xc84c, 0x0, 0x1);
        gbc.writeMem(0xbc7f, { 0xcb, 0x76 });
        gbc.writeMem(0xc84c, { 0x28 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9b58, gbc.sp());
        EXPECT(0xbc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7f));
        EXPECT(0x76, gbc.readMem(0xbc80));
        EXPECT(0x28, gbc.readMem(0xc84c));
        // CB 76 0298
        gbc.setState(0x3ad9, 0x93de, 0x2a60, 0xffd1, 0xfb13, 0xa798, 0x1, 0x1);
        gbc.writeMem(0x3ad9, { 0xcb, 0x76 });
        gbc.writeMem(0xa798, { 0x26 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x93de, gbc.sp());
        EXPECT(0x3adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa798));
        // CB 76 0299
        gbc.setState(0x6a90, 0xfc44, 0x5980, 0xded7, 0x462d, 0x5eb1, 0x1, 0x1);
        gbc.writeMem(0x5eb1, { 0xe3 });
        gbc.writeMem(0x6a90, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfc44, gbc.sp());
        EXPECT(0x6a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 029A
        gbc.setState(0x2b5d, 0xb123, 0x7fa0, 0x5039, 0x71b8, 0xbbc1, 0x0, 0x1);
        gbc.writeMem(0x2b5d, { 0xcb, 0x76 });
        gbc.writeMem(0xbbc1, { 0x85 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb123, gbc.sp());
        EXPECT(0x2b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbbc1));
        // CB 76 029B
        gbc.setState(0xc551, 0x63c5, 0x6be0, 0x854e, 0x391d, 0xbb9, 0x0, 0x1);
        gbc.writeMem(0xbb9, { 0x87 });
        gbc.writeMem(0xc551, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x63c5, gbc.sp());
        EXPECT(0xc553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc551));
        EXPECT(0x76, gbc.readMem(0xc552));
        // CB 76 029C
        gbc.setState(0x96eb, 0x5bf1, 0xc130, 0x361e, 0xd415, 0xc2b, 0x0, 0x1);
        gbc.writeMem(0xc2b, { 0x1 });
        gbc.writeMem(0x96eb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5bf1, gbc.sp());
        EXPECT(0x96ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96eb));
        EXPECT(0x76, gbc.readMem(0x96ec));
        // CB 76 029D
        gbc.setState(0x676f, 0xfea0, 0x530, 0x8a56, 0xc25a, 0x1be3, 0x0, 0x1);
        gbc.writeMem(0x1be3, { 0x22 });
        gbc.writeMem(0x676f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfea0, gbc.sp());
        EXPECT(0x6771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 029E
        gbc.setState(0xd1a3, 0xa97f, 0xcbc0, 0x9bf3, 0xa2a5, 0xa09, 0x0, 0x0);
        gbc.writeMem(0xa09, { 0xc2 });
        gbc.writeMem(0xd1a3, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa97f, gbc.sp());
        EXPECT(0xd1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a3));
        EXPECT(0x76, gbc.readMem(0xd1a4));
        // CB 76 029F
        gbc.setState(0xe913, 0x7bd9, 0xbcf0, 0xd83d, 0xba29, 0x76ba, 0x1, 0x1);
        gbc.writeMem(0x76ba, { 0x28 });
        gbc.writeMem(0xe913, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7bd9, gbc.sp());
        EXPECT(0xe915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe913));
        EXPECT(0x76, gbc.readMem(0xe914));
        // CB 76 02A0
        gbc.setState(0x88fd, 0xe15f, 0x4700, 0x3c75, 0x29f0, 0xf1fa, 0x0, 0x1);
        gbc.writeMem(0x88fd, { 0xcb, 0x76 });
        gbc.writeMem(0xf1fa, { 0x37 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe15f, gbc.sp());
        EXPECT(0x88ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fd));
        EXPECT(0x76, gbc.readMem(0x88fe));
        EXPECT(0x37, gbc.readMem(0xf1fa));
        // CB 76 02A1
        gbc.setState(0x68ae, 0x6393, 0x7d50, 0x930a, 0xb89c, 0xaa3e, 0x1, 0x0);
        gbc.writeMem(0x68ae, { 0xcb, 0x76 });
        gbc.writeMem(0xaa3e, { 0x9f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6393, gbc.sp());
        EXPECT(0x68b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xaa3e));
        // CB 76 02A2
        gbc.setState(0xdbb, 0x625a, 0x8ee0, 0xf563, 0x63b5, 0x8b8e, 0x1, 0x1);
        gbc.writeMem(0xdbb, { 0xcb, 0x76 });
        gbc.writeMem(0x8b8e, { 0xe });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x625a, gbc.sp());
        EXPECT(0xdbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8b8e));
        // CB 76 02A3
        gbc.setState(0x8c6c, 0x9030, 0x4aa0, 0xde0, 0x9f56, 0xdce8, 0x0, 0x0);
        gbc.writeMem(0x8c6c, { 0xcb, 0x76 });
        gbc.writeMem(0xdce8, { 0x69 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9030, gbc.sp());
        EXPECT(0x8c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6c));
        EXPECT(0x76, gbc.readMem(0x8c6d));
        EXPECT(0x69, gbc.readMem(0xdce8));
        // CB 76 02A4
        gbc.setState(0x4a98, 0xa8cd, 0x1e50, 0x4fcb, 0x40b, 0xc2e2, 0x1, 0x1);
        gbc.writeMem(0x4a98, { 0xcb, 0x76 });
        gbc.writeMem(0xc2e2, { 0xa5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa8cd, gbc.sp());
        EXPECT(0x4a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xc2e2));
        // CB 76 02A5
        gbc.setState(0x23a8, 0xe774, 0x8040, 0x7b6e, 0xe322, 0x3705, 0x1, 0x0);
        gbc.writeMem(0x23a8, { 0xcb, 0x76 });
        gbc.writeMem(0x3705, { 0xe0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe774, gbc.sp());
        EXPECT(0x23aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02A6
        gbc.setState(0x812a, 0xa123, 0x5450, 0xd102, 0x8b8, 0x8e39, 0x0, 0x0);
        gbc.writeMem(0x812a, { 0xcb, 0x76 });
        gbc.writeMem(0x8e39, { 0x95 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa123, gbc.sp());
        EXPECT(0x812c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812a));
        EXPECT(0x76, gbc.readMem(0x812b));
        EXPECT(0x95, gbc.readMem(0x8e39));
        // CB 76 02A7
        gbc.setState(0x5fd6, 0x8c50, 0xa80, 0xe043, 0xe538, 0xd67, 0x0, 0x1);
        gbc.writeMem(0xd67, { 0xcc });
        gbc.writeMem(0x5fd6, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8c50, gbc.sp());
        EXPECT(0x5fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02A8
        gbc.setState(0x65c4, 0xdc86, 0xeb80, 0xd041, 0x5565, 0xa9e0, 0x1, 0x0);
        gbc.writeMem(0x65c4, { 0xcb, 0x76 });
        gbc.writeMem(0xa9e0, { 0xab });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdc86, gbc.sp());
        EXPECT(0x65c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xa9e0));
        // CB 76 02A9
        gbc.setState(0x6ba7, 0x262f, 0x9f50, 0xde6a, 0x362, 0xfd23, 0x0, 0x0);
        gbc.writeMem(0x6ba7, { 0xcb, 0x76 });
        gbc.writeMem(0xfd23, { 0xc5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x262f, gbc.sp());
        EXPECT(0x6ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xfd23));
        // CB 76 02AA
        gbc.setState(0x5ca2, 0xab9b, 0x5a20, 0x3702, 0x2098, 0xaf7f, 0x1, 0x1);
        gbc.writeMem(0x5ca2, { 0xcb, 0x76 });
        gbc.writeMem(0xaf7f, { 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xab9b, gbc.sp());
        EXPECT(0x5ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xaf7f));
        // CB 76 02AB
        gbc.setState(0x49be, 0xcbf3, 0x40e0, 0x7ae9, 0x58f6, 0x4f84, 0x0, 0x0);
        gbc.writeMem(0x49be, { 0xcb, 0x76 });
        gbc.writeMem(0x4f84, { 0xb2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcbf3, gbc.sp());
        EXPECT(0x49c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02AC
        gbc.setState(0x2e56, 0x26a, 0x3d10, 0x1526, 0x206, 0xce4a, 0x1, 0x0);
        gbc.writeMem(0x2e56, { 0xcb, 0x76 });
        gbc.writeMem(0xce4a, { 0x20 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x26a, gbc.sp());
        EXPECT(0x2e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xce4a));
        // CB 76 02AD
        gbc.setState(0x908e, 0x15d7, 0x6fa0, 0x8ef4, 0x909e, 0xd0d4, 0x1, 0x0);
        gbc.writeMem(0x908e, { 0xcb, 0x76 });
        gbc.writeMem(0xd0d4, { 0xcd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x15d7, gbc.sp());
        EXPECT(0x9090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908e));
        EXPECT(0x76, gbc.readMem(0x908f));
        EXPECT(0xcd, gbc.readMem(0xd0d4));
        // CB 76 02AE
        gbc.setState(0x6fa1, 0xc44f, 0xc5a0, 0xad6, 0x6e32, 0x64ce, 0x0, 0x0);
        gbc.writeMem(0x64ce, { 0x3 });
        gbc.writeMem(0x6fa1, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc44f, gbc.sp());
        EXPECT(0x6fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02AF
        gbc.setState(0x95d5, 0x7678, 0x170, 0x7265, 0xa32d, 0xee26, 0x1, 0x1);
        gbc.writeMem(0x95d5, { 0xcb, 0x76 });
        gbc.writeMem(0xee26, { 0x5e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7678, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d5));
        EXPECT(0x76, gbc.readMem(0x95d6));
        EXPECT(0x5e, gbc.readMem(0xee26));
        // CB 76 02B0
        gbc.setState(0xa2de, 0x3b8e, 0x670, 0x859f, 0xef6b, 0x870, 0x1, 0x0);
        gbc.writeMem(0x870, { 0x18 });
        gbc.writeMem(0xa2de, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3b8e, gbc.sp());
        EXPECT(0xa2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2de));
        EXPECT(0x76, gbc.readMem(0xa2df));
        // CB 76 02B1
        gbc.setState(0xcf3, 0xeaf4, 0x8720, 0xe611, 0x9d6b, 0x375b, 0x0, 0x1);
        gbc.writeMem(0xcf3, { 0xcb, 0x76 });
        gbc.writeMem(0x375b, { 0x35 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xeaf4, gbc.sp());
        EXPECT(0xcf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02B2
        gbc.setState(0x1b06, 0xee59, 0xfcd0, 0xfa9d, 0x6beb, 0xae44, 0x0, 0x1);
        gbc.writeMem(0x1b06, { 0xcb, 0x76 });
        gbc.writeMem(0xae44, { 0x56 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xee59, gbc.sp());
        EXPECT(0x1b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xae44));
        // CB 76 02B3
        gbc.setState(0x698e, 0xb004, 0x57b0, 0x9399, 0x1e2a, 0xc3f4, 0x0, 0x1);
        gbc.writeMem(0x698e, { 0xcb, 0x76 });
        gbc.writeMem(0xc3f4, { 0x4b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb004, gbc.sp());
        EXPECT(0x6990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc3f4));
        // CB 76 02B4
        gbc.setState(0x7097, 0x2808, 0xf850, 0xf8c4, 0xaf6a, 0x7d56, 0x0, 0x1);
        gbc.writeMem(0x7097, { 0xcb, 0x76 });
        gbc.writeMem(0x7d56, { 0x79 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2808, gbc.sp());
        EXPECT(0x7099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 02B5
        gbc.setState(0xa703, 0x9239, 0x4e90, 0x171a, 0xf5fb, 0x2b59, 0x0, 0x0);
        gbc.writeMem(0x2b59, { 0x1c });
        gbc.writeMem(0xa703, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9239, gbc.sp());
        EXPECT(0xa705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa703));
        EXPECT(0x76, gbc.readMem(0xa704));
        // CB 76 02B6
        gbc.setState(0x9228, 0x997c, 0xf1a0, 0xaf2e, 0x3872, 0x13f1, 0x1, 0x0);
        gbc.writeMem(0x13f1, { 0x57 });
        gbc.writeMem(0x9228, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x997c, gbc.sp());
        EXPECT(0x922a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9228));
        EXPECT(0x76, gbc.readMem(0x9229));
        // CB 76 02B7
        gbc.setState(0xd42f, 0x6e6d, 0x86b0, 0xf842, 0xb1fe, 0x6f52, 0x1, 0x0);
        gbc.writeMem(0x6f52, { 0x80 });
        gbc.writeMem(0xd42f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6e6d, gbc.sp());
        EXPECT(0xd431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42f));
        EXPECT(0x76, gbc.readMem(0xd430));
        // CB 76 02B9
        gbc.setState(0xefe6, 0x4c1b, 0x8e40, 0xb761, 0xf2f8, 0x286f, 0x0, 0x1);
        gbc.writeMem(0x286f, { 0x3f });
        gbc.writeMem(0xefe6, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4c1b, gbc.sp());
        EXPECT(0xefe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe6));
        EXPECT(0x76, gbc.readMem(0xefe7));
        // CB 76 02BA
        gbc.setState(0x2b5e, 0x2813, 0x2d10, 0xd1a0, 0x73ab, 0x9458, 0x1, 0x1);
        gbc.writeMem(0x2b5e, { 0xcb, 0x76 });
        gbc.writeMem(0x9458, { 0xee });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2813, gbc.sp());
        EXPECT(0x2b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9458));
        // CB 76 02BB
        gbc.setState(0xeaf7, 0xeea1, 0x7bf0, 0x9c3c, 0xe950, 0xb10c, 0x0, 0x1);
        gbc.writeMem(0xb10c, { 0x51 });
        gbc.writeMem(0xeaf7, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xeea1, gbc.sp());
        EXPECT(0xeaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb10c));
        EXPECT(0xcb, gbc.readMem(0xeaf7));
        EXPECT(0x76, gbc.readMem(0xeaf8));
        // CB 76 02BC
        gbc.setState(0xae33, 0x382b, 0xbd70, 0xc36, 0xf44e, 0x37b0, 0x1, 0x1);
        gbc.writeMem(0x37b0, { 0x6b });
        gbc.writeMem(0xae33, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x382b, gbc.sp());
        EXPECT(0xae35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae33));
        EXPECT(0x76, gbc.readMem(0xae34));
        // CB 76 02BD
        gbc.setState(0xb6dc, 0xe00e, 0x87c0, 0xba81, 0x44d1, 0x2f46, 0x1, 0x0);
        gbc.writeMem(0x2f46, { 0x40 });
        gbc.writeMem(0xb6dc, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe00e, gbc.sp());
        EXPECT(0xb6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6dc));
        EXPECT(0x76, gbc.readMem(0xb6dd));
        // CB 76 02C0
        gbc.setState(0xb6dc, 0x6e9a, 0xec50, 0xa7bb, 0xa8a2, 0xfdd9, 0x0, 0x0);
        gbc.writeMem(0xb6dc, { 0xcb, 0x76 });
        gbc.writeMem(0xfdd9, { 0xe0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6e9a, gbc.sp());
        EXPECT(0xb6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6dc));
        EXPECT(0x76, gbc.readMem(0xb6dd));
        EXPECT(0xe0, gbc.readMem(0xfdd9));
        // CB 76 02C1
        gbc.setState(0xdb44, 0x73f1, 0x70e0, 0xbf7c, 0x8c26, 0x49f8, 0x1, 0x1);
        gbc.writeMem(0x49f8, { 0x5c });
        gbc.writeMem(0xdb44, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x73f1, gbc.sp());
        EXPECT(0xdb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb44));
        EXPECT(0x76, gbc.readMem(0xdb45));
        // CB 76 02C2
        gbc.setState(0x362d, 0xae25, 0xb0b0, 0xa5eb, 0x4b23, 0x6bc7, 0x1, 0x1);
        gbc.writeMem(0x362d, { 0xcb, 0x76 });
        gbc.writeMem(0x6bc7, { 0xd7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xae25, gbc.sp());
        EXPECT(0x362f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 02C3
        gbc.setState(0x15d9, 0x6755, 0x32c0, 0xa5b4, 0x750c, 0xc82c, 0x0, 0x1);
        gbc.writeMem(0x15d9, { 0xcb, 0x76 });
        gbc.writeMem(0xc82c, { 0xd5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6755, gbc.sp());
        EXPECT(0x15db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc82c));
        // CB 76 02C4
        gbc.setState(0xb918, 0xebcc, 0xfb40, 0xa09c, 0xe0fd, 0x43be, 0x1, 0x0);
        gbc.writeMem(0x43be, { 0xa4 });
        gbc.writeMem(0xb918, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xebcc, gbc.sp());
        EXPECT(0xb91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb918));
        EXPECT(0x76, gbc.readMem(0xb919));
        // CB 76 02C5
        gbc.setState(0x588, 0x650a, 0x1f20, 0xb560, 0xb49, 0x81db, 0x1, 0x1);
        gbc.writeMem(0x588, { 0xcb, 0x76 });
        gbc.writeMem(0x81db, { 0x39 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x650a, gbc.sp());
        EXPECT(0x58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x81db));
        // CB 76 02C6
        gbc.setState(0x73cf, 0x3fc7, 0xe5c0, 0x2bc6, 0x3472, 0x2263, 0x1, 0x1);
        gbc.writeMem(0x2263, { 0xd7 });
        gbc.writeMem(0x73cf, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3fc7, gbc.sp());
        EXPECT(0x73d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02C7
        gbc.setState(0x1943, 0x8bef, 0xcec0, 0x242b, 0x7fc2, 0xb71, 0x1, 0x1);
        gbc.writeMem(0xb71, { 0x9a });
        gbc.writeMem(0x1943, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8bef, gbc.sp());
        EXPECT(0x1945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02C8
        gbc.setState(0x8b44, 0x65fb, 0xbb0, 0x1541, 0x1e15, 0x84c5, 0x1, 0x0);
        gbc.writeMem(0x84c5, { 0x3b });
        gbc.writeMem(0x8b44, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x65fb, gbc.sp());
        EXPECT(0x8b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x84c5));
        EXPECT(0xcb, gbc.readMem(0x8b44));
        EXPECT(0x76, gbc.readMem(0x8b45));
        // CB 76 02C9
        gbc.setState(0xd932, 0x941c, 0x1810, 0x6f23, 0xe47e, 0x77d, 0x1, 0x0);
        gbc.writeMem(0x77d, { 0x2f });
        gbc.writeMem(0xd932, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x941c, gbc.sp());
        EXPECT(0xd934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd932));
        EXPECT(0x76, gbc.readMem(0xd933));
        // CB 76 02CA
        gbc.setState(0x1cb, 0x7e92, 0x4000, 0x9a65, 0x3aba, 0x88e5, 0x1, 0x1);
        gbc.writeMem(0x1cb, { 0xcb, 0x76 });
        gbc.writeMem(0x88e5, { 0xa5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7e92, gbc.sp());
        EXPECT(0x1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x88e5));
        // CB 76 02CB
        gbc.setState(0xbf0, 0xcd34, 0xc0e0, 0x6682, 0x5e0b, 0x3336, 0x0, 0x0);
        gbc.writeMem(0xbf0, { 0xcb, 0x76 });
        gbc.writeMem(0x3336, { 0x85 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcd34, gbc.sp());
        EXPECT(0xbf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02CC
        gbc.setState(0x5eca, 0x48b, 0xbb70, 0xcdc1, 0xc8bd, 0x7414, 0x0, 0x1);
        gbc.writeMem(0x5eca, { 0xcb, 0x76 });
        gbc.writeMem(0x7414, { 0xc2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x48b, gbc.sp());
        EXPECT(0x5ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 02CD
        gbc.setState(0x1fac, 0xc8c6, 0x2f30, 0xc9e9, 0x1112, 0x3782, 0x0, 0x1);
        gbc.writeMem(0x1fac, { 0xcb, 0x76 });
        gbc.writeMem(0x3782, { 0x88 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc8c6, gbc.sp());
        EXPECT(0x1fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 02CE
        gbc.setState(0x8a16, 0xa0d0, 0xa030, 0xe4cc, 0x801f, 0xf3c3, 0x0, 0x0);
        gbc.writeMem(0x8a16, { 0xcb, 0x76 });
        gbc.writeMem(0xf3c3, { 0xa });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa0d0, gbc.sp());
        EXPECT(0x8a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a16));
        EXPECT(0x76, gbc.readMem(0x8a17));
        EXPECT(0xa, gbc.readMem(0xf3c3));
        // CB 76 02CF
        gbc.setState(0xd621, 0xfbc7, 0xd7d0, 0x3f94, 0xb359, 0xb7fc, 0x1, 0x0);
        gbc.writeMem(0xb7fc, { 0x62 });
        gbc.writeMem(0xd621, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfbc7, gbc.sp());
        EXPECT(0xd623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xb7fc));
        EXPECT(0xcb, gbc.readMem(0xd621));
        EXPECT(0x76, gbc.readMem(0xd622));
        // CB 76 02D0
        gbc.setState(0xc02, 0x16e2, 0xffb0, 0x32fa, 0x9af7, 0x4b7e, 0x1, 0x0);
        gbc.writeMem(0xc02, { 0xcb, 0x76 });
        gbc.writeMem(0x4b7e, { 0x6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x16e2, gbc.sp());
        EXPECT(0xc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 02D2
        gbc.setState(0x6ae4, 0x360, 0xcb20, 0x5197, 0x40a8, 0x3039, 0x0, 0x1);
        gbc.writeMem(0x3039, { 0x5b });
        gbc.writeMem(0x6ae4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x360, gbc.sp());
        EXPECT(0x6ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02D3
        gbc.setState(0x3f9b, 0x80c9, 0x6a20, 0x3ab6, 0xb69a, 0xd6a5, 0x0, 0x0);
        gbc.writeMem(0x3f9b, { 0xcb, 0x76 });
        gbc.writeMem(0xd6a5, { 0xe2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x80c9, gbc.sp());
        EXPECT(0x3f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd6a5));
        // CB 76 02D4
        gbc.setState(0x5de2, 0x4a59, 0xe460, 0xfde0, 0x8b9e, 0xc020, 0x0, 0x0);
        gbc.writeMem(0x5de2, { 0xcb, 0x76 });
        gbc.writeMem(0xc020, { 0x38 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4a59, gbc.sp());
        EXPECT(0x5de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc020));
        // CB 76 02D5
        gbc.setState(0x9591, 0x5fe, 0xb3d0, 0x8671, 0xea4f, 0x7ef8, 0x0, 0x1);
        gbc.writeMem(0x7ef8, { 0x48 });
        gbc.writeMem(0x9591, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5fe, gbc.sp());
        EXPECT(0x9593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9591));
        EXPECT(0x76, gbc.readMem(0x9592));
        // CB 76 02D6
        gbc.setState(0x9e4a, 0xe4ba, 0x3d50, 0x9ef5, 0x5504, 0x6fa1, 0x1, 0x1);
        gbc.writeMem(0x6fa1, { 0x11 });
        gbc.writeMem(0x9e4a, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe4ba, gbc.sp());
        EXPECT(0x9e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4a));
        EXPECT(0x76, gbc.readMem(0x9e4b));
        // CB 76 02D7
        gbc.setState(0xe749, 0xdda9, 0xa2d0, 0x37c8, 0x1866, 0xc13b, 0x0, 0x1);
        gbc.writeMem(0xc13b, { 0xe8 });
        gbc.writeMem(0xe749, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdda9, gbc.sp());
        EXPECT(0xe74b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xc13b));
        EXPECT(0xcb, gbc.readMem(0xe749));
        EXPECT(0x76, gbc.readMem(0xe74a));
        // CB 76 02D8
        gbc.setState(0xada6, 0x956d, 0x99b0, 0x7133, 0x3a50, 0x46e1, 0x0, 0x1);
        gbc.writeMem(0x46e1, { 0x7a });
        gbc.writeMem(0xada6, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x956d, gbc.sp());
        EXPECT(0xada8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada6));
        EXPECT(0x76, gbc.readMem(0xada7));
        // CB 76 02D9
        gbc.setState(0x7e34, 0xb21c, 0xf360, 0xa6ae, 0xf99b, 0x5fac, 0x0, 0x0);
        gbc.writeMem(0x5fac, { 0x90 });
        gbc.writeMem(0x7e34, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb21c, gbc.sp());
        EXPECT(0x7e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02DB
        gbc.setState(0x1dc8, 0x3cdf, 0xecf0, 0x7265, 0xd72e, 0xc9d, 0x1, 0x1);
        gbc.writeMem(0xc9d, { 0x51 });
        gbc.writeMem(0x1dc8, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3cdf, gbc.sp());
        EXPECT(0x1dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 02DC
        gbc.setState(0x9619, 0xfc7b, 0x41f0, 0x7cd8, 0x3655, 0xba05, 0x0, 0x1);
        gbc.writeMem(0x9619, { 0xcb, 0x76 });
        gbc.writeMem(0xba05, { 0x8c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfc7b, gbc.sp());
        EXPECT(0x961b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9619));
        EXPECT(0x76, gbc.readMem(0x961a));
        EXPECT(0x8c, gbc.readMem(0xba05));
        // CB 76 02DD
        gbc.setState(0x37f6, 0xb721, 0x1170, 0x60fd, 0xc25b, 0x8e7, 0x1, 0x1);
        gbc.writeMem(0x8e7, { 0xb6 });
        gbc.writeMem(0x37f6, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb721, gbc.sp());
        EXPECT(0x37f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 02DE
        gbc.setState(0x7ebc, 0xa72c, 0x8af0, 0xe0bf, 0x58ef, 0x9f5b, 0x1, 0x1);
        gbc.writeMem(0x7ebc, { 0xcb, 0x76 });
        gbc.writeMem(0x9f5b, { 0x34 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa72c, gbc.sp());
        EXPECT(0x7ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9f5b));
        // CB 76 02DF
        gbc.setState(0xe1a9, 0x37ed, 0x7c40, 0xdb76, 0x77fb, 0x4637, 0x0, 0x0);
        gbc.writeMem(0x4637, { 0xba });
        gbc.writeMem(0xe1a9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x37ed, gbc.sp());
        EXPECT(0xe1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a9));
        EXPECT(0x76, gbc.readMem(0xe1aa));
        // CB 76 02E0
        gbc.setState(0xdd4, 0xe89c, 0x72a0, 0xadde, 0x7c3, 0xd8b1, 0x1, 0x1);
        gbc.writeMem(0xdd4, { 0xcb, 0x76 });
        gbc.writeMem(0xd8b1, { 0xe7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe89c, gbc.sp());
        EXPECT(0xdd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd8b1));
        // CB 76 02E1
        gbc.setState(0x5480, 0xdcf3, 0x22d0, 0xaf56, 0xcc72, 0xcbe2, 0x1, 0x1);
        gbc.writeMem(0x5480, { 0xcb, 0x76 });
        gbc.writeMem(0xcbe2, { 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdcf3, gbc.sp());
        EXPECT(0x5482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcbe2));
        // CB 76 02E2
        gbc.setState(0x3f2b, 0x4324, 0xc8a0, 0x4f22, 0x4e59, 0xf54, 0x0, 0x0);
        gbc.writeMem(0xf54, { 0xd1 });
        gbc.writeMem(0x3f2b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4324, gbc.sp());
        EXPECT(0x3f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02E3
        gbc.setState(0x6810, 0x695b, 0xf220, 0x67f4, 0x1bf2, 0x24d, 0x0, 0x1);
        gbc.writeMem(0x24d, { 0xf2 });
        gbc.writeMem(0x6810, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x695b, gbc.sp());
        EXPECT(0x6812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02E4
        gbc.setState(0xda30, 0x1fe7, 0x1da0, 0x1f19, 0xe4f4, 0x4056, 0x0, 0x1);
        gbc.writeMem(0x4056, { 0xe8 });
        gbc.writeMem(0xda30, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1fe7, gbc.sp());
        EXPECT(0xda32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda30));
        EXPECT(0x76, gbc.readMem(0xda31));
        // CB 76 02E5
        gbc.setState(0xda51, 0xdc34, 0x2c40, 0xad2e, 0x766c, 0x1771, 0x1, 0x1);
        gbc.writeMem(0x1771, { 0x15 });
        gbc.writeMem(0xda51, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdc34, gbc.sp());
        EXPECT(0xda53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda51));
        EXPECT(0x76, gbc.readMem(0xda52));
        // CB 76 02E6
        gbc.setState(0x7f79, 0xa697, 0xa6f0, 0xccd5, 0x7270, 0xbb17, 0x0, 0x1);
        gbc.writeMem(0x7f79, { 0xcb, 0x76 });
        gbc.writeMem(0xbb17, { 0xe4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa697, gbc.sp());
        EXPECT(0x7f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xbb17));
        // CB 76 02E7
        gbc.setState(0xb237, 0xc146, 0xc160, 0xbd30, 0x6b41, 0x2a06, 0x0, 0x0);
        gbc.writeMem(0x2a06, { 0xfb });
        gbc.writeMem(0xb237, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc146, gbc.sp());
        EXPECT(0xb239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb237));
        EXPECT(0x76, gbc.readMem(0xb238));
        // CB 76 02E9
        gbc.setState(0xb447, 0xb5a0, 0x35f0, 0xb74a, 0x6048, 0xcf7f, 0x1, 0x0);
        gbc.writeMem(0xb447, { 0xcb, 0x76 });
        gbc.writeMem(0xcf7f, { 0x20 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb5a0, gbc.sp());
        EXPECT(0xb449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb447));
        EXPECT(0x76, gbc.readMem(0xb448));
        EXPECT(0x20, gbc.readMem(0xcf7f));
        // CB 76 02EA
        gbc.setState(0x3cba, 0xd9e5, 0xd500, 0x6404, 0x49bb, 0xb2b0, 0x1, 0x0);
        gbc.writeMem(0x3cba, { 0xcb, 0x76 });
        gbc.writeMem(0xb2b0, { 0x22 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd9e5, gbc.sp());
        EXPECT(0x3cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb2b0));
        // CB 76 02EB
        gbc.setState(0xe76, 0x76c2, 0x1d00, 0x372f, 0x6d58, 0x1b27, 0x0, 0x0);
        gbc.writeMem(0xe76, { 0xcb, 0x76 });
        gbc.writeMem(0x1b27, { 0x82 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x76c2, gbc.sp());
        EXPECT(0xe78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 02EC
        gbc.setState(0x5c66, 0x3fab, 0xf970, 0xb0fc, 0x55fe, 0xac92, 0x0, 0x1);
        gbc.writeMem(0x5c66, { 0xcb, 0x76 });
        gbc.writeMem(0xac92, { 0x7d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3fab, gbc.sp());
        EXPECT(0x5c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xac92));
        // CB 76 02ED
        gbc.setState(0xddbe, 0xd02a, 0x6950, 0x2ab5, 0x47ee, 0xa04f, 0x0, 0x1);
        gbc.writeMem(0xa04f, { 0x9f });
        gbc.writeMem(0xddbe, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd02a, gbc.sp());
        EXPECT(0xddc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa04f));
        EXPECT(0xcb, gbc.readMem(0xddbe));
        EXPECT(0x76, gbc.readMem(0xddbf));
        // CB 76 02EE
        gbc.setState(0xeadc, 0x5507, 0xba10, 0xd004, 0x520e, 0xe165, 0x0, 0x1);
        gbc.writeMem(0xe165, { 0xb7 });
        gbc.writeMem(0xeadc, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5507, gbc.sp());
        EXPECT(0xeade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe165));
        EXPECT(0xcb, gbc.readMem(0xeadc));
        EXPECT(0x76, gbc.readMem(0xeadd));
        // CB 76 02EF
        gbc.setState(0xc9cd, 0x62b0, 0x3f60, 0xf097, 0xe5d0, 0x526, 0x1, 0x1);
        gbc.writeMem(0x526, { 0x24 });
        gbc.writeMem(0xc9cd, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x62b0, gbc.sp());
        EXPECT(0xc9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cd));
        EXPECT(0x76, gbc.readMem(0xc9ce));
        // CB 76 02F0
        gbc.setState(0xa38f, 0x2e85, 0x4860, 0xdb7, 0x8394, 0x13b1, 0x1, 0x0);
        gbc.writeMem(0x13b1, { 0x35 });
        gbc.writeMem(0xa38f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2e85, gbc.sp());
        EXPECT(0xa391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38f));
        EXPECT(0x76, gbc.readMem(0xa390));
        // CB 76 02F1
        gbc.setState(0xa224, 0xcfb8, 0x88d0, 0x62e0, 0xe92a, 0xf68f, 0x0, 0x1);
        gbc.writeMem(0xa224, { 0xcb, 0x76 });
        gbc.writeMem(0xf68f, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcfb8, gbc.sp());
        EXPECT(0xa226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa224));
        EXPECT(0x76, gbc.readMem(0xa225));
        EXPECT(0x88, gbc.readMem(0xf68f));
        // CB 76 02F2
        gbc.setState(0xa99a, 0xbe8a, 0x4c10, 0xd2ae, 0x3f02, 0xcb30, 0x1, 0x1);
        gbc.writeMem(0xa99a, { 0xcb, 0x76 });
        gbc.writeMem(0xcb30, { 0xd5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbe8a, gbc.sp());
        EXPECT(0xa99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99a));
        EXPECT(0x76, gbc.readMem(0xa99b));
        EXPECT(0xd5, gbc.readMem(0xcb30));
        // CB 76 02F3
        gbc.setState(0xb8e0, 0xf92a, 0xba60, 0xacbe, 0x53c1, 0x9f41, 0x0, 0x1);
        gbc.writeMem(0x9f41, { 0xed });
        gbc.writeMem(0xb8e0, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf92a, gbc.sp());
        EXPECT(0xb8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9f41));
        EXPECT(0xcb, gbc.readMem(0xb8e0));
        EXPECT(0x76, gbc.readMem(0xb8e1));
        // CB 76 02F4
        gbc.setState(0xba1a, 0x219, 0xdc80, 0x70fb, 0xac84, 0x99aa, 0x0, 0x1);
        gbc.writeMem(0x99aa, { 0x3d });
        gbc.writeMem(0xba1a, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x219, gbc.sp());
        EXPECT(0xba1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x99aa));
        EXPECT(0xcb, gbc.readMem(0xba1a));
        EXPECT(0x76, gbc.readMem(0xba1b));
        // CB 76 02F5
        gbc.setState(0x5849, 0x5573, 0x9b50, 0xdd6d, 0x9154, 0xdb0a, 0x0, 0x0);
        gbc.writeMem(0x5849, { 0xcb, 0x76 });
        gbc.writeMem(0xdb0a, { 0x81 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5573, gbc.sp());
        EXPECT(0x584b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdb0a));
        // CB 76 02F6
        gbc.setState(0xbe7b, 0xe343, 0x4830, 0xba9b, 0xa5dc, 0x818, 0x1, 0x1);
        gbc.writeMem(0x818, { 0xd });
        gbc.writeMem(0xbe7b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe343, gbc.sp());
        EXPECT(0xbe7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7b));
        EXPECT(0x76, gbc.readMem(0xbe7c));
        // CB 76 02F7
        gbc.setState(0xaebb, 0x8072, 0x5710, 0x99ce, 0x377f, 0x29c5, 0x0, 0x1);
        gbc.writeMem(0x29c5, { 0x41 });
        gbc.writeMem(0xaebb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8072, gbc.sp());
        EXPECT(0xaebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaebb));
        EXPECT(0x76, gbc.readMem(0xaebc));
        // CB 76 02F8
        gbc.setState(0xdce8, 0x65ce, 0x7a40, 0x99d9, 0x80ff, 0xbd8d, 0x1, 0x1);
        gbc.writeMem(0xbd8d, { 0x13 });
        gbc.writeMem(0xdce8, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x65ce, gbc.sp());
        EXPECT(0xdcea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbd8d));
        EXPECT(0xcb, gbc.readMem(0xdce8));
        EXPECT(0x76, gbc.readMem(0xdce9));
        // CB 76 02F9
        gbc.setState(0xe43c, 0x1be0, 0xdcd0, 0xf, 0x6ab5, 0x4c45, 0x0, 0x0);
        gbc.writeMem(0x4c45, { 0x59 });
        gbc.writeMem(0xe43c, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1be0, gbc.sp());
        EXPECT(0xe43e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43c));
        EXPECT(0x76, gbc.readMem(0xe43d));
        // CB 76 02FA
        gbc.setState(0x2700, 0xe5d9, 0x6650, 0x5e2, 0x4a86, 0xb6c, 0x0, 0x0);
        gbc.writeMem(0xb6c, { 0x22 });
        gbc.writeMem(0x2700, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe5d9, gbc.sp());
        EXPECT(0x2702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 02FB
        gbc.setState(0x62f2, 0x4673, 0xc150, 0xede8, 0x53eb, 0xb8d8, 0x0, 0x0);
        gbc.writeMem(0x62f2, { 0xcb, 0x76 });
        gbc.writeMem(0xb8d8, { 0x59 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4673, gbc.sp());
        EXPECT(0x62f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xb8d8));
        // CB 76 02FC
        gbc.setState(0x85ed, 0x6190, 0xad0, 0x79e2, 0x606, 0x788e, 0x1, 0x1);
        gbc.writeMem(0x788e, { 0xe7 });
        gbc.writeMem(0x85ed, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6190, gbc.sp());
        EXPECT(0x85ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ed));
        EXPECT(0x76, gbc.readMem(0x85ee));
        // CB 76 02FE
        gbc.setState(0xeba9, 0xf165, 0xb160, 0x9f2f, 0xdab0, 0xe103, 0x1, 0x1);
        gbc.writeMem(0xe103, { 0x44 });
        gbc.writeMem(0xeba9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf165, gbc.sp());
        EXPECT(0xebab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe103));
        EXPECT(0xcb, gbc.readMem(0xeba9));
        EXPECT(0x76, gbc.readMem(0xebaa));
        // CB 76 02FF
        gbc.setState(0x27e4, 0x929f, 0xe970, 0xc8c8, 0x6aaa, 0xecda, 0x1, 0x1);
        gbc.writeMem(0x27e4, { 0xcb, 0x76 });
        gbc.writeMem(0xecda, { 0xa4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x929f, gbc.sp());
        EXPECT(0x27e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xecda));
        // CB 76 0300
        gbc.setState(0xe23, 0x8fb5, 0x5340, 0x57ba, 0x8676, 0x8eca, 0x0, 0x1);
        gbc.writeMem(0xe23, { 0xcb, 0x76 });
        gbc.writeMem(0x8eca, { 0xde });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8fb5, gbc.sp());
        EXPECT(0xe25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x8eca));
        // CB 76 0301
        gbc.setState(0xc46c, 0x8472, 0xdd30, 0x9c21, 0xe01c, 0xfe7d, 0x0, 0x1);
        gbc.writeMem(0xc46c, { 0xcb, 0x76 });
        gbc.writeMem(0xfe7d, { 0xeb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8472, gbc.sp());
        EXPECT(0xc46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc46c));
        EXPECT(0x76, gbc.readMem(0xc46d));
        EXPECT(0xeb, gbc.readMem(0xfe7d));
        // CB 76 0302
        gbc.setState(0x7f3f, 0xe5d, 0xf750, 0xf008, 0x26be, 0x39c2, 0x1, 0x0);
        gbc.writeMem(0x39c2, { 0x71 });
        gbc.writeMem(0x7f3f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe5d, gbc.sp());
        EXPECT(0x7f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0303
        gbc.setState(0x21d4, 0x4c7, 0x87f0, 0xc8e1, 0x77b6, 0xe562, 0x1, 0x1);
        gbc.writeMem(0x21d4, { 0xcb, 0x76 });
        gbc.writeMem(0xe562, { 0x86 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4c7, gbc.sp());
        EXPECT(0x21d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe562));
        // CB 76 0304
        gbc.setState(0xb73, 0x8ef3, 0xe7f0, 0x45eb, 0x3c8a, 0x7801, 0x1, 0x0);
        gbc.writeMem(0xb73, { 0xcb, 0x76 });
        gbc.writeMem(0x7801, { 0xd7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8ef3, gbc.sp());
        EXPECT(0xb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0305
        gbc.setState(0x41c4, 0x51ab, 0x9db0, 0x26eb, 0xf3a3, 0x6147, 0x0, 0x0);
        gbc.writeMem(0x41c4, { 0xcb, 0x76 });
        gbc.writeMem(0x6147, { 0xa });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x51ab, gbc.sp());
        EXPECT(0x41c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0306
        gbc.setState(0x95b4, 0x8faf, 0x29e0, 0xd866, 0x15f1, 0x5343, 0x0, 0x0);
        gbc.writeMem(0x5343, { 0xa });
        gbc.writeMem(0x95b4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8faf, gbc.sp());
        EXPECT(0x95b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b4));
        EXPECT(0x76, gbc.readMem(0x95b5));
        // CB 76 0307
        gbc.setState(0x6a7, 0x1cb3, 0xd980, 0x7afe, 0x8829, 0xce41, 0x1, 0x0);
        gbc.writeMem(0x6a7, { 0xcb, 0x76 });
        gbc.writeMem(0xce41, { 0xc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1cb3, gbc.sp());
        EXPECT(0x6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xce41));
        // CB 76 0309
        gbc.setState(0x1703, 0x47ec, 0x1430, 0x92c6, 0x5bad, 0xf613, 0x0, 0x1);
        gbc.writeMem(0x1703, { 0xcb, 0x76 });
        gbc.writeMem(0xf613, { 0xb1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x47ec, gbc.sp());
        EXPECT(0x1705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xf613));
        // CB 76 030A
        gbc.setState(0x4348, 0x4d29, 0x3810, 0x4511, 0xe71d, 0x2d81, 0x0, 0x0);
        gbc.writeMem(0x2d81, { 0xd9 });
        gbc.writeMem(0x4348, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4d29, gbc.sp());
        EXPECT(0x434a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 030B
        gbc.setState(0xb305, 0x459b, 0xf010, 0x868f, 0x953b, 0x988b, 0x1, 0x0);
        gbc.writeMem(0x988b, { 0x79 });
        gbc.writeMem(0xb305, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x459b, gbc.sp());
        EXPECT(0xb307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x988b));
        EXPECT(0xcb, gbc.readMem(0xb305));
        EXPECT(0x76, gbc.readMem(0xb306));
        // CB 76 030C
        gbc.setState(0x8e07, 0xe971, 0x2e50, 0x9a11, 0xb76e, 0x4f4e, 0x0, 0x0);
        gbc.writeMem(0x4f4e, { 0xc0 });
        gbc.writeMem(0x8e07, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe971, gbc.sp());
        EXPECT(0x8e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e07));
        EXPECT(0x76, gbc.readMem(0x8e08));
        // CB 76 030D
        gbc.setState(0xe726, 0xa67d, 0x1a70, 0x21f0, 0x1960, 0x324e, 0x1, 0x1);
        gbc.writeMem(0x324e, { 0xbb });
        gbc.writeMem(0xe726, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa67d, gbc.sp());
        EXPECT(0xe728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe726));
        EXPECT(0x76, gbc.readMem(0xe727));
        // CB 76 030F
        gbc.setState(0xb516, 0xe076, 0xae40, 0x2ac5, 0xb0c2, 0x22c3, 0x1, 0x0);
        gbc.writeMem(0x22c3, { 0xf0 });
        gbc.writeMem(0xb516, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe076, gbc.sp());
        EXPECT(0xb518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb516));
        EXPECT(0x76, gbc.readMem(0xb517));
        // CB 76 0310
        gbc.setState(0xbf93, 0xfe0, 0x8f60, 0xacc0, 0x4257, 0xd09d, 0x1, 0x0);
        gbc.writeMem(0xbf93, { 0xcb, 0x76 });
        gbc.writeMem(0xd09d, { 0xe2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfe0, gbc.sp());
        EXPECT(0xbf95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf93));
        EXPECT(0x76, gbc.readMem(0xbf94));
        EXPECT(0xe2, gbc.readMem(0xd09d));
        // CB 76 0312
        gbc.setState(0x9e06, 0xb6b9, 0x6520, 0xf928, 0x4f5c, 0xc82, 0x0, 0x0);
        gbc.writeMem(0xc82, { 0xb1 });
        gbc.writeMem(0x9e06, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb6b9, gbc.sp());
        EXPECT(0x9e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e06));
        EXPECT(0x76, gbc.readMem(0x9e07));
        // CB 76 0313
        gbc.setState(0x78a, 0x934d, 0xcd80, 0xe29a, 0x8f33, 0xaf29, 0x0, 0x0);
        gbc.writeMem(0x78a, { 0xcb, 0x76 });
        gbc.writeMem(0xaf29, { 0xe4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x934d, gbc.sp());
        EXPECT(0x78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xaf29));
        // CB 76 0314
        gbc.setState(0x8a8c, 0x31eb, 0xd0b0, 0x6d40, 0x20d0, 0x8b82, 0x1, 0x1);
        gbc.writeMem(0x8a8c, { 0xcb, 0x76 });
        gbc.writeMem(0x8b82, { 0xd1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x31eb, gbc.sp());
        EXPECT(0x8a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8c));
        EXPECT(0x76, gbc.readMem(0x8a8d));
        EXPECT(0xd1, gbc.readMem(0x8b82));
        // CB 76 0315
        gbc.setState(0x6555, 0xbb, 0x64b0, 0x3bdc, 0x2ac6, 0x1411, 0x0, 0x1);
        gbc.writeMem(0x1411, { 0xce });
        gbc.writeMem(0x6555, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbb, gbc.sp());
        EXPECT(0x6557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0316
        gbc.setState(0xa00e, 0xdf45, 0x800, 0x488f, 0x52d, 0x9620, 0x1, 0x1);
        gbc.writeMem(0x9620, { 0x97 });
        gbc.writeMem(0xa00e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdf45, gbc.sp());
        EXPECT(0xa010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9620));
        EXPECT(0xcb, gbc.readMem(0xa00e));
        EXPECT(0x76, gbc.readMem(0xa00f));
        // CB 76 0317
        gbc.setState(0x8dd4, 0xad66, 0x6fc0, 0x95b8, 0x8642, 0x12c6, 0x0, 0x1);
        gbc.writeMem(0x12c6, { 0x32 });
        gbc.writeMem(0x8dd4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xad66, gbc.sp());
        EXPECT(0x8dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd4));
        EXPECT(0x76, gbc.readMem(0x8dd5));
        // CB 76 0318
        gbc.setState(0xa559, 0x526a, 0xd6d0, 0x8ac0, 0xc0bf, 0xb44b, 0x0, 0x1);
        gbc.writeMem(0xa559, { 0xcb, 0x76 });
        gbc.writeMem(0xb44b, { 0x16 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x526a, gbc.sp());
        EXPECT(0xa55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa559));
        EXPECT(0x76, gbc.readMem(0xa55a));
        EXPECT(0x16, gbc.readMem(0xb44b));
        // CB 76 031A
        gbc.setState(0xb372, 0xc32f, 0x6e00, 0x7c10, 0x3c01, 0x2b27, 0x0, 0x0);
        gbc.writeMem(0x2b27, { 0x3c });
        gbc.writeMem(0xb372, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc32f, gbc.sp());
        EXPECT(0xb374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb372));
        EXPECT(0x76, gbc.readMem(0xb373));
        // CB 76 031B
        gbc.setState(0xed58, 0x71d3, 0x46f0, 0x180b, 0x1072, 0x3253, 0x0, 0x1);
        gbc.writeMem(0x3253, { 0x2d });
        gbc.writeMem(0xed58, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x71d3, gbc.sp());
        EXPECT(0xed5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed58));
        EXPECT(0x76, gbc.readMem(0xed59));
        // CB 76 031C
        gbc.setState(0x7ae9, 0xd85c, 0xdd20, 0xd7aa, 0xf931, 0x7d22, 0x0, 0x1);
        gbc.writeMem(0x7ae9, { 0xcb, 0x76 });
        gbc.writeMem(0x7d22, { 0x3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd85c, gbc.sp());
        EXPECT(0x7aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 031D
        gbc.setState(0x12a7, 0x61f, 0x7540, 0x21c3, 0x3a6b, 0xe90c, 0x1, 0x0);
        gbc.writeMem(0x12a7, { 0xcb, 0x76 });
        gbc.writeMem(0xe90c, { 0x1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x61f, gbc.sp());
        EXPECT(0x12a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xe90c));
        // CB 76 031E
        gbc.setState(0x734a, 0x8f4d, 0x9b90, 0x7945, 0x1aab, 0xd789, 0x0, 0x0);
        gbc.writeMem(0x734a, { 0xcb, 0x76 });
        gbc.writeMem(0xd789, { 0xe1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8f4d, gbc.sp());
        EXPECT(0x734c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd789));
        // CB 76 031F
        gbc.setState(0x5edd, 0xf58e, 0xe3f0, 0xa079, 0x5394, 0x4ce6, 0x0, 0x1);
        gbc.writeMem(0x4ce6, { 0x21 });
        gbc.writeMem(0x5edd, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf58e, gbc.sp());
        EXPECT(0x5edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0320
        gbc.setState(0x7b8e, 0xd49c, 0x5c0, 0xbe27, 0xbeda, 0x74db, 0x0, 0x0);
        gbc.writeMem(0x74db, { 0x3f });
        gbc.writeMem(0x7b8e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd49c, gbc.sp());
        EXPECT(0x7b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0321
        gbc.setState(0x1416, 0xa301, 0x28e0, 0x51b3, 0xf93e, 0x96e9, 0x0, 0x0);
        gbc.writeMem(0x1416, { 0xcb, 0x76 });
        gbc.writeMem(0x96e9, { 0x4d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa301, gbc.sp());
        EXPECT(0x1418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x96e9));
        // CB 76 0322
        gbc.setState(0xc228, 0xc541, 0xdbe0, 0xacf5, 0xced1, 0xe61, 0x1, 0x0);
        gbc.writeMem(0xe61, { 0xbe });
        gbc.writeMem(0xc228, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc541, gbc.sp());
        EXPECT(0xc22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc228));
        EXPECT(0x76, gbc.readMem(0xc229));
        // CB 76 0323
        gbc.setState(0x53cc, 0x44d6, 0x5e80, 0x166e, 0x9e15, 0x73c3, 0x0, 0x0);
        gbc.writeMem(0x53cc, { 0xcb, 0x76 });
        gbc.writeMem(0x73c3, { 0xb1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x44d6, gbc.sp());
        EXPECT(0x53ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0324
        gbc.setState(0x723b, 0xc531, 0xd900, 0xde89, 0xd0bb, 0xd5e4, 0x1, 0x1);
        gbc.writeMem(0x723b, { 0xcb, 0x76 });
        gbc.writeMem(0xd5e4, { 0x6d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc531, gbc.sp());
        EXPECT(0x723d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd5e4));
        // CB 76 0325
        gbc.setState(0x9ee2, 0xddf, 0x38e0, 0xd792, 0xdb25, 0x208c, 0x1, 0x0);
        gbc.writeMem(0x208c, { 0x84 });
        gbc.writeMem(0x9ee2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xddf, gbc.sp());
        EXPECT(0x9ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee2));
        EXPECT(0x76, gbc.readMem(0x9ee3));
        // CB 76 0326
        gbc.setState(0xef37, 0x6563, 0xcea0, 0x4a79, 0x8f1, 0x686d, 0x0, 0x1);
        gbc.writeMem(0x686d, { 0xa });
        gbc.writeMem(0xef37, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6563, gbc.sp());
        EXPECT(0xef39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef37));
        EXPECT(0x76, gbc.readMem(0xef38));
        // CB 76 0327
        gbc.setState(0x6f42, 0x760b, 0xad70, 0xff2e, 0x417f, 0xb062, 0x0, 0x1);
        gbc.writeMem(0x6f42, { 0xcb, 0x76 });
        gbc.writeMem(0xb062, { 0x14 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x760b, gbc.sp());
        EXPECT(0x6f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb062));
        // CB 76 0328
        gbc.setState(0x307c, 0xe0b0, 0x33e0, 0xc8a5, 0xb2b, 0x3e92, 0x1, 0x1);
        gbc.writeMem(0x307c, { 0xcb, 0x76 });
        gbc.writeMem(0x3e92, { 0xdc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe0b0, gbc.sp());
        EXPECT(0x307e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0329
        gbc.setState(0x4559, 0xde64, 0x2bf0, 0xe728, 0x9fd5, 0xb5e1, 0x0, 0x1);
        gbc.writeMem(0x4559, { 0xcb, 0x76 });
        gbc.writeMem(0xb5e1, { 0x5a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xde64, gbc.sp());
        EXPECT(0x455b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xb5e1));
        // CB 76 032A
        gbc.setState(0x23e4, 0xf85, 0xc6e0, 0x4e9d, 0x44b2, 0x10f6, 0x0, 0x1);
        gbc.writeMem(0x10f6, { 0x6 });
        gbc.writeMem(0x23e4, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf85, gbc.sp());
        EXPECT(0x23e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 032B
        gbc.setState(0x298a, 0x74e3, 0xd660, 0x424c, 0xcceb, 0x7160, 0x1, 0x1);
        gbc.writeMem(0x298a, { 0xcb, 0x76 });
        gbc.writeMem(0x7160, { 0x7c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x74e3, gbc.sp());
        EXPECT(0x298c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 032C
        gbc.setState(0xa765, 0x362c, 0xe720, 0x579d, 0x8973, 0xf2f9, 0x0, 0x0);
        gbc.writeMem(0xa765, { 0xcb, 0x76 });
        gbc.writeMem(0xf2f9, { 0xf6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x362c, gbc.sp());
        EXPECT(0xa767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa765));
        EXPECT(0x76, gbc.readMem(0xa766));
        EXPECT(0xf6, gbc.readMem(0xf2f9));
        // CB 76 032D
        gbc.setState(0x363d, 0x47b9, 0x93d0, 0xe62d, 0x25c3, 0xfe76, 0x0, 0x0);
        gbc.writeMem(0x363d, { 0xcb, 0x76 });
        gbc.writeMem(0xfe76, { 0x9e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x47b9, gbc.sp());
        EXPECT(0x363f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xfe76));
        // CB 76 032E
        gbc.setState(0xeab7, 0x4eac, 0x9da0, 0x11e3, 0xfd31, 0x5a94, 0x1, 0x1);
        gbc.writeMem(0x5a94, { 0x7a });
        gbc.writeMem(0xeab7, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4eac, gbc.sp());
        EXPECT(0xeab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab7));
        EXPECT(0x76, gbc.readMem(0xeab8));
        // CB 76 032F
        gbc.setState(0x47fa, 0xecd4, 0x1ac0, 0x6a8b, 0x7ee5, 0x29ac, 0x1, 0x0);
        gbc.writeMem(0x29ac, { 0xf2 });
        gbc.writeMem(0x47fa, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xecd4, gbc.sp());
        EXPECT(0x47fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0330
        gbc.setState(0x940c, 0x1cc2, 0x46f0, 0x41b7, 0xbad6, 0xb43e, 0x0, 0x1);
        gbc.writeMem(0x940c, { 0xcb, 0x76 });
        gbc.writeMem(0xb43e, { 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1cc2, gbc.sp());
        EXPECT(0x940e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940c));
        EXPECT(0x76, gbc.readMem(0x940d));
        EXPECT(0xd7, gbc.readMem(0xb43e));
        // CB 76 0331
        gbc.setState(0x55f3, 0xe, 0x9c30, 0x370a, 0x4666, 0x675a, 0x0, 0x0);
        gbc.writeMem(0x55f3, { 0xcb, 0x76 });
        gbc.writeMem(0x675a, { 0x54 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe, gbc.sp());
        EXPECT(0x55f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0332
        gbc.setState(0xc7f8, 0x85e8, 0x59b0, 0x2af3, 0x266a, 0xbebb, 0x0, 0x1);
        gbc.writeMem(0xbebb, { 0x8b });
        gbc.writeMem(0xc7f8, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x85e8, gbc.sp());
        EXPECT(0xc7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xbebb));
        EXPECT(0xcb, gbc.readMem(0xc7f8));
        EXPECT(0x76, gbc.readMem(0xc7f9));
        // CB 76 0333
        gbc.setState(0x7c4b, 0x63d8, 0xc600, 0x847, 0x704a, 0x1c8e, 0x0, 0x0);
        gbc.writeMem(0x1c8e, { 0x38 });
        gbc.writeMem(0x7c4b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x63d8, gbc.sp());
        EXPECT(0x7c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0334
        gbc.setState(0xc75e, 0x78c4, 0x4f20, 0xe0b6, 0x6cf1, 0x9033, 0x1, 0x1);
        gbc.writeMem(0x9033, { 0xc8 });
        gbc.writeMem(0xc75e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x78c4, gbc.sp());
        EXPECT(0xc760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9033));
        EXPECT(0xcb, gbc.readMem(0xc75e));
        EXPECT(0x76, gbc.readMem(0xc75f));
        // CB 76 0335
        gbc.setState(0xc594, 0x44fa, 0xdef0, 0xb82a, 0xe60b, 0x8468, 0x1, 0x1);
        gbc.writeMem(0x8468, { 0x21 });
        gbc.writeMem(0xc594, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x44fa, gbc.sp());
        EXPECT(0xc596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8468));
        EXPECT(0xcb, gbc.readMem(0xc594));
        EXPECT(0x76, gbc.readMem(0xc595));
        // CB 76 0336
        gbc.setState(0x9033, 0xd1bd, 0x9b80, 0xea01, 0x952e, 0xb77e, 0x0, 0x0);
        gbc.writeMem(0x9033, { 0xcb, 0x76 });
        gbc.writeMem(0xb77e, { 0x24 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd1bd, gbc.sp());
        EXPECT(0x9035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9033));
        EXPECT(0x76, gbc.readMem(0x9034));
        EXPECT(0x24, gbc.readMem(0xb77e));
        // CB 76 0337
        gbc.setState(0x470e, 0x828f, 0x5bd0, 0x226c, 0xd758, 0x6310, 0x1, 0x0);
        gbc.writeMem(0x470e, { 0xcb, 0x76 });
        gbc.writeMem(0x6310, { 0xf6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x828f, gbc.sp());
        EXPECT(0x4710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0338
        gbc.setState(0xc731, 0x156d, 0x4360, 0x845f, 0x4021, 0x555f, 0x1, 0x0);
        gbc.writeMem(0x555f, { 0xed });
        gbc.writeMem(0xc731, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x156d, gbc.sp());
        EXPECT(0xc733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc731));
        EXPECT(0x76, gbc.readMem(0xc732));
        // CB 76 0339
        gbc.setState(0x2a83, 0x7d4b, 0x8ac0, 0x30e4, 0x2f3c, 0x71ab, 0x1, 0x1);
        gbc.writeMem(0x2a83, { 0xcb, 0x76 });
        gbc.writeMem(0x71ab, { 0x17 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7d4b, gbc.sp());
        EXPECT(0x2a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 033A
        gbc.setState(0xb85f, 0x1a9, 0x6cd0, 0x7b5c, 0xb4d2, 0x1b89, 0x0, 0x0);
        gbc.writeMem(0x1b89, { 0xb });
        gbc.writeMem(0xb85f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1a9, gbc.sp());
        EXPECT(0xb861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85f));
        EXPECT(0x76, gbc.readMem(0xb860));
        // CB 76 033B
        gbc.setState(0xcdb6, 0x631b, 0x6e00, 0x878e, 0xd4c1, 0xbf74, 0x0, 0x1);
        gbc.writeMem(0xbf74, { 0xc0 });
        gbc.writeMem(0xcdb6, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x631b, gbc.sp());
        EXPECT(0xcdb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xbf74));
        EXPECT(0xcb, gbc.readMem(0xcdb6));
        EXPECT(0x76, gbc.readMem(0xcdb7));
        // CB 76 033C
        gbc.setState(0xc161, 0x83aa, 0xde40, 0xf4eb, 0x6ca3, 0x96ad, 0x1, 0x0);
        gbc.writeMem(0x96ad, { 0xa4 });
        gbc.writeMem(0xc161, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x83aa, gbc.sp());
        EXPECT(0xc163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x96ad));
        EXPECT(0xcb, gbc.readMem(0xc161));
        EXPECT(0x76, gbc.readMem(0xc162));
        // CB 76 033D
        gbc.setState(0x1be7, 0x7aa5, 0xd270, 0x30c9, 0xcd6e, 0xf8d0, 0x0, 0x1);
        gbc.writeMem(0x1be7, { 0xcb, 0x76 });
        gbc.writeMem(0xf8d0, { 0x94 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7aa5, gbc.sp());
        EXPECT(0x1be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xf8d0));
        // CB 76 033E
        gbc.setState(0xbf87, 0x2373, 0xa870, 0x572f, 0x41c6, 0x18ec, 0x0, 0x0);
        gbc.writeMem(0x18ec, { 0x53 });
        gbc.writeMem(0xbf87, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2373, gbc.sp());
        EXPECT(0xbf89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf87));
        EXPECT(0x76, gbc.readMem(0xbf88));
        // CB 76 033F
        gbc.setState(0xd5, 0xb057, 0xd8b0, 0xf2ac, 0xd80a, 0x6df7, 0x0, 0x1);
        gbc.writeMem(0xd5, { 0xcb, 0x76 });
        gbc.writeMem(0x6df7, { 0xf2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb057, gbc.sp());
        EXPECT(0xd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0340
        gbc.setState(0xd87d, 0xb4f4, 0xf3e0, 0x28bf, 0xd6ed, 0x72f3, 0x1, 0x0);
        gbc.writeMem(0x72f3, { 0x43 });
        gbc.writeMem(0xd87d, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb4f4, gbc.sp());
        EXPECT(0xd87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87d));
        EXPECT(0x76, gbc.readMem(0xd87e));
        // CB 76 0341
        gbc.setState(0x2a3e, 0xb78a, 0x3b10, 0x7bc6, 0x3c9, 0x17bc, 0x1, 0x1);
        gbc.writeMem(0x17bc, { 0x2a });
        gbc.writeMem(0x2a3e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb78a, gbc.sp());
        EXPECT(0x2a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0342
        gbc.setState(0xd7e8, 0x241d, 0xac70, 0x2b3, 0x1008, 0x6863, 0x0, 0x1);
        gbc.writeMem(0x6863, { 0x90 });
        gbc.writeMem(0xd7e8, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x241d, gbc.sp());
        EXPECT(0xd7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e8));
        EXPECT(0x76, gbc.readMem(0xd7e9));
        // CB 76 0343
        gbc.setState(0x40fc, 0x76f0, 0x54d0, 0xb29c, 0xed0b, 0x89aa, 0x1, 0x1);
        gbc.writeMem(0x40fc, { 0xcb, 0x76 });
        gbc.writeMem(0x89aa, { 0x60 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x76f0, gbc.sp());
        EXPECT(0x40fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x89aa));
        // CB 76 0344
        gbc.setState(0xb298, 0x6278, 0x6260, 0xdfd0, 0xf81b, 0xbfb, 0x0, 0x0);
        gbc.writeMem(0xbfb, { 0xcb });
        gbc.writeMem(0xb298, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6278, gbc.sp());
        EXPECT(0xb29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb298));
        EXPECT(0x76, gbc.readMem(0xb299));
        // CB 76 0345
        gbc.setState(0xe78b, 0x2763, 0x57d0, 0xd974, 0x20d0, 0x6c12, 0x1, 0x0);
        gbc.writeMem(0x6c12, { 0x58 });
        gbc.writeMem(0xe78b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2763, gbc.sp());
        EXPECT(0xe78d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78b));
        EXPECT(0x76, gbc.readMem(0xe78c));
        // CB 76 0346
        gbc.setState(0x6e0b, 0x5747, 0x6de0, 0xb17f, 0xc8fb, 0xa90e, 0x0, 0x1);
        gbc.writeMem(0x6e0b, { 0xcb, 0x76 });
        gbc.writeMem(0xa90e, { 0x6e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5747, gbc.sp());
        EXPECT(0x6e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa90e));
        // CB 76 0347
        gbc.setState(0x2145, 0x7c1a, 0xeb00, 0x8398, 0x15b4, 0x52c1, 0x0, 0x0);
        gbc.writeMem(0x2145, { 0xcb, 0x76 });
        gbc.writeMem(0x52c1, { 0x22 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7c1a, gbc.sp());
        EXPECT(0x2147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0348
        gbc.setState(0x22d7, 0xf95, 0x35a0, 0x5e4, 0xe78c, 0x4b3b, 0x0, 0x1);
        gbc.writeMem(0x22d7, { 0xcb, 0x76 });
        gbc.writeMem(0x4b3b, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf95, gbc.sp());
        EXPECT(0x22d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0349
        gbc.setState(0xea9e, 0x746c, 0x5f90, 0x49cd, 0x3202, 0xb725, 0x1, 0x1);
        gbc.writeMem(0xb725, { 0xbe });
        gbc.writeMem(0xea9e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x746c, gbc.sp());
        EXPECT(0xeaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xb725));
        EXPECT(0xcb, gbc.readMem(0xea9e));
        EXPECT(0x76, gbc.readMem(0xea9f));
        // CB 76 034A
        gbc.setState(0x4891, 0x6b06, 0xedc0, 0x367b, 0x5e68, 0xc706, 0x1, 0x1);
        gbc.writeMem(0x4891, { 0xcb, 0x76 });
        gbc.writeMem(0xc706, { 0x7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6b06, gbc.sp());
        EXPECT(0x4893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc706));
        // CB 76 034B
        gbc.setState(0xc733, 0x4d08, 0x76b0, 0x527, 0xe2a7, 0xfa1b, 0x0, 0x1);
        gbc.writeMem(0xc733, { 0xcb, 0x76 });
        gbc.writeMem(0xfa1b, { 0x5b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4d08, gbc.sp());
        EXPECT(0xc735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc733));
        EXPECT(0x76, gbc.readMem(0xc734));
        EXPECT(0x5b, gbc.readMem(0xfa1b));
        // CB 76 034C
        gbc.setState(0xd25f, 0x346c, 0x3b0, 0x3320, 0xa7e1, 0x99d8, 0x1, 0x1);
        gbc.writeMem(0x99d8, { 0x63 });
        gbc.writeMem(0xd25f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x346c, gbc.sp());
        EXPECT(0xd261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x99d8));
        EXPECT(0xcb, gbc.readMem(0xd25f));
        EXPECT(0x76, gbc.readMem(0xd260));
        // CB 76 034D
        gbc.setState(0x2d9b, 0xd617, 0x4d80, 0xa9fe, 0xfd73, 0x7f1b, 0x0, 0x0);
        gbc.writeMem(0x2d9b, { 0xcb, 0x76 });
        gbc.writeMem(0x7f1b, { 0xdc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd617, gbc.sp());
        EXPECT(0x2d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 034E
        gbc.setState(0xeb1b, 0xc1fc, 0x9200, 0x33b4, 0x1c9b, 0x1ed4, 0x1, 0x0);
        gbc.writeMem(0x1ed4, { 0x2a });
        gbc.writeMem(0xeb1b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc1fc, gbc.sp());
        EXPECT(0xeb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1b));
        EXPECT(0x76, gbc.readMem(0xeb1c));
        // CB 76 0350
        gbc.setState(0x227d, 0xfa94, 0x15a0, 0x4500, 0xd34, 0xd068, 0x0, 0x1);
        gbc.writeMem(0x227d, { 0xcb, 0x76 });
        gbc.writeMem(0xd068, { 0xdc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfa94, gbc.sp());
        EXPECT(0x227f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xd068));
        // CB 76 0351
        gbc.setState(0x42b6, 0x9b0f, 0x12a0, 0xe2a2, 0x4daa, 0x5fe6, 0x0, 0x1);
        gbc.writeMem(0x42b6, { 0xcb, 0x76 });
        gbc.writeMem(0x5fe6, { 0x40 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9b0f, gbc.sp());
        EXPECT(0x42b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0352
        gbc.setState(0x4947, 0x2e73, 0x5170, 0x2b65, 0x5b51, 0xb316, 0x1, 0x0);
        gbc.writeMem(0x4947, { 0xcb, 0x76 });
        gbc.writeMem(0xb316, { 0xd9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2e73, gbc.sp());
        EXPECT(0x4949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb316));
        // CB 76 0353
        gbc.setState(0xaddd, 0x9c90, 0x8dd0, 0xa0e4, 0x9, 0xda9b, 0x1, 0x0);
        gbc.writeMem(0xaddd, { 0xcb, 0x76 });
        gbc.writeMem(0xda9b, { 0x43 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9c90, gbc.sp());
        EXPECT(0xaddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddd));
        EXPECT(0x76, gbc.readMem(0xadde));
        EXPECT(0x43, gbc.readMem(0xda9b));
        // CB 76 0354
        gbc.setState(0xdc7, 0x3a6, 0x7b80, 0x8e47, 0xec32, 0x487, 0x0, 0x0);
        gbc.writeMem(0x487, { 0xec });
        gbc.writeMem(0xdc7, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3a6, gbc.sp());
        EXPECT(0xdc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0355
        gbc.setState(0xd33, 0x449d, 0xcf0, 0xcbb8, 0x254a, 0x92e8, 0x0, 0x1);
        gbc.writeMem(0xd33, { 0xcb, 0x76 });
        gbc.writeMem(0x92e8, { 0xf0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x449d, gbc.sp());
        EXPECT(0xd35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x92e8));
        // CB 76 0356
        gbc.setState(0xb0a3, 0xc0f7, 0xa410, 0x21cd, 0xf48f, 0x9314, 0x0, 0x1);
        gbc.writeMem(0x9314, { 0x3b });
        gbc.writeMem(0xb0a3, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc0f7, gbc.sp());
        EXPECT(0xb0a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9314));
        EXPECT(0xcb, gbc.readMem(0xb0a3));
        EXPECT(0x76, gbc.readMem(0xb0a4));
        // CB 76 0358
        gbc.setState(0xe33, 0x6020, 0x5ad0, 0x29f1, 0xd91d, 0xc6f, 0x1, 0x1);
        gbc.writeMem(0xc6f, { 0x68 });
        gbc.writeMem(0xe33, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6020, gbc.sp());
        EXPECT(0xe35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0359
        gbc.setState(0xb724, 0xbbd8, 0x38c0, 0x80bc, 0x66de, 0x9b18, 0x0, 0x1);
        gbc.writeMem(0x9b18, { 0xf8 });
        gbc.writeMem(0xb724, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbbd8, gbc.sp());
        EXPECT(0xb726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9b18));
        EXPECT(0xcb, gbc.readMem(0xb724));
        EXPECT(0x76, gbc.readMem(0xb725));
        // CB 76 035A
        gbc.setState(0xead, 0xb4dc, 0x7ed0, 0xfdf6, 0xb05a, 0x2989, 0x0, 0x1);
        gbc.writeMem(0xead, { 0xcb, 0x76 });
        gbc.writeMem(0x2989, { 0x26 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb4dc, gbc.sp());
        EXPECT(0xeaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 035B
        gbc.setState(0x4760, 0x4833, 0xce00, 0x7095, 0x7ec6, 0x952a, 0x1, 0x1);
        gbc.writeMem(0x4760, { 0xcb, 0x76 });
        gbc.writeMem(0x952a, { 0x3a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4833, gbc.sp());
        EXPECT(0x4762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x952a));
        // CB 76 035C
        gbc.setState(0x716, 0x82a3, 0x7d10, 0x8352, 0xb7fc, 0xc36e, 0x0, 0x0);
        gbc.writeMem(0x716, { 0xcb, 0x76 });
        gbc.writeMem(0xc36e, { 0xa4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x82a3, gbc.sp());
        EXPECT(0x718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc36e));
        // CB 76 035D
        gbc.setState(0x14d7, 0xf970, 0xb330, 0x7f02, 0xcf3f, 0x69a5, 0x0, 0x0);
        gbc.writeMem(0x14d7, { 0xcb, 0x76 });
        gbc.writeMem(0x69a5, { 0xb2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf970, gbc.sp());
        EXPECT(0x14d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 035E
        gbc.setState(0x2366, 0xd8bf, 0x1fc0, 0xa8b1, 0xf1b9, 0x3f5f, 0x0, 0x1);
        gbc.writeMem(0x2366, { 0xcb, 0x76 });
        gbc.writeMem(0x3f5f, { 0x7d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd8bf, gbc.sp());
        EXPECT(0x2368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 035F
        gbc.setState(0x206b, 0x5b95, 0x46e0, 0xb64a, 0x91af, 0x142d, 0x1, 0x0);
        gbc.writeMem(0x142d, { 0xd5 });
        gbc.writeMem(0x206b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5b95, gbc.sp());
        EXPECT(0x206d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0360
        gbc.setState(0x6efd, 0x3cd5, 0x2be0, 0x51f2, 0x8a37, 0x34e8, 0x0, 0x1);
        gbc.writeMem(0x34e8, { 0xa9 });
        gbc.writeMem(0x6efd, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3cd5, gbc.sp());
        EXPECT(0x6eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0361
        gbc.setState(0xe371, 0x9fa5, 0x3d60, 0x5f1a, 0x44e2, 0x1350, 0x0, 0x1);
        gbc.writeMem(0x1350, { 0xc6 });
        gbc.writeMem(0xe371, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9fa5, gbc.sp());
        EXPECT(0xe373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe371));
        EXPECT(0x76, gbc.readMem(0xe372));
        // CB 76 0363
        gbc.setState(0x5c92, 0xf23e, 0xb260, 0x2e6d, 0x24f0, 0xa7f0, 0x0, 0x1);
        gbc.writeMem(0x5c92, { 0xcb, 0x76 });
        gbc.writeMem(0xa7f0, { 0xb8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf23e, gbc.sp());
        EXPECT(0x5c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xa7f0));
        // CB 76 0364
        gbc.setState(0x1d27, 0x257c, 0x10e0, 0x3747, 0x36fb, 0x33ab, 0x1, 0x1);
        gbc.writeMem(0x1d27, { 0xcb, 0x76 });
        gbc.writeMem(0x33ab, { 0x1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x257c, gbc.sp());
        EXPECT(0x1d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0365
        gbc.setState(0x9c86, 0x6e22, 0x5430, 0xae9c, 0x5942, 0x416, 0x0, 0x0);
        gbc.writeMem(0x416, { 0xf7 });
        gbc.writeMem(0x9c86, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6e22, gbc.sp());
        EXPECT(0x9c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c86));
        EXPECT(0x76, gbc.readMem(0x9c87));
        // CB 76 0366
        gbc.setState(0xde36, 0xbe71, 0x85f0, 0x4c18, 0xebd5, 0x14b3, 0x0, 0x0);
        gbc.writeMem(0x14b3, { 0x8c });
        gbc.writeMem(0xde36, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbe71, gbc.sp());
        EXPECT(0xde38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde36));
        EXPECT(0x76, gbc.readMem(0xde37));
        // CB 76 0368
        gbc.setState(0x2b4e, 0x602, 0xf660, 0x3e85, 0x77f, 0xf052, 0x0, 0x1);
        gbc.writeMem(0x2b4e, { 0xcb, 0x76 });
        gbc.writeMem(0xf052, { 0xf7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x602, gbc.sp());
        EXPECT(0x2b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xf052));
        // CB 76 0369
        gbc.setState(0x7452, 0x53ab, 0xf2b0, 0x78f, 0x9741, 0xb96c, 0x1, 0x1);
        gbc.writeMem(0x7452, { 0xcb, 0x76 });
        gbc.writeMem(0xb96c, { 0xa5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x53ab, gbc.sp());
        EXPECT(0x7454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xb96c));
        // CB 76 036A
        gbc.setState(0xc233, 0xb074, 0x86b0, 0x1f9b, 0xd236, 0x2592, 0x1, 0x0);
        gbc.writeMem(0x2592, { 0x6d });
        gbc.writeMem(0xc233, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb074, gbc.sp());
        EXPECT(0xc235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc233));
        EXPECT(0x76, gbc.readMem(0xc234));
        // CB 76 036B
        gbc.setState(0x73fa, 0xbd92, 0xcb20, 0x4a60, 0x301c, 0x2f06, 0x0, 0x0);
        gbc.writeMem(0x2f06, { 0x65 });
        gbc.writeMem(0x73fa, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbd92, gbc.sp());
        EXPECT(0x73fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 036C
        gbc.setState(0x6b6, 0xf294, 0x950, 0xc8ea, 0x8de3, 0x3fb1, 0x0, 0x1);
        gbc.writeMem(0x6b6, { 0xcb, 0x76 });
        gbc.writeMem(0x3fb1, { 0xa8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf294, gbc.sp());
        EXPECT(0x6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 036D
        gbc.setState(0x6eca, 0xf960, 0xcc50, 0xd967, 0xcc90, 0x93a6, 0x0, 0x0);
        gbc.writeMem(0x6eca, { 0xcb, 0x76 });
        gbc.writeMem(0x93a6, { 0x14 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf960, gbc.sp());
        EXPECT(0x6ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x93a6));
        // CB 76 036E
        gbc.setState(0x2d2f, 0x1c02, 0xce90, 0xec92, 0xcf0d, 0x5b8a, 0x1, 0x1);
        gbc.writeMem(0x2d2f, { 0xcb, 0x76 });
        gbc.writeMem(0x5b8a, { 0x8f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1c02, gbc.sp());
        EXPECT(0x2d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 036F
        gbc.setState(0x63bf, 0xb711, 0xa8a0, 0x82a5, 0x8957, 0xe744, 0x1, 0x0);
        gbc.writeMem(0x63bf, { 0xcb, 0x76 });
        gbc.writeMem(0xe744, { 0x3c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb711, gbc.sp());
        EXPECT(0x63c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe744));
        // CB 76 0370
        gbc.setState(0xcee6, 0xd5f0, 0x2500, 0x2d97, 0xf903, 0xb951, 0x1, 0x0);
        gbc.writeMem(0xb951, { 0x1d });
        gbc.writeMem(0xcee6, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd5f0, gbc.sp());
        EXPECT(0xcee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb951));
        EXPECT(0xcb, gbc.readMem(0xcee6));
        EXPECT(0x76, gbc.readMem(0xcee7));
        // CB 76 0371
        gbc.setState(0x72f3, 0x8578, 0xe030, 0x980e, 0x648c, 0xfe04, 0x1, 0x1);
        gbc.writeMem(0x72f3, { 0xcb, 0x76 });
        gbc.writeMem(0xfe04, { 0xbc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8578, gbc.sp());
        EXPECT(0x72f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xfe04));
        // CB 76 0372
        gbc.setState(0x9d70, 0xc000, 0xaf50, 0xe3fb, 0xf0f3, 0x671c, 0x1, 0x0);
        gbc.writeMem(0x671c, { 0x4 });
        gbc.writeMem(0x9d70, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc000, gbc.sp());
        EXPECT(0x9d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d70));
        EXPECT(0x76, gbc.readMem(0x9d71));
        // CB 76 0373
        gbc.setState(0x5db5, 0xb22f, 0x6af0, 0x6649, 0xf1a5, 0xdefb, 0x0, 0x1);
        gbc.writeMem(0x5db5, { 0xcb, 0x76 });
        gbc.writeMem(0xdefb, { 0x8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb22f, gbc.sp());
        EXPECT(0x5db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xdefb));
        // CB 76 0374
        gbc.setState(0x8eae, 0x537f, 0xa520, 0x8ec0, 0xa3b2, 0xff9, 0x1, 0x0);
        gbc.writeMem(0xff9, { 0x4a });
        gbc.writeMem(0x8eae, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x537f, gbc.sp());
        EXPECT(0x8eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eae));
        EXPECT(0x76, gbc.readMem(0x8eaf));
        // CB 76 0375
        gbc.setState(0x3fe6, 0x98fb, 0xe100, 0x3a54, 0x7085, 0x4740, 0x0, 0x0);
        gbc.writeMem(0x3fe6, { 0xcb, 0x76 });
        gbc.writeMem(0x4740, { 0xb6 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x98fb, gbc.sp());
        EXPECT(0x3fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0376
        gbc.setState(0xbd34, 0xdb65, 0xb3f0, 0xe9e3, 0xfddf, 0x72a5, 0x0, 0x0);
        gbc.writeMem(0x72a5, { 0x7d });
        gbc.writeMem(0xbd34, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdb65, gbc.sp());
        EXPECT(0xbd36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd34));
        EXPECT(0x76, gbc.readMem(0xbd35));
        // CB 76 0377
        gbc.setState(0xbf24, 0xdbff, 0xac0, 0xd476, 0x8c41, 0xb548, 0x1, 0x0);
        gbc.writeMem(0xb548, { 0x66 });
        gbc.writeMem(0xbf24, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdbff, gbc.sp());
        EXPECT(0xbf26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb548));
        EXPECT(0xcb, gbc.readMem(0xbf24));
        EXPECT(0x76, gbc.readMem(0xbf25));
        // CB 76 0378
        gbc.setState(0x9674, 0x34b9, 0xc460, 0xac56, 0xa2fe, 0x6b37, 0x1, 0x1);
        gbc.writeMem(0x6b37, { 0x26 });
        gbc.writeMem(0x9674, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x34b9, gbc.sp());
        EXPECT(0x9676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9674));
        EXPECT(0x76, gbc.readMem(0x9675));
        // CB 76 0379
        gbc.setState(0xb361, 0x8b03, 0x5020, 0xe3d1, 0xef12, 0x914c, 0x0, 0x0);
        gbc.writeMem(0x914c, { 0x3 });
        gbc.writeMem(0xb361, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8b03, gbc.sp());
        EXPECT(0xb363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x914c));
        EXPECT(0xcb, gbc.readMem(0xb361));
        EXPECT(0x76, gbc.readMem(0xb362));
        // CB 76 037A
        gbc.setState(0xb53b, 0x95c6, 0xf8a0, 0x4193, 0x6eb2, 0x3662, 0x1, 0x1);
        gbc.writeMem(0x3662, { 0xab });
        gbc.writeMem(0xb53b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x95c6, gbc.sp());
        EXPECT(0xb53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53b));
        EXPECT(0x76, gbc.readMem(0xb53c));
        // CB 76 037B
        gbc.setState(0xdae3, 0x9f1b, 0x2ee0, 0xff48, 0x2c55, 0x4659, 0x0, 0x0);
        gbc.writeMem(0x4659, { 0xf6 });
        gbc.writeMem(0xdae3, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9f1b, gbc.sp());
        EXPECT(0xdae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae3));
        EXPECT(0x76, gbc.readMem(0xdae4));
        // CB 76 037C
        gbc.setState(0xafd7, 0xe5b9, 0xa3b0, 0x245e, 0x799, 0xf2a1, 0x0, 0x1);
        gbc.writeMem(0xafd7, { 0xcb, 0x76 });
        gbc.writeMem(0xf2a1, { 0xb1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe5b9, gbc.sp());
        EXPECT(0xafd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd7));
        EXPECT(0x76, gbc.readMem(0xafd8));
        EXPECT(0xb1, gbc.readMem(0xf2a1));
        // CB 76 037D
        gbc.setState(0x8b, 0xd482, 0xf0d0, 0x1a73, 0xb122, 0xdbc7, 0x0, 0x1);
        gbc.writeMem(0x8b, { 0xcb, 0x76 });
        gbc.writeMem(0xdbc7, { 0x37 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd482, gbc.sp());
        EXPECT(0x8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xdbc7));
        // CB 76 037E
        gbc.setState(0x96ca, 0xd599, 0xc280, 0x7b78, 0x5bf2, 0x4d31, 0x0, 0x0);
        gbc.writeMem(0x4d31, { 0xf8 });
        gbc.writeMem(0x96ca, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd599, gbc.sp());
        EXPECT(0x96cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ca));
        EXPECT(0x76, gbc.readMem(0x96cb));
        // CB 76 037F
        gbc.setState(0xa3f7, 0x35f9, 0x5520, 0x2c57, 0x1aee, 0xe1c1, 0x0, 0x1);
        gbc.writeMem(0xa3f7, { 0xcb, 0x76 });
        gbc.writeMem(0xe1c1, { 0xc2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x35f9, gbc.sp());
        EXPECT(0xa3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f7));
        EXPECT(0x76, gbc.readMem(0xa3f8));
        EXPECT(0xc2, gbc.readMem(0xe1c1));
        // CB 76 0380
        gbc.setState(0x1346, 0xf614, 0x2770, 0x4d78, 0x9800, 0x6afd, 0x1, 0x1);
        gbc.writeMem(0x1346, { 0xcb, 0x76 });
        gbc.writeMem(0x6afd, { 0x46 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf614, gbc.sp());
        EXPECT(0x1348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0381
        gbc.setState(0x4b9f, 0x898d, 0xa2a0, 0x616b, 0x3d51, 0x6ec1, 0x1, 0x0);
        gbc.writeMem(0x4b9f, { 0xcb, 0x76 });
        gbc.writeMem(0x6ec1, { 0x3a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x898d, gbc.sp());
        EXPECT(0x4ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 0382
        gbc.setState(0xe4cd, 0xd47c, 0x6b40, 0xd299, 0x8bf8, 0x99b3, 0x0, 0x1);
        gbc.writeMem(0x99b3, { 0x93 });
        gbc.writeMem(0xe4cd, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd47c, gbc.sp());
        EXPECT(0xe4cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x99b3));
        EXPECT(0xcb, gbc.readMem(0xe4cd));
        EXPECT(0x76, gbc.readMem(0xe4ce));
        // CB 76 0383
        gbc.setState(0x7517, 0x8b5d, 0xdd90, 0x950b, 0x6f3, 0x6ae7, 0x0, 0x0);
        gbc.writeMem(0x6ae7, { 0xb3 });
        gbc.writeMem(0x7517, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8b5d, gbc.sp());
        EXPECT(0x7519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0384
        gbc.setState(0xee09, 0x1c1e, 0x970, 0x74f0, 0x8bb4, 0xa1c0, 0x1, 0x0);
        gbc.writeMem(0xa1c0, { 0x82 });
        gbc.writeMem(0xee09, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1c1e, gbc.sp());
        EXPECT(0xee0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa1c0));
        EXPECT(0xcb, gbc.readMem(0xee09));
        EXPECT(0x76, gbc.readMem(0xee0a));
        // CB 76 0385
        gbc.setState(0x6bf8, 0xed58, 0x1350, 0x1c87, 0x26de, 0xe514, 0x0, 0x1);
        gbc.writeMem(0x6bf8, { 0xcb, 0x76 });
        gbc.writeMem(0xe514, { 0xd6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xed58, gbc.sp());
        EXPECT(0x6bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe514));
        // CB 76 0386
        gbc.setState(0x5dd1, 0xe89, 0x2b40, 0xabb5, 0x2d4a, 0xae77, 0x0, 0x1);
        gbc.writeMem(0x5dd1, { 0xcb, 0x76 });
        gbc.writeMem(0xae77, { 0x30 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe89, gbc.sp());
        EXPECT(0x5dd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xae77));
        // CB 76 0387
        gbc.setState(0x6118, 0x1ec4, 0xb490, 0x7d85, 0xdd16, 0xdcfd, 0x1, 0x1);
        gbc.writeMem(0x6118, { 0xcb, 0x76 });
        gbc.writeMem(0xdcfd, { 0x66 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1ec4, gbc.sp());
        EXPECT(0x611a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdcfd));
        // CB 76 0388
        gbc.setState(0x7a1, 0x259d, 0x9570, 0xa1d0, 0x8bfd, 0xdb5f, 0x0, 0x1);
        gbc.writeMem(0x7a1, { 0xcb, 0x76 });
        gbc.writeMem(0xdb5f, { 0xea });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x259d, gbc.sp());
        EXPECT(0x7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xdb5f));
        // CB 76 0389
        gbc.setState(0xad2e, 0x4138, 0xe020, 0xb501, 0x75e5, 0x224, 0x0, 0x0);
        gbc.writeMem(0x224, { 0x99 });
        gbc.writeMem(0xad2e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4138, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2e));
        EXPECT(0x76, gbc.readMem(0xad2f));
        // CB 76 038B
        gbc.setState(0x1f1f, 0xc749, 0xdba0, 0x8674, 0x4006, 0xcbb7, 0x1, 0x0);
        gbc.writeMem(0x1f1f, { 0xcb, 0x76 });
        gbc.writeMem(0xcbb7, { 0x79 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc749, gbc.sp());
        EXPECT(0x1f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcbb7));
        // CB 76 038C
        gbc.setState(0xbb44, 0xad70, 0x1d60, 0x7969, 0xc9c1, 0x710b, 0x0, 0x0);
        gbc.writeMem(0x710b, { 0xd4 });
        gbc.writeMem(0xbb44, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xad70, gbc.sp());
        EXPECT(0xbb46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb44));
        EXPECT(0x76, gbc.readMem(0xbb45));
        // CB 76 038D
        gbc.setState(0xd82d, 0xbe82, 0xdc20, 0xb8be, 0x4106, 0x1c81, 0x1, 0x0);
        gbc.writeMem(0x1c81, { 0x22 });
        gbc.writeMem(0xd82d, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbe82, gbc.sp());
        EXPECT(0xd82f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82d));
        EXPECT(0x76, gbc.readMem(0xd82e));
        // CB 76 038E
        gbc.setState(0x2a1, 0x5559, 0xc910, 0x36f2, 0xd8db, 0x699, 0x1, 0x0);
        gbc.writeMem(0x2a1, { 0xcb, 0x76 });
        gbc.writeMem(0x699, { 0x8b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5559, gbc.sp());
        EXPECT(0x2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 038F
        gbc.setState(0x18f7, 0xedf0, 0x8330, 0x309d, 0x4d54, 0xe242, 0x0, 0x0);
        gbc.writeMem(0x18f7, { 0xcb, 0x76 });
        gbc.writeMem(0xe242, { 0xc1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xedf0, gbc.sp());
        EXPECT(0x18f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe242));
        // CB 76 0390
        gbc.setState(0x70af, 0xe9f4, 0xb770, 0xc320, 0x8a1a, 0xcd0d, 0x0, 0x1);
        gbc.writeMem(0x70af, { 0xcb, 0x76 });
        gbc.writeMem(0xcd0d, { 0xc4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe9f4, gbc.sp());
        EXPECT(0x70b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xcd0d));
        // CB 76 0391
        gbc.setState(0xaabb, 0xb0bd, 0x16b0, 0x113c, 0xa81b, 0xf56, 0x0, 0x0);
        gbc.writeMem(0xf56, { 0xc4 });
        gbc.writeMem(0xaabb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb0bd, gbc.sp());
        EXPECT(0xaabd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabb));
        EXPECT(0x76, gbc.readMem(0xaabc));
        // CB 76 0392
        gbc.setState(0x50e1, 0x6569, 0xba90, 0x2d4e, 0x1b06, 0xaa0d, 0x1, 0x0);
        gbc.writeMem(0x50e1, { 0xcb, 0x76 });
        gbc.writeMem(0xaa0d, { 0xda });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6569, gbc.sp());
        EXPECT(0x50e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaa0d));
        // CB 76 0393
        gbc.setState(0x1bf9, 0x7bef, 0x87e0, 0x4f6f, 0xe5bc, 0xe60b, 0x0, 0x0);
        gbc.writeMem(0x1bf9, { 0xcb, 0x76 });
        gbc.writeMem(0xe60b, { 0x12 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0x1bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xe60b));
        // CB 76 0394
        gbc.setState(0x12a3, 0xe2d0, 0x17d0, 0x3d69, 0x2f09, 0xcbd6, 0x0, 0x0);
        gbc.writeMem(0x12a3, { 0xcb, 0x76 });
        gbc.writeMem(0xcbd6, { 0xfb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe2d0, gbc.sp());
        EXPECT(0x12a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xcbd6));
        // CB 76 0395
        gbc.setState(0xa0c, 0x7106, 0x7c20, 0xb7a0, 0xb55c, 0x802b, 0x0, 0x1);
        gbc.writeMem(0xa0c, { 0xcb, 0x76 });
        gbc.writeMem(0x802b, { 0xdd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7106, gbc.sp());
        EXPECT(0xa0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x802b));
        // CB 76 0396
        gbc.setState(0x5eb4, 0x5582, 0xcbb0, 0xff8b, 0x48f0, 0x776d, 0x0, 0x1);
        gbc.writeMem(0x5eb4, { 0xcb, 0x76 });
        gbc.writeMem(0x776d, { 0xa1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5582, gbc.sp());
        EXPECT(0x5eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0397
        gbc.setState(0x622a, 0xe7eb, 0xfc70, 0x9975, 0x4740, 0x2ec4, 0x0, 0x1);
        gbc.writeMem(0x2ec4, { 0xaf });
        gbc.writeMem(0x622a, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe7eb, gbc.sp());
        EXPECT(0x622c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 0398
        gbc.setState(0x9c3, 0xba05, 0xe220, 0xb14b, 0x55a8, 0xef84, 0x1, 0x0);
        gbc.writeMem(0x9c3, { 0xcb, 0x76 });
        gbc.writeMem(0xef84, { 0xd4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xba05, gbc.sp());
        EXPECT(0x9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xef84));
        // CB 76 039A
        gbc.setState(0x3594, 0x1392, 0x9a70, 0xf392, 0x62eb, 0x3d99, 0x1, 0x1);
        gbc.writeMem(0x3594, { 0xcb, 0x76 });
        gbc.writeMem(0x3d99, { 0x24 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1392, gbc.sp());
        EXPECT(0x3596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 039B
        gbc.setState(0xc4b7, 0x351d, 0x8830, 0x8047, 0xeb2d, 0xdc93, 0x0, 0x1);
        gbc.writeMem(0xc4b7, { 0xcb, 0x76 });
        gbc.writeMem(0xdc93, { 0x3d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x351d, gbc.sp());
        EXPECT(0xc4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b7));
        EXPECT(0x76, gbc.readMem(0xc4b8));
        EXPECT(0x3d, gbc.readMem(0xdc93));
        // CB 76 039C
        gbc.setState(0xdb0d, 0x530, 0xa70, 0xe8f, 0xa522, 0x8955, 0x0, 0x1);
        gbc.writeMem(0x8955, { 0x86 });
        gbc.writeMem(0xdb0d, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x530, gbc.sp());
        EXPECT(0xdb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8955));
        EXPECT(0xcb, gbc.readMem(0xdb0d));
        EXPECT(0x76, gbc.readMem(0xdb0e));
        // CB 76 039D
        gbc.setState(0x4130, 0x729e, 0x82e0, 0x9508, 0x908b, 0x2e91, 0x1, 0x1);
        gbc.writeMem(0x2e91, { 0xc3 });
        gbc.writeMem(0x4130, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x729e, gbc.sp());
        EXPECT(0x4132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 039E
        gbc.setState(0x11f6, 0xfe3b, 0x13d0, 0xbe6d, 0x646c, 0x9d2e, 0x0, 0x0);
        gbc.writeMem(0x11f6, { 0xcb, 0x76 });
        gbc.writeMem(0x9d2e, { 0xf8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfe3b, gbc.sp());
        EXPECT(0x11f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9d2e));
        // CB 76 039F
        gbc.setState(0x529a, 0x25a5, 0x95c0, 0x82b7, 0x9d95, 0x7626, 0x1, 0x0);
        gbc.writeMem(0x529a, { 0xcb, 0x76 });
        gbc.writeMem(0x7626, { 0x9e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x25a5, gbc.sp());
        EXPECT(0x529c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 03A0
        gbc.setState(0x11a9, 0xe23f, 0xa60, 0x6300, 0x1075, 0xc682, 0x1, 0x0);
        gbc.writeMem(0x11a9, { 0xcb, 0x76 });
        gbc.writeMem(0xc682, { 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe23f, gbc.sp());
        EXPECT(0x11ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc682));
        // CB 76 03A1
        gbc.setState(0xed4e, 0xb384, 0x83e0, 0x8394, 0x87b, 0x92cd, 0x1, 0x0);
        gbc.writeMem(0x92cd, { 0xa2 });
        gbc.writeMem(0xed4e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb384, gbc.sp());
        EXPECT(0xed50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x92cd));
        EXPECT(0xcb, gbc.readMem(0xed4e));
        EXPECT(0x76, gbc.readMem(0xed4f));
        // CB 76 03A2
        gbc.setState(0x9eb2, 0x2965, 0x8860, 0xd763, 0x10c9, 0x1c21, 0x0, 0x1);
        gbc.writeMem(0x1c21, { 0x4e });
        gbc.writeMem(0x9eb2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2965, gbc.sp());
        EXPECT(0x9eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb2));
        EXPECT(0x76, gbc.readMem(0x9eb3));
        // CB 76 03A3
        gbc.setState(0x51a9, 0x5b96, 0xb700, 0xcc9c, 0x95d7, 0x2913, 0x0, 0x0);
        gbc.writeMem(0x2913, { 0x80 });
        gbc.writeMem(0x51a9, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5b96, gbc.sp());
        EXPECT(0x51ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 03A4
        gbc.setState(0x88db, 0x9700, 0xc3c0, 0xbd23, 0xd0b5, 0x2c2c, 0x0, 0x1);
        gbc.writeMem(0x2c2c, { 0x5a });
        gbc.writeMem(0x88db, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9700, gbc.sp());
        EXPECT(0x88dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88db));
        EXPECT(0x76, gbc.readMem(0x88dc));
        // CB 76 03A5
        gbc.setState(0x2cbb, 0xc5b7, 0x5000, 0xb008, 0x4494, 0x4c9c, 0x0, 0x0);
        gbc.writeMem(0x2cbb, { 0xcb, 0x76 });
        gbc.writeMem(0x4c9c, { 0x89 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc5b7, gbc.sp());
        EXPECT(0x2cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 03A6
        gbc.setState(0xa0a4, 0x2e13, 0x8fa0, 0xe7a7, 0x47f5, 0xade2, 0x1, 0x0);
        gbc.writeMem(0xa0a4, { 0xcb, 0x76 });
        gbc.writeMem(0xade2, { 0xab });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2e13, gbc.sp());
        EXPECT(0xa0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a4));
        EXPECT(0x76, gbc.readMem(0xa0a5));
        EXPECT(0xab, gbc.readMem(0xade2));
        // CB 76 03A8
        gbc.setState(0x5454, 0xfbbd, 0x6d00, 0x40f7, 0x4de5, 0x3ec2, 0x1, 0x1);
        gbc.writeMem(0x3ec2, { 0xf2 });
        gbc.writeMem(0x5454, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfbbd, gbc.sp());
        EXPECT(0x5456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 03A9
        gbc.setState(0x17cc, 0x15f0, 0xc0a0, 0x98db, 0xce73, 0xd5b6, 0x1, 0x1);
        gbc.writeMem(0x17cc, { 0xcb, 0x76 });
        gbc.writeMem(0xd5b6, { 0x8f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x15f0, gbc.sp());
        EXPECT(0x17ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd5b6));
        // CB 76 03AA
        gbc.setState(0xd45f, 0xfc6e, 0x1640, 0xc519, 0xd436, 0x56b1, 0x1, 0x0);
        gbc.writeMem(0x56b1, { 0x2 });
        gbc.writeMem(0xd45f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfc6e, gbc.sp());
        EXPECT(0xd461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45f));
        EXPECT(0x76, gbc.readMem(0xd460));
        // CB 76 03AB
        gbc.setState(0x14a0, 0x53dc, 0xf200, 0x592b, 0x3a8e, 0xcde3, 0x0, 0x0);
        gbc.writeMem(0x14a0, { 0xcb, 0x76 });
        gbc.writeMem(0xcde3, { 0x3b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x53dc, gbc.sp());
        EXPECT(0x14a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcde3));
        // CB 76 03AC
        gbc.setState(0x75b2, 0x4ce3, 0xfd90, 0xc065, 0x174e, 0xf7f5, 0x1, 0x0);
        gbc.writeMem(0x75b2, { 0xcb, 0x76 });
        gbc.writeMem(0xf7f5, { 0x51 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4ce3, gbc.sp());
        EXPECT(0x75b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xf7f5));
        // CB 76 03AD
        gbc.setState(0xb337, 0x8ca2, 0x8f80, 0x4f62, 0x8c28, 0x82ab, 0x1, 0x1);
        gbc.writeMem(0x82ab, { 0xb4 });
        gbc.writeMem(0xb337, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8ca2, gbc.sp());
        EXPECT(0xb339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x82ab));
        EXPECT(0xcb, gbc.readMem(0xb337));
        EXPECT(0x76, gbc.readMem(0xb338));
        // CB 76 03AE
        gbc.setState(0x58c4, 0xf601, 0x8590, 0x93bd, 0x90cb, 0xf525, 0x1, 0x0);
        gbc.writeMem(0x58c4, { 0xcb, 0x76 });
        gbc.writeMem(0xf525, { 0x23 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf601, gbc.sp());
        EXPECT(0x58c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xf525));
        // CB 76 03AF
        gbc.setState(0xa92b, 0x73dd, 0x56b0, 0x9fd9, 0x7a82, 0x659c, 0x1, 0x0);
        gbc.writeMem(0x659c, { 0x94 });
        gbc.writeMem(0xa92b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x73dd, gbc.sp());
        EXPECT(0xa92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa92b));
        EXPECT(0x76, gbc.readMem(0xa92c));
        // CB 76 03B0
        gbc.setState(0x9554, 0xaf6, 0xccd0, 0x4b9, 0xe760, 0x3d32, 0x0, 0x0);
        gbc.writeMem(0x3d32, { 0x69 });
        gbc.writeMem(0x9554, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaf6, gbc.sp());
        EXPECT(0x9556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9554));
        EXPECT(0x76, gbc.readMem(0x9555));
        // CB 76 03B1
        gbc.setState(0xb842, 0xb724, 0x9fa0, 0x247c, 0x1c2b, 0xcc9c, 0x0, 0x0);
        gbc.writeMem(0xb842, { 0xcb, 0x76 });
        gbc.writeMem(0xcc9c, { 0x5a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb724, gbc.sp());
        EXPECT(0xb844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb842));
        EXPECT(0x76, gbc.readMem(0xb843));
        EXPECT(0x5a, gbc.readMem(0xcc9c));
        // CB 76 03B3
        gbc.setState(0x5e63, 0x6e76, 0x9500, 0xfc4d, 0x6d80, 0x201, 0x0, 0x1);
        gbc.writeMem(0x201, { 0xbb });
        gbc.writeMem(0x5e63, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6e76, gbc.sp());
        EXPECT(0x5e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 03B4
        gbc.setState(0x141d, 0xafd8, 0x25a0, 0x6bb0, 0x725b, 0xf0d4, 0x0, 0x1);
        gbc.writeMem(0x141d, { 0xcb, 0x76 });
        gbc.writeMem(0xf0d4, { 0x9a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xafd8, gbc.sp());
        EXPECT(0x141f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xf0d4));
        // CB 76 03B5
        gbc.setState(0xb5bf, 0xc4c3, 0xd720, 0xcc46, 0x1c5a, 0xca38, 0x1, 0x0);
        gbc.writeMem(0xb5bf, { 0xcb, 0x76 });
        gbc.writeMem(0xca38, { 0xce });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc4c3, gbc.sp());
        EXPECT(0xb5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5bf));
        EXPECT(0x76, gbc.readMem(0xb5c0));
        EXPECT(0xce, gbc.readMem(0xca38));
        // CB 76 03B6
        gbc.setState(0x167f, 0xdd28, 0xc340, 0xa56b, 0x23f8, 0xd4e5, 0x0, 0x0);
        gbc.writeMem(0x167f, { 0xcb, 0x76 });
        gbc.writeMem(0xd4e5, { 0xe3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdd28, gbc.sp());
        EXPECT(0x1681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xd4e5));
        // CB 76 03B7
        gbc.setState(0x7e7b, 0x20c5, 0x5840, 0x56b5, 0xf06e, 0x800f, 0x1, 0x0);
        gbc.writeMem(0x7e7b, { 0xcb, 0x76 });
        gbc.writeMem(0x800f, { 0x2f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x20c5, gbc.sp());
        EXPECT(0x7e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x800f));
        // CB 76 03B9
        gbc.setState(0x7da5, 0x1282, 0x7f40, 0x7240, 0x57ae, 0xaef8, 0x0, 0x1);
        gbc.writeMem(0x7da5, { 0xcb, 0x76 });
        gbc.writeMem(0xaef8, { 0xd3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1282, gbc.sp());
        EXPECT(0x7da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xaef8));
        // CB 76 03BA
        gbc.setState(0x3b05, 0xb447, 0x5fc0, 0xcad6, 0xf3e6, 0x5717, 0x1, 0x1);
        gbc.writeMem(0x3b05, { 0xcb, 0x76 });
        gbc.writeMem(0x5717, { 0xbf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb447, gbc.sp());
        EXPECT(0x3b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 03BB
        gbc.setState(0x88a0, 0x678, 0x9eb0, 0xfb51, 0x8bb1, 0x5065, 0x0, 0x0);
        gbc.writeMem(0x5065, { 0x26 });
        gbc.writeMem(0x88a0, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x678, gbc.sp());
        EXPECT(0x88a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a0));
        EXPECT(0x76, gbc.readMem(0x88a1));
        // CB 76 03BC
        gbc.setState(0x44c6, 0xab7d, 0x4f40, 0xe98b, 0xbc20, 0x9b31, 0x1, 0x0);
        gbc.writeMem(0x44c6, { 0xcb, 0x76 });
        gbc.writeMem(0x9b31, { 0x47 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xab7d, gbc.sp());
        EXPECT(0x44c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9b31));
        // CB 76 03BD
        gbc.setState(0xa9cb, 0x48d, 0xd2d0, 0xa79f, 0xa185, 0x9851, 0x0, 0x1);
        gbc.writeMem(0x9851, { 0x24 });
        gbc.writeMem(0xa9cb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x48d, gbc.sp());
        EXPECT(0xa9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x9851));
        EXPECT(0xcb, gbc.readMem(0xa9cb));
        EXPECT(0x76, gbc.readMem(0xa9cc));
        // CB 76 03BF
        gbc.setState(0x2a7d, 0x95d9, 0xe610, 0x261, 0x44e5, 0x204d, 0x1, 0x0);
        gbc.writeMem(0x204d, { 0x53 });
        gbc.writeMem(0x2a7d, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x95d9, gbc.sp());
        EXPECT(0x2a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 03C0
        gbc.setState(0xbf8c, 0x40e, 0x8150, 0x6214, 0xba2, 0x6e62, 0x0, 0x0);
        gbc.writeMem(0x6e62, { 0x7c });
        gbc.writeMem(0xbf8c, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x40e, gbc.sp());
        EXPECT(0xbf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8c));
        EXPECT(0x76, gbc.readMem(0xbf8d));
        // CB 76 03C1
        gbc.setState(0x94a3, 0x3518, 0xd600, 0x8825, 0x23f3, 0x789c, 0x1, 0x1);
        gbc.writeMem(0x789c, { 0x7d });
        gbc.writeMem(0x94a3, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3518, gbc.sp());
        EXPECT(0x94a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a3));
        EXPECT(0x76, gbc.readMem(0x94a4));
        // CB 76 03C3
        gbc.setState(0x82f, 0xab6a, 0xf320, 0x8fe6, 0x784b, 0xdf1e, 0x1, 0x0);
        gbc.writeMem(0x82f, { 0xcb, 0x76 });
        gbc.writeMem(0xdf1e, { 0x71 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xab6a, gbc.sp());
        EXPECT(0x831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xdf1e));
        // CB 76 03C4
        gbc.setState(0x80cb, 0xb15e, 0x3e50, 0x72ce, 0xe73a, 0x4f8f, 0x0, 0x0);
        gbc.writeMem(0x4f8f, { 0x20 });
        gbc.writeMem(0x80cb, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb15e, gbc.sp());
        EXPECT(0x80cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80cb));
        EXPECT(0x76, gbc.readMem(0x80cc));
        // CB 76 03C5
        gbc.setState(0x4fdb, 0x571a, 0xacb0, 0x529, 0x95fa, 0xf8c3, 0x1, 0x0);
        gbc.writeMem(0x4fdb, { 0xcb, 0x76 });
        gbc.writeMem(0xf8c3, { 0x45 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x571a, gbc.sp());
        EXPECT(0x4fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xf8c3));
        // CB 76 03C6
        gbc.setState(0x4a0, 0xc7b4, 0x2c00, 0x76f6, 0x7cc8, 0xad76, 0x0, 0x1);
        gbc.writeMem(0x4a0, { 0xcb, 0x76 });
        gbc.writeMem(0xad76, { 0xd5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc7b4, gbc.sp());
        EXPECT(0x4a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xad76));
        // CB 76 03C7
        gbc.setState(0xd6e0, 0x5625, 0xcc20, 0x8366, 0x1ce1, 0x9b0d, 0x1, 0x0);
        gbc.writeMem(0x9b0d, { 0xec });
        gbc.writeMem(0xd6e0, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5625, gbc.sp());
        EXPECT(0xd6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9b0d));
        EXPECT(0xcb, gbc.readMem(0xd6e0));
        EXPECT(0x76, gbc.readMem(0xd6e1));
        // CB 76 03C8
        gbc.setState(0xc30, 0xfe38, 0x86d0, 0x48fd, 0x9960, 0x2475, 0x1, 0x1);
        gbc.writeMem(0xc30, { 0xcb, 0x76 });
        gbc.writeMem(0x2475, { 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfe38, gbc.sp());
        EXPECT(0xc32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 03C9
        gbc.setState(0x70c8, 0xe1fc, 0x13a0, 0x8ceb, 0x530e, 0xe3e1, 0x1, 0x0);
        gbc.writeMem(0x70c8, { 0xcb, 0x76 });
        gbc.writeMem(0xe3e1, { 0xb8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe1fc, gbc.sp());
        EXPECT(0x70ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xe3e1));
        // CB 76 03CA
        gbc.setState(0x55da, 0xdec9, 0x67c0, 0xcb38, 0x7c21, 0xf8e0, 0x0, 0x0);
        gbc.writeMem(0x55da, { 0xcb, 0x76 });
        gbc.writeMem(0xf8e0, { 0x77 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdec9, gbc.sp());
        EXPECT(0x55dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xf8e0));
        // CB 76 03CB
        gbc.setState(0x8eda, 0xc4f9, 0x6d50, 0x6f25, 0xcd46, 0x5817, 0x1, 0x1);
        gbc.writeMem(0x5817, { 0x34 });
        gbc.writeMem(0x8eda, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc4f9, gbc.sp());
        EXPECT(0x8edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eda));
        EXPECT(0x76, gbc.readMem(0x8edb));
        // CB 76 03CC
        gbc.setState(0xb46, 0xa215, 0xbeb0, 0xa0b3, 0xdd61, 0x3981, 0x0, 0x0);
        gbc.writeMem(0xb46, { 0xcb, 0x76 });
        gbc.writeMem(0x3981, { 0x46 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa215, gbc.sp());
        EXPECT(0xb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 03CD
        gbc.setState(0x83d2, 0x6952, 0x5600, 0xf409, 0x80a4, 0x62dc, 0x0, 0x1);
        gbc.writeMem(0x62dc, { 0xa7 });
        gbc.writeMem(0x83d2, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6952, gbc.sp());
        EXPECT(0x83d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d2));
        EXPECT(0x76, gbc.readMem(0x83d3));
        // CB 76 03CE
        gbc.setState(0x8a8c, 0x4790, 0x89d0, 0x9f2b, 0xc3fe, 0x53e0, 0x1, 0x1);
        gbc.writeMem(0x53e0, { 0xa7 });
        gbc.writeMem(0x8a8c, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4790, gbc.sp());
        EXPECT(0x8a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8c));
        EXPECT(0x76, gbc.readMem(0x8a8d));
        // CB 76 03CF
        gbc.setState(0x22f5, 0x4e1c, 0xb250, 0xa5c3, 0x6395, 0xe89c, 0x1, 0x0);
        gbc.writeMem(0x22f5, { 0xcb, 0x76 });
        gbc.writeMem(0xe89c, { 0x6c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4e1c, gbc.sp());
        EXPECT(0x22f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe89c));
        // CB 76 03D0
        gbc.setState(0xc1e6, 0x32a0, 0x7ee0, 0x2459, 0xeacb, 0x9044, 0x0, 0x1);
        gbc.writeMem(0x9044, { 0x82 });
        gbc.writeMem(0xc1e6, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x32a0, gbc.sp());
        EXPECT(0xc1e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9044));
        EXPECT(0xcb, gbc.readMem(0xc1e6));
        EXPECT(0x76, gbc.readMem(0xc1e7));
        // CB 76 03D1
        gbc.setState(0x8d72, 0xd0ba, 0x8790, 0xf339, 0x32b1, 0x9611, 0x1, 0x1);
        gbc.writeMem(0x8d72, { 0xcb, 0x76 });
        gbc.writeMem(0x9611, { 0x6a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd0ba, gbc.sp());
        EXPECT(0x8d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d72));
        EXPECT(0x76, gbc.readMem(0x8d73));
        EXPECT(0x6a, gbc.readMem(0x9611));
        // CB 76 03D2
        gbc.setState(0xbd4d, 0xcc5a, 0xca70, 0xf206, 0x57aa, 0xeaaa, 0x0, 0x0);
        gbc.writeMem(0xbd4d, { 0xcb, 0x76 });
        gbc.writeMem(0xeaaa, { 0x3f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcc5a, gbc.sp());
        EXPECT(0xbd4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4d));
        EXPECT(0x76, gbc.readMem(0xbd4e));
        EXPECT(0x3f, gbc.readMem(0xeaaa));
        // CB 76 03D3
        gbc.setState(0x4b9f, 0x14, 0xdc0, 0x135f, 0x1f3d, 0x6b4, 0x1, 0x1);
        gbc.writeMem(0x6b4, { 0xcf });
        gbc.writeMem(0x4b9f, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x14, gbc.sp());
        EXPECT(0x4ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 76 03D4
        gbc.setState(0x1f3e, 0xb2e8, 0x67a0, 0x52d7, 0x9a1f, 0x9877, 0x1, 0x0);
        gbc.writeMem(0x1f3e, { 0xcb, 0x76 });
        gbc.writeMem(0x9877, { 0x2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb2e8, gbc.sp());
        EXPECT(0x1f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x9877));
        // CB 76 03D5
        gbc.setState(0x1921, 0xd8f2, 0x95b0, 0x8e3f, 0xdc27, 0x8dc7, 0x1, 0x1);
        gbc.writeMem(0x1921, { 0xcb, 0x76 });
        gbc.writeMem(0x8dc7, { 0x75 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd8f2, gbc.sp());
        EXPECT(0x1923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8dc7));
        // CB 76 03D6
        gbc.setState(0x82f4, 0x3d2b, 0x8f70, 0xdc12, 0x9410, 0x855b, 0x1, 0x1);
        gbc.writeMem(0x82f4, { 0xcb, 0x76 });
        gbc.writeMem(0x855b, { 0x6b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3d2b, gbc.sp());
        EXPECT(0x82f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f4));
        EXPECT(0x76, gbc.readMem(0x82f5));
        EXPECT(0x6b, gbc.readMem(0x855b));
        // CB 76 03D8
        gbc.setState(0xd62e, 0xf923, 0xe30, 0xc61f, 0x7df6, 0xb171, 0x1, 0x0);
        gbc.writeMem(0xb171, { 0x5f });
        gbc.writeMem(0xd62e, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf923, gbc.sp());
        EXPECT(0xd630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xb171));
        EXPECT(0xcb, gbc.readMem(0xd62e));
        EXPECT(0x76, gbc.readMem(0xd62f));
        // CB 76 03D9
        gbc.setState(0xe031, 0xeca8, 0x7f40, 0x4f84, 0xd2d2, 0x1fa6, 0x0, 0x1);
        gbc.writeMem(0x1fa6, { 0xef });
        gbc.writeMem(0xe031, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xeca8, gbc.sp());
        EXPECT(0xe033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe031));
        EXPECT(0x76, gbc.readMem(0xe032));
        // CB 76 03DA
        gbc.setState(0x76c8, 0xa2e5, 0x8db0, 0xa0dc, 0xfe51, 0x407c, 0x0, 0x0);
        gbc.writeMem(0x407c, { 0x3c });
        gbc.writeMem(0x76c8, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa2e5, gbc.sp());
        EXPECT(0x76ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 03DB
        gbc.setState(0xca41, 0xb2b9, 0x1820, 0x9a0c, 0x278f, 0x2982, 0x1, 0x0);
        gbc.writeMem(0x2982, { 0xad });
        gbc.writeMem(0xca41, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb2b9, gbc.sp());
        EXPECT(0xca43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca41));
        EXPECT(0x76, gbc.readMem(0xca42));
        // CB 76 03DC
        gbc.setState(0x9f3b, 0x59a2, 0x6160, 0x9e0c, 0xd752, 0x19f1, 0x0, 0x1);
        gbc.writeMem(0x19f1, { 0x65 });
        gbc.writeMem(0x9f3b, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x59a2, gbc.sp());
        EXPECT(0x9f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f3b));
        EXPECT(0x76, gbc.readMem(0x9f3c));
        // CB 76 03DD
        gbc.setState(0x88a3, 0x6b6a, 0xc2c0, 0x932e, 0xafe8, 0xcb50, 0x1, 0x1);
        gbc.writeMem(0x88a3, { 0xcb, 0x76 });
        gbc.writeMem(0xcb50, { 0xe7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6b6a, gbc.sp());
        EXPECT(0x88a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a3));
        EXPECT(0x76, gbc.readMem(0x88a4));
        EXPECT(0xe7, gbc.readMem(0xcb50));
        // CB 76 03DE
        gbc.setState(0x64d8, 0xb3d2, 0x78a0, 0x2bc, 0x387f, 0xce38, 0x1, 0x1);
        gbc.writeMem(0x64d8, { 0xcb, 0x76 });
        gbc.writeMem(0xce38, { 0xa1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb3d2, gbc.sp());
        EXPECT(0x64da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xce38));
        // CB 76 03DF
        gbc.setState(0x5ec9, 0x46a1, 0x5550, 0x6f0d, 0x68b2, 0xed1c, 0x1, 0x1);
        gbc.writeMem(0x5ec9, { 0xcb, 0x76 });
        gbc.writeMem(0xed1c, { 0x93 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x46a1, gbc.sp());
        EXPECT(0x5ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xed1c));
        // CB 76 03E0
        gbc.setState(0xdb80, 0xa7f3, 0xd760, 0xf976, 0xcbac, 0x9631, 0x1, 0x0);
        gbc.writeMem(0x9631, { 0x13 });
        gbc.writeMem(0xdb80, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa7f3, gbc.sp());
        EXPECT(0xdb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9631));
        EXPECT(0xcb, gbc.readMem(0xdb80));
        EXPECT(0x76, gbc.readMem(0xdb81));
        // CB 76 03E1
        gbc.setState(0xddf5, 0x463c, 0x4e40, 0xd156, 0xe563, 0xdb12, 0x1, 0x0);
        gbc.writeMem(0xdb12, { 0xa });
        gbc.writeMem(0xddf5, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x463c, gbc.sp());
        EXPECT(0xddf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xdb12));
        EXPECT(0xcb, gbc.readMem(0xddf5));
        EXPECT(0x76, gbc.readMem(0xddf6));
        // CB 76 03E2
        gbc.setState(0x5ad1, 0xcdc5, 0xf290, 0x24dd, 0xdf, 0x547f, 0x0, 0x1);
        gbc.writeMem(0x547f, { 0x49 });
        gbc.writeMem(0x5ad1, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcdc5, gbc.sp());
        EXPECT(0x5ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 76 03E3
        gbc.setState(0xdabe, 0x8699, 0xddc0, 0x4082, 0x6a71, 0x7391, 0x0, 0x1);
        gbc.writeMem(0x7391, { 0xc1 });
        gbc.writeMem(0xdabe, { 0xcb, 0x76 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8699, gbc.sp());
        EXPECT(0xdac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabe));
        EXPECT(0x76, gbc.readMem(0xdabf));
        // CB 76 03E4
        gbc.setState(0x334a, 0x75dd, 0xde70, 0x8365, 0x2b0, 0x8065, 0x0, 0x0);
        gbc.writeMem(0x334a, { 0xcb, 0x76 });
        gbc.writeMem(0x8065, { 0x53 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x75dd, gbc.sp());
        EXPECT(0x334c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8065));
        // CB 76 03E5
        gbc.setState(0xb89f, 0xc038, 0x4530, 0x41e8, 0x8db9, 0xc3bc, 0x1, 0x0);
        gbc.writeMem(0xb89f, { 0xcb, 0x76 });
        gbc.writeMem(0xc3bc, { 0xfe });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc038, gbc.sp());
        EXPECT(0xb8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89f));
        EXPECT(0x76, gbc.readMem(0xb8a0));
        EXPECT(0xfe, gbc.readMem(0xc3bc));
        // CB 76 03E6
        gbc.setState(0x4c4f, 0x7513, 0x82a0, 0x6137, 0x8e59, 0xdd93, 0x0, 0x1);
        gbc.writeMem(0x4c4f, { 0xcb, 0x76 });
        gbc.writeMem(0xdd93, { 0xf0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7513, gbc.sp());
        EXPECT(0x4c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdd93));
        // CB 76 03E7
        gbc.setState(0x9447, 0xf0f, 0x5180, 0xcd70, 0x6675, 0xb4fa, 0x1, 0x1);
        gbc.writeMem(0x9447, { 0xcb, 0x76 });
        gbc.writeMem(0xb4fa, { 0x3a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf0f, gbc.sp());
        EXPECT(0x9449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9447));
        EXPECT(0x76, gbc.readMem(0x9448));
        EXPECT(0x3a, gbc.readMem(0xb4fa));
    }
