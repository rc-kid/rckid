    TEST(gbcemu, opcode_e2) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // E2 0000
        gbc.setState(0x67e, 0x19dc, 0xb5f0, 0x3f1e, 0xda41, 0x6b98, 0x1, 0x0);
        gbc.writeMem(0x67e, { 0xe2 });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x19dc, gbc.sp());
        EXPECT(0x67f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xff1e));
        // E2 0001
        gbc.setState(0x2e35, 0x3dac, 0x2320, 0x3d5e, 0xd5e, 0xd6e8, 0x1, 0x1);
        gbc.writeMem(0x2e35, { 0xe2 });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3dac, gbc.sp());
        EXPECT(0x2e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xff5e));
        // E2 0002
        gbc.setState(0x9ad7, 0x940a, 0xc9d0, 0xb18e, 0xf17c, 0x386, 0x0, 0x1);
        gbc.writeMem(0x9ad7, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x940a, gbc.sp());
        EXPECT(0x9ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9ad7));
        EXPECT(0xc9, gbc.readMem(0xff8e));
        // E2 0003
        gbc.setState(0x3d63, 0x8ae6, 0x7920, 0x54fe, 0x74e8, 0x41c8, 0x0, 0x0);
        gbc.writeMem(0x3d63, { 0xe2 });
        gbc.writeMem(0xfffe, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8ae6, gbc.sp());
        EXPECT(0x3d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xfffe));
        // E2 0004
        gbc.setState(0x81b6, 0x8a74, 0xc300, 0x64aa, 0xb74, 0xa735, 0x0, 0x0);
        gbc.writeMem(0x81b6, { 0xe2 });
        gbc.writeMem(0xffaa, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8a74, gbc.sp());
        EXPECT(0x81b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x81b6));
        EXPECT(0xc3, gbc.readMem(0xffaa));
        // E2 0005
        gbc.setState(0x76ad, 0x165f, 0x1920, 0x6dbe, 0xedf5, 0xba06, 0x1, 0x0);
        gbc.writeMem(0x76ad, { 0xe2 });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x165f, gbc.sp());
        EXPECT(0x76ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xffbe));
        // E2 0006
        gbc.setState(0xdaea, 0x78a8, 0x1f90, 0x13cf, 0x8957, 0xd70d, 0x1, 0x1);
        gbc.writeMem(0xdaea, { 0xe2 });
        gbc.writeMem(0xffcf, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x78a8, gbc.sp());
        EXPECT(0xdaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdaea));
        EXPECT(0x1f, gbc.readMem(0xffcf));
        // E2 0007
        gbc.setState(0x29d, 0x66b3, 0x61a0, 0x1483, 0x825e, 0x8419, 0x0, 0x0);
        gbc.writeMem(0x29d, { 0xe2 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x66b3, gbc.sp());
        EXPECT(0x29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xff83));
        // E2 0008
        gbc.setState(0xc8e0, 0x3b84, 0x26d0, 0x4274, 0x9511, 0x408f, 0x0, 0x0);
        gbc.writeMem(0xc8e0, { 0xe2 });
        gbc.writeMem(0xff74, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3b84, gbc.sp());
        EXPECT(0xc8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc8e0));
        EXPECT(0x26, gbc.readMem(0xff74));
        // E2 0009
        gbc.setState(0xbde0, 0x846b, 0x6bd0, 0x614d, 0xcd1b, 0x543c, 0x0, 0x0);
        gbc.writeMem(0xbde0, { 0xe2 });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x846b, gbc.sp());
        EXPECT(0xbde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbde0));
        EXPECT(0x6b, gbc.readMem(0xff4d));
        // E2 000B
        gbc.setState(0xbbe6, 0x5b4e, 0xe2f0, 0xcede, 0xc24f, 0x90c3, 0x0, 0x1);
        gbc.writeMem(0xbbe6, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5b4e, gbc.sp());
        EXPECT(0xbbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbbe6));
        EXPECT(0xe2, gbc.readMem(0xffde));
        // E2 000C
        gbc.setState(0x3ad4, 0xef88, 0x3660, 0xdc14, 0xc558, 0x3c04, 0x0, 0x0);
        gbc.writeMem(0x3ad4, { 0xe2 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xef88, gbc.sp());
        EXPECT(0x3ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xff14));
        // E2 000D
        gbc.setState(0x9a97, 0xb25f, 0x2dc0, 0xf80d, 0x1ea6, 0x39c, 0x1, 0x0);
        gbc.writeMem(0x9a97, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb25f, gbc.sp());
        EXPECT(0x9a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9a97));
        EXPECT(0x2d, gbc.readMem(0xff0d));
        // E2 000E
        gbc.setState(0x709d, 0xe706, 0x3420, 0x1d76, 0xfdf6, 0x66c5, 0x1, 0x1);
        gbc.writeMem(0x709d, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe706, gbc.sp());
        EXPECT(0x709e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xff76));
        // E2 000F
        gbc.setState(0xaff2, 0x59f2, 0x3c90, 0xde8c, 0x42e7, 0xaef0, 0x0, 0x1);
        gbc.writeMem(0xaff2, { 0xe2 });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x59f2, gbc.sp());
        EXPECT(0xaff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xaff2));
        EXPECT(0x3c, gbc.readMem(0xff8c));
        // E2 0010
        gbc.setState(0xe609, 0xd1a7, 0xd060, 0x6443, 0x3d7c, 0x3005, 0x0, 0x1);
        gbc.writeMem(0xe609, { 0xe2 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd1a7, gbc.sp());
        EXPECT(0xe60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe609));
        EXPECT(0xd0, gbc.readMem(0xff43));
        // E2 0011
        gbc.setState(0x4e8f, 0x9292, 0x6e0, 0x4d3a, 0xebe9, 0x9e0d, 0x0, 0x1);
        gbc.writeMem(0x4e8f, { 0xe2 });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9292, gbc.sp());
        EXPECT(0x4e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xff3a));
        // E2 0012
        gbc.setState(0x8e76, 0x1b3d, 0x8f40, 0xfa9f, 0x8025, 0xfb8d, 0x1, 0x0);
        gbc.writeMem(0x8e76, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1b3d, gbc.sp());
        EXPECT(0x8e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8e76));
        EXPECT(0x8f, gbc.readMem(0xff9f));
        // E2 0013
        gbc.setState(0xb63c, 0x76da, 0x1850, 0xd1dc, 0x99ba, 0xd8, 0x1, 0x0);
        gbc.writeMem(0xb63c, { 0xe2 });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x76da, gbc.sp());
        EXPECT(0xb63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb63c));
        EXPECT(0x18, gbc.readMem(0xffdc));
        // E2 0014
        gbc.setState(0xc3cf, 0xc09c, 0x9f40, 0x4f36, 0x312b, 0x7c0, 0x0, 0x1);
        gbc.writeMem(0xc3cf, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc09c, gbc.sp());
        EXPECT(0xc3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc3cf));
        EXPECT(0x9f, gbc.readMem(0xff36));
        // E2 0015
        gbc.setState(0x206c, 0x1775, 0xe460, 0xe636, 0x9d67, 0x6776, 0x1, 0x0);
        gbc.writeMem(0x206c, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1775, gbc.sp());
        EXPECT(0x206d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xff36));
        // E2 0016
        gbc.setState(0xe0e6, 0xf56e, 0xd3e0, 0x31f9, 0x7330, 0xa49e, 0x1, 0x0);
        gbc.writeMem(0xe0e6, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf56e, gbc.sp());
        EXPECT(0xe0e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe0e6));
        EXPECT(0xd3, gbc.readMem(0xfff9));
        // E2 0017
        gbc.setState(0x4ed6, 0xc245, 0x6860, 0x3f90, 0xb648, 0x870b, 0x0, 0x1);
        gbc.writeMem(0x4ed6, { 0xe2 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc245, gbc.sp());
        EXPECT(0x4ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xff90));
        // E2 0018
        gbc.setState(0xca9e, 0xdb1c, 0x8e10, 0xcb27, 0x54ce, 0xc4c2, 0x1, 0x0);
        gbc.writeMem(0xca9e, { 0xe2 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdb1c, gbc.sp());
        EXPECT(0xca9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xca9e));
        EXPECT(0x8e, gbc.readMem(0xff27));
        // E2 0019
        gbc.setState(0x8f40, 0x10db, 0xb500, 0x7edc, 0xe75c, 0x6219, 0x0, 0x1);
        gbc.writeMem(0x8f40, { 0xe2 });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x10db, gbc.sp());
        EXPECT(0x8f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8f40));
        EXPECT(0xb5, gbc.readMem(0xffdc));
        // E2 001A
        gbc.setState(0x4a5f, 0xe892, 0x70b0, 0xd79a, 0xcdd5, 0xd290, 0x1, 0x1);
        gbc.writeMem(0x4a5f, { 0xe2 });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe892, gbc.sp());
        EXPECT(0x4a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xff9a));
        // E2 001C
        gbc.setState(0x9b7b, 0xd1c3, 0xdaa0, 0x82c5, 0xc90f, 0xc4eb, 0x1, 0x0);
        gbc.writeMem(0x9b7b, { 0xe2 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd1c3, gbc.sp());
        EXPECT(0x9b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9b7b));
        EXPECT(0xda, gbc.readMem(0xffc5));
        // E2 001D
        gbc.setState(0x2eb4, 0xb1ba, 0x9010, 0xa916, 0xd669, 0xd2cf, 0x0, 0x0);
        gbc.writeMem(0x2eb4, { 0xe2 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb1ba, gbc.sp());
        EXPECT(0x2eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xff16));
        // E2 001E
        gbc.setState(0x4ebe, 0x4ec7, 0xad80, 0xdc25, 0xa4e7, 0x25a, 0x0, 0x1);
        gbc.writeMem(0x4ebe, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4ec7, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff25));
        // E2 001F
        gbc.setState(0x9e5d, 0x1459, 0x3b40, 0x2636, 0xc090, 0x8513, 0x0, 0x0);
        gbc.writeMem(0x9e5d, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1459, gbc.sp());
        EXPECT(0x9e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9e5d));
        EXPECT(0x3b, gbc.readMem(0xff36));
        // E2 0020
        gbc.setState(0x8a86, 0xaac6, 0xccc0, 0x54b9, 0xd0cc, 0xb762, 0x0, 0x1);
        gbc.writeMem(0x8a86, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaac6, gbc.sp());
        EXPECT(0x8a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8a86));
        EXPECT(0xcc, gbc.readMem(0xffb9));
        // E2 0021
        gbc.setState(0x3130, 0xc0e9, 0xf400, 0xbed3, 0x5021, 0x2c6f, 0x0, 0x0);
        gbc.writeMem(0x3130, { 0xe2 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc0e9, gbc.sp());
        EXPECT(0x3131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xffd3));
        // E2 0022
        gbc.setState(0xca95, 0x738f, 0x3f0, 0x4e31, 0x198b, 0xe973, 0x1, 0x1);
        gbc.writeMem(0xca95, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x738f, gbc.sp());
        EXPECT(0xca96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xca95));
        EXPECT(0x3, gbc.readMem(0xff31));
        // E2 0023
        gbc.setState(0xde85, 0xb11, 0xc410, 0x95b0, 0x33a0, 0x238c, 0x0, 0x0);
        gbc.writeMem(0xde85, { 0xe2 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb11, gbc.sp());
        EXPECT(0xde86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xde85));
        EXPECT(0xc4, gbc.readMem(0xffb0));
        // E2 0024
        gbc.setState(0xce76, 0xf6a, 0x6680, 0x7278, 0x9b51, 0x9aa8, 0x0, 0x0);
        gbc.writeMem(0xce76, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf6a, gbc.sp());
        EXPECT(0xce77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xce76));
        EXPECT(0x66, gbc.readMem(0xff78));
        // E2 0025
        gbc.setState(0xef62, 0x18d0, 0x6f40, 0x45be, 0xf57e, 0x99fb, 0x0, 0x1);
        gbc.writeMem(0xef62, { 0xe2 });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x18d0, gbc.sp());
        EXPECT(0xef63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xef62));
        EXPECT(0x6f, gbc.readMem(0xffbe));
        // E2 0026
        gbc.setState(0x480a, 0x7d8c, 0xa4d0, 0x7392, 0xb43b, 0x50c6, 0x1, 0x0);
        gbc.writeMem(0x480a, { 0xe2 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7d8c, gbc.sp());
        EXPECT(0x480b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xff92));
        // E2 0027
        gbc.setState(0x87ce, 0x3645, 0xef70, 0xb57c, 0x7ef8, 0xf36e, 0x1, 0x0);
        gbc.writeMem(0x87ce, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3645, gbc.sp());
        EXPECT(0x87cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x87ce));
        EXPECT(0xef, gbc.readMem(0xff7c));
        // E2 0028
        gbc.setState(0x8be8, 0x3b0c, 0x73f0, 0xea24, 0xba52, 0x91f8, 0x0, 0x0);
        gbc.writeMem(0x8be8, { 0xe2 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3b0c, gbc.sp());
        EXPECT(0x8be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8be8));
        EXPECT(0x73, gbc.readMem(0xff24));
        // E2 0029
        gbc.setState(0xa18f, 0x7b0c, 0x7ee0, 0xaa2a, 0xce7a, 0xf93b, 0x1, 0x0);
        gbc.writeMem(0xa18f, { 0xe2 });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7b0c, gbc.sp());
        EXPECT(0xa190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa18f));
        EXPECT(0x7e, gbc.readMem(0xff2a));
        // E2 002A
        gbc.setState(0x63ad, 0xb836, 0x6f60, 0x83b4, 0x855d, 0xea85, 0x1, 0x0);
        gbc.writeMem(0x63ad, { 0xe2 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb836, gbc.sp());
        EXPECT(0x63ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xffb4));
        // E2 002B
        gbc.setState(0x35a6, 0x4c5, 0xe6f0, 0xc895, 0x336, 0x4380, 0x1, 0x0);
        gbc.writeMem(0x35a6, { 0xe2 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4c5, gbc.sp());
        EXPECT(0x35a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xff95));
        // E2 002C
        gbc.setState(0x4186, 0xb6d6, 0x8a20, 0xd6b2, 0xece3, 0xa926, 0x0, 0x1);
        gbc.writeMem(0x4186, { 0xe2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb6d6, gbc.sp());
        EXPECT(0x4187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xffb2));
        // E2 002D
        gbc.setState(0x69d6, 0x2ba4, 0xb920, 0xcd30, 0x448c, 0x5f1d, 0x0, 0x0);
        gbc.writeMem(0x69d6, { 0xe2 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2ba4, gbc.sp());
        EXPECT(0x69d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xff30));
        // E2 002E
        gbc.setState(0x67d7, 0x3d31, 0xfca0, 0x8cca, 0x4f48, 0x4fa6, 0x0, 0x0);
        gbc.writeMem(0x67d7, { 0xe2 });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3d31, gbc.sp());
        EXPECT(0x67d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xffca));
        // E2 0030
        gbc.setState(0x6b6c, 0x358b, 0xe980, 0xc20a, 0x725a, 0x69a9, 0x0, 0x1);
        gbc.writeMem(0x6b6c, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x358b, gbc.sp());
        EXPECT(0x6b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xff0a));
        // E2 0031
        gbc.setState(0x43bc, 0x5830, 0x7660, 0x7278, 0xda8b, 0xf1d4, 0x0, 0x0);
        gbc.writeMem(0x43bc, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5830, gbc.sp());
        EXPECT(0x43bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff78));
        // E2 0032
        gbc.setState(0x727, 0xc2d8, 0xd1d0, 0xbfb0, 0x1ad6, 0x42c5, 0x0, 0x0);
        gbc.writeMem(0x727, { 0xe2 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc2d8, gbc.sp());
        EXPECT(0x728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xffb0));
        // E2 0033
        gbc.setState(0x8012, 0xb0, 0xb2f0, 0x92db, 0x5a4c, 0xb589, 0x1, 0x1);
        gbc.writeMem(0x8012, { 0xe2 });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb0, gbc.sp());
        EXPECT(0x8013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8012));
        EXPECT(0xb2, gbc.readMem(0xffdb));
        // E2 0034
        gbc.setState(0x7508, 0x17dd, 0xc5f0, 0x258b, 0x2773, 0x257, 0x0, 0x0);
        gbc.writeMem(0x7508, { 0xe2 });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x17dd, gbc.sp());
        EXPECT(0x7509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xff8b));
        // E2 0035
        gbc.setState(0xa8d, 0x7b30, 0xa700, 0x3142, 0xe6d8, 0x8b0a, 0x1, 0x1);
        gbc.writeMem(0xa8d, { 0xe2 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7b30, gbc.sp());
        EXPECT(0xa8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xff42));
        // E2 0036
        gbc.setState(0xc88f, 0xfad1, 0xa790, 0xf569, 0xda7f, 0x7f7a, 0x0, 0x0);
        gbc.writeMem(0xc88f, { 0xe2 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfad1, gbc.sp());
        EXPECT(0xc890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc88f));
        EXPECT(0xa7, gbc.readMem(0xff69));
        // E2 0037
        gbc.setState(0xcd0a, 0x9595, 0xac70, 0x2c2e, 0x440b, 0x3d9c, 0x1, 0x1);
        gbc.writeMem(0xcd0a, { 0xe2 });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9595, gbc.sp());
        EXPECT(0xcd0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcd0a));
        EXPECT(0xac, gbc.readMem(0xff2e));
        // E2 0038
        gbc.setState(0x8ecd, 0xee59, 0xa4d0, 0x5e7f, 0x9543, 0x56f9, 0x0, 0x0);
        gbc.writeMem(0x8ecd, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xee59, gbc.sp());
        EXPECT(0x8ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8ecd));
        EXPECT(0xa4, gbc.readMem(0xff7f));
        // E2 0039
        gbc.setState(0x2abf, 0xae22, 0x9c50, 0x4bde, 0x9485, 0x871f, 0x0, 0x1);
        gbc.writeMem(0x2abf, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xae22, gbc.sp());
        EXPECT(0x2ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xffde));
        // E2 003B
        gbc.setState(0x8d74, 0xfed4, 0xa630, 0x3580, 0x6abb, 0x97f7, 0x1, 0x0);
        gbc.writeMem(0x8d74, { 0xe2 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfed4, gbc.sp());
        EXPECT(0x8d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8d74));
        EXPECT(0xa6, gbc.readMem(0xff80));
        // E2 003C
        gbc.setState(0xe04d, 0x111c, 0xb310, 0x65c1, 0xd87e, 0xfcc9, 0x1, 0x0);
        gbc.writeMem(0xe04d, { 0xe2 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x111c, gbc.sp());
        EXPECT(0xe04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe04d));
        EXPECT(0xb3, gbc.readMem(0xffc1));
        // E2 003D
        gbc.setState(0x5156, 0xbc, 0x1c10, 0xc11f, 0x6c78, 0x234d, 0x0, 0x1);
        gbc.writeMem(0x5156, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbc, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xff1f));
        // E2 003E
        gbc.setState(0x9705, 0x8f3e, 0x5d10, 0xb645, 0xa608, 0x581b, 0x1, 0x1);
        gbc.writeMem(0x9705, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8f3e, gbc.sp());
        EXPECT(0x9706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9705));
        EXPECT(0x5d, gbc.readMem(0xff45));
        // E2 003F
        gbc.setState(0x6bd3, 0xfad8, 0xe160, 0x7e0d, 0x68bc, 0x5e15, 0x0, 0x1);
        gbc.writeMem(0x6bd3, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfad8, gbc.sp());
        EXPECT(0x6bd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xff0d));
        // E2 0040
        gbc.setState(0x31f3, 0x3056, 0x54b0, 0xb36e, 0xb7be, 0xca59, 0x1, 0x0);
        gbc.writeMem(0x31f3, { 0xe2 });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3056, gbc.sp());
        EXPECT(0x31f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xff6e));
        // E2 0041
        gbc.setState(0xd1f1, 0xd39e, 0x6360, 0x101b, 0x7ea1, 0x1cc3, 0x1, 0x0);
        gbc.writeMem(0xd1f1, { 0xe2 });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd39e, gbc.sp());
        EXPECT(0xd1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd1f1));
        EXPECT(0x63, gbc.readMem(0xff1b));
        // E2 0042
        gbc.setState(0x2aa0, 0xd50d, 0x8150, 0xd6c1, 0x71f7, 0xcf09, 0x0, 0x0);
        gbc.writeMem(0x2aa0, { 0xe2 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd50d, gbc.sp());
        EXPECT(0x2aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xffc1));
        // E2 0043
        gbc.setState(0x5fcb, 0xf942, 0xcdf0, 0x1aab, 0xd225, 0xc409, 0x0, 0x0);
        gbc.writeMem(0x5fcb, { 0xe2 });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf942, gbc.sp());
        EXPECT(0x5fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xffab));
        // E2 0044
        gbc.setState(0x4cd2, 0xcea1, 0xdec0, 0x36b9, 0x411c, 0x70ab, 0x1, 0x1);
        gbc.writeMem(0x4cd2, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcea1, gbc.sp());
        EXPECT(0x4cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xffb9));
        // E2 0045
        gbc.setState(0x6536, 0x6155, 0x7330, 0x4394, 0x77cb, 0xeefa, 0x0, 0x0);
        gbc.writeMem(0x6536, { 0xe2 });
        gbc.writeMem(0xff94, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6155, gbc.sp());
        EXPECT(0x6537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xff94));
        // E2 0046
        gbc.setState(0xe111, 0xa683, 0x9fd0, 0x8d24, 0x93d6, 0x31b1, 0x0, 0x1);
        gbc.writeMem(0xe111, { 0xe2 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa683, gbc.sp());
        EXPECT(0xe112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe111));
        EXPECT(0x9f, gbc.readMem(0xff24));
        // E2 0047
        gbc.setState(0xe4e6, 0x5848, 0x140, 0x112d, 0xc836, 0xfd92, 0x1, 0x1);
        gbc.writeMem(0xe4e6, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5848, gbc.sp());
        EXPECT(0xe4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe4e6));
        EXPECT(0x1, gbc.readMem(0xff2d));
        // E2 0048
        gbc.setState(0x979a, 0xbfd5, 0x6410, 0xd13b, 0xced, 0xebcb, 0x0, 0x1);
        gbc.writeMem(0x979a, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbfd5, gbc.sp());
        EXPECT(0x979b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x979a));
        EXPECT(0x64, gbc.readMem(0xff3b));
        // E2 0049
        gbc.setState(0xeae0, 0x438a, 0x1660, 0x9c71, 0x9079, 0x7dc2, 0x1, 0x1);
        gbc.writeMem(0xeae0, { 0xe2 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x438a, gbc.sp());
        EXPECT(0xeae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xeae0));
        EXPECT(0x16, gbc.readMem(0xff71));
        // E2 004A
        gbc.setState(0x5b5c, 0xc0ff, 0x4720, 0x93ab, 0x96c5, 0xb9af, 0x1, 0x0);
        gbc.writeMem(0x5b5c, { 0xe2 });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc0ff, gbc.sp());
        EXPECT(0x5b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xffab));
        // E2 004C
        gbc.setState(0x9c4f, 0x94de, 0x43e0, 0x1d28, 0x55c3, 0xb86e, 0x0, 0x0);
        gbc.writeMem(0x9c4f, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x94de, gbc.sp());
        EXPECT(0x9c50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9c4f));
        EXPECT(0x43, gbc.readMem(0xff28));
        // E2 004D
        gbc.setState(0xeedd, 0x5901, 0x29c0, 0xc4f9, 0xc69e, 0xe0c7, 0x1, 0x1);
        gbc.writeMem(0xeedd, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5901, gbc.sp());
        EXPECT(0xeede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xeedd));
        EXPECT(0x29, gbc.readMem(0xfff9));
        // E2 004E
        gbc.setState(0x240f, 0x26f5, 0x74c0, 0xcf7d, 0x16b, 0x993e, 0x1, 0x0);
        gbc.writeMem(0x240f, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x26f5, gbc.sp());
        EXPECT(0x2410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xff7d));
        // E2 004F
        gbc.setState(0x8329, 0x92aa, 0x2610, 0xea5e, 0x4b8a, 0x7ae7, 0x1, 0x1);
        gbc.writeMem(0x8329, { 0xe2 });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x92aa, gbc.sp());
        EXPECT(0x832a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8329));
        EXPECT(0x26, gbc.readMem(0xff5e));
        // E2 0050
        gbc.setState(0x8a9, 0x8891, 0x2990, 0xf512, 0xb0e1, 0x99e2, 0x1, 0x1);
        gbc.writeMem(0x8a9, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8891, gbc.sp());
        EXPECT(0x8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xff12));
        // E2 0051
        gbc.setState(0x947, 0xc592, 0xe9c0, 0x8f1d, 0x8baf, 0x5763, 0x1, 0x1);
        gbc.writeMem(0x947, { 0xe2 });
        gbc.writeMem(0xff1d, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc592, gbc.sp());
        EXPECT(0x948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xff1d));
        // E2 0052
        gbc.setState(0x3f66, 0x875b, 0xdc20, 0xf379, 0x384c, 0x180, 0x1, 0x1);
        gbc.writeMem(0x3f66, { 0xe2 });
        gbc.writeMem(0xff79, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x875b, gbc.sp());
        EXPECT(0x3f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xff79));
        // E2 0053
        gbc.setState(0x2d62, 0x76fb, 0xd310, 0x40d5, 0x218c, 0xff59, 0x1, 0x1);
        gbc.writeMem(0x2d62, { 0xe2 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x76fb, gbc.sp());
        EXPECT(0x2d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xffd5));
        // E2 0054
        gbc.setState(0xbb20, 0x24a9, 0x9380, 0xb4e3, 0xa4fd, 0xe77e, 0x0, 0x0);
        gbc.writeMem(0xbb20, { 0xe2 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x24a9, gbc.sp());
        EXPECT(0xbb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbb20));
        EXPECT(0x93, gbc.readMem(0xffe3));
        // E2 0055
        gbc.setState(0x66d0, 0x87b9, 0x6b00, 0x179d, 0xf954, 0xbbdd, 0x0, 0x1);
        gbc.writeMem(0x66d0, { 0xe2 });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x87b9, gbc.sp());
        EXPECT(0x66d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xff9d));
        // E2 0056
        gbc.setState(0xaf30, 0x9ca2, 0xd380, 0xaf90, 0x447e, 0x1f50, 0x1, 0x1);
        gbc.writeMem(0xaf30, { 0xe2 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9ca2, gbc.sp());
        EXPECT(0xaf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xaf30));
        EXPECT(0xd3, gbc.readMem(0xff90));
        // E2 0057
        gbc.setState(0xbb16, 0xdb47, 0xdde0, 0xe1cd, 0xf497, 0x8d4f, 0x1, 0x1);
        gbc.writeMem(0xbb16, { 0xe2 });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdb47, gbc.sp());
        EXPECT(0xbb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbb16));
        EXPECT(0xdd, gbc.readMem(0xffcd));
        // E2 0059
        gbc.setState(0xaa6f, 0xeeb, 0x31d0, 0xe023, 0x96c, 0xfb8, 0x0, 0x1);
        gbc.writeMem(0xaa6f, { 0xe2 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xeeb, gbc.sp());
        EXPECT(0xaa70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xaa6f));
        EXPECT(0x31, gbc.readMem(0xff23));
        // E2 005B
        gbc.setState(0x4901, 0xc1a4, 0xff50, 0xb788, 0x3466, 0x9fa, 0x1, 0x1);
        gbc.writeMem(0x4901, { 0xe2 });
        gbc.writeMem(0xff88, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc1a4, gbc.sp());
        EXPECT(0x4902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xff88));
        // E2 005C
        gbc.setState(0xa48a, 0x5bfd, 0xb10, 0x9264, 0x5202, 0xf065, 0x0, 0x0);
        gbc.writeMem(0xa48a, { 0xe2 });
        gbc.writeMem(0xff64, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5bfd, gbc.sp());
        EXPECT(0xa48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa48a));
        EXPECT(0xb, gbc.readMem(0xff64));
        // E2 005D
        gbc.setState(0x3639, 0xd911, 0x94c0, 0x9c20, 0xb7f4, 0xde, 0x0, 0x1);
        gbc.writeMem(0x3639, { 0xe2 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd911, gbc.sp());
        EXPECT(0x363a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xff20));
        // E2 005E
        gbc.setState(0xcd0f, 0x7931, 0x86a0, 0x6e21, 0xd53f, 0x7581, 0x0, 0x1);
        gbc.writeMem(0xcd0f, { 0xe2 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7931, gbc.sp());
        EXPECT(0xcd10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcd0f));
        EXPECT(0x86, gbc.readMem(0xff21));
        // E2 005F
        gbc.setState(0x1427, 0x682, 0x9620, 0xb778, 0x8cc7, 0x9553, 0x0, 0x0);
        gbc.writeMem(0x1427, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x682, gbc.sp());
        EXPECT(0x1428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xff78));
        // E2 0060
        gbc.setState(0x6f8a, 0xf04d, 0xb950, 0x59cd, 0x7537, 0x7b81, 0x1, 0x1);
        gbc.writeMem(0x6f8a, { 0xe2 });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf04d, gbc.sp());
        EXPECT(0x6f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xffcd));
        // E2 0061
        gbc.setState(0x6b10, 0xdcd9, 0x6e50, 0xe9e, 0x8df2, 0xd91a, 0x1, 0x1);
        gbc.writeMem(0x6b10, { 0xe2 });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdcd9, gbc.sp());
        EXPECT(0x6b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xff9e));
        // E2 0062
        gbc.setState(0x96f9, 0x75a9, 0xa760, 0x179a, 0x2600, 0x9950, 0x0, 0x0);
        gbc.writeMem(0x96f9, { 0xe2 });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x75a9, gbc.sp());
        EXPECT(0x96fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x96f9));
        EXPECT(0xa7, gbc.readMem(0xff9a));
        // E2 0063
        gbc.setState(0x8136, 0x3adc, 0xd2c0, 0x418f, 0x17ac, 0x4bbc, 0x0, 0x1);
        gbc.writeMem(0x8136, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3adc, gbc.sp());
        EXPECT(0x8137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8136));
        EXPECT(0xd2, gbc.readMem(0xff8f));
        // E2 0064
        gbc.setState(0xb96, 0xaf69, 0x31d0, 0x8481, 0x9a38, 0x26c2, 0x0, 0x1);
        gbc.writeMem(0xb96, { 0xe2 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xaf69, gbc.sp());
        EXPECT(0xb97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xff81));
        // E2 0065
        gbc.setState(0xad4e, 0xe721, 0x60e0, 0x1e70, 0x44cd, 0x5259, 0x1, 0x1);
        gbc.writeMem(0xad4e, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe721, gbc.sp());
        EXPECT(0xad4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xad4e));
        EXPECT(0x60, gbc.readMem(0xff70));
        // E2 0066
        gbc.setState(0x5eb, 0x1ab9, 0x3080, 0x596f, 0x79b0, 0x35aa, 0x1, 0x0);
        gbc.writeMem(0x5eb, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1ab9, gbc.sp());
        EXPECT(0x5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xff6f));
        // E2 0068
        gbc.setState(0x857f, 0xa35f, 0xf550, 0x32c1, 0x1325, 0xa710, 0x1, 0x1);
        gbc.writeMem(0x857f, { 0xe2 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa35f, gbc.sp());
        EXPECT(0x8580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x857f));
        EXPECT(0xf5, gbc.readMem(0xffc1));
        // E2 0069
        gbc.setState(0x41f9, 0x2608, 0xd310, 0x885a, 0xfd2f, 0xa3f5, 0x1, 0x1);
        gbc.writeMem(0x41f9, { 0xe2 });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2608, gbc.sp());
        EXPECT(0x41fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xff5a));
        // E2 006A
        gbc.setState(0x8f65, 0xba3, 0xbfa0, 0x9ede, 0x6890, 0x4d94, 0x1, 0x1);
        gbc.writeMem(0x8f65, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xba3, gbc.sp());
        EXPECT(0x8f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8f65));
        EXPECT(0xbf, gbc.readMem(0xffde));
        // E2 006B
        gbc.setState(0x38a5, 0xc673, 0x2ce0, 0x9694, 0x8dc9, 0xd7da, 0x1, 0x0);
        gbc.writeMem(0x38a5, { 0xe2 });
        gbc.writeMem(0xff94, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc673, gbc.sp());
        EXPECT(0x38a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xff94));
        // E2 006C
        gbc.setState(0xcc35, 0x3749, 0x8080, 0x55ea, 0xdfdf, 0xc06e, 0x0, 0x0);
        gbc.writeMem(0xcc35, { 0xe2 });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3749, gbc.sp());
        EXPECT(0xcc36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcc35));
        EXPECT(0x80, gbc.readMem(0xffea));
        // E2 006D
        gbc.setState(0xb435, 0xea5d, 0xf200, 0x9c40, 0x8536, 0xc7b9, 0x0, 0x1);
        gbc.writeMem(0xb435, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xea5d, gbc.sp());
        EXPECT(0xb436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb435));
        EXPECT(0xf2, gbc.readMem(0xff40));
        // E2 006F
        gbc.setState(0x381e, 0xceb1, 0x230, 0xbd84, 0x4bf0, 0x4c1a, 0x1, 0x0);
        gbc.writeMem(0x381e, { 0xe2 });
        gbc.writeMem(0xff84, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xceb1, gbc.sp());
        EXPECT(0x381f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xff84));
        // E2 0070
        gbc.setState(0x86cc, 0x47d2, 0x4ec0, 0x846c, 0x1213, 0x5506, 0x1, 0x1);
        gbc.writeMem(0x86cc, { 0xe2 });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x47d2, gbc.sp());
        EXPECT(0x86cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x86cc));
        EXPECT(0x4e, gbc.readMem(0xff6c));
        // E2 0071
        gbc.setState(0xc399, 0xdde4, 0xfb60, 0x3729, 0xf942, 0xc70c, 0x0, 0x0);
        gbc.writeMem(0xc399, { 0xe2 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdde4, gbc.sp());
        EXPECT(0xc39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc399));
        EXPECT(0xfb, gbc.readMem(0xff29));
        // E2 0072
        gbc.setState(0xba19, 0x23f6, 0x5a40, 0x8eac, 0xea41, 0x30ec, 0x1, 0x1);
        gbc.writeMem(0xba19, { 0xe2 });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x23f6, gbc.sp());
        EXPECT(0xba1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xba19));
        EXPECT(0x5a, gbc.readMem(0xffac));
        // E2 0073
        gbc.setState(0x72b6, 0x462a, 0xf240, 0x6a87, 0xaad3, 0xfefd, 0x1, 0x0);
        gbc.writeMem(0x72b6, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x462a, gbc.sp());
        EXPECT(0x72b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xff87));
        // E2 0074
        gbc.setState(0x9329, 0x192c, 0xbe20, 0x495e, 0x26cd, 0xfe37, 0x0, 0x1);
        gbc.writeMem(0x9329, { 0xe2 });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x192c, gbc.sp());
        EXPECT(0x932a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9329));
        EXPECT(0xbe, gbc.readMem(0xff5e));
        // E2 0075
        gbc.setState(0x97c5, 0x9f0a, 0xd570, 0xdc6a, 0xfaf4, 0xf944, 0x0, 0x1);
        gbc.writeMem(0x97c5, { 0xe2 });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9f0a, gbc.sp());
        EXPECT(0x97c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x97c5));
        EXPECT(0xd5, gbc.readMem(0xff6a));
        // E2 0076
        gbc.setState(0x2a87, 0xd711, 0xeaf0, 0xca8b, 0xee8b, 0x9743, 0x0, 0x1);
        gbc.writeMem(0x2a87, { 0xe2 });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd711, gbc.sp());
        EXPECT(0x2a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xff8b));
        // E2 0077
        gbc.setState(0x39a6, 0x7662, 0xfdc0, 0x9ac0, 0x28f4, 0x147e, 0x1, 0x1);
        gbc.writeMem(0x39a6, { 0xe2 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7662, gbc.sp());
        EXPECT(0x39a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xffc0));
        // E2 0079
        gbc.setState(0x6d17, 0x74fe, 0xc740, 0x74ca, 0x46e6, 0x1bec, 0x0, 0x1);
        gbc.writeMem(0x6d17, { 0xe2 });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x74fe, gbc.sp());
        EXPECT(0x6d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xffca));
        // E2 007A
        gbc.setState(0xa4b5, 0xfc8d, 0xd170, 0xb245, 0x9e6f, 0xe80e, 0x1, 0x1);
        gbc.writeMem(0xa4b5, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfc8d, gbc.sp());
        EXPECT(0xa4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa4b5));
        EXPECT(0xd1, gbc.readMem(0xff45));
        // E2 007B
        gbc.setState(0xed09, 0xb1ec, 0x4ee0, 0x4469, 0xc54e, 0x4bba, 0x1, 0x1);
        gbc.writeMem(0xed09, { 0xe2 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb1ec, gbc.sp());
        EXPECT(0xed0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xed09));
        EXPECT(0x4e, gbc.readMem(0xff69));
        // E2 007C
        gbc.setState(0x2105, 0x536c, 0x8790, 0x1259, 0x410a, 0xaa36, 0x0, 0x1);
        gbc.writeMem(0x2105, { 0xe2 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x536c, gbc.sp());
        EXPECT(0x2106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xff59));
        // E2 007E
        gbc.setState(0xe0de, 0xae1b, 0x4c80, 0xd348, 0xa38d, 0xb37b, 0x0, 0x1);
        gbc.writeMem(0xe0de, { 0xe2 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xae1b, gbc.sp());
        EXPECT(0xe0df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe0de));
        EXPECT(0x4c, gbc.readMem(0xff48));
        // E2 007F
        gbc.setState(0x4982, 0x3d84, 0x8770, 0x29e1, 0x7fa9, 0x2b80, 0x1, 0x1);
        gbc.writeMem(0x4982, { 0xe2 });
        gbc.writeMem(0xffe1, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3d84, gbc.sp());
        EXPECT(0x4983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xffe1));
        // E2 0080
        gbc.setState(0x4f07, 0xc610, 0x1b90, 0x8c3, 0x6189, 0xec20, 0x0, 0x1);
        gbc.writeMem(0x4f07, { 0xe2 });
        gbc.writeMem(0xffc3, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc610, gbc.sp());
        EXPECT(0x4f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xffc3));
        // E2 0081
        gbc.setState(0xa66c, 0xf6c9, 0x8e10, 0x87dd, 0x818, 0xf3e6, 0x1, 0x0);
        gbc.writeMem(0xa66c, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf6c9, gbc.sp());
        EXPECT(0xa66d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa66c));
        EXPECT(0x8e, gbc.readMem(0xffdd));
        // E2 0082
        gbc.setState(0x32dc, 0xd076, 0xac40, 0x2d88, 0xcb1b, 0xb6f, 0x1, 0x0);
        gbc.writeMem(0x32dc, { 0xe2 });
        gbc.writeMem(0xff88, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd076, gbc.sp());
        EXPECT(0x32dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xff88));
        // E2 0083
        gbc.setState(0xc607, 0x6c77, 0xd620, 0x56c6, 0x1a3c, 0x3058, 0x1, 0x0);
        gbc.writeMem(0xc607, { 0xe2 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6c77, gbc.sp());
        EXPECT(0xc608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc607));
        EXPECT(0xd6, gbc.readMem(0xffc6));
        // E2 0084
        gbc.setState(0x7d40, 0xec24, 0xdda0, 0x680a, 0xed31, 0x57cf, 0x0, 0x1);
        gbc.writeMem(0x7d40, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xec24, gbc.sp());
        EXPECT(0x7d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xff0a));
        // E2 0085
        gbc.setState(0xb327, 0xa1a2, 0x2a10, 0xd548, 0xdc10, 0xdca0, 0x0, 0x1);
        gbc.writeMem(0xb327, { 0xe2 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa1a2, gbc.sp());
        EXPECT(0xb328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb327));
        EXPECT(0x2a, gbc.readMem(0xff48));
        // E2 0088
        gbc.setState(0x3469, 0x2aa0, 0x6e90, 0xbaee, 0x1880, 0xf97, 0x1, 0x1);
        gbc.writeMem(0x3469, { 0xe2 });
        gbc.writeMem(0xffee, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2aa0, gbc.sp());
        EXPECT(0x346a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xffee));
        // E2 0089
        gbc.setState(0x3b5b, 0x5e01, 0xd50, 0xa003, 0xac88, 0xdba, 0x1, 0x1);
        gbc.writeMem(0x3b5b, { 0xe2 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5e01, gbc.sp());
        EXPECT(0x3b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xff03));
        // E2 008A
        gbc.setState(0x824, 0xb43, 0x74a0, 0x1b45, 0xcd8f, 0x9af6, 0x1, 0x1);
        gbc.writeMem(0x824, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb43, gbc.sp());
        EXPECT(0x825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xff45));
        // E2 008B
        gbc.setState(0x58bd, 0xbeee, 0x6330, 0x9a15, 0x42bb, 0xe3d1, 0x1, 0x0);
        gbc.writeMem(0x58bd, { 0xe2 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbeee, gbc.sp());
        EXPECT(0x58be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xff15));
        // E2 008D
        gbc.setState(0xb3e4, 0x52e1, 0xcea0, 0x422, 0x8e30, 0x3bc0, 0x0, 0x1);
        gbc.writeMem(0xb3e4, { 0xe2 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x52e1, gbc.sp());
        EXPECT(0xb3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb3e4));
        EXPECT(0xce, gbc.readMem(0xff22));
        // E2 008E
        gbc.setState(0x9b72, 0x82db, 0x6cd0, 0x2118, 0x6c41, 0x3377, 0x1, 0x0);
        gbc.writeMem(0x9b72, { 0xe2 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x82db, gbc.sp());
        EXPECT(0x9b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9b72));
        EXPECT(0x6c, gbc.readMem(0xff18));
        // E2 008F
        gbc.setState(0xb09b, 0x5fa6, 0xef40, 0x287e, 0xc15c, 0x9e3d, 0x1, 0x1);
        gbc.writeMem(0xb09b, { 0xe2 });
        gbc.writeMem(0xff7e, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5fa6, gbc.sp());
        EXPECT(0xb09c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb09b));
        EXPECT(0xef, gbc.readMem(0xff7e));
        // E2 0090
        gbc.setState(0xbc7d, 0xce1a, 0xbce0, 0xf616, 0xc808, 0x784e, 0x0, 0x0);
        gbc.writeMem(0xbc7d, { 0xe2 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xce1a, gbc.sp());
        EXPECT(0xbc7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbc7d));
        EXPECT(0xbc, gbc.readMem(0xff16));
        // E2 0091
        gbc.setState(0xa811, 0x68f2, 0xb270, 0xa183, 0xae27, 0xb753, 0x1, 0x1);
        gbc.writeMem(0xa811, { 0xe2 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x68f2, gbc.sp());
        EXPECT(0xa812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa811));
        EXPECT(0xb2, gbc.readMem(0xff83));
        // E2 0092
        gbc.setState(0x738, 0xfe5c, 0x5d40, 0xc5cd, 0x709a, 0x1f81, 0x0, 0x0);
        gbc.writeMem(0x738, { 0xe2 });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfe5c, gbc.sp());
        EXPECT(0x739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xffcd));
        // E2 0093
        gbc.setState(0x2c9f, 0xd902, 0xc3f0, 0xf11b, 0xdaf, 0x297b, 0x1, 0x1);
        gbc.writeMem(0x2c9f, { 0xe2 });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd902, gbc.sp());
        EXPECT(0x2ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xff1b));
        // E2 0094
        gbc.setState(0x8f1b, 0xaae7, 0xcda0, 0x23c5, 0x5075, 0xdb9b, 0x0, 0x1);
        gbc.writeMem(0x8f1b, { 0xe2 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xaae7, gbc.sp());
        EXPECT(0x8f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8f1b));
        EXPECT(0xcd, gbc.readMem(0xffc5));
        // E2 0095
        gbc.setState(0x201f, 0x2254, 0xc1d0, 0x6af, 0x4334, 0xf9ec, 0x1, 0x1);
        gbc.writeMem(0x201f, { 0xe2 });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2254, gbc.sp());
        EXPECT(0x2020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xffaf));
        // E2 0096
        gbc.setState(0x1932, 0x53af, 0xf6d0, 0xc931, 0x9cce, 0x2c6, 0x1, 0x0);
        gbc.writeMem(0x1932, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x53af, gbc.sp());
        EXPECT(0x1933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xff31));
        // E2 0098
        gbc.setState(0xbc51, 0x6306, 0x94c0, 0x33ce, 0x5740, 0x3e3a, 0x0, 0x1);
        gbc.writeMem(0xbc51, { 0xe2 });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6306, gbc.sp());
        EXPECT(0xbc52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbc51));
        EXPECT(0x94, gbc.readMem(0xffce));
        // E2 0099
        gbc.setState(0x37eb, 0x4563, 0xa040, 0x1112, 0xf2ca, 0x678d, 0x0, 0x0);
        gbc.writeMem(0x37eb, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4563, gbc.sp());
        EXPECT(0x37ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xff12));
        // E2 009A
        gbc.setState(0x90c0, 0xbe22, 0x2f70, 0x930c, 0xfd1a, 0xf78e, 0x0, 0x1);
        gbc.writeMem(0x90c0, { 0xe2 });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbe22, gbc.sp());
        EXPECT(0x90c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x90c0));
        EXPECT(0x2f, gbc.readMem(0xff0c));
        // E2 009B
        gbc.setState(0x7bed, 0xece3, 0xc80, 0x8d7e, 0x10d1, 0x169d, 0x1, 0x1);
        gbc.writeMem(0x7bed, { 0xe2 });
        gbc.writeMem(0xff7e, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xece3, gbc.sp());
        EXPECT(0x7bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xff7e));
        // E2 009C
        gbc.setState(0x36f5, 0x1460, 0x5240, 0xa878, 0x4c09, 0x4264, 0x0, 0x1);
        gbc.writeMem(0x36f5, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1460, gbc.sp());
        EXPECT(0x36f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff78));
        // E2 009D
        gbc.setState(0xaa9c, 0x3fbd, 0xbf00, 0x44f, 0x8de9, 0x986a, 0x0, 0x0);
        gbc.writeMem(0xaa9c, { 0xe2 });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3fbd, gbc.sp());
        EXPECT(0xaa9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xaa9c));
        EXPECT(0xbf, gbc.readMem(0xff4f));
        // E2 009E
        gbc.setState(0x6288, 0xdddb, 0x2080, 0x249, 0x4d5f, 0x1052, 0x1, 0x0);
        gbc.writeMem(0x6288, { 0xe2 });
        gbc.writeMem(0xff49, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdddb, gbc.sp());
        EXPECT(0x6289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xff49));
        // E2 009F
        gbc.setState(0x565a, 0x2f7, 0xc670, 0x2551, 0xc6de, 0xea0, 0x0, 0x0);
        gbc.writeMem(0x565a, { 0xe2 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2f7, gbc.sp());
        EXPECT(0x565b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xff51));
        // E2 00A0
        gbc.setState(0x8482, 0xf4e6, 0xffb0, 0xeed2, 0xca61, 0xecb0, 0x0, 0x1);
        gbc.writeMem(0x8482, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf4e6, gbc.sp());
        EXPECT(0x8483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8482));
        EXPECT(0xff, gbc.readMem(0xffd2));
        // E2 00A1
        gbc.setState(0x256c, 0xdb1e, 0xccc0, 0x89d1, 0xd331, 0x5c03, 0x0, 0x0);
        gbc.writeMem(0x256c, { 0xe2 });
        gbc.writeMem(0xffd1, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdb1e, gbc.sp());
        EXPECT(0x256d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xffd1));
        // E2 00A2
        gbc.setState(0x2582, 0xb63, 0xebf0, 0xd89c, 0x63ce, 0xb010, 0x1, 0x0);
        gbc.writeMem(0x2582, { 0xe2 });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb63, gbc.sp());
        EXPECT(0x2583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xff9c));
        // E2 00A3
        gbc.setState(0x2fc1, 0x567a, 0x78b0, 0x2026, 0xec3b, 0x1cb9, 0x1, 0x0);
        gbc.writeMem(0x2fc1, { 0xe2 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x567a, gbc.sp());
        EXPECT(0x2fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xff26));
        // E2 00A4
        gbc.setState(0x238, 0x4560, 0xb080, 0xe4f6, 0x4297, 0xae6b, 0x0, 0x1);
        gbc.writeMem(0x238, { 0xe2 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4560, gbc.sp());
        EXPECT(0x239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xfff6));
        // E2 00A5
        gbc.setState(0x5f4e, 0xf360, 0x78e0, 0xdd7d, 0xd849, 0x723f, 0x1, 0x1);
        gbc.writeMem(0x5f4e, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf360, gbc.sp());
        EXPECT(0x5f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xff7d));
        // E2 00A6
        gbc.setState(0x7995, 0x75ec, 0x5350, 0x3818, 0x5c9e, 0xb136, 0x1, 0x1);
        gbc.writeMem(0x7995, { 0xe2 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x75ec, gbc.sp());
        EXPECT(0x7996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xff18));
        // E2 00A7
        gbc.setState(0x598c, 0xe446, 0xa3e0, 0xa7de, 0x8e90, 0x889c, 0x1, 0x1);
        gbc.writeMem(0x598c, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe446, gbc.sp());
        EXPECT(0x598d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xffde));
        // E2 00A8
        gbc.setState(0x6098, 0x693b, 0xabc0, 0xf731, 0x49fb, 0x1183, 0x0, 0x1);
        gbc.writeMem(0x6098, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x693b, gbc.sp());
        EXPECT(0x6099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xff31));
        // E2 00A9
        gbc.setState(0x5e54, 0xdf58, 0x6330, 0x50a9, 0x73a0, 0xf1e6, 0x1, 0x0);
        gbc.writeMem(0x5e54, { 0xe2 });
        gbc.writeMem(0xffa9, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdf58, gbc.sp());
        EXPECT(0x5e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xffa9));
        // E2 00AA
        gbc.setState(0x8743, 0xb579, 0x1ef0, 0x593b, 0x6aad, 0x7694, 0x1, 0x1);
        gbc.writeMem(0x8743, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb579, gbc.sp());
        EXPECT(0x8744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8743));
        EXPECT(0x1e, gbc.readMem(0xff3b));
        // E2 00AB
        gbc.setState(0x743b, 0xf11c, 0x4950, 0xe1df, 0x4fc7, 0x5439, 0x0, 0x1);
        gbc.writeMem(0x743b, { 0xe2 });
        gbc.writeMem(0xffdf, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf11c, gbc.sp());
        EXPECT(0x743c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xffdf));
        // E2 00AC
        gbc.setState(0x5fdc, 0xe7ce, 0xb770, 0xfc44, 0xa86c, 0xfa9e, 0x1, 0x1);
        gbc.writeMem(0x5fdc, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe7ce, gbc.sp());
        EXPECT(0x5fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xff44));
        // E2 00AD
        gbc.setState(0x469b, 0xab3a, 0x77c0, 0xd765, 0x42e4, 0xc4c8, 0x1, 0x0);
        gbc.writeMem(0x469b, { 0xe2 });
        gbc.writeMem(0xff65, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xab3a, gbc.sp());
        EXPECT(0x469c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xff65));
        // E2 00AE
        gbc.setState(0x83a2, 0xd037, 0x7080, 0x31a, 0x7dfb, 0x1e82, 0x0, 0x0);
        gbc.writeMem(0x83a2, { 0xe2 });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd037, gbc.sp());
        EXPECT(0x83a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x83a2));
        EXPECT(0x70, gbc.readMem(0xff1a));
        // E2 00AF
        gbc.setState(0x464e, 0x9b2d, 0xfa90, 0x39e7, 0x77e0, 0x3d66, 0x1, 0x1);
        gbc.writeMem(0x464e, { 0xe2 });
        gbc.writeMem(0xffe7, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9b2d, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xffe7));
        // E2 00B0
        gbc.setState(0xa78c, 0xf700, 0xec40, 0xc2d1, 0xf6d5, 0xdcc5, 0x1, 0x1);
        gbc.writeMem(0xa78c, { 0xe2 });
        gbc.writeMem(0xffd1, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf700, gbc.sp());
        EXPECT(0xa78d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa78c));
        EXPECT(0xec, gbc.readMem(0xffd1));
        // E2 00B1
        gbc.setState(0x5a5, 0xa5a8, 0x3800, 0xe78f, 0x1271, 0xe695, 0x0, 0x1);
        gbc.writeMem(0x5a5, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa5a8, gbc.sp());
        EXPECT(0x5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xff8f));
        // E2 00B2
        gbc.setState(0x5dfd, 0x4c90, 0x9640, 0x2b8e, 0x5771, 0x890b, 0x1, 0x1);
        gbc.writeMem(0x5dfd, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4c90, gbc.sp());
        EXPECT(0x5dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xff8e));
        // E2 00B3
        gbc.setState(0x1e00, 0x12d6, 0x9ed0, 0x96b0, 0x7c61, 0x633f, 0x0, 0x1);
        gbc.writeMem(0x1e00, { 0xe2 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x12d6, gbc.sp());
        EXPECT(0x1e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xffb0));
        // E2 00B4
        gbc.setState(0xdd87, 0xd3ad, 0xf100, 0x57c4, 0x803, 0xd25c, 0x1, 0x1);
        gbc.writeMem(0xdd87, { 0xe2 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd3ad, gbc.sp());
        EXPECT(0xdd88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdd87));
        EXPECT(0xf1, gbc.readMem(0xffc4));
        // E2 00B5
        gbc.setState(0xb03f, 0x9494, 0x14a0, 0xeeef, 0x7ebe, 0x5a49, 0x1, 0x1);
        gbc.writeMem(0xb03f, { 0xe2 });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9494, gbc.sp());
        EXPECT(0xb040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb03f));
        EXPECT(0x14, gbc.readMem(0xffef));
        // E2 00B6
        gbc.setState(0x2e27, 0xe515, 0x8cd0, 0x90e4, 0x420d, 0x3713, 0x0, 0x0);
        gbc.writeMem(0x2e27, { 0xe2 });
        gbc.writeMem(0xffe4, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe515, gbc.sp());
        EXPECT(0x2e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xffe4));
        // E2 00B7
        gbc.setState(0xa234, 0xffc7, 0xacc0, 0x3c31, 0x6f6d, 0x791b, 0x1, 0x0);
        gbc.writeMem(0xa234, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xffc7, gbc.sp());
        EXPECT(0xa235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa234));
        EXPECT(0xac, gbc.readMem(0xff31));
        // E2 00B8
        gbc.setState(0x7124, 0x5b54, 0x51c0, 0xddbe, 0xa7da, 0x139d, 0x1, 0x1);
        gbc.writeMem(0x7124, { 0xe2 });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5b54, gbc.sp());
        EXPECT(0x7125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xffbe));
        // E2 00B9
        gbc.setState(0x1bb0, 0x318a, 0x3b00, 0xcb9d, 0x67f1, 0xd3a2, 0x1, 0x0);
        gbc.writeMem(0x1bb0, { 0xe2 });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x318a, gbc.sp());
        EXPECT(0x1bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xff9d));
        // E2 00BA
        gbc.setState(0x6778, 0xb0d0, 0x3c90, 0x407b, 0xc81a, 0x868e, 0x0, 0x1);
        gbc.writeMem(0x6778, { 0xe2 });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb0d0, gbc.sp());
        EXPECT(0x6779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xff7b));
        // E2 00BB
        gbc.setState(0x65f2, 0xdcb3, 0x4830, 0x1d2a, 0x4427, 0x462d, 0x1, 0x0);
        gbc.writeMem(0x65f2, { 0xe2 });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdcb3, gbc.sp());
        EXPECT(0x65f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xff2a));
        // E2 00BC
        gbc.setState(0x84f7, 0x33, 0x18f0, 0x456c, 0x2270, 0x9404, 0x0, 0x0);
        gbc.writeMem(0x84f7, { 0xe2 });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x33, gbc.sp());
        EXPECT(0x84f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x84f7));
        EXPECT(0x18, gbc.readMem(0xff6c));
        // E2 00BD
        gbc.setState(0xbe53, 0x3f0d, 0x32f0, 0x9603, 0x44b, 0x3574, 0x1, 0x0);
        gbc.writeMem(0xbe53, { 0xe2 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3f0d, gbc.sp());
        EXPECT(0xbe54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbe53));
        EXPECT(0x32, gbc.readMem(0xff03));
        // E2 00BF
        gbc.setState(0xbd1c, 0x1714, 0xfc10, 0x661b, 0xa21, 0x7aaa, 0x1, 0x1);
        gbc.writeMem(0xbd1c, { 0xe2 });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1714, gbc.sp());
        EXPECT(0xbd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbd1c));
        EXPECT(0xfc, gbc.readMem(0xff1b));
        // E2 00C0
        gbc.setState(0x3f96, 0xa8a, 0xf4c0, 0x6476, 0x5038, 0xd3b3, 0x1, 0x1);
        gbc.writeMem(0x3f96, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa8a, gbc.sp());
        EXPECT(0x3f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xff76));
        // E2 00C2
        gbc.setState(0x310, 0x6636, 0x32d0, 0xab4, 0x7900, 0x5ee, 0x1, 0x0);
        gbc.writeMem(0x310, { 0xe2 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6636, gbc.sp());
        EXPECT(0x311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xffb4));
        // E2 00C3
        gbc.setState(0x9923, 0xa251, 0x79a0, 0xf040, 0x108c, 0x3300, 0x0, 0x0);
        gbc.writeMem(0x9923, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa251, gbc.sp());
        EXPECT(0x9924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9923));
        EXPECT(0x79, gbc.readMem(0xff40));
        // E2 00C4
        gbc.setState(0xb489, 0x5292, 0x8fb0, 0x18aa, 0xbeb1, 0xbfd7, 0x0, 0x0);
        gbc.writeMem(0xb489, { 0xe2 });
        gbc.writeMem(0xffaa, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5292, gbc.sp());
        EXPECT(0xb48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb489));
        EXPECT(0x8f, gbc.readMem(0xffaa));
        // E2 00C5
        gbc.setState(0x6b4d, 0xef82, 0x8dd0, 0x683b, 0x32fa, 0xae7b, 0x0, 0x1);
        gbc.writeMem(0x6b4d, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xef82, gbc.sp());
        EXPECT(0x6b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xff3b));
        // E2 00C6
        gbc.setState(0x28f, 0x481a, 0x4a40, 0x5439, 0x58f9, 0xbd25, 0x0, 0x1);
        gbc.writeMem(0x28f, { 0xe2 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x481a, gbc.sp());
        EXPECT(0x290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xff39));
        // E2 00C7
        gbc.setState(0x75a6, 0x6688, 0x6fc0, 0x8d4, 0x5f7, 0xeb48, 0x1, 0x1);
        gbc.writeMem(0x75a6, { 0xe2 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6688, gbc.sp());
        EXPECT(0x75a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xffd4));
        // E2 00C8
        gbc.setState(0xd6af, 0xf4e6, 0x5b70, 0xb877, 0x5d3d, 0x4a93, 0x0, 0x0);
        gbc.writeMem(0xd6af, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf4e6, gbc.sp());
        EXPECT(0xd6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd6af));
        EXPECT(0x5b, gbc.readMem(0xff77));
        // E2 00C9
        gbc.setState(0x60e8, 0xbb53, 0x71c0, 0x9bdd, 0x102, 0xd049, 0x0, 0x0);
        gbc.writeMem(0x60e8, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbb53, gbc.sp());
        EXPECT(0x60e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xffdd));
        // E2 00CA
        gbc.setState(0xcf64, 0xd6cc, 0xee50, 0xdfef, 0xbf0d, 0x1714, 0x0, 0x0);
        gbc.writeMem(0xcf64, { 0xe2 });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd6cc, gbc.sp());
        EXPECT(0xcf65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcf64));
        EXPECT(0xee, gbc.readMem(0xffef));
        // E2 00CB
        gbc.setState(0xe23d, 0x3b7f, 0xcd0, 0x865b, 0x6e71, 0xbfce, 0x0, 0x1);
        gbc.writeMem(0xe23d, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3b7f, gbc.sp());
        EXPECT(0xe23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe23d));
        EXPECT(0xc, gbc.readMem(0xff5b));
        // E2 00CC
        gbc.setState(0x29b2, 0xaa4a, 0xf080, 0xd08d, 0xcda3, 0xdc48, 0x1, 0x0);
        gbc.writeMem(0x29b2, { 0xe2 });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaa4a, gbc.sp());
        EXPECT(0x29b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xff8d));
        // E2 00CD
        gbc.setState(0xe12d, 0x243b, 0xae40, 0xa0d4, 0x3699, 0x6a37, 0x0, 0x1);
        gbc.writeMem(0xe12d, { 0xe2 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x243b, gbc.sp());
        EXPECT(0xe12e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe12d));
        EXPECT(0xae, gbc.readMem(0xffd4));
        // E2 00CE
        gbc.setState(0x267c, 0x3679, 0x6a80, 0x1893, 0xd9ea, 0x4043, 0x0, 0x0);
        gbc.writeMem(0x267c, { 0xe2 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3679, gbc.sp());
        EXPECT(0x267d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xff93));
        // E2 00CF
        gbc.setState(0xe32, 0xe887, 0xe170, 0x8836, 0x9c3a, 0xc1ec, 0x1, 0x1);
        gbc.writeMem(0xe32, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe887, gbc.sp());
        EXPECT(0xe33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xff36));
        // E2 00D0
        gbc.setState(0xa647, 0x2db, 0xfe0, 0x4fb9, 0x8a7d, 0x238c, 0x1, 0x0);
        gbc.writeMem(0xa647, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2db, gbc.sp());
        EXPECT(0xa648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa647));
        EXPECT(0xf, gbc.readMem(0xffb9));
        // E2 00D1
        gbc.setState(0x488e, 0x62ba, 0x2230, 0xb60a, 0x5d83, 0x5b77, 0x1, 0x1);
        gbc.writeMem(0x488e, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x62ba, gbc.sp());
        EXPECT(0x488f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xff0a));
        // E2 00D2
        gbc.setState(0x6ad8, 0x42d4, 0x3cd0, 0x2f8c, 0x8833, 0x8159, 0x0, 0x1);
        gbc.writeMem(0x6ad8, { 0xe2 });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x42d4, gbc.sp());
        EXPECT(0x6ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xff8c));
        // E2 00D3
        gbc.setState(0xca6f, 0xe916, 0x73f0, 0x3a1d, 0x9031, 0x93a5, 0x1, 0x0);
        gbc.writeMem(0xca6f, { 0xe2 });
        gbc.writeMem(0xff1d, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe916, gbc.sp());
        EXPECT(0xca70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xca6f));
        EXPECT(0x73, gbc.readMem(0xff1d));
        // E2 00D4
        gbc.setState(0x5e0e, 0x4df3, 0x1670, 0xaa0c, 0xdd7e, 0x1095, 0x0, 0x1);
        gbc.writeMem(0x5e0e, { 0xe2 });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4df3, gbc.sp());
        EXPECT(0x5e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xff0c));
        // E2 00D5
        gbc.setState(0x1bc8, 0xe25, 0x6290, 0x3e45, 0x4f24, 0x320e, 0x1, 0x1);
        gbc.writeMem(0x1bc8, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe25, gbc.sp());
        EXPECT(0x1bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xff45));
        // E2 00D6
        gbc.setState(0x9e5d, 0x5e20, 0x3170, 0x1cd2, 0xfa61, 0x149b, 0x1, 0x0);
        gbc.writeMem(0x9e5d, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5e20, gbc.sp());
        EXPECT(0x9e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9e5d));
        EXPECT(0x31, gbc.readMem(0xffd2));
        // E2 00D7
        gbc.setState(0xb9c3, 0xda14, 0x8410, 0x1ba, 0x9a12, 0x405e, 0x1, 0x1);
        gbc.writeMem(0xb9c3, { 0xe2 });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xda14, gbc.sp());
        EXPECT(0xb9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb9c3));
        EXPECT(0x84, gbc.readMem(0xffba));
        // E2 00D8
        gbc.setState(0xa5c5, 0x20ac, 0xb4e0, 0xbf9b, 0x6952, 0xc12b, 0x0, 0x1);
        gbc.writeMem(0xa5c5, { 0xe2 });
        gbc.writeMem(0xff9b, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x20ac, gbc.sp());
        EXPECT(0xa5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa5c5));
        EXPECT(0xb4, gbc.readMem(0xff9b));
        // E2 00D9
        gbc.setState(0xc9ae, 0x5189, 0xf150, 0xe453, 0xba50, 0x9f6f, 0x0, 0x1);
        gbc.writeMem(0xc9ae, { 0xe2 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5189, gbc.sp());
        EXPECT(0xc9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc9ae));
        EXPECT(0xf1, gbc.readMem(0xff53));
        // E2 00DA
        gbc.setState(0x66ed, 0x41be, 0xaed0, 0x2b63, 0xbcd0, 0xe947, 0x0, 0x1);
        gbc.writeMem(0x66ed, { 0xe2 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x41be, gbc.sp());
        EXPECT(0x66ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xff63));
        // E2 00DD
        gbc.setState(0x3197, 0x5b6a, 0xeb60, 0x37d2, 0xc84, 0xbcd6, 0x0, 0x1);
        gbc.writeMem(0x3197, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5b6a, gbc.sp());
        EXPECT(0x3198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xffd2));
        // E2 00DF
        gbc.setState(0x6dd5, 0x3f59, 0x9ea0, 0x97e1, 0xd55d, 0x5ba6, 0x1, 0x1);
        gbc.writeMem(0x6dd5, { 0xe2 });
        gbc.writeMem(0xffe1, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3f59, gbc.sp());
        EXPECT(0x6dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xffe1));
        // E2 00E0
        gbc.setState(0x75c5, 0xf61f, 0xc480, 0xf8ae, 0xa190, 0xe5a9, 0x0, 0x1);
        gbc.writeMem(0x75c5, { 0xe2 });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf61f, gbc.sp());
        EXPECT(0x75c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xffae));
        // E2 00E1
        gbc.setState(0x9e28, 0xf4, 0x25c0, 0x60f8, 0xe1b4, 0x9d11, 0x1, 0x0);
        gbc.writeMem(0x9e28, { 0xe2 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf4, gbc.sp());
        EXPECT(0x9e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9e28));
        EXPECT(0x25, gbc.readMem(0xfff8));
        // E2 00E2
        gbc.setState(0xddd2, 0x1d7e, 0x1990, 0x222b, 0x67ae, 0xe47e, 0x1, 0x0);
        gbc.writeMem(0xddd2, { 0xe2 });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1d7e, gbc.sp());
        EXPECT(0xddd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xddd2));
        EXPECT(0x19, gbc.readMem(0xff2b));
        // E2 00E3
        gbc.setState(0xa545, 0x878f, 0x980, 0x1c66, 0x474e, 0x6531, 0x0, 0x0);
        gbc.writeMem(0xa545, { 0xe2 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x878f, gbc.sp());
        EXPECT(0xa546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa545));
        EXPECT(0x9, gbc.readMem(0xff66));
        // E2 00E4
        gbc.setState(0xd46e, 0x72cf, 0x1540, 0x2be, 0xe034, 0xba62, 0x1, 0x1);
        gbc.writeMem(0xd46e, { 0xe2 });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x72cf, gbc.sp());
        EXPECT(0xd46f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd46e));
        EXPECT(0x15, gbc.readMem(0xffbe));
        // E2 00E5
        gbc.setState(0x6cf2, 0xae68, 0x2410, 0x29b4, 0x17ae, 0x5e9c, 0x0, 0x1);
        gbc.writeMem(0x6cf2, { 0xe2 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xae68, gbc.sp());
        EXPECT(0x6cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xffb4));
        // E2 00E6
        gbc.setState(0xc6f5, 0x1421, 0xdb60, 0x2ff1, 0x5260, 0x1184, 0x0, 0x1);
        gbc.writeMem(0xc6f5, { 0xe2 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1421, gbc.sp());
        EXPECT(0xc6f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc6f5));
        EXPECT(0xdb, gbc.readMem(0xfff1));
        // E2 00E7
        gbc.setState(0x1cd5, 0xd7ed, 0xefe0, 0x7592, 0x871, 0x592c, 0x0, 0x0);
        gbc.writeMem(0x1cd5, { 0xe2 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd7ed, gbc.sp());
        EXPECT(0x1cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xff92));
        // E2 00E8
        gbc.setState(0x9bd2, 0x7dbb, 0x8570, 0xbc01, 0xfecb, 0x6dd8, 0x0, 0x0);
        gbc.writeMem(0x9bd2, { 0xe2 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7dbb, gbc.sp());
        EXPECT(0x9bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9bd2));
        EXPECT(0x85, gbc.readMem(0xff01));
        // E2 00E9
        gbc.setState(0x4148, 0x1a1e, 0x2220, 0x5e50, 0x7b0, 0xeb43, 0x1, 0x0);
        gbc.writeMem(0x4148, { 0xe2 });
        gbc.writeMem(0xff50, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1a1e, gbc.sp());
        EXPECT(0x4149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xff50));
        // E2 00EA
        gbc.setState(0xba52, 0xf46d, 0xe500, 0xf182, 0x931c, 0x62f0, 0x1, 0x0);
        gbc.writeMem(0xba52, { 0xe2 });
        gbc.writeMem(0xff82, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf46d, gbc.sp());
        EXPECT(0xba53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xba52));
        EXPECT(0xe5, gbc.readMem(0xff82));
        // E2 00EB
        gbc.setState(0x7b62, 0x137b, 0x2040, 0x86b4, 0x8ef6, 0x58bb, 0x0, 0x1);
        gbc.writeMem(0x7b62, { 0xe2 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x137b, gbc.sp());
        EXPECT(0x7b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xffb4));
        // E2 00EC
        gbc.setState(0x9a08, 0x6e2d, 0x18c0, 0x27b6, 0x5b5b, 0xaaf7, 0x1, 0x1);
        gbc.writeMem(0x9a08, { 0xe2 });
        gbc.writeMem(0xffb6, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6e2d, gbc.sp());
        EXPECT(0x9a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9a08));
        EXPECT(0x18, gbc.readMem(0xffb6));
        // E2 00ED
        gbc.setState(0x51d1, 0xb2ee, 0x780, 0x682d, 0x8e04, 0x2eb8, 0x1, 0x0);
        gbc.writeMem(0x51d1, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb2ee, gbc.sp());
        EXPECT(0x51d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xff2d));
        // E2 00EE
        gbc.setState(0xc091, 0x68d8, 0x9670, 0xc09f, 0xde7e, 0x16f1, 0x1, 0x1);
        gbc.writeMem(0xc091, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x68d8, gbc.sp());
        EXPECT(0xc092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc091));
        EXPECT(0x96, gbc.readMem(0xff9f));
        // E2 00EF
        gbc.setState(0x1eaf, 0xdc7b, 0xa5d0, 0xa5b0, 0x2c87, 0x699, 0x1, 0x1);
        gbc.writeMem(0x1eaf, { 0xe2 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdc7b, gbc.sp());
        EXPECT(0x1eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xffb0));
        // E2 00F0
        gbc.setState(0x5561, 0xe5db, 0x1420, 0xb7ef, 0x6cad, 0xf88f, 0x0, 0x1);
        gbc.writeMem(0x5561, { 0xe2 });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe5db, gbc.sp());
        EXPECT(0x5562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xffef));
        // E2 00F1
        gbc.setState(0xd8a1, 0xed40, 0x7fa0, 0xfa4b, 0xd0b2, 0xfadb, 0x1, 0x1);
        gbc.writeMem(0xd8a1, { 0xe2 });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xed40, gbc.sp());
        EXPECT(0xd8a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd8a1));
        EXPECT(0x7f, gbc.readMem(0xff4b));
        // E2 00F2
        gbc.setState(0x9bb0, 0x262a, 0xc890, 0x9bdd, 0x5048, 0x27aa, 0x1, 0x1);
        gbc.writeMem(0x9bb0, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x262a, gbc.sp());
        EXPECT(0x9bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9bb0));
        EXPECT(0xc8, gbc.readMem(0xffdd));
        // E2 00F3
        gbc.setState(0xd8d9, 0xe78d, 0x57b0, 0x637e, 0xfbf2, 0x481e, 0x0, 0x0);
        gbc.writeMem(0xd8d9, { 0xe2 });
        gbc.writeMem(0xff7e, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe78d, gbc.sp());
        EXPECT(0xd8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd8d9));
        EXPECT(0x57, gbc.readMem(0xff7e));
        // E2 00F4
        gbc.setState(0xde4b, 0x9bee, 0x9fe0, 0x9f34, 0xceb5, 0x3705, 0x1, 0x1);
        gbc.writeMem(0xde4b, { 0xe2 });
        gbc.writeMem(0xff34, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9bee, gbc.sp());
        EXPECT(0xde4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xde4b));
        EXPECT(0x9f, gbc.readMem(0xff34));
        // E2 00F5
        gbc.setState(0x8b46, 0xc508, 0xa850, 0x1ffe, 0x2789, 0x2f11, 0x0, 0x0);
        gbc.writeMem(0x8b46, { 0xe2 });
        gbc.writeMem(0xfffe, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc508, gbc.sp());
        EXPECT(0x8b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8b46));
        EXPECT(0xa8, gbc.readMem(0xfffe));
        // E2 00F6
        gbc.setState(0xb45d, 0xfec4, 0xc920, 0x4884, 0xdeed, 0x2f16, 0x0, 0x1);
        gbc.writeMem(0xb45d, { 0xe2 });
        gbc.writeMem(0xff84, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfec4, gbc.sp());
        EXPECT(0xb45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb45d));
        EXPECT(0xc9, gbc.readMem(0xff84));
        // E2 00F7
        gbc.setState(0xbbdb, 0xe279, 0x4b90, 0xf07d, 0x8c54, 0xae49, 0x1, 0x0);
        gbc.writeMem(0xbbdb, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe279, gbc.sp());
        EXPECT(0xbbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbbdb));
        EXPECT(0x4b, gbc.readMem(0xff7d));
        // E2 00F8
        gbc.setState(0x684d, 0x649c, 0x8d0, 0xd981, 0xcf88, 0xc7e4, 0x0, 0x0);
        gbc.writeMem(0x684d, { 0xe2 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x649c, gbc.sp());
        EXPECT(0x684e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xff81));
        // E2 00F9
        gbc.setState(0x3929, 0x6505, 0x26c0, 0xb56d, 0xc7b8, 0x8a16, 0x0, 0x0);
        gbc.writeMem(0x3929, { 0xe2 });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6505, gbc.sp());
        EXPECT(0x392a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xff6d));
        // E2 00FA
        gbc.setState(0xedc3, 0x2169, 0x3a80, 0x973e, 0xbfaf, 0x80d4, 0x0, 0x1);
        gbc.writeMem(0xedc3, { 0xe2 });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2169, gbc.sp());
        EXPECT(0xedc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xedc3));
        EXPECT(0x3a, gbc.readMem(0xff3e));
        // E2 00FB
        gbc.setState(0x9845, 0x1cb9, 0xcd90, 0xae3b, 0xfe70, 0x7b07, 0x1, 0x1);
        gbc.writeMem(0x9845, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1cb9, gbc.sp());
        EXPECT(0x9846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9845));
        EXPECT(0xcd, gbc.readMem(0xff3b));
        // E2 00FC
        gbc.setState(0x4eda, 0x71ba, 0x4fb0, 0xf6f9, 0x207d, 0xf367, 0x1, 0x0);
        gbc.writeMem(0x4eda, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x71ba, gbc.sp());
        EXPECT(0x4edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xfff9));
        // E2 00FE
        gbc.setState(0xda19, 0x5a7c, 0xcf70, 0x7d23, 0x7e21, 0xd112, 0x1, 0x0);
        gbc.writeMem(0xda19, { 0xe2 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5a7c, gbc.sp());
        EXPECT(0xda1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xda19));
        EXPECT(0xcf, gbc.readMem(0xff23));
        // E2 00FF
        gbc.setState(0x6913, 0xd7cb, 0xad90, 0x201, 0x8d94, 0x7425, 0x1, 0x1);
        gbc.writeMem(0x6913, { 0xe2 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd7cb, gbc.sp());
        EXPECT(0x6914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff01));
        // E2 0100
        gbc.setState(0x44ce, 0x250c, 0xde20, 0xea14, 0xb4b0, 0x1779, 0x0, 0x1);
        gbc.writeMem(0x44ce, { 0xe2 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x250c, gbc.sp());
        EXPECT(0x44cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xff14));
        // E2 0101
        gbc.setState(0x555b, 0x6570, 0xd980, 0x7bbd, 0xacce, 0x6a0e, 0x0, 0x0);
        gbc.writeMem(0x555b, { 0xe2 });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6570, gbc.sp());
        EXPECT(0x555c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xffbd));
        // E2 0102
        gbc.setState(0x7f4a, 0x8e93, 0x1600, 0xe414, 0x943, 0x240e, 0x0, 0x1);
        gbc.writeMem(0x7f4a, { 0xe2 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8e93, gbc.sp());
        EXPECT(0x7f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xff14));
        // E2 0103
        gbc.setState(0x11ed, 0x473f, 0x13e0, 0x7577, 0x614a, 0x3dc3, 0x0, 0x0);
        gbc.writeMem(0x11ed, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x473f, gbc.sp());
        EXPECT(0x11ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xff77));
        // E2 0104
        gbc.setState(0xed52, 0x1dc7, 0x72e0, 0xccae, 0x23, 0x3710, 0x0, 0x1);
        gbc.writeMem(0xed52, { 0xe2 });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1dc7, gbc.sp());
        EXPECT(0xed53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xed52));
        EXPECT(0x72, gbc.readMem(0xffae));
        // E2 0105
        gbc.setState(0x8e95, 0xd485, 0x1340, 0x3963, 0x1639, 0x8f8, 0x0, 0x0);
        gbc.writeMem(0x8e95, { 0xe2 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd485, gbc.sp());
        EXPECT(0x8e96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8e95));
        EXPECT(0x13, gbc.readMem(0xff63));
        // E2 0106
        gbc.setState(0xc6c2, 0x36f3, 0x9fe0, 0x4f28, 0xb590, 0xde3b, 0x1, 0x0);
        gbc.writeMem(0xc6c2, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x36f3, gbc.sp());
        EXPECT(0xc6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc6c2));
        EXPECT(0x9f, gbc.readMem(0xff28));
        // E2 0107
        gbc.setState(0x58a9, 0x5e5e, 0x9cd0, 0x41a6, 0x9645, 0xf5f2, 0x1, 0x1);
        gbc.writeMem(0x58a9, { 0xe2 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5e5e, gbc.sp());
        EXPECT(0x58aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xffa6));
        // E2 0108
        gbc.setState(0xcdc3, 0x7fca, 0x6f80, 0xd47a, 0x300e, 0x3d53, 0x0, 0x0);
        gbc.writeMem(0xcdc3, { 0xe2 });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7fca, gbc.sp());
        EXPECT(0xcdc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcdc3));
        EXPECT(0x6f, gbc.readMem(0xff7a));
        // E2 0109
        gbc.setState(0x5b4c, 0x29bf, 0x4ae0, 0x5313, 0x497b, 0xa5ec, 0x0, 0x1);
        gbc.writeMem(0x5b4c, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x29bf, gbc.sp());
        EXPECT(0x5b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xff13));
        // E2 010A
        gbc.setState(0x77a7, 0x322a, 0x70a0, 0x7415, 0x8804, 0xa33e, 0x1, 0x1);
        gbc.writeMem(0x77a7, { 0xe2 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x322a, gbc.sp());
        EXPECT(0x77a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xff15));
        // E2 010B
        gbc.setState(0xa07d, 0x9ef8, 0x9b40, 0x6b71, 0xb631, 0xbd53, 0x0, 0x1);
        gbc.writeMem(0xa07d, { 0xe2 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9ef8, gbc.sp());
        EXPECT(0xa07e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa07d));
        EXPECT(0x9b, gbc.readMem(0xff71));
        // E2 010C
        gbc.setState(0xd0be, 0x844c, 0x320, 0x3f97, 0x3619, 0xc28c, 0x0, 0x1);
        gbc.writeMem(0xd0be, { 0xe2 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x844c, gbc.sp());
        EXPECT(0xd0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd0be));
        EXPECT(0x3, gbc.readMem(0xff97));
        // E2 010D
        gbc.setState(0x1bb4, 0xc158, 0x1530, 0x7817, 0xce57, 0x62c2, 0x0, 0x0);
        gbc.writeMem(0x1bb4, { 0xe2 });
        gbc.writeMem(0xff17, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc158, gbc.sp());
        EXPECT(0x1bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xff17));
        // E2 010E
        gbc.setState(0x6c13, 0xed61, 0xfa50, 0xfc7a, 0x8315, 0xc617, 0x1, 0x1);
        gbc.writeMem(0x6c13, { 0xe2 });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xed61, gbc.sp());
        EXPECT(0x6c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xff7a));
        // E2 010F
        gbc.setState(0xe37, 0xd388, 0x3310, 0x39ad, 0x37ef, 0x6023, 0x1, 0x1);
        gbc.writeMem(0xe37, { 0xe2 });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd388, gbc.sp());
        EXPECT(0xe38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xffad));
        // E2 0110
        gbc.setState(0x4426, 0x3102, 0x2450, 0x25f4, 0xf2b2, 0xf999, 0x0, 0x1);
        gbc.writeMem(0x4426, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3102, gbc.sp());
        EXPECT(0x4427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xfff4));
        // E2 0111
        gbc.setState(0x78bc, 0x685c, 0x3f40, 0x538f, 0xc5e1, 0xfa88, 0x0, 0x1);
        gbc.writeMem(0x78bc, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x685c, gbc.sp());
        EXPECT(0x78bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xff8f));
        // E2 0112
        gbc.setState(0xa832, 0x93b8, 0x3a0, 0x8141, 0xcbe7, 0x4a2e, 0x0, 0x1);
        gbc.writeMem(0xa832, { 0xe2 });
        gbc.writeMem(0xff41, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x93b8, gbc.sp());
        EXPECT(0xa833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa832));
        EXPECT(0x3, gbc.readMem(0xff41));
        // E2 0113
        gbc.setState(0x14bf, 0xc479, 0x1880, 0xe6b8, 0x13f1, 0x60ce, 0x1, 0x0);
        gbc.writeMem(0x14bf, { 0xe2 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc479, gbc.sp());
        EXPECT(0x14c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xffb8));
        // E2 0114
        gbc.setState(0xb049, 0x9787, 0xfdb0, 0xe770, 0x9ea, 0xca68, 0x0, 0x1);
        gbc.writeMem(0xb049, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9787, gbc.sp());
        EXPECT(0xb04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb049));
        EXPECT(0xfd, gbc.readMem(0xff70));
        // E2 0115
        gbc.setState(0x5cc6, 0x3e47, 0xb1c0, 0x965d, 0xb681, 0xebf9, 0x0, 0x1);
        gbc.writeMem(0x5cc6, { 0xe2 });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3e47, gbc.sp());
        EXPECT(0x5cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xff5d));
        // E2 0116
        gbc.setState(0x568e, 0x293b, 0x6200, 0xbc37, 0x46da, 0x5842, 0x0, 0x1);
        gbc.writeMem(0x568e, { 0xe2 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x293b, gbc.sp());
        EXPECT(0x568f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xff37));
        // E2 0117
        gbc.setState(0x6633, 0x3a3a, 0xa540, 0x2e3f, 0xaa2c, 0xc10f, 0x1, 0x0);
        gbc.writeMem(0x6633, { 0xe2 });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3a3a, gbc.sp());
        EXPECT(0x6634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xff3f));
        // E2 0118
        gbc.setState(0x4944, 0xa460, 0xc380, 0xb871, 0x87a4, 0xa0d5, 0x0, 0x1);
        gbc.writeMem(0x4944, { 0xe2 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa460, gbc.sp());
        EXPECT(0x4945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xff71));
        // E2 0119
        gbc.setState(0xcb21, 0x9ed4, 0x7360, 0x2539, 0xaedc, 0xd2d7, 0x0, 0x1);
        gbc.writeMem(0xcb21, { 0xe2 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9ed4, gbc.sp());
        EXPECT(0xcb22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcb21));
        EXPECT(0x73, gbc.readMem(0xff39));
        // E2 011A
        gbc.setState(0xdc14, 0x5517, 0x6160, 0xfed7, 0x6ae8, 0x17e8, 0x0, 0x1);
        gbc.writeMem(0xdc14, { 0xe2 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5517, gbc.sp());
        EXPECT(0xdc15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdc14));
        EXPECT(0x61, gbc.readMem(0xffd7));
        // E2 011B
        gbc.setState(0x8c89, 0x8336, 0x7580, 0x9f3, 0x52c5, 0x29c6, 0x1, 0x0);
        gbc.writeMem(0x8c89, { 0xe2 });
        gbc.writeMem(0xfff3, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8336, gbc.sp());
        EXPECT(0x8c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8c89));
        EXPECT(0x75, gbc.readMem(0xfff3));
        // E2 011C
        gbc.setState(0xe376, 0xb7fb, 0xada0, 0xbbd8, 0x6179, 0x4b1c, 0x1, 0x0);
        gbc.writeMem(0xe376, { 0xe2 });
        gbc.writeMem(0xffd8, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb7fb, gbc.sp());
        EXPECT(0xe377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe376));
        EXPECT(0xad, gbc.readMem(0xffd8));
        // E2 011D
        gbc.setState(0x3abb, 0xb1fd, 0x81e0, 0xcf8a, 0x444e, 0xdf63, 0x0, 0x0);
        gbc.writeMem(0x3abb, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb1fd, gbc.sp());
        EXPECT(0x3abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xff8a));
        // E2 011E
        gbc.setState(0x686f, 0xc182, 0x710, 0xb844, 0x66b7, 0xf8a3, 0x0, 0x0);
        gbc.writeMem(0x686f, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc182, gbc.sp());
        EXPECT(0x6870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xff44));
        // E2 011F
        gbc.setState(0x75fc, 0x88a4, 0x9db0, 0x5691, 0x5abd, 0x471d, 0x0, 0x1);
        gbc.writeMem(0x75fc, { 0xe2 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x88a4, gbc.sp());
        EXPECT(0x75fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xff91));
        // E2 0120
        gbc.setState(0x1000, 0xac4f, 0x3740, 0x7302, 0xd893, 0x57da, 0x0, 0x1);
        gbc.writeMem(0x1000, { 0xe2 });
        gbc.writeMem(0xff02, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xac4f, gbc.sp());
        EXPECT(0x1001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xff02));
        // E2 0121
        gbc.setState(0x8691, 0x93bd, 0xe30, 0x4699, 0x794c, 0x604, 0x1, 0x0);
        gbc.writeMem(0x8691, { 0xe2 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x93bd, gbc.sp());
        EXPECT(0x8692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8691));
        EXPECT(0xe, gbc.readMem(0xff99));
        // E2 0122
        gbc.setState(0x4cdd, 0x7ddc, 0xe410, 0x7025, 0xbaaf, 0xda60, 0x1, 0x1);
        gbc.writeMem(0x4cdd, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7ddc, gbc.sp());
        EXPECT(0x4cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xff25));
        // E2 0123
        gbc.setState(0xd8b7, 0xa597, 0x7160, 0xf0ce, 0xd89c, 0xa43d, 0x1, 0x1);
        gbc.writeMem(0xd8b7, { 0xe2 });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa597, gbc.sp());
        EXPECT(0xd8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd8b7));
        EXPECT(0x71, gbc.readMem(0xffce));
        // E2 0124
        gbc.setState(0x4fcf, 0xb6cd, 0xf690, 0xe982, 0x7b89, 0x7927, 0x0, 0x0);
        gbc.writeMem(0x4fcf, { 0xe2 });
        gbc.writeMem(0xff82, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb6cd, gbc.sp());
        EXPECT(0x4fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xff82));
        // E2 0125
        gbc.setState(0xbe58, 0x6ed9, 0x250, 0xc786, 0x5530, 0xf8cf, 0x1, 0x0);
        gbc.writeMem(0xbe58, { 0xe2 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6ed9, gbc.sp());
        EXPECT(0xbe59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbe58));
        EXPECT(0x2, gbc.readMem(0xff86));
        // E2 0126
        gbc.setState(0xca4c, 0x1098, 0x4a70, 0x6653, 0x5822, 0x9ad3, 0x0, 0x1);
        gbc.writeMem(0xca4c, { 0xe2 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1098, gbc.sp());
        EXPECT(0xca4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xca4c));
        EXPECT(0x4a, gbc.readMem(0xff53));
        // E2 0127
        gbc.setState(0x3069, 0x5f97, 0x6a60, 0x196a, 0x6d8a, 0x1ab9, 0x1, 0x1);
        gbc.writeMem(0x3069, { 0xe2 });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5f97, gbc.sp());
        EXPECT(0x306a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xff6a));
        // E2 0128
        gbc.setState(0x792b, 0x2037, 0x4510, 0x4cbb, 0x4cd7, 0xe0b0, 0x1, 0x0);
        gbc.writeMem(0x792b, { 0xe2 });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2037, gbc.sp());
        EXPECT(0x792c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xffbb));
        // E2 0129
        gbc.setState(0x4dfd, 0x93fa, 0xe9c0, 0xcd57, 0xcc3a, 0x3d7c, 0x1, 0x0);
        gbc.writeMem(0x4dfd, { 0xe2 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x93fa, gbc.sp());
        EXPECT(0x4dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xff57));
        // E2 012A
        gbc.setState(0xeee, 0x7200, 0xb990, 0x683e, 0x4313, 0xfdac, 0x1, 0x0);
        gbc.writeMem(0xeee, { 0xe2 });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7200, gbc.sp());
        EXPECT(0xeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xff3e));
        // E2 012B
        gbc.setState(0xbd49, 0x7093, 0xe000, 0xec8, 0xec99, 0x6a77, 0x0, 0x0);
        gbc.writeMem(0xbd49, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7093, gbc.sp());
        EXPECT(0xbd4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbd49));
        EXPECT(0xe0, gbc.readMem(0xffc8));
        // E2 012D
        gbc.setState(0x6d7b, 0xf851, 0x23e0, 0x9116, 0x9d9c, 0x2904, 0x1, 0x0);
        gbc.writeMem(0x6d7b, { 0xe2 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf851, gbc.sp());
        EXPECT(0x6d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xff16));
        // E2 012E
        gbc.setState(0xc4fd, 0xd50, 0x7890, 0xd94c, 0xd9d5, 0xbda5, 0x0, 0x0);
        gbc.writeMem(0xc4fd, { 0xe2 });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd50, gbc.sp());
        EXPECT(0xc4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc4fd));
        EXPECT(0x78, gbc.readMem(0xff4c));
        // E2 012F
        gbc.setState(0x620, 0xe1fe, 0xa2d0, 0x6bcb, 0x3c91, 0x2949, 0x1, 0x1);
        gbc.writeMem(0x620, { 0xe2 });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe1fe, gbc.sp());
        EXPECT(0x621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xffcb));
        // E2 0130
        gbc.setState(0x7eaf, 0x7433, 0x49c0, 0x2d00, 0xc0c2, 0x1f95, 0x1, 0x0);
        gbc.writeMem(0x7eaf, { 0xe2 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7433, gbc.sp());
        EXPECT(0x7eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xff00));
        // E2 0131
        gbc.setState(0xbbd0, 0x4536, 0x80a0, 0x71ac, 0xd483, 0x47b5, 0x1, 0x0);
        gbc.writeMem(0xbbd0, { 0xe2 });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4536, gbc.sp());
        EXPECT(0xbbd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbbd0));
        EXPECT(0x80, gbc.readMem(0xffac));
        // E2 0132
        gbc.setState(0xe3b8, 0x7359, 0x1d30, 0xea52, 0x6a86, 0xbcbc, 0x0, 0x0);
        gbc.writeMem(0xe3b8, { 0xe2 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7359, gbc.sp());
        EXPECT(0xe3b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe3b8));
        EXPECT(0x1d, gbc.readMem(0xff52));
        // E2 0133
        gbc.setState(0x6724, 0x7624, 0xb430, 0x2176, 0xb4a6, 0xe906, 0x1, 0x0);
        gbc.writeMem(0x6724, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7624, gbc.sp());
        EXPECT(0x6725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xff76));
        // E2 0134
        gbc.setState(0x67c7, 0xf909, 0x7f90, 0x449b, 0xc70c, 0x5410, 0x1, 0x0);
        gbc.writeMem(0x67c7, { 0xe2 });
        gbc.writeMem(0xff9b, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf909, gbc.sp());
        EXPECT(0x67c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xff9b));
        // E2 0135
        gbc.setState(0x9d69, 0x45cb, 0x9ba0, 0x28de, 0x73e, 0x8e7d, 0x1, 0x0);
        gbc.writeMem(0x9d69, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x45cb, gbc.sp());
        EXPECT(0x9d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9d69));
        EXPECT(0x9b, gbc.readMem(0xffde));
        // E2 0136
        gbc.setState(0x3ec9, 0x1800, 0x21e0, 0x2386, 0x106d, 0xaae6, 0x0, 0x0);
        gbc.writeMem(0x3ec9, { 0xe2 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1800, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xff86));
        // E2 0137
        gbc.setState(0xea71, 0x6b2d, 0x6fe0, 0xca85, 0xecfa, 0xfe89, 0x1, 0x1);
        gbc.writeMem(0xea71, { 0xe2 });
        gbc.writeMem(0xff85, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6b2d, gbc.sp());
        EXPECT(0xea72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xea71));
        EXPECT(0x6f, gbc.readMem(0xff85));
        // E2 0138
        gbc.setState(0xbc7f, 0xfca1, 0x43a0, 0x2549, 0x6a9b, 0x5645, 0x0, 0x1);
        gbc.writeMem(0xbc7f, { 0xe2 });
        gbc.writeMem(0xff49, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfca1, gbc.sp());
        EXPECT(0xbc80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbc7f));
        EXPECT(0x43, gbc.readMem(0xff49));
        // E2 0139
        gbc.setState(0x71ed, 0xa8af, 0xeb0, 0x5e56, 0x2dae, 0x4998, 0x1, 0x0);
        gbc.writeMem(0x71ed, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa8af, gbc.sp());
        EXPECT(0x71ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xff56));
        // E2 013A
        gbc.setState(0x7bea, 0xbc81, 0x7a10, 0xaf38, 0xd267, 0xd23f, 0x0, 0x0);
        gbc.writeMem(0x7bea, { 0xe2 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbc81, gbc.sp());
        EXPECT(0x7beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xff38));
        // E2 013B
        gbc.setState(0x4d4f, 0x2d66, 0x2eb0, 0xd0c7, 0x209b, 0x4dd7, 0x1, 0x0);
        gbc.writeMem(0x4d4f, { 0xe2 });
        gbc.writeMem(0xffc7, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2d66, gbc.sp());
        EXPECT(0x4d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xffc7));
        // E2 013C
        gbc.setState(0x938c, 0x3025, 0xbb90, 0x620b, 0x6bf6, 0xd5b2, 0x0, 0x0);
        gbc.writeMem(0x938c, { 0xe2 });
        gbc.writeMem(0xff0b, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3025, gbc.sp());
        EXPECT(0x938d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x938c));
        EXPECT(0xbb, gbc.readMem(0xff0b));
        // E2 013D
        gbc.setState(0x581e, 0x2224, 0xdf40, 0x126b, 0x7bd2, 0x4407, 0x1, 0x0);
        gbc.writeMem(0x581e, { 0xe2 });
        gbc.writeMem(0xff6b, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2224, gbc.sp());
        EXPECT(0x581f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xff6b));
        // E2 013E
        gbc.setState(0xccf2, 0x98f4, 0xa320, 0x6a96, 0x45ac, 0x6427, 0x1, 0x0);
        gbc.writeMem(0xccf2, { 0xe2 });
        gbc.writeMem(0xff96, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x98f4, gbc.sp());
        EXPECT(0xccf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xccf2));
        EXPECT(0xa3, gbc.readMem(0xff96));
        // E2 0140
        gbc.setState(0xd2cb, 0xf72c, 0x6a90, 0x6c6f, 0xf21a, 0xe1b2, 0x0, 0x0);
        gbc.writeMem(0xd2cb, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf72c, gbc.sp());
        EXPECT(0xd2cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd2cb));
        EXPECT(0x6a, gbc.readMem(0xff6f));
        // E2 0141
        gbc.setState(0xe684, 0x29c, 0x9260, 0xd962, 0x61e9, 0x2d9f, 0x1, 0x0);
        gbc.writeMem(0xe684, { 0xe2 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x29c, gbc.sp());
        EXPECT(0xe685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe684));
        EXPECT(0x92, gbc.readMem(0xff62));
        // E2 0142
        gbc.setState(0x47f5, 0xe67f, 0xd7b0, 0x50d9, 0xb825, 0x53eb, 0x0, 0x0);
        gbc.writeMem(0x47f5, { 0xe2 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe67f, gbc.sp());
        EXPECT(0x47f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xffd9));
        // E2 0143
        gbc.setState(0x9895, 0x535c, 0xa130, 0xbc5b, 0x98fe, 0x4b61, 0x0, 0x1);
        gbc.writeMem(0x9895, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x535c, gbc.sp());
        EXPECT(0x9896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9895));
        EXPECT(0xa1, gbc.readMem(0xff5b));
        // E2 0144
        gbc.setState(0xc37a, 0x8fb6, 0xb6f0, 0x875b, 0xe7e6, 0xa24b, 0x1, 0x0);
        gbc.writeMem(0xc37a, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8fb6, gbc.sp());
        EXPECT(0xc37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc37a));
        EXPECT(0xb6, gbc.readMem(0xff5b));
        // E2 0145
        gbc.setState(0xd995, 0x1188, 0x69c0, 0x8f97, 0x7c41, 0x87e3, 0x1, 0x1);
        gbc.writeMem(0xd995, { 0xe2 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1188, gbc.sp());
        EXPECT(0xd996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd995));
        EXPECT(0x69, gbc.readMem(0xff97));
        // E2 0146
        gbc.setState(0xcdb0, 0xf765, 0xb360, 0x229c, 0xb7a4, 0xcb18, 0x0, 0x1);
        gbc.writeMem(0xcdb0, { 0xe2 });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf765, gbc.sp());
        EXPECT(0xcdb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcdb0));
        EXPECT(0xb3, gbc.readMem(0xff9c));
        // E2 0147
        gbc.setState(0x56b2, 0xfdc0, 0x9040, 0xba41, 0x47fb, 0x82dc, 0x0, 0x0);
        gbc.writeMem(0x56b2, { 0xe2 });
        gbc.writeMem(0xff41, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfdc0, gbc.sp());
        EXPECT(0x56b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xff41));
        // E2 0148
        gbc.setState(0x592f, 0x30d, 0xb650, 0x3575, 0x9736, 0xef78, 0x0, 0x0);
        gbc.writeMem(0x592f, { 0xe2 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x30d, gbc.sp());
        EXPECT(0x5930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xff75));
        // E2 014A
        gbc.setState(0x1b0c, 0x9ba6, 0xaa10, 0x124e, 0xc329, 0xb121, 0x1, 0x1);
        gbc.writeMem(0x1b0c, { 0xe2 });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9ba6, gbc.sp());
        EXPECT(0x1b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xff4e));
        // E2 014B
        gbc.setState(0xd831, 0x2f, 0x6410, 0xab7, 0x41d8, 0xe5d7, 0x1, 0x1);
        gbc.writeMem(0xd831, { 0xe2 });
        gbc.writeMem(0xffb7, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2f, gbc.sp());
        EXPECT(0xd832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd831));
        EXPECT(0x64, gbc.readMem(0xffb7));
        // E2 014C
        gbc.setState(0x67c, 0xee1, 0xb170, 0x8d24, 0x29f7, 0x1e2a, 0x1, 0x0);
        gbc.writeMem(0x67c, { 0xe2 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xee1, gbc.sp());
        EXPECT(0x67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xff24));
        // E2 014F
        gbc.setState(0xe5dc, 0x5da4, 0xa0f0, 0x2376, 0xa55b, 0x61c0, 0x0, 0x1);
        gbc.writeMem(0xe5dc, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5da4, gbc.sp());
        EXPECT(0xe5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe5dc));
        EXPECT(0xa0, gbc.readMem(0xff76));
        // E2 0151
        gbc.setState(0x20e9, 0xa36c, 0x9250, 0x8ef9, 0x384a, 0x28f, 0x0, 0x1);
        gbc.writeMem(0x20e9, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa36c, gbc.sp());
        EXPECT(0x20ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xfff9));
        // E2 0152
        gbc.setState(0x6f7c, 0x6eab, 0x3de0, 0xcdeb, 0x7783, 0x82e9, 0x0, 0x0);
        gbc.writeMem(0x6f7c, { 0xe2 });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6eab, gbc.sp());
        EXPECT(0x6f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xffeb));
        // E2 0153
        gbc.setState(0xb181, 0x215e, 0x62b0, 0xb7a2, 0x96b5, 0x6f73, 0x1, 0x1);
        gbc.writeMem(0xb181, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x215e, gbc.sp());
        EXPECT(0xb182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb181));
        EXPECT(0x62, gbc.readMem(0xffa2));
        // E2 0154
        gbc.setState(0xec29, 0xe27c, 0x3d10, 0x9925, 0xc624, 0xeb5e, 0x0, 0x1);
        gbc.writeMem(0xec29, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe27c, gbc.sp());
        EXPECT(0xec2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xec29));
        EXPECT(0x3d, gbc.readMem(0xff25));
        // E2 0155
        gbc.setState(0x1a76, 0xc030, 0xd1c0, 0xc142, 0x22ce, 0x2a33, 0x1, 0x0);
        gbc.writeMem(0x1a76, { 0xe2 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc030, gbc.sp());
        EXPECT(0x1a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xff42));
        // E2 0156
        gbc.setState(0x9eec, 0x19d9, 0x7f90, 0xd0d0, 0x451e, 0xa211, 0x0, 0x1);
        gbc.writeMem(0x9eec, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x19d9, gbc.sp());
        EXPECT(0x9eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9eec));
        EXPECT(0x7f, gbc.readMem(0xffd0));
        // E2 0157
        gbc.setState(0xce3b, 0x9b0b, 0x52d0, 0x2377, 0x512e, 0x5457, 0x1, 0x0);
        gbc.writeMem(0xce3b, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9b0b, gbc.sp());
        EXPECT(0xce3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xce3b));
        EXPECT(0x52, gbc.readMem(0xff77));
        // E2 0158
        gbc.setState(0x6fd5, 0x726f, 0x4b30, 0x6ab1, 0x50b5, 0xf871, 0x1, 0x0);
        gbc.writeMem(0x6fd5, { 0xe2 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x726f, gbc.sp());
        EXPECT(0x6fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xffb1));
        // E2 015A
        gbc.setState(0xe3d4, 0x4f98, 0x3c10, 0x8e40, 0x6ce1, 0x8597, 0x0, 0x1);
        gbc.writeMem(0xe3d4, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4f98, gbc.sp());
        EXPECT(0xe3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe3d4));
        EXPECT(0x3c, gbc.readMem(0xff40));
        // E2 015B
        gbc.setState(0xe342, 0xa86, 0xe560, 0x1dcd, 0x43ce, 0xfd17, 0x1, 0x1);
        gbc.writeMem(0xe342, { 0xe2 });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa86, gbc.sp());
        EXPECT(0xe343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe342));
        EXPECT(0xe5, gbc.readMem(0xffcd));
        // E2 015C
        gbc.setState(0x71ba, 0x49d8, 0xc40, 0x4ac8, 0xce5c, 0x5781, 0x0, 0x0);
        gbc.writeMem(0x71ba, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x49d8, gbc.sp());
        EXPECT(0x71bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xffc8));
        // E2 015D
        gbc.setState(0x17b5, 0x7e1a, 0x33a0, 0x61f2, 0xcd3e, 0xe7e1, 0x1, 0x0);
        gbc.writeMem(0x17b5, { 0xe2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7e1a, gbc.sp());
        EXPECT(0x17b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xfff2));
        // E2 015E
        gbc.setState(0x25c8, 0x960, 0xf330, 0x247d, 0xf876, 0xb9b2, 0x1, 0x0);
        gbc.writeMem(0x25c8, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x960, gbc.sp());
        EXPECT(0x25c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xff7d));
        // E2 0160
        gbc.setState(0x54d9, 0xfda0, 0xc750, 0xa2e5, 0x8acd, 0x9700, 0x1, 0x0);
        gbc.writeMem(0x54d9, { 0xe2 });
        gbc.writeMem(0xffe5, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfda0, gbc.sp());
        EXPECT(0x54da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xffe5));
        // E2 0161
        gbc.setState(0xc7f2, 0x3359, 0x8e80, 0x9ecc, 0xb09f, 0x6de, 0x1, 0x1);
        gbc.writeMem(0xc7f2, { 0xe2 });
        gbc.writeMem(0xffcc, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3359, gbc.sp());
        EXPECT(0xc7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc7f2));
        EXPECT(0x8e, gbc.readMem(0xffcc));
        // E2 0162
        gbc.setState(0xd2a5, 0x9774, 0x2480, 0xc2ee, 0xa88a, 0xfd70, 0x0, 0x1);
        gbc.writeMem(0xd2a5, { 0xe2 });
        gbc.writeMem(0xffee, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9774, gbc.sp());
        EXPECT(0xd2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd2a5));
        EXPECT(0x24, gbc.readMem(0xffee));
        // E2 0164
        gbc.setState(0x68ef, 0x9067, 0xcd00, 0xd29e, 0x48d2, 0x57d4, 0x1, 0x0);
        gbc.writeMem(0x68ef, { 0xe2 });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9067, gbc.sp());
        EXPECT(0x68f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xff9e));
        // E2 0165
        gbc.setState(0x2b44, 0xfd6f, 0x1d30, 0x9633, 0xc633, 0xc5f1, 0x0, 0x0);
        gbc.writeMem(0x2b44, { 0xe2 });
        gbc.writeMem(0xff33, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfd6f, gbc.sp());
        EXPECT(0x2b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xff33));
        // E2 0166
        gbc.setState(0xef3b, 0x86c9, 0xf950, 0xc08e, 0x9e89, 0x4d7e, 0x1, 0x1);
        gbc.writeMem(0xef3b, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x86c9, gbc.sp());
        EXPECT(0xef3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xef3b));
        EXPECT(0xf9, gbc.readMem(0xff8e));
        // E2 0167
        gbc.setState(0xa082, 0x9655, 0x3e80, 0x2cd2, 0xb606, 0x6bd, 0x1, 0x1);
        gbc.writeMem(0xa082, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9655, gbc.sp());
        EXPECT(0xa083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa082));
        EXPECT(0x3e, gbc.readMem(0xffd2));
        // E2 0168
        gbc.setState(0x551d, 0x7642, 0x3d50, 0x3fdc, 0xcdad, 0x6ed3, 0x0, 0x0);
        gbc.writeMem(0x551d, { 0xe2 });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7642, gbc.sp());
        EXPECT(0x551e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xffdc));
        // E2 016A
        gbc.setState(0x7bf5, 0x14ce, 0xcfa0, 0xc83d, 0x1ca2, 0xf173, 0x0, 0x1);
        gbc.writeMem(0x7bf5, { 0xe2 });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x14ce, gbc.sp());
        EXPECT(0x7bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xff3d));
        // E2 016B
        gbc.setState(0x26e3, 0x6a39, 0xec90, 0x180, 0x6c99, 0x3826, 0x0, 0x1);
        gbc.writeMem(0x26e3, { 0xe2 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6a39, gbc.sp());
        EXPECT(0x26e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xff80));
        // E2 016C
        gbc.setState(0x52da, 0xed1e, 0x1170, 0x1d8e, 0xe617, 0xd07a, 0x1, 0x1);
        gbc.writeMem(0x52da, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xed1e, gbc.sp());
        EXPECT(0x52db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xff8e));
        // E2 016D
        gbc.setState(0x4afa, 0x7e37, 0x4a70, 0xa85d, 0x1f3c, 0xb659, 0x0, 0x0);
        gbc.writeMem(0x4afa, { 0xe2 });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7e37, gbc.sp());
        EXPECT(0x4afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xff5d));
        // E2 016E
        gbc.setState(0x36d1, 0x918d, 0xcbc0, 0x8ad0, 0xbad4, 0x5deb, 0x0, 0x0);
        gbc.writeMem(0x36d1, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x918d, gbc.sp());
        EXPECT(0x36d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xffd0));
        // E2 016F
        gbc.setState(0x2d73, 0xec63, 0xf8b0, 0x8570, 0xd097, 0x261d, 0x1, 0x0);
        gbc.writeMem(0x2d73, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xec63, gbc.sp());
        EXPECT(0x2d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xff70));
        // E2 0170
        gbc.setState(0x225e, 0xc267, 0x52b0, 0xd41a, 0xde81, 0xa8d5, 0x0, 0x1);
        gbc.writeMem(0x225e, { 0xe2 });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc267, gbc.sp());
        EXPECT(0x225f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff1a));
        // E2 0171
        gbc.setState(0x28b4, 0x871f, 0x39b0, 0xc70, 0x31bc, 0x74d6, 0x1, 0x1);
        gbc.writeMem(0x28b4, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x871f, gbc.sp());
        EXPECT(0x28b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xff70));
        // E2 0172
        gbc.setState(0x920, 0xcd40, 0x9560, 0x5a04, 0x37f7, 0x4313, 0x0, 0x0);
        gbc.writeMem(0x920, { 0xe2 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcd40, gbc.sp());
        EXPECT(0x921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xff04));
        // E2 0173
        gbc.setState(0x4f89, 0x9319, 0x6a70, 0xe8e3, 0x50e8, 0x74b3, 0x1, 0x0);
        gbc.writeMem(0x4f89, { 0xe2 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9319, gbc.sp());
        EXPECT(0x4f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xffe3));
        // E2 0174
        gbc.setState(0x7be3, 0x7eed, 0x60b0, 0x3bc9, 0x8215, 0x4e25, 0x0, 0x1);
        gbc.writeMem(0x7be3, { 0xe2 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7eed, gbc.sp());
        EXPECT(0x7be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xffc9));
        // E2 0175
        gbc.setState(0xb160, 0x608e, 0x2180, 0x77a1, 0x669b, 0x5de, 0x0, 0x1);
        gbc.writeMem(0xb160, { 0xe2 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x608e, gbc.sp());
        EXPECT(0xb161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb160));
        EXPECT(0x21, gbc.readMem(0xffa1));
        // E2 0176
        gbc.setState(0x1dee, 0x48ed, 0xb7b0, 0xd825, 0xc6fb, 0x5183, 0x0, 0x0);
        gbc.writeMem(0x1dee, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x48ed, gbc.sp());
        EXPECT(0x1def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xff25));
        // E2 0177
        gbc.setState(0x7a82, 0xfff1, 0x1b60, 0xb695, 0xbc47, 0x5c75, 0x0, 0x1);
        gbc.writeMem(0x7a82, { 0xe2 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfff1, gbc.sp());
        EXPECT(0x7a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xff95));
        // E2 0178
        gbc.setState(0xada, 0x69be, 0x7e60, 0xbac9, 0x64fb, 0x365, 0x1, 0x0);
        gbc.writeMem(0xada, { 0xe2 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x69be, gbc.sp());
        EXPECT(0xadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xffc9));
        // E2 0179
        gbc.setState(0x7566, 0xf579, 0xe0c0, 0xdf95, 0x41e3, 0x9d4a, 0x0, 0x1);
        gbc.writeMem(0x7566, { 0xe2 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf579, gbc.sp());
        EXPECT(0x7567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff95));
        // E2 017A
        gbc.setState(0x6fd6, 0x1864, 0xa570, 0x7f88, 0x5304, 0x76c2, 0x0, 0x1);
        gbc.writeMem(0x6fd6, { 0xe2 });
        gbc.writeMem(0xff88, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1864, gbc.sp());
        EXPECT(0x6fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xff88));
        // E2 017B
        gbc.setState(0x13c7, 0xa3ab, 0x9730, 0x5428, 0xe687, 0xad99, 0x0, 0x1);
        gbc.writeMem(0x13c7, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa3ab, gbc.sp());
        EXPECT(0x13c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xff28));
        // E2 017C
        gbc.setState(0x1ba9, 0xdd96, 0x18b0, 0xf08f, 0x7b2b, 0x16f9, 0x0, 0x0);
        gbc.writeMem(0x1ba9, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdd96, gbc.sp());
        EXPECT(0x1baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xff8f));
        // E2 017D
        gbc.setState(0x98c, 0xdaee, 0xdaa0, 0x10de, 0xee26, 0x9b6a, 0x1, 0x1);
        gbc.writeMem(0x98c, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdaee, gbc.sp());
        EXPECT(0x98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xffde));
        // E2 017E
        gbc.setState(0x2f6c, 0x2174, 0x7040, 0x1ff7, 0xcb44, 0xbc97, 0x0, 0x1);
        gbc.writeMem(0x2f6c, { 0xe2 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2174, gbc.sp());
        EXPECT(0x2f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xfff7));
        // E2 017F
        gbc.setState(0xace9, 0xefda, 0xaba0, 0x7e13, 0xc3b7, 0x96fd, 0x1, 0x1);
        gbc.writeMem(0xace9, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xefda, gbc.sp());
        EXPECT(0xacea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xace9));
        EXPECT(0xab, gbc.readMem(0xff13));
        // E2 0180
        gbc.setState(0x332c, 0x1f47, 0x5170, 0x45dd, 0xaaa5, 0x195f, 0x0, 0x1);
        gbc.writeMem(0x332c, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1f47, gbc.sp());
        EXPECT(0x332d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xffdd));
        // E2 0181
        gbc.setState(0x6164, 0xe86b, 0x8a60, 0x79ab, 0xf4a2, 0x8838, 0x1, 0x1);
        gbc.writeMem(0x6164, { 0xe2 });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe86b, gbc.sp());
        EXPECT(0x6165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xffab));
        // E2 0182
        gbc.setState(0x89e5, 0x381a, 0xed0, 0x90bc, 0x8e1c, 0x6f8b, 0x1, 0x1);
        gbc.writeMem(0x89e5, { 0xe2 });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x381a, gbc.sp());
        EXPECT(0x89e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x89e5));
        EXPECT(0xe, gbc.readMem(0xffbc));
        // E2 0183
        gbc.setState(0xc7fb, 0x60e8, 0x5080, 0xd5d9, 0x5edd, 0x8446, 0x0, 0x0);
        gbc.writeMem(0xc7fb, { 0xe2 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x60e8, gbc.sp());
        EXPECT(0xc7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc7fb));
        EXPECT(0x50, gbc.readMem(0xffd9));
        // E2 0184
        gbc.setState(0x7919, 0xff67, 0x7c90, 0xcadb, 0x967, 0xb8ce, 0x1, 0x0);
        gbc.writeMem(0x7919, { 0xe2 });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xff67, gbc.sp());
        EXPECT(0x791a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xffdb));
        // E2 0185
        gbc.setState(0x11e8, 0xd22e, 0x7420, 0xdd4f, 0xe9ff, 0x8e99, 0x1, 0x1);
        gbc.writeMem(0x11e8, { 0xe2 });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd22e, gbc.sp());
        EXPECT(0x11e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xff4f));
        // E2 0186
        gbc.setState(0xb97e, 0xc568, 0x7930, 0xd2b7, 0xbb50, 0x7633, 0x0, 0x1);
        gbc.writeMem(0xb97e, { 0xe2 });
        gbc.writeMem(0xffb7, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc568, gbc.sp());
        EXPECT(0xb97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb97e));
        EXPECT(0x79, gbc.readMem(0xffb7));
        // E2 0187
        gbc.setState(0x3988, 0x25fc, 0x1070, 0xb02f, 0x106c, 0x4aaf, 0x0, 0x0);
        gbc.writeMem(0x3988, { 0xe2 });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x25fc, gbc.sp());
        EXPECT(0x3989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xff2f));
        // E2 0188
        gbc.setState(0x1324, 0x1ff2, 0x8b90, 0xba1a, 0x9213, 0xeb3c, 0x0, 0x0);
        gbc.writeMem(0x1324, { 0xe2 });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1ff2, gbc.sp());
        EXPECT(0x1325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xff1a));
        // E2 0189
        gbc.setState(0xeb5d, 0xbae4, 0x2f10, 0x2c9f, 0x9c13, 0x845c, 0x0, 0x0);
        gbc.writeMem(0xeb5d, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbae4, gbc.sp());
        EXPECT(0xeb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xeb5d));
        EXPECT(0x2f, gbc.readMem(0xff9f));
        // E2 018A
        gbc.setState(0xcdd1, 0xf69e, 0x5eb0, 0x82f6, 0x30fc, 0x1959, 0x0, 0x0);
        gbc.writeMem(0xcdd1, { 0xe2 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf69e, gbc.sp());
        EXPECT(0xcdd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcdd1));
        EXPECT(0x5e, gbc.readMem(0xfff6));
        // E2 018B
        gbc.setState(0x826c, 0xd482, 0x32e0, 0x676, 0x79f2, 0x80, 0x0, 0x1);
        gbc.writeMem(0x826c, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd482, gbc.sp());
        EXPECT(0x826d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x826c));
        EXPECT(0x32, gbc.readMem(0xff76));
        // E2 018C
        gbc.setState(0x4dfe, 0xa64e, 0x2d20, 0xa314, 0xcb8e, 0x1061, 0x1, 0x1);
        gbc.writeMem(0x4dfe, { 0xe2 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa64e, gbc.sp());
        EXPECT(0x4dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xff14));
        // E2 018E
        gbc.setState(0xdb7d, 0x7b32, 0x3630, 0x4f4, 0xd110, 0x1d1, 0x1, 0x1);
        gbc.writeMem(0xdb7d, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7b32, gbc.sp());
        EXPECT(0xdb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdb7d));
        EXPECT(0x36, gbc.readMem(0xfff4));
        // E2 018F
        gbc.setState(0x5699, 0x2aca, 0xa0a0, 0xd23b, 0xcb8c, 0x1e36, 0x0, 0x0);
        gbc.writeMem(0x5699, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2aca, gbc.sp());
        EXPECT(0x569a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xff3b));
        // E2 0190
        gbc.setState(0x256, 0xa74b, 0xfde0, 0xa465, 0x3009, 0x38b4, 0x0, 0x0);
        gbc.writeMem(0x256, { 0xe2 });
        gbc.writeMem(0xff65, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa74b, gbc.sp());
        EXPECT(0x257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xff65));
        // E2 0191
        gbc.setState(0xe1fd, 0xa397, 0xe170, 0x2a97, 0x79ad, 0xfbea, 0x1, 0x0);
        gbc.writeMem(0xe1fd, { 0xe2 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa397, gbc.sp());
        EXPECT(0xe1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe1fd));
        EXPECT(0xe1, gbc.readMem(0xff97));
        // E2 0192
        gbc.setState(0xcf19, 0xe215, 0x9ac0, 0x3015, 0x9505, 0x487c, 0x0, 0x0);
        gbc.writeMem(0xcf19, { 0xe2 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe215, gbc.sp());
        EXPECT(0xcf1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcf19));
        EXPECT(0x9a, gbc.readMem(0xff15));
        // E2 0193
        gbc.setState(0x8ddd, 0xbffb, 0x2500, 0xde67, 0x6c4b, 0x6db1, 0x0, 0x1);
        gbc.writeMem(0x8ddd, { 0xe2 });
        gbc.writeMem(0xff67, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbffb, gbc.sp());
        EXPECT(0x8dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8ddd));
        EXPECT(0x25, gbc.readMem(0xff67));
        // E2 0194
        gbc.setState(0xbf3, 0xe91e, 0xe080, 0x1990, 0xcdf9, 0x94b9, 0x0, 0x1);
        gbc.writeMem(0xbf3, { 0xe2 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe91e, gbc.sp());
        EXPECT(0xbf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff90));
        // E2 0195
        gbc.setState(0xde47, 0xfe3b, 0xb1f0, 0xf012, 0x5a5, 0x6ddb, 0x0, 0x0);
        gbc.writeMem(0xde47, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfe3b, gbc.sp());
        EXPECT(0xde48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xde47));
        EXPECT(0xb1, gbc.readMem(0xff12));
        // E2 0196
        gbc.setState(0xe6c0, 0x798b, 0x1a70, 0x3a22, 0x7300, 0x5f, 0x0, 0x1);
        gbc.writeMem(0xe6c0, { 0xe2 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x798b, gbc.sp());
        EXPECT(0xe6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe6c0));
        EXPECT(0x1a, gbc.readMem(0xff22));
        // E2 0197
        gbc.setState(0xe45a, 0xd1a5, 0xd710, 0x16a3, 0x1d7a, 0xa96e, 0x0, 0x1);
        gbc.writeMem(0xe45a, { 0xe2 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd1a5, gbc.sp());
        EXPECT(0xe45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe45a));
        EXPECT(0xd7, gbc.readMem(0xffa3));
        // E2 0198
        gbc.setState(0x4e1c, 0xab40, 0xf5b0, 0x399, 0x9dfe, 0x17d8, 0x1, 0x1);
        gbc.writeMem(0x4e1c, { 0xe2 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xab40, gbc.sp());
        EXPECT(0x4e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xff99));
        // E2 0199
        gbc.setState(0x5b2b, 0xe134, 0xe9f0, 0x9a6f, 0x90fe, 0xc656, 0x0, 0x0);
        gbc.writeMem(0x5b2b, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe134, gbc.sp());
        EXPECT(0x5b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xff6f));
        // E2 019A
        gbc.setState(0xa035, 0x744a, 0x1120, 0x2551, 0x8444, 0xd94b, 0x1, 0x0);
        gbc.writeMem(0xa035, { 0xe2 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x744a, gbc.sp());
        EXPECT(0xa036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa035));
        EXPECT(0x11, gbc.readMem(0xff51));
        // E2 019B
        gbc.setState(0xaa01, 0xdc5f, 0x7f70, 0x3aa8, 0x37b8, 0x3bea, 0x0, 0x0);
        gbc.writeMem(0xaa01, { 0xe2 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdc5f, gbc.sp());
        EXPECT(0xaa02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xaa01));
        EXPECT(0x7f, gbc.readMem(0xffa8));
        // E2 019C
        gbc.setState(0xe85e, 0x9ea, 0x38f0, 0x8e70, 0x64c, 0x5ece, 0x1, 0x1);
        gbc.writeMem(0xe85e, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9ea, gbc.sp());
        EXPECT(0xe85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe85e));
        EXPECT(0x38, gbc.readMem(0xff70));
        // E2 019D
        gbc.setState(0x8ec2, 0xabe4, 0x780, 0xdd00, 0xfd4c, 0x873e, 0x1, 0x0);
        gbc.writeMem(0x8ec2, { 0xe2 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xabe4, gbc.sp());
        EXPECT(0x8ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8ec2));
        EXPECT(0x7, gbc.readMem(0xff00));
        // E2 019E
        gbc.setState(0x4fb3, 0xfca4, 0xe430, 0xdfcb, 0xedca, 0x7f45, 0x0, 0x1);
        gbc.writeMem(0x4fb3, { 0xe2 });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfca4, gbc.sp());
        EXPECT(0x4fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xffcb));
        // E2 019F
        gbc.setState(0x11c5, 0x91b4, 0xdf00, 0xa85f, 0x3206, 0x6987, 0x0, 0x1);
        gbc.writeMem(0x11c5, { 0xe2 });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x91b4, gbc.sp());
        EXPECT(0x11c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xff5f));
        // E2 01A0
        gbc.setState(0x5a27, 0x3be9, 0xf9f0, 0x8d6c, 0x298f, 0x8f4c, 0x1, 0x0);
        gbc.writeMem(0x5a27, { 0xe2 });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3be9, gbc.sp());
        EXPECT(0x5a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xff6c));
        // E2 01A1
        gbc.setState(0xd30d, 0xd043, 0x2a60, 0x3eff, 0xbf9b, 0x630, 0x0, 0x1);
        gbc.writeMem(0xd30d, { 0xe2 });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd043, gbc.sp());
        EXPECT(0xd30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd30d));
        EXPECT(0x2a, gbc.readMem(0xffff));
        // E2 01A2
        gbc.setState(0xeac7, 0x3e9a, 0x2ff0, 0x9940, 0x4cbf, 0x7807, 0x1, 0x0);
        gbc.writeMem(0xeac7, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3e9a, gbc.sp());
        EXPECT(0xeac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xeac7));
        EXPECT(0x2f, gbc.readMem(0xff40));
        // E2 01A3
        gbc.setState(0x3daa, 0xe587, 0xaba0, 0x1e47, 0xf225, 0x777f, 0x0, 0x1);
        gbc.writeMem(0x3daa, { 0xe2 });
        gbc.writeMem(0xff47, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe587, gbc.sp());
        EXPECT(0x3dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xff47));
        // E2 01A5
        gbc.setState(0x4ae5, 0x21de, 0x4150, 0x3d53, 0x4095, 0xab7c, 0x0, 0x1);
        gbc.writeMem(0x4ae5, { 0xe2 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x21de, gbc.sp());
        EXPECT(0x4ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xff53));
        // E2 01A6
        gbc.setState(0xcf5d, 0x640a, 0x1ee0, 0x7728, 0x4a0d, 0x1fb4, 0x0, 0x1);
        gbc.writeMem(0xcf5d, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x640a, gbc.sp());
        EXPECT(0xcf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcf5d));
        EXPECT(0x1e, gbc.readMem(0xff28));
        // E2 01A7
        gbc.setState(0x6ad0, 0xe546, 0x2000, 0x30e4, 0x9f7d, 0xb0cc, 0x0, 0x1);
        gbc.writeMem(0x6ad0, { 0xe2 });
        gbc.writeMem(0xffe4, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0x6ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xffe4));
        // E2 01A9
        gbc.setState(0xe8d8, 0x1019, 0xeea0, 0x2b6d, 0xa664, 0x4fb7, 0x0, 0x1);
        gbc.writeMem(0xe8d8, { 0xe2 });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1019, gbc.sp());
        EXPECT(0xe8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe8d8));
        EXPECT(0xee, gbc.readMem(0xff6d));
        // E2 01AA
        gbc.setState(0x4bc2, 0x47ea, 0x6490, 0xf9d0, 0xb77c, 0xf34f, 0x0, 0x1);
        gbc.writeMem(0x4bc2, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x47ea, gbc.sp());
        EXPECT(0x4bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xffd0));
        // E2 01AB
        gbc.setState(0xe891, 0xc992, 0xc4f0, 0x1f64, 0x58ef, 0xb58d, 0x1, 0x0);
        gbc.writeMem(0xe891, { 0xe2 });
        gbc.writeMem(0xff64, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc992, gbc.sp());
        EXPECT(0xe892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe891));
        EXPECT(0xc4, gbc.readMem(0xff64));
        // E2 01AC
        gbc.setState(0x46de, 0x5ac3, 0x3c00, 0xef8a, 0xb560, 0x8724, 0x1, 0x1);
        gbc.writeMem(0x46de, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5ac3, gbc.sp());
        EXPECT(0x46df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xff8a));
        // E2 01AD
        gbc.setState(0x4a45, 0xf460, 0x4500, 0xbba0, 0xb237, 0x859c, 0x0, 0x1);
        gbc.writeMem(0x4a45, { 0xe2 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf460, gbc.sp());
        EXPECT(0x4a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xffa0));
        // E2 01AE
        gbc.setState(0x4798, 0x80cf, 0xc0e0, 0x348, 0x28bc, 0xe7be, 0x1, 0x1);
        gbc.writeMem(0x4798, { 0xe2 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x80cf, gbc.sp());
        EXPECT(0x4799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xff48));
        // E2 01AF
        gbc.setState(0x1665, 0x9c7c, 0xdb50, 0x92fa, 0x66b1, 0x3d74, 0x1, 0x0);
        gbc.writeMem(0x1665, { 0xe2 });
        gbc.writeMem(0xfffa, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9c7c, gbc.sp());
        EXPECT(0x1666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xfffa));
        // E2 01B1
        gbc.setState(0x2807, 0xbf42, 0x75a0, 0x430a, 0x7c43, 0x41fc, 0x1, 0x0);
        gbc.writeMem(0x2807, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbf42, gbc.sp());
        EXPECT(0x2808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xff0a));
        // E2 01B2
        gbc.setState(0x3046, 0xea2c, 0x2a70, 0xc9ff, 0x8b50, 0x287f, 0x1, 0x0);
        gbc.writeMem(0x3046, { 0xe2 });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xea2c, gbc.sp());
        EXPECT(0x3047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xffff));
        // E2 01B3
        gbc.setState(0xe2ad, 0x5963, 0xf410, 0xae6, 0x201, 0xce1d, 0x0, 0x0);
        gbc.writeMem(0xe2ad, { 0xe2 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5963, gbc.sp());
        EXPECT(0xe2ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe2ad));
        EXPECT(0xf4, gbc.readMem(0xffe6));
        // E2 01B4
        gbc.setState(0x50ba, 0xb464, 0x37c0, 0x48e2, 0xf37c, 0x9668, 0x0, 0x1);
        gbc.writeMem(0x50ba, { 0xe2 });
        gbc.writeMem(0xffe2, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb464, gbc.sp());
        EXPECT(0x50bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xffe2));
        // E2 01B5
        gbc.setState(0x3247, 0xfebd, 0x4e70, 0x15ef, 0x98a7, 0x9317, 0x1, 0x0);
        gbc.writeMem(0x3247, { 0xe2 });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfebd, gbc.sp());
        EXPECT(0x3248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xffef));
        // E2 01B6
        gbc.setState(0x5251, 0xe048, 0xc670, 0xd91c, 0xb9ad, 0x1451, 0x0, 0x1);
        gbc.writeMem(0x5251, { 0xe2 });
        gbc.writeMem(0xff1c, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe048, gbc.sp());
        EXPECT(0x5252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xff1c));
        // E2 01B7
        gbc.setState(0x7e5b, 0x7343, 0xc7a0, 0xfd4f, 0xd2f6, 0xea29, 0x1, 0x1);
        gbc.writeMem(0x7e5b, { 0xe2 });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7343, gbc.sp());
        EXPECT(0x7e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xff4f));
        // E2 01B8
        gbc.setState(0x5cea, 0xd5d6, 0xe260, 0x5eed, 0x4f69, 0xd275, 0x1, 0x0);
        gbc.writeMem(0x5cea, { 0xe2 });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd5d6, gbc.sp());
        EXPECT(0x5ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xffed));
        // E2 01B9
        gbc.setState(0x89e6, 0x30bf, 0x8a0, 0xd113, 0x9a62, 0x3e6d, 0x0, 0x0);
        gbc.writeMem(0x89e6, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x30bf, gbc.sp());
        EXPECT(0x89e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x89e6));
        EXPECT(0x8, gbc.readMem(0xff13));
        // E2 01BA
        gbc.setState(0x3846, 0xe17b, 0x7330, 0xbb7f, 0x8302, 0x1440, 0x0, 0x0);
        gbc.writeMem(0x3846, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe17b, gbc.sp());
        EXPECT(0x3847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xff7f));
        // E2 01BB
        gbc.setState(0xe576, 0x2508, 0x79e0, 0xd4ec, 0x6ce2, 0xa1f6, 0x0, 0x1);
        gbc.writeMem(0xe576, { 0xe2 });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2508, gbc.sp());
        EXPECT(0xe577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe576));
        EXPECT(0x79, gbc.readMem(0xffec));
        // E2 01BD
        gbc.setState(0x3d04, 0x5371, 0xd10, 0xc872, 0xc1b3, 0xc207, 0x0, 0x1);
        gbc.writeMem(0x3d04, { 0xe2 });
        gbc.writeMem(0xff72, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5371, gbc.sp());
        EXPECT(0x3d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xff72));
        // E2 01BF
        gbc.setState(0x6986, 0x7d02, 0x4310, 0x9ca8, 0xe152, 0x395e, 0x0, 0x1);
        gbc.writeMem(0x6986, { 0xe2 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7d02, gbc.sp());
        EXPECT(0x6987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xffa8));
        // E2 01C0
        gbc.setState(0xe2a2, 0x8b51, 0x17d0, 0xa613, 0xbcaa, 0x6f34, 0x0, 0x0);
        gbc.writeMem(0xe2a2, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8b51, gbc.sp());
        EXPECT(0xe2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe2a2));
        EXPECT(0x17, gbc.readMem(0xff13));
        // E2 01C1
        gbc.setState(0x4ee8, 0xc0db, 0x7f90, 0x217d, 0x6b59, 0xaadb, 0x1, 0x0);
        gbc.writeMem(0x4ee8, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc0db, gbc.sp());
        EXPECT(0x4ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xff7d));
        // E2 01C2
        gbc.setState(0x464a, 0xfae0, 0x1ee0, 0xa98a, 0xfb1e, 0x3edc, 0x0, 0x1);
        gbc.writeMem(0x464a, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfae0, gbc.sp());
        EXPECT(0x464b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xff8a));
        // E2 01C3
        gbc.setState(0x4cf7, 0x1a4e, 0xaf70, 0xd26, 0x5757, 0x663e, 0x0, 0x0);
        gbc.writeMem(0x4cf7, { 0xe2 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1a4e, gbc.sp());
        EXPECT(0x4cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xff26));
        // E2 01C4
        gbc.setState(0x6174, 0x9e5d, 0xe3a0, 0x737d, 0xb9d, 0xf66f, 0x1, 0x0);
        gbc.writeMem(0x6174, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9e5d, gbc.sp());
        EXPECT(0x6175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xff7d));
        // E2 01C5
        gbc.setState(0x59ba, 0x4956, 0x0, 0x896a, 0x7cf5, 0x3b2e, 0x0, 0x0);
        gbc.writeMem(0x59ba, { 0xe2 });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4956, gbc.sp());
        EXPECT(0x59bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xff6a));
        // E2 01C7
        gbc.setState(0xe6e4, 0x2f75, 0x38e0, 0x33e5, 0xbfc2, 0x4159, 0x0, 0x0);
        gbc.writeMem(0xe6e4, { 0xe2 });
        gbc.writeMem(0xffe5, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2f75, gbc.sp());
        EXPECT(0xe6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe6e4));
        EXPECT(0x38, gbc.readMem(0xffe5));
        // E2 01C8
        gbc.setState(0x6332, 0x7dae, 0xa7f0, 0x8bf1, 0xaf1f, 0x3ad9, 0x1, 0x0);
        gbc.writeMem(0x6332, { 0xe2 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7dae, gbc.sp());
        EXPECT(0x6333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xfff1));
        // E2 01C9
        gbc.setState(0x281b, 0x1e7c, 0xda70, 0x5276, 0x7806, 0xea92, 0x0, 0x1);
        gbc.writeMem(0x281b, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1e7c, gbc.sp());
        EXPECT(0x281c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xff76));
        // E2 01CA
        gbc.setState(0x6a44, 0x8523, 0xce00, 0x249, 0x20f0, 0xd703, 0x0, 0x0);
        gbc.writeMem(0x6a44, { 0xe2 });
        gbc.writeMem(0xff49, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8523, gbc.sp());
        EXPECT(0x6a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xff49));
        // E2 01CB
        gbc.setState(0x1bd1, 0xb062, 0x3010, 0x52f9, 0xce8b, 0x1cb3, 0x0, 0x0);
        gbc.writeMem(0x1bd1, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb062, gbc.sp());
        EXPECT(0x1bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xfff9));
        // E2 01CC
        gbc.setState(0xa820, 0xd370, 0xa250, 0xd9c2, 0xae14, 0x3d14, 0x0, 0x1);
        gbc.writeMem(0xa820, { 0xe2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd370, gbc.sp());
        EXPECT(0xa821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa820));
        EXPECT(0xa2, gbc.readMem(0xffc2));
        // E2 01CD
        gbc.setState(0x678e, 0x72d8, 0x2c90, 0xa4d9, 0x298a, 0x1fd0, 0x1, 0x1);
        gbc.writeMem(0x678e, { 0xe2 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x72d8, gbc.sp());
        EXPECT(0x678f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xffd9));
        // E2 01CE
        gbc.setState(0x22, 0xf68b, 0xea30, 0x2019, 0xe692, 0x881f, 0x0, 0x1);
        gbc.writeMem(0x22, { 0xe2 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf68b, gbc.sp());
        EXPECT(0x23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xff19));
        // E2 01CF
        gbc.setState(0xadd2, 0x6607, 0x6880, 0x84bc, 0xc18c, 0xc3b5, 0x1, 0x1);
        gbc.writeMem(0xadd2, { 0xe2 });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6607, gbc.sp());
        EXPECT(0xadd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xadd2));
        EXPECT(0x68, gbc.readMem(0xffbc));
        // E2 01D0
        gbc.setState(0xa3b6, 0xfa9d, 0xc460, 0x34ce, 0xfde7, 0xf4f4, 0x1, 0x0);
        gbc.writeMem(0xa3b6, { 0xe2 });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0xa3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa3b6));
        EXPECT(0xc4, gbc.readMem(0xffce));
        // E2 01D1
        gbc.setState(0x768d, 0xd6ad, 0x2f00, 0x47f1, 0x1c53, 0x4ee, 0x0, 0x1);
        gbc.writeMem(0x768d, { 0xe2 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd6ad, gbc.sp());
        EXPECT(0x768e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xfff1));
        // E2 01D2
        gbc.setState(0x7bff, 0x7295, 0x80f0, 0x54e9, 0xafe7, 0xb7e8, 0x0, 0x0);
        gbc.writeMem(0x7bff, { 0xe2 });
        gbc.writeMem(0xffe9, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7295, gbc.sp());
        EXPECT(0x7c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xffe9));
        // E2 01D3
        gbc.setState(0xee31, 0x7ed8, 0x8370, 0x6078, 0x4fe9, 0x881, 0x0, 0x0);
        gbc.writeMem(0xee31, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7ed8, gbc.sp());
        EXPECT(0xee32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xee31));
        EXPECT(0x83, gbc.readMem(0xff78));
        // E2 01D4
        gbc.setState(0x2ae7, 0x6ae4, 0x9680, 0xe97c, 0x4fa, 0x849d, 0x0, 0x1);
        gbc.writeMem(0x2ae7, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6ae4, gbc.sp());
        EXPECT(0x2ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xff7c));
        // E2 01D5
        gbc.setState(0x3b8c, 0xad2f, 0x7890, 0xf9c1, 0x4931, 0xd879, 0x1, 0x0);
        gbc.writeMem(0x3b8c, { 0xe2 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xad2f, gbc.sp());
        EXPECT(0x3b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xffc1));
        // E2 01D6
        gbc.setState(0x9276, 0xc5a9, 0xb790, 0x42b5, 0x4701, 0x5fa5, 0x1, 0x1);
        gbc.writeMem(0x9276, { 0xe2 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc5a9, gbc.sp());
        EXPECT(0x9277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9276));
        EXPECT(0xb7, gbc.readMem(0xffb5));
        // E2 01D7
        gbc.setState(0xa269, 0x630, 0x9200, 0xe956, 0xafc0, 0xbfbb, 0x1, 0x0);
        gbc.writeMem(0xa269, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x630, gbc.sp());
        EXPECT(0xa26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa269));
        EXPECT(0x92, gbc.readMem(0xff56));
        // E2 01D8
        gbc.setState(0x107f, 0x11ba, 0x3ac0, 0x673d, 0xb22, 0x58fd, 0x0, 0x0);
        gbc.writeMem(0x107f, { 0xe2 });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x11ba, gbc.sp());
        EXPECT(0x1080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xff3d));
        // E2 01D9
        gbc.setState(0x69c3, 0xef28, 0xe010, 0x98a, 0xb386, 0xca39, 0x1, 0x1);
        gbc.writeMem(0x69c3, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xef28, gbc.sp());
        EXPECT(0x69c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff8a));
        // E2 01DA
        gbc.setState(0xeca5, 0x429, 0x9d0, 0x5ca7, 0x2dc9, 0x65aa, 0x0, 0x1);
        gbc.writeMem(0xeca5, { 0xe2 });
        gbc.writeMem(0xffa7, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x429, gbc.sp());
        EXPECT(0xeca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xeca5));
        EXPECT(0x9, gbc.readMem(0xffa7));
        // E2 01DB
        gbc.setState(0x3b7f, 0x6c96, 0x3da0, 0x1656, 0x5220, 0x31a, 0x0, 0x0);
        gbc.writeMem(0x3b7f, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6c96, gbc.sp());
        EXPECT(0x3b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xff56));
        // E2 01DD
        gbc.setState(0x92fb, 0xfc23, 0x2e60, 0x919a, 0x568c, 0x53c8, 0x0, 0x1);
        gbc.writeMem(0x92fb, { 0xe2 });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfc23, gbc.sp());
        EXPECT(0x92fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x92fb));
        EXPECT(0x2e, gbc.readMem(0xff9a));
        // E2 01DE
        gbc.setState(0x2ac, 0xc5d0, 0xd200, 0x44b3, 0x244a, 0x9023, 0x0, 0x0);
        gbc.writeMem(0x2ac, { 0xe2 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc5d0, gbc.sp());
        EXPECT(0x2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xffb3));
        // E2 01DF
        gbc.setState(0x989, 0xbd03, 0x3c50, 0xb27c, 0x585a, 0x23af, 0x1, 0x0);
        gbc.writeMem(0x989, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbd03, gbc.sp());
        EXPECT(0x98a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xff7c));
        // E2 01E0
        gbc.setState(0x3b0, 0x63b8, 0xd380, 0xc6e, 0x4f46, 0xb626, 0x1, 0x0);
        gbc.writeMem(0x3b0, { 0xe2 });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x63b8, gbc.sp());
        EXPECT(0x3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xff6e));
        // E2 01E1
        gbc.setState(0x4dbb, 0x3faa, 0x1a50, 0xbb43, 0xa5a5, 0x2ed, 0x1, 0x0);
        gbc.writeMem(0x4dbb, { 0xe2 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3faa, gbc.sp());
        EXPECT(0x4dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xff43));
        // E2 01E2
        gbc.setState(0xe8bf, 0xf5ed, 0x3360, 0xf07a, 0x564d, 0x4974, 0x0, 0x0);
        gbc.writeMem(0xe8bf, { 0xe2 });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf5ed, gbc.sp());
        EXPECT(0xe8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe8bf));
        EXPECT(0x33, gbc.readMem(0xff7a));
        // E2 01E3
        gbc.setState(0x23c0, 0x4c55, 0xb600, 0x151e, 0x86c6, 0x44cd, 0x1, 0x0);
        gbc.writeMem(0x23c0, { 0xe2 });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4c55, gbc.sp());
        EXPECT(0x23c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xff1e));
        // E2 01E4
        gbc.setState(0xbb6c, 0x762b, 0x3d20, 0xac03, 0xaa21, 0xa809, 0x0, 0x1);
        gbc.writeMem(0xbb6c, { 0xe2 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x762b, gbc.sp());
        EXPECT(0xbb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbb6c));
        EXPECT(0x3d, gbc.readMem(0xff03));
        // E2 01E5
        gbc.setState(0xac32, 0x9047, 0xf490, 0x5010, 0xe4af, 0x9fd9, 0x1, 0x0);
        gbc.writeMem(0xac32, { 0xe2 });
        gbc.writeMem(0xff10, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9047, gbc.sp());
        EXPECT(0xac33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xac32));
        EXPECT(0xf4, gbc.readMem(0xff10));
        // E2 01E6
        gbc.setState(0xde48, 0x647, 0x8a60, 0x77a8, 0x7216, 0x4d9a, 0x0, 0x0);
        gbc.writeMem(0xde48, { 0xe2 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x647, gbc.sp());
        EXPECT(0xde49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xde48));
        EXPECT(0x8a, gbc.readMem(0xffa8));
        // E2 01E7
        gbc.setState(0x869e, 0x1e2f, 0x1a10, 0xb621, 0x487a, 0x23c3, 0x0, 0x1);
        gbc.writeMem(0x869e, { 0xe2 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1e2f, gbc.sp());
        EXPECT(0x869f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x869e));
        EXPECT(0x1a, gbc.readMem(0xff21));
        // E2 01E8
        gbc.setState(0x43b, 0xc9d7, 0x2aa0, 0x455c, 0xd356, 0x3968, 0x0, 0x0);
        gbc.writeMem(0x43b, { 0xe2 });
        gbc.writeMem(0xff5c, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc9d7, gbc.sp());
        EXPECT(0x43c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xff5c));
        // E2 01E9
        gbc.setState(0x5bb5, 0xe07e, 0xdf90, 0x24c6, 0x566d, 0x6612, 0x0, 0x1);
        gbc.writeMem(0x5bb5, { 0xe2 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe07e, gbc.sp());
        EXPECT(0x5bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xffc6));
        // E2 01EA
        gbc.setState(0xc015, 0xf310, 0x72b0, 0x47f4, 0x1776, 0xd81f, 0x0, 0x1);
        gbc.writeMem(0xc015, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf310, gbc.sp());
        EXPECT(0xc016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc015));
        EXPECT(0x72, gbc.readMem(0xfff4));
        // E2 01EB
        gbc.setState(0x20f3, 0xbe30, 0x89b0, 0xe840, 0x262c, 0x925e, 0x1, 0x0);
        gbc.writeMem(0x20f3, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbe30, gbc.sp());
        EXPECT(0x20f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xff40));
        // E2 01ED
        gbc.setState(0xadf, 0xba05, 0xf90, 0xfe99, 0x94f5, 0x8017, 0x1, 0x1);
        gbc.writeMem(0xadf, { 0xe2 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xba05, gbc.sp());
        EXPECT(0xae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xff99));
        // E2 01F0
        gbc.setState(0xe305, 0xe2ab, 0x3f60, 0x5eb2, 0x4857, 0x8128, 0x0, 0x0);
        gbc.writeMem(0xe305, { 0xe2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe2ab, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe305));
        EXPECT(0x3f, gbc.readMem(0xffb2));
        // E2 01F1
        gbc.setState(0x5d1c, 0xd917, 0x6210, 0x9c9, 0x2e4a, 0x3622, 0x0, 0x0);
        gbc.writeMem(0x5d1c, { 0xe2 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd917, gbc.sp());
        EXPECT(0x5d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xffc9));
        // E2 01F2
        gbc.setState(0xdbb9, 0xed7f, 0xa5d0, 0x6133, 0xbbb2, 0x2a5b, 0x0, 0x1);
        gbc.writeMem(0xdbb9, { 0xe2 });
        gbc.writeMem(0xff33, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xed7f, gbc.sp());
        EXPECT(0xdbba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdbb9));
        EXPECT(0xa5, gbc.readMem(0xff33));
        // E2 01F3
        gbc.setState(0x28f0, 0x5dd6, 0xfb60, 0xdc22, 0x1c8e, 0xaf3e, 0x1, 0x1);
        gbc.writeMem(0x28f0, { 0xe2 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5dd6, gbc.sp());
        EXPECT(0x28f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xff22));
        // E2 01F4
        gbc.setState(0x7e39, 0xc598, 0xbd00, 0xa652, 0x8ccc, 0xa60c, 0x0, 0x1);
        gbc.writeMem(0x7e39, { 0xe2 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc598, gbc.sp());
        EXPECT(0x7e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xff52));
        // E2 01F5
        gbc.setState(0x2d30, 0x938a, 0xaca0, 0xcf21, 0x2871, 0xef52, 0x0, 0x0);
        gbc.writeMem(0x2d30, { 0xe2 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x938a, gbc.sp());
        EXPECT(0x2d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xff21));
        // E2 01F6
        gbc.setState(0x227d, 0x1b98, 0x7790, 0xb2dc, 0xc962, 0x78cc, 0x1, 0x0);
        gbc.writeMem(0x227d, { 0xe2 });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1b98, gbc.sp());
        EXPECT(0x227e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xffdc));
        // E2 01F7
        gbc.setState(0x6bc, 0xffe, 0x6f20, 0xae4d, 0x5883, 0xfe0f, 0x0, 0x0);
        gbc.writeMem(0x6bc, { 0xe2 });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xffe, gbc.sp());
        EXPECT(0x6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xff4d));
        // E2 01F8
        gbc.setState(0x461, 0x9efc, 0xa020, 0xff04, 0xdc7, 0x799c, 0x0, 0x1);
        gbc.writeMem(0x461, { 0xe2 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9efc, gbc.sp());
        EXPECT(0x462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xff04));
        // E2 01F9
        gbc.setState(0xd100, 0xd1d1, 0xe570, 0x469c, 0x844d, 0x417c, 0x1, 0x1);
        gbc.writeMem(0xd100, { 0xe2 });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd1d1, gbc.sp());
        EXPECT(0xd101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd100));
        EXPECT(0xe5, gbc.readMem(0xff9c));
        // E2 01FA
        gbc.setState(0x6568, 0x7a3f, 0x52f0, 0x8b6f, 0x5519, 0x48e, 0x0, 0x0);
        gbc.writeMem(0x6568, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7a3f, gbc.sp());
        EXPECT(0x6569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff6f));
        // E2 01FB
        gbc.setState(0x46d5, 0x28b0, 0xcfc0, 0x9443, 0x9017, 0x478e, 0x0, 0x0);
        gbc.writeMem(0x46d5, { 0xe2 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x28b0, gbc.sp());
        EXPECT(0x46d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xff43));
        // E2 01FC
        gbc.setState(0xd2d4, 0xea98, 0x3660, 0x264, 0x1580, 0x19e2, 0x0, 0x0);
        gbc.writeMem(0xd2d4, { 0xe2 });
        gbc.writeMem(0xff64, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xea98, gbc.sp());
        EXPECT(0xd2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd2d4));
        EXPECT(0x36, gbc.readMem(0xff64));
        // E2 01FD
        gbc.setState(0xe829, 0x7bba, 0xf4e0, 0x15c2, 0xef9b, 0xcca4, 0x0, 0x0);
        gbc.writeMem(0xe829, { 0xe2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7bba, gbc.sp());
        EXPECT(0xe82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe829));
        EXPECT(0xf4, gbc.readMem(0xffc2));
        // E2 01FE
        gbc.setState(0x5579, 0xdfc7, 0x8510, 0x29ab, 0x995f, 0xcc77, 0x0, 0x1);
        gbc.writeMem(0x5579, { 0xe2 });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdfc7, gbc.sp());
        EXPECT(0x557a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xffab));
        // E2 01FF
        gbc.setState(0xa44e, 0x8e4, 0xc750, 0x334a, 0x8d35, 0x878d, 0x1, 0x1);
        gbc.writeMem(0xa44e, { 0xe2 });
        gbc.writeMem(0xff4a, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8e4, gbc.sp());
        EXPECT(0xa44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa44e));
        EXPECT(0xc7, gbc.readMem(0xff4a));
        // E2 0200
        gbc.setState(0xad6c, 0xe5df, 0xb270, 0x4eb9, 0x15bf, 0xf805, 0x0, 0x1);
        gbc.writeMem(0xad6c, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe5df, gbc.sp());
        EXPECT(0xad6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xad6c));
        EXPECT(0xb2, gbc.readMem(0xffb9));
        // E2 0201
        gbc.setState(0xe929, 0xce63, 0x6340, 0xc17d, 0xc20c, 0x4c8f, 0x1, 0x0);
        gbc.writeMem(0xe929, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xce63, gbc.sp());
        EXPECT(0xe92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe929));
        EXPECT(0x63, gbc.readMem(0xff7d));
        // E2 0202
        gbc.setState(0x7abc, 0x6074, 0x6430, 0x8f59, 0x2449, 0x6d5d, 0x1, 0x0);
        gbc.writeMem(0x7abc, { 0xe2 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6074, gbc.sp());
        EXPECT(0x7abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xff59));
        // E2 0203
        gbc.setState(0x8ec5, 0xdc, 0x3b10, 0xe13a, 0xa2f0, 0x2ad7, 0x0, 0x0);
        gbc.writeMem(0x8ec5, { 0xe2 });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdc, gbc.sp());
        EXPECT(0x8ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8ec5));
        EXPECT(0x3b, gbc.readMem(0xff3a));
        // E2 0204
        gbc.setState(0xc64, 0xeea4, 0x7e0, 0xb156, 0x3a2e, 0x284e, 0x0, 0x1);
        gbc.writeMem(0xc64, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xeea4, gbc.sp());
        EXPECT(0xc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xff56));
        // E2 0205
        gbc.setState(0x7259, 0x5296, 0x9fc0, 0x2d5b, 0x1e2c, 0x8961, 0x1, 0x0);
        gbc.writeMem(0x7259, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5296, gbc.sp());
        EXPECT(0x725a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xff5b));
        // E2 0206
        gbc.setState(0x5d8a, 0x341d, 0x7300, 0xcc89, 0xd9e4, 0xd2af, 0x1, 0x1);
        gbc.writeMem(0x5d8a, { 0xe2 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x341d, gbc.sp());
        EXPECT(0x5d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xff89));
        // E2 0207
        gbc.setState(0xa825, 0x71a, 0x6f20, 0x3ce4, 0x6c3d, 0x603c, 0x0, 0x1);
        gbc.writeMem(0xa825, { 0xe2 });
        gbc.writeMem(0xffe4, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x71a, gbc.sp());
        EXPECT(0xa826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa825));
        EXPECT(0x6f, gbc.readMem(0xffe4));
        // E2 0208
        gbc.setState(0x31b0, 0xd3a1, 0xc290, 0x3178, 0xcf06, 0x625d, 0x1, 0x0);
        gbc.writeMem(0x31b0, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd3a1, gbc.sp());
        EXPECT(0x31b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xff78));
        // E2 0209
        gbc.setState(0x98cf, 0xbfb6, 0xea50, 0x56fd, 0xa826, 0x5315, 0x1, 0x0);
        gbc.writeMem(0x98cf, { 0xe2 });
        gbc.writeMem(0xfffd, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbfb6, gbc.sp());
        EXPECT(0x98d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x98cf));
        EXPECT(0xea, gbc.readMem(0xfffd));
        // E2 020A
        gbc.setState(0x6cbf, 0x82fe, 0x1210, 0x3137, 0x373a, 0x2e7b, 0x0, 0x1);
        gbc.writeMem(0x6cbf, { 0xe2 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x82fe, gbc.sp());
        EXPECT(0x6cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xff37));
        // E2 020B
        gbc.setState(0xbbe5, 0x40a5, 0xf4c0, 0xc934, 0x9e23, 0x95ff, 0x1, 0x0);
        gbc.writeMem(0xbbe5, { 0xe2 });
        gbc.writeMem(0xff34, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x40a5, gbc.sp());
        EXPECT(0xbbe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbbe5));
        EXPECT(0xf4, gbc.readMem(0xff34));
        // E2 020C
        gbc.setState(0xcc38, 0x60ce, 0xd2f0, 0x8d8f, 0x6ab2, 0xa708, 0x0, 0x0);
        gbc.writeMem(0xcc38, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x60ce, gbc.sp());
        EXPECT(0xcc39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcc38));
        EXPECT(0xd2, gbc.readMem(0xff8f));
        // E2 020D
        gbc.setState(0x101e, 0x2234, 0x6af0, 0xeef4, 0x24b2, 0x1f33, 0x1, 0x1);
        gbc.writeMem(0x101e, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2234, gbc.sp());
        EXPECT(0x101f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xfff4));
        // E2 020E
        gbc.setState(0x7846, 0x1449, 0xf620, 0xb602, 0xbb92, 0xada3, 0x1, 0x1);
        gbc.writeMem(0x7846, { 0xe2 });
        gbc.writeMem(0xff02, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1449, gbc.sp());
        EXPECT(0x7847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xff02));
        // E2 020F
        gbc.setState(0x62af, 0xfc5c, 0xea60, 0x139c, 0x5319, 0xc870, 0x1, 0x0);
        gbc.writeMem(0x62af, { 0xe2 });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfc5c, gbc.sp());
        EXPECT(0x62b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xff9c));
        // E2 0210
        gbc.setState(0x88f3, 0x8615, 0x2370, 0x10b2, 0xd944, 0xeb15, 0x1, 0x0);
        gbc.writeMem(0x88f3, { 0xe2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8615, gbc.sp());
        EXPECT(0x88f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x88f3));
        EXPECT(0x23, gbc.readMem(0xffb2));
        // E2 0211
        gbc.setState(0xe481, 0x9fb9, 0x97a0, 0x99ce, 0x8941, 0xcc72, 0x1, 0x1);
        gbc.writeMem(0xe481, { 0xe2 });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9fb9, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe481));
        EXPECT(0x97, gbc.readMem(0xffce));
        // E2 0212
        gbc.setState(0x16cc, 0xaa8d, 0xdf0, 0xa9f2, 0xff99, 0x4b26, 0x1, 0x0);
        gbc.writeMem(0x16cc, { 0xe2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaa8d, gbc.sp());
        EXPECT(0x16cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xfff2));
        // E2 0213
        gbc.setState(0xb3c0, 0xa38a, 0xe2e0, 0x79dd, 0x7c6a, 0x2c86, 0x1, 0x0);
        gbc.writeMem(0xb3c0, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa38a, gbc.sp());
        EXPECT(0xb3c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb3c0));
        EXPECT(0xe2, gbc.readMem(0xffdd));
        // E2 0215
        gbc.setState(0x4083, 0x2181, 0xf240, 0x149d, 0x4750, 0xfe85, 0x0, 0x1);
        gbc.writeMem(0x4083, { 0xe2 });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2181, gbc.sp());
        EXPECT(0x4084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xff9d));
        // E2 0216
        gbc.setState(0x3c27, 0x2605, 0x1040, 0xfa9a, 0xb49c, 0xd297, 0x0, 0x0);
        gbc.writeMem(0x3c27, { 0xe2 });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2605, gbc.sp());
        EXPECT(0x3c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xff9a));
        // E2 0217
        gbc.setState(0x6ce4, 0xb233, 0x5d0, 0x23a3, 0x3782, 0x1704, 0x0, 0x1);
        gbc.writeMem(0x6ce4, { 0xe2 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb233, gbc.sp());
        EXPECT(0x6ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xffa3));
        // E2 0218
        gbc.setState(0x3a3c, 0x8086, 0x7ec0, 0x348c, 0xf83a, 0x5b7d, 0x0, 0x1);
        gbc.writeMem(0x3a3c, { 0xe2 });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8086, gbc.sp());
        EXPECT(0x3a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xff8c));
        // E2 0219
        gbc.setState(0x80c8, 0x94ea, 0x6310, 0x21fb, 0x4576, 0x1757, 0x0, 0x0);
        gbc.writeMem(0x80c8, { 0xe2 });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x94ea, gbc.sp());
        EXPECT(0x80c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x80c8));
        EXPECT(0x63, gbc.readMem(0xfffb));
        // E2 021A
        gbc.setState(0xab67, 0x3941, 0x90d0, 0x2b86, 0x9b51, 0xa726, 0x0, 0x1);
        gbc.writeMem(0xab67, { 0xe2 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3941, gbc.sp());
        EXPECT(0xab68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xab67));
        EXPECT(0x90, gbc.readMem(0xff86));
        // E2 021B
        gbc.setState(0x3fa2, 0x9d0c, 0x77b0, 0xbc0e, 0xb242, 0xef37, 0x1, 0x1);
        gbc.writeMem(0x3fa2, { 0xe2 });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9d0c, gbc.sp());
        EXPECT(0x3fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xff0e));
        // E2 021C
        gbc.setState(0x3ef1, 0xd88d, 0x3120, 0xcaf7, 0xb984, 0xd5b7, 0x1, 0x1);
        gbc.writeMem(0x3ef1, { 0xe2 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd88d, gbc.sp());
        EXPECT(0x3ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xfff7));
        // E2 021D
        gbc.setState(0x82c0, 0xbfc7, 0x82b0, 0x2275, 0x6389, 0xc21a, 0x1, 0x1);
        gbc.writeMem(0x82c0, { 0xe2 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbfc7, gbc.sp());
        EXPECT(0x82c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x82c0));
        EXPECT(0x82, gbc.readMem(0xff75));
        // E2 021E
        gbc.setState(0x6276, 0x14d3, 0x1b10, 0x520b, 0xfc55, 0x7e87, 0x0, 0x1);
        gbc.writeMem(0x6276, { 0xe2 });
        gbc.writeMem(0xff0b, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x14d3, gbc.sp());
        EXPECT(0x6277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xff0b));
        // E2 021F
        gbc.setState(0xcb98, 0x6d8f, 0xf510, 0x301e, 0x5d1b, 0x3fbf, 0x1, 0x0);
        gbc.writeMem(0xcb98, { 0xe2 });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6d8f, gbc.sp());
        EXPECT(0xcb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcb98));
        EXPECT(0xf5, gbc.readMem(0xff1e));
        // E2 0220
        gbc.setState(0xb639, 0x42b6, 0x83c0, 0x635c, 0xc780, 0x553c, 0x1, 0x1);
        gbc.writeMem(0xb639, { 0xe2 });
        gbc.writeMem(0xff5c, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x42b6, gbc.sp());
        EXPECT(0xb63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb639));
        EXPECT(0x83, gbc.readMem(0xff5c));
        // E2 0221
        gbc.setState(0x7e98, 0x2a3f, 0x7830, 0xc10d, 0x3dad, 0x3666, 0x1, 0x1);
        gbc.writeMem(0x7e98, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2a3f, gbc.sp());
        EXPECT(0x7e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xff0d));
        // E2 0222
        gbc.setState(0x7c59, 0x3e01, 0x1500, 0x13a5, 0x9457, 0xe161, 0x1, 0x1);
        gbc.writeMem(0x7c59, { 0xe2 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3e01, gbc.sp());
        EXPECT(0x7c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xffa5));
        // E2 0223
        gbc.setState(0x1662, 0x1885, 0x3c30, 0x2726, 0x9ffa, 0xad96, 0x1, 0x0);
        gbc.writeMem(0x1662, { 0xe2 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1885, gbc.sp());
        EXPECT(0x1663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xff26));
        // E2 0224
        gbc.setState(0xa119, 0x4ca0, 0x81c0, 0x10fc, 0xbc, 0xe6e7, 0x1, 0x0);
        gbc.writeMem(0xa119, { 0xe2 });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4ca0, gbc.sp());
        EXPECT(0xa11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa119));
        EXPECT(0x81, gbc.readMem(0xfffc));
        // E2 0225
        gbc.setState(0x101, 0xf156, 0xe560, 0xe777, 0x8ffa, 0x8d90, 0x1, 0x0);
        gbc.writeMem(0x101, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf156, gbc.sp());
        EXPECT(0x102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xff77));
        // E2 0226
        gbc.setState(0xcc70, 0xfd1d, 0x8a0, 0x6508, 0xf56c, 0xdf66, 0x1, 0x1);
        gbc.writeMem(0xcc70, { 0xe2 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfd1d, gbc.sp());
        EXPECT(0xcc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcc70));
        EXPECT(0x8, gbc.readMem(0xff08));
        // E2 0227
        gbc.setState(0x2fb9, 0x2137, 0x5be0, 0xb0cc, 0x2fa0, 0xf019, 0x1, 0x1);
        gbc.writeMem(0x2fb9, { 0xe2 });
        gbc.writeMem(0xffcc, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2137, gbc.sp());
        EXPECT(0x2fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xffcc));
        // E2 0228
        gbc.setState(0x5e33, 0xabb4, 0x5940, 0x2943, 0x7e, 0xd40e, 0x1, 0x0);
        gbc.writeMem(0x5e33, { 0xe2 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xabb4, gbc.sp());
        EXPECT(0x5e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xff43));
        // E2 0229
        gbc.setState(0x7cee, 0x9ed6, 0xa450, 0xeed4, 0x6c2, 0x312, 0x0, 0x1);
        gbc.writeMem(0x7cee, { 0xe2 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9ed6, gbc.sp());
        EXPECT(0x7cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xffd4));
        // E2 022A
        gbc.setState(0x89da, 0x187, 0x52b0, 0x820f, 0x2209, 0xcdff, 0x1, 0x0);
        gbc.writeMem(0x89da, { 0xe2 });
        gbc.writeMem(0xff0f, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x187, gbc.sp());
        EXPECT(0x89db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x89da));
        EXPECT(0x52, gbc.readMem(0xff0f));
        // E2 022B
        gbc.setState(0xc852, 0x83e, 0xc520, 0x335e, 0xce75, 0x95dc, 0x0, 0x0);
        gbc.writeMem(0xc852, { 0xe2 });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x83e, gbc.sp());
        EXPECT(0xc853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc852));
        EXPECT(0xc5, gbc.readMem(0xff5e));
        // E2 022C
        gbc.setState(0x6359, 0x1a89, 0xa0f0, 0x3f7c, 0x7231, 0x362c, 0x1, 0x1);
        gbc.writeMem(0x6359, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1a89, gbc.sp());
        EXPECT(0x635a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xff7c));
        // E2 022D
        gbc.setState(0x95a8, 0xc188, 0x8be0, 0xf1bd, 0x74fc, 0xb124, 0x0, 0x0);
        gbc.writeMem(0x95a8, { 0xe2 });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc188, gbc.sp());
        EXPECT(0x95a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x95a8));
        EXPECT(0x8b, gbc.readMem(0xffbd));
        // E2 022E
        gbc.setState(0xb7ba, 0xb82d, 0x7ee0, 0xa2c8, 0xf68e, 0x2bfd, 0x0, 0x0);
        gbc.writeMem(0xb7ba, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb82d, gbc.sp());
        EXPECT(0xb7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb7ba));
        EXPECT(0x7e, gbc.readMem(0xffc8));
        // E2 022F
        gbc.setState(0xc458, 0x8374, 0xe970, 0xbb9e, 0xe354, 0x894a, 0x1, 0x1);
        gbc.writeMem(0xc458, { 0xe2 });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8374, gbc.sp());
        EXPECT(0xc459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc458));
        EXPECT(0xe9, gbc.readMem(0xff9e));
        // E2 0230
        gbc.setState(0x8c26, 0x46ee, 0x2dd0, 0x862d, 0x330b, 0x764c, 0x0, 0x0);
        gbc.writeMem(0x8c26, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x46ee, gbc.sp());
        EXPECT(0x8c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8c26));
        EXPECT(0x2d, gbc.readMem(0xff2d));
        // E2 0231
        gbc.setState(0x2cb5, 0xdf17, 0xd070, 0x9f8e, 0x2636, 0xec62, 0x1, 0x0);
        gbc.writeMem(0x2cb5, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdf17, gbc.sp());
        EXPECT(0x2cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xff8e));
        // E2 0232
        gbc.setState(0xbd8d, 0xf2b, 0x87b0, 0x92fd, 0x6c5b, 0xe581, 0x1, 0x1);
        gbc.writeMem(0xbd8d, { 0xe2 });
        gbc.writeMem(0xfffd, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf2b, gbc.sp());
        EXPECT(0xbd8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbd8d));
        EXPECT(0x87, gbc.readMem(0xfffd));
        // E2 0233
        gbc.setState(0x108d, 0x5f75, 0x6280, 0xa099, 0xd6e4, 0xe65f, 0x1, 0x0);
        gbc.writeMem(0x108d, { 0xe2 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5f75, gbc.sp());
        EXPECT(0x108e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xff99));
        // E2 0234
        gbc.setState(0x3865, 0x663f, 0x22e0, 0xc1f2, 0x6db8, 0xf29a, 0x0, 0x1);
        gbc.writeMem(0x3865, { 0xe2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x663f, gbc.sp());
        EXPECT(0x3866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xfff2));
        // E2 0235
        gbc.setState(0x2b13, 0xbc85, 0x2230, 0x6793, 0x57b7, 0x927f, 0x1, 0x1);
        gbc.writeMem(0x2b13, { 0xe2 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbc85, gbc.sp());
        EXPECT(0x2b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xff93));
        // E2 0236
        gbc.setState(0x7028, 0x76d6, 0x4ac0, 0x1347, 0x4507, 0x46eb, 0x1, 0x0);
        gbc.writeMem(0x7028, { 0xe2 });
        gbc.writeMem(0xff47, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x76d6, gbc.sp());
        EXPECT(0x7029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xff47));
        // E2 0237
        gbc.setState(0xc5c7, 0x2078, 0xfec0, 0x93a1, 0x82c1, 0xd233, 0x0, 0x1);
        gbc.writeMem(0xc5c7, { 0xe2 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2078, gbc.sp());
        EXPECT(0xc5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc5c7));
        EXPECT(0xfe, gbc.readMem(0xffa1));
        // E2 0238
        gbc.setState(0xbd7a, 0xa19c, 0x4970, 0x33c2, 0xa690, 0xad4d, 0x1, 0x0);
        gbc.writeMem(0xbd7a, { 0xe2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa19c, gbc.sp());
        EXPECT(0xbd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbd7a));
        EXPECT(0x49, gbc.readMem(0xffc2));
        // E2 0239
        gbc.setState(0x7c0a, 0xbd02, 0x7250, 0xaaf9, 0x14dc, 0xb8c2, 0x1, 0x0);
        gbc.writeMem(0x7c0a, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbd02, gbc.sp());
        EXPECT(0x7c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xfff9));
        // E2 023A
        gbc.setState(0x7f37, 0xf6e4, 0x5a90, 0x4025, 0x1382, 0x321f, 0x0, 0x0);
        gbc.writeMem(0x7f37, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf6e4, gbc.sp());
        EXPECT(0x7f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xff25));
        // E2 023B
        gbc.setState(0x254a, 0x9673, 0x5f50, 0x4b9f, 0x7d76, 0x86dd, 0x1, 0x1);
        gbc.writeMem(0x254a, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9673, gbc.sp());
        EXPECT(0x254b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xff9f));
        // E2 023C
        gbc.setState(0x8d27, 0x9187, 0x9c70, 0xbc54, 0xf2e0, 0x795c, 0x0, 0x1);
        gbc.writeMem(0x8d27, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9187, gbc.sp());
        EXPECT(0x8d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8d27));
        EXPECT(0x9c, gbc.readMem(0xff54));
        // E2 023D
        gbc.setState(0xa7a2, 0xb48c, 0x4e60, 0xfbae, 0x16a5, 0x9893, 0x0, 0x1);
        gbc.writeMem(0xa7a2, { 0xe2 });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb48c, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa7a2));
        EXPECT(0x4e, gbc.readMem(0xffae));
        // E2 023E
        gbc.setState(0xa20f, 0x8212, 0x1460, 0xb067, 0x42e8, 0xf522, 0x0, 0x0);
        gbc.writeMem(0xa20f, { 0xe2 });
        gbc.writeMem(0xff67, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8212, gbc.sp());
        EXPECT(0xa210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa20f));
        EXPECT(0x14, gbc.readMem(0xff67));
        // E2 023F
        gbc.setState(0x555a, 0x849c, 0x9720, 0x63c4, 0xb718, 0xbfd, 0x0, 0x0);
        gbc.writeMem(0x555a, { 0xe2 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x849c, gbc.sp());
        EXPECT(0x555b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xffc4));
        // E2 0241
        gbc.setState(0xbc66, 0x878b, 0xaf20, 0xc553, 0xcf14, 0x474b, 0x1, 0x0);
        gbc.writeMem(0xbc66, { 0xe2 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x878b, gbc.sp());
        EXPECT(0xbc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbc66));
        EXPECT(0xaf, gbc.readMem(0xff53));
        // E2 0242
        gbc.setState(0x1e49, 0x672, 0xf130, 0x8c0, 0xc552, 0xc128, 0x1, 0x1);
        gbc.writeMem(0x1e49, { 0xe2 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x672, gbc.sp());
        EXPECT(0x1e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xffc0));
        // E2 0243
        gbc.setState(0x5dc5, 0x1b17, 0x9dc0, 0x65d2, 0x5c10, 0xf8ed, 0x1, 0x0);
        gbc.writeMem(0x5dc5, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1b17, gbc.sp());
        EXPECT(0x5dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xffd2));
        // E2 0244
        gbc.setState(0xb1a1, 0x1160, 0x7290, 0x7c12, 0x5a7e, 0xbef5, 0x0, 0x0);
        gbc.writeMem(0xb1a1, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1160, gbc.sp());
        EXPECT(0xb1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb1a1));
        EXPECT(0x72, gbc.readMem(0xff12));
        // E2 0245
        gbc.setState(0x6b13, 0xaaab, 0x4ea0, 0xac22, 0x292f, 0x6bdb, 0x0, 0x1);
        gbc.writeMem(0x6b13, { 0xe2 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xaaab, gbc.sp());
        EXPECT(0x6b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xff22));
        // E2 0247
        gbc.setState(0xdd3f, 0x34f1, 0xa330, 0xa322, 0x86, 0xb188, 0x0, 0x1);
        gbc.writeMem(0xdd3f, { 0xe2 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x34f1, gbc.sp());
        EXPECT(0xdd40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdd3f));
        EXPECT(0xa3, gbc.readMem(0xff22));
        // E2 0248
        gbc.setState(0x66d, 0x83a4, 0x3b50, 0x60d5, 0xb78f, 0x1fb6, 0x0, 0x0);
        gbc.writeMem(0x66d, { 0xe2 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x83a4, gbc.sp());
        EXPECT(0x66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xffd5));
        // E2 0249
        gbc.setState(0xaa81, 0x1393, 0x47e0, 0xcc91, 0xfd6e, 0x4f98, 0x1, 0x1);
        gbc.writeMem(0xaa81, { 0xe2 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1393, gbc.sp());
        EXPECT(0xaa82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xaa81));
        EXPECT(0x47, gbc.readMem(0xff91));
        // E2 024A
        gbc.setState(0xa43f, 0x39fb, 0xad90, 0x2a08, 0x8560, 0x3fbf, 0x1, 0x1);
        gbc.writeMem(0xa43f, { 0xe2 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x39fb, gbc.sp());
        EXPECT(0xa440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa43f));
        EXPECT(0xad, gbc.readMem(0xff08));
        // E2 024B
        gbc.setState(0x3d72, 0xf457, 0x3600, 0xdadd, 0xcf0b, 0xddb, 0x1, 0x1);
        gbc.writeMem(0x3d72, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf457, gbc.sp());
        EXPECT(0x3d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xffdd));
        // E2 024C
        gbc.setState(0x7175, 0xaac2, 0x1120, 0x3e3a, 0xa9ee, 0xdd84, 0x0, 0x0);
        gbc.writeMem(0x7175, { 0xe2 });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xaac2, gbc.sp());
        EXPECT(0x7176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xff3a));
        // E2 024D
        gbc.setState(0xa85e, 0xc74f, 0xcae0, 0x2c09, 0x41a7, 0x12de, 0x1, 0x0);
        gbc.writeMem(0xa85e, { 0xe2 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc74f, gbc.sp());
        EXPECT(0xa85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa85e));
        EXPECT(0xca, gbc.readMem(0xff09));
        // E2 024E
        gbc.setState(0xb72c, 0x62eb, 0x97a0, 0x30e6, 0x8541, 0x7af1, 0x1, 0x0);
        gbc.writeMem(0xb72c, { 0xe2 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x62eb, gbc.sp());
        EXPECT(0xb72d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb72c));
        EXPECT(0x97, gbc.readMem(0xffe6));
        // E2 024F
        gbc.setState(0x7def, 0x9594, 0xd4c0, 0x3bba, 0x98b0, 0x4b13, 0x0, 0x1);
        gbc.writeMem(0x7def, { 0xe2 });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9594, gbc.sp());
        EXPECT(0x7df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xffba));
        // E2 0250
        gbc.setState(0x35a0, 0x293e, 0xf650, 0x5f59, 0x443d, 0x656e, 0x1, 0x0);
        gbc.writeMem(0x35a0, { 0xe2 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x293e, gbc.sp());
        EXPECT(0x35a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xff59));
        // E2 0251
        gbc.setState(0x6a19, 0x1c37, 0xfda0, 0x83e1, 0x16f9, 0x38cc, 0x1, 0x0);
        gbc.writeMem(0x6a19, { 0xe2 });
        gbc.writeMem(0xffe1, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1c37, gbc.sp());
        EXPECT(0x6a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xffe1));
        // E2 0252
        gbc.setState(0x89af, 0xdcc9, 0x3b80, 0x1311, 0x7a4d, 0xc2f2, 0x0, 0x1);
        gbc.writeMem(0x89af, { 0xe2 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdcc9, gbc.sp());
        EXPECT(0x89b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x89af));
        EXPECT(0x3b, gbc.readMem(0xff11));
        // E2 0253
        gbc.setState(0x31fa, 0xdf30, 0x2cd0, 0xd5c, 0x32ba, 0x57be, 0x1, 0x0);
        gbc.writeMem(0x31fa, { 0xe2 });
        gbc.writeMem(0xff5c, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdf30, gbc.sp());
        EXPECT(0x31fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xff5c));
        // E2 0254
        gbc.setState(0xc85f, 0xe756, 0xa110, 0x5c12, 0xa96, 0xca2c, 0x1, 0x0);
        gbc.writeMem(0xc85f, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe756, gbc.sp());
        EXPECT(0xc860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc85f));
        EXPECT(0xa1, gbc.readMem(0xff12));
        // E2 0255
        gbc.setState(0x62d1, 0xb477, 0x7b10, 0xe3ec, 0x7634, 0x1622, 0x0, 0x0);
        gbc.writeMem(0x62d1, { 0xe2 });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb477, gbc.sp());
        EXPECT(0x62d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xffec));
        // E2 0256
        gbc.setState(0x1b92, 0x797, 0x2280, 0x2d8e, 0x36fc, 0x227c, 0x0, 0x1);
        gbc.writeMem(0x1b92, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x797, gbc.sp());
        EXPECT(0x1b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xff8e));
        // E2 0257
        gbc.setState(0xd48d, 0xc201, 0xe9c0, 0x4d51, 0xa078, 0xcc47, 0x1, 0x1);
        gbc.writeMem(0xd48d, { 0xe2 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc201, gbc.sp());
        EXPECT(0xd48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd48d));
        EXPECT(0xe9, gbc.readMem(0xff51));
        // E2 0258
        gbc.setState(0x2441, 0x780c, 0x41d0, 0xe8f5, 0x9d5, 0xa9c8, 0x1, 0x0);
        gbc.writeMem(0x2441, { 0xe2 });
        gbc.writeMem(0xfff5, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x780c, gbc.sp());
        EXPECT(0x2442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xfff5));
        // E2 0259
        gbc.setState(0xce47, 0x5a39, 0x33d0, 0xe154, 0xbbab, 0x6364, 0x0, 0x1);
        gbc.writeMem(0xce47, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5a39, gbc.sp());
        EXPECT(0xce48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xce47));
        EXPECT(0x33, gbc.readMem(0xff54));
        // E2 025A
        gbc.setState(0x4e24, 0xa3e, 0x300, 0xc173, 0xaa0b, 0x54c3, 0x0, 0x1);
        gbc.writeMem(0x4e24, { 0xe2 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa3e, gbc.sp());
        EXPECT(0x4e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xff73));
        // E2 025B
        gbc.setState(0xc126, 0x3cc3, 0xc160, 0xa259, 0x11a2, 0xa104, 0x1, 0x1);
        gbc.writeMem(0xc126, { 0xe2 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3cc3, gbc.sp());
        EXPECT(0xc127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc126));
        EXPECT(0xc1, gbc.readMem(0xff59));
        // E2 025C
        gbc.setState(0x729e, 0x131, 0x17d0, 0xae1f, 0x10ab, 0x89f, 0x0, 0x0);
        gbc.writeMem(0x729e, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x131, gbc.sp());
        EXPECT(0x729f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xff1f));
        // E2 025D
        gbc.setState(0x201b, 0x3001, 0xf640, 0xdbff, 0x4622, 0x4423, 0x0, 0x0);
        gbc.writeMem(0x201b, { 0xe2 });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3001, gbc.sp());
        EXPECT(0x201c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xffff));
        // E2 025E
        gbc.setState(0x9c96, 0xe77f, 0x47d0, 0xdd2b, 0x3268, 0x9aaf, 0x1, 0x0);
        gbc.writeMem(0x9c96, { 0xe2 });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe77f, gbc.sp());
        EXPECT(0x9c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9c96));
        EXPECT(0x47, gbc.readMem(0xff2b));
        // E2 025F
        gbc.setState(0xb4b7, 0xe6a0, 0xd900, 0xc163, 0x34e9, 0xdcfe, 0x1, 0x0);
        gbc.writeMem(0xb4b7, { 0xe2 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe6a0, gbc.sp());
        EXPECT(0xb4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb4b7));
        EXPECT(0xd9, gbc.readMem(0xff63));
        // E2 0260
        gbc.setState(0x354a, 0x77c3, 0xa740, 0x1ac8, 0xee08, 0xc0e2, 0x1, 0x1);
        gbc.writeMem(0x354a, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x77c3, gbc.sp());
        EXPECT(0x354b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xffc8));
        // E2 0262
        gbc.setState(0x28bd, 0x590a, 0xcf50, 0xe40c, 0x37d3, 0xebf1, 0x0, 0x1);
        gbc.writeMem(0x28bd, { 0xe2 });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x590a, gbc.sp());
        EXPECT(0x28be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xff0c));
        // E2 0263
        gbc.setState(0x7889, 0xfbd5, 0xf580, 0x647f, 0xf8a2, 0xa431, 0x0, 0x1);
        gbc.writeMem(0x7889, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfbd5, gbc.sp());
        EXPECT(0x788a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xff7f));
        // E2 0264
        gbc.setState(0xdbb9, 0xd758, 0xba10, 0x6156, 0x3a75, 0x93d2, 0x0, 0x1);
        gbc.writeMem(0xdbb9, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd758, gbc.sp());
        EXPECT(0xdbba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdbb9));
        EXPECT(0xba, gbc.readMem(0xff56));
        // E2 0265
        gbc.setState(0x59a8, 0x9831, 0x6150, 0xacba, 0x70c3, 0xa575, 0x0, 0x0);
        gbc.writeMem(0x59a8, { 0xe2 });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9831, gbc.sp());
        EXPECT(0x59a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xffba));
        // E2 0266
        gbc.setState(0x9182, 0xcf8, 0xb5b0, 0xc3da, 0x71ac, 0x5f24, 0x0, 0x1);
        gbc.writeMem(0x9182, { 0xe2 });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcf8, gbc.sp());
        EXPECT(0x9183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9182));
        EXPECT(0xb5, gbc.readMem(0xffda));
        // E2 0267
        gbc.setState(0xb93b, 0xd19e, 0x6bf0, 0xff3b, 0x14be, 0xcce5, 0x0, 0x1);
        gbc.writeMem(0xb93b, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd19e, gbc.sp());
        EXPECT(0xb93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb93b));
        EXPECT(0x6b, gbc.readMem(0xff3b));
        // E2 0268
        gbc.setState(0x38d0, 0x8028, 0x3070, 0xd00f, 0xf23b, 0xcfd4, 0x1, 0x1);
        gbc.writeMem(0x38d0, { 0xe2 });
        gbc.writeMem(0xff0f, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8028, gbc.sp());
        EXPECT(0x38d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xff0f));
        // E2 0269
        gbc.setState(0x38f0, 0xd5b3, 0x66f0, 0x8700, 0xe11f, 0x3d54, 0x0, 0x0);
        gbc.writeMem(0x38f0, { 0xe2 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd5b3, gbc.sp());
        EXPECT(0x38f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xff00));
        // E2 026A
        gbc.setState(0xa651, 0x3716, 0x3d70, 0x417c, 0x2113, 0x5318, 0x1, 0x0);
        gbc.writeMem(0xa651, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3716, gbc.sp());
        EXPECT(0xa652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa651));
        EXPECT(0x3d, gbc.readMem(0xff7c));
        // E2 026B
        gbc.setState(0x7b3, 0xb538, 0x4890, 0x30ec, 0x7df6, 0x77f6, 0x0, 0x0);
        gbc.writeMem(0x7b3, { 0xe2 });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb538, gbc.sp());
        EXPECT(0x7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xffec));
        // E2 026C
        gbc.setState(0xdc0c, 0x8337, 0x49d0, 0x7487, 0xcc06, 0x5918, 0x1, 0x1);
        gbc.writeMem(0xdc0c, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8337, gbc.sp());
        EXPECT(0xdc0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdc0c));
        EXPECT(0x49, gbc.readMem(0xff87));
        // E2 026D
        gbc.setState(0xcc8f, 0xec5e, 0x6a10, 0xcd30, 0xaf98, 0xa42f, 0x1, 0x0);
        gbc.writeMem(0xcc8f, { 0xe2 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xec5e, gbc.sp());
        EXPECT(0xcc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcc8f));
        EXPECT(0x6a, gbc.readMem(0xff30));
        // E2 026E
        gbc.setState(0x4948, 0xdab2, 0x8060, 0x8a44, 0x4184, 0x25e, 0x0, 0x0);
        gbc.writeMem(0x4948, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xdab2, gbc.sp());
        EXPECT(0x4949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xff44));
        // E2 026F
        gbc.setState(0x1391, 0x9e2, 0x54d0, 0xf8c8, 0x50f, 0xc1b4, 0x0, 0x1);
        gbc.writeMem(0x1391, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9e2, gbc.sp());
        EXPECT(0x1392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xffc8));
        // E2 0270
        gbc.setState(0x5e58, 0x9533, 0xdbc0, 0xe454, 0x685e, 0xec9c, 0x1, 0x1);
        gbc.writeMem(0x5e58, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9533, gbc.sp());
        EXPECT(0x5e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xff54));
        // E2 0271
        gbc.setState(0x7e5a, 0x9b3d, 0xe5a0, 0xff15, 0x5834, 0x9b7d, 0x1, 0x1);
        gbc.writeMem(0x7e5a, { 0xe2 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9b3d, gbc.sp());
        EXPECT(0x7e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xff15));
        // E2 0272
        gbc.setState(0x9a3e, 0xcf7b, 0xb580, 0x17e2, 0x4314, 0x2e69, 0x0, 0x1);
        gbc.writeMem(0x9a3e, { 0xe2 });
        gbc.writeMem(0xffe2, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcf7b, gbc.sp());
        EXPECT(0x9a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9a3e));
        EXPECT(0xb5, gbc.readMem(0xffe2));
        // E2 0273
        gbc.setState(0xd9a7, 0x28a8, 0xfe70, 0x8f05, 0x4af6, 0x637, 0x1, 0x0);
        gbc.writeMem(0xd9a7, { 0xe2 });
        gbc.writeMem(0xff05, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x28a8, gbc.sp());
        EXPECT(0xd9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd9a7));
        EXPECT(0xfe, gbc.readMem(0xff05));
        // E2 0274
        gbc.setState(0x19f7, 0xf6f5, 0x2c10, 0x4927, 0xb5ce, 0xa79a, 0x0, 0x1);
        gbc.writeMem(0x19f7, { 0xe2 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf6f5, gbc.sp());
        EXPECT(0x19f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xff27));
        // E2 0276
        gbc.setState(0x36c0, 0xe06d, 0xe5a0, 0x34a2, 0xbf4e, 0x2007, 0x1, 0x0);
        gbc.writeMem(0x36c0, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe06d, gbc.sp());
        EXPECT(0x36c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xffa2));
        // E2 0277
        gbc.setState(0x5d41, 0xfbd8, 0x5cd0, 0xbc8e, 0x654, 0xc196, 0x0, 0x1);
        gbc.writeMem(0x5d41, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfbd8, gbc.sp());
        EXPECT(0x5d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xff8e));
        // E2 0278
        gbc.setState(0x747a, 0xe0ad, 0x8870, 0x44e8, 0x1ac2, 0xc1c9, 0x0, 0x1);
        gbc.writeMem(0x747a, { 0xe2 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe0ad, gbc.sp());
        EXPECT(0x747b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xffe8));
        // E2 0279
        gbc.setState(0xa7db, 0x8e03, 0x7890, 0x3dd9, 0x2566, 0x3f21, 0x0, 0x1);
        gbc.writeMem(0xa7db, { 0xe2 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8e03, gbc.sp());
        EXPECT(0xa7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa7db));
        EXPECT(0x78, gbc.readMem(0xffd9));
        // E2 027A
        gbc.setState(0x38c2, 0xa825, 0xd1a0, 0xd65d, 0x466, 0x4877, 0x0, 0x1);
        gbc.writeMem(0x38c2, { 0xe2 });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa825, gbc.sp());
        EXPECT(0x38c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xff5d));
        // E2 027B
        gbc.setState(0x1a6a, 0x2357, 0xd390, 0xeeb9, 0xd347, 0x292e, 0x0, 0x1);
        gbc.writeMem(0x1a6a, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2357, gbc.sp());
        EXPECT(0x1a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xffb9));
        // E2 027C
        gbc.setState(0xd4c4, 0x44f3, 0xce50, 0xf190, 0x98b, 0x6970, 0x1, 0x1);
        gbc.writeMem(0xd4c4, { 0xe2 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x44f3, gbc.sp());
        EXPECT(0xd4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd4c4));
        EXPECT(0xce, gbc.readMem(0xff90));
        // E2 027D
        gbc.setState(0x394, 0xd00c, 0x2230, 0x246c, 0xae8b, 0xa224, 0x0, 0x1);
        gbc.writeMem(0x394, { 0xe2 });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd00c, gbc.sp());
        EXPECT(0x395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xff6c));
        // E2 027F
        gbc.setState(0x908c, 0xef9e, 0xd980, 0xeda5, 0x566a, 0x10c2, 0x1, 0x0);
        gbc.writeMem(0x908c, { 0xe2 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xef9e, gbc.sp());
        EXPECT(0x908d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x908c));
        EXPECT(0xd9, gbc.readMem(0xffa5));
        // E2 0280
        gbc.setState(0xa1d, 0xafe9, 0x9fc0, 0xec36, 0x1f37, 0x1721, 0x1, 0x0);
        gbc.writeMem(0xa1d, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xafe9, gbc.sp());
        EXPECT(0xa1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xff36));
        // E2 0281
        gbc.setState(0x6535, 0x6943, 0xe560, 0xa8e5, 0x5dff, 0x673f, 0x1, 0x0);
        gbc.writeMem(0x6535, { 0xe2 });
        gbc.writeMem(0xffe5, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6943, gbc.sp());
        EXPECT(0x6536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xffe5));
        // E2 0282
        gbc.setState(0xe533, 0x3d83, 0x3c90, 0xf748, 0xe145, 0x3c82, 0x1, 0x0);
        gbc.writeMem(0xe533, { 0xe2 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3d83, gbc.sp());
        EXPECT(0xe534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe533));
        EXPECT(0x3c, gbc.readMem(0xff48));
        // E2 0283
        gbc.setState(0xc393, 0xeda, 0xd620, 0x4411, 0xefa8, 0xa69e, 0x0, 0x1);
        gbc.writeMem(0xc393, { 0xe2 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xeda, gbc.sp());
        EXPECT(0xc394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc393));
        EXPECT(0xd6, gbc.readMem(0xff11));
        // E2 0284
        gbc.setState(0x1ffe, 0x6261, 0x39d0, 0xfe7d, 0x71e5, 0xb003, 0x1, 0x1);
        gbc.writeMem(0x1ffe, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6261, gbc.sp());
        EXPECT(0x1fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xff7d));
        // E2 0285
        gbc.setState(0x422, 0xad34, 0x1f00, 0x23a1, 0x6a1c, 0xac88, 0x0, 0x1);
        gbc.writeMem(0x422, { 0xe2 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xad34, gbc.sp());
        EXPECT(0x423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xffa1));
        // E2 0286
        gbc.setState(0xe6a8, 0x4908, 0xbf90, 0x9ed1, 0x8aa8, 0x5edb, 0x0, 0x1);
        gbc.writeMem(0xe6a8, { 0xe2 });
        gbc.writeMem(0xffd1, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4908, gbc.sp());
        EXPECT(0xe6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe6a8));
        EXPECT(0xbf, gbc.readMem(0xffd1));
        // E2 0287
        gbc.setState(0xb811, 0x31c2, 0x43d0, 0xe3da, 0x170, 0xb6bf, 0x1, 0x0);
        gbc.writeMem(0xb811, { 0xe2 });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x31c2, gbc.sp());
        EXPECT(0xb812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb811));
        EXPECT(0x43, gbc.readMem(0xffda));
        // E2 0288
        gbc.setState(0x94fe, 0xb8a7, 0xc760, 0x2b1, 0xa3f4, 0x7c41, 0x1, 0x1);
        gbc.writeMem(0x94fe, { 0xe2 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb8a7, gbc.sp());
        EXPECT(0x94ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x94fe));
        EXPECT(0xc7, gbc.readMem(0xffb1));
        // E2 0289
        gbc.setState(0x7f7e, 0xb64d, 0x8e0, 0xe6f1, 0x15c, 0xc29, 0x1, 0x0);
        gbc.writeMem(0x7f7e, { 0xe2 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb64d, gbc.sp());
        EXPECT(0x7f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xfff1));
        // E2 028B
        gbc.setState(0x2172, 0xe2ab, 0x5310, 0x2e9f, 0xa54d, 0x1fa9, 0x1, 0x0);
        gbc.writeMem(0x2172, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe2ab, gbc.sp());
        EXPECT(0x2173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xff9f));
        // E2 028C
        gbc.setState(0xe875, 0xd555, 0xb0d0, 0xe96b, 0x4c48, 0xe39e, 0x0, 0x0);
        gbc.writeMem(0xe875, { 0xe2 });
        gbc.writeMem(0xff6b, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd555, gbc.sp());
        EXPECT(0xe876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe875));
        EXPECT(0xb0, gbc.readMem(0xff6b));
        // E2 028D
        gbc.setState(0x446b, 0xc0e8, 0xb830, 0x2120, 0x6e8c, 0x9320, 0x0, 0x0);
        gbc.writeMem(0x446b, { 0xe2 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0x446c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xff20));
        // E2 028E
        gbc.setState(0x8b1d, 0xde59, 0xbaa0, 0x2045, 0xd5f3, 0x4b54, 0x1, 0x0);
        gbc.writeMem(0x8b1d, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xde59, gbc.sp());
        EXPECT(0x8b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8b1d));
        EXPECT(0xba, gbc.readMem(0xff45));
        // E2 028F
        gbc.setState(0xabeb, 0x8c7c, 0xbc30, 0xa81e, 0xfd67, 0xcc5e, 0x1, 0x0);
        gbc.writeMem(0xabeb, { 0xe2 });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8c7c, gbc.sp());
        EXPECT(0xabec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xabeb));
        EXPECT(0xbc, gbc.readMem(0xff1e));
        // E2 0290
        gbc.setState(0x609c, 0xd573, 0xf80, 0xa4d2, 0x536a, 0xce32, 0x1, 0x0);
        gbc.writeMem(0x609c, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd573, gbc.sp());
        EXPECT(0x609d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xffd2));
        // E2 0291
        gbc.setState(0xb6a9, 0xbdf6, 0x2b00, 0x8430, 0xb6f2, 0x5c78, 0x0, 0x0);
        gbc.writeMem(0xb6a9, { 0xe2 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbdf6, gbc.sp());
        EXPECT(0xb6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb6a9));
        EXPECT(0x2b, gbc.readMem(0xff30));
        // E2 0292
        gbc.setState(0xe1cc, 0x96f3, 0x88f0, 0xcd67, 0x4ca, 0xe9c5, 0x1, 0x1);
        gbc.writeMem(0xe1cc, { 0xe2 });
        gbc.writeMem(0xff67, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x96f3, gbc.sp());
        EXPECT(0xe1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe1cc));
        EXPECT(0x88, gbc.readMem(0xff67));
        // E2 0293
        gbc.setState(0xb5aa, 0x22ad, 0xd340, 0xa368, 0xc2f3, 0x50cb, 0x1, 0x0);
        gbc.writeMem(0xb5aa, { 0xe2 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x22ad, gbc.sp());
        EXPECT(0xb5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb5aa));
        EXPECT(0xd3, gbc.readMem(0xff68));
        // E2 0294
        gbc.setState(0x5593, 0xe916, 0x8e80, 0x2aea, 0x2c1c, 0x2d5f, 0x1, 0x1);
        gbc.writeMem(0x5593, { 0xe2 });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe916, gbc.sp());
        EXPECT(0x5594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xffea));
        // E2 0295
        gbc.setState(0x43d9, 0xf22, 0x48f0, 0xc53b, 0x325c, 0x2614, 0x0, 0x0);
        gbc.writeMem(0x43d9, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf22, gbc.sp());
        EXPECT(0x43da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xff3b));
        // E2 0296
        gbc.setState(0xcfaa, 0x18c0, 0x2ba0, 0x1819, 0xda91, 0x60e6, 0x1, 0x1);
        gbc.writeMem(0xcfaa, { 0xe2 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x18c0, gbc.sp());
        EXPECT(0xcfab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcfaa));
        EXPECT(0x2b, gbc.readMem(0xff19));
        // E2 0297
        gbc.setState(0x7322, 0x2ff8, 0x5f60, 0x1528, 0x2cdb, 0xad0d, 0x1, 0x1);
        gbc.writeMem(0x7322, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2ff8, gbc.sp());
        EXPECT(0x7323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xff28));
        // E2 0298
        gbc.setState(0x80f9, 0x4b24, 0x4930, 0xa229, 0xf057, 0x2a41, 0x0, 0x1);
        gbc.writeMem(0x80f9, { 0xe2 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4b24, gbc.sp());
        EXPECT(0x80fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x80f9));
        EXPECT(0x49, gbc.readMem(0xff29));
        // E2 0299
        gbc.setState(0xaf3b, 0x3b95, 0x47b0, 0xbbd, 0x132e, 0x4422, 0x0, 0x1);
        gbc.writeMem(0xaf3b, { 0xe2 });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3b95, gbc.sp());
        EXPECT(0xaf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xaf3b));
        EXPECT(0x47, gbc.readMem(0xffbd));
        // E2 029A
        gbc.setState(0x6a1f, 0x4463, 0x80a0, 0x8f04, 0x677b, 0x78f0, 0x1, 0x1);
        gbc.writeMem(0x6a1f, { 0xe2 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4463, gbc.sp());
        EXPECT(0x6a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xff04));
        // E2 029B
        gbc.setState(0x495b, 0x8a22, 0xc810, 0x9246, 0x3abc, 0x40ad, 0x1, 0x1);
        gbc.writeMem(0x495b, { 0xe2 });
        gbc.writeMem(0xff46, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8a22, gbc.sp());
        EXPECT(0x495c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xff46));
        // E2 029C
        gbc.setState(0x620b, 0x7dba, 0x3c30, 0xda52, 0xe76d, 0x1e20, 0x1, 0x0);
        gbc.writeMem(0x620b, { 0xe2 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7dba, gbc.sp());
        EXPECT(0x620c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xff52));
        // E2 029D
        gbc.setState(0x42f, 0xef62, 0x2450, 0xee15, 0xfd25, 0x4996, 0x0, 0x1);
        gbc.writeMem(0x42f, { 0xe2 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xef62, gbc.sp());
        EXPECT(0x430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xff15));
        // E2 029E
        gbc.setState(0x3d4b, 0x5d26, 0x1120, 0x8847, 0x2731, 0x20f3, 0x0, 0x0);
        gbc.writeMem(0x3d4b, { 0xe2 });
        gbc.writeMem(0xff47, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5d26, gbc.sp());
        EXPECT(0x3d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xff47));
        // E2 029F
        gbc.setState(0xa489, 0xe024, 0x6660, 0xbf1c, 0x1956, 0x1706, 0x0, 0x0);
        gbc.writeMem(0xa489, { 0xe2 });
        gbc.writeMem(0xff1c, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe024, gbc.sp());
        EXPECT(0xa48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa489));
        EXPECT(0x66, gbc.readMem(0xff1c));
        // E2 02A0
        gbc.setState(0x8a46, 0x981b, 0xcc00, 0x605d, 0x13b3, 0xb6a2, 0x0, 0x1);
        gbc.writeMem(0x8a46, { 0xe2 });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x981b, gbc.sp());
        EXPECT(0x8a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8a46));
        EXPECT(0xcc, gbc.readMem(0xff5d));
        // E2 02A1
        gbc.setState(0xb595, 0x4010, 0x35e0, 0xed73, 0x397, 0x4847, 0x0, 0x0);
        gbc.writeMem(0xb595, { 0xe2 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4010, gbc.sp());
        EXPECT(0xb596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb595));
        EXPECT(0x35, gbc.readMem(0xff73));
        // E2 02A2
        gbc.setState(0x7d5e, 0x5d71, 0xd6a0, 0x823b, 0xb63d, 0xab8b, 0x1, 0x0);
        gbc.writeMem(0x7d5e, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5d71, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xff3b));
        // E2 02A3
        gbc.setState(0x9464, 0xd4d5, 0x1bf0, 0x6a, 0xf992, 0xff95, 0x1, 0x0);
        gbc.writeMem(0x9464, { 0xe2 });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd4d5, gbc.sp());
        EXPECT(0x9465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9464));
        EXPECT(0x1b, gbc.readMem(0xff6a));
        // E2 02A4
        gbc.setState(0xe069, 0x6ff0, 0x3af0, 0xc562, 0xae03, 0x2054, 0x1, 0x1);
        gbc.writeMem(0xe069, { 0xe2 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6ff0, gbc.sp());
        EXPECT(0xe06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe069));
        EXPECT(0x3a, gbc.readMem(0xff62));
        // E2 02A5
        gbc.setState(0xef55, 0x2d65, 0x3dd0, 0x4ba2, 0xd8ac, 0xf5cd, 0x0, 0x1);
        gbc.writeMem(0xef55, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2d65, gbc.sp());
        EXPECT(0xef56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xef55));
        EXPECT(0x3d, gbc.readMem(0xffa2));
        // E2 02A6
        gbc.setState(0x1546, 0x5d2b, 0xc940, 0x3832, 0x43b5, 0x1dee, 0x1, 0x1);
        gbc.writeMem(0x1546, { 0xe2 });
        gbc.writeMem(0xff32, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5d2b, gbc.sp());
        EXPECT(0x1547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xff32));
        // E2 02A7
        gbc.setState(0x35a3, 0x462e, 0xbe80, 0x6e0, 0xa2da, 0x2714, 0x1, 0x1);
        gbc.writeMem(0x35a3, { 0xe2 });
        gbc.writeMem(0xffe0, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x462e, gbc.sp());
        EXPECT(0x35a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xffe0));
        // E2 02A8
        gbc.setState(0x5be0, 0xa796, 0x2aa0, 0xa00a, 0x911, 0x3dc7, 0x0, 0x1);
        gbc.writeMem(0x5be0, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa796, gbc.sp());
        EXPECT(0x5be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xff0a));
        // E2 02A9
        gbc.setState(0xc5aa, 0xb1b1, 0x130, 0xac87, 0xcccd, 0xf33c, 0x1, 0x0);
        gbc.writeMem(0xc5aa, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb1b1, gbc.sp());
        EXPECT(0xc5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc5aa));
        EXPECT(0x1, gbc.readMem(0xff87));
        // E2 02AA
        gbc.setState(0x7d88, 0x4593, 0x7c00, 0xc093, 0x9a6, 0xe707, 0x0, 0x0);
        gbc.writeMem(0x7d88, { 0xe2 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4593, gbc.sp());
        EXPECT(0x7d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xff93));
        // E2 02AB
        gbc.setState(0x5580, 0xf320, 0x3d20, 0xab7f, 0xe5, 0x5104, 0x1, 0x1);
        gbc.writeMem(0x5580, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf320, gbc.sp());
        EXPECT(0x5581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xff7f));
        // E2 02AC
        gbc.setState(0x1b09, 0x43f6, 0xc3e0, 0x2fbe, 0x5f1b, 0xa7bb, 0x0, 0x1);
        gbc.writeMem(0x1b09, { 0xe2 });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x43f6, gbc.sp());
        EXPECT(0x1b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xffbe));
        // E2 02AD
        gbc.setState(0xe90, 0xc31e, 0xec60, 0xeb92, 0x71ba, 0x5166, 0x0, 0x1);
        gbc.writeMem(0xe90, { 0xe2 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc31e, gbc.sp());
        EXPECT(0xe91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xff92));
        // E2 02AE
        gbc.setState(0xed9a, 0x91d8, 0xcf80, 0x631f, 0xccfd, 0x9887, 0x0, 0x0);
        gbc.writeMem(0xed9a, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x91d8, gbc.sp());
        EXPECT(0xed9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xed9a));
        EXPECT(0xcf, gbc.readMem(0xff1f));
        // E2 02AF
        gbc.setState(0x4c44, 0x881e, 0x9da0, 0xce2d, 0x8132, 0x25a0, 0x1, 0x1);
        gbc.writeMem(0x4c44, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x881e, gbc.sp());
        EXPECT(0x4c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xff2d));
        // E2 02B1
        gbc.setState(0x5671, 0x54b0, 0x8a20, 0x6687, 0x3a19, 0x2d81, 0x1, 0x1);
        gbc.writeMem(0x5671, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x54b0, gbc.sp());
        EXPECT(0x5672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xff87));
        // E2 02B2
        gbc.setState(0xcf5, 0xac86, 0xa370, 0xbdb8, 0x4261, 0x2555, 0x1, 0x1);
        gbc.writeMem(0xcf5, { 0xe2 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xac86, gbc.sp());
        EXPECT(0xcf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xffb8));
        // E2 02B3
        gbc.setState(0x24b0, 0x1833, 0x6f60, 0xe14b, 0x9fda, 0xb7e4, 0x0, 0x1);
        gbc.writeMem(0x24b0, { 0xe2 });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1833, gbc.sp());
        EXPECT(0x24b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xff4b));
        // E2 02B4
        gbc.setState(0xdd1c, 0xee8, 0xe10, 0x169a, 0x9909, 0x6da6, 0x1, 0x1);
        gbc.writeMem(0xdd1c, { 0xe2 });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xee8, gbc.sp());
        EXPECT(0xdd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdd1c));
        EXPECT(0xe, gbc.readMem(0xff9a));
        // E2 02B5
        gbc.setState(0x6775, 0x704e, 0xb480, 0xdc46, 0x721a, 0x999b, 0x0, 0x1);
        gbc.writeMem(0x6775, { 0xe2 });
        gbc.writeMem(0xff46, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x704e, gbc.sp());
        EXPECT(0x6776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xff46));
        // E2 02B6
        gbc.setState(0x5726, 0x1d0f, 0x5fb0, 0xdcf8, 0xaee7, 0xc3cc, 0x1, 0x1);
        gbc.writeMem(0x5726, { 0xe2 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1d0f, gbc.sp());
        EXPECT(0x5727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xfff8));
        // E2 02B7
        gbc.setState(0x6e39, 0x6397, 0xbfb0, 0xd97d, 0x3289, 0x9fba, 0x0, 0x0);
        gbc.writeMem(0x6e39, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6397, gbc.sp());
        EXPECT(0x6e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xff7d));
        // E2 02B9
        gbc.setState(0x6b84, 0xf69b, 0xfc30, 0xf987, 0x7f9f, 0x8b76, 0x1, 0x1);
        gbc.writeMem(0x6b84, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf69b, gbc.sp());
        EXPECT(0x6b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xff87));
        // E2 02BA
        gbc.setState(0x5a4c, 0x4d0c, 0x2aa0, 0xf32f, 0x1746, 0xd224, 0x0, 0x1);
        gbc.writeMem(0x5a4c, { 0xe2 });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4d0c, gbc.sp());
        EXPECT(0x5a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xff2f));
        // E2 02BB
        gbc.setState(0xe284, 0x79bb, 0xec00, 0x2866, 0x69d1, 0x533d, 0x0, 0x1);
        gbc.writeMem(0xe284, { 0xe2 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x79bb, gbc.sp());
        EXPECT(0xe285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe284));
        EXPECT(0xec, gbc.readMem(0xff66));
        // E2 02BC
        gbc.setState(0x5b78, 0x9bf3, 0x7e10, 0x79ab, 0xcf53, 0x939c, 0x1, 0x0);
        gbc.writeMem(0x5b78, { 0xe2 });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9bf3, gbc.sp());
        EXPECT(0x5b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xffab));
        // E2 02BD
        gbc.setState(0x9332, 0x74e3, 0xa830, 0x957f, 0x3a43, 0x9e09, 0x1, 0x1);
        gbc.writeMem(0x9332, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x74e3, gbc.sp());
        EXPECT(0x9333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9332));
        EXPECT(0xa8, gbc.readMem(0xff7f));
        // E2 02BE
        gbc.setState(0x7c9a, 0x2183, 0x2400, 0xa0b2, 0x3e2a, 0x8883, 0x1, 0x0);
        gbc.writeMem(0x7c9a, { 0xe2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2183, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xffb2));
        // E2 02BF
        gbc.setState(0xb05f, 0xe412, 0x7720, 0x7f52, 0x137b, 0x9825, 0x0, 0x1);
        gbc.writeMem(0xb05f, { 0xe2 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe412, gbc.sp());
        EXPECT(0xb060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb05f));
        EXPECT(0x77, gbc.readMem(0xff52));
        // E2 02C0
        gbc.setState(0x2ca, 0xfd68, 0xdea0, 0x7fbb, 0x204f, 0x4ac, 0x0, 0x1);
        gbc.writeMem(0x2ca, { 0xe2 });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfd68, gbc.sp());
        EXPECT(0x2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xffbb));
        // E2 02C1
        gbc.setState(0xc7ba, 0x8483, 0xa910, 0x13a1, 0xc190, 0x1d1f, 0x0, 0x0);
        gbc.writeMem(0xc7ba, { 0xe2 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8483, gbc.sp());
        EXPECT(0xc7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc7ba));
        EXPECT(0xa9, gbc.readMem(0xffa1));
        // E2 02C2
        gbc.setState(0x35de, 0xe236, 0x2500, 0x6aac, 0xe41c, 0xd51a, 0x1, 0x1);
        gbc.writeMem(0x35de, { 0xe2 });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe236, gbc.sp());
        EXPECT(0x35df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xffac));
        // E2 02C3
        gbc.setState(0x12d9, 0x9388, 0x8ee0, 0xa40a, 0xa288, 0x681a, 0x1, 0x1);
        gbc.writeMem(0x12d9, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9388, gbc.sp());
        EXPECT(0x12da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xff0a));
        // E2 02C4
        gbc.setState(0x2ce, 0x2fc0, 0x4fb0, 0xa349, 0xf05e, 0x5117, 0x0, 0x1);
        gbc.writeMem(0x2ce, { 0xe2 });
        gbc.writeMem(0xff49, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2fc0, gbc.sp());
        EXPECT(0x2cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xff49));
        // E2 02C5
        gbc.setState(0x7fb, 0x7d63, 0xea00, 0x10b0, 0xb6f1, 0x6c4c, 0x1, 0x0);
        gbc.writeMem(0x7fb, { 0xe2 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7d63, gbc.sp());
        EXPECT(0x7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xffb0));
        // E2 02C6
        gbc.setState(0xc2be, 0xe0ba, 0x4ec0, 0x7f8a, 0xaf54, 0xe835, 0x1, 0x1);
        gbc.writeMem(0xc2be, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe0ba, gbc.sp());
        EXPECT(0xc2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc2be));
        EXPECT(0x4e, gbc.readMem(0xff8a));
        // E2 02C7
        gbc.setState(0xd1b0, 0x1229, 0x9a80, 0xf491, 0x5794, 0x56b7, 0x1, 0x0);
        gbc.writeMem(0xd1b0, { 0xe2 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1229, gbc.sp());
        EXPECT(0xd1b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd1b0));
        EXPECT(0x9a, gbc.readMem(0xff91));
        // E2 02C8
        gbc.setState(0x7ba4, 0x811d, 0x150, 0x2af4, 0x96ae, 0x43b, 0x1, 0x1);
        gbc.writeMem(0x7ba4, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x811d, gbc.sp());
        EXPECT(0x7ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xfff4));
        // E2 02C9
        gbc.setState(0x8308, 0xb822, 0xc800, 0x7721, 0xe772, 0x7a7b, 0x0, 0x1);
        gbc.writeMem(0x8308, { 0xe2 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb822, gbc.sp());
        EXPECT(0x8309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8308));
        EXPECT(0xc8, gbc.readMem(0xff21));
        // E2 02CA
        gbc.setState(0xc00, 0x3899, 0x1f70, 0x4c5b, 0x78c3, 0xc9e0, 0x1, 0x1);
        gbc.writeMem(0xc00, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3899, gbc.sp());
        EXPECT(0xc01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xff5b));
        // E2 02CB
        gbc.setState(0xa1bb, 0x35b3, 0x9ae0, 0x748a, 0x411, 0xed64, 0x0, 0x1);
        gbc.writeMem(0xa1bb, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x35b3, gbc.sp());
        EXPECT(0xa1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa1bb));
        EXPECT(0x9a, gbc.readMem(0xff8a));
        // E2 02CC
        gbc.setState(0xde00, 0x43eb, 0xcf10, 0x9592, 0x56bb, 0x983d, 0x0, 0x1);
        gbc.writeMem(0xde00, { 0xe2 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x43eb, gbc.sp());
        EXPECT(0xde01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xde00));
        EXPECT(0xcf, gbc.readMem(0xff92));
        // E2 02CD
        gbc.setState(0xd262, 0x509d, 0x2e0, 0xb389, 0x96dd, 0xa93e, 0x0, 0x0);
        gbc.writeMem(0xd262, { 0xe2 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x509d, gbc.sp());
        EXPECT(0xd263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd262));
        EXPECT(0x2, gbc.readMem(0xff89));
        // E2 02CE
        gbc.setState(0xaffd, 0x7ac4, 0x1750, 0x85a2, 0x6638, 0x72b4, 0x1, 0x0);
        gbc.writeMem(0xaffd, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7ac4, gbc.sp());
        EXPECT(0xaffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xaffd));
        EXPECT(0x17, gbc.readMem(0xffa2));
        // E2 02CF
        gbc.setState(0x1a0b, 0x6c3, 0x5d40, 0x2bb8, 0x65ac, 0x8630, 0x1, 0x1);
        gbc.writeMem(0x1a0b, { 0xe2 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6c3, gbc.sp());
        EXPECT(0x1a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xffb8));
        // E2 02D0
        gbc.setState(0xdfa8, 0xc96b, 0x7b40, 0x8734, 0x491, 0x2786, 0x1, 0x0);
        gbc.writeMem(0xdfa8, { 0xe2 });
        gbc.writeMem(0xff34, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc96b, gbc.sp());
        EXPECT(0xdfa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdfa8));
        EXPECT(0x7b, gbc.readMem(0xff34));
        // E2 02D1
        gbc.setState(0xb383, 0x28b2, 0xd260, 0x7d03, 0xce92, 0x91a1, 0x0, 0x0);
        gbc.writeMem(0xb383, { 0xe2 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x28b2, gbc.sp());
        EXPECT(0xb384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb383));
        EXPECT(0xd2, gbc.readMem(0xff03));
        // E2 02D2
        gbc.setState(0x5cc, 0x2db6, 0x65c0, 0xabc3, 0x632e, 0x8f7f, 0x0, 0x1);
        gbc.writeMem(0x5cc, { 0xe2 });
        gbc.writeMem(0xffc3, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2db6, gbc.sp());
        EXPECT(0x5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xffc3));
        // E2 02D3
        gbc.setState(0x170b, 0xaadd, 0x6210, 0xc70d, 0xdd50, 0x600d, 0x0, 0x0);
        gbc.writeMem(0x170b, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaadd, gbc.sp());
        EXPECT(0x170c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xff0d));
        // E2 02D4
        gbc.setState(0x9f59, 0x9cfa, 0x630, 0x7f92, 0x8ae2, 0xea83, 0x0, 0x0);
        gbc.writeMem(0x9f59, { 0xe2 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9cfa, gbc.sp());
        EXPECT(0x9f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9f59));
        EXPECT(0x6, gbc.readMem(0xff92));
        // E2 02D5
        gbc.setState(0x227b, 0x2a46, 0x3d70, 0x1389, 0x5ed3, 0x53dd, 0x0, 0x0);
        gbc.writeMem(0x227b, { 0xe2 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2a46, gbc.sp());
        EXPECT(0x227c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xff89));
        // E2 02D6
        gbc.setState(0x228b, 0xf645, 0xd8d0, 0x8d9e, 0x37c5, 0x7710, 0x0, 0x0);
        gbc.writeMem(0x228b, { 0xe2 });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf645, gbc.sp());
        EXPECT(0x228c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xff9e));
        // E2 02D7
        gbc.setState(0x6a6d, 0xc927, 0x56a0, 0x1e37, 0xcb8b, 0x5181, 0x0, 0x0);
        gbc.writeMem(0x6a6d, { 0xe2 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc927, gbc.sp());
        EXPECT(0x6a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xff37));
        // E2 02D8
        gbc.setState(0x5020, 0x9268, 0x6d10, 0x4ee3, 0xca01, 0x75f2, 0x0, 0x0);
        gbc.writeMem(0x5020, { 0xe2 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9268, gbc.sp());
        EXPECT(0x5021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xffe3));
        // E2 02D9
        gbc.setState(0x52ab, 0xdeda, 0x4070, 0xbcc4, 0x5f1, 0x155a, 0x1, 0x0);
        gbc.writeMem(0x52ab, { 0xe2 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdeda, gbc.sp());
        EXPECT(0x52ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xffc4));
        // E2 02DB
        gbc.setState(0xb4c, 0x7473, 0x5c30, 0xc742, 0x3613, 0xead9, 0x0, 0x1);
        gbc.writeMem(0xb4c, { 0xe2 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7473, gbc.sp());
        EXPECT(0xb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xff42));
        // E2 02DC
        gbc.setState(0x98dd, 0xce7d, 0xa60, 0x9cc3, 0x462d, 0x772c, 0x1, 0x1);
        gbc.writeMem(0x98dd, { 0xe2 });
        gbc.writeMem(0xffc3, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xce7d, gbc.sp());
        EXPECT(0x98de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x98dd));
        EXPECT(0xa, gbc.readMem(0xffc3));
        // E2 02DD
        gbc.setState(0x4960, 0x6adb, 0x4420, 0x566d, 0xaf95, 0x7ce5, 0x1, 0x1);
        gbc.writeMem(0x4960, { 0xe2 });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6adb, gbc.sp());
        EXPECT(0x4961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xff6d));
        // E2 02DE
        gbc.setState(0xa55b, 0x376a, 0xca80, 0x8a3c, 0xb1d, 0x8e38, 0x1, 0x1);
        gbc.writeMem(0xa55b, { 0xe2 });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x376a, gbc.sp());
        EXPECT(0xa55c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa55b));
        EXPECT(0xca, gbc.readMem(0xff3c));
        // E2 02DF
        gbc.setState(0x591d, 0xc22b, 0xa760, 0x3757, 0x5308, 0x770e, 0x1, 0x0);
        gbc.writeMem(0x591d, { 0xe2 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc22b, gbc.sp());
        EXPECT(0x591e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xff57));
        // E2 02E0
        gbc.setState(0x8f0e, 0xd07b, 0xc4d0, 0xeb6a, 0x6cca, 0xad3, 0x1, 0x1);
        gbc.writeMem(0x8f0e, { 0xe2 });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd07b, gbc.sp());
        EXPECT(0x8f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8f0e));
        EXPECT(0xc4, gbc.readMem(0xff6a));
        // E2 02E1
        gbc.setState(0x923d, 0x64a9, 0x8c40, 0x9226, 0x7e74, 0x1b74, 0x0, 0x1);
        gbc.writeMem(0x923d, { 0xe2 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x64a9, gbc.sp());
        EXPECT(0x923e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x923d));
        EXPECT(0x8c, gbc.readMem(0xff26));
        // E2 02E2
        gbc.setState(0x2222, 0xdafb, 0xe790, 0xe672, 0x19c0, 0xa67a, 0x0, 0x1);
        gbc.writeMem(0x2222, { 0xe2 });
        gbc.writeMem(0xff72, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdafb, gbc.sp());
        EXPECT(0x2223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xff72));
        // E2 02E3
        gbc.setState(0x18cb, 0xe57c, 0xdea0, 0x5cda, 0x1afb, 0x1c53, 0x0, 0x0);
        gbc.writeMem(0x18cb, { 0xe2 });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe57c, gbc.sp());
        EXPECT(0x18cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xffda));
        // E2 02E4
        gbc.setState(0x89de, 0xe81b, 0x1b20, 0xb831, 0x7d91, 0x89ea, 0x0, 0x1);
        gbc.writeMem(0x89de, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe81b, gbc.sp());
        EXPECT(0x89df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x89de));
        EXPECT(0x1b, gbc.readMem(0xff31));
        // E2 02E5
        gbc.setState(0x8fb7, 0xcf8c, 0x6dd0, 0x86a2, 0x8bcf, 0xd23, 0x1, 0x0);
        gbc.writeMem(0x8fb7, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcf8c, gbc.sp());
        EXPECT(0x8fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8fb7));
        EXPECT(0x6d, gbc.readMem(0xffa2));
        // E2 02E6
        gbc.setState(0x2384, 0x4e42, 0x7c30, 0x8abf, 0x1dbf, 0xdc60, 0x0, 0x0);
        gbc.writeMem(0x2384, { 0xe2 });
        gbc.writeMem(0xffbf, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4e42, gbc.sp());
        EXPECT(0x2385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xffbf));
        // E2 02E7
        gbc.setState(0xde9, 0xf9b, 0x3e50, 0x1bf5, 0x20af, 0x8378, 0x1, 0x1);
        gbc.writeMem(0xde9, { 0xe2 });
        gbc.writeMem(0xfff5, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf9b, gbc.sp());
        EXPECT(0xdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xfff5));
        // E2 02E8
        gbc.setState(0x159c, 0x8f09, 0x97e0, 0xbc02, 0x2b36, 0x72f9, 0x0, 0x1);
        gbc.writeMem(0x159c, { 0xe2 });
        gbc.writeMem(0xff02, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8f09, gbc.sp());
        EXPECT(0x159d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xff02));
        // E2 02E9
        gbc.setState(0x4163, 0x8380, 0x8da0, 0x72bb, 0x1b4e, 0x9dec, 0x1, 0x1);
        gbc.writeMem(0x4163, { 0xe2 });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8380, gbc.sp());
        EXPECT(0x4164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xffbb));
        // E2 02EA
        gbc.setState(0x3b37, 0x8b57, 0x3b50, 0x26e3, 0x1ba9, 0x619a, 0x0, 0x0);
        gbc.writeMem(0x3b37, { 0xe2 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8b57, gbc.sp());
        EXPECT(0x3b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xffe3));
        // E2 02EC
        gbc.setState(0x33e5, 0x21a1, 0x7650, 0x4e54, 0xeca1, 0x33c7, 0x0, 0x0);
        gbc.writeMem(0x33e5, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x21a1, gbc.sp());
        EXPECT(0x33e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff54));
        // E2 02ED
        gbc.setState(0x2b20, 0x9842, 0x3da0, 0x8e69, 0xb27a, 0x4144, 0x0, 0x1);
        gbc.writeMem(0x2b20, { 0xe2 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9842, gbc.sp());
        EXPECT(0x2b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xff69));
        // E2 02EE
        gbc.setState(0xe9e, 0x3f12, 0xb540, 0x3413, 0x8c49, 0x415c, 0x0, 0x1);
        gbc.writeMem(0xe9e, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0xe9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xff13));
        // E2 02EF
        gbc.setState(0x18c8, 0x146e, 0x4ac0, 0x47ce, 0xd12b, 0x9c97, 0x1, 0x0);
        gbc.writeMem(0x18c8, { 0xe2 });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x146e, gbc.sp());
        EXPECT(0x18c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xffce));
        // E2 02F0
        gbc.setState(0xa1f1, 0xf60c, 0x4990, 0x8a40, 0xb94, 0x6dc9, 0x1, 0x1);
        gbc.writeMem(0xa1f1, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf60c, gbc.sp());
        EXPECT(0xa1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa1f1));
        EXPECT(0x49, gbc.readMem(0xff40));
        // E2 02F1
        gbc.setState(0x55e9, 0xbede, 0x4730, 0xc240, 0xb0f7, 0xa62c, 0x1, 0x1);
        gbc.writeMem(0x55e9, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbede, gbc.sp());
        EXPECT(0x55ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xff40));
        // E2 02F2
        gbc.setState(0xd124, 0xb5eb, 0xdec0, 0xb936, 0xb620, 0x9588, 0x0, 0x0);
        gbc.writeMem(0xd124, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb5eb, gbc.sp());
        EXPECT(0xd125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd124));
        EXPECT(0xde, gbc.readMem(0xff36));
        // E2 02F3
        gbc.setState(0xad87, 0x7bd5, 0x6e90, 0x7ff, 0xb53, 0x6be6, 0x0, 0x1);
        gbc.writeMem(0xad87, { 0xe2 });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7bd5, gbc.sp());
        EXPECT(0xad88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xad87));
        EXPECT(0x6e, gbc.readMem(0xffff));
        // E2 02F4
        gbc.setState(0x4e12, 0xd03c, 0xfc20, 0x78f7, 0x9f5d, 0x7f, 0x0, 0x1);
        gbc.writeMem(0x4e12, { 0xe2 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd03c, gbc.sp());
        EXPECT(0x4e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xfff7));
        // E2 02F5
        gbc.setState(0xdd7, 0x2e36, 0x3c50, 0xe0cb, 0xc8bb, 0xced3, 0x1, 0x1);
        gbc.writeMem(0xdd7, { 0xe2 });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2e36, gbc.sp());
        EXPECT(0xdd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xffcb));
        // E2 02F6
        gbc.setState(0xd23c, 0x1f1a, 0xdb50, 0xc027, 0x5d99, 0xc0fe, 0x0, 0x1);
        gbc.writeMem(0xd23c, { 0xe2 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1f1a, gbc.sp());
        EXPECT(0xd23d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd23c));
        EXPECT(0xdb, gbc.readMem(0xff27));
        // E2 02F7
        gbc.setState(0x87b5, 0x3669, 0x2d30, 0xf4c4, 0x14a2, 0x34df, 0x0, 0x0);
        gbc.writeMem(0x87b5, { 0xe2 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3669, gbc.sp());
        EXPECT(0x87b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x87b5));
        EXPECT(0x2d, gbc.readMem(0xffc4));
        // E2 02F8
        gbc.setState(0xba99, 0x7a39, 0xc9e0, 0x537e, 0x3eb4, 0x9183, 0x0, 0x0);
        gbc.writeMem(0xba99, { 0xe2 });
        gbc.writeMem(0xff7e, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7a39, gbc.sp());
        EXPECT(0xba9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xba99));
        EXPECT(0xc9, gbc.readMem(0xff7e));
        // E2 02F9
        gbc.setState(0x46d8, 0xf155, 0x6dd0, 0xf97a, 0xa97f, 0xc849, 0x0, 0x1);
        gbc.writeMem(0x46d8, { 0xe2 });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf155, gbc.sp());
        EXPECT(0x46d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xff7a));
        // E2 02FA
        gbc.setState(0xc72, 0x9bb1, 0x90a0, 0x7b62, 0x17c2, 0xa975, 0x0, 0x1);
        gbc.writeMem(0xc72, { 0xe2 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9bb1, gbc.sp());
        EXPECT(0xc73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xff62));
        // E2 02FB
        gbc.setState(0x5864, 0xef30, 0xf8b0, 0xbec7, 0x96eb, 0xf5c1, 0x0, 0x0);
        gbc.writeMem(0x5864, { 0xe2 });
        gbc.writeMem(0xffc7, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xef30, gbc.sp());
        EXPECT(0x5865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xffc7));
        // E2 02FC
        gbc.setState(0xbfaf, 0x9926, 0xadf0, 0x1580, 0xfee7, 0xdacd, 0x0, 0x1);
        gbc.writeMem(0xbfaf, { 0xe2 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9926, gbc.sp());
        EXPECT(0xbfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbfaf));
        EXPECT(0xad, gbc.readMem(0xff80));
        // E2 02FD
        gbc.setState(0xf63, 0x88ea, 0xbc30, 0x3898, 0xa574, 0x2120, 0x1, 0x1);
        gbc.writeMem(0xf63, { 0xe2 });
        gbc.writeMem(0xff98, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x88ea, gbc.sp());
        EXPECT(0xf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xff98));
        // E2 02FE
        gbc.setState(0x1b75, 0x431e, 0x6570, 0x8ff7, 0x6fce, 0x1823, 0x0, 0x1);
        gbc.writeMem(0x1b75, { 0xe2 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x431e, gbc.sp());
        EXPECT(0x1b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xfff7));
        // E2 02FF
        gbc.setState(0x326b, 0x94aa, 0x30, 0xd1db, 0x97dc, 0x43d, 0x0, 0x0);
        gbc.writeMem(0x326b, { 0xe2 });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x94aa, gbc.sp());
        EXPECT(0x326c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xffdb));
        // E2 0300
        gbc.setState(0xc8a9, 0xbd4b, 0x5120, 0xbcc2, 0x5943, 0x7c72, 0x1, 0x0);
        gbc.writeMem(0xc8a9, { 0xe2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbd4b, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc8a9));
        EXPECT(0x51, gbc.readMem(0xffc2));
        // E2 0301
        gbc.setState(0xe904, 0xed82, 0xee30, 0x85c0, 0xe32a, 0x30a2, 0x0, 0x1);
        gbc.writeMem(0xe904, { 0xe2 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xed82, gbc.sp());
        EXPECT(0xe905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe904));
        EXPECT(0xee, gbc.readMem(0xffc0));
        // E2 0302
        gbc.setState(0x9360, 0x4f20, 0xba30, 0xb1b, 0x9018, 0x2ada, 0x0, 0x1);
        gbc.writeMem(0x9360, { 0xe2 });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4f20, gbc.sp());
        EXPECT(0x9361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9360));
        EXPECT(0xba, gbc.readMem(0xff1b));
        // E2 0303
        gbc.setState(0x606a, 0xd8af, 0x7b60, 0x3cad, 0x3716, 0x4a40, 0x1, 0x1);
        gbc.writeMem(0x606a, { 0xe2 });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd8af, gbc.sp());
        EXPECT(0x606b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xffad));
        // E2 0304
        gbc.setState(0xc6d0, 0x63c5, 0x8a10, 0x3a7b, 0xed07, 0xdf82, 0x1, 0x1);
        gbc.writeMem(0xc6d0, { 0xe2 });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x63c5, gbc.sp());
        EXPECT(0xc6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc6d0));
        EXPECT(0x8a, gbc.readMem(0xff7b));
        // E2 0305
        gbc.setState(0xc3d9, 0x1c5c, 0x55c0, 0x2ad, 0xd68b, 0xfee1, 0x1, 0x0);
        gbc.writeMem(0xc3d9, { 0xe2 });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1c5c, gbc.sp());
        EXPECT(0xc3da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc3d9));
        EXPECT(0x55, gbc.readMem(0xffad));
        // E2 0306
        gbc.setState(0xfc, 0x75c4, 0xe80, 0xd019, 0x4adb, 0x8551, 0x0, 0x1);
        gbc.writeMem(0xfc, { 0xe2 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x75c4, gbc.sp());
        EXPECT(0xfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xff19));
        // E2 0307
        gbc.setState(0xe284, 0x989e, 0x65e0, 0xdf04, 0x5c52, 0xc251, 0x1, 0x1);
        gbc.writeMem(0xe284, { 0xe2 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x989e, gbc.sp());
        EXPECT(0xe285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe284));
        EXPECT(0x65, gbc.readMem(0xff04));
        // E2 0308
        gbc.setState(0x313e, 0xd3d, 0x50c0, 0xa1fb, 0xb840, 0x2981, 0x0, 0x1);
        gbc.writeMem(0x313e, { 0xe2 });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd3d, gbc.sp());
        EXPECT(0x313f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xfffb));
        // E2 0309
        gbc.setState(0xb76c, 0x3e86, 0xadb0, 0x77bd, 0xb9e, 0x761a, 0x1, 0x0);
        gbc.writeMem(0xb76c, { 0xe2 });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3e86, gbc.sp());
        EXPECT(0xb76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb76c));
        EXPECT(0xad, gbc.readMem(0xffbd));
        // E2 030A
        gbc.setState(0x9fbb, 0x478e, 0x5170, 0x2536, 0xdcde, 0x3aca, 0x1, 0x0);
        gbc.writeMem(0x9fbb, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x478e, gbc.sp());
        EXPECT(0x9fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9fbb));
        EXPECT(0x51, gbc.readMem(0xff36));
        // E2 030B
        gbc.setState(0xa68b, 0xbee0, 0xe000, 0xe6d8, 0xb6f8, 0x78f6, 0x0, 0x0);
        gbc.writeMem(0xa68b, { 0xe2 });
        gbc.writeMem(0xffd8, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbee0, gbc.sp());
        EXPECT(0xa68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa68b));
        EXPECT(0xe0, gbc.readMem(0xffd8));
        // E2 030C
        gbc.setState(0xc7b7, 0xd3d9, 0x6da0, 0x6323, 0x6e19, 0xf9a, 0x1, 0x0);
        gbc.writeMem(0xc7b7, { 0xe2 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd3d9, gbc.sp());
        EXPECT(0xc7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc7b7));
        EXPECT(0x6d, gbc.readMem(0xff23));
        // E2 030E
        gbc.setState(0xa73, 0x2559, 0x8760, 0xdd24, 0xa198, 0x64f1, 0x0, 0x1);
        gbc.writeMem(0xa73, { 0xe2 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2559, gbc.sp());
        EXPECT(0xa74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xff24));
        // E2 030F
        gbc.setState(0x285b, 0xaec8, 0xc9f0, 0xdcea, 0xd89a, 0x5c40, 0x1, 0x0);
        gbc.writeMem(0x285b, { 0xe2 });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xaec8, gbc.sp());
        EXPECT(0x285c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xffea));
        // E2 0310
        gbc.setState(0x4986, 0x6e9, 0xb7b0, 0xf6ca, 0x25c7, 0x857e, 0x1, 0x0);
        gbc.writeMem(0x4986, { 0xe2 });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6e9, gbc.sp());
        EXPECT(0x4987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xffca));
        // E2 0311
        gbc.setState(0x8466, 0xaa01, 0xaf10, 0x2648, 0x1b0a, 0xecb7, 0x0, 0x1);
        gbc.writeMem(0x8466, { 0xe2 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xaa01, gbc.sp());
        EXPECT(0x8467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8466));
        EXPECT(0xaf, gbc.readMem(0xff48));
        // E2 0312
        gbc.setState(0x98d4, 0x1d82, 0xbff0, 0xe1a4, 0x3e77, 0x65f5, 0x0, 0x1);
        gbc.writeMem(0x98d4, { 0xe2 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1d82, gbc.sp());
        EXPECT(0x98d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x98d4));
        EXPECT(0xbf, gbc.readMem(0xffa4));
        // E2 0313
        gbc.setState(0xb20d, 0xc7fa, 0x2a50, 0xe2b9, 0xd96c, 0xe469, 0x0, 0x0);
        gbc.writeMem(0xb20d, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc7fa, gbc.sp());
        EXPECT(0xb20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb20d));
        EXPECT(0x2a, gbc.readMem(0xffb9));
        // E2 0314
        gbc.setState(0xc7b7, 0xff8e, 0x80f0, 0x613a, 0x5805, 0xa7de, 0x1, 0x1);
        gbc.writeMem(0xc7b7, { 0xe2 });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xff8e, gbc.sp());
        EXPECT(0xc7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc7b7));
        EXPECT(0x80, gbc.readMem(0xff3a));
        // E2 0315
        gbc.setState(0xbc91, 0x9823, 0x3c00, 0x1a37, 0x4357, 0x56df, 0x0, 0x1);
        gbc.writeMem(0xbc91, { 0xe2 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9823, gbc.sp());
        EXPECT(0xbc92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbc91));
        EXPECT(0x3c, gbc.readMem(0xff37));
        // E2 0316
        gbc.setState(0x1506, 0xbdc9, 0x5210, 0xb476, 0xecc2, 0xa337, 0x0, 0x0);
        gbc.writeMem(0x1506, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbdc9, gbc.sp());
        EXPECT(0x1507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff76));
        // E2 0317
        gbc.setState(0xa5f0, 0x8c82, 0x3f20, 0xafc9, 0x55ab, 0x3068, 0x0, 0x1);
        gbc.writeMem(0xa5f0, { 0xe2 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8c82, gbc.sp());
        EXPECT(0xa5f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa5f0));
        EXPECT(0x3f, gbc.readMem(0xffc9));
        // E2 0319
        gbc.setState(0x60a5, 0x8a12, 0x48a0, 0x509f, 0xf0bf, 0xc2af, 0x0, 0x1);
        gbc.writeMem(0x60a5, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8a12, gbc.sp());
        EXPECT(0x60a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xff9f));
        // E2 031A
        gbc.setState(0x6c9a, 0x9e27, 0x8970, 0x6670, 0x5b07, 0x7a58, 0x1, 0x1);
        gbc.writeMem(0x6c9a, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9e27, gbc.sp());
        EXPECT(0x6c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xff70));
        // E2 031B
        gbc.setState(0x2b12, 0x84d3, 0x3fb0, 0xf14e, 0xbf5, 0xcc7d, 0x0, 0x0);
        gbc.writeMem(0x2b12, { 0xe2 });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x84d3, gbc.sp());
        EXPECT(0x2b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xff4e));
        // E2 031C
        gbc.setState(0x68a8, 0xd60f, 0x7e70, 0xcb9, 0x2492, 0x2503, 0x1, 0x0);
        gbc.writeMem(0x68a8, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd60f, gbc.sp());
        EXPECT(0x68a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xffb9));
        // E2 031D
        gbc.setState(0x36dd, 0xfe83, 0x8b0, 0x532f, 0x8712, 0xce1, 0x1, 0x0);
        gbc.writeMem(0x36dd, { 0xe2 });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfe83, gbc.sp());
        EXPECT(0x36de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xff2f));
        // E2 031E
        gbc.setState(0x8f30, 0xa806, 0x70b0, 0xeaca, 0x7aa2, 0x8c73, 0x1, 0x1);
        gbc.writeMem(0x8f30, { 0xe2 });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa806, gbc.sp());
        EXPECT(0x8f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8f30));
        EXPECT(0x70, gbc.readMem(0xffca));
        // E2 031F
        gbc.setState(0x7471, 0x1e74, 0xb5f0, 0xb4a3, 0x216d, 0x30b, 0x0, 0x1);
        gbc.writeMem(0x7471, { 0xe2 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1e74, gbc.sp());
        EXPECT(0x7472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xffa3));
        // E2 0320
        gbc.setState(0x49b, 0xf462, 0x8aa0, 0x66ad, 0x2752, 0x68fd, 0x0, 0x1);
        gbc.writeMem(0x49b, { 0xe2 });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf462, gbc.sp());
        EXPECT(0x49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xffad));
        // E2 0321
        gbc.setState(0x2f50, 0x5028, 0xb990, 0xf58b, 0x9890, 0x5acd, 0x0, 0x1);
        gbc.writeMem(0x2f50, { 0xe2 });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5028, gbc.sp());
        EXPECT(0x2f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xff8b));
        // E2 0322
        gbc.setState(0xab75, 0x6517, 0xf2b0, 0x3aa0, 0x32ba, 0xca98, 0x0, 0x1);
        gbc.writeMem(0xab75, { 0xe2 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6517, gbc.sp());
        EXPECT(0xab76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xab75));
        EXPECT(0xf2, gbc.readMem(0xffa0));
        // E2 0323
        gbc.setState(0x96c0, 0x9cdf, 0x8e40, 0xf816, 0x2c05, 0xfc3, 0x0, 0x0);
        gbc.writeMem(0x96c0, { 0xe2 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9cdf, gbc.sp());
        EXPECT(0x96c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x96c0));
        EXPECT(0x8e, gbc.readMem(0xff16));
        // E2 0324
        gbc.setState(0x9845, 0x75d5, 0xa7f0, 0x3362, 0xbb84, 0xf18, 0x0, 0x1);
        gbc.writeMem(0x9845, { 0xe2 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x75d5, gbc.sp());
        EXPECT(0x9846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9845));
        EXPECT(0xa7, gbc.readMem(0xff62));
        // E2 0325
        gbc.setState(0x48b0, 0x6349, 0xaac0, 0xda5a, 0xe661, 0xff8d, 0x0, 0x0);
        gbc.writeMem(0x48b0, { 0xe2 });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6349, gbc.sp());
        EXPECT(0x48b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xff5a));
        // E2 0326
        gbc.setState(0x3cc8, 0x1e46, 0xef50, 0xefdb, 0xc9d5, 0x230d, 0x0, 0x1);
        gbc.writeMem(0x3cc8, { 0xe2 });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1e46, gbc.sp());
        EXPECT(0x3cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xffdb));
        // E2 0327
        gbc.setState(0xc541, 0x16a1, 0xbd40, 0x5265, 0xfe9b, 0x655f, 0x1, 0x1);
        gbc.writeMem(0xc541, { 0xe2 });
        gbc.writeMem(0xff65, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x16a1, gbc.sp());
        EXPECT(0xc542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc541));
        EXPECT(0xbd, gbc.readMem(0xff65));
        // E2 0328
        gbc.setState(0x2994, 0xa866, 0x99b0, 0x2440, 0x5ebb, 0x5451, 0x1, 0x0);
        gbc.writeMem(0x2994, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa866, gbc.sp());
        EXPECT(0x2995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xff40));
        // E2 0329
        gbc.setState(0x23d6, 0xc913, 0x51a0, 0xf02c, 0x52f9, 0x2285, 0x0, 0x0);
        gbc.writeMem(0x23d6, { 0xe2 });
        gbc.writeMem(0xff2c, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc913, gbc.sp());
        EXPECT(0x23d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xff2c));
        // E2 032A
        gbc.setState(0x24e, 0x8d59, 0xdc0, 0x1f3f, 0xb615, 0xbdc6, 0x1, 0x0);
        gbc.writeMem(0x24e, { 0xe2 });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8d59, gbc.sp());
        EXPECT(0x24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xff3f));
        // E2 032C
        gbc.setState(0x2031, 0x271f, 0x8a80, 0xaa07, 0xd386, 0x16ec, 0x0, 0x1);
        gbc.writeMem(0x2031, { 0xe2 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x271f, gbc.sp());
        EXPECT(0x2032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xff07));
        // E2 032E
        gbc.setState(0x4065, 0x569d, 0x7020, 0x6631, 0xcf4, 0xb28c, 0x1, 0x1);
        gbc.writeMem(0x4065, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x569d, gbc.sp());
        EXPECT(0x4066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xff31));
        // E2 032F
        gbc.setState(0xe422, 0x7a4a, 0x420, 0xa196, 0xe7f2, 0xdc4a, 0x1, 0x0);
        gbc.writeMem(0xe422, { 0xe2 });
        gbc.writeMem(0xff96, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7a4a, gbc.sp());
        EXPECT(0xe423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe422));
        EXPECT(0x4, gbc.readMem(0xff96));
        // E2 0330
        gbc.setState(0x57ce, 0x36fc, 0x2120, 0x973d, 0x64c5, 0x7035, 0x1, 0x0);
        gbc.writeMem(0x57ce, { 0xe2 });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x36fc, gbc.sp());
        EXPECT(0x57cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xff3d));
        // E2 0331
        gbc.setState(0x28b2, 0xc6a1, 0xf830, 0xf2bc, 0x7d23, 0x88e3, 0x0, 0x0);
        gbc.writeMem(0x28b2, { 0xe2 });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc6a1, gbc.sp());
        EXPECT(0x28b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xffbc));
        // E2 0333
        gbc.setState(0x74be, 0xee36, 0xb8f0, 0xbe45, 0xf8bc, 0xbf92, 0x0, 0x1);
        gbc.writeMem(0x74be, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xee36, gbc.sp());
        EXPECT(0x74bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xff45));
        // E2 0334
        gbc.setState(0x23e1, 0xce2d, 0x1b90, 0x637c, 0x9a56, 0xa1c3, 0x0, 0x1);
        gbc.writeMem(0x23e1, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xce2d, gbc.sp());
        EXPECT(0x23e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xff7c));
        // E2 0335
        gbc.setState(0x1c2f, 0xbfb4, 0x20f0, 0x44da, 0xaa61, 0x986a, 0x1, 0x0);
        gbc.writeMem(0x1c2f, { 0xe2 });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbfb4, gbc.sp());
        EXPECT(0x1c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xffda));
        // E2 0336
        gbc.setState(0x6f9a, 0xb660, 0x9e50, 0x6b04, 0x8d3a, 0x3140, 0x0, 0x0);
        gbc.writeMem(0x6f9a, { 0xe2 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb660, gbc.sp());
        EXPECT(0x6f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xff04));
        // E2 0337
        gbc.setState(0x1a99, 0x8c1d, 0x8ca0, 0xe0c5, 0xdcc8, 0x4795, 0x0, 0x0);
        gbc.writeMem(0x1a99, { 0xe2 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8c1d, gbc.sp());
        EXPECT(0x1a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xffc5));
        // E2 0338
        gbc.setState(0xb2d0, 0x4771, 0xc180, 0xdbac, 0x3f85, 0xb610, 0x0, 0x0);
        gbc.writeMem(0xb2d0, { 0xe2 });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4771, gbc.sp());
        EXPECT(0xb2d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb2d0));
        EXPECT(0xc1, gbc.readMem(0xffac));
        // E2 0339
        gbc.setState(0xb831, 0xb578, 0xa390, 0x362d, 0x9175, 0x412b, 0x0, 0x1);
        gbc.writeMem(0xb831, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb578, gbc.sp());
        EXPECT(0xb832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb831));
        EXPECT(0xa3, gbc.readMem(0xff2d));
        // E2 033A
        gbc.setState(0xc0fc, 0x7a07, 0xb480, 0x71d0, 0xa20c, 0x59cb, 0x1, 0x0);
        gbc.writeMem(0xc0fc, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7a07, gbc.sp());
        EXPECT(0xc0fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc0fc));
        EXPECT(0xb4, gbc.readMem(0xffd0));
        // E2 033B
        gbc.setState(0x1715, 0x74e4, 0xeee0, 0xcc1c, 0x6e90, 0x754e, 0x1, 0x1);
        gbc.writeMem(0x1715, { 0xe2 });
        gbc.writeMem(0xff1c, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x74e4, gbc.sp());
        EXPECT(0x1716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xff1c));
        // E2 033C
        gbc.setState(0x75ab, 0xa815, 0x7950, 0x711f, 0xfe3b, 0xb157, 0x1, 0x0);
        gbc.writeMem(0x75ab, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa815, gbc.sp());
        EXPECT(0x75ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xff1f));
        // E2 033D
        gbc.setState(0xcd2c, 0xf541, 0x8cb0, 0xb47f, 0xa7e2, 0x4446, 0x0, 0x0);
        gbc.writeMem(0xcd2c, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf541, gbc.sp());
        EXPECT(0xcd2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcd2c));
        EXPECT(0x8c, gbc.readMem(0xff7f));
        // E2 033E
        gbc.setState(0x7c7e, 0x8cae, 0xa420, 0x7618, 0xc563, 0x5781, 0x0, 0x1);
        gbc.writeMem(0x7c7e, { 0xe2 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8cae, gbc.sp());
        EXPECT(0x7c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xff18));
        // E2 0340
        gbc.setState(0x7eab, 0x4ac0, 0x2c00, 0x308e, 0xde05, 0x1a66, 0x0, 0x1);
        gbc.writeMem(0x7eab, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4ac0, gbc.sp());
        EXPECT(0x7eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xff8e));
        // E2 0341
        gbc.setState(0xe657, 0x8238, 0x8be0, 0x58de, 0x34b0, 0xfede, 0x1, 0x0);
        gbc.writeMem(0xe657, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8238, gbc.sp());
        EXPECT(0xe658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe657));
        EXPECT(0x8b, gbc.readMem(0xffde));
        // E2 0342
        gbc.setState(0xdc62, 0x6818, 0xd8b0, 0x2b66, 0x9b66, 0xe507, 0x1, 0x1);
        gbc.writeMem(0xdc62, { 0xe2 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6818, gbc.sp());
        EXPECT(0xdc63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdc62));
        EXPECT(0xd8, gbc.readMem(0xff66));
        // E2 0343
        gbc.setState(0x3ee9, 0x2ae, 0xf220, 0xfa9d, 0xeb6c, 0xdba3, 0x0, 0x0);
        gbc.writeMem(0x3ee9, { 0xe2 });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2ae, gbc.sp());
        EXPECT(0x3eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xff9d));
        // E2 0344
        gbc.setState(0x5496, 0x592f, 0x22a0, 0x3810, 0x585a, 0xf56a, 0x0, 0x0);
        gbc.writeMem(0x5496, { 0xe2 });
        gbc.writeMem(0xff10, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x592f, gbc.sp());
        EXPECT(0x5497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xff10));
        // E2 0345
        gbc.setState(0x6310, 0x3c1f, 0x8060, 0xa13, 0x6a53, 0x20e3, 0x0, 0x0);
        gbc.writeMem(0x6310, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3c1f, gbc.sp());
        EXPECT(0x6311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xff13));
        // E2 0347
        gbc.setState(0xe90, 0x31c1, 0xcbf0, 0x46b3, 0xeb0e, 0xd22f, 0x1, 0x1);
        gbc.writeMem(0xe90, { 0xe2 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x31c1, gbc.sp());
        EXPECT(0xe91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xffb3));
        // E2 0348
        gbc.setState(0x273e, 0x3fa2, 0x630, 0xc66c, 0xd97c, 0xde7f, 0x0, 0x1);
        gbc.writeMem(0x273e, { 0xe2 });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3fa2, gbc.sp());
        EXPECT(0x273f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xff6c));
        // E2 0349
        gbc.setState(0x2145, 0x20b, 0xc910, 0xcc01, 0x4cc3, 0xd9a1, 0x0, 0x0);
        gbc.writeMem(0x2145, { 0xe2 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x20b, gbc.sp());
        EXPECT(0x2146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xff01));
        // E2 034A
        gbc.setState(0x7300, 0x1f6c, 0xca40, 0x70c6, 0x7e3d, 0x8ad4, 0x0, 0x0);
        gbc.writeMem(0x7300, { 0xe2 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1f6c, gbc.sp());
        EXPECT(0x7301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xffc6));
        // E2 034B
        gbc.setState(0x6829, 0x277, 0xcaf0, 0xaad0, 0x4813, 0x6426, 0x1, 0x1);
        gbc.writeMem(0x6829, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x277, gbc.sp());
        EXPECT(0x682a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xffd0));
        // E2 034C
        gbc.setState(0x4fd, 0xe485, 0xdcc0, 0x2d27, 0x980b, 0x63da, 0x0, 0x1);
        gbc.writeMem(0x4fd, { 0xe2 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe485, gbc.sp());
        EXPECT(0x4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xff27));
        // E2 034D
        gbc.setState(0x51fb, 0xd978, 0x7200, 0x4d7d, 0xcd26, 0x8640, 0x1, 0x0);
        gbc.writeMem(0x51fb, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd978, gbc.sp());
        EXPECT(0x51fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xff7d));
        // E2 034E
        gbc.setState(0x5561, 0xafe4, 0x3f40, 0x8683, 0x582e, 0xee24, 0x0, 0x1);
        gbc.writeMem(0x5561, { 0xe2 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xafe4, gbc.sp());
        EXPECT(0x5562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xff83));
        // E2 034F
        gbc.setState(0xb2e0, 0xe433, 0xa980, 0x42db, 0x604, 0xb9c5, 0x1, 0x1);
        gbc.writeMem(0xb2e0, { 0xe2 });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe433, gbc.sp());
        EXPECT(0xb2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb2e0));
        EXPECT(0xa9, gbc.readMem(0xffdb));
        // E2 0350
        gbc.setState(0x2450, 0x3828, 0xe370, 0xa28f, 0xea20, 0x52c1, 0x1, 0x1);
        gbc.writeMem(0x2450, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3828, gbc.sp());
        EXPECT(0x2451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xff8f));
        // E2 0351
        gbc.setState(0x99b2, 0x999, 0x46b0, 0xadd0, 0x89bd, 0x3adc, 0x0, 0x1);
        gbc.writeMem(0x99b2, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x999, gbc.sp());
        EXPECT(0x99b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x99b2));
        EXPECT(0x46, gbc.readMem(0xffd0));
        // E2 0352
        gbc.setState(0x393a, 0x49ed, 0xe3f0, 0x2fc8, 0xf9b2, 0x3ee4, 0x0, 0x0);
        gbc.writeMem(0x393a, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x49ed, gbc.sp());
        EXPECT(0x393b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xffc8));
        // E2 0353
        gbc.setState(0x5ee5, 0xb7b7, 0x50f0, 0xba73, 0x19bb, 0xf10, 0x0, 0x1);
        gbc.writeMem(0x5ee5, { 0xe2 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb7b7, gbc.sp());
        EXPECT(0x5ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xff73));
        // E2 0354
        gbc.setState(0x2b32, 0x422, 0x4d30, 0x5bb6, 0x79f3, 0x9a6d, 0x1, 0x1);
        gbc.writeMem(0x2b32, { 0xe2 });
        gbc.writeMem(0xffb6, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x422, gbc.sp());
        EXPECT(0x2b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xffb6));
        // E2 0355
        gbc.setState(0x1481, 0x3406, 0x6e00, 0x9828, 0x2df, 0xa78f, 0x0, 0x1);
        gbc.writeMem(0x1481, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3406, gbc.sp());
        EXPECT(0x1482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xff28));
        // E2 0356
        gbc.setState(0x7658, 0xeadf, 0xf480, 0xec54, 0xa536, 0xbf9a, 0x1, 0x0);
        gbc.writeMem(0x7658, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xeadf, gbc.sp());
        EXPECT(0x7659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xff54));
        // E2 0357
        gbc.setState(0xee85, 0x2e77, 0x19d0, 0xf5ec, 0xd372, 0x1f39, 0x0, 0x0);
        gbc.writeMem(0xee85, { 0xe2 });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2e77, gbc.sp());
        EXPECT(0xee86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xee85));
        EXPECT(0x19, gbc.readMem(0xffec));
        // E2 0358
        gbc.setState(0xdcf8, 0x95f4, 0x580, 0x8238, 0xf3da, 0x69be, 0x0, 0x1);
        gbc.writeMem(0xdcf8, { 0xe2 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x95f4, gbc.sp());
        EXPECT(0xdcf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdcf8));
        EXPECT(0x5, gbc.readMem(0xff38));
        // E2 0359
        gbc.setState(0x41e3, 0xe583, 0xd5d0, 0x7044, 0xa90c, 0x190a, 0x0, 0x1);
        gbc.writeMem(0x41e3, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe583, gbc.sp());
        EXPECT(0x41e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xff44));
        // E2 035A
        gbc.setState(0x71bc, 0xd9a2, 0x3bf0, 0x1412, 0x5aff, 0x3609, 0x0, 0x0);
        gbc.writeMem(0x71bc, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd9a2, gbc.sp());
        EXPECT(0x71bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xff12));
        // E2 035B
        gbc.setState(0x19, 0xe838, 0x6de0, 0x896e, 0xcb5a, 0xdac8, 0x0, 0x1);
        gbc.writeMem(0x19, { 0xe2 });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe838, gbc.sp());
        EXPECT(0x1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xff6e));
        // E2 035C
        gbc.setState(0xc585, 0x74cd, 0xf100, 0x13e3, 0x4626, 0xf370, 0x0, 0x1);
        gbc.writeMem(0xc585, { 0xe2 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x74cd, gbc.sp());
        EXPECT(0xc586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc585));
        EXPECT(0xf1, gbc.readMem(0xffe3));
        // E2 035D
        gbc.setState(0xe55b, 0xfb67, 0x2c90, 0x2da8, 0x9141, 0xaa87, 0x1, 0x0);
        gbc.writeMem(0xe55b, { 0xe2 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfb67, gbc.sp());
        EXPECT(0xe55c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe55b));
        EXPECT(0x2c, gbc.readMem(0xffa8));
        // E2 035E
        gbc.setState(0x2d94, 0x41b4, 0x5040, 0x1bbb, 0x51a, 0x2fbf, 0x0, 0x0);
        gbc.writeMem(0x2d94, { 0xe2 });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x41b4, gbc.sp());
        EXPECT(0x2d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xffbb));
        // E2 0360
        gbc.setState(0xa877, 0x85e2, 0xaaa0, 0x8c8c, 0x158b, 0x7ee6, 0x0, 0x0);
        gbc.writeMem(0xa877, { 0xe2 });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x85e2, gbc.sp());
        EXPECT(0xa878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa877));
        EXPECT(0xaa, gbc.readMem(0xff8c));
        // E2 0361
        gbc.setState(0x3e89, 0x21db, 0xac30, 0xd5f9, 0xb1c0, 0x3de6, 0x0, 0x0);
        gbc.writeMem(0x3e89, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x21db, gbc.sp());
        EXPECT(0x3e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xfff9));
        // E2 0362
        gbc.setState(0x410c, 0x384f, 0xe800, 0x1a57, 0xed40, 0x44d6, 0x1, 0x1);
        gbc.writeMem(0x410c, { 0xe2 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x384f, gbc.sp());
        EXPECT(0x410d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xff57));
        // E2 0363
        gbc.setState(0x7103, 0x5376, 0x8d60, 0xc3f7, 0x69bf, 0x203f, 0x0, 0x0);
        gbc.writeMem(0x7103, { 0xe2 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5376, gbc.sp());
        EXPECT(0x7104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xfff7));
        // E2 0364
        gbc.setState(0x6e30, 0x64b2, 0x9300, 0xce71, 0xaaef, 0xf4f4, 0x1, 0x0);
        gbc.writeMem(0x6e30, { 0xe2 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x64b2, gbc.sp());
        EXPECT(0x6e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xff71));
        // E2 0365
        gbc.setState(0x7acd, 0x3057, 0x8b90, 0xa091, 0xbd03, 0x512d, 0x1, 0x1);
        gbc.writeMem(0x7acd, { 0xe2 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3057, gbc.sp());
        EXPECT(0x7ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xff91));
        // E2 0366
        gbc.setState(0x461b, 0xeca1, 0x5620, 0xd0bf, 0x3aae, 0x148d, 0x0, 0x1);
        gbc.writeMem(0x461b, { 0xe2 });
        gbc.writeMem(0xffbf, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xeca1, gbc.sp());
        EXPECT(0x461c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xffbf));
        // E2 0367
        gbc.setState(0x33d1, 0x1ab, 0x6cb0, 0x4c4d, 0x50d2, 0x5893, 0x1, 0x1);
        gbc.writeMem(0x33d1, { 0xe2 });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1ab, gbc.sp());
        EXPECT(0x33d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xff4d));
        // E2 0368
        gbc.setState(0x502e, 0x9cab, 0xe860, 0xb75c, 0xec87, 0x1bfb, 0x0, 0x0);
        gbc.writeMem(0x502e, { 0xe2 });
        gbc.writeMem(0xff5c, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9cab, gbc.sp());
        EXPECT(0x502f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xff5c));
        // E2 0369
        gbc.setState(0xe264, 0x293d, 0xe410, 0x7787, 0x8ee4, 0xff5d, 0x0, 0x1);
        gbc.writeMem(0xe264, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x293d, gbc.sp());
        EXPECT(0xe265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe264));
        EXPECT(0xe4, gbc.readMem(0xff87));
        // E2 036A
        gbc.setState(0x83fe, 0xa13e, 0x7050, 0xb429, 0xc849, 0x8aa4, 0x1, 0x1);
        gbc.writeMem(0x83fe, { 0xe2 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa13e, gbc.sp());
        EXPECT(0x83ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x83fe));
        EXPECT(0x70, gbc.readMem(0xff29));
        // E2 036B
        gbc.setState(0x4d4b, 0x95dd, 0x1b40, 0x5519, 0xd072, 0xd010, 0x1, 0x1);
        gbc.writeMem(0x4d4b, { 0xe2 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x95dd, gbc.sp());
        EXPECT(0x4d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xff19));
        // E2 036C
        gbc.setState(0xc9ea, 0x17a6, 0x2620, 0xdeaf, 0xdfa, 0xf7a1, 0x0, 0x0);
        gbc.writeMem(0xc9ea, { 0xe2 });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x17a6, gbc.sp());
        EXPECT(0xc9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc9ea));
        EXPECT(0x26, gbc.readMem(0xffaf));
        // E2 036D
        gbc.setState(0x4866, 0xea7, 0xe110, 0xbc39, 0x8e8b, 0x2d75, 0x1, 0x1);
        gbc.writeMem(0x4866, { 0xe2 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xea7, gbc.sp());
        EXPECT(0x4867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xff39));
        // E2 036E
        gbc.setState(0xa63e, 0x37a7, 0x8e10, 0x485, 0x25ae, 0xfbb8, 0x1, 0x0);
        gbc.writeMem(0xa63e, { 0xe2 });
        gbc.writeMem(0xff85, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x37a7, gbc.sp());
        EXPECT(0xa63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa63e));
        EXPECT(0x8e, gbc.readMem(0xff85));
        // E2 036F
        gbc.setState(0x3217, 0x9b9f, 0x2cc0, 0xea4, 0xb8dc, 0x3ec5, 0x0, 0x0);
        gbc.writeMem(0x3217, { 0xe2 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9b9f, gbc.sp());
        EXPECT(0x3218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xffa4));
        // E2 0370
        gbc.setState(0x8389, 0x45e8, 0xf6c0, 0xdefb, 0x8ee7, 0xbf, 0x0, 0x1);
        gbc.writeMem(0x8389, { 0xe2 });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x45e8, gbc.sp());
        EXPECT(0x838a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8389));
        EXPECT(0xf6, gbc.readMem(0xfffb));
        // E2 0371
        gbc.setState(0x6345, 0x7279, 0xbd70, 0x634e, 0x285b, 0x557a, 0x1, 0x1);
        gbc.writeMem(0x6345, { 0xe2 });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7279, gbc.sp());
        EXPECT(0x6346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xff4e));
        // E2 0372
        gbc.setState(0xac16, 0x1b62, 0xf000, 0x191f, 0x3a12, 0x7d31, 0x0, 0x1);
        gbc.writeMem(0xac16, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1b62, gbc.sp());
        EXPECT(0xac17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xac16));
        EXPECT(0xf0, gbc.readMem(0xff1f));
        // E2 0373
        gbc.setState(0x7c74, 0x5717, 0x6c50, 0xfb5a, 0x485f, 0x1559, 0x0, 0x0);
        gbc.writeMem(0x7c74, { 0xe2 });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5717, gbc.sp());
        EXPECT(0x7c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xff5a));
        // E2 0375
        gbc.setState(0xb11b, 0x10d2, 0x2360, 0xdbde, 0x734b, 0xe377, 0x0, 0x0);
        gbc.writeMem(0xb11b, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x10d2, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb11b));
        EXPECT(0x23, gbc.readMem(0xffde));
        // E2 0376
        gbc.setState(0x1f47, 0x95b3, 0xede0, 0xd3ad, 0xf8d0, 0x96d9, 0x1, 0x0);
        gbc.writeMem(0x1f47, { 0xe2 });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x95b3, gbc.sp());
        EXPECT(0x1f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xffad));
        // E2 0377
        gbc.setState(0x32e2, 0x265e, 0x1040, 0x6f42, 0x21a, 0x3bb0, 0x1, 0x0);
        gbc.writeMem(0x32e2, { 0xe2 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x265e, gbc.sp());
        EXPECT(0x32e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xff42));
        // E2 0378
        gbc.setState(0xc8e9, 0xb19f, 0x6cb0, 0xc5f4, 0x6baa, 0xec66, 0x1, 0x0);
        gbc.writeMem(0xc8e9, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb19f, gbc.sp());
        EXPECT(0xc8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc8e9));
        EXPECT(0x6c, gbc.readMem(0xfff4));
        // E2 0379
        gbc.setState(0xdd86, 0x3e75, 0x7210, 0x118e, 0xe8c5, 0xa0cf, 0x0, 0x0);
        gbc.writeMem(0xdd86, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3e75, gbc.sp());
        EXPECT(0xdd87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdd86));
        EXPECT(0x72, gbc.readMem(0xff8e));
        // E2 037A
        gbc.setState(0x8a9, 0x31fe, 0x8300, 0xa95a, 0x4e29, 0xa874, 0x1, 0x0);
        gbc.writeMem(0x8a9, { 0xe2 });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x31fe, gbc.sp());
        EXPECT(0x8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xff5a));
        // E2 037B
        gbc.setState(0x6da5, 0x9482, 0x1e70, 0x9eb, 0x827d, 0xa57b, 0x0, 0x1);
        gbc.writeMem(0x6da5, { 0xe2 });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9482, gbc.sp());
        EXPECT(0x6da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xffeb));
        // E2 037C
        gbc.setState(0x8847, 0x193c, 0x2670, 0x3561, 0xdf57, 0xba44, 0x0, 0x0);
        gbc.writeMem(0x8847, { 0xe2 });
        gbc.writeMem(0xff61, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x193c, gbc.sp());
        EXPECT(0x8848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8847));
        EXPECT(0x26, gbc.readMem(0xff61));
        // E2 037F
        gbc.setState(0xc8f5, 0x7b19, 0x16b0, 0xd66d, 0x78da, 0xd782, 0x1, 0x0);
        gbc.writeMem(0xc8f5, { 0xe2 });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7b19, gbc.sp());
        EXPECT(0xc8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc8f5));
        EXPECT(0x16, gbc.readMem(0xff6d));
        // E2 0380
        gbc.setState(0x8515, 0xe21a, 0x72a0, 0x432c, 0x6022, 0x716c, 0x0, 0x1);
        gbc.writeMem(0x8515, { 0xe2 });
        gbc.writeMem(0xff2c, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe21a, gbc.sp());
        EXPECT(0x8516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8515));
        EXPECT(0x72, gbc.readMem(0xff2c));
        // E2 0381
        gbc.setState(0xa5d1, 0xd3dc, 0xc0a0, 0x29f1, 0x2038, 0x72a7, 0x0, 0x0);
        gbc.writeMem(0xa5d1, { 0xe2 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd3dc, gbc.sp());
        EXPECT(0xa5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa5d1));
        EXPECT(0xc0, gbc.readMem(0xfff1));
        // E2 0382
        gbc.setState(0x8403, 0x4e94, 0x4c90, 0xa61f, 0x61d0, 0x666a, 0x0, 0x0);
        gbc.writeMem(0x8403, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4e94, gbc.sp());
        EXPECT(0x8404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8403));
        EXPECT(0x4c, gbc.readMem(0xff1f));
        // E2 0383
        gbc.setState(0x6f24, 0xf801, 0x3b50, 0xbff8, 0x5dde, 0xdfc1, 0x1, 0x0);
        gbc.writeMem(0x6f24, { 0xe2 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf801, gbc.sp());
        EXPECT(0x6f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xfff8));
        // E2 0384
        gbc.setState(0xd, 0xf89b, 0x93a0, 0x1cd2, 0xec3, 0xdcbe, 0x0, 0x0);
        gbc.writeMem(0xd, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf89b, gbc.sp());
        EXPECT(0xe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xffd2));
        // E2 0385
        gbc.setState(0xde59, 0x77be, 0x3100, 0xabd4, 0xd980, 0x5747, 0x0, 0x0);
        gbc.writeMem(0xde59, { 0xe2 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x77be, gbc.sp());
        EXPECT(0xde5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xde59));
        EXPECT(0x31, gbc.readMem(0xffd4));
        // E2 0386
        gbc.setState(0xcb7b, 0x1eda, 0x2140, 0x4ee7, 0x13a, 0x6f32, 0x1, 0x1);
        gbc.writeMem(0xcb7b, { 0xe2 });
        gbc.writeMem(0xffe7, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1eda, gbc.sp());
        EXPECT(0xcb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcb7b));
        EXPECT(0x21, gbc.readMem(0xffe7));
        // E2 0387
        gbc.setState(0x5bf6, 0xbf4f, 0x4af0, 0xda0e, 0xad12, 0x2368, 0x1, 0x1);
        gbc.writeMem(0x5bf6, { 0xe2 });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbf4f, gbc.sp());
        EXPECT(0x5bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xff0e));
        // E2 0388
        gbc.setState(0x6f30, 0x3069, 0xd3f0, 0xa325, 0x64d1, 0xdf3f, 0x0, 0x0);
        gbc.writeMem(0x6f30, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3069, gbc.sp());
        EXPECT(0x6f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xff25));
        // E2 0389
        gbc.setState(0xde7e, 0x31b2, 0x2910, 0x1883, 0xa9c8, 0xa2e9, 0x0, 0x0);
        gbc.writeMem(0xde7e, { 0xe2 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x31b2, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xde7e));
        EXPECT(0x29, gbc.readMem(0xff83));
        // E2 038A
        gbc.setState(0xec63, 0xc26a, 0xa3b0, 0x7b69, 0xf79c, 0x94d4, 0x0, 0x0);
        gbc.writeMem(0xec63, { 0xe2 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc26a, gbc.sp());
        EXPECT(0xec64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xec63));
        EXPECT(0xa3, gbc.readMem(0xff69));
        // E2 038C
        gbc.setState(0x8b29, 0x9db7, 0xd060, 0x9640, 0x338f, 0xf64c, 0x1, 0x0);
        gbc.writeMem(0x8b29, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9db7, gbc.sp());
        EXPECT(0x8b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8b29));
        EXPECT(0xd0, gbc.readMem(0xff40));
        // E2 038D
        gbc.setState(0xb415, 0x3c86, 0xb1a0, 0xcd77, 0x97a4, 0x5ccf, 0x1, 0x0);
        gbc.writeMem(0xb415, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3c86, gbc.sp());
        EXPECT(0xb416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb415));
        EXPECT(0xb1, gbc.readMem(0xff77));
        // E2 038F
        gbc.setState(0x3a29, 0xa556, 0x2010, 0xf544, 0x6b0e, 0x66bf, 0x1, 0x1);
        gbc.writeMem(0x3a29, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa556, gbc.sp());
        EXPECT(0x3a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xff44));
        // E2 0390
        gbc.setState(0x7cb3, 0x141b, 0x39a0, 0xb94f, 0x9e6c, 0xa66b, 0x1, 0x1);
        gbc.writeMem(0x7cb3, { 0xe2 });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x141b, gbc.sp());
        EXPECT(0x7cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xff4f));
        // E2 0391
        gbc.setState(0x9d50, 0x2246, 0x76b0, 0xd537, 0x235f, 0xaf17, 0x1, 0x1);
        gbc.writeMem(0x9d50, { 0xe2 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2246, gbc.sp());
        EXPECT(0x9d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9d50));
        EXPECT(0x76, gbc.readMem(0xff37));
        // E2 0392
        gbc.setState(0x4784, 0x6b76, 0x8a60, 0x225d, 0x6f2d, 0xfe61, 0x0, 0x1);
        gbc.writeMem(0x4784, { 0xe2 });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6b76, gbc.sp());
        EXPECT(0x4785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xff5d));
        // E2 0393
        gbc.setState(0x8124, 0x1ee2, 0x7980, 0x8544, 0xde47, 0x40cf, 0x0, 0x0);
        gbc.writeMem(0x8124, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1ee2, gbc.sp());
        EXPECT(0x8125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8124));
        EXPECT(0x79, gbc.readMem(0xff44));
        // E2 0394
        gbc.setState(0x942b, 0x1691, 0xad00, 0xb13, 0xd9c6, 0x3df5, 0x1, 0x0);
        gbc.writeMem(0x942b, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1691, gbc.sp());
        EXPECT(0x942c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x942b));
        EXPECT(0xad, gbc.readMem(0xff13));
        // E2 0395
        gbc.setState(0xa8d9, 0x854c, 0x8560, 0x695f, 0xfab9, 0xa865, 0x0, 0x0);
        gbc.writeMem(0xa8d9, { 0xe2 });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x854c, gbc.sp());
        EXPECT(0xa8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa8d9));
        EXPECT(0x85, gbc.readMem(0xff5f));
        // E2 0396
        gbc.setState(0x9cef, 0x3d6d, 0x7540, 0xd720, 0x8e82, 0x3245, 0x0, 0x0);
        gbc.writeMem(0x9cef, { 0xe2 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3d6d, gbc.sp());
        EXPECT(0x9cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9cef));
        EXPECT(0x75, gbc.readMem(0xff20));
        // E2 0397
        gbc.setState(0x7151, 0x6d32, 0xe1e0, 0xbb20, 0x1ef6, 0x94f3, 0x0, 0x1);
        gbc.writeMem(0x7151, { 0xe2 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6d32, gbc.sp());
        EXPECT(0x7152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xff20));
        // E2 0398
        gbc.setState(0xeb70, 0xe2c3, 0x4f00, 0x7cd3, 0x83bf, 0xf25e, 0x0, 0x0);
        gbc.writeMem(0xeb70, { 0xe2 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe2c3, gbc.sp());
        EXPECT(0xeb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xeb70));
        EXPECT(0x4f, gbc.readMem(0xffd3));
        // E2 0399
        gbc.setState(0x9fda, 0xff8f, 0xfaa0, 0xd3e5, 0x5c56, 0x79f1, 0x0, 0x0);
        gbc.writeMem(0x9fda, { 0xe2 });
        gbc.writeMem(0xffe5, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xff8f, gbc.sp());
        EXPECT(0x9fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9fda));
        EXPECT(0xfa, gbc.readMem(0xffe5));
        // E2 039A
        gbc.setState(0x902e, 0x7e62, 0x74e0, 0x6f8, 0x849d, 0x8ee7, 0x1, 0x0);
        gbc.writeMem(0x902e, { 0xe2 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7e62, gbc.sp());
        EXPECT(0x902f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x902e));
        EXPECT(0x74, gbc.readMem(0xfff8));
        // E2 039B
        gbc.setState(0xd932, 0xeef4, 0x3750, 0x84b8, 0x4786, 0x46ec, 0x0, 0x1);
        gbc.writeMem(0xd932, { 0xe2 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeef4, gbc.sp());
        EXPECT(0xd933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd932));
        EXPECT(0x37, gbc.readMem(0xffb8));
        // E2 039C
        gbc.setState(0xc4aa, 0xb1f8, 0x5780, 0xc8fc, 0xb2bd, 0x9061, 0x0, 0x0);
        gbc.writeMem(0xc4aa, { 0xe2 });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb1f8, gbc.sp());
        EXPECT(0xc4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc4aa));
        EXPECT(0x57, gbc.readMem(0xfffc));
        // E2 039D
        gbc.setState(0x6636, 0x633, 0xa110, 0xbfb, 0xf007, 0xbcb0, 0x1, 0x0);
        gbc.writeMem(0x6636, { 0xe2 });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x633, gbc.sp());
        EXPECT(0x6637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xfffb));
        // E2 039E
        gbc.setState(0xeb2f, 0x237c, 0xb380, 0x2e5f, 0xc768, 0x7317, 0x1, 0x0);
        gbc.writeMem(0xeb2f, { 0xe2 });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x237c, gbc.sp());
        EXPECT(0xeb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xeb2f));
        EXPECT(0xb3, gbc.readMem(0xff5f));
        // E2 03A0
        gbc.setState(0x6e8, 0x9ef0, 0xe310, 0x3d16, 0x3abe, 0x3729, 0x0, 0x0);
        gbc.writeMem(0x6e8, { 0xe2 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9ef0, gbc.sp());
        EXPECT(0x6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xff16));
        // E2 03A1
        gbc.setState(0x117a, 0x2f6b, 0x5240, 0x3fde, 0x5b29, 0x95e1, 0x0, 0x0);
        gbc.writeMem(0x117a, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2f6b, gbc.sp());
        EXPECT(0x117b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xffde));
        // E2 03A2
        gbc.setState(0x72ef, 0x7785, 0x51a0, 0xce25, 0x515b, 0x31fa, 0x0, 0x1);
        gbc.writeMem(0x72ef, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7785, gbc.sp());
        EXPECT(0x72f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xff25));
        // E2 03A3
        gbc.setState(0x4dfa, 0x546f, 0x13c0, 0x59d5, 0x36f6, 0xcdab, 0x0, 0x0);
        gbc.writeMem(0x4dfa, { 0xe2 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x546f, gbc.sp());
        EXPECT(0x4dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xffd5));
        // E2 03A4
        gbc.setState(0x50ab, 0x5b44, 0xec90, 0x11ba, 0x43df, 0xbc14, 0x1, 0x1);
        gbc.writeMem(0x50ab, { 0xe2 });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5b44, gbc.sp());
        EXPECT(0x50ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xffba));
        // E2 03A5
        gbc.setState(0xa30, 0x8787, 0xf840, 0x2f5c, 0x1341, 0x1843, 0x0, 0x0);
        gbc.writeMem(0xa30, { 0xe2 });
        gbc.writeMem(0xff5c, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8787, gbc.sp());
        EXPECT(0xa31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xff5c));
        // E2 03A6
        gbc.setState(0x4565, 0x1776, 0x30c0, 0xc733, 0x5036, 0x7755, 0x1, 0x0);
        gbc.writeMem(0x4565, { 0xe2 });
        gbc.writeMem(0xff33, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1776, gbc.sp());
        EXPECT(0x4566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xff33));
        // E2 03A7
        gbc.setState(0x16df, 0x515a, 0x9170, 0xd32b, 0x93e3, 0x7c7, 0x1, 0x1);
        gbc.writeMem(0x16df, { 0xe2 });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x515a, gbc.sp());
        EXPECT(0x16e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xff2b));
        // E2 03A8
        gbc.setState(0xbbf2, 0x2285, 0xd070, 0x7b38, 0xe843, 0xc9ff, 0x0, 0x0);
        gbc.writeMem(0xbbf2, { 0xe2 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2285, gbc.sp());
        EXPECT(0xbbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbbf2));
        EXPECT(0xd0, gbc.readMem(0xff38));
        // E2 03A9
        gbc.setState(0x6932, 0xd014, 0x5550, 0x3526, 0x2906, 0xe0de, 0x1, 0x1);
        gbc.writeMem(0x6932, { 0xe2 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd014, gbc.sp());
        EXPECT(0x6933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xff26));
        // E2 03AA
        gbc.setState(0x9f21, 0x7cd4, 0x2c40, 0x84c5, 0x2c4c, 0x83f3, 0x0, 0x1);
        gbc.writeMem(0x9f21, { 0xe2 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7cd4, gbc.sp());
        EXPECT(0x9f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9f21));
        EXPECT(0x2c, gbc.readMem(0xffc5));
        // E2 03AB
        gbc.setState(0xcd3b, 0xb53e, 0xf000, 0xdfca, 0x6aa8, 0x12f, 0x1, 0x1);
        gbc.writeMem(0xcd3b, { 0xe2 });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb53e, gbc.sp());
        EXPECT(0xcd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcd3b));
        EXPECT(0xf0, gbc.readMem(0xffca));
        // E2 03AC
        gbc.setState(0x5336, 0x97fd, 0x9d70, 0xfdb9, 0x6db5, 0x1271, 0x0, 0x1);
        gbc.writeMem(0x5336, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x97fd, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xffb9));
        // E2 03AD
        gbc.setState(0x5730, 0xa04f, 0xa2e0, 0x1160, 0xc51c, 0x5caf, 0x1, 0x1);
        gbc.writeMem(0x5730, { 0xe2 });
        gbc.writeMem(0xff60, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa04f, gbc.sp());
        EXPECT(0x5731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xff60));
        // E2 03AE
        gbc.setState(0x2f3c, 0xeb72, 0xfbe0, 0xfbbc, 0x94c8, 0xd35c, 0x0, 0x0);
        gbc.writeMem(0x2f3c, { 0xe2 });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xeb72, gbc.sp());
        EXPECT(0x2f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xffbc));
        // E2 03AF
        gbc.setState(0xcb64, 0x46b1, 0x2640, 0xd382, 0xf223, 0xf756, 0x1, 0x0);
        gbc.writeMem(0xcb64, { 0xe2 });
        gbc.writeMem(0xff82, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x46b1, gbc.sp());
        EXPECT(0xcb65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcb64));
        EXPECT(0x26, gbc.readMem(0xff82));
        // E2 03B0
        gbc.setState(0x84a, 0x3ad0, 0x1e40, 0x970d, 0xccc4, 0x5f4, 0x1, 0x1);
        gbc.writeMem(0x84a, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3ad0, gbc.sp());
        EXPECT(0x84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xff0d));
        // E2 03B1
        gbc.setState(0xc48f, 0x3aa2, 0xf300, 0x43f4, 0xa842, 0x6bd9, 0x0, 0x0);
        gbc.writeMem(0xc48f, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3aa2, gbc.sp());
        EXPECT(0xc490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc48f));
        EXPECT(0xf3, gbc.readMem(0xfff4));
        // E2 03B2
        gbc.setState(0x386a, 0x78b5, 0x4bb0, 0xfcc1, 0x5359, 0x21f9, 0x0, 0x0);
        gbc.writeMem(0x386a, { 0xe2 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x78b5, gbc.sp());
        EXPECT(0x386b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xffc1));
        // E2 03B3
        gbc.setState(0x39e1, 0x21f9, 0xe0e0, 0x2752, 0x72e7, 0x4a40, 0x1, 0x1);
        gbc.writeMem(0x39e1, { 0xe2 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x21f9, gbc.sp());
        EXPECT(0x39e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xff52));
        // E2 03B4
        gbc.setState(0x737, 0xca76, 0xd3f0, 0xf60, 0x7692, 0x9415, 0x1, 0x0);
        gbc.writeMem(0x737, { 0xe2 });
        gbc.writeMem(0xff60, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xca76, gbc.sp());
        EXPECT(0x738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xff60));
        // E2 03B5
        gbc.setState(0xae69, 0x9c20, 0x8800, 0x8a11, 0xa665, 0xb3f8, 0x1, 0x0);
        gbc.writeMem(0xae69, { 0xe2 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9c20, gbc.sp());
        EXPECT(0xae6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xae69));
        EXPECT(0x88, gbc.readMem(0xff11));
        // E2 03B6
        gbc.setState(0x24e2, 0xa1d8, 0x93b0, 0x700, 0xc825, 0x255, 0x0, 0x1);
        gbc.writeMem(0x24e2, { 0xe2 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa1d8, gbc.sp());
        EXPECT(0x24e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xff00));
        // E2 03B7
        gbc.setState(0x4af8, 0xb52, 0xa840, 0x3835, 0x871d, 0x85f0, 0x0, 0x0);
        gbc.writeMem(0x4af8, { 0xe2 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb52, gbc.sp());
        EXPECT(0x4af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xff35));
        // E2 03B8
        gbc.setState(0x8c38, 0xa48, 0x55a0, 0x8c0, 0x1cce, 0x12a, 0x1, 0x1);
        gbc.writeMem(0x8c38, { 0xe2 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa48, gbc.sp());
        EXPECT(0x8c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8c38));
        EXPECT(0x55, gbc.readMem(0xffc0));
        // E2 03B9
        gbc.setState(0xa32f, 0xa738, 0x6ab0, 0x1f3f, 0x8381, 0x85d6, 0x1, 0x1);
        gbc.writeMem(0xa32f, { 0xe2 });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa738, gbc.sp());
        EXPECT(0xa330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa32f));
        EXPECT(0x6a, gbc.readMem(0xff3f));
        // E2 03BA
        gbc.setState(0xe340, 0xcb55, 0xcf70, 0x467b, 0xb55a, 0x4627, 0x1, 0x0);
        gbc.writeMem(0xe340, { 0xe2 });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcb55, gbc.sp());
        EXPECT(0xe341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe340));
        EXPECT(0xcf, gbc.readMem(0xff7b));
        // E2 03BB
        gbc.setState(0x10d7, 0x61fd, 0xec10, 0xb356, 0x9b1, 0xd7c3, 0x0, 0x1);
        gbc.writeMem(0x10d7, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x61fd, gbc.sp());
        EXPECT(0x10d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xff56));
        // E2 03BC
        gbc.setState(0x58cf, 0xea56, 0xe7a0, 0xe6df, 0xdae3, 0x40b9, 0x0, 0x1);
        gbc.writeMem(0x58cf, { 0xe2 });
        gbc.writeMem(0xffdf, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xea56, gbc.sp());
        EXPECT(0x58d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xffdf));
        // E2 03BD
        gbc.setState(0x102f, 0xd08e, 0x98e0, 0xdcb4, 0x9f60, 0x9212, 0x1, 0x0);
        gbc.writeMem(0x102f, { 0xe2 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd08e, gbc.sp());
        EXPECT(0x1030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xffb4));
        // E2 03BE
        gbc.setState(0x9454, 0xe49f, 0xbde0, 0x8bed, 0x2598, 0x1c62, 0x0, 0x1);
        gbc.writeMem(0x9454, { 0xe2 });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe49f, gbc.sp());
        EXPECT(0x9455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9454));
        EXPECT(0xbd, gbc.readMem(0xffed));
        // E2 03BF
        gbc.setState(0x6819, 0xcc38, 0xfd10, 0x7f54, 0x132b, 0xe0d3, 0x0, 0x1);
        gbc.writeMem(0x6819, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcc38, gbc.sp());
        EXPECT(0x681a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xff54));
        // E2 03C0
        gbc.setState(0xc578, 0x1d40, 0x4ae0, 0xfb5, 0x7c32, 0x2a98, 0x0, 0x1);
        gbc.writeMem(0xc578, { 0xe2 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1d40, gbc.sp());
        EXPECT(0xc579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc578));
        EXPECT(0x4a, gbc.readMem(0xffb5));
        // E2 03C1
        gbc.setState(0xca18, 0xec3b, 0x2cb0, 0x1686, 0x2983, 0x192f, 0x0, 0x1);
        gbc.writeMem(0xca18, { 0xe2 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xec3b, gbc.sp());
        EXPECT(0xca19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xca18));
        EXPECT(0x2c, gbc.readMem(0xff86));
        // E2 03C2
        gbc.setState(0x147c, 0xf821, 0xaee0, 0x5298, 0x4189, 0xe2f8, 0x1, 0x1);
        gbc.writeMem(0x147c, { 0xe2 });
        gbc.writeMem(0xff98, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf821, gbc.sp());
        EXPECT(0x147d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xff98));
        // E2 03C3
        gbc.setState(0x1359, 0xc94d, 0x69c0, 0x3b38, 0x5572, 0x2fd9, 0x1, 0x1);
        gbc.writeMem(0x1359, { 0xe2 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc94d, gbc.sp());
        EXPECT(0x135a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xff38));
        // E2 03C4
        gbc.setState(0x136, 0x439a, 0xdb90, 0x16fb, 0xe832, 0x3aa5, 0x1, 0x1);
        gbc.writeMem(0x136, { 0xe2 });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x439a, gbc.sp());
        EXPECT(0x137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xfffb));
        // E2 03C5
        gbc.setState(0x5aed, 0xb5a4, 0x91e0, 0xe86f, 0x7abc, 0x2bf, 0x1, 0x1);
        gbc.writeMem(0x5aed, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb5a4, gbc.sp());
        EXPECT(0x5aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xff6f));
        // E2 03C6
        gbc.setState(0x4cc6, 0xbdb5, 0xca10, 0x7d45, 0x72be, 0xed9b, 0x0, 0x1);
        gbc.writeMem(0x4cc6, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbdb5, gbc.sp());
        EXPECT(0x4cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xff45));
        // E2 03C7
        gbc.setState(0x9d35, 0xf5b9, 0x6ed0, 0x21b1, 0xea5d, 0x838d, 0x1, 0x1);
        gbc.writeMem(0x9d35, { 0xe2 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf5b9, gbc.sp());
        EXPECT(0x9d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9d35));
        EXPECT(0x6e, gbc.readMem(0xffb1));
        // E2 03C8
        gbc.setState(0x3d2c, 0xbc7b, 0x6c00, 0xba94, 0xf3af, 0x7bd2, 0x1, 0x0);
        gbc.writeMem(0x3d2c, { 0xe2 });
        gbc.writeMem(0xff94, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbc7b, gbc.sp());
        EXPECT(0x3d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xff94));
        // E2 03C9
        gbc.setState(0x5191, 0x7d05, 0xd90, 0x2ba0, 0xf906, 0x6c8e, 0x1, 0x1);
        gbc.writeMem(0x5191, { 0xe2 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7d05, gbc.sp());
        EXPECT(0x5192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xffa0));
        // E2 03CA
        gbc.setState(0x6f68, 0x2631, 0x4d80, 0x8e5b, 0xea9f, 0xd6bb, 0x1, 0x1);
        gbc.writeMem(0x6f68, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2631, gbc.sp());
        EXPECT(0x6f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xff5b));
        // E2 03CC
        gbc.setState(0x5ce9, 0x4a28, 0xf370, 0xd018, 0x76ee, 0x38db, 0x1, 0x1);
        gbc.writeMem(0x5ce9, { 0xe2 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4a28, gbc.sp());
        EXPECT(0x5cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xff18));
        // E2 03CD
        gbc.setState(0xb841, 0x64d9, 0xd310, 0x10e2, 0x9663, 0xa918, 0x1, 0x0);
        gbc.writeMem(0xb841, { 0xe2 });
        gbc.writeMem(0xffe2, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x64d9, gbc.sp());
        EXPECT(0xb842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb841));
        EXPECT(0xd3, gbc.readMem(0xffe2));
        // E2 03CE
        gbc.setState(0x5229, 0xf55a, 0x3960, 0x8dc4, 0x98e4, 0xc253, 0x1, 0x0);
        gbc.writeMem(0x5229, { 0xe2 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf55a, gbc.sp());
        EXPECT(0x522a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xffc4));
        // E2 03CF
        gbc.setState(0x21e0, 0x1931, 0x1240, 0xda42, 0x71d, 0xcee8, 0x0, 0x1);
        gbc.writeMem(0x21e0, { 0xe2 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1931, gbc.sp());
        EXPECT(0x21e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xff42));
        // E2 03D0
        gbc.setState(0xdebd, 0xc176, 0x5a10, 0xd377, 0xe670, 0x813b, 0x0, 0x1);
        gbc.writeMem(0xdebd, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc176, gbc.sp());
        EXPECT(0xdebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdebd));
        EXPECT(0x5a, gbc.readMem(0xff77));
        // E2 03D1
        gbc.setState(0xe7f, 0x50f6, 0x8210, 0xcd9e, 0x360b, 0xa7ab, 0x0, 0x1);
        gbc.writeMem(0xe7f, { 0xe2 });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x50f6, gbc.sp());
        EXPECT(0xe80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xff9e));
        // E2 03D2
        gbc.setState(0xd6be, 0x71c0, 0x4720, 0xb67b, 0xe310, 0xb6ce, 0x0, 0x0);
        gbc.writeMem(0xd6be, { 0xe2 });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x71c0, gbc.sp());
        EXPECT(0xd6bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd6be));
        EXPECT(0x47, gbc.readMem(0xff7b));
        // E2 03D3
        gbc.setState(0xcaa6, 0x2b0a, 0x8700, 0xded, 0x1d88, 0x97c1, 0x1, 0x1);
        gbc.writeMem(0xcaa6, { 0xe2 });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2b0a, gbc.sp());
        EXPECT(0xcaa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcaa6));
        EXPECT(0x87, gbc.readMem(0xffed));
        // E2 03D4
        gbc.setState(0xf59, 0x171a, 0xc4f0, 0xd481, 0xcc0, 0x5d51, 0x1, 0x1);
        gbc.writeMem(0xf59, { 0xe2 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x171a, gbc.sp());
        EXPECT(0xf5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xff81));
        // E2 03D5
        gbc.setState(0x82bb, 0x479b, 0x8f00, 0x528f, 0x8bf1, 0xb56, 0x1, 0x0);
        gbc.writeMem(0x82bb, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x479b, gbc.sp());
        EXPECT(0x82bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x82bb));
        EXPECT(0x8f, gbc.readMem(0xff8f));
        // E2 03D6
        gbc.setState(0xa091, 0xb445, 0xe650, 0x222e, 0x485c, 0x8178, 0x0, 0x0);
        gbc.writeMem(0xa091, { 0xe2 });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb445, gbc.sp());
        EXPECT(0xa092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa091));
        EXPECT(0xe6, gbc.readMem(0xff2e));
        // E2 03D7
        gbc.setState(0x509f, 0x5047, 0x9e50, 0x4729, 0x4ba6, 0x51e7, 0x1, 0x1);
        gbc.writeMem(0x509f, { 0xe2 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5047, gbc.sp());
        EXPECT(0x50a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xff29));
        // E2 03D8
        gbc.setState(0x2d73, 0xb6b3, 0xe460, 0x5603, 0xd3c2, 0xb50b, 0x1, 0x0);
        gbc.writeMem(0x2d73, { 0xe2 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb6b3, gbc.sp());
        EXPECT(0x2d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xff03));
        // E2 03D9
        gbc.setState(0xecba, 0x86eb, 0x4c0, 0x1d76, 0xfbfc, 0x819f, 0x0, 0x1);
        gbc.writeMem(0xecba, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x86eb, gbc.sp());
        EXPECT(0xecbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xecba));
        EXPECT(0x4, gbc.readMem(0xff76));
        // E2 03DA
        gbc.setState(0xb77e, 0x4618, 0xf5a0, 0x862d, 0xf974, 0xba2c, 0x1, 0x1);
        gbc.writeMem(0xb77e, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4618, gbc.sp());
        EXPECT(0xb77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb77e));
        EXPECT(0xf5, gbc.readMem(0xff2d));
        // E2 03DB
        gbc.setState(0xb87b, 0x470e, 0x92f0, 0xd2a2, 0x2121, 0xc3bb, 0x0, 0x1);
        gbc.writeMem(0xb87b, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x470e, gbc.sp());
        EXPECT(0xb87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb87b));
        EXPECT(0x92, gbc.readMem(0xffa2));
        // E2 03DC
        gbc.setState(0x9929, 0x5d94, 0xcdb0, 0x1eeb, 0x6924, 0x7e60, 0x1, 0x1);
        gbc.writeMem(0x9929, { 0xe2 });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5d94, gbc.sp());
        EXPECT(0x992a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9929));
        EXPECT(0xcd, gbc.readMem(0xffeb));
        // E2 03DD
        gbc.setState(0x3bb9, 0x50ee, 0xb5c0, 0xf5, 0xf7bf, 0x2f57, 0x0, 0x1);
        gbc.writeMem(0x3bb9, { 0xe2 });
        gbc.writeMem(0xfff5, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x50ee, gbc.sp());
        EXPECT(0x3bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xfff5));
        // E2 03DE
        gbc.setState(0xe187, 0xb361, 0x9300, 0x2c6f, 0x8bc5, 0xb6ba, 0x1, 0x1);
        gbc.writeMem(0xe187, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb361, gbc.sp());
        EXPECT(0xe188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe187));
        EXPECT(0x93, gbc.readMem(0xff6f));
        // E2 03DF
        gbc.setState(0x8069, 0x13b5, 0x1f10, 0x4eb9, 0xe4e8, 0x3c5f, 0x0, 0x0);
        gbc.writeMem(0x8069, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x13b5, gbc.sp());
        EXPECT(0x806a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8069));
        EXPECT(0x1f, gbc.readMem(0xffb9));
        // E2 03E0
        gbc.setState(0x2678, 0x491d, 0x8830, 0xc19d, 0x24c9, 0x3128, 0x1, 0x1);
        gbc.writeMem(0x2678, { 0xe2 });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x491d, gbc.sp());
        EXPECT(0x2679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xff9d));
        // E2 03E1
        gbc.setState(0x43a5, 0x2a94, 0x8a0, 0x8020, 0x358f, 0x1810, 0x1, 0x1);
        gbc.writeMem(0x43a5, { 0xe2 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2a94, gbc.sp());
        EXPECT(0x43a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xff20));
        // E2 03E2
        gbc.setState(0x4ec5, 0x9638, 0xba10, 0x7d5b, 0x6858, 0x62d3, 0x1, 0x0);
        gbc.writeMem(0x4ec5, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9638, gbc.sp());
        EXPECT(0x4ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xff5b));
        // E2 03E3
        gbc.setState(0x1651, 0xcc12, 0xca20, 0xcd00, 0xf4e5, 0xa060, 0x0, 0x0);
        gbc.writeMem(0x1651, { 0xe2 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcc12, gbc.sp());
        EXPECT(0x1652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xff00));
        // E2 03E4
        gbc.setState(0x77d9, 0xe9cd, 0x7c90, 0xb609, 0xc713, 0x54a0, 0x1, 0x0);
        gbc.writeMem(0x77d9, { 0xe2 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe9cd, gbc.sp());
        EXPECT(0x77da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xff09));
        // E2 03E5
        gbc.setState(0xa61f, 0xde21, 0x65e0, 0x14af, 0x3368, 0xa354, 0x1, 0x1);
        gbc.writeMem(0xa61f, { 0xe2 });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xde21, gbc.sp());
        EXPECT(0xa620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa61f));
        EXPECT(0x65, gbc.readMem(0xffaf));
        // E2 03E6
        gbc.setState(0x377d, 0x93f, 0xd800, 0x6d0d, 0x8887, 0x293c, 0x1, 0x1);
        gbc.writeMem(0x377d, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x93f, gbc.sp());
        EXPECT(0x377e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xff0d));
        // E2 03E7
        gbc.setState(0xa08d, 0x3bd3, 0x5f80, 0xe939, 0xc385, 0x74da, 0x0, 0x1);
        gbc.writeMem(0xa08d, { 0xe2 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3bd3, gbc.sp());
        EXPECT(0xa08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa08d));
        EXPECT(0x5f, gbc.readMem(0xff39));
    }
