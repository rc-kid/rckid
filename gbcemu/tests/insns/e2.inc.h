    TEST(gbcemu, opcode_e2) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // E2 0000
        gbc.setState(0x67e, 0x19dc, 0xb5f0, 0x3f1e, 0xda41, 0x6b98, 0x1, 0x0);
        gbc.writeMem(0x67e, { 0xe2 });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x19dc);
        EXPECT(gbc.pc(), 0x67f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1e), 0xb5);
        // E2 0001
        gbc.setState(0x2e35, 0x3dac, 0x2320, 0x3d5e, 0xd5e, 0xd6e8, 0x1, 0x1);
        gbc.writeMem(0x2e35, { 0xe2 });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3dac);
        EXPECT(gbc.pc(), 0x2e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5e), 0x23);
        // E2 0002
        gbc.setState(0x9ad7, 0x940a, 0xc9d0, 0xb18e, 0xf17c, 0x386, 0x0, 0x1);
        gbc.writeMem(0x9ad7, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x940a);
        EXPECT(gbc.pc(), 0x9ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad7), 0xe2);
        EXPECT(gbc.readMem(0xff8e), 0xc9);
        // E2 0003
        gbc.setState(0x3d63, 0x8ae6, 0x7920, 0x54fe, 0x74e8, 0x41c8, 0x0, 0x0);
        gbc.writeMem(0x3d63, { 0xe2 });
        gbc.writeMem(0xfffe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8ae6);
        EXPECT(gbc.pc(), 0x3d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfffe), 0x79);
        // E2 0004
        gbc.setState(0x81b6, 0x8a74, 0xc300, 0x64aa, 0xb74, 0xa735, 0x0, 0x0);
        gbc.writeMem(0x81b6, { 0xe2 });
        gbc.writeMem(0xffaa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8a74);
        EXPECT(gbc.pc(), 0x81b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b6), 0xe2);
        EXPECT(gbc.readMem(0xffaa), 0xc3);
        // E2 0005
        gbc.setState(0x76ad, 0x165f, 0x1920, 0x6dbe, 0xedf5, 0xba06, 0x1, 0x0);
        gbc.writeMem(0x76ad, { 0xe2 });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x165f);
        EXPECT(gbc.pc(), 0x76ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffbe), 0x19);
        // E2 0006
        gbc.setState(0xdaea, 0x78a8, 0x1f90, 0x13cf, 0x8957, 0xd70d, 0x1, 0x1);
        gbc.writeMem(0xdaea, { 0xe2 });
        gbc.writeMem(0xffcf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x78a8);
        EXPECT(gbc.pc(), 0xdaeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaea), 0xe2);
        EXPECT(gbc.readMem(0xffcf), 0x1f);
        // E2 0007
        gbc.setState(0x29d, 0x66b3, 0x61a0, 0x1483, 0x825e, 0x8419, 0x0, 0x0);
        gbc.writeMem(0x29d, { 0xe2 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x66b3);
        EXPECT(gbc.pc(), 0x29e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff83), 0x61);
        // E2 0008
        gbc.setState(0xc8e0, 0x3b84, 0x26d0, 0x4274, 0x9511, 0x408f, 0x0, 0x0);
        gbc.writeMem(0xc8e0, { 0xe2 });
        gbc.writeMem(0xff74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3b84);
        EXPECT(gbc.pc(), 0xc8e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e0), 0xe2);
        EXPECT(gbc.readMem(0xff74), 0x26);
        // E2 0009
        gbc.setState(0xbde0, 0x846b, 0x6bd0, 0x614d, 0xcd1b, 0x543c, 0x0, 0x0);
        gbc.writeMem(0xbde0, { 0xe2 });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x846b);
        EXPECT(gbc.pc(), 0xbde1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde0), 0xe2);
        EXPECT(gbc.readMem(0xff4d), 0x6b);
        // E2 000B
        gbc.setState(0xbbe6, 0x5b4e, 0xe2f0, 0xcede, 0xc24f, 0x90c3, 0x0, 0x1);
        gbc.writeMem(0xbbe6, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5b4e);
        EXPECT(gbc.pc(), 0xbbe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe6), 0xe2);
        EXPECT(gbc.readMem(0xffde), 0xe2);
        // E2 000C
        gbc.setState(0x3ad4, 0xef88, 0x3660, 0xdc14, 0xc558, 0x3c04, 0x0, 0x0);
        gbc.writeMem(0x3ad4, { 0xe2 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xef88);
        EXPECT(gbc.pc(), 0x3ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff14), 0x36);
        // E2 000D
        gbc.setState(0x9a97, 0xb25f, 0x2dc0, 0xf80d, 0x1ea6, 0x39c, 0x1, 0x0);
        gbc.writeMem(0x9a97, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb25f);
        EXPECT(gbc.pc(), 0x9a98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a97), 0xe2);
        EXPECT(gbc.readMem(0xff0d), 0x2d);
        // E2 000E
        gbc.setState(0x709d, 0xe706, 0x3420, 0x1d76, 0xfdf6, 0x66c5, 0x1, 0x1);
        gbc.writeMem(0x709d, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe706);
        EXPECT(gbc.pc(), 0x709e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff76), 0x34);
        // E2 000F
        gbc.setState(0xaff2, 0x59f2, 0x3c90, 0xde8c, 0x42e7, 0xaef0, 0x0, 0x1);
        gbc.writeMem(0xaff2, { 0xe2 });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x59f2);
        EXPECT(gbc.pc(), 0xaff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff2), 0xe2);
        EXPECT(gbc.readMem(0xff8c), 0x3c);
        // E2 0010
        gbc.setState(0xe609, 0xd1a7, 0xd060, 0x6443, 0x3d7c, 0x3005, 0x0, 0x1);
        gbc.writeMem(0xe609, { 0xe2 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd1a7);
        EXPECT(gbc.pc(), 0xe60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe609), 0xe2);
        EXPECT(gbc.readMem(0xff43), 0xd0);
        // E2 0011
        gbc.setState(0x4e8f, 0x9292, 0x6e0, 0x4d3a, 0xebe9, 0x9e0d, 0x0, 0x1);
        gbc.writeMem(0x4e8f, { 0xe2 });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9292);
        EXPECT(gbc.pc(), 0x4e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3a), 0x6);
        // E2 0012
        gbc.setState(0x8e76, 0x1b3d, 0x8f40, 0xfa9f, 0x8025, 0xfb8d, 0x1, 0x0);
        gbc.writeMem(0x8e76, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1b3d);
        EXPECT(gbc.pc(), 0x8e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e76), 0xe2);
        EXPECT(gbc.readMem(0xff9f), 0x8f);
        // E2 0013
        gbc.setState(0xb63c, 0x76da, 0x1850, 0xd1dc, 0x99ba, 0xd8, 0x1, 0x0);
        gbc.writeMem(0xb63c, { 0xe2 });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x76da);
        EXPECT(gbc.pc(), 0xb63d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb63c), 0xe2);
        EXPECT(gbc.readMem(0xffdc), 0x18);
        // E2 0014
        gbc.setState(0xc3cf, 0xc09c, 0x9f40, 0x4f36, 0x312b, 0x7c0, 0x0, 0x1);
        gbc.writeMem(0xc3cf, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc09c);
        EXPECT(gbc.pc(), 0xc3d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3cf), 0xe2);
        EXPECT(gbc.readMem(0xff36), 0x9f);
        // E2 0015
        gbc.setState(0x206c, 0x1775, 0xe460, 0xe636, 0x9d67, 0x6776, 0x1, 0x0);
        gbc.writeMem(0x206c, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1775);
        EXPECT(gbc.pc(), 0x206d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff36), 0xe4);
        // E2 0016
        gbc.setState(0xe0e6, 0xf56e, 0xd3e0, 0x31f9, 0x7330, 0xa49e, 0x1, 0x0);
        gbc.writeMem(0xe0e6, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf56e);
        EXPECT(gbc.pc(), 0xe0e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e6), 0xe2);
        EXPECT(gbc.readMem(0xfff9), 0xd3);
        // E2 0017
        gbc.setState(0x4ed6, 0xc245, 0x6860, 0x3f90, 0xb648, 0x870b, 0x0, 0x1);
        gbc.writeMem(0x4ed6, { 0xe2 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc245);
        EXPECT(gbc.pc(), 0x4ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff90), 0x68);
        // E2 0018
        gbc.setState(0xca9e, 0xdb1c, 0x8e10, 0xcb27, 0x54ce, 0xc4c2, 0x1, 0x0);
        gbc.writeMem(0xca9e, { 0xe2 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdb1c);
        EXPECT(gbc.pc(), 0xca9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca9e), 0xe2);
        EXPECT(gbc.readMem(0xff27), 0x8e);
        // E2 0019
        gbc.setState(0x8f40, 0x10db, 0xb500, 0x7edc, 0xe75c, 0x6219, 0x0, 0x1);
        gbc.writeMem(0x8f40, { 0xe2 });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x10db);
        EXPECT(gbc.pc(), 0x8f41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f40), 0xe2);
        EXPECT(gbc.readMem(0xffdc), 0xb5);
        // E2 001A
        gbc.setState(0x4a5f, 0xe892, 0x70b0, 0xd79a, 0xcdd5, 0xd290, 0x1, 0x1);
        gbc.writeMem(0x4a5f, { 0xe2 });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe892);
        EXPECT(gbc.pc(), 0x4a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9a), 0x70);
        // E2 001C
        gbc.setState(0x9b7b, 0xd1c3, 0xdaa0, 0x82c5, 0xc90f, 0xc4eb, 0x1, 0x0);
        gbc.writeMem(0x9b7b, { 0xe2 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd1c3);
        EXPECT(gbc.pc(), 0x9b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b7b), 0xe2);
        EXPECT(gbc.readMem(0xffc5), 0xda);
        // E2 001D
        gbc.setState(0x2eb4, 0xb1ba, 0x9010, 0xa916, 0xd669, 0xd2cf, 0x0, 0x0);
        gbc.writeMem(0x2eb4, { 0xe2 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb1ba);
        EXPECT(gbc.pc(), 0x2eb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff16), 0x90);
        // E2 001E
        gbc.setState(0x4ebe, 0x4ec7, 0xad80, 0xdc25, 0xa4e7, 0x25a, 0x0, 0x1);
        gbc.writeMem(0x4ebe, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4ec7);
        EXPECT(gbc.pc(), 0x4ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff25), 0xad);
        // E2 001F
        gbc.setState(0x9e5d, 0x1459, 0x3b40, 0x2636, 0xc090, 0x8513, 0x0, 0x0);
        gbc.writeMem(0x9e5d, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1459);
        EXPECT(gbc.pc(), 0x9e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e5d), 0xe2);
        EXPECT(gbc.readMem(0xff36), 0x3b);
        // E2 0020
        gbc.setState(0x8a86, 0xaac6, 0xccc0, 0x54b9, 0xd0cc, 0xb762, 0x0, 0x1);
        gbc.writeMem(0x8a86, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xaac6);
        EXPECT(gbc.pc(), 0x8a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a86), 0xe2);
        EXPECT(gbc.readMem(0xffb9), 0xcc);
        // E2 0021
        gbc.setState(0x3130, 0xc0e9, 0xf400, 0xbed3, 0x5021, 0x2c6f, 0x0, 0x0);
        gbc.writeMem(0x3130, { 0xe2 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc0e9);
        EXPECT(gbc.pc(), 0x3131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd3), 0xf4);
        // E2 0022
        gbc.setState(0xca95, 0x738f, 0x3f0, 0x4e31, 0x198b, 0xe973, 0x1, 0x1);
        gbc.writeMem(0xca95, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x738f);
        EXPECT(gbc.pc(), 0xca96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca95), 0xe2);
        EXPECT(gbc.readMem(0xff31), 0x3);
        // E2 0023
        gbc.setState(0xde85, 0xb11, 0xc410, 0x95b0, 0x33a0, 0x238c, 0x0, 0x0);
        gbc.writeMem(0xde85, { 0xe2 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb11);
        EXPECT(gbc.pc(), 0xde86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde85), 0xe2);
        EXPECT(gbc.readMem(0xffb0), 0xc4);
        // E2 0024
        gbc.setState(0xce76, 0xf6a, 0x6680, 0x7278, 0x9b51, 0x9aa8, 0x0, 0x0);
        gbc.writeMem(0xce76, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf6a);
        EXPECT(gbc.pc(), 0xce77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce76), 0xe2);
        EXPECT(gbc.readMem(0xff78), 0x66);
        // E2 0025
        gbc.setState(0xef62, 0x18d0, 0x6f40, 0x45be, 0xf57e, 0x99fb, 0x0, 0x1);
        gbc.writeMem(0xef62, { 0xe2 });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x18d0);
        EXPECT(gbc.pc(), 0xef63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef62), 0xe2);
        EXPECT(gbc.readMem(0xffbe), 0x6f);
        // E2 0026
        gbc.setState(0x480a, 0x7d8c, 0xa4d0, 0x7392, 0xb43b, 0x50c6, 0x1, 0x0);
        gbc.writeMem(0x480a, { 0xe2 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7d8c);
        EXPECT(gbc.pc(), 0x480b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff92), 0xa4);
        // E2 0027
        gbc.setState(0x87ce, 0x3645, 0xef70, 0xb57c, 0x7ef8, 0xf36e, 0x1, 0x0);
        gbc.writeMem(0x87ce, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3645);
        EXPECT(gbc.pc(), 0x87cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ce), 0xe2);
        EXPECT(gbc.readMem(0xff7c), 0xef);
        // E2 0028
        gbc.setState(0x8be8, 0x3b0c, 0x73f0, 0xea24, 0xba52, 0x91f8, 0x0, 0x0);
        gbc.writeMem(0x8be8, { 0xe2 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3b0c);
        EXPECT(gbc.pc(), 0x8be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be8), 0xe2);
        EXPECT(gbc.readMem(0xff24), 0x73);
        // E2 0029
        gbc.setState(0xa18f, 0x7b0c, 0x7ee0, 0xaa2a, 0xce7a, 0xf93b, 0x1, 0x0);
        gbc.writeMem(0xa18f, { 0xe2 });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7b0c);
        EXPECT(gbc.pc(), 0xa190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18f), 0xe2);
        EXPECT(gbc.readMem(0xff2a), 0x7e);
        // E2 002A
        gbc.setState(0x63ad, 0xb836, 0x6f60, 0x83b4, 0x855d, 0xea85, 0x1, 0x0);
        gbc.writeMem(0x63ad, { 0xe2 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb836);
        EXPECT(gbc.pc(), 0x63ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb4), 0x6f);
        // E2 002B
        gbc.setState(0x35a6, 0x4c5, 0xe6f0, 0xc895, 0x336, 0x4380, 0x1, 0x0);
        gbc.writeMem(0x35a6, { 0xe2 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4c5);
        EXPECT(gbc.pc(), 0x35a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff95), 0xe6);
        // E2 002C
        gbc.setState(0x4186, 0xb6d6, 0x8a20, 0xd6b2, 0xece3, 0xa926, 0x0, 0x1);
        gbc.writeMem(0x4186, { 0xe2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb6d6);
        EXPECT(gbc.pc(), 0x4187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb2), 0x8a);
        // E2 002D
        gbc.setState(0x69d6, 0x2ba4, 0xb920, 0xcd30, 0x448c, 0x5f1d, 0x0, 0x0);
        gbc.writeMem(0x69d6, { 0xe2 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2ba4);
        EXPECT(gbc.pc(), 0x69d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff30), 0xb9);
        // E2 002E
        gbc.setState(0x67d7, 0x3d31, 0xfca0, 0x8cca, 0x4f48, 0x4fa6, 0x0, 0x0);
        gbc.writeMem(0x67d7, { 0xe2 });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3d31);
        EXPECT(gbc.pc(), 0x67d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffca), 0xfc);
        // E2 0030
        gbc.setState(0x6b6c, 0x358b, 0xe980, 0xc20a, 0x725a, 0x69a9, 0x0, 0x1);
        gbc.writeMem(0x6b6c, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x358b);
        EXPECT(gbc.pc(), 0x6b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0a), 0xe9);
        // E2 0031
        gbc.setState(0x43bc, 0x5830, 0x7660, 0x7278, 0xda8b, 0xf1d4, 0x0, 0x0);
        gbc.writeMem(0x43bc, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5830);
        EXPECT(gbc.pc(), 0x43bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff78), 0x76);
        // E2 0032
        gbc.setState(0x727, 0xc2d8, 0xd1d0, 0xbfb0, 0x1ad6, 0x42c5, 0x0, 0x0);
        gbc.writeMem(0x727, { 0xe2 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc2d8);
        EXPECT(gbc.pc(), 0x728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb0), 0xd1);
        // E2 0033
        gbc.setState(0x8012, 0xb0, 0xb2f0, 0x92db, 0x5a4c, 0xb589, 0x1, 0x1);
        gbc.writeMem(0x8012, { 0xe2 });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb0);
        EXPECT(gbc.pc(), 0x8013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8012), 0xe2);
        EXPECT(gbc.readMem(0xffdb), 0xb2);
        // E2 0034
        gbc.setState(0x7508, 0x17dd, 0xc5f0, 0x258b, 0x2773, 0x257, 0x0, 0x0);
        gbc.writeMem(0x7508, { 0xe2 });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x17dd);
        EXPECT(gbc.pc(), 0x7509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8b), 0xc5);
        // E2 0035
        gbc.setState(0xa8d, 0x7b30, 0xa700, 0x3142, 0xe6d8, 0x8b0a, 0x1, 0x1);
        gbc.writeMem(0xa8d, { 0xe2 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7b30);
        EXPECT(gbc.pc(), 0xa8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff42), 0xa7);
        // E2 0036
        gbc.setState(0xc88f, 0xfad1, 0xa790, 0xf569, 0xda7f, 0x7f7a, 0x0, 0x0);
        gbc.writeMem(0xc88f, { 0xe2 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xfad1);
        EXPECT(gbc.pc(), 0xc890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc88f), 0xe2);
        EXPECT(gbc.readMem(0xff69), 0xa7);
        // E2 0037
        gbc.setState(0xcd0a, 0x9595, 0xac70, 0x2c2e, 0x440b, 0x3d9c, 0x1, 0x1);
        gbc.writeMem(0xcd0a, { 0xe2 });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9595);
        EXPECT(gbc.pc(), 0xcd0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd0a), 0xe2);
        EXPECT(gbc.readMem(0xff2e), 0xac);
        // E2 0038
        gbc.setState(0x8ecd, 0xee59, 0xa4d0, 0x5e7f, 0x9543, 0x56f9, 0x0, 0x0);
        gbc.writeMem(0x8ecd, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xee59);
        EXPECT(gbc.pc(), 0x8ece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ecd), 0xe2);
        EXPECT(gbc.readMem(0xff7f), 0xa4);
        // E2 0039
        gbc.setState(0x2abf, 0xae22, 0x9c50, 0x4bde, 0x9485, 0x871f, 0x0, 0x1);
        gbc.writeMem(0x2abf, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xae22);
        EXPECT(gbc.pc(), 0x2ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffde), 0x9c);
        // E2 003B
        gbc.setState(0x8d74, 0xfed4, 0xa630, 0x3580, 0x6abb, 0x97f7, 0x1, 0x0);
        gbc.writeMem(0x8d74, { 0xe2 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfed4);
        EXPECT(gbc.pc(), 0x8d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d74), 0xe2);
        EXPECT(gbc.readMem(0xff80), 0xa6);
        // E2 003C
        gbc.setState(0xe04d, 0x111c, 0xb310, 0x65c1, 0xd87e, 0xfcc9, 0x1, 0x0);
        gbc.writeMem(0xe04d, { 0xe2 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x111c);
        EXPECT(gbc.pc(), 0xe04e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe04d), 0xe2);
        EXPECT(gbc.readMem(0xffc1), 0xb3);
        // E2 003D
        gbc.setState(0x5156, 0xbc, 0x1c10, 0xc11f, 0x6c78, 0x234d, 0x0, 0x1);
        gbc.writeMem(0x5156, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbc);
        EXPECT(gbc.pc(), 0x5157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1f), 0x1c);
        // E2 003E
        gbc.setState(0x9705, 0x8f3e, 0x5d10, 0xb645, 0xa608, 0x581b, 0x1, 0x1);
        gbc.writeMem(0x9705, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8f3e);
        EXPECT(gbc.pc(), 0x9706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9705), 0xe2);
        EXPECT(gbc.readMem(0xff45), 0x5d);
        // E2 003F
        gbc.setState(0x6bd3, 0xfad8, 0xe160, 0x7e0d, 0x68bc, 0x5e15, 0x0, 0x1);
        gbc.writeMem(0x6bd3, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfad8);
        EXPECT(gbc.pc(), 0x6bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0d), 0xe1);
        // E2 0040
        gbc.setState(0x31f3, 0x3056, 0x54b0, 0xb36e, 0xb7be, 0xca59, 0x1, 0x0);
        gbc.writeMem(0x31f3, { 0xe2 });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3056);
        EXPECT(gbc.pc(), 0x31f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff6e), 0x54);
        // E2 0041
        gbc.setState(0xd1f1, 0xd39e, 0x6360, 0x101b, 0x7ea1, 0x1cc3, 0x1, 0x0);
        gbc.writeMem(0xd1f1, { 0xe2 });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd39e);
        EXPECT(gbc.pc(), 0xd1f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f1), 0xe2);
        EXPECT(gbc.readMem(0xff1b), 0x63);
        // E2 0042
        gbc.setState(0x2aa0, 0xd50d, 0x8150, 0xd6c1, 0x71f7, 0xcf09, 0x0, 0x0);
        gbc.writeMem(0x2aa0, { 0xe2 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd50d);
        EXPECT(gbc.pc(), 0x2aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc1), 0x81);
        // E2 0043
        gbc.setState(0x5fcb, 0xf942, 0xcdf0, 0x1aab, 0xd225, 0xc409, 0x0, 0x0);
        gbc.writeMem(0x5fcb, { 0xe2 });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf942);
        EXPECT(gbc.pc(), 0x5fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffab), 0xcd);
        // E2 0044
        gbc.setState(0x4cd2, 0xcea1, 0xdec0, 0x36b9, 0x411c, 0x70ab, 0x1, 0x1);
        gbc.writeMem(0x4cd2, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcea1);
        EXPECT(gbc.pc(), 0x4cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb9), 0xde);
        // E2 0045
        gbc.setState(0x6536, 0x6155, 0x7330, 0x4394, 0x77cb, 0xeefa, 0x0, 0x0);
        gbc.writeMem(0x6536, { 0xe2 });
        gbc.writeMem(0xff94, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6155);
        EXPECT(gbc.pc(), 0x6537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff94), 0x73);
        // E2 0046
        gbc.setState(0xe111, 0xa683, 0x9fd0, 0x8d24, 0x93d6, 0x31b1, 0x0, 0x1);
        gbc.writeMem(0xe111, { 0xe2 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa683);
        EXPECT(gbc.pc(), 0xe112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe111), 0xe2);
        EXPECT(gbc.readMem(0xff24), 0x9f);
        // E2 0047
        gbc.setState(0xe4e6, 0x5848, 0x140, 0x112d, 0xc836, 0xfd92, 0x1, 0x1);
        gbc.writeMem(0xe4e6, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5848);
        EXPECT(gbc.pc(), 0xe4e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e6), 0xe2);
        EXPECT(gbc.readMem(0xff2d), 0x1);
        // E2 0048
        gbc.setState(0x979a, 0xbfd5, 0x6410, 0xd13b, 0xced, 0xebcb, 0x0, 0x1);
        gbc.writeMem(0x979a, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbfd5);
        EXPECT(gbc.pc(), 0x979b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979a), 0xe2);
        EXPECT(gbc.readMem(0xff3b), 0x64);
        // E2 0049
        gbc.setState(0xeae0, 0x438a, 0x1660, 0x9c71, 0x9079, 0x7dc2, 0x1, 0x1);
        gbc.writeMem(0xeae0, { 0xe2 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x438a);
        EXPECT(gbc.pc(), 0xeae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae0), 0xe2);
        EXPECT(gbc.readMem(0xff71), 0x16);
        // E2 004A
        gbc.setState(0x5b5c, 0xc0ff, 0x4720, 0x93ab, 0x96c5, 0xb9af, 0x1, 0x0);
        gbc.writeMem(0x5b5c, { 0xe2 });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc0ff);
        EXPECT(gbc.pc(), 0x5b5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffab), 0x47);
        // E2 004C
        gbc.setState(0x9c4f, 0x94de, 0x43e0, 0x1d28, 0x55c3, 0xb86e, 0x0, 0x0);
        gbc.writeMem(0x9c4f, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x94de);
        EXPECT(gbc.pc(), 0x9c50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c4f), 0xe2);
        EXPECT(gbc.readMem(0xff28), 0x43);
        // E2 004D
        gbc.setState(0xeedd, 0x5901, 0x29c0, 0xc4f9, 0xc69e, 0xe0c7, 0x1, 0x1);
        gbc.writeMem(0xeedd, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5901);
        EXPECT(gbc.pc(), 0xeede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeedd), 0xe2);
        EXPECT(gbc.readMem(0xfff9), 0x29);
        // E2 004E
        gbc.setState(0x240f, 0x26f5, 0x74c0, 0xcf7d, 0x16b, 0x993e, 0x1, 0x0);
        gbc.writeMem(0x240f, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x26f5);
        EXPECT(gbc.pc(), 0x2410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff7d), 0x74);
        // E2 004F
        gbc.setState(0x8329, 0x92aa, 0x2610, 0xea5e, 0x4b8a, 0x7ae7, 0x1, 0x1);
        gbc.writeMem(0x8329, { 0xe2 });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x92aa);
        EXPECT(gbc.pc(), 0x832a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8329), 0xe2);
        EXPECT(gbc.readMem(0xff5e), 0x26);
        // E2 0050
        gbc.setState(0x8a9, 0x8891, 0x2990, 0xf512, 0xb0e1, 0x99e2, 0x1, 0x1);
        gbc.writeMem(0x8a9, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8891);
        EXPECT(gbc.pc(), 0x8aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff12), 0x29);
        // E2 0051
        gbc.setState(0x947, 0xc592, 0xe9c0, 0x8f1d, 0x8baf, 0x5763, 0x1, 0x1);
        gbc.writeMem(0x947, { 0xe2 });
        gbc.writeMem(0xff1d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc592);
        EXPECT(gbc.pc(), 0x948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff1d), 0xe9);
        // E2 0052
        gbc.setState(0x3f66, 0x875b, 0xdc20, 0xf379, 0x384c, 0x180, 0x1, 0x1);
        gbc.writeMem(0x3f66, { 0xe2 });
        gbc.writeMem(0xff79, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x875b);
        EXPECT(gbc.pc(), 0x3f67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff79), 0xdc);
        // E2 0053
        gbc.setState(0x2d62, 0x76fb, 0xd310, 0x40d5, 0x218c, 0xff59, 0x1, 0x1);
        gbc.writeMem(0x2d62, { 0xe2 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x76fb);
        EXPECT(gbc.pc(), 0x2d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd5), 0xd3);
        // E2 0054
        gbc.setState(0xbb20, 0x24a9, 0x9380, 0xb4e3, 0xa4fd, 0xe77e, 0x0, 0x0);
        gbc.writeMem(0xbb20, { 0xe2 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x24a9);
        EXPECT(gbc.pc(), 0xbb21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb20), 0xe2);
        EXPECT(gbc.readMem(0xffe3), 0x93);
        // E2 0055
        gbc.setState(0x66d0, 0x87b9, 0x6b00, 0x179d, 0xf954, 0xbbdd, 0x0, 0x1);
        gbc.writeMem(0x66d0, { 0xe2 });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x87b9);
        EXPECT(gbc.pc(), 0x66d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9d), 0x6b);
        // E2 0056
        gbc.setState(0xaf30, 0x9ca2, 0xd380, 0xaf90, 0x447e, 0x1f50, 0x1, 0x1);
        gbc.writeMem(0xaf30, { 0xe2 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9ca2);
        EXPECT(gbc.pc(), 0xaf31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf30), 0xe2);
        EXPECT(gbc.readMem(0xff90), 0xd3);
        // E2 0057
        gbc.setState(0xbb16, 0xdb47, 0xdde0, 0xe1cd, 0xf497, 0x8d4f, 0x1, 0x1);
        gbc.writeMem(0xbb16, { 0xe2 });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdb47);
        EXPECT(gbc.pc(), 0xbb17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb16), 0xe2);
        EXPECT(gbc.readMem(0xffcd), 0xdd);
        // E2 0059
        gbc.setState(0xaa6f, 0xeeb, 0x31d0, 0xe023, 0x96c, 0xfb8, 0x0, 0x1);
        gbc.writeMem(0xaa6f, { 0xe2 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xeeb);
        EXPECT(gbc.pc(), 0xaa70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa6f), 0xe2);
        EXPECT(gbc.readMem(0xff23), 0x31);
        // E2 005B
        gbc.setState(0x4901, 0xc1a4, 0xff50, 0xb788, 0x3466, 0x9fa, 0x1, 0x1);
        gbc.writeMem(0x4901, { 0xe2 });
        gbc.writeMem(0xff88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc1a4);
        EXPECT(gbc.pc(), 0x4902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff88), 0xff);
        // E2 005C
        gbc.setState(0xa48a, 0x5bfd, 0xb10, 0x9264, 0x5202, 0xf065, 0x0, 0x0);
        gbc.writeMem(0xa48a, { 0xe2 });
        gbc.writeMem(0xff64, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5bfd);
        EXPECT(gbc.pc(), 0xa48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa48a), 0xe2);
        EXPECT(gbc.readMem(0xff64), 0xb);
        // E2 005D
        gbc.setState(0x3639, 0xd911, 0x94c0, 0x9c20, 0xb7f4, 0xde, 0x0, 0x1);
        gbc.writeMem(0x3639, { 0xe2 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd911);
        EXPECT(gbc.pc(), 0x363a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff20), 0x94);
        // E2 005E
        gbc.setState(0xcd0f, 0x7931, 0x86a0, 0x6e21, 0xd53f, 0x7581, 0x0, 0x1);
        gbc.writeMem(0xcd0f, { 0xe2 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7931);
        EXPECT(gbc.pc(), 0xcd10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0f), 0xe2);
        EXPECT(gbc.readMem(0xff21), 0x86);
        // E2 005F
        gbc.setState(0x1427, 0x682, 0x9620, 0xb778, 0x8cc7, 0x9553, 0x0, 0x0);
        gbc.writeMem(0x1427, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x682);
        EXPECT(gbc.pc(), 0x1428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff78), 0x96);
        // E2 0060
        gbc.setState(0x6f8a, 0xf04d, 0xb950, 0x59cd, 0x7537, 0x7b81, 0x1, 0x1);
        gbc.writeMem(0x6f8a, { 0xe2 });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf04d);
        EXPECT(gbc.pc(), 0x6f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffcd), 0xb9);
        // E2 0061
        gbc.setState(0x6b10, 0xdcd9, 0x6e50, 0xe9e, 0x8df2, 0xd91a, 0x1, 0x1);
        gbc.writeMem(0x6b10, { 0xe2 });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdcd9);
        EXPECT(gbc.pc(), 0x6b11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9e), 0x6e);
        // E2 0062
        gbc.setState(0x96f9, 0x75a9, 0xa760, 0x179a, 0x2600, 0x9950, 0x0, 0x0);
        gbc.writeMem(0x96f9, { 0xe2 });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x75a9);
        EXPECT(gbc.pc(), 0x96fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96f9), 0xe2);
        EXPECT(gbc.readMem(0xff9a), 0xa7);
        // E2 0063
        gbc.setState(0x8136, 0x3adc, 0xd2c0, 0x418f, 0x17ac, 0x4bbc, 0x0, 0x1);
        gbc.writeMem(0x8136, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3adc);
        EXPECT(gbc.pc(), 0x8137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8136), 0xe2);
        EXPECT(gbc.readMem(0xff8f), 0xd2);
        // E2 0064
        gbc.setState(0xb96, 0xaf69, 0x31d0, 0x8481, 0x9a38, 0x26c2, 0x0, 0x1);
        gbc.writeMem(0xb96, { 0xe2 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xaf69);
        EXPECT(gbc.pc(), 0xb97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff81), 0x31);
        // E2 0065
        gbc.setState(0xad4e, 0xe721, 0x60e0, 0x1e70, 0x44cd, 0x5259, 0x1, 0x1);
        gbc.writeMem(0xad4e, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe721);
        EXPECT(gbc.pc(), 0xad4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad4e), 0xe2);
        EXPECT(gbc.readMem(0xff70), 0x60);
        // E2 0066
        gbc.setState(0x5eb, 0x1ab9, 0x3080, 0x596f, 0x79b0, 0x35aa, 0x1, 0x0);
        gbc.writeMem(0x5eb, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1ab9);
        EXPECT(gbc.pc(), 0x5ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6f), 0x30);
        // E2 0068
        gbc.setState(0x857f, 0xa35f, 0xf550, 0x32c1, 0x1325, 0xa710, 0x1, 0x1);
        gbc.writeMem(0x857f, { 0xe2 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa35f);
        EXPECT(gbc.pc(), 0x8580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x857f), 0xe2);
        EXPECT(gbc.readMem(0xffc1), 0xf5);
        // E2 0069
        gbc.setState(0x41f9, 0x2608, 0xd310, 0x885a, 0xfd2f, 0xa3f5, 0x1, 0x1);
        gbc.writeMem(0x41f9, { 0xe2 });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2608);
        EXPECT(gbc.pc(), 0x41fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5a), 0xd3);
        // E2 006A
        gbc.setState(0x8f65, 0xba3, 0xbfa0, 0x9ede, 0x6890, 0x4d94, 0x1, 0x1);
        gbc.writeMem(0x8f65, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xba3);
        EXPECT(gbc.pc(), 0x8f66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f65), 0xe2);
        EXPECT(gbc.readMem(0xffde), 0xbf);
        // E2 006B
        gbc.setState(0x38a5, 0xc673, 0x2ce0, 0x9694, 0x8dc9, 0xd7da, 0x1, 0x0);
        gbc.writeMem(0x38a5, { 0xe2 });
        gbc.writeMem(0xff94, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc673);
        EXPECT(gbc.pc(), 0x38a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff94), 0x2c);
        // E2 006C
        gbc.setState(0xcc35, 0x3749, 0x8080, 0x55ea, 0xdfdf, 0xc06e, 0x0, 0x0);
        gbc.writeMem(0xcc35, { 0xe2 });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3749);
        EXPECT(gbc.pc(), 0xcc36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc35), 0xe2);
        EXPECT(gbc.readMem(0xffea), 0x80);
        // E2 006D
        gbc.setState(0xb435, 0xea5d, 0xf200, 0x9c40, 0x8536, 0xc7b9, 0x0, 0x1);
        gbc.writeMem(0xb435, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xea5d);
        EXPECT(gbc.pc(), 0xb436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb435), 0xe2);
        EXPECT(gbc.readMem(0xff40), 0xf2);
        // E2 006F
        gbc.setState(0x381e, 0xceb1, 0x230, 0xbd84, 0x4bf0, 0x4c1a, 0x1, 0x0);
        gbc.writeMem(0x381e, { 0xe2 });
        gbc.writeMem(0xff84, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xceb1);
        EXPECT(gbc.pc(), 0x381f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff84), 0x2);
        // E2 0070
        gbc.setState(0x86cc, 0x47d2, 0x4ec0, 0x846c, 0x1213, 0x5506, 0x1, 0x1);
        gbc.writeMem(0x86cc, { 0xe2 });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x47d2);
        EXPECT(gbc.pc(), 0x86cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86cc), 0xe2);
        EXPECT(gbc.readMem(0xff6c), 0x4e);
        // E2 0071
        gbc.setState(0xc399, 0xdde4, 0xfb60, 0x3729, 0xf942, 0xc70c, 0x0, 0x0);
        gbc.writeMem(0xc399, { 0xe2 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xdde4);
        EXPECT(gbc.pc(), 0xc39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc399), 0xe2);
        EXPECT(gbc.readMem(0xff29), 0xfb);
        // E2 0072
        gbc.setState(0xba19, 0x23f6, 0x5a40, 0x8eac, 0xea41, 0x30ec, 0x1, 0x1);
        gbc.writeMem(0xba19, { 0xe2 });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x23f6);
        EXPECT(gbc.pc(), 0xba1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba19), 0xe2);
        EXPECT(gbc.readMem(0xffac), 0x5a);
        // E2 0073
        gbc.setState(0x72b6, 0x462a, 0xf240, 0x6a87, 0xaad3, 0xfefd, 0x1, 0x0);
        gbc.writeMem(0x72b6, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x462a);
        EXPECT(gbc.pc(), 0x72b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff87), 0xf2);
        // E2 0074
        gbc.setState(0x9329, 0x192c, 0xbe20, 0x495e, 0x26cd, 0xfe37, 0x0, 0x1);
        gbc.writeMem(0x9329, { 0xe2 });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x192c);
        EXPECT(gbc.pc(), 0x932a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9329), 0xe2);
        EXPECT(gbc.readMem(0xff5e), 0xbe);
        // E2 0075
        gbc.setState(0x97c5, 0x9f0a, 0xd570, 0xdc6a, 0xfaf4, 0xf944, 0x0, 0x1);
        gbc.writeMem(0x97c5, { 0xe2 });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9f0a);
        EXPECT(gbc.pc(), 0x97c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c5), 0xe2);
        EXPECT(gbc.readMem(0xff6a), 0xd5);
        // E2 0076
        gbc.setState(0x2a87, 0xd711, 0xeaf0, 0xca8b, 0xee8b, 0x9743, 0x0, 0x1);
        gbc.writeMem(0x2a87, { 0xe2 });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd711);
        EXPECT(gbc.pc(), 0x2a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8b), 0xea);
        // E2 0077
        gbc.setState(0x39a6, 0x7662, 0xfdc0, 0x9ac0, 0x28f4, 0x147e, 0x1, 0x1);
        gbc.writeMem(0x39a6, { 0xe2 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7662);
        EXPECT(gbc.pc(), 0x39a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc0), 0xfd);
        // E2 0079
        gbc.setState(0x6d17, 0x74fe, 0xc740, 0x74ca, 0x46e6, 0x1bec, 0x0, 0x1);
        gbc.writeMem(0x6d17, { 0xe2 });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x74fe);
        EXPECT(gbc.pc(), 0x6d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffca), 0xc7);
        // E2 007A
        gbc.setState(0xa4b5, 0xfc8d, 0xd170, 0xb245, 0x9e6f, 0xe80e, 0x1, 0x1);
        gbc.writeMem(0xa4b5, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfc8d);
        EXPECT(gbc.pc(), 0xa4b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b5), 0xe2);
        EXPECT(gbc.readMem(0xff45), 0xd1);
        // E2 007B
        gbc.setState(0xed09, 0xb1ec, 0x4ee0, 0x4469, 0xc54e, 0x4bba, 0x1, 0x1);
        gbc.writeMem(0xed09, { 0xe2 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb1ec);
        EXPECT(gbc.pc(), 0xed0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed09), 0xe2);
        EXPECT(gbc.readMem(0xff69), 0x4e);
        // E2 007C
        gbc.setState(0x2105, 0x536c, 0x8790, 0x1259, 0x410a, 0xaa36, 0x0, 0x1);
        gbc.writeMem(0x2105, { 0xe2 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x536c);
        EXPECT(gbc.pc(), 0x2106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff59), 0x87);
        // E2 007E
        gbc.setState(0xe0de, 0xae1b, 0x4c80, 0xd348, 0xa38d, 0xb37b, 0x0, 0x1);
        gbc.writeMem(0xe0de, { 0xe2 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xae1b);
        EXPECT(gbc.pc(), 0xe0df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0de), 0xe2);
        EXPECT(gbc.readMem(0xff48), 0x4c);
        // E2 007F
        gbc.setState(0x4982, 0x3d84, 0x8770, 0x29e1, 0x7fa9, 0x2b80, 0x1, 0x1);
        gbc.writeMem(0x4982, { 0xe2 });
        gbc.writeMem(0xffe1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3d84);
        EXPECT(gbc.pc(), 0x4983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe1), 0x87);
        // E2 0080
        gbc.setState(0x4f07, 0xc610, 0x1b90, 0x8c3, 0x6189, 0xec20, 0x0, 0x1);
        gbc.writeMem(0x4f07, { 0xe2 });
        gbc.writeMem(0xffc3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc610);
        EXPECT(gbc.pc(), 0x4f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc3), 0x1b);
        // E2 0081
        gbc.setState(0xa66c, 0xf6c9, 0x8e10, 0x87dd, 0x818, 0xf3e6, 0x1, 0x0);
        gbc.writeMem(0xa66c, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf6c9);
        EXPECT(gbc.pc(), 0xa66d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa66c), 0xe2);
        EXPECT(gbc.readMem(0xffdd), 0x8e);
        // E2 0082
        gbc.setState(0x32dc, 0xd076, 0xac40, 0x2d88, 0xcb1b, 0xb6f, 0x1, 0x0);
        gbc.writeMem(0x32dc, { 0xe2 });
        gbc.writeMem(0xff88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd076);
        EXPECT(gbc.pc(), 0x32dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff88), 0xac);
        // E2 0083
        gbc.setState(0xc607, 0x6c77, 0xd620, 0x56c6, 0x1a3c, 0x3058, 0x1, 0x0);
        gbc.writeMem(0xc607, { 0xe2 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6c77);
        EXPECT(gbc.pc(), 0xc608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc607), 0xe2);
        EXPECT(gbc.readMem(0xffc6), 0xd6);
        // E2 0084
        gbc.setState(0x7d40, 0xec24, 0xdda0, 0x680a, 0xed31, 0x57cf, 0x0, 0x1);
        gbc.writeMem(0x7d40, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xec24);
        EXPECT(gbc.pc(), 0x7d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0a), 0xdd);
        // E2 0085
        gbc.setState(0xb327, 0xa1a2, 0x2a10, 0xd548, 0xdc10, 0xdca0, 0x0, 0x1);
        gbc.writeMem(0xb327, { 0xe2 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa1a2);
        EXPECT(gbc.pc(), 0xb328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb327), 0xe2);
        EXPECT(gbc.readMem(0xff48), 0x2a);
        // E2 0088
        gbc.setState(0x3469, 0x2aa0, 0x6e90, 0xbaee, 0x1880, 0xf97, 0x1, 0x1);
        gbc.writeMem(0x3469, { 0xe2 });
        gbc.writeMem(0xffee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2aa0);
        EXPECT(gbc.pc(), 0x346a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffee), 0x6e);
        // E2 0089
        gbc.setState(0x3b5b, 0x5e01, 0xd50, 0xa003, 0xac88, 0xdba, 0x1, 0x1);
        gbc.writeMem(0x3b5b, { 0xe2 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5e01);
        EXPECT(gbc.pc(), 0x3b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff03), 0xd);
        // E2 008A
        gbc.setState(0x824, 0xb43, 0x74a0, 0x1b45, 0xcd8f, 0x9af6, 0x1, 0x1);
        gbc.writeMem(0x824, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb43);
        EXPECT(gbc.pc(), 0x825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff45), 0x74);
        // E2 008B
        gbc.setState(0x58bd, 0xbeee, 0x6330, 0x9a15, 0x42bb, 0xe3d1, 0x1, 0x0);
        gbc.writeMem(0x58bd, { 0xe2 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbeee);
        EXPECT(gbc.pc(), 0x58be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff15), 0x63);
        // E2 008D
        gbc.setState(0xb3e4, 0x52e1, 0xcea0, 0x422, 0x8e30, 0x3bc0, 0x0, 0x1);
        gbc.writeMem(0xb3e4, { 0xe2 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x52e1);
        EXPECT(gbc.pc(), 0xb3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3e4), 0xe2);
        EXPECT(gbc.readMem(0xff22), 0xce);
        // E2 008E
        gbc.setState(0x9b72, 0x82db, 0x6cd0, 0x2118, 0x6c41, 0x3377, 0x1, 0x0);
        gbc.writeMem(0x9b72, { 0xe2 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x82db);
        EXPECT(gbc.pc(), 0x9b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b72), 0xe2);
        EXPECT(gbc.readMem(0xff18), 0x6c);
        // E2 008F
        gbc.setState(0xb09b, 0x5fa6, 0xef40, 0x287e, 0xc15c, 0x9e3d, 0x1, 0x1);
        gbc.writeMem(0xb09b, { 0xe2 });
        gbc.writeMem(0xff7e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5fa6);
        EXPECT(gbc.pc(), 0xb09c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09b), 0xe2);
        EXPECT(gbc.readMem(0xff7e), 0xef);
        // E2 0090
        gbc.setState(0xbc7d, 0xce1a, 0xbce0, 0xf616, 0xc808, 0x784e, 0x0, 0x0);
        gbc.writeMem(0xbc7d, { 0xe2 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xce1a);
        EXPECT(gbc.pc(), 0xbc7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7d), 0xe2);
        EXPECT(gbc.readMem(0xff16), 0xbc);
        // E2 0091
        gbc.setState(0xa811, 0x68f2, 0xb270, 0xa183, 0xae27, 0xb753, 0x1, 0x1);
        gbc.writeMem(0xa811, { 0xe2 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x68f2);
        EXPECT(gbc.pc(), 0xa812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa811), 0xe2);
        EXPECT(gbc.readMem(0xff83), 0xb2);
        // E2 0092
        gbc.setState(0x738, 0xfe5c, 0x5d40, 0xc5cd, 0x709a, 0x1f81, 0x0, 0x0);
        gbc.writeMem(0x738, { 0xe2 });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfe5c);
        EXPECT(gbc.pc(), 0x739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffcd), 0x5d);
        // E2 0093
        gbc.setState(0x2c9f, 0xd902, 0xc3f0, 0xf11b, 0xdaf, 0x297b, 0x1, 0x1);
        gbc.writeMem(0x2c9f, { 0xe2 });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd902);
        EXPECT(gbc.pc(), 0x2ca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1b), 0xc3);
        // E2 0094
        gbc.setState(0x8f1b, 0xaae7, 0xcda0, 0x23c5, 0x5075, 0xdb9b, 0x0, 0x1);
        gbc.writeMem(0x8f1b, { 0xe2 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xaae7);
        EXPECT(gbc.pc(), 0x8f1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1b), 0xe2);
        EXPECT(gbc.readMem(0xffc5), 0xcd);
        // E2 0095
        gbc.setState(0x201f, 0x2254, 0xc1d0, 0x6af, 0x4334, 0xf9ec, 0x1, 0x1);
        gbc.writeMem(0x201f, { 0xe2 });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2254);
        EXPECT(gbc.pc(), 0x2020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffaf), 0xc1);
        // E2 0096
        gbc.setState(0x1932, 0x53af, 0xf6d0, 0xc931, 0x9cce, 0x2c6, 0x1, 0x0);
        gbc.writeMem(0x1932, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x53af);
        EXPECT(gbc.pc(), 0x1933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff31), 0xf6);
        // E2 0098
        gbc.setState(0xbc51, 0x6306, 0x94c0, 0x33ce, 0x5740, 0x3e3a, 0x0, 0x1);
        gbc.writeMem(0xbc51, { 0xe2 });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6306);
        EXPECT(gbc.pc(), 0xbc52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc51), 0xe2);
        EXPECT(gbc.readMem(0xffce), 0x94);
        // E2 0099
        gbc.setState(0x37eb, 0x4563, 0xa040, 0x1112, 0xf2ca, 0x678d, 0x0, 0x0);
        gbc.writeMem(0x37eb, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4563);
        EXPECT(gbc.pc(), 0x37ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff12), 0xa0);
        // E2 009A
        gbc.setState(0x90c0, 0xbe22, 0x2f70, 0x930c, 0xfd1a, 0xf78e, 0x0, 0x1);
        gbc.writeMem(0x90c0, { 0xe2 });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbe22);
        EXPECT(gbc.pc(), 0x90c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c0), 0xe2);
        EXPECT(gbc.readMem(0xff0c), 0x2f);
        // E2 009B
        gbc.setState(0x7bed, 0xece3, 0xc80, 0x8d7e, 0x10d1, 0x169d, 0x1, 0x1);
        gbc.writeMem(0x7bed, { 0xe2 });
        gbc.writeMem(0xff7e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xece3);
        EXPECT(gbc.pc(), 0x7bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff7e), 0xc);
        // E2 009C
        gbc.setState(0x36f5, 0x1460, 0x5240, 0xa878, 0x4c09, 0x4264, 0x0, 0x1);
        gbc.writeMem(0x36f5, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1460);
        EXPECT(gbc.pc(), 0x36f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff78), 0x52);
        // E2 009D
        gbc.setState(0xaa9c, 0x3fbd, 0xbf00, 0x44f, 0x8de9, 0x986a, 0x0, 0x0);
        gbc.writeMem(0xaa9c, { 0xe2 });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3fbd);
        EXPECT(gbc.pc(), 0xaa9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa9c), 0xe2);
        EXPECT(gbc.readMem(0xff4f), 0xbf);
        // E2 009E
        gbc.setState(0x6288, 0xdddb, 0x2080, 0x249, 0x4d5f, 0x1052, 0x1, 0x0);
        gbc.writeMem(0x6288, { 0xe2 });
        gbc.writeMem(0xff49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xdddb);
        EXPECT(gbc.pc(), 0x6289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff49), 0x20);
        // E2 009F
        gbc.setState(0x565a, 0x2f7, 0xc670, 0x2551, 0xc6de, 0xea0, 0x0, 0x0);
        gbc.writeMem(0x565a, { 0xe2 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2f7);
        EXPECT(gbc.pc(), 0x565b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff51), 0xc6);
        // E2 00A0
        gbc.setState(0x8482, 0xf4e6, 0xffb0, 0xeed2, 0xca61, 0xecb0, 0x0, 0x1);
        gbc.writeMem(0x8482, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf4e6);
        EXPECT(gbc.pc(), 0x8483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8482), 0xe2);
        EXPECT(gbc.readMem(0xffd2), 0xff);
        // E2 00A1
        gbc.setState(0x256c, 0xdb1e, 0xccc0, 0x89d1, 0xd331, 0x5c03, 0x0, 0x0);
        gbc.writeMem(0x256c, { 0xe2 });
        gbc.writeMem(0xffd1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdb1e);
        EXPECT(gbc.pc(), 0x256d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd1), 0xcc);
        // E2 00A2
        gbc.setState(0x2582, 0xb63, 0xebf0, 0xd89c, 0x63ce, 0xb010, 0x1, 0x0);
        gbc.writeMem(0x2582, { 0xe2 });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb63);
        EXPECT(gbc.pc(), 0x2583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9c), 0xeb);
        // E2 00A3
        gbc.setState(0x2fc1, 0x567a, 0x78b0, 0x2026, 0xec3b, 0x1cb9, 0x1, 0x0);
        gbc.writeMem(0x2fc1, { 0xe2 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x567a);
        EXPECT(gbc.pc(), 0x2fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff26), 0x78);
        // E2 00A4
        gbc.setState(0x238, 0x4560, 0xb080, 0xe4f6, 0x4297, 0xae6b, 0x0, 0x1);
        gbc.writeMem(0x238, { 0xe2 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4560);
        EXPECT(gbc.pc(), 0x239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff6), 0xb0);
        // E2 00A5
        gbc.setState(0x5f4e, 0xf360, 0x78e0, 0xdd7d, 0xd849, 0x723f, 0x1, 0x1);
        gbc.writeMem(0x5f4e, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf360);
        EXPECT(gbc.pc(), 0x5f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff7d), 0x78);
        // E2 00A6
        gbc.setState(0x7995, 0x75ec, 0x5350, 0x3818, 0x5c9e, 0xb136, 0x1, 0x1);
        gbc.writeMem(0x7995, { 0xe2 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x75ec);
        EXPECT(gbc.pc(), 0x7996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff18), 0x53);
        // E2 00A7
        gbc.setState(0x598c, 0xe446, 0xa3e0, 0xa7de, 0x8e90, 0x889c, 0x1, 0x1);
        gbc.writeMem(0x598c, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe446);
        EXPECT(gbc.pc(), 0x598d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffde), 0xa3);
        // E2 00A8
        gbc.setState(0x6098, 0x693b, 0xabc0, 0xf731, 0x49fb, 0x1183, 0x0, 0x1);
        gbc.writeMem(0x6098, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x693b);
        EXPECT(gbc.pc(), 0x6099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff31), 0xab);
        // E2 00A9
        gbc.setState(0x5e54, 0xdf58, 0x6330, 0x50a9, 0x73a0, 0xf1e6, 0x1, 0x0);
        gbc.writeMem(0x5e54, { 0xe2 });
        gbc.writeMem(0xffa9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdf58);
        EXPECT(gbc.pc(), 0x5e55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffa9), 0x63);
        // E2 00AA
        gbc.setState(0x8743, 0xb579, 0x1ef0, 0x593b, 0x6aad, 0x7694, 0x1, 0x1);
        gbc.writeMem(0x8743, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb579);
        EXPECT(gbc.pc(), 0x8744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8743), 0xe2);
        EXPECT(gbc.readMem(0xff3b), 0x1e);
        // E2 00AB
        gbc.setState(0x743b, 0xf11c, 0x4950, 0xe1df, 0x4fc7, 0x5439, 0x0, 0x1);
        gbc.writeMem(0x743b, { 0xe2 });
        gbc.writeMem(0xffdf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf11c);
        EXPECT(gbc.pc(), 0x743c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffdf), 0x49);
        // E2 00AC
        gbc.setState(0x5fdc, 0xe7ce, 0xb770, 0xfc44, 0xa86c, 0xfa9e, 0x1, 0x1);
        gbc.writeMem(0x5fdc, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe7ce);
        EXPECT(gbc.pc(), 0x5fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff44), 0xb7);
        // E2 00AD
        gbc.setState(0x469b, 0xab3a, 0x77c0, 0xd765, 0x42e4, 0xc4c8, 0x1, 0x0);
        gbc.writeMem(0x469b, { 0xe2 });
        gbc.writeMem(0xff65, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xab3a);
        EXPECT(gbc.pc(), 0x469c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff65), 0x77);
        // E2 00AE
        gbc.setState(0x83a2, 0xd037, 0x7080, 0x31a, 0x7dfb, 0x1e82, 0x0, 0x0);
        gbc.writeMem(0x83a2, { 0xe2 });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd037);
        EXPECT(gbc.pc(), 0x83a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a2), 0xe2);
        EXPECT(gbc.readMem(0xff1a), 0x70);
        // E2 00AF
        gbc.setState(0x464e, 0x9b2d, 0xfa90, 0x39e7, 0x77e0, 0x3d66, 0x1, 0x1);
        gbc.writeMem(0x464e, { 0xe2 });
        gbc.writeMem(0xffe7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9b2d);
        EXPECT(gbc.pc(), 0x464f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe7), 0xfa);
        // E2 00B0
        gbc.setState(0xa78c, 0xf700, 0xec40, 0xc2d1, 0xf6d5, 0xdcc5, 0x1, 0x1);
        gbc.writeMem(0xa78c, { 0xe2 });
        gbc.writeMem(0xffd1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf700);
        EXPECT(gbc.pc(), 0xa78d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa78c), 0xe2);
        EXPECT(gbc.readMem(0xffd1), 0xec);
        // E2 00B1
        gbc.setState(0x5a5, 0xa5a8, 0x3800, 0xe78f, 0x1271, 0xe695, 0x0, 0x1);
        gbc.writeMem(0x5a5, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa5a8);
        EXPECT(gbc.pc(), 0x5a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8f), 0x38);
        // E2 00B2
        gbc.setState(0x5dfd, 0x4c90, 0x9640, 0x2b8e, 0x5771, 0x890b, 0x1, 0x1);
        gbc.writeMem(0x5dfd, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4c90);
        EXPECT(gbc.pc(), 0x5dfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8e), 0x96);
        // E2 00B3
        gbc.setState(0x1e00, 0x12d6, 0x9ed0, 0x96b0, 0x7c61, 0x633f, 0x0, 0x1);
        gbc.writeMem(0x1e00, { 0xe2 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x12d6);
        EXPECT(gbc.pc(), 0x1e01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb0), 0x9e);
        // E2 00B4
        gbc.setState(0xdd87, 0xd3ad, 0xf100, 0x57c4, 0x803, 0xd25c, 0x1, 0x1);
        gbc.writeMem(0xdd87, { 0xe2 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd3ad);
        EXPECT(gbc.pc(), 0xdd88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd87), 0xe2);
        EXPECT(gbc.readMem(0xffc4), 0xf1);
        // E2 00B5
        gbc.setState(0xb03f, 0x9494, 0x14a0, 0xeeef, 0x7ebe, 0x5a49, 0x1, 0x1);
        gbc.writeMem(0xb03f, { 0xe2 });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9494);
        EXPECT(gbc.pc(), 0xb040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb03f), 0xe2);
        EXPECT(gbc.readMem(0xffef), 0x14);
        // E2 00B6
        gbc.setState(0x2e27, 0xe515, 0x8cd0, 0x90e4, 0x420d, 0x3713, 0x0, 0x0);
        gbc.writeMem(0x2e27, { 0xe2 });
        gbc.writeMem(0xffe4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe515);
        EXPECT(gbc.pc(), 0x2e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe4), 0x8c);
        // E2 00B7
        gbc.setState(0xa234, 0xffc7, 0xacc0, 0x3c31, 0x6f6d, 0x791b, 0x1, 0x0);
        gbc.writeMem(0xa234, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xffc7);
        EXPECT(gbc.pc(), 0xa235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa234), 0xe2);
        EXPECT(gbc.readMem(0xff31), 0xac);
        // E2 00B8
        gbc.setState(0x7124, 0x5b54, 0x51c0, 0xddbe, 0xa7da, 0x139d, 0x1, 0x1);
        gbc.writeMem(0x7124, { 0xe2 });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5b54);
        EXPECT(gbc.pc(), 0x7125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffbe), 0x51);
        // E2 00B9
        gbc.setState(0x1bb0, 0x318a, 0x3b00, 0xcb9d, 0x67f1, 0xd3a2, 0x1, 0x0);
        gbc.writeMem(0x1bb0, { 0xe2 });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x318a);
        EXPECT(gbc.pc(), 0x1bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9d), 0x3b);
        // E2 00BA
        gbc.setState(0x6778, 0xb0d0, 0x3c90, 0x407b, 0xc81a, 0x868e, 0x0, 0x1);
        gbc.writeMem(0x6778, { 0xe2 });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb0d0);
        EXPECT(gbc.pc(), 0x6779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7b), 0x3c);
        // E2 00BB
        gbc.setState(0x65f2, 0xdcb3, 0x4830, 0x1d2a, 0x4427, 0x462d, 0x1, 0x0);
        gbc.writeMem(0x65f2, { 0xe2 });
        gbc.writeMem(0xff2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xdcb3);
        EXPECT(gbc.pc(), 0x65f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2a), 0x48);
        // E2 00BC
        gbc.setState(0x84f7, 0x33, 0x18f0, 0x456c, 0x2270, 0x9404, 0x0, 0x0);
        gbc.writeMem(0x84f7, { 0xe2 });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x33);
        EXPECT(gbc.pc(), 0x84f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f7), 0xe2);
        EXPECT(gbc.readMem(0xff6c), 0x18);
        // E2 00BD
        gbc.setState(0xbe53, 0x3f0d, 0x32f0, 0x9603, 0x44b, 0x3574, 0x1, 0x0);
        gbc.writeMem(0xbe53, { 0xe2 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3f0d);
        EXPECT(gbc.pc(), 0xbe54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe53), 0xe2);
        EXPECT(gbc.readMem(0xff03), 0x32);
        // E2 00BF
        gbc.setState(0xbd1c, 0x1714, 0xfc10, 0x661b, 0xa21, 0x7aaa, 0x1, 0x1);
        gbc.writeMem(0xbd1c, { 0xe2 });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1714);
        EXPECT(gbc.pc(), 0xbd1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd1c), 0xe2);
        EXPECT(gbc.readMem(0xff1b), 0xfc);
        // E2 00C0
        gbc.setState(0x3f96, 0xa8a, 0xf4c0, 0x6476, 0x5038, 0xd3b3, 0x1, 0x1);
        gbc.writeMem(0x3f96, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa8a);
        EXPECT(gbc.pc(), 0x3f97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff76), 0xf4);
        // E2 00C2
        gbc.setState(0x310, 0x6636, 0x32d0, 0xab4, 0x7900, 0x5ee, 0x1, 0x0);
        gbc.writeMem(0x310, { 0xe2 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6636);
        EXPECT(gbc.pc(), 0x311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb4), 0x32);
        // E2 00C3
        gbc.setState(0x9923, 0xa251, 0x79a0, 0xf040, 0x108c, 0x3300, 0x0, 0x0);
        gbc.writeMem(0x9923, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa251);
        EXPECT(gbc.pc(), 0x9924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9923), 0xe2);
        EXPECT(gbc.readMem(0xff40), 0x79);
        // E2 00C4
        gbc.setState(0xb489, 0x5292, 0x8fb0, 0x18aa, 0xbeb1, 0xbfd7, 0x0, 0x0);
        gbc.writeMem(0xb489, { 0xe2 });
        gbc.writeMem(0xffaa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5292);
        EXPECT(gbc.pc(), 0xb48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb489), 0xe2);
        EXPECT(gbc.readMem(0xffaa), 0x8f);
        // E2 00C5
        gbc.setState(0x6b4d, 0xef82, 0x8dd0, 0x683b, 0x32fa, 0xae7b, 0x0, 0x1);
        gbc.writeMem(0x6b4d, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xef82);
        EXPECT(gbc.pc(), 0x6b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff3b), 0x8d);
        // E2 00C6
        gbc.setState(0x28f, 0x481a, 0x4a40, 0x5439, 0x58f9, 0xbd25, 0x0, 0x1);
        gbc.writeMem(0x28f, { 0xe2 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x481a);
        EXPECT(gbc.pc(), 0x290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff39), 0x4a);
        // E2 00C7
        gbc.setState(0x75a6, 0x6688, 0x6fc0, 0x8d4, 0x5f7, 0xeb48, 0x1, 0x1);
        gbc.writeMem(0x75a6, { 0xe2 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6688);
        EXPECT(gbc.pc(), 0x75a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd4), 0x6f);
        // E2 00C8
        gbc.setState(0xd6af, 0xf4e6, 0x5b70, 0xb877, 0x5d3d, 0x4a93, 0x0, 0x0);
        gbc.writeMem(0xd6af, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf4e6);
        EXPECT(gbc.pc(), 0xd6b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6af), 0xe2);
        EXPECT(gbc.readMem(0xff77), 0x5b);
        // E2 00C9
        gbc.setState(0x60e8, 0xbb53, 0x71c0, 0x9bdd, 0x102, 0xd049, 0x0, 0x0);
        gbc.writeMem(0x60e8, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbb53);
        EXPECT(gbc.pc(), 0x60e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffdd), 0x71);
        // E2 00CA
        gbc.setState(0xcf64, 0xd6cc, 0xee50, 0xdfef, 0xbf0d, 0x1714, 0x0, 0x0);
        gbc.writeMem(0xcf64, { 0xe2 });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd6cc);
        EXPECT(gbc.pc(), 0xcf65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf64), 0xe2);
        EXPECT(gbc.readMem(0xffef), 0xee);
        // E2 00CB
        gbc.setState(0xe23d, 0x3b7f, 0xcd0, 0x865b, 0x6e71, 0xbfce, 0x0, 0x1);
        gbc.writeMem(0xe23d, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3b7f);
        EXPECT(gbc.pc(), 0xe23e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe23d), 0xe2);
        EXPECT(gbc.readMem(0xff5b), 0xc);
        // E2 00CC
        gbc.setState(0x29b2, 0xaa4a, 0xf080, 0xd08d, 0xcda3, 0xdc48, 0x1, 0x0);
        gbc.writeMem(0x29b2, { 0xe2 });
        gbc.writeMem(0xff8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xaa4a);
        EXPECT(gbc.pc(), 0x29b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8d), 0xf0);
        // E2 00CD
        gbc.setState(0xe12d, 0x243b, 0xae40, 0xa0d4, 0x3699, 0x6a37, 0x0, 0x1);
        gbc.writeMem(0xe12d, { 0xe2 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x243b);
        EXPECT(gbc.pc(), 0xe12e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe12d), 0xe2);
        EXPECT(gbc.readMem(0xffd4), 0xae);
        // E2 00CE
        gbc.setState(0x267c, 0x3679, 0x6a80, 0x1893, 0xd9ea, 0x4043, 0x0, 0x0);
        gbc.writeMem(0x267c, { 0xe2 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3679);
        EXPECT(gbc.pc(), 0x267d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff93), 0x6a);
        // E2 00CF
        gbc.setState(0xe32, 0xe887, 0xe170, 0x8836, 0x9c3a, 0xc1ec, 0x1, 0x1);
        gbc.writeMem(0xe32, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe887);
        EXPECT(gbc.pc(), 0xe33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff36), 0xe1);
        // E2 00D0
        gbc.setState(0xa647, 0x2db, 0xfe0, 0x4fb9, 0x8a7d, 0x238c, 0x1, 0x0);
        gbc.writeMem(0xa647, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2db);
        EXPECT(gbc.pc(), 0xa648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa647), 0xe2);
        EXPECT(gbc.readMem(0xffb9), 0xf);
        // E2 00D1
        gbc.setState(0x488e, 0x62ba, 0x2230, 0xb60a, 0x5d83, 0x5b77, 0x1, 0x1);
        gbc.writeMem(0x488e, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x62ba);
        EXPECT(gbc.pc(), 0x488f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0a), 0x22);
        // E2 00D2
        gbc.setState(0x6ad8, 0x42d4, 0x3cd0, 0x2f8c, 0x8833, 0x8159, 0x0, 0x1);
        gbc.writeMem(0x6ad8, { 0xe2 });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x42d4);
        EXPECT(gbc.pc(), 0x6ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8c), 0x3c);
        // E2 00D3
        gbc.setState(0xca6f, 0xe916, 0x73f0, 0x3a1d, 0x9031, 0x93a5, 0x1, 0x0);
        gbc.writeMem(0xca6f, { 0xe2 });
        gbc.writeMem(0xff1d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe916);
        EXPECT(gbc.pc(), 0xca70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6f), 0xe2);
        EXPECT(gbc.readMem(0xff1d), 0x73);
        // E2 00D4
        gbc.setState(0x5e0e, 0x4df3, 0x1670, 0xaa0c, 0xdd7e, 0x1095, 0x0, 0x1);
        gbc.writeMem(0x5e0e, { 0xe2 });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4df3);
        EXPECT(gbc.pc(), 0x5e0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0c), 0x16);
        // E2 00D5
        gbc.setState(0x1bc8, 0xe25, 0x6290, 0x3e45, 0x4f24, 0x320e, 0x1, 0x1);
        gbc.writeMem(0x1bc8, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe25);
        EXPECT(gbc.pc(), 0x1bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff45), 0x62);
        // E2 00D6
        gbc.setState(0x9e5d, 0x5e20, 0x3170, 0x1cd2, 0xfa61, 0x149b, 0x1, 0x0);
        gbc.writeMem(0x9e5d, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5e20);
        EXPECT(gbc.pc(), 0x9e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e5d), 0xe2);
        EXPECT(gbc.readMem(0xffd2), 0x31);
        // E2 00D7
        gbc.setState(0xb9c3, 0xda14, 0x8410, 0x1ba, 0x9a12, 0x405e, 0x1, 0x1);
        gbc.writeMem(0xb9c3, { 0xe2 });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xda14);
        EXPECT(gbc.pc(), 0xb9c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9c3), 0xe2);
        EXPECT(gbc.readMem(0xffba), 0x84);
        // E2 00D8
        gbc.setState(0xa5c5, 0x20ac, 0xb4e0, 0xbf9b, 0x6952, 0xc12b, 0x0, 0x1);
        gbc.writeMem(0xa5c5, { 0xe2 });
        gbc.writeMem(0xff9b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x20ac);
        EXPECT(gbc.pc(), 0xa5c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c5), 0xe2);
        EXPECT(gbc.readMem(0xff9b), 0xb4);
        // E2 00D9
        gbc.setState(0xc9ae, 0x5189, 0xf150, 0xe453, 0xba50, 0x9f6f, 0x0, 0x1);
        gbc.writeMem(0xc9ae, { 0xe2 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5189);
        EXPECT(gbc.pc(), 0xc9af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ae), 0xe2);
        EXPECT(gbc.readMem(0xff53), 0xf1);
        // E2 00DA
        gbc.setState(0x66ed, 0x41be, 0xaed0, 0x2b63, 0xbcd0, 0xe947, 0x0, 0x1);
        gbc.writeMem(0x66ed, { 0xe2 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x41be);
        EXPECT(gbc.pc(), 0x66ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff63), 0xae);
        // E2 00DD
        gbc.setState(0x3197, 0x5b6a, 0xeb60, 0x37d2, 0xc84, 0xbcd6, 0x0, 0x1);
        gbc.writeMem(0x3197, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5b6a);
        EXPECT(gbc.pc(), 0x3198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd2), 0xeb);
        // E2 00DF
        gbc.setState(0x6dd5, 0x3f59, 0x9ea0, 0x97e1, 0xd55d, 0x5ba6, 0x1, 0x1);
        gbc.writeMem(0x6dd5, { 0xe2 });
        gbc.writeMem(0xffe1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3f59);
        EXPECT(gbc.pc(), 0x6dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe1), 0x9e);
        // E2 00E0
        gbc.setState(0x75c5, 0xf61f, 0xc480, 0xf8ae, 0xa190, 0xe5a9, 0x0, 0x1);
        gbc.writeMem(0x75c5, { 0xe2 });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf61f);
        EXPECT(gbc.pc(), 0x75c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffae), 0xc4);
        // E2 00E1
        gbc.setState(0x9e28, 0xf4, 0x25c0, 0x60f8, 0xe1b4, 0x9d11, 0x1, 0x0);
        gbc.writeMem(0x9e28, { 0xe2 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf4);
        EXPECT(gbc.pc(), 0x9e29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e28), 0xe2);
        EXPECT(gbc.readMem(0xfff8), 0x25);
        // E2 00E2
        gbc.setState(0xddd2, 0x1d7e, 0x1990, 0x222b, 0x67ae, 0xe47e, 0x1, 0x0);
        gbc.writeMem(0xddd2, { 0xe2 });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1d7e);
        EXPECT(gbc.pc(), 0xddd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd2), 0xe2);
        EXPECT(gbc.readMem(0xff2b), 0x19);
        // E2 00E3
        gbc.setState(0xa545, 0x878f, 0x980, 0x1c66, 0x474e, 0x6531, 0x0, 0x0);
        gbc.writeMem(0xa545, { 0xe2 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x878f);
        EXPECT(gbc.pc(), 0xa546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa545), 0xe2);
        EXPECT(gbc.readMem(0xff66), 0x9);
        // E2 00E4
        gbc.setState(0xd46e, 0x72cf, 0x1540, 0x2be, 0xe034, 0xba62, 0x1, 0x1);
        gbc.writeMem(0xd46e, { 0xe2 });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x72cf);
        EXPECT(gbc.pc(), 0xd46f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd46e), 0xe2);
        EXPECT(gbc.readMem(0xffbe), 0x15);
        // E2 00E5
        gbc.setState(0x6cf2, 0xae68, 0x2410, 0x29b4, 0x17ae, 0x5e9c, 0x0, 0x1);
        gbc.writeMem(0x6cf2, { 0xe2 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xae68);
        EXPECT(gbc.pc(), 0x6cf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb4), 0x24);
        // E2 00E6
        gbc.setState(0xc6f5, 0x1421, 0xdb60, 0x2ff1, 0x5260, 0x1184, 0x0, 0x1);
        gbc.writeMem(0xc6f5, { 0xe2 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1421);
        EXPECT(gbc.pc(), 0xc6f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6f5), 0xe2);
        EXPECT(gbc.readMem(0xfff1), 0xdb);
        // E2 00E7
        gbc.setState(0x1cd5, 0xd7ed, 0xefe0, 0x7592, 0x871, 0x592c, 0x0, 0x0);
        gbc.writeMem(0x1cd5, { 0xe2 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd7ed);
        EXPECT(gbc.pc(), 0x1cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff92), 0xef);
        // E2 00E8
        gbc.setState(0x9bd2, 0x7dbb, 0x8570, 0xbc01, 0xfecb, 0x6dd8, 0x0, 0x0);
        gbc.writeMem(0x9bd2, { 0xe2 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7dbb);
        EXPECT(gbc.pc(), 0x9bd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd2), 0xe2);
        EXPECT(gbc.readMem(0xff01), 0x85);
        // E2 00E9
        gbc.setState(0x4148, 0x1a1e, 0x2220, 0x5e50, 0x7b0, 0xeb43, 0x1, 0x0);
        gbc.writeMem(0x4148, { 0xe2 });
        gbc.writeMem(0xff50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1a1e);
        EXPECT(gbc.pc(), 0x4149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff50), 0x22);
        // E2 00EA
        gbc.setState(0xba52, 0xf46d, 0xe500, 0xf182, 0x931c, 0x62f0, 0x1, 0x0);
        gbc.writeMem(0xba52, { 0xe2 });
        gbc.writeMem(0xff82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf46d);
        EXPECT(gbc.pc(), 0xba53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba52), 0xe2);
        EXPECT(gbc.readMem(0xff82), 0xe5);
        // E2 00EB
        gbc.setState(0x7b62, 0x137b, 0x2040, 0x86b4, 0x8ef6, 0x58bb, 0x0, 0x1);
        gbc.writeMem(0x7b62, { 0xe2 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x137b);
        EXPECT(gbc.pc(), 0x7b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb4), 0x20);
        // E2 00EC
        gbc.setState(0x9a08, 0x6e2d, 0x18c0, 0x27b6, 0x5b5b, 0xaaf7, 0x1, 0x1);
        gbc.writeMem(0x9a08, { 0xe2 });
        gbc.writeMem(0xffb6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6e2d);
        EXPECT(gbc.pc(), 0x9a09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a08), 0xe2);
        EXPECT(gbc.readMem(0xffb6), 0x18);
        // E2 00ED
        gbc.setState(0x51d1, 0xb2ee, 0x780, 0x682d, 0x8e04, 0x2eb8, 0x1, 0x0);
        gbc.writeMem(0x51d1, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb2ee);
        EXPECT(gbc.pc(), 0x51d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff2d), 0x7);
        // E2 00EE
        gbc.setState(0xc091, 0x68d8, 0x9670, 0xc09f, 0xde7e, 0x16f1, 0x1, 0x1);
        gbc.writeMem(0xc091, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x68d8);
        EXPECT(gbc.pc(), 0xc092);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc091), 0xe2);
        EXPECT(gbc.readMem(0xff9f), 0x96);
        // E2 00EF
        gbc.setState(0x1eaf, 0xdc7b, 0xa5d0, 0xa5b0, 0x2c87, 0x699, 0x1, 0x1);
        gbc.writeMem(0x1eaf, { 0xe2 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdc7b);
        EXPECT(gbc.pc(), 0x1eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb0), 0xa5);
        // E2 00F0
        gbc.setState(0x5561, 0xe5db, 0x1420, 0xb7ef, 0x6cad, 0xf88f, 0x0, 0x1);
        gbc.writeMem(0x5561, { 0xe2 });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe5db);
        EXPECT(gbc.pc(), 0x5562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffef), 0x14);
        // E2 00F1
        gbc.setState(0xd8a1, 0xed40, 0x7fa0, 0xfa4b, 0xd0b2, 0xfadb, 0x1, 0x1);
        gbc.writeMem(0xd8a1, { 0xe2 });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xed40);
        EXPECT(gbc.pc(), 0xd8a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8a1), 0xe2);
        EXPECT(gbc.readMem(0xff4b), 0x7f);
        // E2 00F2
        gbc.setState(0x9bb0, 0x262a, 0xc890, 0x9bdd, 0x5048, 0x27aa, 0x1, 0x1);
        gbc.writeMem(0x9bb0, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x262a);
        EXPECT(gbc.pc(), 0x9bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb0), 0xe2);
        EXPECT(gbc.readMem(0xffdd), 0xc8);
        // E2 00F3
        gbc.setState(0xd8d9, 0xe78d, 0x57b0, 0x637e, 0xfbf2, 0x481e, 0x0, 0x0);
        gbc.writeMem(0xd8d9, { 0xe2 });
        gbc.writeMem(0xff7e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe78d);
        EXPECT(gbc.pc(), 0xd8da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d9), 0xe2);
        EXPECT(gbc.readMem(0xff7e), 0x57);
        // E2 00F4
        gbc.setState(0xde4b, 0x9bee, 0x9fe0, 0x9f34, 0xceb5, 0x3705, 0x1, 0x1);
        gbc.writeMem(0xde4b, { 0xe2 });
        gbc.writeMem(0xff34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9bee);
        EXPECT(gbc.pc(), 0xde4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4b), 0xe2);
        EXPECT(gbc.readMem(0xff34), 0x9f);
        // E2 00F5
        gbc.setState(0x8b46, 0xc508, 0xa850, 0x1ffe, 0x2789, 0x2f11, 0x0, 0x0);
        gbc.writeMem(0x8b46, { 0xe2 });
        gbc.writeMem(0xfffe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc508);
        EXPECT(gbc.pc(), 0x8b47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b46), 0xe2);
        EXPECT(gbc.readMem(0xfffe), 0xa8);
        // E2 00F6
        gbc.setState(0xb45d, 0xfec4, 0xc920, 0x4884, 0xdeed, 0x2f16, 0x0, 0x1);
        gbc.writeMem(0xb45d, { 0xe2 });
        gbc.writeMem(0xff84, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfec4);
        EXPECT(gbc.pc(), 0xb45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb45d), 0xe2);
        EXPECT(gbc.readMem(0xff84), 0xc9);
        // E2 00F7
        gbc.setState(0xbbdb, 0xe279, 0x4b90, 0xf07d, 0x8c54, 0xae49, 0x1, 0x0);
        gbc.writeMem(0xbbdb, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe279);
        EXPECT(gbc.pc(), 0xbbdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbdb), 0xe2);
        EXPECT(gbc.readMem(0xff7d), 0x4b);
        // E2 00F8
        gbc.setState(0x684d, 0x649c, 0x8d0, 0xd981, 0xcf88, 0xc7e4, 0x0, 0x0);
        gbc.writeMem(0x684d, { 0xe2 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x649c);
        EXPECT(gbc.pc(), 0x684e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff81), 0x8);
        // E2 00F9
        gbc.setState(0x3929, 0x6505, 0x26c0, 0xb56d, 0xc7b8, 0x8a16, 0x0, 0x0);
        gbc.writeMem(0x3929, { 0xe2 });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6505);
        EXPECT(gbc.pc(), 0x392a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6d), 0x26);
        // E2 00FA
        gbc.setState(0xedc3, 0x2169, 0x3a80, 0x973e, 0xbfaf, 0x80d4, 0x0, 0x1);
        gbc.writeMem(0xedc3, { 0xe2 });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2169);
        EXPECT(gbc.pc(), 0xedc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc3), 0xe2);
        EXPECT(gbc.readMem(0xff3e), 0x3a);
        // E2 00FB
        gbc.setState(0x9845, 0x1cb9, 0xcd90, 0xae3b, 0xfe70, 0x7b07, 0x1, 0x1);
        gbc.writeMem(0x9845, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1cb9);
        EXPECT(gbc.pc(), 0x9846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9845), 0xe2);
        EXPECT(gbc.readMem(0xff3b), 0xcd);
        // E2 00FC
        gbc.setState(0x4eda, 0x71ba, 0x4fb0, 0xf6f9, 0x207d, 0xf367, 0x1, 0x0);
        gbc.writeMem(0x4eda, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x71ba);
        EXPECT(gbc.pc(), 0x4edb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff9), 0x4f);
        // E2 00FE
        gbc.setState(0xda19, 0x5a7c, 0xcf70, 0x7d23, 0x7e21, 0xd112, 0x1, 0x0);
        gbc.writeMem(0xda19, { 0xe2 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5a7c);
        EXPECT(gbc.pc(), 0xda1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda19), 0xe2);
        EXPECT(gbc.readMem(0xff23), 0xcf);
        // E2 00FF
        gbc.setState(0x6913, 0xd7cb, 0xad90, 0x201, 0x8d94, 0x7425, 0x1, 0x1);
        gbc.writeMem(0x6913, { 0xe2 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd7cb);
        EXPECT(gbc.pc(), 0x6914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff01), 0xad);
        // E2 0100
        gbc.setState(0x44ce, 0x250c, 0xde20, 0xea14, 0xb4b0, 0x1779, 0x0, 0x1);
        gbc.writeMem(0x44ce, { 0xe2 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x250c);
        EXPECT(gbc.pc(), 0x44cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff14), 0xde);
        // E2 0101
        gbc.setState(0x555b, 0x6570, 0xd980, 0x7bbd, 0xacce, 0x6a0e, 0x0, 0x0);
        gbc.writeMem(0x555b, { 0xe2 });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6570);
        EXPECT(gbc.pc(), 0x555c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffbd), 0xd9);
        // E2 0102
        gbc.setState(0x7f4a, 0x8e93, 0x1600, 0xe414, 0x943, 0x240e, 0x0, 0x1);
        gbc.writeMem(0x7f4a, { 0xe2 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8e93);
        EXPECT(gbc.pc(), 0x7f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff14), 0x16);
        // E2 0103
        gbc.setState(0x11ed, 0x473f, 0x13e0, 0x7577, 0x614a, 0x3dc3, 0x0, 0x0);
        gbc.writeMem(0x11ed, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x473f);
        EXPECT(gbc.pc(), 0x11ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff77), 0x13);
        // E2 0104
        gbc.setState(0xed52, 0x1dc7, 0x72e0, 0xccae, 0x23, 0x3710, 0x0, 0x1);
        gbc.writeMem(0xed52, { 0xe2 });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1dc7);
        EXPECT(gbc.pc(), 0xed53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed52), 0xe2);
        EXPECT(gbc.readMem(0xffae), 0x72);
        // E2 0105
        gbc.setState(0x8e95, 0xd485, 0x1340, 0x3963, 0x1639, 0x8f8, 0x0, 0x0);
        gbc.writeMem(0x8e95, { 0xe2 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd485);
        EXPECT(gbc.pc(), 0x8e96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e95), 0xe2);
        EXPECT(gbc.readMem(0xff63), 0x13);
        // E2 0106
        gbc.setState(0xc6c2, 0x36f3, 0x9fe0, 0x4f28, 0xb590, 0xde3b, 0x1, 0x0);
        gbc.writeMem(0xc6c2, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x36f3);
        EXPECT(gbc.pc(), 0xc6c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c2), 0xe2);
        EXPECT(gbc.readMem(0xff28), 0x9f);
        // E2 0107
        gbc.setState(0x58a9, 0x5e5e, 0x9cd0, 0x41a6, 0x9645, 0xf5f2, 0x1, 0x1);
        gbc.writeMem(0x58a9, { 0xe2 });
        gbc.writeMem(0xffa6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5e5e);
        EXPECT(gbc.pc(), 0x58aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffa6), 0x9c);
        // E2 0108
        gbc.setState(0xcdc3, 0x7fca, 0x6f80, 0xd47a, 0x300e, 0x3d53, 0x0, 0x0);
        gbc.writeMem(0xcdc3, { 0xe2 });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7fca);
        EXPECT(gbc.pc(), 0xcdc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc3), 0xe2);
        EXPECT(gbc.readMem(0xff7a), 0x6f);
        // E2 0109
        gbc.setState(0x5b4c, 0x29bf, 0x4ae0, 0x5313, 0x497b, 0xa5ec, 0x0, 0x1);
        gbc.writeMem(0x5b4c, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x29bf);
        EXPECT(gbc.pc(), 0x5b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff13), 0x4a);
        // E2 010A
        gbc.setState(0x77a7, 0x322a, 0x70a0, 0x7415, 0x8804, 0xa33e, 0x1, 0x1);
        gbc.writeMem(0x77a7, { 0xe2 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x322a);
        EXPECT(gbc.pc(), 0x77a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff15), 0x70);
        // E2 010B
        gbc.setState(0xa07d, 0x9ef8, 0x9b40, 0x6b71, 0xb631, 0xbd53, 0x0, 0x1);
        gbc.writeMem(0xa07d, { 0xe2 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9ef8);
        EXPECT(gbc.pc(), 0xa07e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa07d), 0xe2);
        EXPECT(gbc.readMem(0xff71), 0x9b);
        // E2 010C
        gbc.setState(0xd0be, 0x844c, 0x320, 0x3f97, 0x3619, 0xc28c, 0x0, 0x1);
        gbc.writeMem(0xd0be, { 0xe2 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x844c);
        EXPECT(gbc.pc(), 0xd0bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0be), 0xe2);
        EXPECT(gbc.readMem(0xff97), 0x3);
        // E2 010D
        gbc.setState(0x1bb4, 0xc158, 0x1530, 0x7817, 0xce57, 0x62c2, 0x0, 0x0);
        gbc.writeMem(0x1bb4, { 0xe2 });
        gbc.writeMem(0xff17, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc158);
        EXPECT(gbc.pc(), 0x1bb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff17), 0x15);
        // E2 010E
        gbc.setState(0x6c13, 0xed61, 0xfa50, 0xfc7a, 0x8315, 0xc617, 0x1, 0x1);
        gbc.writeMem(0x6c13, { 0xe2 });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xed61);
        EXPECT(gbc.pc(), 0x6c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7a), 0xfa);
        // E2 010F
        gbc.setState(0xe37, 0xd388, 0x3310, 0x39ad, 0x37ef, 0x6023, 0x1, 0x1);
        gbc.writeMem(0xe37, { 0xe2 });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd388);
        EXPECT(gbc.pc(), 0xe38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffad), 0x33);
        // E2 0110
        gbc.setState(0x4426, 0x3102, 0x2450, 0x25f4, 0xf2b2, 0xf999, 0x0, 0x1);
        gbc.writeMem(0x4426, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3102);
        EXPECT(gbc.pc(), 0x4427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff4), 0x24);
        // E2 0111
        gbc.setState(0x78bc, 0x685c, 0x3f40, 0x538f, 0xc5e1, 0xfa88, 0x0, 0x1);
        gbc.writeMem(0x78bc, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x685c);
        EXPECT(gbc.pc(), 0x78bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8f), 0x3f);
        // E2 0112
        gbc.setState(0xa832, 0x93b8, 0x3a0, 0x8141, 0xcbe7, 0x4a2e, 0x0, 0x1);
        gbc.writeMem(0xa832, { 0xe2 });
        gbc.writeMem(0xff41, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x93b8);
        EXPECT(gbc.pc(), 0xa833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa832), 0xe2);
        EXPECT(gbc.readMem(0xff41), 0x3);
        // E2 0113
        gbc.setState(0x14bf, 0xc479, 0x1880, 0xe6b8, 0x13f1, 0x60ce, 0x1, 0x0);
        gbc.writeMem(0x14bf, { 0xe2 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc479);
        EXPECT(gbc.pc(), 0x14c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb8), 0x18);
        // E2 0114
        gbc.setState(0xb049, 0x9787, 0xfdb0, 0xe770, 0x9ea, 0xca68, 0x0, 0x1);
        gbc.writeMem(0xb049, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9787);
        EXPECT(gbc.pc(), 0xb04a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb049), 0xe2);
        EXPECT(gbc.readMem(0xff70), 0xfd);
        // E2 0115
        gbc.setState(0x5cc6, 0x3e47, 0xb1c0, 0x965d, 0xb681, 0xebf9, 0x0, 0x1);
        gbc.writeMem(0x5cc6, { 0xe2 });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3e47);
        EXPECT(gbc.pc(), 0x5cc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5d), 0xb1);
        // E2 0116
        gbc.setState(0x568e, 0x293b, 0x6200, 0xbc37, 0x46da, 0x5842, 0x0, 0x1);
        gbc.writeMem(0x568e, { 0xe2 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x293b);
        EXPECT(gbc.pc(), 0x568f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff37), 0x62);
        // E2 0117
        gbc.setState(0x6633, 0x3a3a, 0xa540, 0x2e3f, 0xaa2c, 0xc10f, 0x1, 0x0);
        gbc.writeMem(0x6633, { 0xe2 });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3a3a);
        EXPECT(gbc.pc(), 0x6634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3f), 0xa5);
        // E2 0118
        gbc.setState(0x4944, 0xa460, 0xc380, 0xb871, 0x87a4, 0xa0d5, 0x0, 0x1);
        gbc.writeMem(0x4944, { 0xe2 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa460);
        EXPECT(gbc.pc(), 0x4945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff71), 0xc3);
        // E2 0119
        gbc.setState(0xcb21, 0x9ed4, 0x7360, 0x2539, 0xaedc, 0xd2d7, 0x0, 0x1);
        gbc.writeMem(0xcb21, { 0xe2 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9ed4);
        EXPECT(gbc.pc(), 0xcb22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb21), 0xe2);
        EXPECT(gbc.readMem(0xff39), 0x73);
        // E2 011A
        gbc.setState(0xdc14, 0x5517, 0x6160, 0xfed7, 0x6ae8, 0x17e8, 0x0, 0x1);
        gbc.writeMem(0xdc14, { 0xe2 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5517);
        EXPECT(gbc.pc(), 0xdc15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc14), 0xe2);
        EXPECT(gbc.readMem(0xffd7), 0x61);
        // E2 011B
        gbc.setState(0x8c89, 0x8336, 0x7580, 0x9f3, 0x52c5, 0x29c6, 0x1, 0x0);
        gbc.writeMem(0x8c89, { 0xe2 });
        gbc.writeMem(0xfff3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8336);
        EXPECT(gbc.pc(), 0x8c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c89), 0xe2);
        EXPECT(gbc.readMem(0xfff3), 0x75);
        // E2 011C
        gbc.setState(0xe376, 0xb7fb, 0xada0, 0xbbd8, 0x6179, 0x4b1c, 0x1, 0x0);
        gbc.writeMem(0xe376, { 0xe2 });
        gbc.writeMem(0xffd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb7fb);
        EXPECT(gbc.pc(), 0xe377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe376), 0xe2);
        EXPECT(gbc.readMem(0xffd8), 0xad);
        // E2 011D
        gbc.setState(0x3abb, 0xb1fd, 0x81e0, 0xcf8a, 0x444e, 0xdf63, 0x0, 0x0);
        gbc.writeMem(0x3abb, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb1fd);
        EXPECT(gbc.pc(), 0x3abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8a), 0x81);
        // E2 011E
        gbc.setState(0x686f, 0xc182, 0x710, 0xb844, 0x66b7, 0xf8a3, 0x0, 0x0);
        gbc.writeMem(0x686f, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc182);
        EXPECT(gbc.pc(), 0x6870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff44), 0x7);
        // E2 011F
        gbc.setState(0x75fc, 0x88a4, 0x9db0, 0x5691, 0x5abd, 0x471d, 0x0, 0x1);
        gbc.writeMem(0x75fc, { 0xe2 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x88a4);
        EXPECT(gbc.pc(), 0x75fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff91), 0x9d);
        // E2 0120
        gbc.setState(0x1000, 0xac4f, 0x3740, 0x7302, 0xd893, 0x57da, 0x0, 0x1);
        gbc.writeMem(0x1000, { 0xe2 });
        gbc.writeMem(0xff02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xac4f);
        EXPECT(gbc.pc(), 0x1001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff02), 0x37);
        // E2 0121
        gbc.setState(0x8691, 0x93bd, 0xe30, 0x4699, 0x794c, 0x604, 0x1, 0x0);
        gbc.writeMem(0x8691, { 0xe2 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x93bd);
        EXPECT(gbc.pc(), 0x8692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8691), 0xe2);
        EXPECT(gbc.readMem(0xff99), 0xe);
        // E2 0122
        gbc.setState(0x4cdd, 0x7ddc, 0xe410, 0x7025, 0xbaaf, 0xda60, 0x1, 0x1);
        gbc.writeMem(0x4cdd, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7ddc);
        EXPECT(gbc.pc(), 0x4cde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff25), 0xe4);
        // E2 0123
        gbc.setState(0xd8b7, 0xa597, 0x7160, 0xf0ce, 0xd89c, 0xa43d, 0x1, 0x1);
        gbc.writeMem(0xd8b7, { 0xe2 });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa597);
        EXPECT(gbc.pc(), 0xd8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b7), 0xe2);
        EXPECT(gbc.readMem(0xffce), 0x71);
        // E2 0124
        gbc.setState(0x4fcf, 0xb6cd, 0xf690, 0xe982, 0x7b89, 0x7927, 0x0, 0x0);
        gbc.writeMem(0x4fcf, { 0xe2 });
        gbc.writeMem(0xff82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb6cd);
        EXPECT(gbc.pc(), 0x4fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff82), 0xf6);
        // E2 0125
        gbc.setState(0xbe58, 0x6ed9, 0x250, 0xc786, 0x5530, 0xf8cf, 0x1, 0x0);
        gbc.writeMem(0xbe58, { 0xe2 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6ed9);
        EXPECT(gbc.pc(), 0xbe59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe58), 0xe2);
        EXPECT(gbc.readMem(0xff86), 0x2);
        // E2 0126
        gbc.setState(0xca4c, 0x1098, 0x4a70, 0x6653, 0x5822, 0x9ad3, 0x0, 0x1);
        gbc.writeMem(0xca4c, { 0xe2 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1098);
        EXPECT(gbc.pc(), 0xca4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca4c), 0xe2);
        EXPECT(gbc.readMem(0xff53), 0x4a);
        // E2 0127
        gbc.setState(0x3069, 0x5f97, 0x6a60, 0x196a, 0x6d8a, 0x1ab9, 0x1, 0x1);
        gbc.writeMem(0x3069, { 0xe2 });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5f97);
        EXPECT(gbc.pc(), 0x306a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6a), 0x6a);
        // E2 0128
        gbc.setState(0x792b, 0x2037, 0x4510, 0x4cbb, 0x4cd7, 0xe0b0, 0x1, 0x0);
        gbc.writeMem(0x792b, { 0xe2 });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2037);
        EXPECT(gbc.pc(), 0x792c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffbb), 0x45);
        // E2 0129
        gbc.setState(0x4dfd, 0x93fa, 0xe9c0, 0xcd57, 0xcc3a, 0x3d7c, 0x1, 0x0);
        gbc.writeMem(0x4dfd, { 0xe2 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x93fa);
        EXPECT(gbc.pc(), 0x4dfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff57), 0xe9);
        // E2 012A
        gbc.setState(0xeee, 0x7200, 0xb990, 0x683e, 0x4313, 0xfdac, 0x1, 0x0);
        gbc.writeMem(0xeee, { 0xe2 });
        gbc.writeMem(0xff3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7200);
        EXPECT(gbc.pc(), 0xeef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff3e), 0xb9);
        // E2 012B
        gbc.setState(0xbd49, 0x7093, 0xe000, 0xec8, 0xec99, 0x6a77, 0x0, 0x0);
        gbc.writeMem(0xbd49, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7093);
        EXPECT(gbc.pc(), 0xbd4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd49), 0xe2);
        EXPECT(gbc.readMem(0xffc8), 0xe0);
        // E2 012D
        gbc.setState(0x6d7b, 0xf851, 0x23e0, 0x9116, 0x9d9c, 0x2904, 0x1, 0x0);
        gbc.writeMem(0x6d7b, { 0xe2 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf851);
        EXPECT(gbc.pc(), 0x6d7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff16), 0x23);
        // E2 012E
        gbc.setState(0xc4fd, 0xd50, 0x7890, 0xd94c, 0xd9d5, 0xbda5, 0x0, 0x0);
        gbc.writeMem(0xc4fd, { 0xe2 });
        gbc.writeMem(0xff4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd50);
        EXPECT(gbc.pc(), 0xc4fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4fd), 0xe2);
        EXPECT(gbc.readMem(0xff4c), 0x78);
        // E2 012F
        gbc.setState(0x620, 0xe1fe, 0xa2d0, 0x6bcb, 0x3c91, 0x2949, 0x1, 0x1);
        gbc.writeMem(0x620, { 0xe2 });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe1fe);
        EXPECT(gbc.pc(), 0x621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffcb), 0xa2);
        // E2 0130
        gbc.setState(0x7eaf, 0x7433, 0x49c0, 0x2d00, 0xc0c2, 0x1f95, 0x1, 0x0);
        gbc.writeMem(0x7eaf, { 0xe2 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7433);
        EXPECT(gbc.pc(), 0x7eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff00), 0x49);
        // E2 0131
        gbc.setState(0xbbd0, 0x4536, 0x80a0, 0x71ac, 0xd483, 0x47b5, 0x1, 0x0);
        gbc.writeMem(0xbbd0, { 0xe2 });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4536);
        EXPECT(gbc.pc(), 0xbbd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbd0), 0xe2);
        EXPECT(gbc.readMem(0xffac), 0x80);
        // E2 0132
        gbc.setState(0xe3b8, 0x7359, 0x1d30, 0xea52, 0x6a86, 0xbcbc, 0x0, 0x0);
        gbc.writeMem(0xe3b8, { 0xe2 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7359);
        EXPECT(gbc.pc(), 0xe3b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b8), 0xe2);
        EXPECT(gbc.readMem(0xff52), 0x1d);
        // E2 0133
        gbc.setState(0x6724, 0x7624, 0xb430, 0x2176, 0xb4a6, 0xe906, 0x1, 0x0);
        gbc.writeMem(0x6724, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7624);
        EXPECT(gbc.pc(), 0x6725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff76), 0xb4);
        // E2 0134
        gbc.setState(0x67c7, 0xf909, 0x7f90, 0x449b, 0xc70c, 0x5410, 0x1, 0x0);
        gbc.writeMem(0x67c7, { 0xe2 });
        gbc.writeMem(0xff9b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf909);
        EXPECT(gbc.pc(), 0x67c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9b), 0x7f);
        // E2 0135
        gbc.setState(0x9d69, 0x45cb, 0x9ba0, 0x28de, 0x73e, 0x8e7d, 0x1, 0x0);
        gbc.writeMem(0x9d69, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x45cb);
        EXPECT(gbc.pc(), 0x9d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d69), 0xe2);
        EXPECT(gbc.readMem(0xffde), 0x9b);
        // E2 0136
        gbc.setState(0x3ec9, 0x1800, 0x21e0, 0x2386, 0x106d, 0xaae6, 0x0, 0x0);
        gbc.writeMem(0x3ec9, { 0xe2 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1800);
        EXPECT(gbc.pc(), 0x3eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff86), 0x21);
        // E2 0137
        gbc.setState(0xea71, 0x6b2d, 0x6fe0, 0xca85, 0xecfa, 0xfe89, 0x1, 0x1);
        gbc.writeMem(0xea71, { 0xe2 });
        gbc.writeMem(0xff85, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6b2d);
        EXPECT(gbc.pc(), 0xea72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea71), 0xe2);
        EXPECT(gbc.readMem(0xff85), 0x6f);
        // E2 0138
        gbc.setState(0xbc7f, 0xfca1, 0x43a0, 0x2549, 0x6a9b, 0x5645, 0x0, 0x1);
        gbc.writeMem(0xbc7f, { 0xe2 });
        gbc.writeMem(0xff49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfca1);
        EXPECT(gbc.pc(), 0xbc80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7f), 0xe2);
        EXPECT(gbc.readMem(0xff49), 0x43);
        // E2 0139
        gbc.setState(0x71ed, 0xa8af, 0xeb0, 0x5e56, 0x2dae, 0x4998, 0x1, 0x0);
        gbc.writeMem(0x71ed, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa8af);
        EXPECT(gbc.pc(), 0x71ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff56), 0xe);
        // E2 013A
        gbc.setState(0x7bea, 0xbc81, 0x7a10, 0xaf38, 0xd267, 0xd23f, 0x0, 0x0);
        gbc.writeMem(0x7bea, { 0xe2 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbc81);
        EXPECT(gbc.pc(), 0x7beb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff38), 0x7a);
        // E2 013B
        gbc.setState(0x4d4f, 0x2d66, 0x2eb0, 0xd0c7, 0x209b, 0x4dd7, 0x1, 0x0);
        gbc.writeMem(0x4d4f, { 0xe2 });
        gbc.writeMem(0xffc7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2d66);
        EXPECT(gbc.pc(), 0x4d50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc7), 0x2e);
        // E2 013C
        gbc.setState(0x938c, 0x3025, 0xbb90, 0x620b, 0x6bf6, 0xd5b2, 0x0, 0x0);
        gbc.writeMem(0x938c, { 0xe2 });
        gbc.writeMem(0xff0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3025);
        EXPECT(gbc.pc(), 0x938d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x938c), 0xe2);
        EXPECT(gbc.readMem(0xff0b), 0xbb);
        // E2 013D
        gbc.setState(0x581e, 0x2224, 0xdf40, 0x126b, 0x7bd2, 0x4407, 0x1, 0x0);
        gbc.writeMem(0x581e, { 0xe2 });
        gbc.writeMem(0xff6b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2224);
        EXPECT(gbc.pc(), 0x581f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6b), 0xdf);
        // E2 013E
        gbc.setState(0xccf2, 0x98f4, 0xa320, 0x6a96, 0x45ac, 0x6427, 0x1, 0x0);
        gbc.writeMem(0xccf2, { 0xe2 });
        gbc.writeMem(0xff96, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x98f4);
        EXPECT(gbc.pc(), 0xccf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf2), 0xe2);
        EXPECT(gbc.readMem(0xff96), 0xa3);
        // E2 0140
        gbc.setState(0xd2cb, 0xf72c, 0x6a90, 0x6c6f, 0xf21a, 0xe1b2, 0x0, 0x0);
        gbc.writeMem(0xd2cb, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf72c);
        EXPECT(gbc.pc(), 0xd2cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2cb), 0xe2);
        EXPECT(gbc.readMem(0xff6f), 0x6a);
        // E2 0141
        gbc.setState(0xe684, 0x29c, 0x9260, 0xd962, 0x61e9, 0x2d9f, 0x1, 0x0);
        gbc.writeMem(0xe684, { 0xe2 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x29c);
        EXPECT(gbc.pc(), 0xe685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe684), 0xe2);
        EXPECT(gbc.readMem(0xff62), 0x92);
        // E2 0142
        gbc.setState(0x47f5, 0xe67f, 0xd7b0, 0x50d9, 0xb825, 0x53eb, 0x0, 0x0);
        gbc.writeMem(0x47f5, { 0xe2 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe67f);
        EXPECT(gbc.pc(), 0x47f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd9), 0xd7);
        // E2 0143
        gbc.setState(0x9895, 0x535c, 0xa130, 0xbc5b, 0x98fe, 0x4b61, 0x0, 0x1);
        gbc.writeMem(0x9895, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x535c);
        EXPECT(gbc.pc(), 0x9896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9895), 0xe2);
        EXPECT(gbc.readMem(0xff5b), 0xa1);
        // E2 0144
        gbc.setState(0xc37a, 0x8fb6, 0xb6f0, 0x875b, 0xe7e6, 0xa24b, 0x1, 0x0);
        gbc.writeMem(0xc37a, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8fb6);
        EXPECT(gbc.pc(), 0xc37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc37a), 0xe2);
        EXPECT(gbc.readMem(0xff5b), 0xb6);
        // E2 0145
        gbc.setState(0xd995, 0x1188, 0x69c0, 0x8f97, 0x7c41, 0x87e3, 0x1, 0x1);
        gbc.writeMem(0xd995, { 0xe2 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1188);
        EXPECT(gbc.pc(), 0xd996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd995), 0xe2);
        EXPECT(gbc.readMem(0xff97), 0x69);
        // E2 0146
        gbc.setState(0xcdb0, 0xf765, 0xb360, 0x229c, 0xb7a4, 0xcb18, 0x0, 0x1);
        gbc.writeMem(0xcdb0, { 0xe2 });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf765);
        EXPECT(gbc.pc(), 0xcdb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb0), 0xe2);
        EXPECT(gbc.readMem(0xff9c), 0xb3);
        // E2 0147
        gbc.setState(0x56b2, 0xfdc0, 0x9040, 0xba41, 0x47fb, 0x82dc, 0x0, 0x0);
        gbc.writeMem(0x56b2, { 0xe2 });
        gbc.writeMem(0xff41, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfdc0);
        EXPECT(gbc.pc(), 0x56b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff41), 0x90);
        // E2 0148
        gbc.setState(0x592f, 0x30d, 0xb650, 0x3575, 0x9736, 0xef78, 0x0, 0x0);
        gbc.writeMem(0x592f, { 0xe2 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x30d);
        EXPECT(gbc.pc(), 0x5930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff75), 0xb6);
        // E2 014A
        gbc.setState(0x1b0c, 0x9ba6, 0xaa10, 0x124e, 0xc329, 0xb121, 0x1, 0x1);
        gbc.writeMem(0x1b0c, { 0xe2 });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9ba6);
        EXPECT(gbc.pc(), 0x1b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4e), 0xaa);
        // E2 014B
        gbc.setState(0xd831, 0x2f, 0x6410, 0xab7, 0x41d8, 0xe5d7, 0x1, 0x1);
        gbc.writeMem(0xd831, { 0xe2 });
        gbc.writeMem(0xffb7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2f);
        EXPECT(gbc.pc(), 0xd832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd831), 0xe2);
        EXPECT(gbc.readMem(0xffb7), 0x64);
        // E2 014C
        gbc.setState(0x67c, 0xee1, 0xb170, 0x8d24, 0x29f7, 0x1e2a, 0x1, 0x0);
        gbc.writeMem(0x67c, { 0xe2 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xee1);
        EXPECT(gbc.pc(), 0x67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff24), 0xb1);
        // E2 014F
        gbc.setState(0xe5dc, 0x5da4, 0xa0f0, 0x2376, 0xa55b, 0x61c0, 0x0, 0x1);
        gbc.writeMem(0xe5dc, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5da4);
        EXPECT(gbc.pc(), 0xe5dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5dc), 0xe2);
        EXPECT(gbc.readMem(0xff76), 0xa0);
        // E2 0151
        gbc.setState(0x20e9, 0xa36c, 0x9250, 0x8ef9, 0x384a, 0x28f, 0x0, 0x1);
        gbc.writeMem(0x20e9, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa36c);
        EXPECT(gbc.pc(), 0x20ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff9), 0x92);
        // E2 0152
        gbc.setState(0x6f7c, 0x6eab, 0x3de0, 0xcdeb, 0x7783, 0x82e9, 0x0, 0x0);
        gbc.writeMem(0x6f7c, { 0xe2 });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6eab);
        EXPECT(gbc.pc(), 0x6f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffeb), 0x3d);
        // E2 0153
        gbc.setState(0xb181, 0x215e, 0x62b0, 0xb7a2, 0x96b5, 0x6f73, 0x1, 0x1);
        gbc.writeMem(0xb181, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x215e);
        EXPECT(gbc.pc(), 0xb182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb181), 0xe2);
        EXPECT(gbc.readMem(0xffa2), 0x62);
        // E2 0154
        gbc.setState(0xec29, 0xe27c, 0x3d10, 0x9925, 0xc624, 0xeb5e, 0x0, 0x1);
        gbc.writeMem(0xec29, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe27c);
        EXPECT(gbc.pc(), 0xec2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec29), 0xe2);
        EXPECT(gbc.readMem(0xff25), 0x3d);
        // E2 0155
        gbc.setState(0x1a76, 0xc030, 0xd1c0, 0xc142, 0x22ce, 0x2a33, 0x1, 0x0);
        gbc.writeMem(0x1a76, { 0xe2 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc030);
        EXPECT(gbc.pc(), 0x1a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff42), 0xd1);
        // E2 0156
        gbc.setState(0x9eec, 0x19d9, 0x7f90, 0xd0d0, 0x451e, 0xa211, 0x0, 0x1);
        gbc.writeMem(0x9eec, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x19d9);
        EXPECT(gbc.pc(), 0x9eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eec), 0xe2);
        EXPECT(gbc.readMem(0xffd0), 0x7f);
        // E2 0157
        gbc.setState(0xce3b, 0x9b0b, 0x52d0, 0x2377, 0x512e, 0x5457, 0x1, 0x0);
        gbc.writeMem(0xce3b, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9b0b);
        EXPECT(gbc.pc(), 0xce3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce3b), 0xe2);
        EXPECT(gbc.readMem(0xff77), 0x52);
        // E2 0158
        gbc.setState(0x6fd5, 0x726f, 0x4b30, 0x6ab1, 0x50b5, 0xf871, 0x1, 0x0);
        gbc.writeMem(0x6fd5, { 0xe2 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x726f);
        EXPECT(gbc.pc(), 0x6fd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb1), 0x4b);
        // E2 015A
        gbc.setState(0xe3d4, 0x4f98, 0x3c10, 0x8e40, 0x6ce1, 0x8597, 0x0, 0x1);
        gbc.writeMem(0xe3d4, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4f98);
        EXPECT(gbc.pc(), 0xe3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3d4), 0xe2);
        EXPECT(gbc.readMem(0xff40), 0x3c);
        // E2 015B
        gbc.setState(0xe342, 0xa86, 0xe560, 0x1dcd, 0x43ce, 0xfd17, 0x1, 0x1);
        gbc.writeMem(0xe342, { 0xe2 });
        gbc.writeMem(0xffcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa86);
        EXPECT(gbc.pc(), 0xe343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe342), 0xe2);
        EXPECT(gbc.readMem(0xffcd), 0xe5);
        // E2 015C
        gbc.setState(0x71ba, 0x49d8, 0xc40, 0x4ac8, 0xce5c, 0x5781, 0x0, 0x0);
        gbc.writeMem(0x71ba, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x49d8);
        EXPECT(gbc.pc(), 0x71bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc8), 0xc);
        // E2 015D
        gbc.setState(0x17b5, 0x7e1a, 0x33a0, 0x61f2, 0xcd3e, 0xe7e1, 0x1, 0x0);
        gbc.writeMem(0x17b5, { 0xe2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7e1a);
        EXPECT(gbc.pc(), 0x17b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff2), 0x33);
        // E2 015E
        gbc.setState(0x25c8, 0x960, 0xf330, 0x247d, 0xf876, 0xb9b2, 0x1, 0x0);
        gbc.writeMem(0x25c8, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x960);
        EXPECT(gbc.pc(), 0x25c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7d), 0xf3);
        // E2 0160
        gbc.setState(0x54d9, 0xfda0, 0xc750, 0xa2e5, 0x8acd, 0x9700, 0x1, 0x0);
        gbc.writeMem(0x54d9, { 0xe2 });
        gbc.writeMem(0xffe5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfda0);
        EXPECT(gbc.pc(), 0x54da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe5), 0xc7);
        // E2 0161
        gbc.setState(0xc7f2, 0x3359, 0x8e80, 0x9ecc, 0xb09f, 0x6de, 0x1, 0x1);
        gbc.writeMem(0xc7f2, { 0xe2 });
        gbc.writeMem(0xffcc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3359);
        EXPECT(gbc.pc(), 0xc7f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f2), 0xe2);
        EXPECT(gbc.readMem(0xffcc), 0x8e);
        // E2 0162
        gbc.setState(0xd2a5, 0x9774, 0x2480, 0xc2ee, 0xa88a, 0xfd70, 0x0, 0x1);
        gbc.writeMem(0xd2a5, { 0xe2 });
        gbc.writeMem(0xffee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9774);
        EXPECT(gbc.pc(), 0xd2a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a5), 0xe2);
        EXPECT(gbc.readMem(0xffee), 0x24);
        // E2 0164
        gbc.setState(0x68ef, 0x9067, 0xcd00, 0xd29e, 0x48d2, 0x57d4, 0x1, 0x0);
        gbc.writeMem(0x68ef, { 0xe2 });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9067);
        EXPECT(gbc.pc(), 0x68f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9e), 0xcd);
        // E2 0165
        gbc.setState(0x2b44, 0xfd6f, 0x1d30, 0x9633, 0xc633, 0xc5f1, 0x0, 0x0);
        gbc.writeMem(0x2b44, { 0xe2 });
        gbc.writeMem(0xff33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfd6f);
        EXPECT(gbc.pc(), 0x2b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff33), 0x1d);
        // E2 0166
        gbc.setState(0xef3b, 0x86c9, 0xf950, 0xc08e, 0x9e89, 0x4d7e, 0x1, 0x1);
        gbc.writeMem(0xef3b, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x86c9);
        EXPECT(gbc.pc(), 0xef3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef3b), 0xe2);
        EXPECT(gbc.readMem(0xff8e), 0xf9);
        // E2 0167
        gbc.setState(0xa082, 0x9655, 0x3e80, 0x2cd2, 0xb606, 0x6bd, 0x1, 0x1);
        gbc.writeMem(0xa082, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9655);
        EXPECT(gbc.pc(), 0xa083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa082), 0xe2);
        EXPECT(gbc.readMem(0xffd2), 0x3e);
        // E2 0168
        gbc.setState(0x551d, 0x7642, 0x3d50, 0x3fdc, 0xcdad, 0x6ed3, 0x0, 0x0);
        gbc.writeMem(0x551d, { 0xe2 });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7642);
        EXPECT(gbc.pc(), 0x551e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffdc), 0x3d);
        // E2 016A
        gbc.setState(0x7bf5, 0x14ce, 0xcfa0, 0xc83d, 0x1ca2, 0xf173, 0x0, 0x1);
        gbc.writeMem(0x7bf5, { 0xe2 });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x14ce);
        EXPECT(gbc.pc(), 0x7bf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3d), 0xcf);
        // E2 016B
        gbc.setState(0x26e3, 0x6a39, 0xec90, 0x180, 0x6c99, 0x3826, 0x0, 0x1);
        gbc.writeMem(0x26e3, { 0xe2 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6a39);
        EXPECT(gbc.pc(), 0x26e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff80), 0xec);
        // E2 016C
        gbc.setState(0x52da, 0xed1e, 0x1170, 0x1d8e, 0xe617, 0xd07a, 0x1, 0x1);
        gbc.writeMem(0x52da, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xed1e);
        EXPECT(gbc.pc(), 0x52db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8e), 0x11);
        // E2 016D
        gbc.setState(0x4afa, 0x7e37, 0x4a70, 0xa85d, 0x1f3c, 0xb659, 0x0, 0x0);
        gbc.writeMem(0x4afa, { 0xe2 });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7e37);
        EXPECT(gbc.pc(), 0x4afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5d), 0x4a);
        // E2 016E
        gbc.setState(0x36d1, 0x918d, 0xcbc0, 0x8ad0, 0xbad4, 0x5deb, 0x0, 0x0);
        gbc.writeMem(0x36d1, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x918d);
        EXPECT(gbc.pc(), 0x36d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd0), 0xcb);
        // E2 016F
        gbc.setState(0x2d73, 0xec63, 0xf8b0, 0x8570, 0xd097, 0x261d, 0x1, 0x0);
        gbc.writeMem(0x2d73, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xec63);
        EXPECT(gbc.pc(), 0x2d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff70), 0xf8);
        // E2 0170
        gbc.setState(0x225e, 0xc267, 0x52b0, 0xd41a, 0xde81, 0xa8d5, 0x0, 0x1);
        gbc.writeMem(0x225e, { 0xe2 });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc267);
        EXPECT(gbc.pc(), 0x225f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1a), 0x52);
        // E2 0171
        gbc.setState(0x28b4, 0x871f, 0x39b0, 0xc70, 0x31bc, 0x74d6, 0x1, 0x1);
        gbc.writeMem(0x28b4, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x871f);
        EXPECT(gbc.pc(), 0x28b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff70), 0x39);
        // E2 0172
        gbc.setState(0x920, 0xcd40, 0x9560, 0x5a04, 0x37f7, 0x4313, 0x0, 0x0);
        gbc.writeMem(0x920, { 0xe2 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xcd40);
        EXPECT(gbc.pc(), 0x921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff04), 0x95);
        // E2 0173
        gbc.setState(0x4f89, 0x9319, 0x6a70, 0xe8e3, 0x50e8, 0x74b3, 0x1, 0x0);
        gbc.writeMem(0x4f89, { 0xe2 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9319);
        EXPECT(gbc.pc(), 0x4f8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe3), 0x6a);
        // E2 0174
        gbc.setState(0x7be3, 0x7eed, 0x60b0, 0x3bc9, 0x8215, 0x4e25, 0x0, 0x1);
        gbc.writeMem(0x7be3, { 0xe2 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7eed);
        EXPECT(gbc.pc(), 0x7be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc9), 0x60);
        // E2 0175
        gbc.setState(0xb160, 0x608e, 0x2180, 0x77a1, 0x669b, 0x5de, 0x0, 0x1);
        gbc.writeMem(0xb160, { 0xe2 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x608e);
        EXPECT(gbc.pc(), 0xb161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb160), 0xe2);
        EXPECT(gbc.readMem(0xffa1), 0x21);
        // E2 0176
        gbc.setState(0x1dee, 0x48ed, 0xb7b0, 0xd825, 0xc6fb, 0x5183, 0x0, 0x0);
        gbc.writeMem(0x1dee, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x48ed);
        EXPECT(gbc.pc(), 0x1def);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff25), 0xb7);
        // E2 0177
        gbc.setState(0x7a82, 0xfff1, 0x1b60, 0xb695, 0xbc47, 0x5c75, 0x0, 0x1);
        gbc.writeMem(0x7a82, { 0xe2 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfff1);
        EXPECT(gbc.pc(), 0x7a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff95), 0x1b);
        // E2 0178
        gbc.setState(0xada, 0x69be, 0x7e60, 0xbac9, 0x64fb, 0x365, 0x1, 0x0);
        gbc.writeMem(0xada, { 0xe2 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x69be);
        EXPECT(gbc.pc(), 0xadb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc9), 0x7e);
        // E2 0179
        gbc.setState(0x7566, 0xf579, 0xe0c0, 0xdf95, 0x41e3, 0x9d4a, 0x0, 0x1);
        gbc.writeMem(0x7566, { 0xe2 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf579);
        EXPECT(gbc.pc(), 0x7567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff95), 0xe0);
        // E2 017A
        gbc.setState(0x6fd6, 0x1864, 0xa570, 0x7f88, 0x5304, 0x76c2, 0x0, 0x1);
        gbc.writeMem(0x6fd6, { 0xe2 });
        gbc.writeMem(0xff88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1864);
        EXPECT(gbc.pc(), 0x6fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff88), 0xa5);
        // E2 017B
        gbc.setState(0x13c7, 0xa3ab, 0x9730, 0x5428, 0xe687, 0xad99, 0x0, 0x1);
        gbc.writeMem(0x13c7, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa3ab);
        EXPECT(gbc.pc(), 0x13c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff28), 0x97);
        // E2 017C
        gbc.setState(0x1ba9, 0xdd96, 0x18b0, 0xf08f, 0x7b2b, 0x16f9, 0x0, 0x0);
        gbc.writeMem(0x1ba9, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdd96);
        EXPECT(gbc.pc(), 0x1baa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8f), 0x18);
        // E2 017D
        gbc.setState(0x98c, 0xdaee, 0xdaa0, 0x10de, 0xee26, 0x9b6a, 0x1, 0x1);
        gbc.writeMem(0x98c, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdaee);
        EXPECT(gbc.pc(), 0x98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffde), 0xda);
        // E2 017E
        gbc.setState(0x2f6c, 0x2174, 0x7040, 0x1ff7, 0xcb44, 0xbc97, 0x0, 0x1);
        gbc.writeMem(0x2f6c, { 0xe2 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2174);
        EXPECT(gbc.pc(), 0x2f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff7), 0x70);
        // E2 017F
        gbc.setState(0xace9, 0xefda, 0xaba0, 0x7e13, 0xc3b7, 0x96fd, 0x1, 0x1);
        gbc.writeMem(0xace9, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xefda);
        EXPECT(gbc.pc(), 0xacea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace9), 0xe2);
        EXPECT(gbc.readMem(0xff13), 0xab);
        // E2 0180
        gbc.setState(0x332c, 0x1f47, 0x5170, 0x45dd, 0xaaa5, 0x195f, 0x0, 0x1);
        gbc.writeMem(0x332c, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1f47);
        EXPECT(gbc.pc(), 0x332d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffdd), 0x51);
        // E2 0181
        gbc.setState(0x6164, 0xe86b, 0x8a60, 0x79ab, 0xf4a2, 0x8838, 0x1, 0x1);
        gbc.writeMem(0x6164, { 0xe2 });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe86b);
        EXPECT(gbc.pc(), 0x6165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffab), 0x8a);
        // E2 0182
        gbc.setState(0x89e5, 0x381a, 0xed0, 0x90bc, 0x8e1c, 0x6f8b, 0x1, 0x1);
        gbc.writeMem(0x89e5, { 0xe2 });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x381a);
        EXPECT(gbc.pc(), 0x89e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e5), 0xe2);
        EXPECT(gbc.readMem(0xffbc), 0xe);
        // E2 0183
        gbc.setState(0xc7fb, 0x60e8, 0x5080, 0xd5d9, 0x5edd, 0x8446, 0x0, 0x0);
        gbc.writeMem(0xc7fb, { 0xe2 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x60e8);
        EXPECT(gbc.pc(), 0xc7fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7fb), 0xe2);
        EXPECT(gbc.readMem(0xffd9), 0x50);
        // E2 0184
        gbc.setState(0x7919, 0xff67, 0x7c90, 0xcadb, 0x967, 0xb8ce, 0x1, 0x0);
        gbc.writeMem(0x7919, { 0xe2 });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xff67);
        EXPECT(gbc.pc(), 0x791a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffdb), 0x7c);
        // E2 0185
        gbc.setState(0x11e8, 0xd22e, 0x7420, 0xdd4f, 0xe9ff, 0x8e99, 0x1, 0x1);
        gbc.writeMem(0x11e8, { 0xe2 });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd22e);
        EXPECT(gbc.pc(), 0x11e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4f), 0x74);
        // E2 0186
        gbc.setState(0xb97e, 0xc568, 0x7930, 0xd2b7, 0xbb50, 0x7633, 0x0, 0x1);
        gbc.writeMem(0xb97e, { 0xe2 });
        gbc.writeMem(0xffb7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc568);
        EXPECT(gbc.pc(), 0xb97f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97e), 0xe2);
        EXPECT(gbc.readMem(0xffb7), 0x79);
        // E2 0187
        gbc.setState(0x3988, 0x25fc, 0x1070, 0xb02f, 0x106c, 0x4aaf, 0x0, 0x0);
        gbc.writeMem(0x3988, { 0xe2 });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x25fc);
        EXPECT(gbc.pc(), 0x3989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2f), 0x10);
        // E2 0188
        gbc.setState(0x1324, 0x1ff2, 0x8b90, 0xba1a, 0x9213, 0xeb3c, 0x0, 0x0);
        gbc.writeMem(0x1324, { 0xe2 });
        gbc.writeMem(0xff1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1ff2);
        EXPECT(gbc.pc(), 0x1325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1a), 0x8b);
        // E2 0189
        gbc.setState(0xeb5d, 0xbae4, 0x2f10, 0x2c9f, 0x9c13, 0x845c, 0x0, 0x0);
        gbc.writeMem(0xeb5d, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xbae4);
        EXPECT(gbc.pc(), 0xeb5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb5d), 0xe2);
        EXPECT(gbc.readMem(0xff9f), 0x2f);
        // E2 018A
        gbc.setState(0xcdd1, 0xf69e, 0x5eb0, 0x82f6, 0x30fc, 0x1959, 0x0, 0x0);
        gbc.writeMem(0xcdd1, { 0xe2 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf69e);
        EXPECT(gbc.pc(), 0xcdd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdd1), 0xe2);
        EXPECT(gbc.readMem(0xfff6), 0x5e);
        // E2 018B
        gbc.setState(0x826c, 0xd482, 0x32e0, 0x676, 0x79f2, 0x80, 0x0, 0x1);
        gbc.writeMem(0x826c, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd482);
        EXPECT(gbc.pc(), 0x826d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826c), 0xe2);
        EXPECT(gbc.readMem(0xff76), 0x32);
        // E2 018C
        gbc.setState(0x4dfe, 0xa64e, 0x2d20, 0xa314, 0xcb8e, 0x1061, 0x1, 0x1);
        gbc.writeMem(0x4dfe, { 0xe2 });
        gbc.writeMem(0xff14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa64e);
        EXPECT(gbc.pc(), 0x4dff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff14), 0x2d);
        // E2 018E
        gbc.setState(0xdb7d, 0x7b32, 0x3630, 0x4f4, 0xd110, 0x1d1, 0x1, 0x1);
        gbc.writeMem(0xdb7d, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7b32);
        EXPECT(gbc.pc(), 0xdb7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7d), 0xe2);
        EXPECT(gbc.readMem(0xfff4), 0x36);
        // E2 018F
        gbc.setState(0x5699, 0x2aca, 0xa0a0, 0xd23b, 0xcb8c, 0x1e36, 0x0, 0x0);
        gbc.writeMem(0x5699, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2aca);
        EXPECT(gbc.pc(), 0x569a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3b), 0xa0);
        // E2 0190
        gbc.setState(0x256, 0xa74b, 0xfde0, 0xa465, 0x3009, 0x38b4, 0x0, 0x0);
        gbc.writeMem(0x256, { 0xe2 });
        gbc.writeMem(0xff65, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa74b);
        EXPECT(gbc.pc(), 0x257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff65), 0xfd);
        // E2 0191
        gbc.setState(0xe1fd, 0xa397, 0xe170, 0x2a97, 0x79ad, 0xfbea, 0x1, 0x0);
        gbc.writeMem(0xe1fd, { 0xe2 });
        gbc.writeMem(0xff97, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa397);
        EXPECT(gbc.pc(), 0xe1fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1fd), 0xe2);
        EXPECT(gbc.readMem(0xff97), 0xe1);
        // E2 0192
        gbc.setState(0xcf19, 0xe215, 0x9ac0, 0x3015, 0x9505, 0x487c, 0x0, 0x0);
        gbc.writeMem(0xcf19, { 0xe2 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe215);
        EXPECT(gbc.pc(), 0xcf1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf19), 0xe2);
        EXPECT(gbc.readMem(0xff15), 0x9a);
        // E2 0193
        gbc.setState(0x8ddd, 0xbffb, 0x2500, 0xde67, 0x6c4b, 0x6db1, 0x0, 0x1);
        gbc.writeMem(0x8ddd, { 0xe2 });
        gbc.writeMem(0xff67, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbffb);
        EXPECT(gbc.pc(), 0x8dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ddd), 0xe2);
        EXPECT(gbc.readMem(0xff67), 0x25);
        // E2 0194
        gbc.setState(0xbf3, 0xe91e, 0xe080, 0x1990, 0xcdf9, 0x94b9, 0x0, 0x1);
        gbc.writeMem(0xbf3, { 0xe2 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe91e);
        EXPECT(gbc.pc(), 0xbf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff90), 0xe0);
        // E2 0195
        gbc.setState(0xde47, 0xfe3b, 0xb1f0, 0xf012, 0x5a5, 0x6ddb, 0x0, 0x0);
        gbc.writeMem(0xde47, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xfe3b);
        EXPECT(gbc.pc(), 0xde48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde47), 0xe2);
        EXPECT(gbc.readMem(0xff12), 0xb1);
        // E2 0196
        gbc.setState(0xe6c0, 0x798b, 0x1a70, 0x3a22, 0x7300, 0x5f, 0x0, 0x1);
        gbc.writeMem(0xe6c0, { 0xe2 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x798b);
        EXPECT(gbc.pc(), 0xe6c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c0), 0xe2);
        EXPECT(gbc.readMem(0xff22), 0x1a);
        // E2 0197
        gbc.setState(0xe45a, 0xd1a5, 0xd710, 0x16a3, 0x1d7a, 0xa96e, 0x0, 0x1);
        gbc.writeMem(0xe45a, { 0xe2 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd1a5);
        EXPECT(gbc.pc(), 0xe45b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe45a), 0xe2);
        EXPECT(gbc.readMem(0xffa3), 0xd7);
        // E2 0198
        gbc.setState(0x4e1c, 0xab40, 0xf5b0, 0x399, 0x9dfe, 0x17d8, 0x1, 0x1);
        gbc.writeMem(0x4e1c, { 0xe2 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xab40);
        EXPECT(gbc.pc(), 0x4e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff99), 0xf5);
        // E2 0199
        gbc.setState(0x5b2b, 0xe134, 0xe9f0, 0x9a6f, 0x90fe, 0xc656, 0x0, 0x0);
        gbc.writeMem(0x5b2b, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe134);
        EXPECT(gbc.pc(), 0x5b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff6f), 0xe9);
        // E2 019A
        gbc.setState(0xa035, 0x744a, 0x1120, 0x2551, 0x8444, 0xd94b, 0x1, 0x0);
        gbc.writeMem(0xa035, { 0xe2 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x744a);
        EXPECT(gbc.pc(), 0xa036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa035), 0xe2);
        EXPECT(gbc.readMem(0xff51), 0x11);
        // E2 019B
        gbc.setState(0xaa01, 0xdc5f, 0x7f70, 0x3aa8, 0x37b8, 0x3bea, 0x0, 0x0);
        gbc.writeMem(0xaa01, { 0xe2 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xdc5f);
        EXPECT(gbc.pc(), 0xaa02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa01), 0xe2);
        EXPECT(gbc.readMem(0xffa8), 0x7f);
        // E2 019C
        gbc.setState(0xe85e, 0x9ea, 0x38f0, 0x8e70, 0x64c, 0x5ece, 0x1, 0x1);
        gbc.writeMem(0xe85e, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9ea);
        EXPECT(gbc.pc(), 0xe85f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85e), 0xe2);
        EXPECT(gbc.readMem(0xff70), 0x38);
        // E2 019D
        gbc.setState(0x8ec2, 0xabe4, 0x780, 0xdd00, 0xfd4c, 0x873e, 0x1, 0x0);
        gbc.writeMem(0x8ec2, { 0xe2 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xabe4);
        EXPECT(gbc.pc(), 0x8ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec2), 0xe2);
        EXPECT(gbc.readMem(0xff00), 0x7);
        // E2 019E
        gbc.setState(0x4fb3, 0xfca4, 0xe430, 0xdfcb, 0xedca, 0x7f45, 0x0, 0x1);
        gbc.writeMem(0x4fb3, { 0xe2 });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfca4);
        EXPECT(gbc.pc(), 0x4fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffcb), 0xe4);
        // E2 019F
        gbc.setState(0x11c5, 0x91b4, 0xdf00, 0xa85f, 0x3206, 0x6987, 0x0, 0x1);
        gbc.writeMem(0x11c5, { 0xe2 });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x91b4);
        EXPECT(gbc.pc(), 0x11c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5f), 0xdf);
        // E2 01A0
        gbc.setState(0x5a27, 0x3be9, 0xf9f0, 0x8d6c, 0x298f, 0x8f4c, 0x1, 0x0);
        gbc.writeMem(0x5a27, { 0xe2 });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3be9);
        EXPECT(gbc.pc(), 0x5a28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff6c), 0xf9);
        // E2 01A1
        gbc.setState(0xd30d, 0xd043, 0x2a60, 0x3eff, 0xbf9b, 0x630, 0x0, 0x1);
        gbc.writeMem(0xd30d, { 0xe2 });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd043);
        EXPECT(gbc.pc(), 0xd30e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd30d), 0xe2);
        EXPECT(gbc.readMem(0xffff), 0x2a);
        // E2 01A2
        gbc.setState(0xeac7, 0x3e9a, 0x2ff0, 0x9940, 0x4cbf, 0x7807, 0x1, 0x0);
        gbc.writeMem(0xeac7, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3e9a);
        EXPECT(gbc.pc(), 0xeac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeac7), 0xe2);
        EXPECT(gbc.readMem(0xff40), 0x2f);
        // E2 01A3
        gbc.setState(0x3daa, 0xe587, 0xaba0, 0x1e47, 0xf225, 0x777f, 0x0, 0x1);
        gbc.writeMem(0x3daa, { 0xe2 });
        gbc.writeMem(0xff47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe587);
        EXPECT(gbc.pc(), 0x3dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff47), 0xab);
        // E2 01A5
        gbc.setState(0x4ae5, 0x21de, 0x4150, 0x3d53, 0x4095, 0xab7c, 0x0, 0x1);
        gbc.writeMem(0x4ae5, { 0xe2 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x21de);
        EXPECT(gbc.pc(), 0x4ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff53), 0x41);
        // E2 01A6
        gbc.setState(0xcf5d, 0x640a, 0x1ee0, 0x7728, 0x4a0d, 0x1fb4, 0x0, 0x1);
        gbc.writeMem(0xcf5d, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x640a);
        EXPECT(gbc.pc(), 0xcf5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf5d), 0xe2);
        EXPECT(gbc.readMem(0xff28), 0x1e);
        // E2 01A7
        gbc.setState(0x6ad0, 0xe546, 0x2000, 0x30e4, 0x9f7d, 0xb0cc, 0x0, 0x1);
        gbc.writeMem(0x6ad0, { 0xe2 });
        gbc.writeMem(0xffe4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe546);
        EXPECT(gbc.pc(), 0x6ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe4), 0x20);
        // E2 01A9
        gbc.setState(0xe8d8, 0x1019, 0xeea0, 0x2b6d, 0xa664, 0x4fb7, 0x0, 0x1);
        gbc.writeMem(0xe8d8, { 0xe2 });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1019);
        EXPECT(gbc.pc(), 0xe8d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d8), 0xe2);
        EXPECT(gbc.readMem(0xff6d), 0xee);
        // E2 01AA
        gbc.setState(0x4bc2, 0x47ea, 0x6490, 0xf9d0, 0xb77c, 0xf34f, 0x0, 0x1);
        gbc.writeMem(0x4bc2, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x47ea);
        EXPECT(gbc.pc(), 0x4bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd0), 0x64);
        // E2 01AB
        gbc.setState(0xe891, 0xc992, 0xc4f0, 0x1f64, 0x58ef, 0xb58d, 0x1, 0x0);
        gbc.writeMem(0xe891, { 0xe2 });
        gbc.writeMem(0xff64, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc992);
        EXPECT(gbc.pc(), 0xe892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe891), 0xe2);
        EXPECT(gbc.readMem(0xff64), 0xc4);
        // E2 01AC
        gbc.setState(0x46de, 0x5ac3, 0x3c00, 0xef8a, 0xb560, 0x8724, 0x1, 0x1);
        gbc.writeMem(0x46de, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5ac3);
        EXPECT(gbc.pc(), 0x46df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8a), 0x3c);
        // E2 01AD
        gbc.setState(0x4a45, 0xf460, 0x4500, 0xbba0, 0xb237, 0x859c, 0x0, 0x1);
        gbc.writeMem(0x4a45, { 0xe2 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf460);
        EXPECT(gbc.pc(), 0x4a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa0), 0x45);
        // E2 01AE
        gbc.setState(0x4798, 0x80cf, 0xc0e0, 0x348, 0x28bc, 0xe7be, 0x1, 0x1);
        gbc.writeMem(0x4798, { 0xe2 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x80cf);
        EXPECT(gbc.pc(), 0x4799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff48), 0xc0);
        // E2 01AF
        gbc.setState(0x1665, 0x9c7c, 0xdb50, 0x92fa, 0x66b1, 0x3d74, 0x1, 0x0);
        gbc.writeMem(0x1665, { 0xe2 });
        gbc.writeMem(0xfffa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9c7c);
        EXPECT(gbc.pc(), 0x1666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfffa), 0xdb);
        // E2 01B1
        gbc.setState(0x2807, 0xbf42, 0x75a0, 0x430a, 0x7c43, 0x41fc, 0x1, 0x0);
        gbc.writeMem(0x2807, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbf42);
        EXPECT(gbc.pc(), 0x2808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0a), 0x75);
        // E2 01B2
        gbc.setState(0x3046, 0xea2c, 0x2a70, 0xc9ff, 0x8b50, 0x287f, 0x1, 0x0);
        gbc.writeMem(0x3046, { 0xe2 });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xea2c);
        EXPECT(gbc.pc(), 0x3047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffff), 0x2a);
        // E2 01B3
        gbc.setState(0xe2ad, 0x5963, 0xf410, 0xae6, 0x201, 0xce1d, 0x0, 0x0);
        gbc.writeMem(0xe2ad, { 0xe2 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5963);
        EXPECT(gbc.pc(), 0xe2ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ad), 0xe2);
        EXPECT(gbc.readMem(0xffe6), 0xf4);
        // E2 01B4
        gbc.setState(0x50ba, 0xb464, 0x37c0, 0x48e2, 0xf37c, 0x9668, 0x0, 0x1);
        gbc.writeMem(0x50ba, { 0xe2 });
        gbc.writeMem(0xffe2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb464);
        EXPECT(gbc.pc(), 0x50bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe2), 0x37);
        // E2 01B5
        gbc.setState(0x3247, 0xfebd, 0x4e70, 0x15ef, 0x98a7, 0x9317, 0x1, 0x0);
        gbc.writeMem(0x3247, { 0xe2 });
        gbc.writeMem(0xffef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfebd);
        EXPECT(gbc.pc(), 0x3248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffef), 0x4e);
        // E2 01B6
        gbc.setState(0x5251, 0xe048, 0xc670, 0xd91c, 0xb9ad, 0x1451, 0x0, 0x1);
        gbc.writeMem(0x5251, { 0xe2 });
        gbc.writeMem(0xff1c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe048);
        EXPECT(gbc.pc(), 0x5252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1c), 0xc6);
        // E2 01B7
        gbc.setState(0x7e5b, 0x7343, 0xc7a0, 0xfd4f, 0xd2f6, 0xea29, 0x1, 0x1);
        gbc.writeMem(0x7e5b, { 0xe2 });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7343);
        EXPECT(gbc.pc(), 0x7e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4f), 0xc7);
        // E2 01B8
        gbc.setState(0x5cea, 0xd5d6, 0xe260, 0x5eed, 0x4f69, 0xd275, 0x1, 0x0);
        gbc.writeMem(0x5cea, { 0xe2 });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd5d6);
        EXPECT(gbc.pc(), 0x5ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffed), 0xe2);
        // E2 01B9
        gbc.setState(0x89e6, 0x30bf, 0x8a0, 0xd113, 0x9a62, 0x3e6d, 0x0, 0x0);
        gbc.writeMem(0x89e6, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x30bf);
        EXPECT(gbc.pc(), 0x89e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e6), 0xe2);
        EXPECT(gbc.readMem(0xff13), 0x8);
        // E2 01BA
        gbc.setState(0x3846, 0xe17b, 0x7330, 0xbb7f, 0x8302, 0x1440, 0x0, 0x0);
        gbc.writeMem(0x3846, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe17b);
        EXPECT(gbc.pc(), 0x3847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7f), 0x73);
        // E2 01BB
        gbc.setState(0xe576, 0x2508, 0x79e0, 0xd4ec, 0x6ce2, 0xa1f6, 0x0, 0x1);
        gbc.writeMem(0xe576, { 0xe2 });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2508);
        EXPECT(gbc.pc(), 0xe577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe576), 0xe2);
        EXPECT(gbc.readMem(0xffec), 0x79);
        // E2 01BD
        gbc.setState(0x3d04, 0x5371, 0xd10, 0xc872, 0xc1b3, 0xc207, 0x0, 0x1);
        gbc.writeMem(0x3d04, { 0xe2 });
        gbc.writeMem(0xff72, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5371);
        EXPECT(gbc.pc(), 0x3d05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff72), 0xd);
        // E2 01BF
        gbc.setState(0x6986, 0x7d02, 0x4310, 0x9ca8, 0xe152, 0x395e, 0x0, 0x1);
        gbc.writeMem(0x6986, { 0xe2 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7d02);
        EXPECT(gbc.pc(), 0x6987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffa8), 0x43);
        // E2 01C0
        gbc.setState(0xe2a2, 0x8b51, 0x17d0, 0xa613, 0xbcaa, 0x6f34, 0x0, 0x0);
        gbc.writeMem(0xe2a2, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8b51);
        EXPECT(gbc.pc(), 0xe2a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a2), 0xe2);
        EXPECT(gbc.readMem(0xff13), 0x17);
        // E2 01C1
        gbc.setState(0x4ee8, 0xc0db, 0x7f90, 0x217d, 0x6b59, 0xaadb, 0x1, 0x0);
        gbc.writeMem(0x4ee8, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc0db);
        EXPECT(gbc.pc(), 0x4ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7d), 0x7f);
        // E2 01C2
        gbc.setState(0x464a, 0xfae0, 0x1ee0, 0xa98a, 0xfb1e, 0x3edc, 0x0, 0x1);
        gbc.writeMem(0x464a, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfae0);
        EXPECT(gbc.pc(), 0x464b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8a), 0x1e);
        // E2 01C3
        gbc.setState(0x4cf7, 0x1a4e, 0xaf70, 0xd26, 0x5757, 0x663e, 0x0, 0x0);
        gbc.writeMem(0x4cf7, { 0xe2 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1a4e);
        EXPECT(gbc.pc(), 0x4cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff26), 0xaf);
        // E2 01C4
        gbc.setState(0x6174, 0x9e5d, 0xe3a0, 0x737d, 0xb9d, 0xf66f, 0x1, 0x0);
        gbc.writeMem(0x6174, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9e5d);
        EXPECT(gbc.pc(), 0x6175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff7d), 0xe3);
        // E2 01C5
        gbc.setState(0x59ba, 0x4956, 0x0, 0x896a, 0x7cf5, 0x3b2e, 0x0, 0x0);
        gbc.writeMem(0x59ba, { 0xe2 });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4956);
        EXPECT(gbc.pc(), 0x59bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6a), 0x0);
        // E2 01C7
        gbc.setState(0xe6e4, 0x2f75, 0x38e0, 0x33e5, 0xbfc2, 0x4159, 0x0, 0x0);
        gbc.writeMem(0xe6e4, { 0xe2 });
        gbc.writeMem(0xffe5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2f75);
        EXPECT(gbc.pc(), 0xe6e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e4), 0xe2);
        EXPECT(gbc.readMem(0xffe5), 0x38);
        // E2 01C8
        gbc.setState(0x6332, 0x7dae, 0xa7f0, 0x8bf1, 0xaf1f, 0x3ad9, 0x1, 0x0);
        gbc.writeMem(0x6332, { 0xe2 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7dae);
        EXPECT(gbc.pc(), 0x6333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff1), 0xa7);
        // E2 01C9
        gbc.setState(0x281b, 0x1e7c, 0xda70, 0x5276, 0x7806, 0xea92, 0x0, 0x1);
        gbc.writeMem(0x281b, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1e7c);
        EXPECT(gbc.pc(), 0x281c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff76), 0xda);
        // E2 01CA
        gbc.setState(0x6a44, 0x8523, 0xce00, 0x249, 0x20f0, 0xd703, 0x0, 0x0);
        gbc.writeMem(0x6a44, { 0xe2 });
        gbc.writeMem(0xff49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8523);
        EXPECT(gbc.pc(), 0x6a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff49), 0xce);
        // E2 01CB
        gbc.setState(0x1bd1, 0xb062, 0x3010, 0x52f9, 0xce8b, 0x1cb3, 0x0, 0x0);
        gbc.writeMem(0x1bd1, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb062);
        EXPECT(gbc.pc(), 0x1bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff9), 0x30);
        // E2 01CC
        gbc.setState(0xa820, 0xd370, 0xa250, 0xd9c2, 0xae14, 0x3d14, 0x0, 0x1);
        gbc.writeMem(0xa820, { 0xe2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd370);
        EXPECT(gbc.pc(), 0xa821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa820), 0xe2);
        EXPECT(gbc.readMem(0xffc2), 0xa2);
        // E2 01CD
        gbc.setState(0x678e, 0x72d8, 0x2c90, 0xa4d9, 0x298a, 0x1fd0, 0x1, 0x1);
        gbc.writeMem(0x678e, { 0xe2 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x72d8);
        EXPECT(gbc.pc(), 0x678f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd9), 0x2c);
        // E2 01CE
        gbc.setState(0x22, 0xf68b, 0xea30, 0x2019, 0xe692, 0x881f, 0x0, 0x1);
        gbc.writeMem(0x22, { 0xe2 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf68b);
        EXPECT(gbc.pc(), 0x23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff19), 0xea);
        // E2 01CF
        gbc.setState(0xadd2, 0x6607, 0x6880, 0x84bc, 0xc18c, 0xc3b5, 0x1, 0x1);
        gbc.writeMem(0xadd2, { 0xe2 });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6607);
        EXPECT(gbc.pc(), 0xadd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd2), 0xe2);
        EXPECT(gbc.readMem(0xffbc), 0x68);
        // E2 01D0
        gbc.setState(0xa3b6, 0xfa9d, 0xc460, 0x34ce, 0xfde7, 0xf4f4, 0x1, 0x0);
        gbc.writeMem(0xa3b6, { 0xe2 });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfa9d);
        EXPECT(gbc.pc(), 0xa3b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3b6), 0xe2);
        EXPECT(gbc.readMem(0xffce), 0xc4);
        // E2 01D1
        gbc.setState(0x768d, 0xd6ad, 0x2f00, 0x47f1, 0x1c53, 0x4ee, 0x0, 0x1);
        gbc.writeMem(0x768d, { 0xe2 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd6ad);
        EXPECT(gbc.pc(), 0x768e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff1), 0x2f);
        // E2 01D2
        gbc.setState(0x7bff, 0x7295, 0x80f0, 0x54e9, 0xafe7, 0xb7e8, 0x0, 0x0);
        gbc.writeMem(0x7bff, { 0xe2 });
        gbc.writeMem(0xffe9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7295);
        EXPECT(gbc.pc(), 0x7c00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe9), 0x80);
        // E2 01D3
        gbc.setState(0xee31, 0x7ed8, 0x8370, 0x6078, 0x4fe9, 0x881, 0x0, 0x0);
        gbc.writeMem(0xee31, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7ed8);
        EXPECT(gbc.pc(), 0xee32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee31), 0xe2);
        EXPECT(gbc.readMem(0xff78), 0x83);
        // E2 01D4
        gbc.setState(0x2ae7, 0x6ae4, 0x9680, 0xe97c, 0x4fa, 0x849d, 0x0, 0x1);
        gbc.writeMem(0x2ae7, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6ae4);
        EXPECT(gbc.pc(), 0x2ae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff7c), 0x96);
        // E2 01D5
        gbc.setState(0x3b8c, 0xad2f, 0x7890, 0xf9c1, 0x4931, 0xd879, 0x1, 0x0);
        gbc.writeMem(0x3b8c, { 0xe2 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xad2f);
        EXPECT(gbc.pc(), 0x3b8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc1), 0x78);
        // E2 01D6
        gbc.setState(0x9276, 0xc5a9, 0xb790, 0x42b5, 0x4701, 0x5fa5, 0x1, 0x1);
        gbc.writeMem(0x9276, { 0xe2 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc5a9);
        EXPECT(gbc.pc(), 0x9277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9276), 0xe2);
        EXPECT(gbc.readMem(0xffb5), 0xb7);
        // E2 01D7
        gbc.setState(0xa269, 0x630, 0x9200, 0xe956, 0xafc0, 0xbfbb, 0x1, 0x0);
        gbc.writeMem(0xa269, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x630);
        EXPECT(gbc.pc(), 0xa26a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa269), 0xe2);
        EXPECT(gbc.readMem(0xff56), 0x92);
        // E2 01D8
        gbc.setState(0x107f, 0x11ba, 0x3ac0, 0x673d, 0xb22, 0x58fd, 0x0, 0x0);
        gbc.writeMem(0x107f, { 0xe2 });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x11ba);
        EXPECT(gbc.pc(), 0x1080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3d), 0x3a);
        // E2 01D9
        gbc.setState(0x69c3, 0xef28, 0xe010, 0x98a, 0xb386, 0xca39, 0x1, 0x1);
        gbc.writeMem(0x69c3, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xef28);
        EXPECT(gbc.pc(), 0x69c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8a), 0xe0);
        // E2 01DA
        gbc.setState(0xeca5, 0x429, 0x9d0, 0x5ca7, 0x2dc9, 0x65aa, 0x0, 0x1);
        gbc.writeMem(0xeca5, { 0xe2 });
        gbc.writeMem(0xffa7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x429);
        EXPECT(gbc.pc(), 0xeca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca5), 0xe2);
        EXPECT(gbc.readMem(0xffa7), 0x9);
        // E2 01DB
        gbc.setState(0x3b7f, 0x6c96, 0x3da0, 0x1656, 0x5220, 0x31a, 0x0, 0x0);
        gbc.writeMem(0x3b7f, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6c96);
        EXPECT(gbc.pc(), 0x3b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff56), 0x3d);
        // E2 01DD
        gbc.setState(0x92fb, 0xfc23, 0x2e60, 0x919a, 0x568c, 0x53c8, 0x0, 0x1);
        gbc.writeMem(0x92fb, { 0xe2 });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfc23);
        EXPECT(gbc.pc(), 0x92fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92fb), 0xe2);
        EXPECT(gbc.readMem(0xff9a), 0x2e);
        // E2 01DE
        gbc.setState(0x2ac, 0xc5d0, 0xd200, 0x44b3, 0x244a, 0x9023, 0x0, 0x0);
        gbc.writeMem(0x2ac, { 0xe2 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc5d0);
        EXPECT(gbc.pc(), 0x2ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb3), 0xd2);
        // E2 01DF
        gbc.setState(0x989, 0xbd03, 0x3c50, 0xb27c, 0x585a, 0x23af, 0x1, 0x0);
        gbc.writeMem(0x989, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbd03);
        EXPECT(gbc.pc(), 0x98a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7c), 0x3c);
        // E2 01E0
        gbc.setState(0x3b0, 0x63b8, 0xd380, 0xc6e, 0x4f46, 0xb626, 0x1, 0x0);
        gbc.writeMem(0x3b0, { 0xe2 });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x63b8);
        EXPECT(gbc.pc(), 0x3b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6e), 0xd3);
        // E2 01E1
        gbc.setState(0x4dbb, 0x3faa, 0x1a50, 0xbb43, 0xa5a5, 0x2ed, 0x1, 0x0);
        gbc.writeMem(0x4dbb, { 0xe2 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3faa);
        EXPECT(gbc.pc(), 0x4dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff43), 0x1a);
        // E2 01E2
        gbc.setState(0xe8bf, 0xf5ed, 0x3360, 0xf07a, 0x564d, 0x4974, 0x0, 0x0);
        gbc.writeMem(0xe8bf, { 0xe2 });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf5ed);
        EXPECT(gbc.pc(), 0xe8c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8bf), 0xe2);
        EXPECT(gbc.readMem(0xff7a), 0x33);
        // E2 01E3
        gbc.setState(0x23c0, 0x4c55, 0xb600, 0x151e, 0x86c6, 0x44cd, 0x1, 0x0);
        gbc.writeMem(0x23c0, { 0xe2 });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4c55);
        EXPECT(gbc.pc(), 0x23c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff1e), 0xb6);
        // E2 01E4
        gbc.setState(0xbb6c, 0x762b, 0x3d20, 0xac03, 0xaa21, 0xa809, 0x0, 0x1);
        gbc.writeMem(0xbb6c, { 0xe2 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x762b);
        EXPECT(gbc.pc(), 0xbb6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb6c), 0xe2);
        EXPECT(gbc.readMem(0xff03), 0x3d);
        // E2 01E5
        gbc.setState(0xac32, 0x9047, 0xf490, 0x5010, 0xe4af, 0x9fd9, 0x1, 0x0);
        gbc.writeMem(0xac32, { 0xe2 });
        gbc.writeMem(0xff10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9047);
        EXPECT(gbc.pc(), 0xac33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac32), 0xe2);
        EXPECT(gbc.readMem(0xff10), 0xf4);
        // E2 01E6
        gbc.setState(0xde48, 0x647, 0x8a60, 0x77a8, 0x7216, 0x4d9a, 0x0, 0x0);
        gbc.writeMem(0xde48, { 0xe2 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x647);
        EXPECT(gbc.pc(), 0xde49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde48), 0xe2);
        EXPECT(gbc.readMem(0xffa8), 0x8a);
        // E2 01E7
        gbc.setState(0x869e, 0x1e2f, 0x1a10, 0xb621, 0x487a, 0x23c3, 0x0, 0x1);
        gbc.writeMem(0x869e, { 0xe2 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1e2f);
        EXPECT(gbc.pc(), 0x869f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x869e), 0xe2);
        EXPECT(gbc.readMem(0xff21), 0x1a);
        // E2 01E8
        gbc.setState(0x43b, 0xc9d7, 0x2aa0, 0x455c, 0xd356, 0x3968, 0x0, 0x0);
        gbc.writeMem(0x43b, { 0xe2 });
        gbc.writeMem(0xff5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc9d7);
        EXPECT(gbc.pc(), 0x43c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5c), 0x2a);
        // E2 01E9
        gbc.setState(0x5bb5, 0xe07e, 0xdf90, 0x24c6, 0x566d, 0x6612, 0x0, 0x1);
        gbc.writeMem(0x5bb5, { 0xe2 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe07e);
        EXPECT(gbc.pc(), 0x5bb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc6), 0xdf);
        // E2 01EA
        gbc.setState(0xc015, 0xf310, 0x72b0, 0x47f4, 0x1776, 0xd81f, 0x0, 0x1);
        gbc.writeMem(0xc015, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf310);
        EXPECT(gbc.pc(), 0xc016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc015), 0xe2);
        EXPECT(gbc.readMem(0xfff4), 0x72);
        // E2 01EB
        gbc.setState(0x20f3, 0xbe30, 0x89b0, 0xe840, 0x262c, 0x925e, 0x1, 0x0);
        gbc.writeMem(0x20f3, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbe30);
        EXPECT(gbc.pc(), 0x20f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff40), 0x89);
        // E2 01ED
        gbc.setState(0xadf, 0xba05, 0xf90, 0xfe99, 0x94f5, 0x8017, 0x1, 0x1);
        gbc.writeMem(0xadf, { 0xe2 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xba05);
        EXPECT(gbc.pc(), 0xae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff99), 0xf);
        // E2 01F0
        gbc.setState(0xe305, 0xe2ab, 0x3f60, 0x5eb2, 0x4857, 0x8128, 0x0, 0x0);
        gbc.writeMem(0xe305, { 0xe2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe2ab);
        EXPECT(gbc.pc(), 0xe306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe305), 0xe2);
        EXPECT(gbc.readMem(0xffb2), 0x3f);
        // E2 01F1
        gbc.setState(0x5d1c, 0xd917, 0x6210, 0x9c9, 0x2e4a, 0x3622, 0x0, 0x0);
        gbc.writeMem(0x5d1c, { 0xe2 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd917);
        EXPECT(gbc.pc(), 0x5d1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc9), 0x62);
        // E2 01F2
        gbc.setState(0xdbb9, 0xed7f, 0xa5d0, 0x6133, 0xbbb2, 0x2a5b, 0x0, 0x1);
        gbc.writeMem(0xdbb9, { 0xe2 });
        gbc.writeMem(0xff33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xed7f);
        EXPECT(gbc.pc(), 0xdbba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb9), 0xe2);
        EXPECT(gbc.readMem(0xff33), 0xa5);
        // E2 01F3
        gbc.setState(0x28f0, 0x5dd6, 0xfb60, 0xdc22, 0x1c8e, 0xaf3e, 0x1, 0x1);
        gbc.writeMem(0x28f0, { 0xe2 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5dd6);
        EXPECT(gbc.pc(), 0x28f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff22), 0xfb);
        // E2 01F4
        gbc.setState(0x7e39, 0xc598, 0xbd00, 0xa652, 0x8ccc, 0xa60c, 0x0, 0x1);
        gbc.writeMem(0x7e39, { 0xe2 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc598);
        EXPECT(gbc.pc(), 0x7e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff52), 0xbd);
        // E2 01F5
        gbc.setState(0x2d30, 0x938a, 0xaca0, 0xcf21, 0x2871, 0xef52, 0x0, 0x0);
        gbc.writeMem(0x2d30, { 0xe2 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x938a);
        EXPECT(gbc.pc(), 0x2d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff21), 0xac);
        // E2 01F6
        gbc.setState(0x227d, 0x1b98, 0x7790, 0xb2dc, 0xc962, 0x78cc, 0x1, 0x0);
        gbc.writeMem(0x227d, { 0xe2 });
        gbc.writeMem(0xffdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1b98);
        EXPECT(gbc.pc(), 0x227e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffdc), 0x77);
        // E2 01F7
        gbc.setState(0x6bc, 0xffe, 0x6f20, 0xae4d, 0x5883, 0xfe0f, 0x0, 0x0);
        gbc.writeMem(0x6bc, { 0xe2 });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xffe);
        EXPECT(gbc.pc(), 0x6bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4d), 0x6f);
        // E2 01F8
        gbc.setState(0x461, 0x9efc, 0xa020, 0xff04, 0xdc7, 0x799c, 0x0, 0x1);
        gbc.writeMem(0x461, { 0xe2 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9efc);
        EXPECT(gbc.pc(), 0x462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff04), 0xa0);
        // E2 01F9
        gbc.setState(0xd100, 0xd1d1, 0xe570, 0x469c, 0x844d, 0x417c, 0x1, 0x1);
        gbc.writeMem(0xd100, { 0xe2 });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd1d1);
        EXPECT(gbc.pc(), 0xd101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd100), 0xe2);
        EXPECT(gbc.readMem(0xff9c), 0xe5);
        // E2 01FA
        gbc.setState(0x6568, 0x7a3f, 0x52f0, 0x8b6f, 0x5519, 0x48e, 0x0, 0x0);
        gbc.writeMem(0x6568, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7a3f);
        EXPECT(gbc.pc(), 0x6569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff6f), 0x52);
        // E2 01FB
        gbc.setState(0x46d5, 0x28b0, 0xcfc0, 0x9443, 0x9017, 0x478e, 0x0, 0x0);
        gbc.writeMem(0x46d5, { 0xe2 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x28b0);
        EXPECT(gbc.pc(), 0x46d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff43), 0xcf);
        // E2 01FC
        gbc.setState(0xd2d4, 0xea98, 0x3660, 0x264, 0x1580, 0x19e2, 0x0, 0x0);
        gbc.writeMem(0xd2d4, { 0xe2 });
        gbc.writeMem(0xff64, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xea98);
        EXPECT(gbc.pc(), 0xd2d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d4), 0xe2);
        EXPECT(gbc.readMem(0xff64), 0x36);
        // E2 01FD
        gbc.setState(0xe829, 0x7bba, 0xf4e0, 0x15c2, 0xef9b, 0xcca4, 0x0, 0x0);
        gbc.writeMem(0xe829, { 0xe2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7bba);
        EXPECT(gbc.pc(), 0xe82a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe829), 0xe2);
        EXPECT(gbc.readMem(0xffc2), 0xf4);
        // E2 01FE
        gbc.setState(0x5579, 0xdfc7, 0x8510, 0x29ab, 0x995f, 0xcc77, 0x0, 0x1);
        gbc.writeMem(0x5579, { 0xe2 });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdfc7);
        EXPECT(gbc.pc(), 0x557a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffab), 0x85);
        // E2 01FF
        gbc.setState(0xa44e, 0x8e4, 0xc750, 0x334a, 0x8d35, 0x878d, 0x1, 0x1);
        gbc.writeMem(0xa44e, { 0xe2 });
        gbc.writeMem(0xff4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8e4);
        EXPECT(gbc.pc(), 0xa44f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44e), 0xe2);
        EXPECT(gbc.readMem(0xff4a), 0xc7);
        // E2 0200
        gbc.setState(0xad6c, 0xe5df, 0xb270, 0x4eb9, 0x15bf, 0xf805, 0x0, 0x1);
        gbc.writeMem(0xad6c, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe5df);
        EXPECT(gbc.pc(), 0xad6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6c), 0xe2);
        EXPECT(gbc.readMem(0xffb9), 0xb2);
        // E2 0201
        gbc.setState(0xe929, 0xce63, 0x6340, 0xc17d, 0xc20c, 0x4c8f, 0x1, 0x0);
        gbc.writeMem(0xe929, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xce63);
        EXPECT(gbc.pc(), 0xe92a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe929), 0xe2);
        EXPECT(gbc.readMem(0xff7d), 0x63);
        // E2 0202
        gbc.setState(0x7abc, 0x6074, 0x6430, 0x8f59, 0x2449, 0x6d5d, 0x1, 0x0);
        gbc.writeMem(0x7abc, { 0xe2 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6074);
        EXPECT(gbc.pc(), 0x7abd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff59), 0x64);
        // E2 0203
        gbc.setState(0x8ec5, 0xdc, 0x3b10, 0xe13a, 0xa2f0, 0x2ad7, 0x0, 0x0);
        gbc.writeMem(0x8ec5, { 0xe2 });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdc);
        EXPECT(gbc.pc(), 0x8ec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec5), 0xe2);
        EXPECT(gbc.readMem(0xff3a), 0x3b);
        // E2 0204
        gbc.setState(0xc64, 0xeea4, 0x7e0, 0xb156, 0x3a2e, 0x284e, 0x0, 0x1);
        gbc.writeMem(0xc64, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xeea4);
        EXPECT(gbc.pc(), 0xc65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff56), 0x7);
        // E2 0205
        gbc.setState(0x7259, 0x5296, 0x9fc0, 0x2d5b, 0x1e2c, 0x8961, 0x1, 0x0);
        gbc.writeMem(0x7259, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5296);
        EXPECT(gbc.pc(), 0x725a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5b), 0x9f);
        // E2 0206
        gbc.setState(0x5d8a, 0x341d, 0x7300, 0xcc89, 0xd9e4, 0xd2af, 0x1, 0x1);
        gbc.writeMem(0x5d8a, { 0xe2 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x341d);
        EXPECT(gbc.pc(), 0x5d8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff89), 0x73);
        // E2 0207
        gbc.setState(0xa825, 0x71a, 0x6f20, 0x3ce4, 0x6c3d, 0x603c, 0x0, 0x1);
        gbc.writeMem(0xa825, { 0xe2 });
        gbc.writeMem(0xffe4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x71a);
        EXPECT(gbc.pc(), 0xa826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa825), 0xe2);
        EXPECT(gbc.readMem(0xffe4), 0x6f);
        // E2 0208
        gbc.setState(0x31b0, 0xd3a1, 0xc290, 0x3178, 0xcf06, 0x625d, 0x1, 0x0);
        gbc.writeMem(0x31b0, { 0xe2 });
        gbc.writeMem(0xff78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd3a1);
        EXPECT(gbc.pc(), 0x31b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff78), 0xc2);
        // E2 0209
        gbc.setState(0x98cf, 0xbfb6, 0xea50, 0x56fd, 0xa826, 0x5315, 0x1, 0x0);
        gbc.writeMem(0x98cf, { 0xe2 });
        gbc.writeMem(0xfffd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbfb6);
        EXPECT(gbc.pc(), 0x98d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98cf), 0xe2);
        EXPECT(gbc.readMem(0xfffd), 0xea);
        // E2 020A
        gbc.setState(0x6cbf, 0x82fe, 0x1210, 0x3137, 0x373a, 0x2e7b, 0x0, 0x1);
        gbc.writeMem(0x6cbf, { 0xe2 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x82fe);
        EXPECT(gbc.pc(), 0x6cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff37), 0x12);
        // E2 020B
        gbc.setState(0xbbe5, 0x40a5, 0xf4c0, 0xc934, 0x9e23, 0x95ff, 0x1, 0x0);
        gbc.writeMem(0xbbe5, { 0xe2 });
        gbc.writeMem(0xff34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x40a5);
        EXPECT(gbc.pc(), 0xbbe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe5), 0xe2);
        EXPECT(gbc.readMem(0xff34), 0xf4);
        // E2 020C
        gbc.setState(0xcc38, 0x60ce, 0xd2f0, 0x8d8f, 0x6ab2, 0xa708, 0x0, 0x0);
        gbc.writeMem(0xcc38, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x60ce);
        EXPECT(gbc.pc(), 0xcc39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc38), 0xe2);
        EXPECT(gbc.readMem(0xff8f), 0xd2);
        // E2 020D
        gbc.setState(0x101e, 0x2234, 0x6af0, 0xeef4, 0x24b2, 0x1f33, 0x1, 0x1);
        gbc.writeMem(0x101e, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2234);
        EXPECT(gbc.pc(), 0x101f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff4), 0x6a);
        // E2 020E
        gbc.setState(0x7846, 0x1449, 0xf620, 0xb602, 0xbb92, 0xada3, 0x1, 0x1);
        gbc.writeMem(0x7846, { 0xe2 });
        gbc.writeMem(0xff02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1449);
        EXPECT(gbc.pc(), 0x7847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff02), 0xf6);
        // E2 020F
        gbc.setState(0x62af, 0xfc5c, 0xea60, 0x139c, 0x5319, 0xc870, 0x1, 0x0);
        gbc.writeMem(0x62af, { 0xe2 });
        gbc.writeMem(0xff9c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfc5c);
        EXPECT(gbc.pc(), 0x62b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9c), 0xea);
        // E2 0210
        gbc.setState(0x88f3, 0x8615, 0x2370, 0x10b2, 0xd944, 0xeb15, 0x1, 0x0);
        gbc.writeMem(0x88f3, { 0xe2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8615);
        EXPECT(gbc.pc(), 0x88f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f3), 0xe2);
        EXPECT(gbc.readMem(0xffb2), 0x23);
        // E2 0211
        gbc.setState(0xe481, 0x9fb9, 0x97a0, 0x99ce, 0x8941, 0xcc72, 0x1, 0x1);
        gbc.writeMem(0xe481, { 0xe2 });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9fb9);
        EXPECT(gbc.pc(), 0xe482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe481), 0xe2);
        EXPECT(gbc.readMem(0xffce), 0x97);
        // E2 0212
        gbc.setState(0x16cc, 0xaa8d, 0xdf0, 0xa9f2, 0xff99, 0x4b26, 0x1, 0x0);
        gbc.writeMem(0x16cc, { 0xe2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xaa8d);
        EXPECT(gbc.pc(), 0x16cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff2), 0xd);
        // E2 0213
        gbc.setState(0xb3c0, 0xa38a, 0xe2e0, 0x79dd, 0x7c6a, 0x2c86, 0x1, 0x0);
        gbc.writeMem(0xb3c0, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa38a);
        EXPECT(gbc.pc(), 0xb3c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c0), 0xe2);
        EXPECT(gbc.readMem(0xffdd), 0xe2);
        // E2 0215
        gbc.setState(0x4083, 0x2181, 0xf240, 0x149d, 0x4750, 0xfe85, 0x0, 0x1);
        gbc.writeMem(0x4083, { 0xe2 });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2181);
        EXPECT(gbc.pc(), 0x4084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9d), 0xf2);
        // E2 0216
        gbc.setState(0x3c27, 0x2605, 0x1040, 0xfa9a, 0xb49c, 0xd297, 0x0, 0x0);
        gbc.writeMem(0x3c27, { 0xe2 });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2605);
        EXPECT(gbc.pc(), 0x3c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9a), 0x10);
        // E2 0217
        gbc.setState(0x6ce4, 0xb233, 0x5d0, 0x23a3, 0x3782, 0x1704, 0x0, 0x1);
        gbc.writeMem(0x6ce4, { 0xe2 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb233);
        EXPECT(gbc.pc(), 0x6ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffa3), 0x5);
        // E2 0218
        gbc.setState(0x3a3c, 0x8086, 0x7ec0, 0x348c, 0xf83a, 0x5b7d, 0x0, 0x1);
        gbc.writeMem(0x3a3c, { 0xe2 });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8086);
        EXPECT(gbc.pc(), 0x3a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8c), 0x7e);
        // E2 0219
        gbc.setState(0x80c8, 0x94ea, 0x6310, 0x21fb, 0x4576, 0x1757, 0x0, 0x0);
        gbc.writeMem(0x80c8, { 0xe2 });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x94ea);
        EXPECT(gbc.pc(), 0x80c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c8), 0xe2);
        EXPECT(gbc.readMem(0xfffb), 0x63);
        // E2 021A
        gbc.setState(0xab67, 0x3941, 0x90d0, 0x2b86, 0x9b51, 0xa726, 0x0, 0x1);
        gbc.writeMem(0xab67, { 0xe2 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3941);
        EXPECT(gbc.pc(), 0xab68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab67), 0xe2);
        EXPECT(gbc.readMem(0xff86), 0x90);
        // E2 021B
        gbc.setState(0x3fa2, 0x9d0c, 0x77b0, 0xbc0e, 0xb242, 0xef37, 0x1, 0x1);
        gbc.writeMem(0x3fa2, { 0xe2 });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9d0c);
        EXPECT(gbc.pc(), 0x3fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0e), 0x77);
        // E2 021C
        gbc.setState(0x3ef1, 0xd88d, 0x3120, 0xcaf7, 0xb984, 0xd5b7, 0x1, 0x1);
        gbc.writeMem(0x3ef1, { 0xe2 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd88d);
        EXPECT(gbc.pc(), 0x3ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff7), 0x31);
        // E2 021D
        gbc.setState(0x82c0, 0xbfc7, 0x82b0, 0x2275, 0x6389, 0xc21a, 0x1, 0x1);
        gbc.writeMem(0x82c0, { 0xe2 });
        gbc.writeMem(0xff75, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbfc7);
        EXPECT(gbc.pc(), 0x82c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c0), 0xe2);
        EXPECT(gbc.readMem(0xff75), 0x82);
        // E2 021E
        gbc.setState(0x6276, 0x14d3, 0x1b10, 0x520b, 0xfc55, 0x7e87, 0x0, 0x1);
        gbc.writeMem(0x6276, { 0xe2 });
        gbc.writeMem(0xff0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x14d3);
        EXPECT(gbc.pc(), 0x6277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0b), 0x1b);
        // E2 021F
        gbc.setState(0xcb98, 0x6d8f, 0xf510, 0x301e, 0x5d1b, 0x3fbf, 0x1, 0x0);
        gbc.writeMem(0xcb98, { 0xe2 });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6d8f);
        EXPECT(gbc.pc(), 0xcb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb98), 0xe2);
        EXPECT(gbc.readMem(0xff1e), 0xf5);
        // E2 0220
        gbc.setState(0xb639, 0x42b6, 0x83c0, 0x635c, 0xc780, 0x553c, 0x1, 0x1);
        gbc.writeMem(0xb639, { 0xe2 });
        gbc.writeMem(0xff5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x42b6);
        EXPECT(gbc.pc(), 0xb63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb639), 0xe2);
        EXPECT(gbc.readMem(0xff5c), 0x83);
        // E2 0221
        gbc.setState(0x7e98, 0x2a3f, 0x7830, 0xc10d, 0x3dad, 0x3666, 0x1, 0x1);
        gbc.writeMem(0x7e98, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2a3f);
        EXPECT(gbc.pc(), 0x7e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0d), 0x78);
        // E2 0222
        gbc.setState(0x7c59, 0x3e01, 0x1500, 0x13a5, 0x9457, 0xe161, 0x1, 0x1);
        gbc.writeMem(0x7c59, { 0xe2 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3e01);
        EXPECT(gbc.pc(), 0x7c5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa5), 0x15);
        // E2 0223
        gbc.setState(0x1662, 0x1885, 0x3c30, 0x2726, 0x9ffa, 0xad96, 0x1, 0x0);
        gbc.writeMem(0x1662, { 0xe2 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1885);
        EXPECT(gbc.pc(), 0x1663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff26), 0x3c);
        // E2 0224
        gbc.setState(0xa119, 0x4ca0, 0x81c0, 0x10fc, 0xbc, 0xe6e7, 0x1, 0x0);
        gbc.writeMem(0xa119, { 0xe2 });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4ca0);
        EXPECT(gbc.pc(), 0xa11a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa119), 0xe2);
        EXPECT(gbc.readMem(0xfffc), 0x81);
        // E2 0225
        gbc.setState(0x101, 0xf156, 0xe560, 0xe777, 0x8ffa, 0x8d90, 0x1, 0x0);
        gbc.writeMem(0x101, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf156);
        EXPECT(gbc.pc(), 0x102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff77), 0xe5);
        // E2 0226
        gbc.setState(0xcc70, 0xfd1d, 0x8a0, 0x6508, 0xf56c, 0xdf66, 0x1, 0x1);
        gbc.writeMem(0xcc70, { 0xe2 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfd1d);
        EXPECT(gbc.pc(), 0xcc71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc70), 0xe2);
        EXPECT(gbc.readMem(0xff08), 0x8);
        // E2 0227
        gbc.setState(0x2fb9, 0x2137, 0x5be0, 0xb0cc, 0x2fa0, 0xf019, 0x1, 0x1);
        gbc.writeMem(0x2fb9, { 0xe2 });
        gbc.writeMem(0xffcc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2137);
        EXPECT(gbc.pc(), 0x2fba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffcc), 0x5b);
        // E2 0228
        gbc.setState(0x5e33, 0xabb4, 0x5940, 0x2943, 0x7e, 0xd40e, 0x1, 0x0);
        gbc.writeMem(0x5e33, { 0xe2 });
        gbc.writeMem(0xff43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xabb4);
        EXPECT(gbc.pc(), 0x5e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff43), 0x59);
        // E2 0229
        gbc.setState(0x7cee, 0x9ed6, 0xa450, 0xeed4, 0x6c2, 0x312, 0x0, 0x1);
        gbc.writeMem(0x7cee, { 0xe2 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9ed6);
        EXPECT(gbc.pc(), 0x7cef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd4), 0xa4);
        // E2 022A
        gbc.setState(0x89da, 0x187, 0x52b0, 0x820f, 0x2209, 0xcdff, 0x1, 0x0);
        gbc.writeMem(0x89da, { 0xe2 });
        gbc.writeMem(0xff0f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x187);
        EXPECT(gbc.pc(), 0x89db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89da), 0xe2);
        EXPECT(gbc.readMem(0xff0f), 0x52);
        // E2 022B
        gbc.setState(0xc852, 0x83e, 0xc520, 0x335e, 0xce75, 0x95dc, 0x0, 0x0);
        gbc.writeMem(0xc852, { 0xe2 });
        gbc.writeMem(0xff5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x83e);
        EXPECT(gbc.pc(), 0xc853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc852), 0xe2);
        EXPECT(gbc.readMem(0xff5e), 0xc5);
        // E2 022C
        gbc.setState(0x6359, 0x1a89, 0xa0f0, 0x3f7c, 0x7231, 0x362c, 0x1, 0x1);
        gbc.writeMem(0x6359, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1a89);
        EXPECT(gbc.pc(), 0x635a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7c), 0xa0);
        // E2 022D
        gbc.setState(0x95a8, 0xc188, 0x8be0, 0xf1bd, 0x74fc, 0xb124, 0x0, 0x0);
        gbc.writeMem(0x95a8, { 0xe2 });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc188);
        EXPECT(gbc.pc(), 0x95a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a8), 0xe2);
        EXPECT(gbc.readMem(0xffbd), 0x8b);
        // E2 022E
        gbc.setState(0xb7ba, 0xb82d, 0x7ee0, 0xa2c8, 0xf68e, 0x2bfd, 0x0, 0x0);
        gbc.writeMem(0xb7ba, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb82d);
        EXPECT(gbc.pc(), 0xb7bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ba), 0xe2);
        EXPECT(gbc.readMem(0xffc8), 0x7e);
        // E2 022F
        gbc.setState(0xc458, 0x8374, 0xe970, 0xbb9e, 0xe354, 0x894a, 0x1, 0x1);
        gbc.writeMem(0xc458, { 0xe2 });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8374);
        EXPECT(gbc.pc(), 0xc459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc458), 0xe2);
        EXPECT(gbc.readMem(0xff9e), 0xe9);
        // E2 0230
        gbc.setState(0x8c26, 0x46ee, 0x2dd0, 0x862d, 0x330b, 0x764c, 0x0, 0x0);
        gbc.writeMem(0x8c26, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x46ee);
        EXPECT(gbc.pc(), 0x8c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c26), 0xe2);
        EXPECT(gbc.readMem(0xff2d), 0x2d);
        // E2 0231
        gbc.setState(0x2cb5, 0xdf17, 0xd070, 0x9f8e, 0x2636, 0xec62, 0x1, 0x0);
        gbc.writeMem(0x2cb5, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xdf17);
        EXPECT(gbc.pc(), 0x2cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8e), 0xd0);
        // E2 0232
        gbc.setState(0xbd8d, 0xf2b, 0x87b0, 0x92fd, 0x6c5b, 0xe581, 0x1, 0x1);
        gbc.writeMem(0xbd8d, { 0xe2 });
        gbc.writeMem(0xfffd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf2b);
        EXPECT(gbc.pc(), 0xbd8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd8d), 0xe2);
        EXPECT(gbc.readMem(0xfffd), 0x87);
        // E2 0233
        gbc.setState(0x108d, 0x5f75, 0x6280, 0xa099, 0xd6e4, 0xe65f, 0x1, 0x0);
        gbc.writeMem(0x108d, { 0xe2 });
        gbc.writeMem(0xff99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5f75);
        EXPECT(gbc.pc(), 0x108e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff99), 0x62);
        // E2 0234
        gbc.setState(0x3865, 0x663f, 0x22e0, 0xc1f2, 0x6db8, 0xf29a, 0x0, 0x1);
        gbc.writeMem(0x3865, { 0xe2 });
        gbc.writeMem(0xfff2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x663f);
        EXPECT(gbc.pc(), 0x3866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff2), 0x22);
        // E2 0235
        gbc.setState(0x2b13, 0xbc85, 0x2230, 0x6793, 0x57b7, 0x927f, 0x1, 0x1);
        gbc.writeMem(0x2b13, { 0xe2 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbc85);
        EXPECT(gbc.pc(), 0x2b14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff93), 0x22);
        // E2 0236
        gbc.setState(0x7028, 0x76d6, 0x4ac0, 0x1347, 0x4507, 0x46eb, 0x1, 0x0);
        gbc.writeMem(0x7028, { 0xe2 });
        gbc.writeMem(0xff47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x76d6);
        EXPECT(gbc.pc(), 0x7029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff47), 0x4a);
        // E2 0237
        gbc.setState(0xc5c7, 0x2078, 0xfec0, 0x93a1, 0x82c1, 0xd233, 0x0, 0x1);
        gbc.writeMem(0xc5c7, { 0xe2 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2078);
        EXPECT(gbc.pc(), 0xc5c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c7), 0xe2);
        EXPECT(gbc.readMem(0xffa1), 0xfe);
        // E2 0238
        gbc.setState(0xbd7a, 0xa19c, 0x4970, 0x33c2, 0xa690, 0xad4d, 0x1, 0x0);
        gbc.writeMem(0xbd7a, { 0xe2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa19c);
        EXPECT(gbc.pc(), 0xbd7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd7a), 0xe2);
        EXPECT(gbc.readMem(0xffc2), 0x49);
        // E2 0239
        gbc.setState(0x7c0a, 0xbd02, 0x7250, 0xaaf9, 0x14dc, 0xb8c2, 0x1, 0x0);
        gbc.writeMem(0x7c0a, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbd02);
        EXPECT(gbc.pc(), 0x7c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff9), 0x72);
        // E2 023A
        gbc.setState(0x7f37, 0xf6e4, 0x5a90, 0x4025, 0x1382, 0x321f, 0x0, 0x0);
        gbc.writeMem(0x7f37, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf6e4);
        EXPECT(gbc.pc(), 0x7f38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff25), 0x5a);
        // E2 023B
        gbc.setState(0x254a, 0x9673, 0x5f50, 0x4b9f, 0x7d76, 0x86dd, 0x1, 0x1);
        gbc.writeMem(0x254a, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9673);
        EXPECT(gbc.pc(), 0x254b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9f), 0x5f);
        // E2 023C
        gbc.setState(0x8d27, 0x9187, 0x9c70, 0xbc54, 0xf2e0, 0x795c, 0x0, 0x1);
        gbc.writeMem(0x8d27, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9187);
        EXPECT(gbc.pc(), 0x8d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d27), 0xe2);
        EXPECT(gbc.readMem(0xff54), 0x9c);
        // E2 023D
        gbc.setState(0xa7a2, 0xb48c, 0x4e60, 0xfbae, 0x16a5, 0x9893, 0x0, 0x1);
        gbc.writeMem(0xa7a2, { 0xe2 });
        gbc.writeMem(0xffae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb48c);
        EXPECT(gbc.pc(), 0xa7a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a2), 0xe2);
        EXPECT(gbc.readMem(0xffae), 0x4e);
        // E2 023E
        gbc.setState(0xa20f, 0x8212, 0x1460, 0xb067, 0x42e8, 0xf522, 0x0, 0x0);
        gbc.writeMem(0xa20f, { 0xe2 });
        gbc.writeMem(0xff67, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8212);
        EXPECT(gbc.pc(), 0xa210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20f), 0xe2);
        EXPECT(gbc.readMem(0xff67), 0x14);
        // E2 023F
        gbc.setState(0x555a, 0x849c, 0x9720, 0x63c4, 0xb718, 0xbfd, 0x0, 0x0);
        gbc.writeMem(0x555a, { 0xe2 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x849c);
        EXPECT(gbc.pc(), 0x555b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc4), 0x97);
        // E2 0241
        gbc.setState(0xbc66, 0x878b, 0xaf20, 0xc553, 0xcf14, 0x474b, 0x1, 0x0);
        gbc.writeMem(0xbc66, { 0xe2 });
        gbc.writeMem(0xff53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x878b);
        EXPECT(gbc.pc(), 0xbc67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc66), 0xe2);
        EXPECT(gbc.readMem(0xff53), 0xaf);
        // E2 0242
        gbc.setState(0x1e49, 0x672, 0xf130, 0x8c0, 0xc552, 0xc128, 0x1, 0x1);
        gbc.writeMem(0x1e49, { 0xe2 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x672);
        EXPECT(gbc.pc(), 0x1e4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc0), 0xf1);
        // E2 0243
        gbc.setState(0x5dc5, 0x1b17, 0x9dc0, 0x65d2, 0x5c10, 0xf8ed, 0x1, 0x0);
        gbc.writeMem(0x5dc5, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1b17);
        EXPECT(gbc.pc(), 0x5dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd2), 0x9d);
        // E2 0244
        gbc.setState(0xb1a1, 0x1160, 0x7290, 0x7c12, 0x5a7e, 0xbef5, 0x0, 0x0);
        gbc.writeMem(0xb1a1, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1160);
        EXPECT(gbc.pc(), 0xb1a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a1), 0xe2);
        EXPECT(gbc.readMem(0xff12), 0x72);
        // E2 0245
        gbc.setState(0x6b13, 0xaaab, 0x4ea0, 0xac22, 0x292f, 0x6bdb, 0x0, 0x1);
        gbc.writeMem(0x6b13, { 0xe2 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xaaab);
        EXPECT(gbc.pc(), 0x6b14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff22), 0x4e);
        // E2 0247
        gbc.setState(0xdd3f, 0x34f1, 0xa330, 0xa322, 0x86, 0xb188, 0x0, 0x1);
        gbc.writeMem(0xdd3f, { 0xe2 });
        gbc.writeMem(0xff22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x34f1);
        EXPECT(gbc.pc(), 0xdd40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3f), 0xe2);
        EXPECT(gbc.readMem(0xff22), 0xa3);
        // E2 0248
        gbc.setState(0x66d, 0x83a4, 0x3b50, 0x60d5, 0xb78f, 0x1fb6, 0x0, 0x0);
        gbc.writeMem(0x66d, { 0xe2 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x83a4);
        EXPECT(gbc.pc(), 0x66e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd5), 0x3b);
        // E2 0249
        gbc.setState(0xaa81, 0x1393, 0x47e0, 0xcc91, 0xfd6e, 0x4f98, 0x1, 0x1);
        gbc.writeMem(0xaa81, { 0xe2 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1393);
        EXPECT(gbc.pc(), 0xaa82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa81), 0xe2);
        EXPECT(gbc.readMem(0xff91), 0x47);
        // E2 024A
        gbc.setState(0xa43f, 0x39fb, 0xad90, 0x2a08, 0x8560, 0x3fbf, 0x1, 0x1);
        gbc.writeMem(0xa43f, { 0xe2 });
        gbc.writeMem(0xff08, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x39fb);
        EXPECT(gbc.pc(), 0xa440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa43f), 0xe2);
        EXPECT(gbc.readMem(0xff08), 0xad);
        // E2 024B
        gbc.setState(0x3d72, 0xf457, 0x3600, 0xdadd, 0xcf0b, 0xddb, 0x1, 0x1);
        gbc.writeMem(0x3d72, { 0xe2 });
        gbc.writeMem(0xffdd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf457);
        EXPECT(gbc.pc(), 0x3d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffdd), 0x36);
        // E2 024C
        gbc.setState(0x7175, 0xaac2, 0x1120, 0x3e3a, 0xa9ee, 0xdd84, 0x0, 0x0);
        gbc.writeMem(0x7175, { 0xe2 });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xaac2);
        EXPECT(gbc.pc(), 0x7176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3a), 0x11);
        // E2 024D
        gbc.setState(0xa85e, 0xc74f, 0xcae0, 0x2c09, 0x41a7, 0x12de, 0x1, 0x0);
        gbc.writeMem(0xa85e, { 0xe2 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc74f);
        EXPECT(gbc.pc(), 0xa85f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa85e), 0xe2);
        EXPECT(gbc.readMem(0xff09), 0xca);
        // E2 024E
        gbc.setState(0xb72c, 0x62eb, 0x97a0, 0x30e6, 0x8541, 0x7af1, 0x1, 0x0);
        gbc.writeMem(0xb72c, { 0xe2 });
        gbc.writeMem(0xffe6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x62eb);
        EXPECT(gbc.pc(), 0xb72d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb72c), 0xe2);
        EXPECT(gbc.readMem(0xffe6), 0x97);
        // E2 024F
        gbc.setState(0x7def, 0x9594, 0xd4c0, 0x3bba, 0x98b0, 0x4b13, 0x0, 0x1);
        gbc.writeMem(0x7def, { 0xe2 });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9594);
        EXPECT(gbc.pc(), 0x7df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffba), 0xd4);
        // E2 0250
        gbc.setState(0x35a0, 0x293e, 0xf650, 0x5f59, 0x443d, 0x656e, 0x1, 0x0);
        gbc.writeMem(0x35a0, { 0xe2 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x293e);
        EXPECT(gbc.pc(), 0x35a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff59), 0xf6);
        // E2 0251
        gbc.setState(0x6a19, 0x1c37, 0xfda0, 0x83e1, 0x16f9, 0x38cc, 0x1, 0x0);
        gbc.writeMem(0x6a19, { 0xe2 });
        gbc.writeMem(0xffe1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1c37);
        EXPECT(gbc.pc(), 0x6a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe1), 0xfd);
        // E2 0252
        gbc.setState(0x89af, 0xdcc9, 0x3b80, 0x1311, 0x7a4d, 0xc2f2, 0x0, 0x1);
        gbc.writeMem(0x89af, { 0xe2 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xdcc9);
        EXPECT(gbc.pc(), 0x89b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89af), 0xe2);
        EXPECT(gbc.readMem(0xff11), 0x3b);
        // E2 0253
        gbc.setState(0x31fa, 0xdf30, 0x2cd0, 0xd5c, 0x32ba, 0x57be, 0x1, 0x0);
        gbc.writeMem(0x31fa, { 0xe2 });
        gbc.writeMem(0xff5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdf30);
        EXPECT(gbc.pc(), 0x31fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5c), 0x2c);
        // E2 0254
        gbc.setState(0xc85f, 0xe756, 0xa110, 0x5c12, 0xa96, 0xca2c, 0x1, 0x0);
        gbc.writeMem(0xc85f, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe756);
        EXPECT(gbc.pc(), 0xc860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc85f), 0xe2);
        EXPECT(gbc.readMem(0xff12), 0xa1);
        // E2 0255
        gbc.setState(0x62d1, 0xb477, 0x7b10, 0xe3ec, 0x7634, 0x1622, 0x0, 0x0);
        gbc.writeMem(0x62d1, { 0xe2 });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb477);
        EXPECT(gbc.pc(), 0x62d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffec), 0x7b);
        // E2 0256
        gbc.setState(0x1b92, 0x797, 0x2280, 0x2d8e, 0x36fc, 0x227c, 0x0, 0x1);
        gbc.writeMem(0x1b92, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x797);
        EXPECT(gbc.pc(), 0x1b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8e), 0x22);
        // E2 0257
        gbc.setState(0xd48d, 0xc201, 0xe9c0, 0x4d51, 0xa078, 0xcc47, 0x1, 0x1);
        gbc.writeMem(0xd48d, { 0xe2 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc201);
        EXPECT(gbc.pc(), 0xd48e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd48d), 0xe2);
        EXPECT(gbc.readMem(0xff51), 0xe9);
        // E2 0258
        gbc.setState(0x2441, 0x780c, 0x41d0, 0xe8f5, 0x9d5, 0xa9c8, 0x1, 0x0);
        gbc.writeMem(0x2441, { 0xe2 });
        gbc.writeMem(0xfff5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x780c);
        EXPECT(gbc.pc(), 0x2442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff5), 0x41);
        // E2 0259
        gbc.setState(0xce47, 0x5a39, 0x33d0, 0xe154, 0xbbab, 0x6364, 0x0, 0x1);
        gbc.writeMem(0xce47, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5a39);
        EXPECT(gbc.pc(), 0xce48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce47), 0xe2);
        EXPECT(gbc.readMem(0xff54), 0x33);
        // E2 025A
        gbc.setState(0x4e24, 0xa3e, 0x300, 0xc173, 0xaa0b, 0x54c3, 0x0, 0x1);
        gbc.writeMem(0x4e24, { 0xe2 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa3e);
        EXPECT(gbc.pc(), 0x4e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff73), 0x3);
        // E2 025B
        gbc.setState(0xc126, 0x3cc3, 0xc160, 0xa259, 0x11a2, 0xa104, 0x1, 0x1);
        gbc.writeMem(0xc126, { 0xe2 });
        gbc.writeMem(0xff59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3cc3);
        EXPECT(gbc.pc(), 0xc127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc126), 0xe2);
        EXPECT(gbc.readMem(0xff59), 0xc1);
        // E2 025C
        gbc.setState(0x729e, 0x131, 0x17d0, 0xae1f, 0x10ab, 0x89f, 0x0, 0x0);
        gbc.writeMem(0x729e, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x131);
        EXPECT(gbc.pc(), 0x729f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1f), 0x17);
        // E2 025D
        gbc.setState(0x201b, 0x3001, 0xf640, 0xdbff, 0x4622, 0x4423, 0x0, 0x0);
        gbc.writeMem(0x201b, { 0xe2 });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3001);
        EXPECT(gbc.pc(), 0x201c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffff), 0xf6);
        // E2 025E
        gbc.setState(0x9c96, 0xe77f, 0x47d0, 0xdd2b, 0x3268, 0x9aaf, 0x1, 0x0);
        gbc.writeMem(0x9c96, { 0xe2 });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe77f);
        EXPECT(gbc.pc(), 0x9c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c96), 0xe2);
        EXPECT(gbc.readMem(0xff2b), 0x47);
        // E2 025F
        gbc.setState(0xb4b7, 0xe6a0, 0xd900, 0xc163, 0x34e9, 0xdcfe, 0x1, 0x0);
        gbc.writeMem(0xb4b7, { 0xe2 });
        gbc.writeMem(0xff63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe6a0);
        EXPECT(gbc.pc(), 0xb4b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b7), 0xe2);
        EXPECT(gbc.readMem(0xff63), 0xd9);
        // E2 0260
        gbc.setState(0x354a, 0x77c3, 0xa740, 0x1ac8, 0xee08, 0xc0e2, 0x1, 0x1);
        gbc.writeMem(0x354a, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x77c3);
        EXPECT(gbc.pc(), 0x354b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc8), 0xa7);
        // E2 0262
        gbc.setState(0x28bd, 0x590a, 0xcf50, 0xe40c, 0x37d3, 0xebf1, 0x0, 0x1);
        gbc.writeMem(0x28bd, { 0xe2 });
        gbc.writeMem(0xff0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x590a);
        EXPECT(gbc.pc(), 0x28be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0c), 0xcf);
        // E2 0263
        gbc.setState(0x7889, 0xfbd5, 0xf580, 0x647f, 0xf8a2, 0xa431, 0x0, 0x1);
        gbc.writeMem(0x7889, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xfbd5);
        EXPECT(gbc.pc(), 0x788a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff7f), 0xf5);
        // E2 0264
        gbc.setState(0xdbb9, 0xd758, 0xba10, 0x6156, 0x3a75, 0x93d2, 0x0, 0x1);
        gbc.writeMem(0xdbb9, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd758);
        EXPECT(gbc.pc(), 0xdbba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb9), 0xe2);
        EXPECT(gbc.readMem(0xff56), 0xba);
        // E2 0265
        gbc.setState(0x59a8, 0x9831, 0x6150, 0xacba, 0x70c3, 0xa575, 0x0, 0x0);
        gbc.writeMem(0x59a8, { 0xe2 });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9831);
        EXPECT(gbc.pc(), 0x59a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffba), 0x61);
        // E2 0266
        gbc.setState(0x9182, 0xcf8, 0xb5b0, 0xc3da, 0x71ac, 0x5f24, 0x0, 0x1);
        gbc.writeMem(0x9182, { 0xe2 });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcf8);
        EXPECT(gbc.pc(), 0x9183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9182), 0xe2);
        EXPECT(gbc.readMem(0xffda), 0xb5);
        // E2 0267
        gbc.setState(0xb93b, 0xd19e, 0x6bf0, 0xff3b, 0x14be, 0xcce5, 0x0, 0x1);
        gbc.writeMem(0xb93b, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd19e);
        EXPECT(gbc.pc(), 0xb93c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93b), 0xe2);
        EXPECT(gbc.readMem(0xff3b), 0x6b);
        // E2 0268
        gbc.setState(0x38d0, 0x8028, 0x3070, 0xd00f, 0xf23b, 0xcfd4, 0x1, 0x1);
        gbc.writeMem(0x38d0, { 0xe2 });
        gbc.writeMem(0xff0f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8028);
        EXPECT(gbc.pc(), 0x38d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0f), 0x30);
        // E2 0269
        gbc.setState(0x38f0, 0xd5b3, 0x66f0, 0x8700, 0xe11f, 0x3d54, 0x0, 0x0);
        gbc.writeMem(0x38f0, { 0xe2 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd5b3);
        EXPECT(gbc.pc(), 0x38f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff00), 0x66);
        // E2 026A
        gbc.setState(0xa651, 0x3716, 0x3d70, 0x417c, 0x2113, 0x5318, 0x1, 0x0);
        gbc.writeMem(0xa651, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3716);
        EXPECT(gbc.pc(), 0xa652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa651), 0xe2);
        EXPECT(gbc.readMem(0xff7c), 0x3d);
        // E2 026B
        gbc.setState(0x7b3, 0xb538, 0x4890, 0x30ec, 0x7df6, 0x77f6, 0x0, 0x0);
        gbc.writeMem(0x7b3, { 0xe2 });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb538);
        EXPECT(gbc.pc(), 0x7b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffec), 0x48);
        // E2 026C
        gbc.setState(0xdc0c, 0x8337, 0x49d0, 0x7487, 0xcc06, 0x5918, 0x1, 0x1);
        gbc.writeMem(0xdc0c, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8337);
        EXPECT(gbc.pc(), 0xdc0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc0c), 0xe2);
        EXPECT(gbc.readMem(0xff87), 0x49);
        // E2 026D
        gbc.setState(0xcc8f, 0xec5e, 0x6a10, 0xcd30, 0xaf98, 0xa42f, 0x1, 0x0);
        gbc.writeMem(0xcc8f, { 0xe2 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xec5e);
        EXPECT(gbc.pc(), 0xcc90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc8f), 0xe2);
        EXPECT(gbc.readMem(0xff30), 0x6a);
        // E2 026E
        gbc.setState(0x4948, 0xdab2, 0x8060, 0x8a44, 0x4184, 0x25e, 0x0, 0x0);
        gbc.writeMem(0x4948, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xdab2);
        EXPECT(gbc.pc(), 0x4949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff44), 0x80);
        // E2 026F
        gbc.setState(0x1391, 0x9e2, 0x54d0, 0xf8c8, 0x50f, 0xc1b4, 0x0, 0x1);
        gbc.writeMem(0x1391, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9e2);
        EXPECT(gbc.pc(), 0x1392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc8), 0x54);
        // E2 0270
        gbc.setState(0x5e58, 0x9533, 0xdbc0, 0xe454, 0x685e, 0xec9c, 0x1, 0x1);
        gbc.writeMem(0x5e58, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9533);
        EXPECT(gbc.pc(), 0x5e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff54), 0xdb);
        // E2 0271
        gbc.setState(0x7e5a, 0x9b3d, 0xe5a0, 0xff15, 0x5834, 0x9b7d, 0x1, 0x1);
        gbc.writeMem(0x7e5a, { 0xe2 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9b3d);
        EXPECT(gbc.pc(), 0x7e5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff15), 0xe5);
        // E2 0272
        gbc.setState(0x9a3e, 0xcf7b, 0xb580, 0x17e2, 0x4314, 0x2e69, 0x0, 0x1);
        gbc.writeMem(0x9a3e, { 0xe2 });
        gbc.writeMem(0xffe2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcf7b);
        EXPECT(gbc.pc(), 0x9a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a3e), 0xe2);
        EXPECT(gbc.readMem(0xffe2), 0xb5);
        // E2 0273
        gbc.setState(0xd9a7, 0x28a8, 0xfe70, 0x8f05, 0x4af6, 0x637, 0x1, 0x0);
        gbc.writeMem(0xd9a7, { 0xe2 });
        gbc.writeMem(0xff05, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x28a8);
        EXPECT(gbc.pc(), 0xd9a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a7), 0xe2);
        EXPECT(gbc.readMem(0xff05), 0xfe);
        // E2 0274
        gbc.setState(0x19f7, 0xf6f5, 0x2c10, 0x4927, 0xb5ce, 0xa79a, 0x0, 0x1);
        gbc.writeMem(0x19f7, { 0xe2 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf6f5);
        EXPECT(gbc.pc(), 0x19f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff27), 0x2c);
        // E2 0276
        gbc.setState(0x36c0, 0xe06d, 0xe5a0, 0x34a2, 0xbf4e, 0x2007, 0x1, 0x0);
        gbc.writeMem(0x36c0, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe06d);
        EXPECT(gbc.pc(), 0x36c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa2), 0xe5);
        // E2 0277
        gbc.setState(0x5d41, 0xfbd8, 0x5cd0, 0xbc8e, 0x654, 0xc196, 0x0, 0x1);
        gbc.writeMem(0x5d41, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfbd8);
        EXPECT(gbc.pc(), 0x5d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8e), 0x5c);
        // E2 0278
        gbc.setState(0x747a, 0xe0ad, 0x8870, 0x44e8, 0x1ac2, 0xc1c9, 0x0, 0x1);
        gbc.writeMem(0x747a, { 0xe2 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe0ad);
        EXPECT(gbc.pc(), 0x747b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe8), 0x88);
        // E2 0279
        gbc.setState(0xa7db, 0x8e03, 0x7890, 0x3dd9, 0x2566, 0x3f21, 0x0, 0x1);
        gbc.writeMem(0xa7db, { 0xe2 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8e03);
        EXPECT(gbc.pc(), 0xa7dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7db), 0xe2);
        EXPECT(gbc.readMem(0xffd9), 0x78);
        // E2 027A
        gbc.setState(0x38c2, 0xa825, 0xd1a0, 0xd65d, 0x466, 0x4877, 0x0, 0x1);
        gbc.writeMem(0x38c2, { 0xe2 });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa825);
        EXPECT(gbc.pc(), 0x38c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5d), 0xd1);
        // E2 027B
        gbc.setState(0x1a6a, 0x2357, 0xd390, 0xeeb9, 0xd347, 0x292e, 0x0, 0x1);
        gbc.writeMem(0x1a6a, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2357);
        EXPECT(gbc.pc(), 0x1a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb9), 0xd3);
        // E2 027C
        gbc.setState(0xd4c4, 0x44f3, 0xce50, 0xf190, 0x98b, 0x6970, 0x1, 0x1);
        gbc.writeMem(0xd4c4, { 0xe2 });
        gbc.writeMem(0xff90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x44f3);
        EXPECT(gbc.pc(), 0xd4c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4c4), 0xe2);
        EXPECT(gbc.readMem(0xff90), 0xce);
        // E2 027D
        gbc.setState(0x394, 0xd00c, 0x2230, 0x246c, 0xae8b, 0xa224, 0x0, 0x1);
        gbc.writeMem(0x394, { 0xe2 });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd00c);
        EXPECT(gbc.pc(), 0x395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff6c), 0x22);
        // E2 027F
        gbc.setState(0x908c, 0xef9e, 0xd980, 0xeda5, 0x566a, 0x10c2, 0x1, 0x0);
        gbc.writeMem(0x908c, { 0xe2 });
        gbc.writeMem(0xffa5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xef9e);
        EXPECT(gbc.pc(), 0x908d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x908c), 0xe2);
        EXPECT(gbc.readMem(0xffa5), 0xd9);
        // E2 0280
        gbc.setState(0xa1d, 0xafe9, 0x9fc0, 0xec36, 0x1f37, 0x1721, 0x1, 0x0);
        gbc.writeMem(0xa1d, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xafe9);
        EXPECT(gbc.pc(), 0xa1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff36), 0x9f);
        // E2 0281
        gbc.setState(0x6535, 0x6943, 0xe560, 0xa8e5, 0x5dff, 0x673f, 0x1, 0x0);
        gbc.writeMem(0x6535, { 0xe2 });
        gbc.writeMem(0xffe5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6943);
        EXPECT(gbc.pc(), 0x6536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe5), 0xe5);
        // E2 0282
        gbc.setState(0xe533, 0x3d83, 0x3c90, 0xf748, 0xe145, 0x3c82, 0x1, 0x0);
        gbc.writeMem(0xe533, { 0xe2 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3d83);
        EXPECT(gbc.pc(), 0xe534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe533), 0xe2);
        EXPECT(gbc.readMem(0xff48), 0x3c);
        // E2 0283
        gbc.setState(0xc393, 0xeda, 0xd620, 0x4411, 0xefa8, 0xa69e, 0x0, 0x1);
        gbc.writeMem(0xc393, { 0xe2 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xeda);
        EXPECT(gbc.pc(), 0xc394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc393), 0xe2);
        EXPECT(gbc.readMem(0xff11), 0xd6);
        // E2 0284
        gbc.setState(0x1ffe, 0x6261, 0x39d0, 0xfe7d, 0x71e5, 0xb003, 0x1, 0x1);
        gbc.writeMem(0x1ffe, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6261);
        EXPECT(gbc.pc(), 0x1fff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7d), 0x39);
        // E2 0285
        gbc.setState(0x422, 0xad34, 0x1f00, 0x23a1, 0x6a1c, 0xac88, 0x0, 0x1);
        gbc.writeMem(0x422, { 0xe2 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xad34);
        EXPECT(gbc.pc(), 0x423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa1), 0x1f);
        // E2 0286
        gbc.setState(0xe6a8, 0x4908, 0xbf90, 0x9ed1, 0x8aa8, 0x5edb, 0x0, 0x1);
        gbc.writeMem(0xe6a8, { 0xe2 });
        gbc.writeMem(0xffd1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4908);
        EXPECT(gbc.pc(), 0xe6a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a8), 0xe2);
        EXPECT(gbc.readMem(0xffd1), 0xbf);
        // E2 0287
        gbc.setState(0xb811, 0x31c2, 0x43d0, 0xe3da, 0x170, 0xb6bf, 0x1, 0x0);
        gbc.writeMem(0xb811, { 0xe2 });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x31c2);
        EXPECT(gbc.pc(), 0xb812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb811), 0xe2);
        EXPECT(gbc.readMem(0xffda), 0x43);
        // E2 0288
        gbc.setState(0x94fe, 0xb8a7, 0xc760, 0x2b1, 0xa3f4, 0x7c41, 0x1, 0x1);
        gbc.writeMem(0x94fe, { 0xe2 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb8a7);
        EXPECT(gbc.pc(), 0x94ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94fe), 0xe2);
        EXPECT(gbc.readMem(0xffb1), 0xc7);
        // E2 0289
        gbc.setState(0x7f7e, 0xb64d, 0x8e0, 0xe6f1, 0x15c, 0xc29, 0x1, 0x0);
        gbc.writeMem(0x7f7e, { 0xe2 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb64d);
        EXPECT(gbc.pc(), 0x7f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff1), 0x8);
        // E2 028B
        gbc.setState(0x2172, 0xe2ab, 0x5310, 0x2e9f, 0xa54d, 0x1fa9, 0x1, 0x0);
        gbc.writeMem(0x2172, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe2ab);
        EXPECT(gbc.pc(), 0x2173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9f), 0x53);
        // E2 028C
        gbc.setState(0xe875, 0xd555, 0xb0d0, 0xe96b, 0x4c48, 0xe39e, 0x0, 0x0);
        gbc.writeMem(0xe875, { 0xe2 });
        gbc.writeMem(0xff6b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd555);
        EXPECT(gbc.pc(), 0xe876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe875), 0xe2);
        EXPECT(gbc.readMem(0xff6b), 0xb0);
        // E2 028D
        gbc.setState(0x446b, 0xc0e8, 0xb830, 0x2120, 0x6e8c, 0x9320, 0x0, 0x0);
        gbc.writeMem(0x446b, { 0xe2 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc0e8);
        EXPECT(gbc.pc(), 0x446c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff20), 0xb8);
        // E2 028E
        gbc.setState(0x8b1d, 0xde59, 0xbaa0, 0x2045, 0xd5f3, 0x4b54, 0x1, 0x0);
        gbc.writeMem(0x8b1d, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xde59);
        EXPECT(gbc.pc(), 0x8b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b1d), 0xe2);
        EXPECT(gbc.readMem(0xff45), 0xba);
        // E2 028F
        gbc.setState(0xabeb, 0x8c7c, 0xbc30, 0xa81e, 0xfd67, 0xcc5e, 0x1, 0x0);
        gbc.writeMem(0xabeb, { 0xe2 });
        gbc.writeMem(0xff1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8c7c);
        EXPECT(gbc.pc(), 0xabec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabeb), 0xe2);
        EXPECT(gbc.readMem(0xff1e), 0xbc);
        // E2 0290
        gbc.setState(0x609c, 0xd573, 0xf80, 0xa4d2, 0x536a, 0xce32, 0x1, 0x0);
        gbc.writeMem(0x609c, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd573);
        EXPECT(gbc.pc(), 0x609d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd2), 0xf);
        // E2 0291
        gbc.setState(0xb6a9, 0xbdf6, 0x2b00, 0x8430, 0xb6f2, 0x5c78, 0x0, 0x0);
        gbc.writeMem(0xb6a9, { 0xe2 });
        gbc.writeMem(0xff30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbdf6);
        EXPECT(gbc.pc(), 0xb6aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a9), 0xe2);
        EXPECT(gbc.readMem(0xff30), 0x2b);
        // E2 0292
        gbc.setState(0xe1cc, 0x96f3, 0x88f0, 0xcd67, 0x4ca, 0xe9c5, 0x1, 0x1);
        gbc.writeMem(0xe1cc, { 0xe2 });
        gbc.writeMem(0xff67, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x96f3);
        EXPECT(gbc.pc(), 0xe1cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1cc), 0xe2);
        EXPECT(gbc.readMem(0xff67), 0x88);
        // E2 0293
        gbc.setState(0xb5aa, 0x22ad, 0xd340, 0xa368, 0xc2f3, 0x50cb, 0x1, 0x0);
        gbc.writeMem(0xb5aa, { 0xe2 });
        gbc.writeMem(0xff68, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x22ad);
        EXPECT(gbc.pc(), 0xb5ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5aa), 0xe2);
        EXPECT(gbc.readMem(0xff68), 0xd3);
        // E2 0294
        gbc.setState(0x5593, 0xe916, 0x8e80, 0x2aea, 0x2c1c, 0x2d5f, 0x1, 0x1);
        gbc.writeMem(0x5593, { 0xe2 });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe916);
        EXPECT(gbc.pc(), 0x5594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffea), 0x8e);
        // E2 0295
        gbc.setState(0x43d9, 0xf22, 0x48f0, 0xc53b, 0x325c, 0x2614, 0x0, 0x0);
        gbc.writeMem(0x43d9, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf22);
        EXPECT(gbc.pc(), 0x43da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff3b), 0x48);
        // E2 0296
        gbc.setState(0xcfaa, 0x18c0, 0x2ba0, 0x1819, 0xda91, 0x60e6, 0x1, 0x1);
        gbc.writeMem(0xcfaa, { 0xe2 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x18c0);
        EXPECT(gbc.pc(), 0xcfab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfaa), 0xe2);
        EXPECT(gbc.readMem(0xff19), 0x2b);
        // E2 0297
        gbc.setState(0x7322, 0x2ff8, 0x5f60, 0x1528, 0x2cdb, 0xad0d, 0x1, 0x1);
        gbc.writeMem(0x7322, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2ff8);
        EXPECT(gbc.pc(), 0x7323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff28), 0x5f);
        // E2 0298
        gbc.setState(0x80f9, 0x4b24, 0x4930, 0xa229, 0xf057, 0x2a41, 0x0, 0x1);
        gbc.writeMem(0x80f9, { 0xe2 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4b24);
        EXPECT(gbc.pc(), 0x80fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f9), 0xe2);
        EXPECT(gbc.readMem(0xff29), 0x49);
        // E2 0299
        gbc.setState(0xaf3b, 0x3b95, 0x47b0, 0xbbd, 0x132e, 0x4422, 0x0, 0x1);
        gbc.writeMem(0xaf3b, { 0xe2 });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3b95);
        EXPECT(gbc.pc(), 0xaf3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf3b), 0xe2);
        EXPECT(gbc.readMem(0xffbd), 0x47);
        // E2 029A
        gbc.setState(0x6a1f, 0x4463, 0x80a0, 0x8f04, 0x677b, 0x78f0, 0x1, 0x1);
        gbc.writeMem(0x6a1f, { 0xe2 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4463);
        EXPECT(gbc.pc(), 0x6a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff04), 0x80);
        // E2 029B
        gbc.setState(0x495b, 0x8a22, 0xc810, 0x9246, 0x3abc, 0x40ad, 0x1, 0x1);
        gbc.writeMem(0x495b, { 0xe2 });
        gbc.writeMem(0xff46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8a22);
        EXPECT(gbc.pc(), 0x495c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff46), 0xc8);
        // E2 029C
        gbc.setState(0x620b, 0x7dba, 0x3c30, 0xda52, 0xe76d, 0x1e20, 0x1, 0x0);
        gbc.writeMem(0x620b, { 0xe2 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7dba);
        EXPECT(gbc.pc(), 0x620c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff52), 0x3c);
        // E2 029D
        gbc.setState(0x42f, 0xef62, 0x2450, 0xee15, 0xfd25, 0x4996, 0x0, 0x1);
        gbc.writeMem(0x42f, { 0xe2 });
        gbc.writeMem(0xff15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xef62);
        EXPECT(gbc.pc(), 0x430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff15), 0x24);
        // E2 029E
        gbc.setState(0x3d4b, 0x5d26, 0x1120, 0x8847, 0x2731, 0x20f3, 0x0, 0x0);
        gbc.writeMem(0x3d4b, { 0xe2 });
        gbc.writeMem(0xff47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5d26);
        EXPECT(gbc.pc(), 0x3d4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff47), 0x11);
        // E2 029F
        gbc.setState(0xa489, 0xe024, 0x6660, 0xbf1c, 0x1956, 0x1706, 0x0, 0x0);
        gbc.writeMem(0xa489, { 0xe2 });
        gbc.writeMem(0xff1c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe024);
        EXPECT(gbc.pc(), 0xa48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa489), 0xe2);
        EXPECT(gbc.readMem(0xff1c), 0x66);
        // E2 02A0
        gbc.setState(0x8a46, 0x981b, 0xcc00, 0x605d, 0x13b3, 0xb6a2, 0x0, 0x1);
        gbc.writeMem(0x8a46, { 0xe2 });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x981b);
        EXPECT(gbc.pc(), 0x8a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a46), 0xe2);
        EXPECT(gbc.readMem(0xff5d), 0xcc);
        // E2 02A1
        gbc.setState(0xb595, 0x4010, 0x35e0, 0xed73, 0x397, 0x4847, 0x0, 0x0);
        gbc.writeMem(0xb595, { 0xe2 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4010);
        EXPECT(gbc.pc(), 0xb596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb595), 0xe2);
        EXPECT(gbc.readMem(0xff73), 0x35);
        // E2 02A2
        gbc.setState(0x7d5e, 0x5d71, 0xd6a0, 0x823b, 0xb63d, 0xab8b, 0x1, 0x0);
        gbc.writeMem(0x7d5e, { 0xe2 });
        gbc.writeMem(0xff3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5d71);
        EXPECT(gbc.pc(), 0x7d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3b), 0xd6);
        // E2 02A3
        gbc.setState(0x9464, 0xd4d5, 0x1bf0, 0x6a, 0xf992, 0xff95, 0x1, 0x0);
        gbc.writeMem(0x9464, { 0xe2 });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd4d5);
        EXPECT(gbc.pc(), 0x9465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9464), 0xe2);
        EXPECT(gbc.readMem(0xff6a), 0x1b);
        // E2 02A4
        gbc.setState(0xe069, 0x6ff0, 0x3af0, 0xc562, 0xae03, 0x2054, 0x1, 0x1);
        gbc.writeMem(0xe069, { 0xe2 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6ff0);
        EXPECT(gbc.pc(), 0xe06a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe069), 0xe2);
        EXPECT(gbc.readMem(0xff62), 0x3a);
        // E2 02A5
        gbc.setState(0xef55, 0x2d65, 0x3dd0, 0x4ba2, 0xd8ac, 0xf5cd, 0x0, 0x1);
        gbc.writeMem(0xef55, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2d65);
        EXPECT(gbc.pc(), 0xef56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef55), 0xe2);
        EXPECT(gbc.readMem(0xffa2), 0x3d);
        // E2 02A6
        gbc.setState(0x1546, 0x5d2b, 0xc940, 0x3832, 0x43b5, 0x1dee, 0x1, 0x1);
        gbc.writeMem(0x1546, { 0xe2 });
        gbc.writeMem(0xff32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5d2b);
        EXPECT(gbc.pc(), 0x1547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff32), 0xc9);
        // E2 02A7
        gbc.setState(0x35a3, 0x462e, 0xbe80, 0x6e0, 0xa2da, 0x2714, 0x1, 0x1);
        gbc.writeMem(0x35a3, { 0xe2 });
        gbc.writeMem(0xffe0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x462e);
        EXPECT(gbc.pc(), 0x35a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe0), 0xbe);
        // E2 02A8
        gbc.setState(0x5be0, 0xa796, 0x2aa0, 0xa00a, 0x911, 0x3dc7, 0x0, 0x1);
        gbc.writeMem(0x5be0, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa796);
        EXPECT(gbc.pc(), 0x5be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0a), 0x2a);
        // E2 02A9
        gbc.setState(0xc5aa, 0xb1b1, 0x130, 0xac87, 0xcccd, 0xf33c, 0x1, 0x0);
        gbc.writeMem(0xc5aa, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb1b1);
        EXPECT(gbc.pc(), 0xc5ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5aa), 0xe2);
        EXPECT(gbc.readMem(0xff87), 0x1);
        // E2 02AA
        gbc.setState(0x7d88, 0x4593, 0x7c00, 0xc093, 0x9a6, 0xe707, 0x0, 0x0);
        gbc.writeMem(0x7d88, { 0xe2 });
        gbc.writeMem(0xff93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4593);
        EXPECT(gbc.pc(), 0x7d89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff93), 0x7c);
        // E2 02AB
        gbc.setState(0x5580, 0xf320, 0x3d20, 0xab7f, 0xe5, 0x5104, 0x1, 0x1);
        gbc.writeMem(0x5580, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf320);
        EXPECT(gbc.pc(), 0x5581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff7f), 0x3d);
        // E2 02AC
        gbc.setState(0x1b09, 0x43f6, 0xc3e0, 0x2fbe, 0x5f1b, 0xa7bb, 0x0, 0x1);
        gbc.writeMem(0x1b09, { 0xe2 });
        gbc.writeMem(0xffbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x43f6);
        EXPECT(gbc.pc(), 0x1b0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffbe), 0xc3);
        // E2 02AD
        gbc.setState(0xe90, 0xc31e, 0xec60, 0xeb92, 0x71ba, 0x5166, 0x0, 0x1);
        gbc.writeMem(0xe90, { 0xe2 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc31e);
        EXPECT(gbc.pc(), 0xe91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff92), 0xec);
        // E2 02AE
        gbc.setState(0xed9a, 0x91d8, 0xcf80, 0x631f, 0xccfd, 0x9887, 0x0, 0x0);
        gbc.writeMem(0xed9a, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x91d8);
        EXPECT(gbc.pc(), 0xed9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed9a), 0xe2);
        EXPECT(gbc.readMem(0xff1f), 0xcf);
        // E2 02AF
        gbc.setState(0x4c44, 0x881e, 0x9da0, 0xce2d, 0x8132, 0x25a0, 0x1, 0x1);
        gbc.writeMem(0x4c44, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x881e);
        EXPECT(gbc.pc(), 0x4c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff2d), 0x9d);
        // E2 02B1
        gbc.setState(0x5671, 0x54b0, 0x8a20, 0x6687, 0x3a19, 0x2d81, 0x1, 0x1);
        gbc.writeMem(0x5671, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x54b0);
        EXPECT(gbc.pc(), 0x5672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff87), 0x8a);
        // E2 02B2
        gbc.setState(0xcf5, 0xac86, 0xa370, 0xbdb8, 0x4261, 0x2555, 0x1, 0x1);
        gbc.writeMem(0xcf5, { 0xe2 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xac86);
        EXPECT(gbc.pc(), 0xcf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb8), 0xa3);
        // E2 02B3
        gbc.setState(0x24b0, 0x1833, 0x6f60, 0xe14b, 0x9fda, 0xb7e4, 0x0, 0x1);
        gbc.writeMem(0x24b0, { 0xe2 });
        gbc.writeMem(0xff4b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1833);
        EXPECT(gbc.pc(), 0x24b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4b), 0x6f);
        // E2 02B4
        gbc.setState(0xdd1c, 0xee8, 0xe10, 0x169a, 0x9909, 0x6da6, 0x1, 0x1);
        gbc.writeMem(0xdd1c, { 0xe2 });
        gbc.writeMem(0xff9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xee8);
        EXPECT(gbc.pc(), 0xdd1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1c), 0xe2);
        EXPECT(gbc.readMem(0xff9a), 0xe);
        // E2 02B5
        gbc.setState(0x6775, 0x704e, 0xb480, 0xdc46, 0x721a, 0x999b, 0x0, 0x1);
        gbc.writeMem(0x6775, { 0xe2 });
        gbc.writeMem(0xff46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x704e);
        EXPECT(gbc.pc(), 0x6776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff46), 0xb4);
        // E2 02B6
        gbc.setState(0x5726, 0x1d0f, 0x5fb0, 0xdcf8, 0xaee7, 0xc3cc, 0x1, 0x1);
        gbc.writeMem(0x5726, { 0xe2 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1d0f);
        EXPECT(gbc.pc(), 0x5727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff8), 0x5f);
        // E2 02B7
        gbc.setState(0x6e39, 0x6397, 0xbfb0, 0xd97d, 0x3289, 0x9fba, 0x0, 0x0);
        gbc.writeMem(0x6e39, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6397);
        EXPECT(gbc.pc(), 0x6e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7d), 0xbf);
        // E2 02B9
        gbc.setState(0x6b84, 0xf69b, 0xfc30, 0xf987, 0x7f9f, 0x8b76, 0x1, 0x1);
        gbc.writeMem(0x6b84, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf69b);
        EXPECT(gbc.pc(), 0x6b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff87), 0xfc);
        // E2 02BA
        gbc.setState(0x5a4c, 0x4d0c, 0x2aa0, 0xf32f, 0x1746, 0xd224, 0x0, 0x1);
        gbc.writeMem(0x5a4c, { 0xe2 });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4d0c);
        EXPECT(gbc.pc(), 0x5a4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff2f), 0x2a);
        // E2 02BB
        gbc.setState(0xe284, 0x79bb, 0xec00, 0x2866, 0x69d1, 0x533d, 0x0, 0x1);
        gbc.writeMem(0xe284, { 0xe2 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x79bb);
        EXPECT(gbc.pc(), 0xe285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe284), 0xe2);
        EXPECT(gbc.readMem(0xff66), 0xec);
        // E2 02BC
        gbc.setState(0x5b78, 0x9bf3, 0x7e10, 0x79ab, 0xcf53, 0x939c, 0x1, 0x0);
        gbc.writeMem(0x5b78, { 0xe2 });
        gbc.writeMem(0xffab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9bf3);
        EXPECT(gbc.pc(), 0x5b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffab), 0x7e);
        // E2 02BD
        gbc.setState(0x9332, 0x74e3, 0xa830, 0x957f, 0x3a43, 0x9e09, 0x1, 0x1);
        gbc.writeMem(0x9332, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x74e3);
        EXPECT(gbc.pc(), 0x9333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9332), 0xe2);
        EXPECT(gbc.readMem(0xff7f), 0xa8);
        // E2 02BE
        gbc.setState(0x7c9a, 0x2183, 0x2400, 0xa0b2, 0x3e2a, 0x8883, 0x1, 0x0);
        gbc.writeMem(0x7c9a, { 0xe2 });
        gbc.writeMem(0xffb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2183);
        EXPECT(gbc.pc(), 0x7c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb2), 0x24);
        // E2 02BF
        gbc.setState(0xb05f, 0xe412, 0x7720, 0x7f52, 0x137b, 0x9825, 0x0, 0x1);
        gbc.writeMem(0xb05f, { 0xe2 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe412);
        EXPECT(gbc.pc(), 0xb060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb05f), 0xe2);
        EXPECT(gbc.readMem(0xff52), 0x77);
        // E2 02C0
        gbc.setState(0x2ca, 0xfd68, 0xdea0, 0x7fbb, 0x204f, 0x4ac, 0x0, 0x1);
        gbc.writeMem(0x2ca, { 0xe2 });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfd68);
        EXPECT(gbc.pc(), 0x2cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffbb), 0xde);
        // E2 02C1
        gbc.setState(0xc7ba, 0x8483, 0xa910, 0x13a1, 0xc190, 0x1d1f, 0x0, 0x0);
        gbc.writeMem(0xc7ba, { 0xe2 });
        gbc.writeMem(0xffa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8483);
        EXPECT(gbc.pc(), 0xc7bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ba), 0xe2);
        EXPECT(gbc.readMem(0xffa1), 0xa9);
        // E2 02C2
        gbc.setState(0x35de, 0xe236, 0x2500, 0x6aac, 0xe41c, 0xd51a, 0x1, 0x1);
        gbc.writeMem(0x35de, { 0xe2 });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe236);
        EXPECT(gbc.pc(), 0x35df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffac), 0x25);
        // E2 02C3
        gbc.setState(0x12d9, 0x9388, 0x8ee0, 0xa40a, 0xa288, 0x681a, 0x1, 0x1);
        gbc.writeMem(0x12d9, { 0xe2 });
        gbc.writeMem(0xff0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9388);
        EXPECT(gbc.pc(), 0x12da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0a), 0x8e);
        // E2 02C4
        gbc.setState(0x2ce, 0x2fc0, 0x4fb0, 0xa349, 0xf05e, 0x5117, 0x0, 0x1);
        gbc.writeMem(0x2ce, { 0xe2 });
        gbc.writeMem(0xff49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2fc0);
        EXPECT(gbc.pc(), 0x2cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff49), 0x4f);
        // E2 02C5
        gbc.setState(0x7fb, 0x7d63, 0xea00, 0x10b0, 0xb6f1, 0x6c4c, 0x1, 0x0);
        gbc.writeMem(0x7fb, { 0xe2 });
        gbc.writeMem(0xffb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7d63);
        EXPECT(gbc.pc(), 0x7fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb0), 0xea);
        // E2 02C6
        gbc.setState(0xc2be, 0xe0ba, 0x4ec0, 0x7f8a, 0xaf54, 0xe835, 0x1, 0x1);
        gbc.writeMem(0xc2be, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe0ba);
        EXPECT(gbc.pc(), 0xc2bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2be), 0xe2);
        EXPECT(gbc.readMem(0xff8a), 0x4e);
        // E2 02C7
        gbc.setState(0xd1b0, 0x1229, 0x9a80, 0xf491, 0x5794, 0x56b7, 0x1, 0x0);
        gbc.writeMem(0xd1b0, { 0xe2 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1229);
        EXPECT(gbc.pc(), 0xd1b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b0), 0xe2);
        EXPECT(gbc.readMem(0xff91), 0x9a);
        // E2 02C8
        gbc.setState(0x7ba4, 0x811d, 0x150, 0x2af4, 0x96ae, 0x43b, 0x1, 0x1);
        gbc.writeMem(0x7ba4, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x811d);
        EXPECT(gbc.pc(), 0x7ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff4), 0x1);
        // E2 02C9
        gbc.setState(0x8308, 0xb822, 0xc800, 0x7721, 0xe772, 0x7a7b, 0x0, 0x1);
        gbc.writeMem(0x8308, { 0xe2 });
        gbc.writeMem(0xff21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb822);
        EXPECT(gbc.pc(), 0x8309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8308), 0xe2);
        EXPECT(gbc.readMem(0xff21), 0xc8);
        // E2 02CA
        gbc.setState(0xc00, 0x3899, 0x1f70, 0x4c5b, 0x78c3, 0xc9e0, 0x1, 0x1);
        gbc.writeMem(0xc00, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3899);
        EXPECT(gbc.pc(), 0xc01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5b), 0x1f);
        // E2 02CB
        gbc.setState(0xa1bb, 0x35b3, 0x9ae0, 0x748a, 0x411, 0xed64, 0x0, 0x1);
        gbc.writeMem(0xa1bb, { 0xe2 });
        gbc.writeMem(0xff8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x35b3);
        EXPECT(gbc.pc(), 0xa1bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1bb), 0xe2);
        EXPECT(gbc.readMem(0xff8a), 0x9a);
        // E2 02CC
        gbc.setState(0xde00, 0x43eb, 0xcf10, 0x9592, 0x56bb, 0x983d, 0x0, 0x1);
        gbc.writeMem(0xde00, { 0xe2 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x43eb);
        EXPECT(gbc.pc(), 0xde01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde00), 0xe2);
        EXPECT(gbc.readMem(0xff92), 0xcf);
        // E2 02CD
        gbc.setState(0xd262, 0x509d, 0x2e0, 0xb389, 0x96dd, 0xa93e, 0x0, 0x0);
        gbc.writeMem(0xd262, { 0xe2 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x509d);
        EXPECT(gbc.pc(), 0xd263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd262), 0xe2);
        EXPECT(gbc.readMem(0xff89), 0x2);
        // E2 02CE
        gbc.setState(0xaffd, 0x7ac4, 0x1750, 0x85a2, 0x6638, 0x72b4, 0x1, 0x0);
        gbc.writeMem(0xaffd, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7ac4);
        EXPECT(gbc.pc(), 0xaffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaffd), 0xe2);
        EXPECT(gbc.readMem(0xffa2), 0x17);
        // E2 02CF
        gbc.setState(0x1a0b, 0x6c3, 0x5d40, 0x2bb8, 0x65ac, 0x8630, 0x1, 0x1);
        gbc.writeMem(0x1a0b, { 0xe2 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6c3);
        EXPECT(gbc.pc(), 0x1a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb8), 0x5d);
        // E2 02D0
        gbc.setState(0xdfa8, 0xc96b, 0x7b40, 0x8734, 0x491, 0x2786, 0x1, 0x0);
        gbc.writeMem(0xdfa8, { 0xe2 });
        gbc.writeMem(0xff34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc96b);
        EXPECT(gbc.pc(), 0xdfa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfa8), 0xe2);
        EXPECT(gbc.readMem(0xff34), 0x7b);
        // E2 02D1
        gbc.setState(0xb383, 0x28b2, 0xd260, 0x7d03, 0xce92, 0x91a1, 0x0, 0x0);
        gbc.writeMem(0xb383, { 0xe2 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x28b2);
        EXPECT(gbc.pc(), 0xb384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb383), 0xe2);
        EXPECT(gbc.readMem(0xff03), 0xd2);
        // E2 02D2
        gbc.setState(0x5cc, 0x2db6, 0x65c0, 0xabc3, 0x632e, 0x8f7f, 0x0, 0x1);
        gbc.writeMem(0x5cc, { 0xe2 });
        gbc.writeMem(0xffc3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2db6);
        EXPECT(gbc.pc(), 0x5cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc3), 0x65);
        // E2 02D3
        gbc.setState(0x170b, 0xaadd, 0x6210, 0xc70d, 0xdd50, 0x600d, 0x0, 0x0);
        gbc.writeMem(0x170b, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xaadd);
        EXPECT(gbc.pc(), 0x170c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0d), 0x62);
        // E2 02D4
        gbc.setState(0x9f59, 0x9cfa, 0x630, 0x7f92, 0x8ae2, 0xea83, 0x0, 0x0);
        gbc.writeMem(0x9f59, { 0xe2 });
        gbc.writeMem(0xff92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9cfa);
        EXPECT(gbc.pc(), 0x9f5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f59), 0xe2);
        EXPECT(gbc.readMem(0xff92), 0x6);
        // E2 02D5
        gbc.setState(0x227b, 0x2a46, 0x3d70, 0x1389, 0x5ed3, 0x53dd, 0x0, 0x0);
        gbc.writeMem(0x227b, { 0xe2 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2a46);
        EXPECT(gbc.pc(), 0x227c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff89), 0x3d);
        // E2 02D6
        gbc.setState(0x228b, 0xf645, 0xd8d0, 0x8d9e, 0x37c5, 0x7710, 0x0, 0x0);
        gbc.writeMem(0x228b, { 0xe2 });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf645);
        EXPECT(gbc.pc(), 0x228c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9e), 0xd8);
        // E2 02D7
        gbc.setState(0x6a6d, 0xc927, 0x56a0, 0x1e37, 0xcb8b, 0x5181, 0x0, 0x0);
        gbc.writeMem(0x6a6d, { 0xe2 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc927);
        EXPECT(gbc.pc(), 0x6a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff37), 0x56);
        // E2 02D8
        gbc.setState(0x5020, 0x9268, 0x6d10, 0x4ee3, 0xca01, 0x75f2, 0x0, 0x0);
        gbc.writeMem(0x5020, { 0xe2 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9268);
        EXPECT(gbc.pc(), 0x5021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe3), 0x6d);
        // E2 02D9
        gbc.setState(0x52ab, 0xdeda, 0x4070, 0xbcc4, 0x5f1, 0x155a, 0x1, 0x0);
        gbc.writeMem(0x52ab, { 0xe2 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdeda);
        EXPECT(gbc.pc(), 0x52ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc4), 0x40);
        // E2 02DB
        gbc.setState(0xb4c, 0x7473, 0x5c30, 0xc742, 0x3613, 0xead9, 0x0, 0x1);
        gbc.writeMem(0xb4c, { 0xe2 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7473);
        EXPECT(gbc.pc(), 0xb4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff42), 0x5c);
        // E2 02DC
        gbc.setState(0x98dd, 0xce7d, 0xa60, 0x9cc3, 0x462d, 0x772c, 0x1, 0x1);
        gbc.writeMem(0x98dd, { 0xe2 });
        gbc.writeMem(0xffc3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xce7d);
        EXPECT(gbc.pc(), 0x98de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98dd), 0xe2);
        EXPECT(gbc.readMem(0xffc3), 0xa);
        // E2 02DD
        gbc.setState(0x4960, 0x6adb, 0x4420, 0x566d, 0xaf95, 0x7ce5, 0x1, 0x1);
        gbc.writeMem(0x4960, { 0xe2 });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6adb);
        EXPECT(gbc.pc(), 0x4961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6d), 0x44);
        // E2 02DE
        gbc.setState(0xa55b, 0x376a, 0xca80, 0x8a3c, 0xb1d, 0x8e38, 0x1, 0x1);
        gbc.writeMem(0xa55b, { 0xe2 });
        gbc.writeMem(0xff3c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x376a);
        EXPECT(gbc.pc(), 0xa55c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa55b), 0xe2);
        EXPECT(gbc.readMem(0xff3c), 0xca);
        // E2 02DF
        gbc.setState(0x591d, 0xc22b, 0xa760, 0x3757, 0x5308, 0x770e, 0x1, 0x0);
        gbc.writeMem(0x591d, { 0xe2 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc22b);
        EXPECT(gbc.pc(), 0x591e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff57), 0xa7);
        // E2 02E0
        gbc.setState(0x8f0e, 0xd07b, 0xc4d0, 0xeb6a, 0x6cca, 0xad3, 0x1, 0x1);
        gbc.writeMem(0x8f0e, { 0xe2 });
        gbc.writeMem(0xff6a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd07b);
        EXPECT(gbc.pc(), 0x8f0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0e), 0xe2);
        EXPECT(gbc.readMem(0xff6a), 0xc4);
        // E2 02E1
        gbc.setState(0x923d, 0x64a9, 0x8c40, 0x9226, 0x7e74, 0x1b74, 0x0, 0x1);
        gbc.writeMem(0x923d, { 0xe2 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x64a9);
        EXPECT(gbc.pc(), 0x923e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923d), 0xe2);
        EXPECT(gbc.readMem(0xff26), 0x8c);
        // E2 02E2
        gbc.setState(0x2222, 0xdafb, 0xe790, 0xe672, 0x19c0, 0xa67a, 0x0, 0x1);
        gbc.writeMem(0x2222, { 0xe2 });
        gbc.writeMem(0xff72, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdafb);
        EXPECT(gbc.pc(), 0x2223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff72), 0xe7);
        // E2 02E3
        gbc.setState(0x18cb, 0xe57c, 0xdea0, 0x5cda, 0x1afb, 0x1c53, 0x0, 0x0);
        gbc.writeMem(0x18cb, { 0xe2 });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe57c);
        EXPECT(gbc.pc(), 0x18cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffda), 0xde);
        // E2 02E4
        gbc.setState(0x89de, 0xe81b, 0x1b20, 0xb831, 0x7d91, 0x89ea, 0x0, 0x1);
        gbc.writeMem(0x89de, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe81b);
        EXPECT(gbc.pc(), 0x89df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89de), 0xe2);
        EXPECT(gbc.readMem(0xff31), 0x1b);
        // E2 02E5
        gbc.setState(0x8fb7, 0xcf8c, 0x6dd0, 0x86a2, 0x8bcf, 0xd23, 0x1, 0x0);
        gbc.writeMem(0x8fb7, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcf8c);
        EXPECT(gbc.pc(), 0x8fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb7), 0xe2);
        EXPECT(gbc.readMem(0xffa2), 0x6d);
        // E2 02E6
        gbc.setState(0x2384, 0x4e42, 0x7c30, 0x8abf, 0x1dbf, 0xdc60, 0x0, 0x0);
        gbc.writeMem(0x2384, { 0xe2 });
        gbc.writeMem(0xffbf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4e42);
        EXPECT(gbc.pc(), 0x2385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffbf), 0x7c);
        // E2 02E7
        gbc.setState(0xde9, 0xf9b, 0x3e50, 0x1bf5, 0x20af, 0x8378, 0x1, 0x1);
        gbc.writeMem(0xde9, { 0xe2 });
        gbc.writeMem(0xfff5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf9b);
        EXPECT(gbc.pc(), 0xdea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff5), 0x3e);
        // E2 02E8
        gbc.setState(0x159c, 0x8f09, 0x97e0, 0xbc02, 0x2b36, 0x72f9, 0x0, 0x1);
        gbc.writeMem(0x159c, { 0xe2 });
        gbc.writeMem(0xff02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8f09);
        EXPECT(gbc.pc(), 0x159d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff02), 0x97);
        // E2 02E9
        gbc.setState(0x4163, 0x8380, 0x8da0, 0x72bb, 0x1b4e, 0x9dec, 0x1, 0x1);
        gbc.writeMem(0x4163, { 0xe2 });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8380);
        EXPECT(gbc.pc(), 0x4164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffbb), 0x8d);
        // E2 02EA
        gbc.setState(0x3b37, 0x8b57, 0x3b50, 0x26e3, 0x1ba9, 0x619a, 0x0, 0x0);
        gbc.writeMem(0x3b37, { 0xe2 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8b57);
        EXPECT(gbc.pc(), 0x3b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffe3), 0x3b);
        // E2 02EC
        gbc.setState(0x33e5, 0x21a1, 0x7650, 0x4e54, 0xeca1, 0x33c7, 0x0, 0x0);
        gbc.writeMem(0x33e5, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x21a1);
        EXPECT(gbc.pc(), 0x33e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff54), 0x76);
        // E2 02ED
        gbc.setState(0x2b20, 0x9842, 0x3da0, 0x8e69, 0xb27a, 0x4144, 0x0, 0x1);
        gbc.writeMem(0x2b20, { 0xe2 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9842);
        EXPECT(gbc.pc(), 0x2b21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff69), 0x3d);
        // E2 02EE
        gbc.setState(0xe9e, 0x3f12, 0xb540, 0x3413, 0x8c49, 0x415c, 0x0, 0x1);
        gbc.writeMem(0xe9e, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3f12);
        EXPECT(gbc.pc(), 0xe9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff13), 0xb5);
        // E2 02EF
        gbc.setState(0x18c8, 0x146e, 0x4ac0, 0x47ce, 0xd12b, 0x9c97, 0x1, 0x0);
        gbc.writeMem(0x18c8, { 0xe2 });
        gbc.writeMem(0xffce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x146e);
        EXPECT(gbc.pc(), 0x18c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffce), 0x4a);
        // E2 02F0
        gbc.setState(0xa1f1, 0xf60c, 0x4990, 0x8a40, 0xb94, 0x6dc9, 0x1, 0x1);
        gbc.writeMem(0xa1f1, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf60c);
        EXPECT(gbc.pc(), 0xa1f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f1), 0xe2);
        EXPECT(gbc.readMem(0xff40), 0x49);
        // E2 02F1
        gbc.setState(0x55e9, 0xbede, 0x4730, 0xc240, 0xb0f7, 0xa62c, 0x1, 0x1);
        gbc.writeMem(0x55e9, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbede);
        EXPECT(gbc.pc(), 0x55ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff40), 0x47);
        // E2 02F2
        gbc.setState(0xd124, 0xb5eb, 0xdec0, 0xb936, 0xb620, 0x9588, 0x0, 0x0);
        gbc.writeMem(0xd124, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb5eb);
        EXPECT(gbc.pc(), 0xd125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd124), 0xe2);
        EXPECT(gbc.readMem(0xff36), 0xde);
        // E2 02F3
        gbc.setState(0xad87, 0x7bd5, 0x6e90, 0x7ff, 0xb53, 0x6be6, 0x0, 0x1);
        gbc.writeMem(0xad87, { 0xe2 });
        gbc.writeMem(0xffff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7bd5);
        EXPECT(gbc.pc(), 0xad88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad87), 0xe2);
        EXPECT(gbc.readMem(0xffff), 0x6e);
        // E2 02F4
        gbc.setState(0x4e12, 0xd03c, 0xfc20, 0x78f7, 0x9f5d, 0x7f, 0x0, 0x1);
        gbc.writeMem(0x4e12, { 0xe2 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd03c);
        EXPECT(gbc.pc(), 0x4e13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff7), 0xfc);
        // E2 02F5
        gbc.setState(0xdd7, 0x2e36, 0x3c50, 0xe0cb, 0xc8bb, 0xced3, 0x1, 0x1);
        gbc.writeMem(0xdd7, { 0xe2 });
        gbc.writeMem(0xffcb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2e36);
        EXPECT(gbc.pc(), 0xdd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffcb), 0x3c);
        // E2 02F6
        gbc.setState(0xd23c, 0x1f1a, 0xdb50, 0xc027, 0x5d99, 0xc0fe, 0x0, 0x1);
        gbc.writeMem(0xd23c, { 0xe2 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1f1a);
        EXPECT(gbc.pc(), 0xd23d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23c), 0xe2);
        EXPECT(gbc.readMem(0xff27), 0xdb);
        // E2 02F7
        gbc.setState(0x87b5, 0x3669, 0x2d30, 0xf4c4, 0x14a2, 0x34df, 0x0, 0x0);
        gbc.writeMem(0x87b5, { 0xe2 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3669);
        EXPECT(gbc.pc(), 0x87b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87b5), 0xe2);
        EXPECT(gbc.readMem(0xffc4), 0x2d);
        // E2 02F8
        gbc.setState(0xba99, 0x7a39, 0xc9e0, 0x537e, 0x3eb4, 0x9183, 0x0, 0x0);
        gbc.writeMem(0xba99, { 0xe2 });
        gbc.writeMem(0xff7e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7a39);
        EXPECT(gbc.pc(), 0xba9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba99), 0xe2);
        EXPECT(gbc.readMem(0xff7e), 0xc9);
        // E2 02F9
        gbc.setState(0x46d8, 0xf155, 0x6dd0, 0xf97a, 0xa97f, 0xc849, 0x0, 0x1);
        gbc.writeMem(0x46d8, { 0xe2 });
        gbc.writeMem(0xff7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf155);
        EXPECT(gbc.pc(), 0x46d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7a), 0x6d);
        // E2 02FA
        gbc.setState(0xc72, 0x9bb1, 0x90a0, 0x7b62, 0x17c2, 0xa975, 0x0, 0x1);
        gbc.writeMem(0xc72, { 0xe2 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9bb1);
        EXPECT(gbc.pc(), 0xc73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff62), 0x90);
        // E2 02FB
        gbc.setState(0x5864, 0xef30, 0xf8b0, 0xbec7, 0x96eb, 0xf5c1, 0x0, 0x0);
        gbc.writeMem(0x5864, { 0xe2 });
        gbc.writeMem(0xffc7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xef30);
        EXPECT(gbc.pc(), 0x5865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc7), 0xf8);
        // E2 02FC
        gbc.setState(0xbfaf, 0x9926, 0xadf0, 0x1580, 0xfee7, 0xdacd, 0x0, 0x1);
        gbc.writeMem(0xbfaf, { 0xe2 });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9926);
        EXPECT(gbc.pc(), 0xbfb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfaf), 0xe2);
        EXPECT(gbc.readMem(0xff80), 0xad);
        // E2 02FD
        gbc.setState(0xf63, 0x88ea, 0xbc30, 0x3898, 0xa574, 0x2120, 0x1, 0x1);
        gbc.writeMem(0xf63, { 0xe2 });
        gbc.writeMem(0xff98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x88ea);
        EXPECT(gbc.pc(), 0xf64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff98), 0xbc);
        // E2 02FE
        gbc.setState(0x1b75, 0x431e, 0x6570, 0x8ff7, 0x6fce, 0x1823, 0x0, 0x1);
        gbc.writeMem(0x1b75, { 0xe2 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x431e);
        EXPECT(gbc.pc(), 0x1b76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff7), 0x65);
        // E2 02FF
        gbc.setState(0x326b, 0x94aa, 0x30, 0xd1db, 0x97dc, 0x43d, 0x0, 0x0);
        gbc.writeMem(0x326b, { 0xe2 });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x94aa);
        EXPECT(gbc.pc(), 0x326c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffdb), 0x0);
        // E2 0300
        gbc.setState(0xc8a9, 0xbd4b, 0x5120, 0xbcc2, 0x5943, 0x7c72, 0x1, 0x0);
        gbc.writeMem(0xc8a9, { 0xe2 });
        gbc.writeMem(0xffc2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xbd4b);
        EXPECT(gbc.pc(), 0xc8aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a9), 0xe2);
        EXPECT(gbc.readMem(0xffc2), 0x51);
        // E2 0301
        gbc.setState(0xe904, 0xed82, 0xee30, 0x85c0, 0xe32a, 0x30a2, 0x0, 0x1);
        gbc.writeMem(0xe904, { 0xe2 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xed82);
        EXPECT(gbc.pc(), 0xe905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe904), 0xe2);
        EXPECT(gbc.readMem(0xffc0), 0xee);
        // E2 0302
        gbc.setState(0x9360, 0x4f20, 0xba30, 0xb1b, 0x9018, 0x2ada, 0x0, 0x1);
        gbc.writeMem(0x9360, { 0xe2 });
        gbc.writeMem(0xff1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4f20);
        EXPECT(gbc.pc(), 0x9361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9360), 0xe2);
        EXPECT(gbc.readMem(0xff1b), 0xba);
        // E2 0303
        gbc.setState(0x606a, 0xd8af, 0x7b60, 0x3cad, 0x3716, 0x4a40, 0x1, 0x1);
        gbc.writeMem(0x606a, { 0xe2 });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd8af);
        EXPECT(gbc.pc(), 0x606b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffad), 0x7b);
        // E2 0304
        gbc.setState(0xc6d0, 0x63c5, 0x8a10, 0x3a7b, 0xed07, 0xdf82, 0x1, 0x1);
        gbc.writeMem(0xc6d0, { 0xe2 });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x63c5);
        EXPECT(gbc.pc(), 0xc6d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d0), 0xe2);
        EXPECT(gbc.readMem(0xff7b), 0x8a);
        // E2 0305
        gbc.setState(0xc3d9, 0x1c5c, 0x55c0, 0x2ad, 0xd68b, 0xfee1, 0x1, 0x0);
        gbc.writeMem(0xc3d9, { 0xe2 });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1c5c);
        EXPECT(gbc.pc(), 0xc3da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d9), 0xe2);
        EXPECT(gbc.readMem(0xffad), 0x55);
        // E2 0306
        gbc.setState(0xfc, 0x75c4, 0xe80, 0xd019, 0x4adb, 0x8551, 0x0, 0x1);
        gbc.writeMem(0xfc, { 0xe2 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x75c4);
        EXPECT(gbc.pc(), 0xfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff19), 0xe);
        // E2 0307
        gbc.setState(0xe284, 0x989e, 0x65e0, 0xdf04, 0x5c52, 0xc251, 0x1, 0x1);
        gbc.writeMem(0xe284, { 0xe2 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x989e);
        EXPECT(gbc.pc(), 0xe285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe284), 0xe2);
        EXPECT(gbc.readMem(0xff04), 0x65);
        // E2 0308
        gbc.setState(0x313e, 0xd3d, 0x50c0, 0xa1fb, 0xb840, 0x2981, 0x0, 0x1);
        gbc.writeMem(0x313e, { 0xe2 });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd3d);
        EXPECT(gbc.pc(), 0x313f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfffb), 0x50);
        // E2 0309
        gbc.setState(0xb76c, 0x3e86, 0xadb0, 0x77bd, 0xb9e, 0x761a, 0x1, 0x0);
        gbc.writeMem(0xb76c, { 0xe2 });
        gbc.writeMem(0xffbd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3e86);
        EXPECT(gbc.pc(), 0xb76d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb76c), 0xe2);
        EXPECT(gbc.readMem(0xffbd), 0xad);
        // E2 030A
        gbc.setState(0x9fbb, 0x478e, 0x5170, 0x2536, 0xdcde, 0x3aca, 0x1, 0x0);
        gbc.writeMem(0x9fbb, { 0xe2 });
        gbc.writeMem(0xff36, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x478e);
        EXPECT(gbc.pc(), 0x9fbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fbb), 0xe2);
        EXPECT(gbc.readMem(0xff36), 0x51);
        // E2 030B
        gbc.setState(0xa68b, 0xbee0, 0xe000, 0xe6d8, 0xb6f8, 0x78f6, 0x0, 0x0);
        gbc.writeMem(0xa68b, { 0xe2 });
        gbc.writeMem(0xffd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xbee0);
        EXPECT(gbc.pc(), 0xa68c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa68b), 0xe2);
        EXPECT(gbc.readMem(0xffd8), 0xe0);
        // E2 030C
        gbc.setState(0xc7b7, 0xd3d9, 0x6da0, 0x6323, 0x6e19, 0xf9a, 0x1, 0x0);
        gbc.writeMem(0xc7b7, { 0xe2 });
        gbc.writeMem(0xff23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd3d9);
        EXPECT(gbc.pc(), 0xc7b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b7), 0xe2);
        EXPECT(gbc.readMem(0xff23), 0x6d);
        // E2 030E
        gbc.setState(0xa73, 0x2559, 0x8760, 0xdd24, 0xa198, 0x64f1, 0x0, 0x1);
        gbc.writeMem(0xa73, { 0xe2 });
        gbc.writeMem(0xff24, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2559);
        EXPECT(gbc.pc(), 0xa74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff24), 0x87);
        // E2 030F
        gbc.setState(0x285b, 0xaec8, 0xc9f0, 0xdcea, 0xd89a, 0x5c40, 0x1, 0x0);
        gbc.writeMem(0x285b, { 0xe2 });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xaec8);
        EXPECT(gbc.pc(), 0x285c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffea), 0xc9);
        // E2 0310
        gbc.setState(0x4986, 0x6e9, 0xb7b0, 0xf6ca, 0x25c7, 0x857e, 0x1, 0x0);
        gbc.writeMem(0x4986, { 0xe2 });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6e9);
        EXPECT(gbc.pc(), 0x4987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffca), 0xb7);
        // E2 0311
        gbc.setState(0x8466, 0xaa01, 0xaf10, 0x2648, 0x1b0a, 0xecb7, 0x0, 0x1);
        gbc.writeMem(0x8466, { 0xe2 });
        gbc.writeMem(0xff48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xaa01);
        EXPECT(gbc.pc(), 0x8467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8466), 0xe2);
        EXPECT(gbc.readMem(0xff48), 0xaf);
        // E2 0312
        gbc.setState(0x98d4, 0x1d82, 0xbff0, 0xe1a4, 0x3e77, 0x65f5, 0x0, 0x1);
        gbc.writeMem(0x98d4, { 0xe2 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1d82);
        EXPECT(gbc.pc(), 0x98d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d4), 0xe2);
        EXPECT(gbc.readMem(0xffa4), 0xbf);
        // E2 0313
        gbc.setState(0xb20d, 0xc7fa, 0x2a50, 0xe2b9, 0xd96c, 0xe469, 0x0, 0x0);
        gbc.writeMem(0xb20d, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc7fa);
        EXPECT(gbc.pc(), 0xb20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb20d), 0xe2);
        EXPECT(gbc.readMem(0xffb9), 0x2a);
        // E2 0314
        gbc.setState(0xc7b7, 0xff8e, 0x80f0, 0x613a, 0x5805, 0xa7de, 0x1, 0x1);
        gbc.writeMem(0xc7b7, { 0xe2 });
        gbc.writeMem(0xff3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xff8e);
        EXPECT(gbc.pc(), 0xc7b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b7), 0xe2);
        EXPECT(gbc.readMem(0xff3a), 0x80);
        // E2 0315
        gbc.setState(0xbc91, 0x9823, 0x3c00, 0x1a37, 0x4357, 0x56df, 0x0, 0x1);
        gbc.writeMem(0xbc91, { 0xe2 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9823);
        EXPECT(gbc.pc(), 0xbc92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc91), 0xe2);
        EXPECT(gbc.readMem(0xff37), 0x3c);
        // E2 0316
        gbc.setState(0x1506, 0xbdc9, 0x5210, 0xb476, 0xecc2, 0xa337, 0x0, 0x0);
        gbc.writeMem(0x1506, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbdc9);
        EXPECT(gbc.pc(), 0x1507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff76), 0x52);
        // E2 0317
        gbc.setState(0xa5f0, 0x8c82, 0x3f20, 0xafc9, 0x55ab, 0x3068, 0x0, 0x1);
        gbc.writeMem(0xa5f0, { 0xe2 });
        gbc.writeMem(0xffc9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8c82);
        EXPECT(gbc.pc(), 0xa5f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f0), 0xe2);
        EXPECT(gbc.readMem(0xffc9), 0x3f);
        // E2 0319
        gbc.setState(0x60a5, 0x8a12, 0x48a0, 0x509f, 0xf0bf, 0xc2af, 0x0, 0x1);
        gbc.writeMem(0x60a5, { 0xe2 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8a12);
        EXPECT(gbc.pc(), 0x60a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9f), 0x48);
        // E2 031A
        gbc.setState(0x6c9a, 0x9e27, 0x8970, 0x6670, 0x5b07, 0x7a58, 0x1, 0x1);
        gbc.writeMem(0x6c9a, { 0xe2 });
        gbc.writeMem(0xff70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9e27);
        EXPECT(gbc.pc(), 0x6c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff70), 0x89);
        // E2 031B
        gbc.setState(0x2b12, 0x84d3, 0x3fb0, 0xf14e, 0xbf5, 0xcc7d, 0x0, 0x0);
        gbc.writeMem(0x2b12, { 0xe2 });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x84d3);
        EXPECT(gbc.pc(), 0x2b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4e), 0x3f);
        // E2 031C
        gbc.setState(0x68a8, 0xd60f, 0x7e70, 0xcb9, 0x2492, 0x2503, 0x1, 0x0);
        gbc.writeMem(0x68a8, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd60f);
        EXPECT(gbc.pc(), 0x68a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb9), 0x7e);
        // E2 031D
        gbc.setState(0x36dd, 0xfe83, 0x8b0, 0x532f, 0x8712, 0xce1, 0x1, 0x0);
        gbc.writeMem(0x36dd, { 0xe2 });
        gbc.writeMem(0xff2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfe83);
        EXPECT(gbc.pc(), 0x36de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2f), 0x8);
        // E2 031E
        gbc.setState(0x8f30, 0xa806, 0x70b0, 0xeaca, 0x7aa2, 0x8c73, 0x1, 0x1);
        gbc.writeMem(0x8f30, { 0xe2 });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa806);
        EXPECT(gbc.pc(), 0x8f31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f30), 0xe2);
        EXPECT(gbc.readMem(0xffca), 0x70);
        // E2 031F
        gbc.setState(0x7471, 0x1e74, 0xb5f0, 0xb4a3, 0x216d, 0x30b, 0x0, 0x1);
        gbc.writeMem(0x7471, { 0xe2 });
        gbc.writeMem(0xffa3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1e74);
        EXPECT(gbc.pc(), 0x7472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffa3), 0xb5);
        // E2 0320
        gbc.setState(0x49b, 0xf462, 0x8aa0, 0x66ad, 0x2752, 0x68fd, 0x0, 0x1);
        gbc.writeMem(0x49b, { 0xe2 });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf462);
        EXPECT(gbc.pc(), 0x49c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffad), 0x8a);
        // E2 0321
        gbc.setState(0x2f50, 0x5028, 0xb990, 0xf58b, 0x9890, 0x5acd, 0x0, 0x1);
        gbc.writeMem(0x2f50, { 0xe2 });
        gbc.writeMem(0xff8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5028);
        EXPECT(gbc.pc(), 0x2f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8b), 0xb9);
        // E2 0322
        gbc.setState(0xab75, 0x6517, 0xf2b0, 0x3aa0, 0x32ba, 0xca98, 0x0, 0x1);
        gbc.writeMem(0xab75, { 0xe2 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6517);
        EXPECT(gbc.pc(), 0xab76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab75), 0xe2);
        EXPECT(gbc.readMem(0xffa0), 0xf2);
        // E2 0323
        gbc.setState(0x96c0, 0x9cdf, 0x8e40, 0xf816, 0x2c05, 0xfc3, 0x0, 0x0);
        gbc.writeMem(0x96c0, { 0xe2 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9cdf);
        EXPECT(gbc.pc(), 0x96c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c0), 0xe2);
        EXPECT(gbc.readMem(0xff16), 0x8e);
        // E2 0324
        gbc.setState(0x9845, 0x75d5, 0xa7f0, 0x3362, 0xbb84, 0xf18, 0x0, 0x1);
        gbc.writeMem(0x9845, { 0xe2 });
        gbc.writeMem(0xff62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x75d5);
        EXPECT(gbc.pc(), 0x9846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9845), 0xe2);
        EXPECT(gbc.readMem(0xff62), 0xa7);
        // E2 0325
        gbc.setState(0x48b0, 0x6349, 0xaac0, 0xda5a, 0xe661, 0xff8d, 0x0, 0x0);
        gbc.writeMem(0x48b0, { 0xe2 });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6349);
        EXPECT(gbc.pc(), 0x48b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5a), 0xaa);
        // E2 0326
        gbc.setState(0x3cc8, 0x1e46, 0xef50, 0xefdb, 0xc9d5, 0x230d, 0x0, 0x1);
        gbc.writeMem(0x3cc8, { 0xe2 });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1e46);
        EXPECT(gbc.pc(), 0x3cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffdb), 0xef);
        // E2 0327
        gbc.setState(0xc541, 0x16a1, 0xbd40, 0x5265, 0xfe9b, 0x655f, 0x1, 0x1);
        gbc.writeMem(0xc541, { 0xe2 });
        gbc.writeMem(0xff65, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x16a1);
        EXPECT(gbc.pc(), 0xc542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc541), 0xe2);
        EXPECT(gbc.readMem(0xff65), 0xbd);
        // E2 0328
        gbc.setState(0x2994, 0xa866, 0x99b0, 0x2440, 0x5ebb, 0x5451, 0x1, 0x0);
        gbc.writeMem(0x2994, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa866);
        EXPECT(gbc.pc(), 0x2995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff40), 0x99);
        // E2 0329
        gbc.setState(0x23d6, 0xc913, 0x51a0, 0xf02c, 0x52f9, 0x2285, 0x0, 0x0);
        gbc.writeMem(0x23d6, { 0xe2 });
        gbc.writeMem(0xff2c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc913);
        EXPECT(gbc.pc(), 0x23d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff2c), 0x51);
        // E2 032A
        gbc.setState(0x24e, 0x8d59, 0xdc0, 0x1f3f, 0xb615, 0xbdc6, 0x1, 0x0);
        gbc.writeMem(0x24e, { 0xe2 });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8d59);
        EXPECT(gbc.pc(), 0x24f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3f), 0xd);
        // E2 032C
        gbc.setState(0x2031, 0x271f, 0x8a80, 0xaa07, 0xd386, 0x16ec, 0x0, 0x1);
        gbc.writeMem(0x2031, { 0xe2 });
        gbc.writeMem(0xff07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x271f);
        EXPECT(gbc.pc(), 0x2032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff07), 0x8a);
        // E2 032E
        gbc.setState(0x4065, 0x569d, 0x7020, 0x6631, 0xcf4, 0xb28c, 0x1, 0x1);
        gbc.writeMem(0x4065, { 0xe2 });
        gbc.writeMem(0xff31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x569d);
        EXPECT(gbc.pc(), 0x4066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff31), 0x70);
        // E2 032F
        gbc.setState(0xe422, 0x7a4a, 0x420, 0xa196, 0xe7f2, 0xdc4a, 0x1, 0x0);
        gbc.writeMem(0xe422, { 0xe2 });
        gbc.writeMem(0xff96, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7a4a);
        EXPECT(gbc.pc(), 0xe423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe422), 0xe2);
        EXPECT(gbc.readMem(0xff96), 0x4);
        // E2 0330
        gbc.setState(0x57ce, 0x36fc, 0x2120, 0x973d, 0x64c5, 0x7035, 0x1, 0x0);
        gbc.writeMem(0x57ce, { 0xe2 });
        gbc.writeMem(0xff3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x36fc);
        EXPECT(gbc.pc(), 0x57cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff3d), 0x21);
        // E2 0331
        gbc.setState(0x28b2, 0xc6a1, 0xf830, 0xf2bc, 0x7d23, 0x88e3, 0x0, 0x0);
        gbc.writeMem(0x28b2, { 0xe2 });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc6a1);
        EXPECT(gbc.pc(), 0x28b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffbc), 0xf8);
        // E2 0333
        gbc.setState(0x74be, 0xee36, 0xb8f0, 0xbe45, 0xf8bc, 0xbf92, 0x0, 0x1);
        gbc.writeMem(0x74be, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xee36);
        EXPECT(gbc.pc(), 0x74bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff45), 0xb8);
        // E2 0334
        gbc.setState(0x23e1, 0xce2d, 0x1b90, 0x637c, 0x9a56, 0xa1c3, 0x0, 0x1);
        gbc.writeMem(0x23e1, { 0xe2 });
        gbc.writeMem(0xff7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xce2d);
        EXPECT(gbc.pc(), 0x23e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7c), 0x1b);
        // E2 0335
        gbc.setState(0x1c2f, 0xbfb4, 0x20f0, 0x44da, 0xaa61, 0x986a, 0x1, 0x0);
        gbc.writeMem(0x1c2f, { 0xe2 });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbfb4);
        EXPECT(gbc.pc(), 0x1c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffda), 0x20);
        // E2 0336
        gbc.setState(0x6f9a, 0xb660, 0x9e50, 0x6b04, 0x8d3a, 0x3140, 0x0, 0x0);
        gbc.writeMem(0x6f9a, { 0xe2 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb660);
        EXPECT(gbc.pc(), 0x6f9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff04), 0x9e);
        // E2 0337
        gbc.setState(0x1a99, 0x8c1d, 0x8ca0, 0xe0c5, 0xdcc8, 0x4795, 0x0, 0x0);
        gbc.writeMem(0x1a99, { 0xe2 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8c1d);
        EXPECT(gbc.pc(), 0x1a9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc5), 0x8c);
        // E2 0338
        gbc.setState(0xb2d0, 0x4771, 0xc180, 0xdbac, 0x3f85, 0xb610, 0x0, 0x0);
        gbc.writeMem(0xb2d0, { 0xe2 });
        gbc.writeMem(0xffac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4771);
        EXPECT(gbc.pc(), 0xb2d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2d0), 0xe2);
        EXPECT(gbc.readMem(0xffac), 0xc1);
        // E2 0339
        gbc.setState(0xb831, 0xb578, 0xa390, 0x362d, 0x9175, 0x412b, 0x0, 0x1);
        gbc.writeMem(0xb831, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb578);
        EXPECT(gbc.pc(), 0xb832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb831), 0xe2);
        EXPECT(gbc.readMem(0xff2d), 0xa3);
        // E2 033A
        gbc.setState(0xc0fc, 0x7a07, 0xb480, 0x71d0, 0xa20c, 0x59cb, 0x1, 0x0);
        gbc.writeMem(0xc0fc, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7a07);
        EXPECT(gbc.pc(), 0xc0fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0fc), 0xe2);
        EXPECT(gbc.readMem(0xffd0), 0xb4);
        // E2 033B
        gbc.setState(0x1715, 0x74e4, 0xeee0, 0xcc1c, 0x6e90, 0x754e, 0x1, 0x1);
        gbc.writeMem(0x1715, { 0xe2 });
        gbc.writeMem(0xff1c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x74e4);
        EXPECT(gbc.pc(), 0x1716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff1c), 0xee);
        // E2 033C
        gbc.setState(0x75ab, 0xa815, 0x7950, 0x711f, 0xfe3b, 0xb157, 0x1, 0x0);
        gbc.writeMem(0x75ab, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa815);
        EXPECT(gbc.pc(), 0x75ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff1f), 0x79);
        // E2 033D
        gbc.setState(0xcd2c, 0xf541, 0x8cb0, 0xb47f, 0xa7e2, 0x4446, 0x0, 0x0);
        gbc.writeMem(0xcd2c, { 0xe2 });
        gbc.writeMem(0xff7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf541);
        EXPECT(gbc.pc(), 0xcd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2c), 0xe2);
        EXPECT(gbc.readMem(0xff7f), 0x8c);
        // E2 033E
        gbc.setState(0x7c7e, 0x8cae, 0xa420, 0x7618, 0xc563, 0x5781, 0x0, 0x1);
        gbc.writeMem(0x7c7e, { 0xe2 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8cae);
        EXPECT(gbc.pc(), 0x7c7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff18), 0xa4);
        // E2 0340
        gbc.setState(0x7eab, 0x4ac0, 0x2c00, 0x308e, 0xde05, 0x1a66, 0x0, 0x1);
        gbc.writeMem(0x7eab, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4ac0);
        EXPECT(gbc.pc(), 0x7eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8e), 0x2c);
        // E2 0341
        gbc.setState(0xe657, 0x8238, 0x8be0, 0x58de, 0x34b0, 0xfede, 0x1, 0x0);
        gbc.writeMem(0xe657, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8238);
        EXPECT(gbc.pc(), 0xe658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe657), 0xe2);
        EXPECT(gbc.readMem(0xffde), 0x8b);
        // E2 0342
        gbc.setState(0xdc62, 0x6818, 0xd8b0, 0x2b66, 0x9b66, 0xe507, 0x1, 0x1);
        gbc.writeMem(0xdc62, { 0xe2 });
        gbc.writeMem(0xff66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6818);
        EXPECT(gbc.pc(), 0xdc63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc62), 0xe2);
        EXPECT(gbc.readMem(0xff66), 0xd8);
        // E2 0343
        gbc.setState(0x3ee9, 0x2ae, 0xf220, 0xfa9d, 0xeb6c, 0xdba3, 0x0, 0x0);
        gbc.writeMem(0x3ee9, { 0xe2 });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2ae);
        EXPECT(gbc.pc(), 0x3eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9d), 0xf2);
        // E2 0344
        gbc.setState(0x5496, 0x592f, 0x22a0, 0x3810, 0x585a, 0xf56a, 0x0, 0x0);
        gbc.writeMem(0x5496, { 0xe2 });
        gbc.writeMem(0xff10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x592f);
        EXPECT(gbc.pc(), 0x5497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff10), 0x22);
        // E2 0345
        gbc.setState(0x6310, 0x3c1f, 0x8060, 0xa13, 0x6a53, 0x20e3, 0x0, 0x0);
        gbc.writeMem(0x6310, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3c1f);
        EXPECT(gbc.pc(), 0x6311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff13), 0x80);
        // E2 0347
        gbc.setState(0xe90, 0x31c1, 0xcbf0, 0x46b3, 0xeb0e, 0xd22f, 0x1, 0x1);
        gbc.writeMem(0xe90, { 0xe2 });
        gbc.writeMem(0xffb3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x31c1);
        EXPECT(gbc.pc(), 0xe91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb3), 0xcb);
        // E2 0348
        gbc.setState(0x273e, 0x3fa2, 0x630, 0xc66c, 0xd97c, 0xde7f, 0x0, 0x1);
        gbc.writeMem(0x273e, { 0xe2 });
        gbc.writeMem(0xff6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3fa2);
        EXPECT(gbc.pc(), 0x273f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff6c), 0x6);
        // E2 0349
        gbc.setState(0x2145, 0x20b, 0xc910, 0xcc01, 0x4cc3, 0xd9a1, 0x0, 0x0);
        gbc.writeMem(0x2145, { 0xe2 });
        gbc.writeMem(0xff01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x20b);
        EXPECT(gbc.pc(), 0x2146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff01), 0xc9);
        // E2 034A
        gbc.setState(0x7300, 0x1f6c, 0xca40, 0x70c6, 0x7e3d, 0x8ad4, 0x0, 0x0);
        gbc.writeMem(0x7300, { 0xe2 });
        gbc.writeMem(0xffc6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1f6c);
        EXPECT(gbc.pc(), 0x7301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc6), 0xca);
        // E2 034B
        gbc.setState(0x6829, 0x277, 0xcaf0, 0xaad0, 0x4813, 0x6426, 0x1, 0x1);
        gbc.writeMem(0x6829, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x277);
        EXPECT(gbc.pc(), 0x682a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd0), 0xca);
        // E2 034C
        gbc.setState(0x4fd, 0xe485, 0xdcc0, 0x2d27, 0x980b, 0x63da, 0x0, 0x1);
        gbc.writeMem(0x4fd, { 0xe2 });
        gbc.writeMem(0xff27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe485);
        EXPECT(gbc.pc(), 0x4fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff27), 0xdc);
        // E2 034D
        gbc.setState(0x51fb, 0xd978, 0x7200, 0x4d7d, 0xcd26, 0x8640, 0x1, 0x0);
        gbc.writeMem(0x51fb, { 0xe2 });
        gbc.writeMem(0xff7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd978);
        EXPECT(gbc.pc(), 0x51fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff7d), 0x72);
        // E2 034E
        gbc.setState(0x5561, 0xafe4, 0x3f40, 0x8683, 0x582e, 0xee24, 0x0, 0x1);
        gbc.writeMem(0x5561, { 0xe2 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xafe4);
        EXPECT(gbc.pc(), 0x5562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff83), 0x3f);
        // E2 034F
        gbc.setState(0xb2e0, 0xe433, 0xa980, 0x42db, 0x604, 0xb9c5, 0x1, 0x1);
        gbc.writeMem(0xb2e0, { 0xe2 });
        gbc.writeMem(0xffdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe433);
        EXPECT(gbc.pc(), 0xb2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e0), 0xe2);
        EXPECT(gbc.readMem(0xffdb), 0xa9);
        // E2 0350
        gbc.setState(0x2450, 0x3828, 0xe370, 0xa28f, 0xea20, 0x52c1, 0x1, 0x1);
        gbc.writeMem(0x2450, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3828);
        EXPECT(gbc.pc(), 0x2451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff8f), 0xe3);
        // E2 0351
        gbc.setState(0x99b2, 0x999, 0x46b0, 0xadd0, 0x89bd, 0x3adc, 0x0, 0x1);
        gbc.writeMem(0x99b2, { 0xe2 });
        gbc.writeMem(0xffd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x999);
        EXPECT(gbc.pc(), 0x99b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99b2), 0xe2);
        EXPECT(gbc.readMem(0xffd0), 0x46);
        // E2 0352
        gbc.setState(0x393a, 0x49ed, 0xe3f0, 0x2fc8, 0xf9b2, 0x3ee4, 0x0, 0x0);
        gbc.writeMem(0x393a, { 0xe2 });
        gbc.writeMem(0xffc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x49ed);
        EXPECT(gbc.pc(), 0x393b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc8), 0xe3);
        // E2 0353
        gbc.setState(0x5ee5, 0xb7b7, 0x50f0, 0xba73, 0x19bb, 0xf10, 0x0, 0x1);
        gbc.writeMem(0x5ee5, { 0xe2 });
        gbc.writeMem(0xff73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb7b7);
        EXPECT(gbc.pc(), 0x5ee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff73), 0x50);
        // E2 0354
        gbc.setState(0x2b32, 0x422, 0x4d30, 0x5bb6, 0x79f3, 0x9a6d, 0x1, 0x1);
        gbc.writeMem(0x2b32, { 0xe2 });
        gbc.writeMem(0xffb6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x422);
        EXPECT(gbc.pc(), 0x2b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb6), 0x4d);
        // E2 0355
        gbc.setState(0x1481, 0x3406, 0x6e00, 0x9828, 0x2df, 0xa78f, 0x0, 0x1);
        gbc.writeMem(0x1481, { 0xe2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3406);
        EXPECT(gbc.pc(), 0x1482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff28), 0x6e);
        // E2 0356
        gbc.setState(0x7658, 0xeadf, 0xf480, 0xec54, 0xa536, 0xbf9a, 0x1, 0x0);
        gbc.writeMem(0x7658, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xeadf);
        EXPECT(gbc.pc(), 0x7659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff54), 0xf4);
        // E2 0357
        gbc.setState(0xee85, 0x2e77, 0x19d0, 0xf5ec, 0xd372, 0x1f39, 0x0, 0x0);
        gbc.writeMem(0xee85, { 0xe2 });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2e77);
        EXPECT(gbc.pc(), 0xee86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee85), 0xe2);
        EXPECT(gbc.readMem(0xffec), 0x19);
        // E2 0358
        gbc.setState(0xdcf8, 0x95f4, 0x580, 0x8238, 0xf3da, 0x69be, 0x0, 0x1);
        gbc.writeMem(0xdcf8, { 0xe2 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x95f4);
        EXPECT(gbc.pc(), 0xdcf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf8), 0xe2);
        EXPECT(gbc.readMem(0xff38), 0x5);
        // E2 0359
        gbc.setState(0x41e3, 0xe583, 0xd5d0, 0x7044, 0xa90c, 0x190a, 0x0, 0x1);
        gbc.writeMem(0x41e3, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe583);
        EXPECT(gbc.pc(), 0x41e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff44), 0xd5);
        // E2 035A
        gbc.setState(0x71bc, 0xd9a2, 0x3bf0, 0x1412, 0x5aff, 0x3609, 0x0, 0x0);
        gbc.writeMem(0x71bc, { 0xe2 });
        gbc.writeMem(0xff12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd9a2);
        EXPECT(gbc.pc(), 0x71bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff12), 0x3b);
        // E2 035B
        gbc.setState(0x19, 0xe838, 0x6de0, 0x896e, 0xcb5a, 0xdac8, 0x0, 0x1);
        gbc.writeMem(0x19, { 0xe2 });
        gbc.writeMem(0xff6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe838);
        EXPECT(gbc.pc(), 0x1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6e), 0x6d);
        // E2 035C
        gbc.setState(0xc585, 0x74cd, 0xf100, 0x13e3, 0x4626, 0xf370, 0x0, 0x1);
        gbc.writeMem(0xc585, { 0xe2 });
        gbc.writeMem(0xffe3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x74cd);
        EXPECT(gbc.pc(), 0xc586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc585), 0xe2);
        EXPECT(gbc.readMem(0xffe3), 0xf1);
        // E2 035D
        gbc.setState(0xe55b, 0xfb67, 0x2c90, 0x2da8, 0x9141, 0xaa87, 0x1, 0x0);
        gbc.writeMem(0xe55b, { 0xe2 });
        gbc.writeMem(0xffa8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfb67);
        EXPECT(gbc.pc(), 0xe55c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe55b), 0xe2);
        EXPECT(gbc.readMem(0xffa8), 0x2c);
        // E2 035E
        gbc.setState(0x2d94, 0x41b4, 0x5040, 0x1bbb, 0x51a, 0x2fbf, 0x0, 0x0);
        gbc.writeMem(0x2d94, { 0xe2 });
        gbc.writeMem(0xffbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x41b4);
        EXPECT(gbc.pc(), 0x2d95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffbb), 0x50);
        // E2 0360
        gbc.setState(0xa877, 0x85e2, 0xaaa0, 0x8c8c, 0x158b, 0x7ee6, 0x0, 0x0);
        gbc.writeMem(0xa877, { 0xe2 });
        gbc.writeMem(0xff8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x85e2);
        EXPECT(gbc.pc(), 0xa878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa877), 0xe2);
        EXPECT(gbc.readMem(0xff8c), 0xaa);
        // E2 0361
        gbc.setState(0x3e89, 0x21db, 0xac30, 0xd5f9, 0xb1c0, 0x3de6, 0x0, 0x0);
        gbc.writeMem(0x3e89, { 0xe2 });
        gbc.writeMem(0xfff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x21db);
        EXPECT(gbc.pc(), 0x3e8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff9), 0xac);
        // E2 0362
        gbc.setState(0x410c, 0x384f, 0xe800, 0x1a57, 0xed40, 0x44d6, 0x1, 0x1);
        gbc.writeMem(0x410c, { 0xe2 });
        gbc.writeMem(0xff57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x384f);
        EXPECT(gbc.pc(), 0x410d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff57), 0xe8);
        // E2 0363
        gbc.setState(0x7103, 0x5376, 0x8d60, 0xc3f7, 0x69bf, 0x203f, 0x0, 0x0);
        gbc.writeMem(0x7103, { 0xe2 });
        gbc.writeMem(0xfff7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5376);
        EXPECT(gbc.pc(), 0x7104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff7), 0x8d);
        // E2 0364
        gbc.setState(0x6e30, 0x64b2, 0x9300, 0xce71, 0xaaef, 0xf4f4, 0x1, 0x0);
        gbc.writeMem(0x6e30, { 0xe2 });
        gbc.writeMem(0xff71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x64b2);
        EXPECT(gbc.pc(), 0x6e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff71), 0x93);
        // E2 0365
        gbc.setState(0x7acd, 0x3057, 0x8b90, 0xa091, 0xbd03, 0x512d, 0x1, 0x1);
        gbc.writeMem(0x7acd, { 0xe2 });
        gbc.writeMem(0xff91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3057);
        EXPECT(gbc.pc(), 0x7ace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff91), 0x8b);
        // E2 0366
        gbc.setState(0x461b, 0xeca1, 0x5620, 0xd0bf, 0x3aae, 0x148d, 0x0, 0x1);
        gbc.writeMem(0x461b, { 0xe2 });
        gbc.writeMem(0xffbf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xeca1);
        EXPECT(gbc.pc(), 0x461c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffbf), 0x56);
        // E2 0367
        gbc.setState(0x33d1, 0x1ab, 0x6cb0, 0x4c4d, 0x50d2, 0x5893, 0x1, 0x1);
        gbc.writeMem(0x33d1, { 0xe2 });
        gbc.writeMem(0xff4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1ab);
        EXPECT(gbc.pc(), 0x33d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4d), 0x6c);
        // E2 0368
        gbc.setState(0x502e, 0x9cab, 0xe860, 0xb75c, 0xec87, 0x1bfb, 0x0, 0x0);
        gbc.writeMem(0x502e, { 0xe2 });
        gbc.writeMem(0xff5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9cab);
        EXPECT(gbc.pc(), 0x502f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5c), 0xe8);
        // E2 0369
        gbc.setState(0xe264, 0x293d, 0xe410, 0x7787, 0x8ee4, 0xff5d, 0x0, 0x1);
        gbc.writeMem(0xe264, { 0xe2 });
        gbc.writeMem(0xff87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x293d);
        EXPECT(gbc.pc(), 0xe265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe264), 0xe2);
        EXPECT(gbc.readMem(0xff87), 0xe4);
        // E2 036A
        gbc.setState(0x83fe, 0xa13e, 0x7050, 0xb429, 0xc849, 0x8aa4, 0x1, 0x1);
        gbc.writeMem(0x83fe, { 0xe2 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa13e);
        EXPECT(gbc.pc(), 0x83ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fe), 0xe2);
        EXPECT(gbc.readMem(0xff29), 0x70);
        // E2 036B
        gbc.setState(0x4d4b, 0x95dd, 0x1b40, 0x5519, 0xd072, 0xd010, 0x1, 0x1);
        gbc.writeMem(0x4d4b, { 0xe2 });
        gbc.writeMem(0xff19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x95dd);
        EXPECT(gbc.pc(), 0x4d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff19), 0x1b);
        // E2 036C
        gbc.setState(0xc9ea, 0x17a6, 0x2620, 0xdeaf, 0xdfa, 0xf7a1, 0x0, 0x0);
        gbc.writeMem(0xc9ea, { 0xe2 });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x17a6);
        EXPECT(gbc.pc(), 0xc9eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ea), 0xe2);
        EXPECT(gbc.readMem(0xffaf), 0x26);
        // E2 036D
        gbc.setState(0x4866, 0xea7, 0xe110, 0xbc39, 0x8e8b, 0x2d75, 0x1, 0x1);
        gbc.writeMem(0x4866, { 0xe2 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xea7);
        EXPECT(gbc.pc(), 0x4867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff39), 0xe1);
        // E2 036E
        gbc.setState(0xa63e, 0x37a7, 0x8e10, 0x485, 0x25ae, 0xfbb8, 0x1, 0x0);
        gbc.writeMem(0xa63e, { 0xe2 });
        gbc.writeMem(0xff85, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x37a7);
        EXPECT(gbc.pc(), 0xa63f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63e), 0xe2);
        EXPECT(gbc.readMem(0xff85), 0x8e);
        // E2 036F
        gbc.setState(0x3217, 0x9b9f, 0x2cc0, 0xea4, 0xb8dc, 0x3ec5, 0x0, 0x0);
        gbc.writeMem(0x3217, { 0xe2 });
        gbc.writeMem(0xffa4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9b9f);
        EXPECT(gbc.pc(), 0x3218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa4), 0x2c);
        // E2 0370
        gbc.setState(0x8389, 0x45e8, 0xf6c0, 0xdefb, 0x8ee7, 0xbf, 0x0, 0x1);
        gbc.writeMem(0x8389, { 0xe2 });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x45e8);
        EXPECT(gbc.pc(), 0x838a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8389), 0xe2);
        EXPECT(gbc.readMem(0xfffb), 0xf6);
        // E2 0371
        gbc.setState(0x6345, 0x7279, 0xbd70, 0x634e, 0x285b, 0x557a, 0x1, 0x1);
        gbc.writeMem(0x6345, { 0xe2 });
        gbc.writeMem(0xff4e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7279);
        EXPECT(gbc.pc(), 0x6346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff4e), 0xbd);
        // E2 0372
        gbc.setState(0xac16, 0x1b62, 0xf000, 0x191f, 0x3a12, 0x7d31, 0x0, 0x1);
        gbc.writeMem(0xac16, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1b62);
        EXPECT(gbc.pc(), 0xac17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac16), 0xe2);
        EXPECT(gbc.readMem(0xff1f), 0xf0);
        // E2 0373
        gbc.setState(0x7c74, 0x5717, 0x6c50, 0xfb5a, 0x485f, 0x1559, 0x0, 0x0);
        gbc.writeMem(0x7c74, { 0xe2 });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5717);
        EXPECT(gbc.pc(), 0x7c75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5a), 0x6c);
        // E2 0375
        gbc.setState(0xb11b, 0x10d2, 0x2360, 0xdbde, 0x734b, 0xe377, 0x0, 0x0);
        gbc.writeMem(0xb11b, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x10d2);
        EXPECT(gbc.pc(), 0xb11c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb11b), 0xe2);
        EXPECT(gbc.readMem(0xffde), 0x23);
        // E2 0376
        gbc.setState(0x1f47, 0x95b3, 0xede0, 0xd3ad, 0xf8d0, 0x96d9, 0x1, 0x0);
        gbc.writeMem(0x1f47, { 0xe2 });
        gbc.writeMem(0xffad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x95b3);
        EXPECT(gbc.pc(), 0x1f48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffad), 0xed);
        // E2 0377
        gbc.setState(0x32e2, 0x265e, 0x1040, 0x6f42, 0x21a, 0x3bb0, 0x1, 0x0);
        gbc.writeMem(0x32e2, { 0xe2 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x265e);
        EXPECT(gbc.pc(), 0x32e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff42), 0x10);
        // E2 0378
        gbc.setState(0xc8e9, 0xb19f, 0x6cb0, 0xc5f4, 0x6baa, 0xec66, 0x1, 0x0);
        gbc.writeMem(0xc8e9, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb19f);
        EXPECT(gbc.pc(), 0xc8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e9), 0xe2);
        EXPECT(gbc.readMem(0xfff4), 0x6c);
        // E2 0379
        gbc.setState(0xdd86, 0x3e75, 0x7210, 0x118e, 0xe8c5, 0xa0cf, 0x0, 0x0);
        gbc.writeMem(0xdd86, { 0xe2 });
        gbc.writeMem(0xff8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3e75);
        EXPECT(gbc.pc(), 0xdd87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd86), 0xe2);
        EXPECT(gbc.readMem(0xff8e), 0x72);
        // E2 037A
        gbc.setState(0x8a9, 0x31fe, 0x8300, 0xa95a, 0x4e29, 0xa874, 0x1, 0x0);
        gbc.writeMem(0x8a9, { 0xe2 });
        gbc.writeMem(0xff5a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x31fe);
        EXPECT(gbc.pc(), 0x8aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5a), 0x83);
        // E2 037B
        gbc.setState(0x6da5, 0x9482, 0x1e70, 0x9eb, 0x827d, 0xa57b, 0x0, 0x1);
        gbc.writeMem(0x6da5, { 0xe2 });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9482);
        EXPECT(gbc.pc(), 0x6da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffeb), 0x1e);
        // E2 037C
        gbc.setState(0x8847, 0x193c, 0x2670, 0x3561, 0xdf57, 0xba44, 0x0, 0x0);
        gbc.writeMem(0x8847, { 0xe2 });
        gbc.writeMem(0xff61, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x193c);
        EXPECT(gbc.pc(), 0x8848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8847), 0xe2);
        EXPECT(gbc.readMem(0xff61), 0x26);
        // E2 037F
        gbc.setState(0xc8f5, 0x7b19, 0x16b0, 0xd66d, 0x78da, 0xd782, 0x1, 0x0);
        gbc.writeMem(0xc8f5, { 0xe2 });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7b19);
        EXPECT(gbc.pc(), 0xc8f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f5), 0xe2);
        EXPECT(gbc.readMem(0xff6d), 0x16);
        // E2 0380
        gbc.setState(0x8515, 0xe21a, 0x72a0, 0x432c, 0x6022, 0x716c, 0x0, 0x1);
        gbc.writeMem(0x8515, { 0xe2 });
        gbc.writeMem(0xff2c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe21a);
        EXPECT(gbc.pc(), 0x8516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8515), 0xe2);
        EXPECT(gbc.readMem(0xff2c), 0x72);
        // E2 0381
        gbc.setState(0xa5d1, 0xd3dc, 0xc0a0, 0x29f1, 0x2038, 0x72a7, 0x0, 0x0);
        gbc.writeMem(0xa5d1, { 0xe2 });
        gbc.writeMem(0xfff1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd3dc);
        EXPECT(gbc.pc(), 0xa5d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d1), 0xe2);
        EXPECT(gbc.readMem(0xfff1), 0xc0);
        // E2 0382
        gbc.setState(0x8403, 0x4e94, 0x4c90, 0xa61f, 0x61d0, 0x666a, 0x0, 0x0);
        gbc.writeMem(0x8403, { 0xe2 });
        gbc.writeMem(0xff1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4e94);
        EXPECT(gbc.pc(), 0x8404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8403), 0xe2);
        EXPECT(gbc.readMem(0xff1f), 0x4c);
        // E2 0383
        gbc.setState(0x6f24, 0xf801, 0x3b50, 0xbff8, 0x5dde, 0xdfc1, 0x1, 0x0);
        gbc.writeMem(0x6f24, { 0xe2 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf801);
        EXPECT(gbc.pc(), 0x6f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff8), 0x3b);
        // E2 0384
        gbc.setState(0xd, 0xf89b, 0x93a0, 0x1cd2, 0xec3, 0xdcbe, 0x0, 0x0);
        gbc.writeMem(0xd, { 0xe2 });
        gbc.writeMem(0xffd2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf89b);
        EXPECT(gbc.pc(), 0xe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd2), 0x93);
        // E2 0385
        gbc.setState(0xde59, 0x77be, 0x3100, 0xabd4, 0xd980, 0x5747, 0x0, 0x0);
        gbc.writeMem(0xde59, { 0xe2 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x77be);
        EXPECT(gbc.pc(), 0xde5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde59), 0xe2);
        EXPECT(gbc.readMem(0xffd4), 0x31);
        // E2 0386
        gbc.setState(0xcb7b, 0x1eda, 0x2140, 0x4ee7, 0x13a, 0x6f32, 0x1, 0x1);
        gbc.writeMem(0xcb7b, { 0xe2 });
        gbc.writeMem(0xffe7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1eda);
        EXPECT(gbc.pc(), 0xcb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb7b), 0xe2);
        EXPECT(gbc.readMem(0xffe7), 0x21);
        // E2 0387
        gbc.setState(0x5bf6, 0xbf4f, 0x4af0, 0xda0e, 0xad12, 0x2368, 0x1, 0x1);
        gbc.writeMem(0x5bf6, { 0xe2 });
        gbc.writeMem(0xff0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbf4f);
        EXPECT(gbc.pc(), 0x5bf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0e), 0x4a);
        // E2 0388
        gbc.setState(0x6f30, 0x3069, 0xd3f0, 0xa325, 0x64d1, 0xdf3f, 0x0, 0x0);
        gbc.writeMem(0x6f30, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3069);
        EXPECT(gbc.pc(), 0x6f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff25), 0xd3);
        // E2 0389
        gbc.setState(0xde7e, 0x31b2, 0x2910, 0x1883, 0xa9c8, 0xa2e9, 0x0, 0x0);
        gbc.writeMem(0xde7e, { 0xe2 });
        gbc.writeMem(0xff83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x31b2);
        EXPECT(gbc.pc(), 0xde7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7e), 0xe2);
        EXPECT(gbc.readMem(0xff83), 0x29);
        // E2 038A
        gbc.setState(0xec63, 0xc26a, 0xa3b0, 0x7b69, 0xf79c, 0x94d4, 0x0, 0x0);
        gbc.writeMem(0xec63, { 0xe2 });
        gbc.writeMem(0xff69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc26a);
        EXPECT(gbc.pc(), 0xec64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec63), 0xe2);
        EXPECT(gbc.readMem(0xff69), 0xa3);
        // E2 038C
        gbc.setState(0x8b29, 0x9db7, 0xd060, 0x9640, 0x338f, 0xf64c, 0x1, 0x0);
        gbc.writeMem(0x8b29, { 0xe2 });
        gbc.writeMem(0xff40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9db7);
        EXPECT(gbc.pc(), 0x8b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b29), 0xe2);
        EXPECT(gbc.readMem(0xff40), 0xd0);
        // E2 038D
        gbc.setState(0xb415, 0x3c86, 0xb1a0, 0xcd77, 0x97a4, 0x5ccf, 0x1, 0x0);
        gbc.writeMem(0xb415, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3c86);
        EXPECT(gbc.pc(), 0xb416);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb415), 0xe2);
        EXPECT(gbc.readMem(0xff77), 0xb1);
        // E2 038F
        gbc.setState(0x3a29, 0xa556, 0x2010, 0xf544, 0x6b0e, 0x66bf, 0x1, 0x1);
        gbc.writeMem(0x3a29, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa556);
        EXPECT(gbc.pc(), 0x3a2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff44), 0x20);
        // E2 0390
        gbc.setState(0x7cb3, 0x141b, 0x39a0, 0xb94f, 0x9e6c, 0xa66b, 0x1, 0x1);
        gbc.writeMem(0x7cb3, { 0xe2 });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x141b);
        EXPECT(gbc.pc(), 0x7cb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4f), 0x39);
        // E2 0391
        gbc.setState(0x9d50, 0x2246, 0x76b0, 0xd537, 0x235f, 0xaf17, 0x1, 0x1);
        gbc.writeMem(0x9d50, { 0xe2 });
        gbc.writeMem(0xff37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2246);
        EXPECT(gbc.pc(), 0x9d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d50), 0xe2);
        EXPECT(gbc.readMem(0xff37), 0x76);
        // E2 0392
        gbc.setState(0x4784, 0x6b76, 0x8a60, 0x225d, 0x6f2d, 0xfe61, 0x0, 0x1);
        gbc.writeMem(0x4784, { 0xe2 });
        gbc.writeMem(0xff5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6b76);
        EXPECT(gbc.pc(), 0x4785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5d), 0x8a);
        // E2 0393
        gbc.setState(0x8124, 0x1ee2, 0x7980, 0x8544, 0xde47, 0x40cf, 0x0, 0x0);
        gbc.writeMem(0x8124, { 0xe2 });
        gbc.writeMem(0xff44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1ee2);
        EXPECT(gbc.pc(), 0x8125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8124), 0xe2);
        EXPECT(gbc.readMem(0xff44), 0x79);
        // E2 0394
        gbc.setState(0x942b, 0x1691, 0xad00, 0xb13, 0xd9c6, 0x3df5, 0x1, 0x0);
        gbc.writeMem(0x942b, { 0xe2 });
        gbc.writeMem(0xff13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1691);
        EXPECT(gbc.pc(), 0x942c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x942b), 0xe2);
        EXPECT(gbc.readMem(0xff13), 0xad);
        // E2 0395
        gbc.setState(0xa8d9, 0x854c, 0x8560, 0x695f, 0xfab9, 0xa865, 0x0, 0x0);
        gbc.writeMem(0xa8d9, { 0xe2 });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x854c);
        EXPECT(gbc.pc(), 0xa8da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d9), 0xe2);
        EXPECT(gbc.readMem(0xff5f), 0x85);
        // E2 0396
        gbc.setState(0x9cef, 0x3d6d, 0x7540, 0xd720, 0x8e82, 0x3245, 0x0, 0x0);
        gbc.writeMem(0x9cef, { 0xe2 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3d6d);
        EXPECT(gbc.pc(), 0x9cf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cef), 0xe2);
        EXPECT(gbc.readMem(0xff20), 0x75);
        // E2 0397
        gbc.setState(0x7151, 0x6d32, 0xe1e0, 0xbb20, 0x1ef6, 0x94f3, 0x0, 0x1);
        gbc.writeMem(0x7151, { 0xe2 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6d32);
        EXPECT(gbc.pc(), 0x7152);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff20), 0xe1);
        // E2 0398
        gbc.setState(0xeb70, 0xe2c3, 0x4f00, 0x7cd3, 0x83bf, 0xf25e, 0x0, 0x0);
        gbc.writeMem(0xeb70, { 0xe2 });
        gbc.writeMem(0xffd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe2c3);
        EXPECT(gbc.pc(), 0xeb71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb70), 0xe2);
        EXPECT(gbc.readMem(0xffd3), 0x4f);
        // E2 0399
        gbc.setState(0x9fda, 0xff8f, 0xfaa0, 0xd3e5, 0x5c56, 0x79f1, 0x0, 0x0);
        gbc.writeMem(0x9fda, { 0xe2 });
        gbc.writeMem(0xffe5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xff8f);
        EXPECT(gbc.pc(), 0x9fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fda), 0xe2);
        EXPECT(gbc.readMem(0xffe5), 0xfa);
        // E2 039A
        gbc.setState(0x902e, 0x7e62, 0x74e0, 0x6f8, 0x849d, 0x8ee7, 0x1, 0x0);
        gbc.writeMem(0x902e, { 0xe2 });
        gbc.writeMem(0xfff8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7e62);
        EXPECT(gbc.pc(), 0x902f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x902e), 0xe2);
        EXPECT(gbc.readMem(0xfff8), 0x74);
        // E2 039B
        gbc.setState(0xd932, 0xeef4, 0x3750, 0x84b8, 0x4786, 0x46ec, 0x0, 0x1);
        gbc.writeMem(0xd932, { 0xe2 });
        gbc.writeMem(0xffb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xeef4);
        EXPECT(gbc.pc(), 0xd933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd932), 0xe2);
        EXPECT(gbc.readMem(0xffb8), 0x37);
        // E2 039C
        gbc.setState(0xc4aa, 0xb1f8, 0x5780, 0xc8fc, 0xb2bd, 0x9061, 0x0, 0x0);
        gbc.writeMem(0xc4aa, { 0xe2 });
        gbc.writeMem(0xfffc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb1f8);
        EXPECT(gbc.pc(), 0xc4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4aa), 0xe2);
        EXPECT(gbc.readMem(0xfffc), 0x57);
        // E2 039D
        gbc.setState(0x6636, 0x633, 0xa110, 0xbfb, 0xf007, 0xbcb0, 0x1, 0x0);
        gbc.writeMem(0x6636, { 0xe2 });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x633);
        EXPECT(gbc.pc(), 0x6637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfffb), 0xa1);
        // E2 039E
        gbc.setState(0xeb2f, 0x237c, 0xb380, 0x2e5f, 0xc768, 0x7317, 0x1, 0x0);
        gbc.writeMem(0xeb2f, { 0xe2 });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x237c);
        EXPECT(gbc.pc(), 0xeb30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb2f), 0xe2);
        EXPECT(gbc.readMem(0xff5f), 0xb3);
        // E2 03A0
        gbc.setState(0x6e8, 0x9ef0, 0xe310, 0x3d16, 0x3abe, 0x3729, 0x0, 0x0);
        gbc.writeMem(0x6e8, { 0xe2 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9ef0);
        EXPECT(gbc.pc(), 0x6e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff16), 0xe3);
        // E2 03A1
        gbc.setState(0x117a, 0x2f6b, 0x5240, 0x3fde, 0x5b29, 0x95e1, 0x0, 0x0);
        gbc.writeMem(0x117a, { 0xe2 });
        gbc.writeMem(0xffde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2f6b);
        EXPECT(gbc.pc(), 0x117b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffde), 0x52);
        // E2 03A2
        gbc.setState(0x72ef, 0x7785, 0x51a0, 0xce25, 0x515b, 0x31fa, 0x0, 0x1);
        gbc.writeMem(0x72ef, { 0xe2 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7785);
        EXPECT(gbc.pc(), 0x72f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff25), 0x51);
        // E2 03A3
        gbc.setState(0x4dfa, 0x546f, 0x13c0, 0x59d5, 0x36f6, 0xcdab, 0x0, 0x0);
        gbc.writeMem(0x4dfa, { 0xe2 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x546f);
        EXPECT(gbc.pc(), 0x4dfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd5), 0x13);
        // E2 03A4
        gbc.setState(0x50ab, 0x5b44, 0xec90, 0x11ba, 0x43df, 0xbc14, 0x1, 0x1);
        gbc.writeMem(0x50ab, { 0xe2 });
        gbc.writeMem(0xffba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5b44);
        EXPECT(gbc.pc(), 0x50ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffba), 0xec);
        // E2 03A5
        gbc.setState(0xa30, 0x8787, 0xf840, 0x2f5c, 0x1341, 0x1843, 0x0, 0x0);
        gbc.writeMem(0xa30, { 0xe2 });
        gbc.writeMem(0xff5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8787);
        EXPECT(gbc.pc(), 0xa31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5c), 0xf8);
        // E2 03A6
        gbc.setState(0x4565, 0x1776, 0x30c0, 0xc733, 0x5036, 0x7755, 0x1, 0x0);
        gbc.writeMem(0x4565, { 0xe2 });
        gbc.writeMem(0xff33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1776);
        EXPECT(gbc.pc(), 0x4566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff33), 0x30);
        // E2 03A7
        gbc.setState(0x16df, 0x515a, 0x9170, 0xd32b, 0x93e3, 0x7c7, 0x1, 0x1);
        gbc.writeMem(0x16df, { 0xe2 });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x515a);
        EXPECT(gbc.pc(), 0x16e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff2b), 0x91);
        // E2 03A8
        gbc.setState(0xbbf2, 0x2285, 0xd070, 0x7b38, 0xe843, 0xc9ff, 0x0, 0x0);
        gbc.writeMem(0xbbf2, { 0xe2 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2285);
        EXPECT(gbc.pc(), 0xbbf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf2), 0xe2);
        EXPECT(gbc.readMem(0xff38), 0xd0);
        // E2 03A9
        gbc.setState(0x6932, 0xd014, 0x5550, 0x3526, 0x2906, 0xe0de, 0x1, 0x1);
        gbc.writeMem(0x6932, { 0xe2 });
        gbc.writeMem(0xff26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd014);
        EXPECT(gbc.pc(), 0x6933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff26), 0x55);
        // E2 03AA
        gbc.setState(0x9f21, 0x7cd4, 0x2c40, 0x84c5, 0x2c4c, 0x83f3, 0x0, 0x1);
        gbc.writeMem(0x9f21, { 0xe2 });
        gbc.writeMem(0xffc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7cd4);
        EXPECT(gbc.pc(), 0x9f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f21), 0xe2);
        EXPECT(gbc.readMem(0xffc5), 0x2c);
        // E2 03AB
        gbc.setState(0xcd3b, 0xb53e, 0xf000, 0xdfca, 0x6aa8, 0x12f, 0x1, 0x1);
        gbc.writeMem(0xcd3b, { 0xe2 });
        gbc.writeMem(0xffca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb53e);
        EXPECT(gbc.pc(), 0xcd3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3b), 0xe2);
        EXPECT(gbc.readMem(0xffca), 0xf0);
        // E2 03AC
        gbc.setState(0x5336, 0x97fd, 0x9d70, 0xfdb9, 0x6db5, 0x1271, 0x0, 0x1);
        gbc.writeMem(0x5336, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x97fd);
        EXPECT(gbc.pc(), 0x5337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb9), 0x9d);
        // E2 03AD
        gbc.setState(0x5730, 0xa04f, 0xa2e0, 0x1160, 0xc51c, 0x5caf, 0x1, 0x1);
        gbc.writeMem(0x5730, { 0xe2 });
        gbc.writeMem(0xff60, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa04f);
        EXPECT(gbc.pc(), 0x5731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff60), 0xa2);
        // E2 03AE
        gbc.setState(0x2f3c, 0xeb72, 0xfbe0, 0xfbbc, 0x94c8, 0xd35c, 0x0, 0x0);
        gbc.writeMem(0x2f3c, { 0xe2 });
        gbc.writeMem(0xffbc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xeb72);
        EXPECT(gbc.pc(), 0x2f3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffbc), 0xfb);
        // E2 03AF
        gbc.setState(0xcb64, 0x46b1, 0x2640, 0xd382, 0xf223, 0xf756, 0x1, 0x0);
        gbc.writeMem(0xcb64, { 0xe2 });
        gbc.writeMem(0xff82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x46b1);
        EXPECT(gbc.pc(), 0xcb65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb64), 0xe2);
        EXPECT(gbc.readMem(0xff82), 0x26);
        // E2 03B0
        gbc.setState(0x84a, 0x3ad0, 0x1e40, 0x970d, 0xccc4, 0x5f4, 0x1, 0x1);
        gbc.writeMem(0x84a, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3ad0);
        EXPECT(gbc.pc(), 0x84b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0d), 0x1e);
        // E2 03B1
        gbc.setState(0xc48f, 0x3aa2, 0xf300, 0x43f4, 0xa842, 0x6bd9, 0x0, 0x0);
        gbc.writeMem(0xc48f, { 0xe2 });
        gbc.writeMem(0xfff4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3aa2);
        EXPECT(gbc.pc(), 0xc490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48f), 0xe2);
        EXPECT(gbc.readMem(0xfff4), 0xf3);
        // E2 03B2
        gbc.setState(0x386a, 0x78b5, 0x4bb0, 0xfcc1, 0x5359, 0x21f9, 0x0, 0x0);
        gbc.writeMem(0x386a, { 0xe2 });
        gbc.writeMem(0xffc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x78b5);
        EXPECT(gbc.pc(), 0x386b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc1), 0x4b);
        // E2 03B3
        gbc.setState(0x39e1, 0x21f9, 0xe0e0, 0x2752, 0x72e7, 0x4a40, 0x1, 0x1);
        gbc.writeMem(0x39e1, { 0xe2 });
        gbc.writeMem(0xff52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x21f9);
        EXPECT(gbc.pc(), 0x39e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff52), 0xe0);
        // E2 03B4
        gbc.setState(0x737, 0xca76, 0xd3f0, 0xf60, 0x7692, 0x9415, 0x1, 0x0);
        gbc.writeMem(0x737, { 0xe2 });
        gbc.writeMem(0xff60, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xca76);
        EXPECT(gbc.pc(), 0x738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff60), 0xd3);
        // E2 03B5
        gbc.setState(0xae69, 0x9c20, 0x8800, 0x8a11, 0xa665, 0xb3f8, 0x1, 0x0);
        gbc.writeMem(0xae69, { 0xe2 });
        gbc.writeMem(0xff11, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9c20);
        EXPECT(gbc.pc(), 0xae6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae69), 0xe2);
        EXPECT(gbc.readMem(0xff11), 0x88);
        // E2 03B6
        gbc.setState(0x24e2, 0xa1d8, 0x93b0, 0x700, 0xc825, 0x255, 0x0, 0x1);
        gbc.writeMem(0x24e2, { 0xe2 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa1d8);
        EXPECT(gbc.pc(), 0x24e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff00), 0x93);
        // E2 03B7
        gbc.setState(0x4af8, 0xb52, 0xa840, 0x3835, 0x871d, 0x85f0, 0x0, 0x0);
        gbc.writeMem(0x4af8, { 0xe2 });
        gbc.writeMem(0xff35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb52);
        EXPECT(gbc.pc(), 0x4af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff35), 0xa8);
        // E2 03B8
        gbc.setState(0x8c38, 0xa48, 0x55a0, 0x8c0, 0x1cce, 0x12a, 0x1, 0x1);
        gbc.writeMem(0x8c38, { 0xe2 });
        gbc.writeMem(0xffc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa48);
        EXPECT(gbc.pc(), 0x8c39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c38), 0xe2);
        EXPECT(gbc.readMem(0xffc0), 0x55);
        // E2 03B9
        gbc.setState(0xa32f, 0xa738, 0x6ab0, 0x1f3f, 0x8381, 0x85d6, 0x1, 0x1);
        gbc.writeMem(0xa32f, { 0xe2 });
        gbc.writeMem(0xff3f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa738);
        EXPECT(gbc.pc(), 0xa330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa32f), 0xe2);
        EXPECT(gbc.readMem(0xff3f), 0x6a);
        // E2 03BA
        gbc.setState(0xe340, 0xcb55, 0xcf70, 0x467b, 0xb55a, 0x4627, 0x1, 0x0);
        gbc.writeMem(0xe340, { 0xe2 });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcb55);
        EXPECT(gbc.pc(), 0xe341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe340), 0xe2);
        EXPECT(gbc.readMem(0xff7b), 0xcf);
        // E2 03BB
        gbc.setState(0x10d7, 0x61fd, 0xec10, 0xb356, 0x9b1, 0xd7c3, 0x0, 0x1);
        gbc.writeMem(0x10d7, { 0xe2 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x61fd);
        EXPECT(gbc.pc(), 0x10d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff56), 0xec);
        // E2 03BC
        gbc.setState(0x58cf, 0xea56, 0xe7a0, 0xe6df, 0xdae3, 0x40b9, 0x0, 0x1);
        gbc.writeMem(0x58cf, { 0xe2 });
        gbc.writeMem(0xffdf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xea56);
        EXPECT(gbc.pc(), 0x58d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffdf), 0xe7);
        // E2 03BD
        gbc.setState(0x102f, 0xd08e, 0x98e0, 0xdcb4, 0x9f60, 0x9212, 0x1, 0x0);
        gbc.writeMem(0x102f, { 0xe2 });
        gbc.writeMem(0xffb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd08e);
        EXPECT(gbc.pc(), 0x1030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffb4), 0x98);
        // E2 03BE
        gbc.setState(0x9454, 0xe49f, 0xbde0, 0x8bed, 0x2598, 0x1c62, 0x0, 0x1);
        gbc.writeMem(0x9454, { 0xe2 });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe49f);
        EXPECT(gbc.pc(), 0x9455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9454), 0xe2);
        EXPECT(gbc.readMem(0xffed), 0xbd);
        // E2 03BF
        gbc.setState(0x6819, 0xcc38, 0xfd10, 0x7f54, 0x132b, 0xe0d3, 0x0, 0x1);
        gbc.writeMem(0x6819, { 0xe2 });
        gbc.writeMem(0xff54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xcc38);
        EXPECT(gbc.pc(), 0x681a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff54), 0xfd);
        // E2 03C0
        gbc.setState(0xc578, 0x1d40, 0x4ae0, 0xfb5, 0x7c32, 0x2a98, 0x0, 0x1);
        gbc.writeMem(0xc578, { 0xe2 });
        gbc.writeMem(0xffb5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1d40);
        EXPECT(gbc.pc(), 0xc579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc578), 0xe2);
        EXPECT(gbc.readMem(0xffb5), 0x4a);
        // E2 03C1
        gbc.setState(0xca18, 0xec3b, 0x2cb0, 0x1686, 0x2983, 0x192f, 0x0, 0x1);
        gbc.writeMem(0xca18, { 0xe2 });
        gbc.writeMem(0xff86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xec3b);
        EXPECT(gbc.pc(), 0xca19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca18), 0xe2);
        EXPECT(gbc.readMem(0xff86), 0x2c);
        // E2 03C2
        gbc.setState(0x147c, 0xf821, 0xaee0, 0x5298, 0x4189, 0xe2f8, 0x1, 0x1);
        gbc.writeMem(0x147c, { 0xe2 });
        gbc.writeMem(0xff98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf821);
        EXPECT(gbc.pc(), 0x147d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff98), 0xae);
        // E2 03C3
        gbc.setState(0x1359, 0xc94d, 0x69c0, 0x3b38, 0x5572, 0x2fd9, 0x1, 0x1);
        gbc.writeMem(0x1359, { 0xe2 });
        gbc.writeMem(0xff38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc94d);
        EXPECT(gbc.pc(), 0x135a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff38), 0x69);
        // E2 03C4
        gbc.setState(0x136, 0x439a, 0xdb90, 0x16fb, 0xe832, 0x3aa5, 0x1, 0x1);
        gbc.writeMem(0x136, { 0xe2 });
        gbc.writeMem(0xfffb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x439a);
        EXPECT(gbc.pc(), 0x137);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfffb), 0xdb);
        // E2 03C5
        gbc.setState(0x5aed, 0xb5a4, 0x91e0, 0xe86f, 0x7abc, 0x2bf, 0x1, 0x1);
        gbc.writeMem(0x5aed, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb5a4);
        EXPECT(gbc.pc(), 0x5aee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff6f), 0x91);
        // E2 03C6
        gbc.setState(0x4cc6, 0xbdb5, 0xca10, 0x7d45, 0x72be, 0xed9b, 0x0, 0x1);
        gbc.writeMem(0x4cc6, { 0xe2 });
        gbc.writeMem(0xff45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbdb5);
        EXPECT(gbc.pc(), 0x4cc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff45), 0xca);
        // E2 03C7
        gbc.setState(0x9d35, 0xf5b9, 0x6ed0, 0x21b1, 0xea5d, 0x838d, 0x1, 0x1);
        gbc.writeMem(0x9d35, { 0xe2 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf5b9);
        EXPECT(gbc.pc(), 0x9d36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d35), 0xe2);
        EXPECT(gbc.readMem(0xffb1), 0x6e);
        // E2 03C8
        gbc.setState(0x3d2c, 0xbc7b, 0x6c00, 0xba94, 0xf3af, 0x7bd2, 0x1, 0x0);
        gbc.writeMem(0x3d2c, { 0xe2 });
        gbc.writeMem(0xff94, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbc7b);
        EXPECT(gbc.pc(), 0x3d2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff94), 0x6c);
        // E2 03C9
        gbc.setState(0x5191, 0x7d05, 0xd90, 0x2ba0, 0xf906, 0x6c8e, 0x1, 0x1);
        gbc.writeMem(0x5191, { 0xe2 });
        gbc.writeMem(0xffa0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7d05);
        EXPECT(gbc.pc(), 0x5192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffa0), 0xd);
        // E2 03CA
        gbc.setState(0x6f68, 0x2631, 0x4d80, 0x8e5b, 0xea9f, 0xd6bb, 0x1, 0x1);
        gbc.writeMem(0x6f68, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2631);
        EXPECT(gbc.pc(), 0x6f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5b), 0x4d);
        // E2 03CC
        gbc.setState(0x5ce9, 0x4a28, 0xf370, 0xd018, 0x76ee, 0x38db, 0x1, 0x1);
        gbc.writeMem(0x5ce9, { 0xe2 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4a28);
        EXPECT(gbc.pc(), 0x5cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff18), 0xf3);
        // E2 03CD
        gbc.setState(0xb841, 0x64d9, 0xd310, 0x10e2, 0x9663, 0xa918, 0x1, 0x0);
        gbc.writeMem(0xb841, { 0xe2 });
        gbc.writeMem(0xffe2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x64d9);
        EXPECT(gbc.pc(), 0xb842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb841), 0xe2);
        EXPECT(gbc.readMem(0xffe2), 0xd3);
        // E2 03CE
        gbc.setState(0x5229, 0xf55a, 0x3960, 0x8dc4, 0x98e4, 0xc253, 0x1, 0x0);
        gbc.writeMem(0x5229, { 0xe2 });
        gbc.writeMem(0xffc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf55a);
        EXPECT(gbc.pc(), 0x522a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffc4), 0x39);
        // E2 03CF
        gbc.setState(0x21e0, 0x1931, 0x1240, 0xda42, 0x71d, 0xcee8, 0x0, 0x1);
        gbc.writeMem(0x21e0, { 0xe2 });
        gbc.writeMem(0xff42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1931);
        EXPECT(gbc.pc(), 0x21e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff42), 0x12);
        // E2 03D0
        gbc.setState(0xdebd, 0xc176, 0x5a10, 0xd377, 0xe670, 0x813b, 0x0, 0x1);
        gbc.writeMem(0xdebd, { 0xe2 });
        gbc.writeMem(0xff77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc176);
        EXPECT(gbc.pc(), 0xdebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdebd), 0xe2);
        EXPECT(gbc.readMem(0xff77), 0x5a);
        // E2 03D1
        gbc.setState(0xe7f, 0x50f6, 0x8210, 0xcd9e, 0x360b, 0xa7ab, 0x0, 0x1);
        gbc.writeMem(0xe7f, { 0xe2 });
        gbc.writeMem(0xff9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x50f6);
        EXPECT(gbc.pc(), 0xe80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9e), 0x82);
        // E2 03D2
        gbc.setState(0xd6be, 0x71c0, 0x4720, 0xb67b, 0xe310, 0xb6ce, 0x0, 0x0);
        gbc.writeMem(0xd6be, { 0xe2 });
        gbc.writeMem(0xff7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x71c0);
        EXPECT(gbc.pc(), 0xd6bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6be), 0xe2);
        EXPECT(gbc.readMem(0xff7b), 0x47);
        // E2 03D3
        gbc.setState(0xcaa6, 0x2b0a, 0x8700, 0xded, 0x1d88, 0x97c1, 0x1, 0x1);
        gbc.writeMem(0xcaa6, { 0xe2 });
        gbc.writeMem(0xffed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2b0a);
        EXPECT(gbc.pc(), 0xcaa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaa6), 0xe2);
        EXPECT(gbc.readMem(0xffed), 0x87);
        // E2 03D4
        gbc.setState(0xf59, 0x171a, 0xc4f0, 0xd481, 0xcc0, 0x5d51, 0x1, 0x1);
        gbc.writeMem(0xf59, { 0xe2 });
        gbc.writeMem(0xff81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x171a);
        EXPECT(gbc.pc(), 0xf5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff81), 0xc4);
        // E2 03D5
        gbc.setState(0x82bb, 0x479b, 0x8f00, 0x528f, 0x8bf1, 0xb56, 0x1, 0x0);
        gbc.writeMem(0x82bb, { 0xe2 });
        gbc.writeMem(0xff8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x479b);
        EXPECT(gbc.pc(), 0x82bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82bb), 0xe2);
        EXPECT(gbc.readMem(0xff8f), 0x8f);
        // E2 03D6
        gbc.setState(0xa091, 0xb445, 0xe650, 0x222e, 0x485c, 0x8178, 0x0, 0x0);
        gbc.writeMem(0xa091, { 0xe2 });
        gbc.writeMem(0xff2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb445);
        EXPECT(gbc.pc(), 0xa092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa091), 0xe2);
        EXPECT(gbc.readMem(0xff2e), 0xe6);
        // E2 03D7
        gbc.setState(0x509f, 0x5047, 0x9e50, 0x4729, 0x4ba6, 0x51e7, 0x1, 0x1);
        gbc.writeMem(0x509f, { 0xe2 });
        gbc.writeMem(0xff29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5047);
        EXPECT(gbc.pc(), 0x50a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff29), 0x9e);
        // E2 03D8
        gbc.setState(0x2d73, 0xb6b3, 0xe460, 0x5603, 0xd3c2, 0xb50b, 0x1, 0x0);
        gbc.writeMem(0x2d73, { 0xe2 });
        gbc.writeMem(0xff03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb6b3);
        EXPECT(gbc.pc(), 0x2d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff03), 0xe4);
        // E2 03D9
        gbc.setState(0xecba, 0x86eb, 0x4c0, 0x1d76, 0xfbfc, 0x819f, 0x0, 0x1);
        gbc.writeMem(0xecba, { 0xe2 });
        gbc.writeMem(0xff76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x86eb);
        EXPECT(gbc.pc(), 0xecbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecba), 0xe2);
        EXPECT(gbc.readMem(0xff76), 0x4);
        // E2 03DA
        gbc.setState(0xb77e, 0x4618, 0xf5a0, 0x862d, 0xf974, 0xba2c, 0x1, 0x1);
        gbc.writeMem(0xb77e, { 0xe2 });
        gbc.writeMem(0xff2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4618);
        EXPECT(gbc.pc(), 0xb77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb77e), 0xe2);
        EXPECT(gbc.readMem(0xff2d), 0xf5);
        // E2 03DB
        gbc.setState(0xb87b, 0x470e, 0x92f0, 0xd2a2, 0x2121, 0xc3bb, 0x0, 0x1);
        gbc.writeMem(0xb87b, { 0xe2 });
        gbc.writeMem(0xffa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x470e);
        EXPECT(gbc.pc(), 0xb87c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb87b), 0xe2);
        EXPECT(gbc.readMem(0xffa2), 0x92);
        // E2 03DC
        gbc.setState(0x9929, 0x5d94, 0xcdb0, 0x1eeb, 0x6924, 0x7e60, 0x1, 0x1);
        gbc.writeMem(0x9929, { 0xe2 });
        gbc.writeMem(0xffeb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5d94);
        EXPECT(gbc.pc(), 0x992a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9929), 0xe2);
        EXPECT(gbc.readMem(0xffeb), 0xcd);
        // E2 03DD
        gbc.setState(0x3bb9, 0x50ee, 0xb5c0, 0xf5, 0xf7bf, 0x2f57, 0x0, 0x1);
        gbc.writeMem(0x3bb9, { 0xe2 });
        gbc.writeMem(0xfff5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x50ee);
        EXPECT(gbc.pc(), 0x3bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff5), 0xb5);
        // E2 03DE
        gbc.setState(0xe187, 0xb361, 0x9300, 0x2c6f, 0x8bc5, 0xb6ba, 0x1, 0x1);
        gbc.writeMem(0xe187, { 0xe2 });
        gbc.writeMem(0xff6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb361);
        EXPECT(gbc.pc(), 0xe188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe187), 0xe2);
        EXPECT(gbc.readMem(0xff6f), 0x93);
        // E2 03DF
        gbc.setState(0x8069, 0x13b5, 0x1f10, 0x4eb9, 0xe4e8, 0x3c5f, 0x0, 0x0);
        gbc.writeMem(0x8069, { 0xe2 });
        gbc.writeMem(0xffb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x13b5);
        EXPECT(gbc.pc(), 0x806a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8069), 0xe2);
        EXPECT(gbc.readMem(0xffb9), 0x1f);
        // E2 03E0
        gbc.setState(0x2678, 0x491d, 0x8830, 0xc19d, 0x24c9, 0x3128, 0x1, 0x1);
        gbc.writeMem(0x2678, { 0xe2 });
        gbc.writeMem(0xff9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x491d);
        EXPECT(gbc.pc(), 0x2679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff9d), 0x88);
        // E2 03E1
        gbc.setState(0x43a5, 0x2a94, 0x8a0, 0x8020, 0x358f, 0x1810, 0x1, 0x1);
        gbc.writeMem(0x43a5, { 0xe2 });
        gbc.writeMem(0xff20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2a94);
        EXPECT(gbc.pc(), 0x43a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff20), 0x8);
        // E2 03E2
        gbc.setState(0x4ec5, 0x9638, 0xba10, 0x7d5b, 0x6858, 0x62d3, 0x1, 0x0);
        gbc.writeMem(0x4ec5, { 0xe2 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9638);
        EXPECT(gbc.pc(), 0x4ec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5b), 0xba);
        // E2 03E3
        gbc.setState(0x1651, 0xcc12, 0xca20, 0xcd00, 0xf4e5, 0xa060, 0x0, 0x0);
        gbc.writeMem(0x1651, { 0xe2 });
        gbc.writeMem(0xff00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcc12);
        EXPECT(gbc.pc(), 0x1652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff00), 0xca);
        // E2 03E4
        gbc.setState(0x77d9, 0xe9cd, 0x7c90, 0xb609, 0xc713, 0x54a0, 0x1, 0x0);
        gbc.writeMem(0x77d9, { 0xe2 });
        gbc.writeMem(0xff09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe9cd);
        EXPECT(gbc.pc(), 0x77da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff09), 0x7c);
        // E2 03E5
        gbc.setState(0xa61f, 0xde21, 0x65e0, 0x14af, 0x3368, 0xa354, 0x1, 0x1);
        gbc.writeMem(0xa61f, { 0xe2 });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xde21);
        EXPECT(gbc.pc(), 0xa620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa61f), 0xe2);
        EXPECT(gbc.readMem(0xffaf), 0x65);
        // E2 03E6
        gbc.setState(0x377d, 0x93f, 0xd800, 0x6d0d, 0x8887, 0x293c, 0x1, 0x1);
        gbc.writeMem(0x377d, { 0xe2 });
        gbc.writeMem(0xff0d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x93f);
        EXPECT(gbc.pc(), 0x377e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff0d), 0xd8);
        // E2 03E7
        gbc.setState(0xa08d, 0x3bd3, 0x5f80, 0xe939, 0xc385, 0x74da, 0x0, 0x1);
        gbc.writeMem(0xa08d, { 0xe2 });
        gbc.writeMem(0xff39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3bd3);
        EXPECT(gbc.pc(), 0xa08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08d), 0xe2);
        EXPECT(gbc.readMem(0xff39), 0x5f);
    }
