    TEST(gbcemu, opcode_cb_84) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 84 0000
        gbc.setState(0x83b5, 0xf099, 0x1d60, 0x169, 0x9d25, 0x3690, 0x1, 0x0);
        gbc.writeMem(0x83b5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf099);
        EXPECT(gbc.pc(), 0x83b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83b5), 0xcb);
        EXPECT(gbc.readMem(0x83b6), 0x84);
        // CB 84 0001
        gbc.setState(0x2d8d, 0x4c39, 0x1c40, 0xac0b, 0xf7bb, 0xc88f, 0x0, 0x0);
        gbc.writeMem(0x2d8d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4c39);
        EXPECT(gbc.pc(), 0x2d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0002
        gbc.setState(0x98c3, 0xcb4a, 0x1bc0, 0x322f, 0x2a01, 0xb6ba, 0x1, 0x0);
        gbc.writeMem(0x98c3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcb4a);
        EXPECT(gbc.pc(), 0x98c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c3), 0xcb);
        EXPECT(gbc.readMem(0x98c4), 0x84);
        // CB 84 0003
        gbc.setState(0x786b, 0xf4d4, 0xc0f0, 0x2933, 0x8443, 0xd0, 0x1, 0x0);
        gbc.writeMem(0x786b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf4d4);
        EXPECT(gbc.pc(), 0x786d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0004
        gbc.setState(0x2db2, 0x843e, 0xd120, 0x67ee, 0x8a06, 0xffe6, 0x1, 0x1);
        gbc.writeMem(0x2db2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x843e);
        EXPECT(gbc.pc(), 0x2db4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0005
        gbc.setState(0x1a6e, 0x4f83, 0x62b0, 0xc0dc, 0x68cb, 0x7485, 0x1, 0x1);
        gbc.writeMem(0x1a6e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4f83);
        EXPECT(gbc.pc(), 0x1a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0006
        gbc.setState(0x73f2, 0xbe04, 0x9930, 0xfa00, 0xadaa, 0x8bf0, 0x1, 0x0);
        gbc.writeMem(0x73f2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbe04);
        EXPECT(gbc.pc(), 0x73f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0008
        gbc.setState(0x5fc7, 0xbaaa, 0x9860, 0x4075, 0xb110, 0x9245, 0x1, 0x0);
        gbc.writeMem(0x5fc7, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbaaa);
        EXPECT(gbc.pc(), 0x5fc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0009
        gbc.setState(0xccb1, 0xabf, 0xa150, 0xa489, 0x3ca2, 0x512f, 0x1, 0x1);
        gbc.writeMem(0xccb1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xabf);
        EXPECT(gbc.pc(), 0xccb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccb1), 0xcb);
        EXPECT(gbc.readMem(0xccb2), 0x84);
        // CB 84 000A
        gbc.setState(0xd627, 0x2dc6, 0xe2c0, 0x3f01, 0xe7c9, 0x8570, 0x1, 0x0);
        gbc.writeMem(0xd627, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2dc6);
        EXPECT(gbc.pc(), 0xd629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd627), 0xcb);
        EXPECT(gbc.readMem(0xd628), 0x84);
        // CB 84 000C
        gbc.setState(0xa841, 0x489f, 0x3b0, 0x1da1, 0x8b19, 0x803a, 0x1, 0x1);
        gbc.writeMem(0xa841, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x489f);
        EXPECT(gbc.pc(), 0xa843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa841), 0xcb);
        EXPECT(gbc.readMem(0xa842), 0x84);
        // CB 84 000D
        gbc.setState(0x32, 0x3e2b, 0x11a0, 0xa6b9, 0x7a64, 0x5273, 0x0, 0x0);
        gbc.writeMem(0x32, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3e2b);
        EXPECT(gbc.pc(), 0x34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 000E
        gbc.setState(0xb20, 0xebd8, 0x1180, 0x96d2, 0xf260, 0x85db, 0x1, 0x1);
        gbc.writeMem(0xb20, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xebd8);
        EXPECT(gbc.pc(), 0xb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 000F
        gbc.setState(0x1678, 0xfb0, 0xf4a0, 0x146, 0x851a, 0xcbaa, 0x1, 0x1);
        gbc.writeMem(0x1678, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfb0);
        EXPECT(gbc.pc(), 0x167a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0010
        gbc.setState(0x3c18, 0x34d8, 0xb320, 0x7526, 0xb635, 0x85d1, 0x0, 0x0);
        gbc.writeMem(0x3c18, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x34d8);
        EXPECT(gbc.pc(), 0x3c1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0011
        gbc.setState(0xd64c, 0xcf5e, 0xf690, 0x877a, 0xd76, 0xd96d, 0x0, 0x0);
        gbc.writeMem(0xd64c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcf5e);
        EXPECT(gbc.pc(), 0xd64e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd64c), 0xcb);
        EXPECT(gbc.readMem(0xd64d), 0x84);
        // CB 84 0012
        gbc.setState(0xa7ce, 0x2887, 0x390, 0xe96b, 0xa5cc, 0xa20d, 0x0, 0x1);
        gbc.writeMem(0xa7ce, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2887);
        EXPECT(gbc.pc(), 0xa7d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ce), 0xcb);
        EXPECT(gbc.readMem(0xa7cf), 0x84);
        // CB 84 0013
        gbc.setState(0xb862, 0x10b3, 0xb380, 0x8f7d, 0x5bde, 0xc52b, 0x0, 0x1);
        gbc.writeMem(0xb862, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x10b3);
        EXPECT(gbc.pc(), 0xb864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb862), 0xcb);
        EXPECT(gbc.readMem(0xb863), 0x84);
        // CB 84 0014
        gbc.setState(0x5068, 0x417, 0x6c50, 0xabbe, 0x403f, 0x112b, 0x1, 0x0);
        gbc.writeMem(0x5068, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x417);
        EXPECT(gbc.pc(), 0x506a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0015
        gbc.setState(0xda79, 0xf50a, 0xafe0, 0xbb1a, 0xfdaf, 0x2034, 0x0, 0x0);
        gbc.writeMem(0xda79, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf50a);
        EXPECT(gbc.pc(), 0xda7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda79), 0xcb);
        EXPECT(gbc.readMem(0xda7a), 0x84);
        // CB 84 0016
        gbc.setState(0x83ff, 0xc33a, 0x1e90, 0x599c, 0x8bb9, 0x6e3b, 0x0, 0x0);
        gbc.writeMem(0x83ff, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc33a);
        EXPECT(gbc.pc(), 0x8401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ff), 0xcb);
        EXPECT(gbc.readMem(0x8400), 0x84);
        // CB 84 0017
        gbc.setState(0xde72, 0x2985, 0x7390, 0x9550, 0x1cb9, 0xff7a, 0x1, 0x1);
        gbc.writeMem(0xde72, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2985);
        EXPECT(gbc.pc(), 0xde74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde72), 0xcb);
        EXPECT(gbc.readMem(0xde73), 0x84);
        // CB 84 0018
        gbc.setState(0xf07, 0xc4c2, 0x760, 0x8a27, 0x7acd, 0xe1a5, 0x0, 0x1);
        gbc.writeMem(0xf07, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc4c2);
        EXPECT(gbc.pc(), 0xf09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0019
        gbc.setState(0x492c, 0x697d, 0xb9b0, 0x9269, 0x7689, 0xc23, 0x1, 0x1);
        gbc.writeMem(0x492c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x697d);
        EXPECT(gbc.pc(), 0x492e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 001A
        gbc.setState(0x99fd, 0x67a1, 0x2bd0, 0x9023, 0xc71a, 0x56df, 0x1, 0x1);
        gbc.writeMem(0x99fd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x67a1);
        EXPECT(gbc.pc(), 0x99ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fd), 0xcb);
        EXPECT(gbc.readMem(0x99fe), 0x84);
        // CB 84 001B
        gbc.setState(0x7e3f, 0xf794, 0x1b70, 0xabe7, 0xd711, 0x7728, 0x1, 0x0);
        gbc.writeMem(0x7e3f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf794);
        EXPECT(gbc.pc(), 0x7e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 001C
        gbc.setState(0x497a, 0xc70c, 0x6f40, 0x8a9b, 0xb903, 0xee12, 0x1, 0x0);
        gbc.writeMem(0x497a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc70c);
        EXPECT(gbc.pc(), 0x497c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 001D
        gbc.setState(0x1979, 0x565a, 0x4de0, 0x766e, 0x1d62, 0x6606, 0x1, 0x0);
        gbc.writeMem(0x1979, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x565a);
        EXPECT(gbc.pc(), 0x197b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 001E
        gbc.setState(0x2613, 0x1ec5, 0x4230, 0xfd7e, 0xdb74, 0x9db, 0x0, 0x1);
        gbc.writeMem(0x2613, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1ec5);
        EXPECT(gbc.pc(), 0x2615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 001F
        gbc.setState(0x7695, 0x2ff3, 0xfc0, 0x6f71, 0xf652, 0x54bf, 0x1, 0x1);
        gbc.writeMem(0x7695, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2ff3);
        EXPECT(gbc.pc(), 0x7697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0020
        gbc.setState(0xaa5e, 0x20a5, 0xfeb0, 0xcbfc, 0x9a02, 0x5d96, 0x1, 0x0);
        gbc.writeMem(0xaa5e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x20a5);
        EXPECT(gbc.pc(), 0xaa60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa5e), 0xcb);
        EXPECT(gbc.readMem(0xaa5f), 0x84);
        // CB 84 0021
        gbc.setState(0xe282, 0x84f7, 0x7210, 0x6049, 0x5b25, 0x1cce, 0x1, 0x1);
        gbc.writeMem(0xe282, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x84f7);
        EXPECT(gbc.pc(), 0xe284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe282), 0xcb);
        EXPECT(gbc.readMem(0xe283), 0x84);
        // CB 84 0022
        gbc.setState(0x18d4, 0x1e46, 0x28e0, 0xc25b, 0x9a26, 0x22c4, 0x0, 0x0);
        gbc.writeMem(0x18d4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1e46);
        EXPECT(gbc.pc(), 0x18d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0023
        gbc.setState(0xc899, 0x9e08, 0xa370, 0x14b1, 0xb526, 0x20fc, 0x1, 0x0);
        gbc.writeMem(0xc899, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9e08);
        EXPECT(gbc.pc(), 0xc89b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc899), 0xcb);
        EXPECT(gbc.readMem(0xc89a), 0x84);
        // CB 84 0024
        gbc.setState(0x7e5b, 0x193b, 0x1910, 0xedf8, 0x856c, 0x239a, 0x0, 0x0);
        gbc.writeMem(0x7e5b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x193b);
        EXPECT(gbc.pc(), 0x7e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0025
        gbc.setState(0xebfa, 0x8e4f, 0x4e70, 0xdb6e, 0xd0c4, 0x288, 0x1, 0x1);
        gbc.writeMem(0xebfa, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8e4f);
        EXPECT(gbc.pc(), 0xebfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfa), 0xcb);
        EXPECT(gbc.readMem(0xebfb), 0x84);
        // CB 84 0026
        gbc.setState(0x1eb1, 0x5454, 0x54b0, 0xe5d1, 0xec4, 0x8cb1, 0x1, 0x1);
        gbc.writeMem(0x1eb1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5454);
        EXPECT(gbc.pc(), 0x1eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0027
        gbc.setState(0x2f67, 0x206, 0xb580, 0x671d, 0xf124, 0x937d, 0x1, 0x0);
        gbc.writeMem(0x2f67, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x206);
        EXPECT(gbc.pc(), 0x2f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0028
        gbc.setState(0xaae4, 0x9531, 0x2370, 0xbeaa, 0xdbd4, 0x12ed, 0x0, 0x0);
        gbc.writeMem(0xaae4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9531);
        EXPECT(gbc.pc(), 0xaae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaae4), 0xcb);
        EXPECT(gbc.readMem(0xaae5), 0x84);
        // CB 84 0029
        gbc.setState(0x1a51, 0xcf52, 0x57c0, 0x3030, 0x1833, 0xa3cf, 0x1, 0x0);
        gbc.writeMem(0x1a51, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcf52);
        EXPECT(gbc.pc(), 0x1a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 002A
        gbc.setState(0x871d, 0x6c75, 0x5fc0, 0x2316, 0x884c, 0xb198, 0x1, 0x0);
        gbc.writeMem(0x871d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6c75);
        EXPECT(gbc.pc(), 0x871f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x871d), 0xcb);
        EXPECT(gbc.readMem(0x871e), 0x84);
        // CB 84 002B
        gbc.setState(0x824f, 0x82fb, 0x1e00, 0xabb5, 0xed0, 0xc7e, 0x1, 0x1);
        gbc.writeMem(0x824f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x82fb);
        EXPECT(gbc.pc(), 0x8251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x824f), 0xcb);
        EXPECT(gbc.readMem(0x8250), 0x84);
        // CB 84 002C
        gbc.setState(0x2671, 0xc0c8, 0x1ec0, 0x943a, 0x872d, 0x8822, 0x1, 0x0);
        gbc.writeMem(0x2671, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc0c8);
        EXPECT(gbc.pc(), 0x2673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 002D
        gbc.setState(0x5940, 0x5881, 0xcf90, 0x84dd, 0x3fa5, 0xc190, 0x0, 0x1);
        gbc.writeMem(0x5940, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5881);
        EXPECT(gbc.pc(), 0x5942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 002E
        gbc.setState(0xc4a1, 0xcb50, 0x72e0, 0x61ad, 0x747d, 0x5608, 0x1, 0x1);
        gbc.writeMem(0xc4a1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xcb50);
        EXPECT(gbc.pc(), 0xc4a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a1), 0xcb);
        EXPECT(gbc.readMem(0xc4a2), 0x84);
        // CB 84 002F
        gbc.setState(0x84fd, 0x5e9, 0x1130, 0xf4e1, 0x9762, 0xa0d2, 0x0, 0x1);
        gbc.writeMem(0x84fd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5e9);
        EXPECT(gbc.pc(), 0x84ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84fd), 0xcb);
        EXPECT(gbc.readMem(0x84fe), 0x84);
        // CB 84 0030
        gbc.setState(0x617f, 0x58d9, 0x45d0, 0x7772, 0xf47c, 0x1147, 0x1, 0x0);
        gbc.writeMem(0x617f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x58d9);
        EXPECT(gbc.pc(), 0x6181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0031
        gbc.setState(0xbc45, 0x975b, 0xd240, 0xc71e, 0xe1c0, 0x41a7, 0x1, 0x1);
        gbc.writeMem(0xbc45, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x975b);
        EXPECT(gbc.pc(), 0xbc47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc45), 0xcb);
        EXPECT(gbc.readMem(0xbc46), 0x84);
        // CB 84 0032
        gbc.setState(0x4a0c, 0x18d7, 0x2d70, 0x3ee4, 0x6aeb, 0xd2e5, 0x1, 0x0);
        gbc.writeMem(0x4a0c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x18d7);
        EXPECT(gbc.pc(), 0x4a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0033
        gbc.setState(0x4c15, 0x454a, 0x2810, 0xb27a, 0x8db8, 0x9ad7, 0x0, 0x0);
        gbc.writeMem(0x4c15, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x454a);
        EXPECT(gbc.pc(), 0x4c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0034
        gbc.setState(0xc419, 0x14a5, 0x80f0, 0x127f, 0x8d38, 0xe742, 0x0, 0x0);
        gbc.writeMem(0xc419, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x14a5);
        EXPECT(gbc.pc(), 0xc41b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc419), 0xcb);
        EXPECT(gbc.readMem(0xc41a), 0x84);
        // CB 84 0035
        gbc.setState(0x43a3, 0x8255, 0xe710, 0x7cda, 0xe0b7, 0x40ce, 0x0, 0x1);
        gbc.writeMem(0x43a3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8255);
        EXPECT(gbc.pc(), 0x43a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0036
        gbc.setState(0x94a8, 0x7d15, 0xf530, 0xc6aa, 0x28b4, 0x60ad, 0x0, 0x0);
        gbc.writeMem(0x94a8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7d15);
        EXPECT(gbc.pc(), 0x94aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94a8), 0xcb);
        EXPECT(gbc.readMem(0x94a9), 0x84);
        // CB 84 0037
        gbc.setState(0x5ba1, 0x752e, 0x4ac0, 0x2b03, 0x58de, 0xe800, 0x0, 0x0);
        gbc.writeMem(0x5ba1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x752e);
        EXPECT(gbc.pc(), 0x5ba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0038
        gbc.setState(0xb629, 0x90d2, 0xeb10, 0xdbb, 0x689d, 0xebcc, 0x1, 0x1);
        gbc.writeMem(0xb629, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x90d2);
        EXPECT(gbc.pc(), 0xb62b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb629), 0xcb);
        EXPECT(gbc.readMem(0xb62a), 0x84);
        // CB 84 0039
        gbc.setState(0xda6c, 0x3209, 0x4250, 0x58d2, 0xcb36, 0x4846, 0x0, 0x0);
        gbc.writeMem(0xda6c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3209);
        EXPECT(gbc.pc(), 0xda6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda6c), 0xcb);
        EXPECT(gbc.readMem(0xda6d), 0x84);
        // CB 84 003A
        gbc.setState(0xaff5, 0x3124, 0x2250, 0x25ef, 0x84d5, 0x5781, 0x1, 0x0);
        gbc.writeMem(0xaff5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3124);
        EXPECT(gbc.pc(), 0xaff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff5), 0xcb);
        EXPECT(gbc.readMem(0xaff6), 0x84);
        // CB 84 003B
        gbc.setState(0xeb0c, 0xd6d2, 0x3900, 0x7473, 0x628f, 0x6be7, 0x1, 0x0);
        gbc.writeMem(0xeb0c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd6d2);
        EXPECT(gbc.pc(), 0xeb0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0c), 0xcb);
        EXPECT(gbc.readMem(0xeb0d), 0x84);
        // CB 84 003C
        gbc.setState(0x6eac, 0x7dea, 0xce00, 0xc437, 0xc666, 0x69eb, 0x1, 0x0);
        gbc.writeMem(0x6eac, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7dea);
        EXPECT(gbc.pc(), 0x6eae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 003D
        gbc.setState(0x92e7, 0x5354, 0xec0, 0xb7c0, 0xf8c, 0x9852, 0x1, 0x1);
        gbc.writeMem(0x92e7, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5354);
        EXPECT(gbc.pc(), 0x92e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e7), 0xcb);
        EXPECT(gbc.readMem(0x92e8), 0x84);
        // CB 84 003E
        gbc.setState(0x4065, 0xe2a3, 0x4810, 0xda84, 0x7d88, 0xb8d6, 0x1, 0x1);
        gbc.writeMem(0x4065, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe2a3);
        EXPECT(gbc.pc(), 0x4067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 003F
        gbc.setState(0x95dd, 0x3a10, 0x24b0, 0x43e0, 0x591d, 0x7146, 0x1, 0x0);
        gbc.writeMem(0x95dd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3a10);
        EXPECT(gbc.pc(), 0x95df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95dd), 0xcb);
        EXPECT(gbc.readMem(0x95de), 0x84);
        // CB 84 0040
        gbc.setState(0x66b5, 0x43e, 0x1850, 0x57e9, 0xfdf0, 0xa4ec, 0x0, 0x0);
        gbc.writeMem(0x66b5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x43e);
        EXPECT(gbc.pc(), 0x66b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0041
        gbc.setState(0x7cb1, 0xf91a, 0xaed0, 0x57cb, 0xddd, 0xbf0, 0x0, 0x0);
        gbc.writeMem(0x7cb1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf91a);
        EXPECT(gbc.pc(), 0x7cb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0042
        gbc.setState(0x6, 0x8397, 0x1fa0, 0xe271, 0x8654, 0xaa1f, 0x1, 0x0);
        gbc.writeMem(0x6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8397);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0043
        gbc.setState(0x7f9b, 0x4b3, 0x90c0, 0x32c8, 0x4437, 0xf258, 0x1, 0x1);
        gbc.writeMem(0x7f9b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4b3);
        EXPECT(gbc.pc(), 0x7f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0045
        gbc.setState(0xe3c5, 0x4d84, 0x5100, 0xc7ca, 0x6d04, 0x61bb, 0x1, 0x0);
        gbc.writeMem(0xe3c5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4d84);
        EXPECT(gbc.pc(), 0xe3c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c5), 0xcb);
        EXPECT(gbc.readMem(0xe3c6), 0x84);
        // CB 84 0046
        gbc.setState(0x4a1b, 0xd874, 0x9f70, 0x6fa2, 0x1b3d, 0x7524, 0x1, 0x1);
        gbc.writeMem(0x4a1b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd874);
        EXPECT(gbc.pc(), 0x4a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0047
        gbc.setState(0x1e17, 0x148c, 0xbf10, 0x3091, 0x52f7, 0x9775, 0x1, 0x0);
        gbc.writeMem(0x1e17, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x148c);
        EXPECT(gbc.pc(), 0x1e19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0048
        gbc.setState(0xa50c, 0x4d6d, 0xbe20, 0x676d, 0x24c2, 0x8215, 0x1, 0x0);
        gbc.writeMem(0xa50c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4d6d);
        EXPECT(gbc.pc(), 0xa50e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa50c), 0xcb);
        EXPECT(gbc.readMem(0xa50d), 0x84);
        // CB 84 0049
        gbc.setState(0xc073, 0x4497, 0xf580, 0x5d82, 0xc302, 0x48e5, 0x1, 0x1);
        gbc.writeMem(0xc073, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4497);
        EXPECT(gbc.pc(), 0xc075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc073), 0xcb);
        EXPECT(gbc.readMem(0xc074), 0x84);
        // CB 84 004A
        gbc.setState(0x227b, 0xa661, 0x8740, 0x9605, 0x9d9c, 0xec2e, 0x0, 0x1);
        gbc.writeMem(0x227b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa661);
        EXPECT(gbc.pc(), 0x227d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 004C
        gbc.setState(0xe719, 0x1dbe, 0x7fe0, 0xf0a8, 0x979c, 0x158, 0x1, 0x1);
        gbc.writeMem(0xe719, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1dbe);
        EXPECT(gbc.pc(), 0xe71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe719), 0xcb);
        EXPECT(gbc.readMem(0xe71a), 0x84);
        // CB 84 004D
        gbc.setState(0xbdb4, 0xae3d, 0xcb60, 0xe53d, 0xb366, 0x5a8, 0x0, 0x0);
        gbc.writeMem(0xbdb4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xae3d);
        EXPECT(gbc.pc(), 0xbdb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb4), 0xcb);
        EXPECT(gbc.readMem(0xbdb5), 0x84);
        // CB 84 004E
        gbc.setState(0x8e6a, 0x5927, 0x81b0, 0x56de, 0xed44, 0x6252, 0x1, 0x1);
        gbc.writeMem(0x8e6a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5927);
        EXPECT(gbc.pc(), 0x8e6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e6a), 0xcb);
        EXPECT(gbc.readMem(0x8e6b), 0x84);
        // CB 84 004F
        gbc.setState(0x38cf, 0xdba3, 0xf6d0, 0xd954, 0xf7c1, 0x12e4, 0x0, 0x0);
        gbc.writeMem(0x38cf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdba3);
        EXPECT(gbc.pc(), 0x38d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0050
        gbc.setState(0xc57a, 0x5108, 0x4110, 0xfc5, 0x9738, 0xdabe, 0x1, 0x0);
        gbc.writeMem(0xc57a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5108);
        EXPECT(gbc.pc(), 0xc57c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc57a), 0xcb);
        EXPECT(gbc.readMem(0xc57b), 0x84);
        // CB 84 0051
        gbc.setState(0xe45b, 0xf549, 0x4980, 0xbca8, 0x46cd, 0x82c, 0x0, 0x0);
        gbc.writeMem(0xe45b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf549);
        EXPECT(gbc.pc(), 0xe45d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe45b), 0xcb);
        EXPECT(gbc.readMem(0xe45c), 0x84);
        // CB 84 0052
        gbc.setState(0x9c0f, 0xbdea, 0xbb80, 0xd860, 0x65a3, 0x4a87, 0x0, 0x1);
        gbc.writeMem(0x9c0f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbdea);
        EXPECT(gbc.pc(), 0x9c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0f), 0xcb);
        EXPECT(gbc.readMem(0x9c10), 0x84);
        // CB 84 0053
        gbc.setState(0x5882, 0x3cf9, 0xfbd0, 0xa155, 0xadb0, 0xf5fd, 0x1, 0x0);
        gbc.writeMem(0x5882, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3cf9);
        EXPECT(gbc.pc(), 0x5884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0054
        gbc.setState(0x825e, 0x2eac, 0x4b10, 0x4620, 0xcb17, 0xd380, 0x1, 0x0);
        gbc.writeMem(0x825e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2eac);
        EXPECT(gbc.pc(), 0x8260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x825e), 0xcb);
        EXPECT(gbc.readMem(0x825f), 0x84);
        // CB 84 0055
        gbc.setState(0xa560, 0x11c1, 0xc80, 0x4e1f, 0x300e, 0x244, 0x0, 0x0);
        gbc.writeMem(0xa560, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x11c1);
        EXPECT(gbc.pc(), 0xa562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa560), 0xcb);
        EXPECT(gbc.readMem(0xa561), 0x84);
        // CB 84 0056
        gbc.setState(0x957b, 0x771e, 0x7030, 0x8434, 0x2380, 0x2385, 0x1, 0x0);
        gbc.writeMem(0x957b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x771e);
        EXPECT(gbc.pc(), 0x957d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x957b), 0xcb);
        EXPECT(gbc.readMem(0x957c), 0x84);
        // CB 84 0057
        gbc.setState(0x1079, 0x6cca, 0xa820, 0xe7e3, 0x665f, 0x677e, 0x0, 0x0);
        gbc.writeMem(0x1079, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6cca);
        EXPECT(gbc.pc(), 0x107b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0058
        gbc.setState(0xbfc3, 0x3a10, 0xbe00, 0x3387, 0xa34c, 0x9e54, 0x1, 0x1);
        gbc.writeMem(0xbfc3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3a10);
        EXPECT(gbc.pc(), 0xbfc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc3), 0xcb);
        EXPECT(gbc.readMem(0xbfc4), 0x84);
        // CB 84 0059
        gbc.setState(0xc357, 0xf103, 0x6c30, 0xbb27, 0xeab5, 0xf4e5, 0x0, 0x1);
        gbc.writeMem(0xc357, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf103);
        EXPECT(gbc.pc(), 0xc359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc357), 0xcb);
        EXPECT(gbc.readMem(0xc358), 0x84);
        // CB 84 005A
        gbc.setState(0x49ae, 0xc943, 0xe9a0, 0xbe72, 0x5db8, 0x13ad, 0x0, 0x1);
        gbc.writeMem(0x49ae, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc943);
        EXPECT(gbc.pc(), 0x49b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 005B
        gbc.setState(0x1c72, 0xb336, 0x28c0, 0x1550, 0x2c45, 0xd97f, 0x1, 0x0);
        gbc.writeMem(0x1c72, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb336);
        EXPECT(gbc.pc(), 0x1c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 005C
        gbc.setState(0xc189, 0x8843, 0x66b0, 0x3aa5, 0x78b0, 0xd1df, 0x1, 0x1);
        gbc.writeMem(0xc189, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8843);
        EXPECT(gbc.pc(), 0xc18b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc189), 0xcb);
        EXPECT(gbc.readMem(0xc18a), 0x84);
        // CB 84 005D
        gbc.setState(0xe5af, 0xedba, 0x5730, 0xe245, 0xadc7, 0x939b, 0x0, 0x1);
        gbc.writeMem(0xe5af, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xedba);
        EXPECT(gbc.pc(), 0xe5b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5af), 0xcb);
        EXPECT(gbc.readMem(0xe5b0), 0x84);
        // CB 84 005E
        gbc.setState(0x4893, 0x1480, 0xcf50, 0xc9cf, 0x57f9, 0xf3d1, 0x1, 0x1);
        gbc.writeMem(0x4893, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1480);
        EXPECT(gbc.pc(), 0x4895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 005F
        gbc.setState(0xa2e, 0x1a98, 0x7480, 0x85bb, 0x9ac9, 0x7342, 0x1, 0x0);
        gbc.writeMem(0xa2e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1a98);
        EXPECT(gbc.pc(), 0xa30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0060
        gbc.setState(0xb99e, 0xca79, 0xa090, 0xf3ea, 0xb3c7, 0x1dd7, 0x0, 0x1);
        gbc.writeMem(0xb99e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xca79);
        EXPECT(gbc.pc(), 0xb9a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb99e), 0xcb);
        EXPECT(gbc.readMem(0xb99f), 0x84);
        // CB 84 0061
        gbc.setState(0x89d7, 0xb386, 0x6480, 0xae28, 0xcdb0, 0x14bb, 0x0, 0x1);
        gbc.writeMem(0x89d7, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb386);
        EXPECT(gbc.pc(), 0x89d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d7), 0xcb);
        EXPECT(gbc.readMem(0x89d8), 0x84);
        // CB 84 0062
        gbc.setState(0x3a1, 0xa276, 0xdd90, 0x5db5, 0xd6ba, 0x1c4, 0x0, 0x0);
        gbc.writeMem(0x3a1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa276);
        EXPECT(gbc.pc(), 0x3a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0063
        gbc.setState(0xb92e, 0x5f0b, 0xe5b0, 0xbf30, 0x636d, 0x9090, 0x1, 0x1);
        gbc.writeMem(0xb92e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5f0b);
        EXPECT(gbc.pc(), 0xb930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb92e), 0xcb);
        EXPECT(gbc.readMem(0xb92f), 0x84);
        // CB 84 0064
        gbc.setState(0x40a0, 0xf860, 0x1cf0, 0xa3d7, 0x6df3, 0x38e9, 0x1, 0x0);
        gbc.writeMem(0x40a0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf860);
        EXPECT(gbc.pc(), 0x40a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0065
        gbc.setState(0xb094, 0xf9ef, 0x7380, 0x1826, 0x5be5, 0x8b3c, 0x1, 0x1);
        gbc.writeMem(0xb094, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf9ef);
        EXPECT(gbc.pc(), 0xb096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb094), 0xcb);
        EXPECT(gbc.readMem(0xb095), 0x84);
        // CB 84 0066
        gbc.setState(0xe36d, 0x948d, 0xdac0, 0xcdd0, 0x714d, 0x7f3a, 0x1, 0x1);
        gbc.writeMem(0xe36d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x948d);
        EXPECT(gbc.pc(), 0xe36f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe36d), 0xcb);
        EXPECT(gbc.readMem(0xe36e), 0x84);
        // CB 84 0067
        gbc.setState(0x2628, 0xa780, 0x29e0, 0x6038, 0xd607, 0xe822, 0x0, 0x0);
        gbc.writeMem(0x2628, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa780);
        EXPECT(gbc.pc(), 0x262a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0069
        gbc.setState(0x4670, 0x75a6, 0xdc40, 0x3dd4, 0x4796, 0x2f34, 0x0, 0x1);
        gbc.writeMem(0x4670, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x75a6);
        EXPECT(gbc.pc(), 0x4672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 006A
        gbc.setState(0x70c4, 0x547a, 0xb70, 0xc133, 0x6773, 0x2bfe, 0x0, 0x0);
        gbc.writeMem(0x70c4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x547a);
        EXPECT(gbc.pc(), 0x70c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 006B
        gbc.setState(0x66ad, 0x8b9f, 0x6d40, 0xc590, 0x91b1, 0x7f08, 0x1, 0x0);
        gbc.writeMem(0x66ad, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8b9f);
        EXPECT(gbc.pc(), 0x66af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 006C
        gbc.setState(0x5f3a, 0x6840, 0x6260, 0xdc3, 0x25eb, 0x3289, 0x1, 0x0);
        gbc.writeMem(0x5f3a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6840);
        EXPECT(gbc.pc(), 0x5f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 006D
        gbc.setState(0xc9f9, 0x7d42, 0xe170, 0x5ae4, 0xfd2f, 0x25c8, 0x1, 0x1);
        gbc.writeMem(0xc9f9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7d42);
        EXPECT(gbc.pc(), 0xc9fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f9), 0xcb);
        EXPECT(gbc.readMem(0xc9fa), 0x84);
        // CB 84 006F
        gbc.setState(0x3326, 0x7463, 0x3ab0, 0x808d, 0xd3, 0x1f1d, 0x0, 0x1);
        gbc.writeMem(0x3326, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7463);
        EXPECT(gbc.pc(), 0x3328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0070
        gbc.setState(0xebfd, 0xd95d, 0x2780, 0xa0ec, 0x5539, 0xca4, 0x0, 0x0);
        gbc.writeMem(0xebfd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd95d);
        EXPECT(gbc.pc(), 0xebff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebfd), 0xcb);
        EXPECT(gbc.readMem(0xebfe), 0x84);
        // CB 84 0071
        gbc.setState(0x83ae, 0x1439, 0x58b0, 0xfb3b, 0x7942, 0x80b5, 0x1, 0x0);
        gbc.writeMem(0x83ae, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1439);
        EXPECT(gbc.pc(), 0x83b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ae), 0xcb);
        EXPECT(gbc.readMem(0x83af), 0x84);
        // CB 84 0072
        gbc.setState(0x766a, 0x81a4, 0xe8c0, 0xc751, 0xaba3, 0x835f, 0x0, 0x1);
        gbc.writeMem(0x766a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x81a4);
        EXPECT(gbc.pc(), 0x766c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0073
        gbc.setState(0xbceb, 0x37cf, 0x4330, 0x9631, 0x3169, 0xb00b, 0x1, 0x1);
        gbc.writeMem(0xbceb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x37cf);
        EXPECT(gbc.pc(), 0xbced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbceb), 0xcb);
        EXPECT(gbc.readMem(0xbcec), 0x84);
        // CB 84 0074
        gbc.setState(0xb07e, 0xe6e1, 0x52b0, 0xf396, 0x822a, 0x34ab, 0x1, 0x1);
        gbc.writeMem(0xb07e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe6e1);
        EXPECT(gbc.pc(), 0xb080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb07e), 0xcb);
        EXPECT(gbc.readMem(0xb07f), 0x84);
        // CB 84 0075
        gbc.setState(0x1a96, 0xb616, 0x9d50, 0x6547, 0x748f, 0xb644, 0x1, 0x1);
        gbc.writeMem(0x1a96, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb616);
        EXPECT(gbc.pc(), 0x1a98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0076
        gbc.setState(0x547d, 0x2dbd, 0x44a0, 0x638c, 0x5a94, 0xbb1e, 0x0, 0x0);
        gbc.writeMem(0x547d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2dbd);
        EXPECT(gbc.pc(), 0x547f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0077
        gbc.setState(0x15a4, 0x220b, 0x2220, 0x878b, 0x7296, 0xcf41, 0x0, 0x0);
        gbc.writeMem(0x15a4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x220b);
        EXPECT(gbc.pc(), 0x15a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0078
        gbc.setState(0xe0b4, 0x5dc, 0x4cf0, 0x50e9, 0x89ab, 0x96a1, 0x0, 0x1);
        gbc.writeMem(0xe0b4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5dc);
        EXPECT(gbc.pc(), 0xe0b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b4), 0xcb);
        EXPECT(gbc.readMem(0xe0b5), 0x84);
        // CB 84 0079
        gbc.setState(0x5d98, 0xcc61, 0xbf30, 0xc157, 0x9273, 0x7ced, 0x1, 0x1);
        gbc.writeMem(0x5d98, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcc61);
        EXPECT(gbc.pc(), 0x5d9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 007A
        gbc.setState(0x55c5, 0x7113, 0xa040, 0x29d2, 0x27b, 0xb711, 0x1, 0x1);
        gbc.writeMem(0x55c5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7113);
        EXPECT(gbc.pc(), 0x55c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 007B
        gbc.setState(0x4f5b, 0x9dcc, 0x6b20, 0x2dcd, 0x90c5, 0x88d7, 0x0, 0x0);
        gbc.writeMem(0x4f5b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9dcc);
        EXPECT(gbc.pc(), 0x4f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 007C
        gbc.setState(0x5930, 0xefb2, 0x8300, 0xe40, 0x4c08, 0x8b97, 0x0, 0x0);
        gbc.writeMem(0x5930, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xefb2);
        EXPECT(gbc.pc(), 0x5932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 007E
        gbc.setState(0xdcc7, 0x701e, 0x7a30, 0xaab1, 0x69cb, 0x2e0, 0x1, 0x0);
        gbc.writeMem(0xdcc7, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x701e);
        EXPECT(gbc.pc(), 0xdcc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcc7), 0xcb);
        EXPECT(gbc.readMem(0xdcc8), 0x84);
        // CB 84 007F
        gbc.setState(0xd593, 0x2952, 0x64d0, 0x24ed, 0xb8c8, 0x9b8a, 0x0, 0x0);
        gbc.writeMem(0xd593, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2952);
        EXPECT(gbc.pc(), 0xd595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd593), 0xcb);
        EXPECT(gbc.readMem(0xd594), 0x84);
        // CB 84 0081
        gbc.setState(0x53ea, 0xef4d, 0x82a0, 0xf54f, 0x5683, 0xb061, 0x1, 0x1);
        gbc.writeMem(0x53ea, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xef4d);
        EXPECT(gbc.pc(), 0x53ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0082
        gbc.setState(0x58f1, 0x7f13, 0xef0, 0xca86, 0xa4b7, 0x2394, 0x1, 0x1);
        gbc.writeMem(0x58f1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7f13);
        EXPECT(gbc.pc(), 0x58f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0086
        gbc.setState(0x345b, 0xa31f, 0xd690, 0xe825, 0xa75e, 0x57b6, 0x1, 0x0);
        gbc.writeMem(0x345b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa31f);
        EXPECT(gbc.pc(), 0x345d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0087
        gbc.setState(0x3938, 0x7778, 0x1f00, 0x7a28, 0xab4a, 0xfc1, 0x1, 0x0);
        gbc.writeMem(0x3938, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7778);
        EXPECT(gbc.pc(), 0x393a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0088
        gbc.setState(0x8f2a, 0x5135, 0x1760, 0x97c5, 0x72b2, 0xa10b, 0x0, 0x1);
        gbc.writeMem(0x8f2a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5135);
        EXPECT(gbc.pc(), 0x8f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2a), 0xcb);
        EXPECT(gbc.readMem(0x8f2b), 0x84);
        // CB 84 0089
        gbc.setState(0xd636, 0x832, 0x9d80, 0xa105, 0xf0e6, 0xfa2a, 0x0, 0x0);
        gbc.writeMem(0xd636, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x832);
        EXPECT(gbc.pc(), 0xd638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd636), 0xcb);
        EXPECT(gbc.readMem(0xd637), 0x84);
        // CB 84 008A
        gbc.setState(0x148b, 0x6d5b, 0x4530, 0xdafe, 0x76a7, 0x77b, 0x1, 0x1);
        gbc.writeMem(0x148b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6d5b);
        EXPECT(gbc.pc(), 0x148d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 008B
        gbc.setState(0x79ca, 0x542b, 0x54d0, 0x86c5, 0x5a3a, 0xaa9f, 0x1, 0x1);
        gbc.writeMem(0x79ca, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x542b);
        EXPECT(gbc.pc(), 0x79cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 008C
        gbc.setState(0x8b3e, 0xbb95, 0x2280, 0xc023, 0x7058, 0x217b, 0x1, 0x0);
        gbc.writeMem(0x8b3e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbb95);
        EXPECT(gbc.pc(), 0x8b40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3e), 0xcb);
        EXPECT(gbc.readMem(0x8b3f), 0x84);
        // CB 84 008E
        gbc.setState(0x7fdd, 0x2031, 0x3ed0, 0xf5cd, 0xe868, 0xf74, 0x0, 0x1);
        gbc.writeMem(0x7fdd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2031);
        EXPECT(gbc.pc(), 0x7fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0090
        gbc.setState(0xb192, 0xd271, 0xd830, 0x134c, 0x8f7d, 0x603a, 0x0, 0x0);
        gbc.writeMem(0xb192, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd271);
        EXPECT(gbc.pc(), 0xb194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb192), 0xcb);
        EXPECT(gbc.readMem(0xb193), 0x84);
        // CB 84 0091
        gbc.setState(0x2dfd, 0xfe3c, 0xa9c0, 0x71cb, 0xd429, 0x5e26, 0x1, 0x1);
        gbc.writeMem(0x2dfd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xfe3c);
        EXPECT(gbc.pc(), 0x2dff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0092
        gbc.setState(0x42f9, 0xf89c, 0x67b0, 0xc0b3, 0xd776, 0x431, 0x0, 0x0);
        gbc.writeMem(0x42f9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf89c);
        EXPECT(gbc.pc(), 0x42fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0093
        gbc.setState(0x77ca, 0x740a, 0x3170, 0xb5ff, 0x6c4e, 0x29fe, 0x1, 0x0);
        gbc.writeMem(0x77ca, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x740a);
        EXPECT(gbc.pc(), 0x77cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0094
        gbc.setState(0x3714, 0xc890, 0x33e0, 0x3e93, 0xfeb, 0x889a, 0x0, 0x0);
        gbc.writeMem(0x3714, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc890);
        EXPECT(gbc.pc(), 0x3716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0095
        gbc.setState(0x37ac, 0x8124, 0x6780, 0x69ed, 0x9cd, 0xf4c1, 0x0, 0x1);
        gbc.writeMem(0x37ac, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8124);
        EXPECT(gbc.pc(), 0x37ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0096
        gbc.setState(0xc1a7, 0xe4f8, 0x35e0, 0x8e3f, 0xf7f0, 0xc047, 0x1, 0x1);
        gbc.writeMem(0xc1a7, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe4f8);
        EXPECT(gbc.pc(), 0xc1a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a7), 0xcb);
        EXPECT(gbc.readMem(0xc1a8), 0x84);
        // CB 84 0097
        gbc.setState(0xc62c, 0xde06, 0xc40, 0xfa14, 0x1917, 0x9714, 0x1, 0x0);
        gbc.writeMem(0xc62c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xde06);
        EXPECT(gbc.pc(), 0xc62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62c), 0xcb);
        EXPECT(gbc.readMem(0xc62d), 0x84);
        // CB 84 0098
        gbc.setState(0xdd52, 0xd4d1, 0xf1c0, 0x2652, 0x4102, 0x64ea, 0x1, 0x0);
        gbc.writeMem(0xdd52, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd4d1);
        EXPECT(gbc.pc(), 0xdd54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd52), 0xcb);
        EXPECT(gbc.readMem(0xdd53), 0x84);
        // CB 84 0099
        gbc.setState(0x28b7, 0xa751, 0x4fb0, 0x5544, 0xfb05, 0x7034, 0x0, 0x1);
        gbc.writeMem(0x28b7, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa751);
        EXPECT(gbc.pc(), 0x28b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 009A
        gbc.setState(0x71ce, 0xdffd, 0x4570, 0xedfd, 0xe0c3, 0xb97c, 0x0, 0x1);
        gbc.writeMem(0x71ce, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdffd);
        EXPECT(gbc.pc(), 0x71d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 009B
        gbc.setState(0xec86, 0x5b00, 0xa3e0, 0x9991, 0xd686, 0x37ea, 0x1, 0x0);
        gbc.writeMem(0xec86, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5b00);
        EXPECT(gbc.pc(), 0xec88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec86), 0xcb);
        EXPECT(gbc.readMem(0xec87), 0x84);
        // CB 84 009C
        gbc.setState(0x7976, 0x3e60, 0xeaa0, 0xe620, 0x5900, 0x852e, 0x1, 0x1);
        gbc.writeMem(0x7976, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3e60);
        EXPECT(gbc.pc(), 0x7978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 009D
        gbc.setState(0xc835, 0x7637, 0x4030, 0xff72, 0x136e, 0x3b56, 0x1, 0x1);
        gbc.writeMem(0xc835, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7637);
        EXPECT(gbc.pc(), 0xc837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc835), 0xcb);
        EXPECT(gbc.readMem(0xc836), 0x84);
        // CB 84 009E
        gbc.setState(0xc5bf, 0xa9c5, 0xe910, 0xfb40, 0x1b8, 0xa718, 0x0, 0x1);
        gbc.writeMem(0xc5bf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa9c5);
        EXPECT(gbc.pc(), 0xc5c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5bf), 0xcb);
        EXPECT(gbc.readMem(0xc5c0), 0x84);
        // CB 84 009F
        gbc.setState(0xd097, 0x1cdd, 0x8c80, 0xe084, 0x33df, 0xc5f5, 0x1, 0x1);
        gbc.writeMem(0xd097, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1cdd);
        EXPECT(gbc.pc(), 0xd099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd097), 0xcb);
        EXPECT(gbc.readMem(0xd098), 0x84);
        // CB 84 00A0
        gbc.setState(0x9179, 0xa61b, 0xe40, 0x68dc, 0x47a2, 0x5bde, 0x1, 0x1);
        gbc.writeMem(0x9179, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa61b);
        EXPECT(gbc.pc(), 0x917b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9179), 0xcb);
        EXPECT(gbc.readMem(0x917a), 0x84);
        // CB 84 00A1
        gbc.setState(0x2e7f, 0x7811, 0xb800, 0x9394, 0x3d89, 0xf2de, 0x0, 0x0);
        gbc.writeMem(0x2e7f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7811);
        EXPECT(gbc.pc(), 0x2e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00A3
        gbc.setState(0x1aa2, 0xb274, 0x33e0, 0xab2e, 0xc86, 0x8539, 0x1, 0x1);
        gbc.writeMem(0x1aa2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb274);
        EXPECT(gbc.pc(), 0x1aa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00A4
        gbc.setState(0x26ad, 0xa13e, 0xbee0, 0xddf7, 0xa50c, 0x469e, 0x1, 0x0);
        gbc.writeMem(0x26ad, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa13e);
        EXPECT(gbc.pc(), 0x26af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00A5
        gbc.setState(0x1010, 0xd3d1, 0xe0, 0xddcf, 0x6604, 0x84af, 0x0, 0x0);
        gbc.writeMem(0x1010, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd3d1);
        EXPECT(gbc.pc(), 0x1012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00A6
        gbc.setState(0xe991, 0x3543, 0x7da0, 0xc515, 0x626f, 0x534, 0x1, 0x0);
        gbc.writeMem(0xe991, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3543);
        EXPECT(gbc.pc(), 0xe993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe991), 0xcb);
        EXPECT(gbc.readMem(0xe992), 0x84);
        // CB 84 00A8
        gbc.setState(0xa743, 0x3f46, 0x48b0, 0x8e2d, 0x5efd, 0x73d1, 0x1, 0x0);
        gbc.writeMem(0xa743, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3f46);
        EXPECT(gbc.pc(), 0xa745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa743), 0xcb);
        EXPECT(gbc.readMem(0xa744), 0x84);
        // CB 84 00A9
        gbc.setState(0xb9e2, 0xb92d, 0x9cf0, 0x564d, 0x35f8, 0x6e2c, 0x1, 0x1);
        gbc.writeMem(0xb9e2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb92d);
        EXPECT(gbc.pc(), 0xb9e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9e2), 0xcb);
        EXPECT(gbc.readMem(0xb9e3), 0x84);
        // CB 84 00AA
        gbc.setState(0xea99, 0xbc86, 0x7ee0, 0x90b7, 0x8d8b, 0xc11, 0x0, 0x1);
        gbc.writeMem(0xea99, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbc86);
        EXPECT(gbc.pc(), 0xea9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea99), 0xcb);
        EXPECT(gbc.readMem(0xea9a), 0x84);
        // CB 84 00AB
        gbc.setState(0xb98c, 0x143a, 0xd1b0, 0x910, 0xd11a, 0xe612, 0x1, 0x0);
        gbc.writeMem(0xb98c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x143a);
        EXPECT(gbc.pc(), 0xb98e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98c), 0xcb);
        EXPECT(gbc.readMem(0xb98d), 0x84);
        // CB 84 00AC
        gbc.setState(0xb5f, 0x5101, 0x6bf0, 0x6ebc, 0x4d79, 0x54e, 0x1, 0x1);
        gbc.writeMem(0xb5f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5101);
        EXPECT(gbc.pc(), 0xb61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00AD
        gbc.setState(0x6003, 0xa90a, 0x2970, 0x3039, 0x4fb8, 0x10a7, 0x1, 0x0);
        gbc.writeMem(0x6003, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa90a);
        EXPECT(gbc.pc(), 0x6005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00AE
        gbc.setState(0xeceb, 0xdcb0, 0x2b40, 0x2c90, 0xcf6e, 0xaa2e, 0x0, 0x0);
        gbc.writeMem(0xeceb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdcb0);
        EXPECT(gbc.pc(), 0xeced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeceb), 0xcb);
        EXPECT(gbc.readMem(0xecec), 0x84);
        // CB 84 00AF
        gbc.setState(0x51e0, 0x4853, 0xd100, 0x8da1, 0x3a0b, 0x38e7, 0x0, 0x0);
        gbc.writeMem(0x51e0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4853);
        EXPECT(gbc.pc(), 0x51e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00B0
        gbc.setState(0x3239, 0xa60, 0xd700, 0x1d38, 0xb06a, 0x562d, 0x0, 0x0);
        gbc.writeMem(0x3239, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa60);
        EXPECT(gbc.pc(), 0x323b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00B1
        gbc.setState(0xa148, 0x75d1, 0xedf0, 0x9a35, 0xace8, 0xcc7e, 0x0, 0x1);
        gbc.writeMem(0xa148, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x75d1);
        EXPECT(gbc.pc(), 0xa14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa148), 0xcb);
        EXPECT(gbc.readMem(0xa149), 0x84);
        // CB 84 00B2
        gbc.setState(0xbf9d, 0xa7ab, 0xad0, 0x7f55, 0x57c7, 0x15de, 0x1, 0x0);
        gbc.writeMem(0xbf9d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa7ab);
        EXPECT(gbc.pc(), 0xbf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf9d), 0xcb);
        EXPECT(gbc.readMem(0xbf9e), 0x84);
        // CB 84 00B3
        gbc.setState(0x8d33, 0x6a85, 0x3950, 0x5827, 0x3d6f, 0x1389, 0x1, 0x0);
        gbc.writeMem(0x8d33, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6a85);
        EXPECT(gbc.pc(), 0x8d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d33), 0xcb);
        EXPECT(gbc.readMem(0x8d34), 0x84);
        // CB 84 00B4
        gbc.setState(0x63f8, 0x64c3, 0x2ec0, 0xcf85, 0x8ff4, 0xe1e, 0x0, 0x0);
        gbc.writeMem(0x63f8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x64c3);
        EXPECT(gbc.pc(), 0x63fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00B5
        gbc.setState(0xc2be, 0x450a, 0x2000, 0xb109, 0x6548, 0x6410, 0x0, 0x0);
        gbc.writeMem(0xc2be, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x450a);
        EXPECT(gbc.pc(), 0xc2c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2be), 0xcb);
        EXPECT(gbc.readMem(0xc2bf), 0x84);
        // CB 84 00B6
        gbc.setState(0x27e5, 0xbb10, 0x4040, 0x6f9e, 0xe799, 0x173b, 0x1, 0x0);
        gbc.writeMem(0x27e5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbb10);
        EXPECT(gbc.pc(), 0x27e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00B7
        gbc.setState(0x63c3, 0xf409, 0x3870, 0x990b, 0x402e, 0xe03c, 0x0, 0x0);
        gbc.writeMem(0x63c3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf409);
        EXPECT(gbc.pc(), 0x63c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00B8
        gbc.setState(0x5373, 0x16f6, 0xb860, 0x6df1, 0x3b0c, 0x43ed, 0x0, 0x0);
        gbc.writeMem(0x5373, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x16f6);
        EXPECT(gbc.pc(), 0x5375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00B9
        gbc.setState(0x8b69, 0xa8e9, 0xcf50, 0xbb38, 0x1f21, 0x4eb6, 0x1, 0x0);
        gbc.writeMem(0x8b69, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa8e9);
        EXPECT(gbc.pc(), 0x8b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b69), 0xcb);
        EXPECT(gbc.readMem(0x8b6a), 0x84);
        // CB 84 00BA
        gbc.setState(0x983b, 0x95b8, 0xa120, 0x3a4f, 0xbada, 0x80b9, 0x0, 0x0);
        gbc.writeMem(0x983b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x95b8);
        EXPECT(gbc.pc(), 0x983d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x983b), 0xcb);
        EXPECT(gbc.readMem(0x983c), 0x84);
        // CB 84 00BC
        gbc.setState(0xdf6c, 0x6f8d, 0xef20, 0x6205, 0x440c, 0xbbfd, 0x0, 0x1);
        gbc.writeMem(0xdf6c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6f8d);
        EXPECT(gbc.pc(), 0xdf6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf6c), 0xcb);
        EXPECT(gbc.readMem(0xdf6d), 0x84);
        // CB 84 00BD
        gbc.setState(0x433f, 0xeb7d, 0x9120, 0x6242, 0x2cf, 0xcd19, 0x1, 0x1);
        gbc.writeMem(0x433f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xeb7d);
        EXPECT(gbc.pc(), 0x4341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00BF
        gbc.setState(0x574a, 0x767d, 0xf930, 0x957a, 0x143c, 0x9253, 0x1, 0x0);
        gbc.writeMem(0x574a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x767d);
        EXPECT(gbc.pc(), 0x574c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00C0
        gbc.setState(0xac99, 0xe62f, 0xdb40, 0xb6a6, 0xe64b, 0x29e7, 0x1, 0x1);
        gbc.writeMem(0xac99, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe62f);
        EXPECT(gbc.pc(), 0xac9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac99), 0xcb);
        EXPECT(gbc.readMem(0xac9a), 0x84);
        // CB 84 00C2
        gbc.setState(0xd94d, 0x3f14, 0xeb50, 0x9d72, 0x7ba3, 0x5a51, 0x1, 0x0);
        gbc.writeMem(0xd94d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3f14);
        EXPECT(gbc.pc(), 0xd94f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd94d), 0xcb);
        EXPECT(gbc.readMem(0xd94e), 0x84);
        // CB 84 00C4
        gbc.setState(0xba26, 0x9558, 0x1620, 0x537d, 0x864b, 0x81e4, 0x1, 0x1);
        gbc.writeMem(0xba26, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9558);
        EXPECT(gbc.pc(), 0xba28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba26), 0xcb);
        EXPECT(gbc.readMem(0xba27), 0x84);
        // CB 84 00C5
        gbc.setState(0x5d31, 0xa2fe, 0x3860, 0x2167, 0xb173, 0x94a2, 0x1, 0x1);
        gbc.writeMem(0x5d31, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa2fe);
        EXPECT(gbc.pc(), 0x5d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00C6
        gbc.setState(0x9dc4, 0x3fac, 0xaf80, 0xcf9e, 0xd779, 0x770a, 0x1, 0x0);
        gbc.writeMem(0x9dc4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3fac);
        EXPECT(gbc.pc(), 0x9dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc4), 0xcb);
        EXPECT(gbc.readMem(0x9dc5), 0x84);
        // CB 84 00C7
        gbc.setState(0xb223, 0x4de7, 0xdb20, 0x5054, 0x2a4, 0x69f5, 0x1, 0x1);
        gbc.writeMem(0xb223, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4de7);
        EXPECT(gbc.pc(), 0xb225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb223), 0xcb);
        EXPECT(gbc.readMem(0xb224), 0x84);
        // CB 84 00C8
        gbc.setState(0x88b8, 0xf33, 0x2ea0, 0x4362, 0xbec, 0x992f, 0x1, 0x1);
        gbc.writeMem(0x88b8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf33);
        EXPECT(gbc.pc(), 0x88ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b8), 0xcb);
        EXPECT(gbc.readMem(0x88b9), 0x84);
        // CB 84 00C9
        gbc.setState(0x8df6, 0x245c, 0x19c0, 0x22e7, 0xce1a, 0x35b4, 0x1, 0x1);
        gbc.writeMem(0x8df6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x245c);
        EXPECT(gbc.pc(), 0x8df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df6), 0xcb);
        EXPECT(gbc.readMem(0x8df7), 0x84);
        // CB 84 00CA
        gbc.setState(0x4882, 0x67e, 0xa4f0, 0x6816, 0x76d7, 0xed38, 0x1, 0x1);
        gbc.writeMem(0x4882, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x67e);
        EXPECT(gbc.pc(), 0x4884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00CB
        gbc.setState(0xc7fb, 0xa97d, 0x2960, 0xdf0a, 0x6d4c, 0x3217, 0x1, 0x1);
        gbc.writeMem(0xc7fb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa97d);
        EXPECT(gbc.pc(), 0xc7fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7fb), 0xcb);
        EXPECT(gbc.readMem(0xc7fc), 0x84);
        // CB 84 00CC
        gbc.setState(0xcc31, 0xa4a4, 0xf180, 0xb144, 0x84f1, 0x6279, 0x1, 0x0);
        gbc.writeMem(0xcc31, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa4a4);
        EXPECT(gbc.pc(), 0xcc33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc31), 0xcb);
        EXPECT(gbc.readMem(0xcc32), 0x84);
        // CB 84 00CD
        gbc.setState(0x4f72, 0xc6a5, 0x76d0, 0xf8e1, 0x9390, 0xf08, 0x0, 0x1);
        gbc.writeMem(0x4f72, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc6a5);
        EXPECT(gbc.pc(), 0x4f74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00CF
        gbc.setState(0x2e3b, 0x15e4, 0x1ce0, 0xa8ae, 0xc95e, 0x1429, 0x1, 0x1);
        gbc.writeMem(0x2e3b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x15e4);
        EXPECT(gbc.pc(), 0x2e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00D0
        gbc.setState(0x51ad, 0xd9d0, 0x4c60, 0xcbb1, 0xdc1b, 0x27cc, 0x1, 0x0);
        gbc.writeMem(0x51ad, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd9d0);
        EXPECT(gbc.pc(), 0x51af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00D1
        gbc.setState(0x94dc, 0x6183, 0x19a0, 0x7a28, 0xfd37, 0x6454, 0x1, 0x1);
        gbc.writeMem(0x94dc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6183);
        EXPECT(gbc.pc(), 0x94de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94dc), 0xcb);
        EXPECT(gbc.readMem(0x94dd), 0x84);
        // CB 84 00D2
        gbc.setState(0x16d6, 0xfebf, 0x2f80, 0x5565, 0xc7f0, 0x9f3c, 0x1, 0x0);
        gbc.writeMem(0x16d6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xfebf);
        EXPECT(gbc.pc(), 0x16d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00D3
        gbc.setState(0x2531, 0x34de, 0x3d50, 0x87f6, 0xab, 0x5639, 0x0, 0x0);
        gbc.writeMem(0x2531, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x34de);
        EXPECT(gbc.pc(), 0x2533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00D5
        gbc.setState(0xc0f4, 0x3595, 0x9a0, 0x1b22, 0x846a, 0xdc03, 0x0, 0x0);
        gbc.writeMem(0xc0f4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3595);
        EXPECT(gbc.pc(), 0xc0f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0f4), 0xcb);
        EXPECT(gbc.readMem(0xc0f5), 0x84);
        // CB 84 00D7
        gbc.setState(0xedb2, 0xceb0, 0x7f40, 0xb2b6, 0x165a, 0x1491, 0x1, 0x0);
        gbc.writeMem(0xedb2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xceb0);
        EXPECT(gbc.pc(), 0xedb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb2), 0xcb);
        EXPECT(gbc.readMem(0xedb3), 0x84);
        // CB 84 00D8
        gbc.setState(0x4a43, 0xfdb, 0xd2d0, 0x59ed, 0xfc61, 0x5c5, 0x1, 0x1);
        gbc.writeMem(0x4a43, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfdb);
        EXPECT(gbc.pc(), 0x4a45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00D9
        gbc.setState(0x239d, 0x7ebc, 0x1cb0, 0xfeb8, 0x37a9, 0xa728, 0x1, 0x1);
        gbc.writeMem(0x239d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7ebc);
        EXPECT(gbc.pc(), 0x239f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00DA
        gbc.setState(0x4dc6, 0xb27, 0x5a40, 0xc98d, 0x62c2, 0x808e, 0x1, 0x0);
        gbc.writeMem(0x4dc6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb27);
        EXPECT(gbc.pc(), 0x4dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00DB
        gbc.setState(0xdddc, 0x4d3f, 0x3cc0, 0x590b, 0x8daf, 0xe6b3, 0x1, 0x1);
        gbc.writeMem(0xdddc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4d3f);
        EXPECT(gbc.pc(), 0xddde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdddc), 0xcb);
        EXPECT(gbc.readMem(0xdddd), 0x84);
        // CB 84 00DC
        gbc.setState(0x4c84, 0xb0c2, 0x2230, 0x47a7, 0x1977, 0xf97d, 0x1, 0x0);
        gbc.writeMem(0x4c84, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb0c2);
        EXPECT(gbc.pc(), 0x4c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00DD
        gbc.setState(0x8a48, 0x83a7, 0x7cd0, 0xa6c0, 0xa7d0, 0x3d97, 0x1, 0x0);
        gbc.writeMem(0x8a48, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x83a7);
        EXPECT(gbc.pc(), 0x8a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a48), 0xcb);
        EXPECT(gbc.readMem(0x8a49), 0x84);
        // CB 84 00DE
        gbc.setState(0x1b4c, 0x699e, 0x71f0, 0x1f10, 0x7b08, 0xd645, 0x0, 0x1);
        gbc.writeMem(0x1b4c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x699e);
        EXPECT(gbc.pc(), 0x1b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00DF
        gbc.setState(0x835, 0x9dbe, 0xcb10, 0xbd99, 0x328d, 0xb45d, 0x1, 0x1);
        gbc.writeMem(0x835, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9dbe);
        EXPECT(gbc.pc(), 0x837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00E0
        gbc.setState(0x5d45, 0x448b, 0x4380, 0x5af4, 0x922f, 0x3372, 0x1, 0x1);
        gbc.writeMem(0x5d45, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x448b);
        EXPECT(gbc.pc(), 0x5d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00E1
        gbc.setState(0x276a, 0x4eca, 0x7b30, 0x6fca, 0xd8d2, 0x2a35, 0x0, 0x0);
        gbc.writeMem(0x276a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4eca);
        EXPECT(gbc.pc(), 0x276c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00E2
        gbc.setState(0xb07e, 0x6a60, 0x26c0, 0xa0f7, 0xdd1c, 0xa612, 0x0, 0x0);
        gbc.writeMem(0xb07e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6a60);
        EXPECT(gbc.pc(), 0xb080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07e), 0xcb);
        EXPECT(gbc.readMem(0xb07f), 0x84);
        // CB 84 00E3
        gbc.setState(0x38e4, 0x5dd0, 0xbc70, 0xa7e7, 0x3387, 0x7ba, 0x1, 0x0);
        gbc.writeMem(0x38e4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5dd0);
        EXPECT(gbc.pc(), 0x38e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00E4
        gbc.setState(0x20fa, 0x72c0, 0xa4d0, 0xfd46, 0x449f, 0xdbc8, 0x0, 0x1);
        gbc.writeMem(0x20fa, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x72c0);
        EXPECT(gbc.pc(), 0x20fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00E5
        gbc.setState(0xa449, 0x71cc, 0xcec0, 0x10d, 0xfbf3, 0x8356, 0x1, 0x0);
        gbc.writeMem(0xa449, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x71cc);
        EXPECT(gbc.pc(), 0xa44b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa449), 0xcb);
        EXPECT(gbc.readMem(0xa44a), 0x84);
        // CB 84 00E6
        gbc.setState(0xa089, 0xf087, 0xb9c0, 0x1530, 0x9de0, 0xaf55, 0x0, 0x1);
        gbc.writeMem(0xa089, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf087);
        EXPECT(gbc.pc(), 0xa08b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa089), 0xcb);
        EXPECT(gbc.readMem(0xa08a), 0x84);
        // CB 84 00E7
        gbc.setState(0x9ba, 0x3db0, 0x9600, 0xeb97, 0xb788, 0x9c5d, 0x0, 0x1);
        gbc.writeMem(0x9ba, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3db0);
        EXPECT(gbc.pc(), 0x9bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00E8
        gbc.setState(0x3c6, 0xd2fe, 0xfa80, 0x81e8, 0x900c, 0xf504, 0x1, 0x1);
        gbc.writeMem(0x3c6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd2fe);
        EXPECT(gbc.pc(), 0x3c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00E9
        gbc.setState(0x199a, 0x3791, 0x8210, 0x8aec, 0xbe92, 0x1792, 0x0, 0x1);
        gbc.writeMem(0x199a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3791);
        EXPECT(gbc.pc(), 0x199c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00EA
        gbc.setState(0xe51, 0x12a, 0x5db0, 0x5aad, 0x1f9, 0xf296, 0x0, 0x1);
        gbc.writeMem(0xe51, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x12a);
        EXPECT(gbc.pc(), 0xe53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00EB
        gbc.setState(0xd4cf, 0xbeda, 0x21a0, 0x919f, 0x1a4c, 0xf040, 0x1, 0x0);
        gbc.writeMem(0xd4cf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbeda);
        EXPECT(gbc.pc(), 0xd4d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4cf), 0xcb);
        EXPECT(gbc.readMem(0xd4d0), 0x84);
        // CB 84 00EC
        gbc.setState(0x7281, 0x29c6, 0x8580, 0xe99, 0x780e, 0xf708, 0x0, 0x1);
        gbc.writeMem(0x7281, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x29c6);
        EXPECT(gbc.pc(), 0x7283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00ED
        gbc.setState(0x3a4b, 0x4301, 0xa620, 0x967d, 0x996, 0x39dc, 0x1, 0x0);
        gbc.writeMem(0x3a4b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4301);
        EXPECT(gbc.pc(), 0x3a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00EE
        gbc.setState(0xee7, 0xd971, 0x1350, 0x79d8, 0x5a90, 0x3baf, 0x0, 0x1);
        gbc.writeMem(0xee7, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd971);
        EXPECT(gbc.pc(), 0xee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00EF
        gbc.setState(0xd87a, 0x48e1, 0xa7c0, 0x25f, 0x8c84, 0x8aca, 0x1, 0x0);
        gbc.writeMem(0xd87a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x48e1);
        EXPECT(gbc.pc(), 0xd87c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd87a), 0xcb);
        EXPECT(gbc.readMem(0xd87b), 0x84);
        // CB 84 00F1
        gbc.setState(0x3e1b, 0xb4f5, 0x2d40, 0x83fa, 0x61bb, 0xfae, 0x1, 0x0);
        gbc.writeMem(0x3e1b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb4f5);
        EXPECT(gbc.pc(), 0x3e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00F3
        gbc.setState(0x7ae0, 0xa94f, 0x2340, 0xc5b0, 0xad68, 0xc839, 0x1, 0x0);
        gbc.writeMem(0x7ae0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa94f);
        EXPECT(gbc.pc(), 0x7ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00F4
        gbc.setState(0x89a, 0x9326, 0xf590, 0xed33, 0x695e, 0xddfb, 0x0, 0x0);
        gbc.writeMem(0x89a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9326);
        EXPECT(gbc.pc(), 0x89c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00F5
        gbc.setState(0xa51e, 0x60dd, 0x2140, 0x4a47, 0x80d, 0x5b29, 0x1, 0x0);
        gbc.writeMem(0xa51e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x60dd);
        EXPECT(gbc.pc(), 0xa520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51e), 0xcb);
        EXPECT(gbc.readMem(0xa51f), 0x84);
        // CB 84 00F6
        gbc.setState(0x35e2, 0x545d, 0x9cb0, 0xbacf, 0x33e7, 0x7024, 0x0, 0x1);
        gbc.writeMem(0x35e2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x545d);
        EXPECT(gbc.pc(), 0x35e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00F7
        gbc.setState(0x90cc, 0x76e3, 0xa980, 0x4618, 0x7c93, 0xb725, 0x1, 0x1);
        gbc.writeMem(0x90cc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x76e3);
        EXPECT(gbc.pc(), 0x90ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90cc), 0xcb);
        EXPECT(gbc.readMem(0x90cd), 0x84);
        // CB 84 00F8
        gbc.setState(0xad9f, 0xb495, 0xe2d0, 0x331f, 0x27cf, 0x65ce, 0x1, 0x1);
        gbc.writeMem(0xad9f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb495);
        EXPECT(gbc.pc(), 0xada1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad9f), 0xcb);
        EXPECT(gbc.readMem(0xada0), 0x84);
        // CB 84 00F9
        gbc.setState(0x7c0f, 0x308f, 0x58b0, 0x565b, 0x6e35, 0xd79e, 0x0, 0x0);
        gbc.writeMem(0x7c0f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x308f);
        EXPECT(gbc.pc(), 0x7c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00FA
        gbc.setState(0x8161, 0x66aa, 0xadb0, 0xc41b, 0x18d0, 0xfe78, 0x0, 0x1);
        gbc.writeMem(0x8161, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x66aa);
        EXPECT(gbc.pc(), 0x8163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8161), 0xcb);
        EXPECT(gbc.readMem(0x8162), 0x84);
        // CB 84 00FB
        gbc.setState(0xa01, 0x642f, 0x7f40, 0x6304, 0x453a, 0xbaf7, 0x1, 0x1);
        gbc.writeMem(0xa01, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x642f);
        EXPECT(gbc.pc(), 0xa03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00FC
        gbc.setState(0x5323, 0x3857, 0xfaa0, 0x1831, 0xe54e, 0xa883, 0x1, 0x0);
        gbc.writeMem(0x5323, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3857);
        EXPECT(gbc.pc(), 0x5325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00FD
        gbc.setState(0x34c, 0x1d74, 0xa9f0, 0x5ce4, 0xb82f, 0xf3a5, 0x1, 0x1);
        gbc.writeMem(0x34c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1d74);
        EXPECT(gbc.pc(), 0x34e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 00FE
        gbc.setState(0x5d76, 0x2b7c, 0xdda0, 0x18c, 0x3505, 0xb438, 0x0, 0x0);
        gbc.writeMem(0x5d76, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2b7c);
        EXPECT(gbc.pc(), 0x5d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 00FF
        gbc.setState(0x8b37, 0x582c, 0x4ee0, 0x1603, 0xd42e, 0x9d, 0x1, 0x0);
        gbc.writeMem(0x8b37, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x582c);
        EXPECT(gbc.pc(), 0x8b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b37), 0xcb);
        EXPECT(gbc.readMem(0x8b38), 0x84);
        // CB 84 0100
        gbc.setState(0x1675, 0xab3f, 0x74a0, 0xab4a, 0xf36a, 0x8551, 0x0, 0x1);
        gbc.writeMem(0x1675, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xab3f);
        EXPECT(gbc.pc(), 0x1677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0102
        gbc.setState(0x8d19, 0x8ab2, 0x6230, 0x8fbc, 0x6a1a, 0x70f0, 0x0, 0x1);
        gbc.writeMem(0x8d19, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8ab2);
        EXPECT(gbc.pc(), 0x8d1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d19), 0xcb);
        EXPECT(gbc.readMem(0x8d1a), 0x84);
        // CB 84 0103
        gbc.setState(0x2afb, 0xda47, 0x84a0, 0x874b, 0x10c5, 0x9c4f, 0x1, 0x1);
        gbc.writeMem(0x2afb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xda47);
        EXPECT(gbc.pc(), 0x2afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0104
        gbc.setState(0x43ce, 0x7598, 0xe1b0, 0x7c36, 0x9d69, 0x5047, 0x1, 0x1);
        gbc.writeMem(0x43ce, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7598);
        EXPECT(gbc.pc(), 0x43d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0105
        gbc.setState(0x3fa, 0xe5ba, 0x9090, 0x14de, 0xbe7c, 0x7294, 0x0, 0x0);
        gbc.writeMem(0x3fa, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe5ba);
        EXPECT(gbc.pc(), 0x3fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0106
        gbc.setState(0x462c, 0x4b57, 0xc080, 0xed36, 0x64f9, 0x1407, 0x0, 0x0);
        gbc.writeMem(0x462c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4b57);
        EXPECT(gbc.pc(), 0x462e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0107
        gbc.setState(0xe2fd, 0x9181, 0x8e00, 0xdb1e, 0xdf09, 0x2bbe, 0x1, 0x1);
        gbc.writeMem(0xe2fd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9181);
        EXPECT(gbc.pc(), 0xe2ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2fd), 0xcb);
        EXPECT(gbc.readMem(0xe2fe), 0x84);
        // CB 84 0108
        gbc.setState(0x1a29, 0x5df3, 0x50d0, 0xeaea, 0xd8da, 0x214d, 0x0, 0x1);
        gbc.writeMem(0x1a29, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5df3);
        EXPECT(gbc.pc(), 0x1a2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0109
        gbc.setState(0x689e, 0x97e2, 0x7df0, 0x1fd8, 0xed12, 0x5c84, 0x1, 0x1);
        gbc.writeMem(0x689e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x97e2);
        EXPECT(gbc.pc(), 0x68a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 010A
        gbc.setState(0x894c, 0xe57e, 0xcb20, 0xefbe, 0x33da, 0x2110, 0x1, 0x1);
        gbc.writeMem(0x894c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe57e);
        EXPECT(gbc.pc(), 0x894e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x894c), 0xcb);
        EXPECT(gbc.readMem(0x894d), 0x84);
        // CB 84 010C
        gbc.setState(0xbb2c, 0x34d9, 0x90c0, 0xb422, 0x8f91, 0xc99c, 0x0, 0x1);
        gbc.writeMem(0xbb2c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x34d9);
        EXPECT(gbc.pc(), 0xbb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2c), 0xcb);
        EXPECT(gbc.readMem(0xbb2d), 0x84);
        // CB 84 010D
        gbc.setState(0xd017, 0xa04, 0xb940, 0xa9ac, 0x32ad, 0x6fc7, 0x1, 0x1);
        gbc.writeMem(0xd017, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa04);
        EXPECT(gbc.pc(), 0xd019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd017), 0xcb);
        EXPECT(gbc.readMem(0xd018), 0x84);
        // CB 84 010E
        gbc.setState(0xba67, 0x435c, 0xf620, 0x8595, 0xc723, 0x916e, 0x0, 0x1);
        gbc.writeMem(0xba67, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x435c);
        EXPECT(gbc.pc(), 0xba69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba67), 0xcb);
        EXPECT(gbc.readMem(0xba68), 0x84);
        // CB 84 010F
        gbc.setState(0xb6f2, 0x1993, 0x7d50, 0xf4a9, 0x5a53, 0xd094, 0x0, 0x0);
        gbc.writeMem(0xb6f2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1993);
        EXPECT(gbc.pc(), 0xb6f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f2), 0xcb);
        EXPECT(gbc.readMem(0xb6f3), 0x84);
        // CB 84 0110
        gbc.setState(0xb389, 0x87f1, 0x8f60, 0xc311, 0x7be9, 0x3604, 0x1, 0x1);
        gbc.writeMem(0xb389, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x87f1);
        EXPECT(gbc.pc(), 0xb38b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb389), 0xcb);
        EXPECT(gbc.readMem(0xb38a), 0x84);
        // CB 84 0111
        gbc.setState(0xa19d, 0x19d9, 0x30c0, 0x15b2, 0x1309, 0xafea, 0x0, 0x0);
        gbc.writeMem(0xa19d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x19d9);
        EXPECT(gbc.pc(), 0xa19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19d), 0xcb);
        EXPECT(gbc.readMem(0xa19e), 0x84);
        // CB 84 0112
        gbc.setState(0x6a93, 0xffdc, 0x2fc0, 0x5eb, 0x1e80, 0xc579, 0x0, 0x0);
        gbc.writeMem(0x6a93, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xffdc);
        EXPECT(gbc.pc(), 0x6a95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0113
        gbc.setState(0x3ed3, 0xfa6a, 0x16e0, 0x681d, 0xdf45, 0x2089, 0x1, 0x1);
        gbc.writeMem(0x3ed3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfa6a);
        EXPECT(gbc.pc(), 0x3ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0114
        gbc.setState(0x77c0, 0xb869, 0x1c80, 0x2a1f, 0xe9a5, 0x74e1, 0x0, 0x1);
        gbc.writeMem(0x77c0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb869);
        EXPECT(gbc.pc(), 0x77c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0115
        gbc.setState(0xbf0d, 0xc5ff, 0xaec0, 0xdbf2, 0x7b3, 0x7b7f, 0x1, 0x1);
        gbc.writeMem(0xbf0d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc5ff);
        EXPECT(gbc.pc(), 0xbf0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf0d), 0xcb);
        EXPECT(gbc.readMem(0xbf0e), 0x84);
        // CB 84 0116
        gbc.setState(0x89d3, 0x545b, 0x180, 0x233f, 0xa109, 0x2792, 0x1, 0x1);
        gbc.writeMem(0x89d3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x545b);
        EXPECT(gbc.pc(), 0x89d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d3), 0xcb);
        EXPECT(gbc.readMem(0x89d4), 0x84);
        // CB 84 0117
        gbc.setState(0x532b, 0x9a0, 0x64d0, 0xb47f, 0xa004, 0xa474, 0x1, 0x0);
        gbc.writeMem(0x532b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9a0);
        EXPECT(gbc.pc(), 0x532d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0118
        gbc.setState(0x7515, 0x3e43, 0x28b0, 0x6845, 0xd452, 0xbc97, 0x0, 0x0);
        gbc.writeMem(0x7515, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3e43);
        EXPECT(gbc.pc(), 0x7517);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0119
        gbc.setState(0x2da5, 0xcb38, 0x8ae0, 0x8392, 0xca71, 0xf202, 0x0, 0x0);
        gbc.writeMem(0x2da5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcb38);
        EXPECT(gbc.pc(), 0x2da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 011A
        gbc.setState(0xc358, 0x20fb, 0x16b0, 0xdd8a, 0x4bc3, 0x22c1, 0x1, 0x0);
        gbc.writeMem(0xc358, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x20fb);
        EXPECT(gbc.pc(), 0xc35a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc358), 0xcb);
        EXPECT(gbc.readMem(0xc359), 0x84);
        // CB 84 011B
        gbc.setState(0xd773, 0xec64, 0x80a0, 0xf817, 0xcaf3, 0x59eb, 0x0, 0x1);
        gbc.writeMem(0xd773, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xec64);
        EXPECT(gbc.pc(), 0xd775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd773), 0xcb);
        EXPECT(gbc.readMem(0xd774), 0x84);
        // CB 84 011C
        gbc.setState(0x51ad, 0xe0e6, 0x9ed0, 0x151f, 0xd29d, 0x3a38, 0x1, 0x1);
        gbc.writeMem(0x51ad, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe0e6);
        EXPECT(gbc.pc(), 0x51af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 011D
        gbc.setState(0x237, 0xab87, 0x5b10, 0xe3d8, 0xfa03, 0x5178, 0x1, 0x1);
        gbc.writeMem(0x237, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xab87);
        EXPECT(gbc.pc(), 0x239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 011E
        gbc.setState(0x437, 0x64e9, 0x6b00, 0x5d6a, 0x3851, 0x2414, 0x0, 0x0);
        gbc.writeMem(0x437, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x64e9);
        EXPECT(gbc.pc(), 0x439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0121
        gbc.setState(0x9b1f, 0x8508, 0xa350, 0x289c, 0x7bcb, 0x177f, 0x1, 0x0);
        gbc.writeMem(0x9b1f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8508);
        EXPECT(gbc.pc(), 0x9b21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1f), 0xcb);
        EXPECT(gbc.readMem(0x9b20), 0x84);
        // CB 84 0122
        gbc.setState(0xccbe, 0x6249, 0x2bc0, 0x848, 0xc2fa, 0x3bc9, 0x0, 0x1);
        gbc.writeMem(0xccbe, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6249);
        EXPECT(gbc.pc(), 0xccc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccbe), 0xcb);
        EXPECT(gbc.readMem(0xccbf), 0x84);
        // CB 84 0123
        gbc.setState(0xd8b4, 0x36b6, 0x9270, 0xd9ed, 0x7857, 0x2427, 0x1, 0x1);
        gbc.writeMem(0xd8b4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x36b6);
        EXPECT(gbc.pc(), 0xd8b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8b4), 0xcb);
        EXPECT(gbc.readMem(0xd8b5), 0x84);
        // CB 84 0124
        gbc.setState(0xeb38, 0x1ee2, 0x1a20, 0xf3fa, 0xe982, 0x56e1, 0x1, 0x0);
        gbc.writeMem(0xeb38, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1ee2);
        EXPECT(gbc.pc(), 0xeb3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb38), 0xcb);
        EXPECT(gbc.readMem(0xeb39), 0x84);
        // CB 84 0125
        gbc.setState(0x62e0, 0x247f, 0xf670, 0x99f6, 0xcc2e, 0xd7d7, 0x0, 0x0);
        gbc.writeMem(0x62e0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x247f);
        EXPECT(gbc.pc(), 0x62e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0126
        gbc.setState(0x920f, 0x829a, 0x560, 0x3ddf, 0xc15d, 0x8d3e, 0x0, 0x0);
        gbc.writeMem(0x920f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x829a);
        EXPECT(gbc.pc(), 0x9211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x920f), 0xcb);
        EXPECT(gbc.readMem(0x9210), 0x84);
        // CB 84 0127
        gbc.setState(0xdcb5, 0xd8ca, 0x3880, 0x8cfb, 0xc219, 0x97d6, 0x1, 0x0);
        gbc.writeMem(0xdcb5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd8ca);
        EXPECT(gbc.pc(), 0xdcb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb5), 0xcb);
        EXPECT(gbc.readMem(0xdcb6), 0x84);
        // CB 84 0128
        gbc.setState(0x11cf, 0xbe26, 0xc50, 0xf4ea, 0x7782, 0xa322, 0x0, 0x1);
        gbc.writeMem(0x11cf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbe26);
        EXPECT(gbc.pc(), 0x11d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0129
        gbc.setState(0x213, 0x751c, 0x2ed0, 0x2b17, 0x5a6b, 0xa526, 0x0, 0x0);
        gbc.writeMem(0x213, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x751c);
        EXPECT(gbc.pc(), 0x215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 012A
        gbc.setState(0x8815, 0x64ff, 0x9060, 0x67b7, 0xe416, 0xd49a, 0x0, 0x1);
        gbc.writeMem(0x8815, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x64ff);
        EXPECT(gbc.pc(), 0x8817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8815), 0xcb);
        EXPECT(gbc.readMem(0x8816), 0x84);
        // CB 84 012B
        gbc.setState(0x4530, 0x986f, 0x96b0, 0xdd1f, 0x460, 0x6cf9, 0x0, 0x0);
        gbc.writeMem(0x4530, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x986f);
        EXPECT(gbc.pc(), 0x4532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 012C
        gbc.setState(0x45bf, 0xc48a, 0x4bd0, 0xa2c5, 0x5863, 0xe5c1, 0x0, 0x1);
        gbc.writeMem(0x45bf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc48a);
        EXPECT(gbc.pc(), 0x45c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 012D
        gbc.setState(0x1ba1, 0xd2eb, 0xa440, 0x69b9, 0x9354, 0x156e, 0x1, 0x1);
        gbc.writeMem(0x1ba1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd2eb);
        EXPECT(gbc.pc(), 0x1ba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 012E
        gbc.setState(0x4a37, 0x572f, 0x47e0, 0x7927, 0x5e77, 0x5c16, 0x1, 0x0);
        gbc.writeMem(0x4a37, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x572f);
        EXPECT(gbc.pc(), 0x4a39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 012F
        gbc.setState(0x4d3a, 0x3431, 0x9c90, 0xa61b, 0xd2b5, 0xd5c2, 0x0, 0x0);
        gbc.writeMem(0x4d3a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3431);
        EXPECT(gbc.pc(), 0x4d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0131
        gbc.setState(0x9768, 0x88ea, 0x9070, 0xb1ca, 0xd562, 0x1719, 0x0, 0x0);
        gbc.writeMem(0x9768, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x88ea);
        EXPECT(gbc.pc(), 0x976a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9768), 0xcb);
        EXPECT(gbc.readMem(0x9769), 0x84);
        // CB 84 0132
        gbc.setState(0x7d51, 0x48ff, 0xf6f0, 0x8047, 0x8513, 0x6259, 0x1, 0x0);
        gbc.writeMem(0x7d51, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x48ff);
        EXPECT(gbc.pc(), 0x7d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0133
        gbc.setState(0xbc82, 0x8c8e, 0xa200, 0x4191, 0x958b, 0xf0a7, 0x0, 0x0);
        gbc.writeMem(0xbc82, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8c8e);
        EXPECT(gbc.pc(), 0xbc84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc82), 0xcb);
        EXPECT(gbc.readMem(0xbc83), 0x84);
        // CB 84 0134
        gbc.setState(0x8820, 0x1456, 0xf580, 0xdc5a, 0xaa50, 0x3f11, 0x0, 0x1);
        gbc.writeMem(0x8820, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1456);
        EXPECT(gbc.pc(), 0x8822);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8820), 0xcb);
        EXPECT(gbc.readMem(0x8821), 0x84);
        // CB 84 0135
        gbc.setState(0x2746, 0x7517, 0x9e00, 0x754f, 0x469a, 0x7f84, 0x0, 0x1);
        gbc.writeMem(0x2746, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7517);
        EXPECT(gbc.pc(), 0x2748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0136
        gbc.setState(0x9e79, 0xf55b, 0x6f0, 0xc5de, 0x1a5e, 0x5616, 0x1, 0x0);
        gbc.writeMem(0x9e79, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf55b);
        EXPECT(gbc.pc(), 0x9e7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e79), 0xcb);
        EXPECT(gbc.readMem(0x9e7a), 0x84);
        // CB 84 0137
        gbc.setState(0x6f74, 0xbeb6, 0x6b30, 0xc30e, 0xcb39, 0xfa06, 0x0, 0x1);
        gbc.writeMem(0x6f74, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xbeb6);
        EXPECT(gbc.pc(), 0x6f76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0138
        gbc.setState(0xebd5, 0x691c, 0x8ee0, 0xf40e, 0xa567, 0x6e1d, 0x0, 0x0);
        gbc.writeMem(0xebd5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x691c);
        EXPECT(gbc.pc(), 0xebd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd5), 0xcb);
        EXPECT(gbc.readMem(0xebd6), 0x84);
        // CB 84 0139
        gbc.setState(0xa26c, 0x1de8, 0x5e0, 0x7ecf, 0xb91, 0x528f, 0x0, 0x1);
        gbc.writeMem(0xa26c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1de8);
        EXPECT(gbc.pc(), 0xa26e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa26c), 0xcb);
        EXPECT(gbc.readMem(0xa26d), 0x84);
        // CB 84 013C
        gbc.setState(0x4186, 0x9939, 0xdae0, 0xf1f9, 0xdca5, 0x27e5, 0x0, 0x1);
        gbc.writeMem(0x4186, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9939);
        EXPECT(gbc.pc(), 0x4188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 013D
        gbc.setState(0x88a6, 0x6fcd, 0x3c40, 0x3e23, 0xcbd9, 0x25c4, 0x0, 0x0);
        gbc.writeMem(0x88a6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6fcd);
        EXPECT(gbc.pc(), 0x88a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a6), 0xcb);
        EXPECT(gbc.readMem(0x88a7), 0x84);
        // CB 84 013E
        gbc.setState(0xd00c, 0x2d82, 0xd840, 0x960b, 0xd798, 0x51e, 0x0, 0x0);
        gbc.writeMem(0xd00c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2d82);
        EXPECT(gbc.pc(), 0xd00e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00c), 0xcb);
        EXPECT(gbc.readMem(0xd00d), 0x84);
        // CB 84 013F
        gbc.setState(0x362f, 0xef46, 0xb3c0, 0xd307, 0x3f47, 0x9eec, 0x1, 0x1);
        gbc.writeMem(0x362f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xef46);
        EXPECT(gbc.pc(), 0x3631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0140
        gbc.setState(0x4a63, 0x9a4f, 0xce90, 0xbb69, 0x630d, 0x5cc1, 0x1, 0x0);
        gbc.writeMem(0x4a63, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9a4f);
        EXPECT(gbc.pc(), 0x4a65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0141
        gbc.setState(0xa993, 0x467c, 0x2460, 0x6914, 0x4078, 0x44ed, 0x0, 0x1);
        gbc.writeMem(0xa993, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x467c);
        EXPECT(gbc.pc(), 0xa995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa993), 0xcb);
        EXPECT(gbc.readMem(0xa994), 0x84);
        // CB 84 0142
        gbc.setState(0xd817, 0xd25d, 0xa7e0, 0xcfff, 0xf6d2, 0x7c85, 0x0, 0x0);
        gbc.writeMem(0xd817, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd25d);
        EXPECT(gbc.pc(), 0xd819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd817), 0xcb);
        EXPECT(gbc.readMem(0xd818), 0x84);
        // CB 84 0143
        gbc.setState(0x310, 0x39b4, 0xf6f0, 0xbe0b, 0xca23, 0xf0e4, 0x0, 0x0);
        gbc.writeMem(0x310, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x39b4);
        EXPECT(gbc.pc(), 0x312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0144
        gbc.setState(0x73b2, 0x127, 0x30d0, 0x6ac7, 0x4b09, 0xe09, 0x0, 0x0);
        gbc.writeMem(0x73b2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x127);
        EXPECT(gbc.pc(), 0x73b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0145
        gbc.setState(0x767c, 0x7714, 0xba20, 0x7840, 0xf7a4, 0xbce6, 0x0, 0x1);
        gbc.writeMem(0x767c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7714);
        EXPECT(gbc.pc(), 0x767e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0146
        gbc.setState(0x2807, 0xbd2f, 0xe7a0, 0x9b14, 0x8377, 0xff6, 0x0, 0x1);
        gbc.writeMem(0x2807, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xbd2f);
        EXPECT(gbc.pc(), 0x2809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0147
        gbc.setState(0x5f44, 0xe38a, 0x6a50, 0x6be, 0xc0d5, 0xe7c2, 0x1, 0x0);
        gbc.writeMem(0x5f44, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe38a);
        EXPECT(gbc.pc(), 0x5f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0148
        gbc.setState(0xf7f, 0x13d8, 0x4360, 0x386a, 0x7f7a, 0xa69a, 0x0, 0x1);
        gbc.writeMem(0xf7f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x13d8);
        EXPECT(gbc.pc(), 0xf81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0149
        gbc.setState(0xad40, 0xc92, 0xb930, 0x3fab, 0xab60, 0x7ca6, 0x0, 0x0);
        gbc.writeMem(0xad40, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc92);
        EXPECT(gbc.pc(), 0xad42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad40), 0xcb);
        EXPECT(gbc.readMem(0xad41), 0x84);
        // CB 84 014A
        gbc.setState(0x5fbd, 0x2957, 0x4220, 0xf648, 0x1885, 0x794b, 0x1, 0x0);
        gbc.writeMem(0x5fbd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2957);
        EXPECT(gbc.pc(), 0x5fbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 014B
        gbc.setState(0x5d90, 0xbef6, 0xf2a0, 0x559a, 0x7277, 0xa568, 0x1, 0x0);
        gbc.writeMem(0x5d90, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbef6);
        EXPECT(gbc.pc(), 0x5d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 014C
        gbc.setState(0xab2e, 0x19b, 0x5d10, 0x8a72, 0x4d55, 0x3c2f, 0x0, 0x1);
        gbc.writeMem(0xab2e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x19b);
        EXPECT(gbc.pc(), 0xab30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab2e), 0xcb);
        EXPECT(gbc.readMem(0xab2f), 0x84);
        // CB 84 014D
        gbc.setState(0x882f, 0x5e95, 0x5ef0, 0x215c, 0x97c9, 0xd4fa, 0x0, 0x0);
        gbc.writeMem(0x882f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5e95);
        EXPECT(gbc.pc(), 0x8831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x882f), 0xcb);
        EXPECT(gbc.readMem(0x8830), 0x84);
        // CB 84 014E
        gbc.setState(0x5ec9, 0xf5a, 0x1e0, 0x1e96, 0x45c2, 0xfc45, 0x0, 0x0);
        gbc.writeMem(0x5ec9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf5a);
        EXPECT(gbc.pc(), 0x5ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 014F
        gbc.setState(0x14cb, 0x774, 0xe860, 0x4c21, 0xee4f, 0x7444, 0x1, 0x0);
        gbc.writeMem(0x14cb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x774);
        EXPECT(gbc.pc(), 0x14cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0150
        gbc.setState(0xa34c, 0xb73a, 0xeb20, 0x3836, 0x56f1, 0x16dd, 0x0, 0x0);
        gbc.writeMem(0xa34c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb73a);
        EXPECT(gbc.pc(), 0xa34e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa34c), 0xcb);
        EXPECT(gbc.readMem(0xa34d), 0x84);
        // CB 84 0151
        gbc.setState(0x5b0e, 0x4d03, 0x4570, 0x7184, 0xe6c4, 0xf69b, 0x0, 0x1);
        gbc.writeMem(0x5b0e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4d03);
        EXPECT(gbc.pc(), 0x5b10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0152
        gbc.setState(0x99cf, 0xf98a, 0xbf20, 0xad88, 0xec59, 0x69a1, 0x1, 0x0);
        gbc.writeMem(0x99cf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf98a);
        EXPECT(gbc.pc(), 0x99d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99cf), 0xcb);
        EXPECT(gbc.readMem(0x99d0), 0x84);
        // CB 84 0153
        gbc.setState(0xb741, 0x19b9, 0x6d30, 0xb289, 0xce1c, 0xaf9b, 0x1, 0x1);
        gbc.writeMem(0xb741, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x19b9);
        EXPECT(gbc.pc(), 0xb743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb741), 0xcb);
        EXPECT(gbc.readMem(0xb742), 0x84);
        // CB 84 0154
        gbc.setState(0xd887, 0xe156, 0xa650, 0xd681, 0xc61e, 0xf385, 0x1, 0x0);
        gbc.writeMem(0xd887, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe156);
        EXPECT(gbc.pc(), 0xd889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd887), 0xcb);
        EXPECT(gbc.readMem(0xd888), 0x84);
        // CB 84 0155
        gbc.setState(0xc02c, 0x527b, 0xb640, 0x83f8, 0x4fc6, 0x2909, 0x1, 0x0);
        gbc.writeMem(0xc02c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x527b);
        EXPECT(gbc.pc(), 0xc02e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02c), 0xcb);
        EXPECT(gbc.readMem(0xc02d), 0x84);
        // CB 84 0156
        gbc.setState(0x8955, 0xa80b, 0xbee0, 0x260c, 0x6ce2, 0xf16d, 0x0, 0x0);
        gbc.writeMem(0x8955, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa80b);
        EXPECT(gbc.pc(), 0x8957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8955), 0xcb);
        EXPECT(gbc.readMem(0x8956), 0x84);
        // CB 84 0157
        gbc.setState(0xc406, 0xb397, 0xc5b0, 0xc6e5, 0x43a7, 0x142e, 0x1, 0x0);
        gbc.writeMem(0xc406, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb397);
        EXPECT(gbc.pc(), 0xc408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc406), 0xcb);
        EXPECT(gbc.readMem(0xc407), 0x84);
        // CB 84 0158
        gbc.setState(0xcbb7, 0x7525, 0xcfc0, 0xad07, 0xfe96, 0x45df, 0x1, 0x1);
        gbc.writeMem(0xcbb7, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7525);
        EXPECT(gbc.pc(), 0xcbb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb7), 0xcb);
        EXPECT(gbc.readMem(0xcbb8), 0x84);
        // CB 84 0159
        gbc.setState(0xc92a, 0x66b8, 0x3880, 0xf449, 0xce13, 0x4de2, 0x0, 0x0);
        gbc.writeMem(0xc92a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x66b8);
        EXPECT(gbc.pc(), 0xc92c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc92a), 0xcb);
        EXPECT(gbc.readMem(0xc92b), 0x84);
        // CB 84 015A
        gbc.setState(0x82ad, 0x9dc1, 0xaa00, 0x48b7, 0x6382, 0xc015, 0x0, 0x1);
        gbc.writeMem(0x82ad, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9dc1);
        EXPECT(gbc.pc(), 0x82af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ad), 0xcb);
        EXPECT(gbc.readMem(0x82ae), 0x84);
        // CB 84 015B
        gbc.setState(0x4edc, 0xca44, 0x9520, 0x33d9, 0x807, 0xffa0, 0x0, 0x0);
        gbc.writeMem(0x4edc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xca44);
        EXPECT(gbc.pc(), 0x4ede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 015C
        gbc.setState(0x3ee8, 0xdaf6, 0x81d0, 0xf0cb, 0xc933, 0xec0c, 0x0, 0x1);
        gbc.writeMem(0x3ee8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xdaf6);
        EXPECT(gbc.pc(), 0x3eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 015D
        gbc.setState(0x3d18, 0x7d64, 0xfa50, 0x9e54, 0x6517, 0xd2f5, 0x0, 0x1);
        gbc.writeMem(0x3d18, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7d64);
        EXPECT(gbc.pc(), 0x3d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 015E
        gbc.setState(0x3186, 0xdafd, 0x9610, 0xc78e, 0x348b, 0x3550, 0x0, 0x1);
        gbc.writeMem(0x3186, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xdafd);
        EXPECT(gbc.pc(), 0x3188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 015F
        gbc.setState(0xd3c6, 0x12e, 0xeb0, 0xc739, 0x6849, 0x88cf, 0x1, 0x0);
        gbc.writeMem(0xd3c6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x12e);
        EXPECT(gbc.pc(), 0xd3c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c6), 0xcb);
        EXPECT(gbc.readMem(0xd3c7), 0x84);
        // CB 84 0160
        gbc.setState(0xa8e5, 0x22f, 0xc620, 0xe6a5, 0xd224, 0xd6b0, 0x1, 0x1);
        gbc.writeMem(0xa8e5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x22f);
        EXPECT(gbc.pc(), 0xa8e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e5), 0xcb);
        EXPECT(gbc.readMem(0xa8e6), 0x84);
        // CB 84 0161
        gbc.setState(0x1c13, 0x479e, 0x7520, 0x3e13, 0x7a50, 0xcc25, 0x0, 0x0);
        gbc.writeMem(0x1c13, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x479e);
        EXPECT(gbc.pc(), 0x1c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0162
        gbc.setState(0x39c0, 0xf4a8, 0x44e0, 0x569d, 0xb189, 0x404, 0x1, 0x0);
        gbc.writeMem(0x39c0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf4a8);
        EXPECT(gbc.pc(), 0x39c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0163
        gbc.setState(0xfed, 0x924f, 0x41e0, 0x72cb, 0xd9cc, 0xdc43, 0x0, 0x0);
        gbc.writeMem(0xfed, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x924f);
        EXPECT(gbc.pc(), 0xfef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0164
        gbc.setState(0xbd9f, 0xa63, 0xe480, 0xb916, 0x1ed5, 0x37b4, 0x0, 0x1);
        gbc.writeMem(0xbd9f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa63);
        EXPECT(gbc.pc(), 0xbda1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd9f), 0xcb);
        EXPECT(gbc.readMem(0xbda0), 0x84);
        // CB 84 0165
        gbc.setState(0x8fb3, 0x18ee, 0x69d0, 0x36d0, 0x893f, 0x8d36, 0x0, 0x0);
        gbc.writeMem(0x8fb3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x18ee);
        EXPECT(gbc.pc(), 0x8fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb3), 0xcb);
        EXPECT(gbc.readMem(0x8fb4), 0x84);
        // CB 84 0166
        gbc.setState(0xde7a, 0xb2ce, 0x5270, 0xced3, 0xd7eb, 0x3101, 0x1, 0x1);
        gbc.writeMem(0xde7a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb2ce);
        EXPECT(gbc.pc(), 0xde7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7a), 0xcb);
        EXPECT(gbc.readMem(0xde7b), 0x84);
        // CB 84 0167
        gbc.setState(0xb735, 0xedec, 0x7750, 0xc63, 0x857b, 0x2f2e, 0x1, 0x1);
        gbc.writeMem(0xb735, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xedec);
        EXPECT(gbc.pc(), 0xb737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb735), 0xcb);
        EXPECT(gbc.readMem(0xb736), 0x84);
        // CB 84 0168
        gbc.setState(0xdd17, 0x15c5, 0x5180, 0xf32f, 0x488d, 0x2d49, 0x0, 0x1);
        gbc.writeMem(0xdd17, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x15c5);
        EXPECT(gbc.pc(), 0xdd19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd17), 0xcb);
        EXPECT(gbc.readMem(0xdd18), 0x84);
        // CB 84 0169
        gbc.setState(0x7aff, 0xf38b, 0xd0b0, 0xed5a, 0x8b1c, 0xd59a, 0x1, 0x0);
        gbc.writeMem(0x7aff, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf38b);
        EXPECT(gbc.pc(), 0x7b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 016A
        gbc.setState(0x7bd3, 0xc75d, 0x7ca0, 0x7442, 0xe61, 0x3fef, 0x1, 0x1);
        gbc.writeMem(0x7bd3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc75d);
        EXPECT(gbc.pc(), 0x7bd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 016B
        gbc.setState(0xefaf, 0x27ee, 0x8f40, 0x93a3, 0x14e8, 0x34c1, 0x0, 0x0);
        gbc.writeMem(0xefaf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x27ee);
        EXPECT(gbc.pc(), 0xefb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefaf), 0xcb);
        EXPECT(gbc.readMem(0xefb0), 0x84);
        // CB 84 016C
        gbc.setState(0xa884, 0x9518, 0xaae0, 0xf815, 0x82e1, 0x92a0, 0x0, 0x1);
        gbc.writeMem(0xa884, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9518);
        EXPECT(gbc.pc(), 0xa886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa884), 0xcb);
        EXPECT(gbc.readMem(0xa885), 0x84);
        // CB 84 016D
        gbc.setState(0x55b3, 0xf995, 0x94b0, 0x1578, 0x80e9, 0xc762, 0x0, 0x1);
        gbc.writeMem(0x55b3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf995);
        EXPECT(gbc.pc(), 0x55b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 016E
        gbc.setState(0xfc4, 0x918a, 0x5300, 0x8fab, 0x6124, 0x2bb7, 0x1, 0x0);
        gbc.writeMem(0xfc4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x918a);
        EXPECT(gbc.pc(), 0xfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 016F
        gbc.setState(0x28f6, 0xd2e8, 0xf900, 0xdc39, 0xb4c6, 0xdb21, 0x1, 0x1);
        gbc.writeMem(0x28f6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd2e8);
        EXPECT(gbc.pc(), 0x28f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0171
        gbc.setState(0x97c5, 0x574e, 0x7bf0, 0xde9, 0x2e8c, 0x4650, 0x0, 0x1);
        gbc.writeMem(0x97c5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x574e);
        EXPECT(gbc.pc(), 0x97c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c5), 0xcb);
        EXPECT(gbc.readMem(0x97c6), 0x84);
        // CB 84 0172
        gbc.setState(0xd519, 0x48a3, 0x4b0, 0xdab9, 0x2ca6, 0x1cb0, 0x1, 0x1);
        gbc.writeMem(0xd519, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x48a3);
        EXPECT(gbc.pc(), 0xd51b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd519), 0xcb);
        EXPECT(gbc.readMem(0xd51a), 0x84);
        // CB 84 0173
        gbc.setState(0xe1bc, 0x5981, 0xd970, 0x3290, 0x8904, 0x24de, 0x1, 0x0);
        gbc.writeMem(0xe1bc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5981);
        EXPECT(gbc.pc(), 0xe1be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1bc), 0xcb);
        EXPECT(gbc.readMem(0xe1bd), 0x84);
        // CB 84 0174
        gbc.setState(0xb29c, 0x7c77, 0xedf0, 0x8036, 0x454, 0x91ae, 0x1, 0x1);
        gbc.writeMem(0xb29c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7c77);
        EXPECT(gbc.pc(), 0xb29e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb29c), 0xcb);
        EXPECT(gbc.readMem(0xb29d), 0x84);
        // CB 84 0175
        gbc.setState(0x2f30, 0x8877, 0x4e0, 0x10e0, 0xfb05, 0x5615, 0x1, 0x0);
        gbc.writeMem(0x2f30, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8877);
        EXPECT(gbc.pc(), 0x2f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0176
        gbc.setState(0x5188, 0xfced, 0xb70, 0xa7ba, 0xcdde, 0xf22b, 0x0, 0x1);
        gbc.writeMem(0x5188, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfced);
        EXPECT(gbc.pc(), 0x518a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0177
        gbc.setState(0x8caa, 0x77fe, 0x67b0, 0x32f5, 0x6c03, 0x83e0, 0x1, 0x1);
        gbc.writeMem(0x8caa, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x77fe);
        EXPECT(gbc.pc(), 0x8cac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8caa), 0xcb);
        EXPECT(gbc.readMem(0x8cab), 0x84);
        // CB 84 0178
        gbc.setState(0x3762, 0xf5e7, 0x8510, 0xf6a8, 0xd5f3, 0xb94f, 0x0, 0x0);
        gbc.writeMem(0x3762, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf5e7);
        EXPECT(gbc.pc(), 0x3764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0179
        gbc.setState(0x962, 0x9f05, 0x2010, 0xe57d, 0xeec3, 0x3be4, 0x0, 0x0);
        gbc.writeMem(0x962, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9f05);
        EXPECT(gbc.pc(), 0x964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 017A
        gbc.setState(0xeb89, 0x62d2, 0xa7e0, 0xd53e, 0xd980, 0xf908, 0x0, 0x1);
        gbc.writeMem(0xeb89, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x62d2);
        EXPECT(gbc.pc(), 0xeb8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb89), 0xcb);
        EXPECT(gbc.readMem(0xeb8a), 0x84);
        // CB 84 017B
        gbc.setState(0xc6ba, 0xd5a2, 0x3db0, 0x225f, 0xdac3, 0xd5a7, 0x1, 0x1);
        gbc.writeMem(0xc6ba, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd5a2);
        EXPECT(gbc.pc(), 0xc6bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ba), 0xcb);
        EXPECT(gbc.readMem(0xc6bb), 0x84);
        // CB 84 017C
        gbc.setState(0x2711, 0x1f9, 0x3390, 0xe7dd, 0x2a17, 0x1ff9, 0x0, 0x1);
        gbc.writeMem(0x2711, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1f9);
        EXPECT(gbc.pc(), 0x2713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 017D
        gbc.setState(0x3300, 0x587b, 0x61b0, 0xb014, 0xb083, 0x6732, 0x0, 0x1);
        gbc.writeMem(0x3300, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x587b);
        EXPECT(gbc.pc(), 0x3302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 017E
        gbc.setState(0x18ac, 0xad3d, 0x2390, 0x132e, 0xa65d, 0x567c, 0x0, 0x1);
        gbc.writeMem(0x18ac, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xad3d);
        EXPECT(gbc.pc(), 0x18ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 017F
        gbc.setState(0x6e2b, 0xdf38, 0xa010, 0x6bc0, 0xfa5f, 0x88e8, 0x1, 0x0);
        gbc.writeMem(0x6e2b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdf38);
        EXPECT(gbc.pc(), 0x6e2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0180
        gbc.setState(0x1396, 0xfd5b, 0x170, 0xf6ad, 0x5d04, 0xb1c3, 0x1, 0x0);
        gbc.writeMem(0x1396, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfd5b);
        EXPECT(gbc.pc(), 0x1398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0181
        gbc.setState(0xa7ff, 0x94cd, 0xbb60, 0xf2a7, 0xec28, 0xf32, 0x0, 0x1);
        gbc.writeMem(0xa7ff, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x94cd);
        EXPECT(gbc.pc(), 0xa801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ff), 0xcb);
        EXPECT(gbc.readMem(0xa800), 0x84);
        // CB 84 0182
        gbc.setState(0x1db9, 0xaa2, 0x9200, 0x9c35, 0x8cc6, 0x78b8, 0x0, 0x1);
        gbc.writeMem(0x1db9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xaa2);
        EXPECT(gbc.pc(), 0x1dbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0183
        gbc.setState(0x4e01, 0x3c2a, 0x8200, 0x7c7c, 0xc95a, 0x4a34, 0x0, 0x1);
        gbc.writeMem(0x4e01, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3c2a);
        EXPECT(gbc.pc(), 0x4e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0184
        gbc.setState(0xefb, 0x7379, 0x4b80, 0x371f, 0xea91, 0xe95e, 0x0, 0x0);
        gbc.writeMem(0xefb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7379);
        EXPECT(gbc.pc(), 0xefd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0185
        gbc.setState(0x6241, 0xb3fd, 0x3750, 0x6be8, 0xf12c, 0x1837, 0x0, 0x1);
        gbc.writeMem(0x6241, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb3fd);
        EXPECT(gbc.pc(), 0x6243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0187
        gbc.setState(0x395e, 0xd62a, 0x1f70, 0x781f, 0xa26b, 0xa39f, 0x0, 0x1);
        gbc.writeMem(0x395e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd62a);
        EXPECT(gbc.pc(), 0x3960);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0188
        gbc.setState(0x5acd, 0xbc86, 0xf6d0, 0x22b2, 0x5bd6, 0x6df4, 0x1, 0x0);
        gbc.writeMem(0x5acd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbc86);
        EXPECT(gbc.pc(), 0x5acf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0189
        gbc.setState(0x7c5, 0x937c, 0x1c0, 0xc0db, 0xff47, 0xc2b6, 0x0, 0x1);
        gbc.writeMem(0x7c5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x937c);
        EXPECT(gbc.pc(), 0x7c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 018A
        gbc.setState(0x23a8, 0x61a3, 0x3290, 0x17f6, 0x7a17, 0x4f, 0x1, 0x0);
        gbc.writeMem(0x23a8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x61a3);
        EXPECT(gbc.pc(), 0x23aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 018C
        gbc.setState(0x53f9, 0x26aa, 0x4bb0, 0xda72, 0x4cc9, 0x95d3, 0x0, 0x0);
        gbc.writeMem(0x53f9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x26aa);
        EXPECT(gbc.pc(), 0x53fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 018D
        gbc.setState(0x82f, 0xec50, 0x2590, 0x669a, 0x918f, 0xdf27, 0x1, 0x0);
        gbc.writeMem(0x82f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xec50);
        EXPECT(gbc.pc(), 0x831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 018E
        gbc.setState(0xe939, 0x4a1d, 0x47e0, 0x985b, 0x74d2, 0xcf9a, 0x1, 0x1);
        gbc.writeMem(0xe939, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4a1d);
        EXPECT(gbc.pc(), 0xe93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe939), 0xcb);
        EXPECT(gbc.readMem(0xe93a), 0x84);
        // CB 84 018F
        gbc.setState(0x372, 0xefa8, 0xd5c0, 0x2cd0, 0x25de, 0xf1e2, 0x0, 0x0);
        gbc.writeMem(0x372, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xefa8);
        EXPECT(gbc.pc(), 0x374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0190
        gbc.setState(0xb094, 0xb1af, 0x8480, 0xf741, 0x3a72, 0x66e3, 0x1, 0x1);
        gbc.writeMem(0xb094, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb1af);
        EXPECT(gbc.pc(), 0xb096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb094), 0xcb);
        EXPECT(gbc.readMem(0xb095), 0x84);
        // CB 84 0191
        gbc.setState(0xae23, 0x5b90, 0x8230, 0x571e, 0xa6e2, 0xabc5, 0x1, 0x0);
        gbc.writeMem(0xae23, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5b90);
        EXPECT(gbc.pc(), 0xae25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae23), 0xcb);
        EXPECT(gbc.readMem(0xae24), 0x84);
        // CB 84 0192
        gbc.setState(0xe05, 0x2382, 0xb9c0, 0x483b, 0x1b75, 0xa248, 0x1, 0x1);
        gbc.writeMem(0xe05, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2382);
        EXPECT(gbc.pc(), 0xe07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0193
        gbc.setState(0xe85f, 0xb818, 0xeab0, 0x2eeb, 0x4727, 0xee2a, 0x1, 0x0);
        gbc.writeMem(0xe85f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb818);
        EXPECT(gbc.pc(), 0xe861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85f), 0xcb);
        EXPECT(gbc.readMem(0xe860), 0x84);
        // CB 84 0194
        gbc.setState(0x2c04, 0x81e, 0xfcd0, 0xcce2, 0xe9bf, 0xd490, 0x1, 0x1);
        gbc.writeMem(0x2c04, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x81e);
        EXPECT(gbc.pc(), 0x2c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0195
        gbc.setState(0xe97, 0x8b04, 0x9cc0, 0x502d, 0x6f1c, 0x1eb1, 0x1, 0x0);
        gbc.writeMem(0xe97, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8b04);
        EXPECT(gbc.pc(), 0xe99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0196
        gbc.setState(0xb08c, 0x9ac0, 0xef00, 0x2561, 0x91c1, 0x3cbf, 0x1, 0x0);
        gbc.writeMem(0xb08c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9ac0);
        EXPECT(gbc.pc(), 0xb08e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08c), 0xcb);
        EXPECT(gbc.readMem(0xb08d), 0x84);
        // CB 84 0197
        gbc.setState(0x808e, 0xdf6, 0x2870, 0xe219, 0xa1f3, 0x2a2a, 0x1, 0x1);
        gbc.writeMem(0x808e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xdf6);
        EXPECT(gbc.pc(), 0x8090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808e), 0xcb);
        EXPECT(gbc.readMem(0x808f), 0x84);
        // CB 84 0198
        gbc.setState(0xbd31, 0x2246, 0x6650, 0xe6f0, 0xb8fc, 0x19ab, 0x0, 0x0);
        gbc.writeMem(0xbd31, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2246);
        EXPECT(gbc.pc(), 0xbd33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd31), 0xcb);
        EXPECT(gbc.readMem(0xbd32), 0x84);
        // CB 84 0199
        gbc.setState(0x6438, 0x8658, 0xefa0, 0x29ff, 0x1290, 0xda3d, 0x1, 0x0);
        gbc.writeMem(0x6438, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8658);
        EXPECT(gbc.pc(), 0x643a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 019A
        gbc.setState(0xcf3b, 0x5377, 0x4a60, 0x265f, 0x33a, 0xebb1, 0x0, 0x0);
        gbc.writeMem(0xcf3b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5377);
        EXPECT(gbc.pc(), 0xcf3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf3b), 0xcb);
        EXPECT(gbc.readMem(0xcf3c), 0x84);
        // CB 84 019B
        gbc.setState(0xae52, 0x9ef8, 0xd900, 0x6979, 0xd4eb, 0x3e2f, 0x0, 0x0);
        gbc.writeMem(0xae52, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9ef8);
        EXPECT(gbc.pc(), 0xae54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae52), 0xcb);
        EXPECT(gbc.readMem(0xae53), 0x84);
        // CB 84 019C
        gbc.setState(0x64bb, 0x4802, 0x3050, 0xcfea, 0xd03f, 0x685, 0x1, 0x1);
        gbc.writeMem(0x64bb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4802);
        EXPECT(gbc.pc(), 0x64bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 019D
        gbc.setState(0x9b67, 0xc2a8, 0xd6e0, 0xea2a, 0x7ec9, 0x3e1b, 0x0, 0x0);
        gbc.writeMem(0x9b67, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc2a8);
        EXPECT(gbc.pc(), 0x9b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b67), 0xcb);
        EXPECT(gbc.readMem(0x9b68), 0x84);
        // CB 84 019F
        gbc.setState(0x256f, 0xc9bb, 0xa520, 0xc2df, 0x8678, 0x1cf9, 0x1, 0x1);
        gbc.writeMem(0x256f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc9bb);
        EXPECT(gbc.pc(), 0x2571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01A0
        gbc.setState(0xc754, 0x7b65, 0x5050, 0x6388, 0x5df8, 0x93c9, 0x0, 0x0);
        gbc.writeMem(0xc754, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7b65);
        EXPECT(gbc.pc(), 0xc756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc754), 0xcb);
        EXPECT(gbc.readMem(0xc755), 0x84);
        // CB 84 01A1
        gbc.setState(0x16a0, 0x4daf, 0xa520, 0x1632, 0x41a0, 0xd008, 0x0, 0x1);
        gbc.writeMem(0x16a0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4daf);
        EXPECT(gbc.pc(), 0x16a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01A2
        gbc.setState(0x6967, 0x98bc, 0x4f0, 0xa951, 0x1864, 0xabd2, 0x1, 0x0);
        gbc.writeMem(0x6967, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x98bc);
        EXPECT(gbc.pc(), 0x6969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01A3
        gbc.setState(0xb2aa, 0xa0dd, 0xd390, 0x64eb, 0xec5f, 0x7b69, 0x1, 0x0);
        gbc.writeMem(0xb2aa, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa0dd);
        EXPECT(gbc.pc(), 0xb2ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2aa), 0xcb);
        EXPECT(gbc.readMem(0xb2ab), 0x84);
        // CB 84 01A5
        gbc.setState(0xbcb0, 0xa0f0, 0xd170, 0x553f, 0x59ec, 0x18ed, 0x0, 0x0);
        gbc.writeMem(0xbcb0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa0f0);
        EXPECT(gbc.pc(), 0xbcb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb0), 0xcb);
        EXPECT(gbc.readMem(0xbcb1), 0x84);
        // CB 84 01A6
        gbc.setState(0xe6ff, 0xfa37, 0x64d0, 0x6b03, 0x2ce5, 0xac6e, 0x1, 0x1);
        gbc.writeMem(0xe6ff, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfa37);
        EXPECT(gbc.pc(), 0xe701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ff), 0xcb);
        EXPECT(gbc.readMem(0xe700), 0x84);
        // CB 84 01A7
        gbc.setState(0x1c6f, 0xaad9, 0x710, 0x298b, 0x9851, 0x8aac, 0x0, 0x0);
        gbc.writeMem(0x1c6f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xaad9);
        EXPECT(gbc.pc(), 0x1c71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01A8
        gbc.setState(0xd021, 0xd2a6, 0xa9e0, 0x1c7f, 0xe032, 0xc20b, 0x0, 0x1);
        gbc.writeMem(0xd021, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd2a6);
        EXPECT(gbc.pc(), 0xd023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd021), 0xcb);
        EXPECT(gbc.readMem(0xd022), 0x84);
        // CB 84 01A9
        gbc.setState(0x7084, 0x1e21, 0xdc30, 0xfd45, 0x1806, 0xb17f, 0x1, 0x0);
        gbc.writeMem(0x7084, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1e21);
        EXPECT(gbc.pc(), 0x7086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01AA
        gbc.setState(0x48d3, 0x9f98, 0x4890, 0x8e63, 0x2680, 0xcb9e, 0x1, 0x1);
        gbc.writeMem(0x48d3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9f98);
        EXPECT(gbc.pc(), 0x48d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01AB
        gbc.setState(0x3ef9, 0x1d8b, 0x5440, 0x4f01, 0x7468, 0x9077, 0x1, 0x1);
        gbc.writeMem(0x3ef9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1d8b);
        EXPECT(gbc.pc(), 0x3efb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01AC
        gbc.setState(0xdb87, 0xae1a, 0x12a0, 0x31b4, 0x8ebc, 0x198d, 0x0, 0x0);
        gbc.writeMem(0xdb87, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xae1a);
        EXPECT(gbc.pc(), 0xdb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb87), 0xcb);
        EXPECT(gbc.readMem(0xdb88), 0x84);
        // CB 84 01AD
        gbc.setState(0xb5c2, 0x5d29, 0x5ff0, 0x1cc2, 0x249b, 0xf43d, 0x0, 0x0);
        gbc.writeMem(0xb5c2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5d29);
        EXPECT(gbc.pc(), 0xb5c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c2), 0xcb);
        EXPECT(gbc.readMem(0xb5c3), 0x84);
        // CB 84 01AE
        gbc.setState(0xc73b, 0xaa25, 0x97e0, 0x192e, 0xc87b, 0xc01a, 0x1, 0x1);
        gbc.writeMem(0xc73b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xaa25);
        EXPECT(gbc.pc(), 0xc73d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc73b), 0xcb);
        EXPECT(gbc.readMem(0xc73c), 0x84);
        // CB 84 01AF
        gbc.setState(0xd489, 0xefd3, 0xa1e0, 0x5471, 0x722c, 0x1e5, 0x0, 0x0);
        gbc.writeMem(0xd489, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xefd3);
        EXPECT(gbc.pc(), 0xd48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd489), 0xcb);
        EXPECT(gbc.readMem(0xd48a), 0x84);
        // CB 84 01B0
        gbc.setState(0xa233, 0x7a0, 0x7400, 0x1c9, 0xada1, 0x872e, 0x1, 0x0);
        gbc.writeMem(0xa233, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7a0);
        EXPECT(gbc.pc(), 0xa235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa233), 0xcb);
        EXPECT(gbc.readMem(0xa234), 0x84);
        // CB 84 01B1
        gbc.setState(0x240, 0x46c2, 0x6f40, 0xff8e, 0xe6f2, 0x249d, 0x0, 0x0);
        gbc.writeMem(0x240, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x46c2);
        EXPECT(gbc.pc(), 0x242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01B2
        gbc.setState(0xa4d9, 0xb47, 0xbce0, 0x6d78, 0x1ab3, 0x8bcc, 0x0, 0x1);
        gbc.writeMem(0xa4d9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb47);
        EXPECT(gbc.pc(), 0xa4db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4d9), 0xcb);
        EXPECT(gbc.readMem(0xa4da), 0x84);
        // CB 84 01B3
        gbc.setState(0x39cd, 0x18f, 0xc730, 0x1cde, 0x7681, 0x7e60, 0x1, 0x1);
        gbc.writeMem(0x39cd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x18f);
        EXPECT(gbc.pc(), 0x39cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01B4
        gbc.setState(0x29ee, 0x87a8, 0xfea0, 0xbac6, 0x280e, 0x3e03, 0x1, 0x1);
        gbc.writeMem(0x29ee, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x87a8);
        EXPECT(gbc.pc(), 0x29f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01B5
        gbc.setState(0x6b76, 0xc789, 0x7da0, 0xa023, 0x3d21, 0x5368, 0x1, 0x0);
        gbc.writeMem(0x6b76, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc789);
        EXPECT(gbc.pc(), 0x6b78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01B6
        gbc.setState(0x2451, 0xd7b, 0x9ba0, 0xe685, 0x6c4b, 0xc069, 0x0, 0x1);
        gbc.writeMem(0x2451, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd7b);
        EXPECT(gbc.pc(), 0x2453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01B7
        gbc.setState(0x220a, 0x5f03, 0xc000, 0x9651, 0xcbea, 0xd5e4, 0x1, 0x0);
        gbc.writeMem(0x220a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5f03);
        EXPECT(gbc.pc(), 0x220c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01B8
        gbc.setState(0x5d4a, 0x4a90, 0xc840, 0x12a8, 0xb1e4, 0xe2f2, 0x1, 0x0);
        gbc.writeMem(0x5d4a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4a90);
        EXPECT(gbc.pc(), 0x5d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01B9
        gbc.setState(0x9085, 0x7132, 0x8790, 0xa71e, 0xe869, 0x436d, 0x0, 0x0);
        gbc.writeMem(0x9085, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7132);
        EXPECT(gbc.pc(), 0x9087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9085), 0xcb);
        EXPECT(gbc.readMem(0x9086), 0x84);
        // CB 84 01BA
        gbc.setState(0x5fdc, 0x549b, 0xa3f0, 0xacf2, 0x4441, 0xa587, 0x1, 0x0);
        gbc.writeMem(0x5fdc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x549b);
        EXPECT(gbc.pc(), 0x5fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01BB
        gbc.setState(0x104f, 0xed0, 0xe190, 0x9ce9, 0xf9fd, 0x29bd, 0x0, 0x1);
        gbc.writeMem(0x104f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xed0);
        EXPECT(gbc.pc(), 0x1051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01BC
        gbc.setState(0x9b4f, 0xe7ad, 0x1b30, 0x589e, 0x74fe, 0xc82a, 0x1, 0x1);
        gbc.writeMem(0x9b4f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe7ad);
        EXPECT(gbc.pc(), 0x9b51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4f), 0xcb);
        EXPECT(gbc.readMem(0x9b50), 0x84);
        // CB 84 01BD
        gbc.setState(0xd10d, 0xfdd6, 0x2180, 0x730e, 0x271e, 0x7567, 0x1, 0x0);
        gbc.writeMem(0xd10d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfdd6);
        EXPECT(gbc.pc(), 0xd10f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10d), 0xcb);
        EXPECT(gbc.readMem(0xd10e), 0x84);
        // CB 84 01BE
        gbc.setState(0x19d1, 0xf33, 0xfbe0, 0x44a4, 0x58ae, 0xaee8, 0x0, 0x1);
        gbc.writeMem(0x19d1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf33);
        EXPECT(gbc.pc(), 0x19d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01BF
        gbc.setState(0x3abd, 0xae7e, 0x1460, 0xee85, 0xbd1d, 0xdaf, 0x0, 0x1);
        gbc.writeMem(0x3abd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xae7e);
        EXPECT(gbc.pc(), 0x3abf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01C0
        gbc.setState(0x510c, 0xbf2, 0x44f0, 0xb204, 0x6fa5, 0x96c9, 0x0, 0x1);
        gbc.writeMem(0x510c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbf2);
        EXPECT(gbc.pc(), 0x510e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01C1
        gbc.setState(0x6880, 0x5104, 0x3d90, 0xe292, 0xd84e, 0x56e3, 0x1, 0x0);
        gbc.writeMem(0x6880, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5104);
        EXPECT(gbc.pc(), 0x6882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01C2
        gbc.setState(0xed74, 0x4997, 0x18a0, 0x8f79, 0x48bd, 0xeca0, 0x0, 0x0);
        gbc.writeMem(0xed74, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4997);
        EXPECT(gbc.pc(), 0xed76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed74), 0xcb);
        EXPECT(gbc.readMem(0xed75), 0x84);
        // CB 84 01C3
        gbc.setState(0xcce, 0xa511, 0x9220, 0x7598, 0x6edd, 0xb244, 0x1, 0x1);
        gbc.writeMem(0xcce, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa511);
        EXPECT(gbc.pc(), 0xcd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01C4
        gbc.setState(0x218c, 0xa1fb, 0x9fd0, 0xcd5c, 0xe79f, 0x6899, 0x0, 0x0);
        gbc.writeMem(0x218c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa1fb);
        EXPECT(gbc.pc(), 0x218e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01C5
        gbc.setState(0xa856, 0x69c3, 0x6a40, 0x1518, 0xa540, 0xe494, 0x1, 0x1);
        gbc.writeMem(0xa856, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x69c3);
        EXPECT(gbc.pc(), 0xa858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa856), 0xcb);
        EXPECT(gbc.readMem(0xa857), 0x84);
        // CB 84 01C6
        gbc.setState(0xd8be, 0x163, 0x2570, 0x1cde, 0x5961, 0x3d32, 0x1, 0x0);
        gbc.writeMem(0xd8be, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x163);
        EXPECT(gbc.pc(), 0xd8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8be), 0xcb);
        EXPECT(gbc.readMem(0xd8bf), 0x84);
        // CB 84 01C7
        gbc.setState(0xe23d, 0xc2d3, 0x2440, 0xac5c, 0x87d1, 0xf259, 0x1, 0x1);
        gbc.writeMem(0xe23d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc2d3);
        EXPECT(gbc.pc(), 0xe23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe23d), 0xcb);
        EXPECT(gbc.readMem(0xe23e), 0x84);
        // CB 84 01C8
        gbc.setState(0xb2, 0x453, 0x660, 0xa708, 0xb854, 0x8d2, 0x1, 0x1);
        gbc.writeMem(0xb2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x453);
        EXPECT(gbc.pc(), 0xb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01CA
        gbc.setState(0x5506, 0xe927, 0xa550, 0x19c8, 0x15a9, 0xc89f, 0x1, 0x0);
        gbc.writeMem(0x5506, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe927);
        EXPECT(gbc.pc(), 0x5508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01CB
        gbc.setState(0x3b8b, 0x65a3, 0x4b90, 0xdd5c, 0x55e5, 0x4e50, 0x0, 0x1);
        gbc.writeMem(0x3b8b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x65a3);
        EXPECT(gbc.pc(), 0x3b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01CD
        gbc.setState(0xd35d, 0xeb69, 0x8970, 0x4b1e, 0x2658, 0xa764, 0x0, 0x1);
        gbc.writeMem(0xd35d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xeb69);
        EXPECT(gbc.pc(), 0xd35f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd35d), 0xcb);
        EXPECT(gbc.readMem(0xd35e), 0x84);
        // CB 84 01CE
        gbc.setState(0x64c0, 0x2878, 0x9680, 0xcd9d, 0xedce, 0x215a, 0x1, 0x0);
        gbc.writeMem(0x64c0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2878);
        EXPECT(gbc.pc(), 0x64c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01CF
        gbc.setState(0x361, 0x9f2d, 0x2550, 0xf4c0, 0xf67d, 0xd0ef, 0x1, 0x1);
        gbc.writeMem(0x361, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9f2d);
        EXPECT(gbc.pc(), 0x363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01D0
        gbc.setState(0x714e, 0xfa36, 0x4910, 0xed27, 0xa490, 0x53ae, 0x0, 0x0);
        gbc.writeMem(0x714e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfa36);
        EXPECT(gbc.pc(), 0x7150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01D1
        gbc.setState(0x20aa, 0xe959, 0x9850, 0x28e7, 0x47a6, 0x2670, 0x1, 0x1);
        gbc.writeMem(0x20aa, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe959);
        EXPECT(gbc.pc(), 0x20ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01D3
        gbc.setState(0x1d5, 0xdef6, 0xfc50, 0xd1d3, 0x8f4e, 0xb73e, 0x0, 0x0);
        gbc.writeMem(0x1d5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdef6);
        EXPECT(gbc.pc(), 0x1d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01D4
        gbc.setState(0x33e9, 0x6ba1, 0x6390, 0x936f, 0x518f, 0xe9b4, 0x1, 0x0);
        gbc.writeMem(0x33e9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6ba1);
        EXPECT(gbc.pc(), 0x33eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01D5
        gbc.setState(0x73ad, 0xf765, 0xf010, 0xe784, 0x629, 0x53c7, 0x0, 0x1);
        gbc.writeMem(0x73ad, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf765);
        EXPECT(gbc.pc(), 0x73af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01D7
        gbc.setState(0x7e28, 0x99a1, 0x7f10, 0xa598, 0x8218, 0x4cfa, 0x0, 0x1);
        gbc.writeMem(0x7e28, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x99a1);
        EXPECT(gbc.pc(), 0x7e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01D8
        gbc.setState(0x34ee, 0x2adf, 0x5c70, 0x5c77, 0xfa1e, 0xba26, 0x1, 0x0);
        gbc.writeMem(0x34ee, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2adf);
        EXPECT(gbc.pc(), 0x34f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01D9
        gbc.setState(0x372f, 0xd3c0, 0x8920, 0x48cf, 0xe2c7, 0xc5f5, 0x1, 0x0);
        gbc.writeMem(0x372f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd3c0);
        EXPECT(gbc.pc(), 0x3731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01DA
        gbc.setState(0xb07b, 0xf4ae, 0x57f0, 0x209d, 0x83cf, 0x2183, 0x1, 0x0);
        gbc.writeMem(0xb07b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf4ae);
        EXPECT(gbc.pc(), 0xb07d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb07b), 0xcb);
        EXPECT(gbc.readMem(0xb07c), 0x84);
        // CB 84 01DB
        gbc.setState(0xc7c6, 0x8293, 0xac10, 0xcf7b, 0xc21, 0x5bea, 0x1, 0x1);
        gbc.writeMem(0xc7c6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8293);
        EXPECT(gbc.pc(), 0xc7c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c6), 0xcb);
        EXPECT(gbc.readMem(0xc7c7), 0x84);
        // CB 84 01DC
        gbc.setState(0x628a, 0xade3, 0x9c90, 0x419a, 0x8272, 0xb2ae, 0x0, 0x1);
        gbc.writeMem(0x628a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xade3);
        EXPECT(gbc.pc(), 0x628c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01DD
        gbc.setState(0xc143, 0x85ec, 0xe770, 0x31ef, 0x7ce5, 0xba, 0x1, 0x1);
        gbc.writeMem(0xc143, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x85ec);
        EXPECT(gbc.pc(), 0xc145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc143), 0xcb);
        EXPECT(gbc.readMem(0xc144), 0x84);
        // CB 84 01DF
        gbc.setState(0x7a66, 0xd359, 0x3980, 0xac5, 0x6404, 0x4687, 0x1, 0x0);
        gbc.writeMem(0x7a66, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd359);
        EXPECT(gbc.pc(), 0x7a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01E0
        gbc.setState(0x6c9f, 0x48fc, 0x1300, 0xecc4, 0x9c7d, 0xd946, 0x0, 0x1);
        gbc.writeMem(0x6c9f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x48fc);
        EXPECT(gbc.pc(), 0x6ca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01E1
        gbc.setState(0xdf0b, 0x38d7, 0x15a0, 0xb49, 0xc6b1, 0xe402, 0x1, 0x1);
        gbc.writeMem(0xdf0b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x38d7);
        EXPECT(gbc.pc(), 0xdf0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf0b), 0xcb);
        EXPECT(gbc.readMem(0xdf0c), 0x84);
        // CB 84 01E3
        gbc.setState(0x2ac3, 0x2526, 0x4af0, 0xfc11, 0x8ff0, 0x222, 0x1, 0x0);
        gbc.writeMem(0x2ac3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2526);
        EXPECT(gbc.pc(), 0x2ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01E4
        gbc.setState(0xadae, 0xd0c0, 0x6b00, 0x5b7, 0xcbc6, 0x20d3, 0x0, 0x1);
        gbc.writeMem(0xadae, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd0c0);
        EXPECT(gbc.pc(), 0xadb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadae), 0xcb);
        EXPECT(gbc.readMem(0xadaf), 0x84);
        // CB 84 01E5
        gbc.setState(0x243f, 0x5f75, 0xdda0, 0x60d2, 0xc490, 0x6b1d, 0x1, 0x1);
        gbc.writeMem(0x243f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5f75);
        EXPECT(gbc.pc(), 0x2441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01E6
        gbc.setState(0x4887, 0xbc2a, 0x5d80, 0x4888, 0xf151, 0xecfe, 0x0, 0x0);
        gbc.writeMem(0x4887, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbc2a);
        EXPECT(gbc.pc(), 0x4889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01E7
        gbc.setState(0xa04c, 0xe0d8, 0xb480, 0xa61d, 0x5924, 0xeda0, 0x1, 0x1);
        gbc.writeMem(0xa04c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe0d8);
        EXPECT(gbc.pc(), 0xa04e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa04c), 0xcb);
        EXPECT(gbc.readMem(0xa04d), 0x84);
        // CB 84 01E8
        gbc.setState(0x3f72, 0x4511, 0xf60, 0xb41b, 0xa7cd, 0x664a, 0x0, 0x1);
        gbc.writeMem(0x3f72, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4511);
        EXPECT(gbc.pc(), 0x3f74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01E9
        gbc.setState(0x679f, 0x210e, 0x8540, 0x98a6, 0x1b3c, 0xf675, 0x0, 0x0);
        gbc.writeMem(0x679f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x210e);
        EXPECT(gbc.pc(), 0x67a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01EA
        gbc.setState(0xd2ca, 0xc2eb, 0xdde0, 0x5aff, 0xf212, 0x295b, 0x0, 0x0);
        gbc.writeMem(0xd2ca, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc2eb);
        EXPECT(gbc.pc(), 0xd2cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ca), 0xcb);
        EXPECT(gbc.readMem(0xd2cb), 0x84);
        // CB 84 01EB
        gbc.setState(0x18d, 0x107f, 0x3c20, 0x828c, 0x8a59, 0x63b8, 0x1, 0x1);
        gbc.writeMem(0x18d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x107f);
        EXPECT(gbc.pc(), 0x18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01EC
        gbc.setState(0xd624, 0x7018, 0xcdc0, 0x33a0, 0x7014, 0xcbb1, 0x1, 0x1);
        gbc.writeMem(0xd624, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7018);
        EXPECT(gbc.pc(), 0xd626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd624), 0xcb);
        EXPECT(gbc.readMem(0xd625), 0x84);
        // CB 84 01ED
        gbc.setState(0x8385, 0x667a, 0x2490, 0xc167, 0x4318, 0xa3e3, 0x1, 0x1);
        gbc.writeMem(0x8385, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x667a);
        EXPECT(gbc.pc(), 0x8387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8385), 0xcb);
        EXPECT(gbc.readMem(0x8386), 0x84);
        // CB 84 01EE
        gbc.setState(0x9f20, 0xbe5b, 0x2a70, 0x9a24, 0x7baf, 0x7af1, 0x0, 0x0);
        gbc.writeMem(0x9f20, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbe5b);
        EXPECT(gbc.pc(), 0x9f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f20), 0xcb);
        EXPECT(gbc.readMem(0x9f21), 0x84);
        // CB 84 01EF
        gbc.setState(0xef00, 0x425f, 0x31e0, 0xb0d0, 0x15c8, 0xc2a9, 0x1, 0x1);
        gbc.writeMem(0xef00, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x425f);
        EXPECT(gbc.pc(), 0xef02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef00), 0xcb);
        EXPECT(gbc.readMem(0xef01), 0x84);
        // CB 84 01F1
        gbc.setState(0x6dbc, 0x8ab5, 0x13b0, 0x22ac, 0xe3c7, 0x2969, 0x1, 0x0);
        gbc.writeMem(0x6dbc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8ab5);
        EXPECT(gbc.pc(), 0x6dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01F2
        gbc.setState(0x130b, 0x77d9, 0x7b70, 0xf2f2, 0xb84e, 0xe460, 0x0, 0x1);
        gbc.writeMem(0x130b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x77d9);
        EXPECT(gbc.pc(), 0x130d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01F3
        gbc.setState(0xce28, 0xd883, 0x6680, 0x3cb1, 0xd770, 0xa75a, 0x1, 0x0);
        gbc.writeMem(0xce28, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd883);
        EXPECT(gbc.pc(), 0xce2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce28), 0xcb);
        EXPECT(gbc.readMem(0xce29), 0x84);
        // CB 84 01F4
        gbc.setState(0x247e, 0x910c, 0xac0, 0xb31, 0x6b30, 0x4c11, 0x0, 0x0);
        gbc.writeMem(0x247e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x910c);
        EXPECT(gbc.pc(), 0x2480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01F5
        gbc.setState(0x364b, 0x263, 0xa810, 0xa364, 0x16e6, 0xbf7, 0x0, 0x1);
        gbc.writeMem(0x364b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x263);
        EXPECT(gbc.pc(), 0x364d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01F6
        gbc.setState(0xebb2, 0x750d, 0x3920, 0xf7ac, 0x8cc3, 0x368c, 0x1, 0x1);
        gbc.writeMem(0xebb2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x750d);
        EXPECT(gbc.pc(), 0xebb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebb2), 0xcb);
        EXPECT(gbc.readMem(0xebb3), 0x84);
        // CB 84 01F7
        gbc.setState(0x807c, 0x8c55, 0x64a0, 0x831e, 0xc7d4, 0x6151, 0x0, 0x1);
        gbc.writeMem(0x807c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8c55);
        EXPECT(gbc.pc(), 0x807e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807c), 0xcb);
        EXPECT(gbc.readMem(0x807d), 0x84);
        // CB 84 01F8
        gbc.setState(0xcec4, 0xdb88, 0xa6c0, 0x7099, 0x8567, 0x8e14, 0x0, 0x0);
        gbc.writeMem(0xcec4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdb88);
        EXPECT(gbc.pc(), 0xcec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec4), 0xcb);
        EXPECT(gbc.readMem(0xcec5), 0x84);
        // CB 84 01F9
        gbc.setState(0x3bd, 0x62fd, 0x8830, 0x582d, 0x8fb7, 0xbb26, 0x1, 0x0);
        gbc.writeMem(0x3bd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x62fd);
        EXPECT(gbc.pc(), 0x3bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01FA
        gbc.setState(0x8e03, 0xc57d, 0x1e00, 0xa136, 0x9a51, 0x6375, 0x1, 0x0);
        gbc.writeMem(0x8e03, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc57d);
        EXPECT(gbc.pc(), 0x8e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e03), 0xcb);
        EXPECT(gbc.readMem(0x8e04), 0x84);
        // CB 84 01FB
        gbc.setState(0x7477, 0x1b56, 0xb950, 0x38bf, 0xff3d, 0x84bd, 0x1, 0x1);
        gbc.writeMem(0x7477, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1b56);
        EXPECT(gbc.pc(), 0x7479);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01FC
        gbc.setState(0x5ab2, 0xad17, 0xa9b0, 0x6a31, 0xc8fc, 0xde8c, 0x0, 0x1);
        gbc.writeMem(0x5ab2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xad17);
        EXPECT(gbc.pc(), 0x5ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01FD
        gbc.setState(0x1eae, 0xf985, 0x6cd0, 0x7690, 0x2efa, 0x6cae, 0x1, 0x0);
        gbc.writeMem(0x1eae, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf985);
        EXPECT(gbc.pc(), 0x1eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 01FE
        gbc.setState(0x1caf, 0x376e, 0x1de0, 0xca91, 0x71c7, 0xc616, 0x1, 0x1);
        gbc.writeMem(0x1caf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x376e);
        EXPECT(gbc.pc(), 0x1cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 01FF
        gbc.setState(0xeab0, 0x4fa5, 0xa550, 0x448, 0x4a17, 0xfb5, 0x1, 0x1);
        gbc.writeMem(0xeab0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4fa5);
        EXPECT(gbc.pc(), 0xeab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab0), 0xcb);
        EXPECT(gbc.readMem(0xeab1), 0x84);
        // CB 84 0200
        gbc.setState(0x9141, 0x5678, 0x7a70, 0xda63, 0x8143, 0xee73, 0x1, 0x0);
        gbc.writeMem(0x9141, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5678);
        EXPECT(gbc.pc(), 0x9143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9141), 0xcb);
        EXPECT(gbc.readMem(0x9142), 0x84);
        // CB 84 0201
        gbc.setState(0x242d, 0xa088, 0x2650, 0x8a1b, 0x567e, 0x4c2e, 0x0, 0x1);
        gbc.writeMem(0x242d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa088);
        EXPECT(gbc.pc(), 0x242f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0202
        gbc.setState(0x1f81, 0x7213, 0xe1d0, 0x798d, 0xb61f, 0x81f9, 0x1, 0x0);
        gbc.writeMem(0x1f81, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7213);
        EXPECT(gbc.pc(), 0x1f83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0203
        gbc.setState(0x22db, 0xa9b0, 0xb6e0, 0x553, 0x58b, 0x5fe, 0x0, 0x1);
        gbc.writeMem(0x22db, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa9b0);
        EXPECT(gbc.pc(), 0x22dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0204
        gbc.setState(0x867c, 0x15f1, 0x6780, 0x9cdd, 0x2240, 0x4315, 0x1, 0x0);
        gbc.writeMem(0x867c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x15f1);
        EXPECT(gbc.pc(), 0x867e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867c), 0xcb);
        EXPECT(gbc.readMem(0x867d), 0x84);
        // CB 84 0205
        gbc.setState(0xce32, 0xea77, 0xbbb0, 0x8372, 0xc2b1, 0x4eaa, 0x1, 0x1);
        gbc.writeMem(0xce32, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xea77);
        EXPECT(gbc.pc(), 0xce34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce32), 0xcb);
        EXPECT(gbc.readMem(0xce33), 0x84);
        // CB 84 0206
        gbc.setState(0xa9c6, 0xef7e, 0xbe90, 0x44a8, 0xc404, 0xf05a, 0x0, 0x1);
        gbc.writeMem(0xa9c6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xef7e);
        EXPECT(gbc.pc(), 0xa9c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c6), 0xcb);
        EXPECT(gbc.readMem(0xa9c7), 0x84);
        // CB 84 0207
        gbc.setState(0xbda0, 0x998f, 0x5030, 0x34f1, 0x1926, 0x9af2, 0x0, 0x1);
        gbc.writeMem(0xbda0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x998f);
        EXPECT(gbc.pc(), 0xbda2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda0), 0xcb);
        EXPECT(gbc.readMem(0xbda1), 0x84);
        // CB 84 0209
        gbc.setState(0xd078, 0x69cf, 0x4eb0, 0xe82b, 0x7ee5, 0xcb29, 0x0, 0x1);
        gbc.writeMem(0xd078, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x69cf);
        EXPECT(gbc.pc(), 0xd07a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd078), 0xcb);
        EXPECT(gbc.readMem(0xd079), 0x84);
        // CB 84 020A
        gbc.setState(0xde0a, 0x96ad, 0x6410, 0x6409, 0x67bc, 0x6060, 0x1, 0x1);
        gbc.writeMem(0xde0a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x96ad);
        EXPECT(gbc.pc(), 0xde0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde0a), 0xcb);
        EXPECT(gbc.readMem(0xde0b), 0x84);
        // CB 84 020B
        gbc.setState(0xaa70, 0x5934, 0x6d20, 0xee18, 0xb7df, 0x70e0, 0x0, 0x0);
        gbc.writeMem(0xaa70, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5934);
        EXPECT(gbc.pc(), 0xaa72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa70), 0xcb);
        EXPECT(gbc.readMem(0xaa71), 0x84);
        // CB 84 020C
        gbc.setState(0xef13, 0x12fd, 0xfbf0, 0xfbbf, 0x2558, 0x3c9c, 0x0, 0x1);
        gbc.writeMem(0xef13, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x12fd);
        EXPECT(gbc.pc(), 0xef15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef13), 0xcb);
        EXPECT(gbc.readMem(0xef14), 0x84);
        // CB 84 020D
        gbc.setState(0x7bf8, 0x333f, 0xb380, 0x1ae8, 0x4f5d, 0x4cf8, 0x1, 0x0);
        gbc.writeMem(0x7bf8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x333f);
        EXPECT(gbc.pc(), 0x7bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 020E
        gbc.setState(0x85c1, 0x2477, 0x7e80, 0x386a, 0xdc3a, 0xb7e8, 0x0, 0x1);
        gbc.writeMem(0x85c1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2477);
        EXPECT(gbc.pc(), 0x85c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c1), 0xcb);
        EXPECT(gbc.readMem(0x85c2), 0x84);
        // CB 84 0210
        gbc.setState(0x823d, 0xb92d, 0x9210, 0xeeef, 0xf7df, 0x41d, 0x0, 0x0);
        gbc.writeMem(0x823d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb92d);
        EXPECT(gbc.pc(), 0x823f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x823d), 0xcb);
        EXPECT(gbc.readMem(0x823e), 0x84);
        // CB 84 0211
        gbc.setState(0x441, 0x4af3, 0xa380, 0x7817, 0x7803, 0xf7f6, 0x0, 0x0);
        gbc.writeMem(0x441, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4af3);
        EXPECT(gbc.pc(), 0x443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0212
        gbc.setState(0x8cfb, 0x78f2, 0xb010, 0xf7e1, 0xf0ee, 0xede5, 0x0, 0x0);
        gbc.writeMem(0x8cfb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x78f2);
        EXPECT(gbc.pc(), 0x8cfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cfb), 0xcb);
        EXPECT(gbc.readMem(0x8cfc), 0x84);
        // CB 84 0213
        gbc.setState(0xd368, 0x3182, 0x520, 0x15fa, 0xa4aa, 0x115d, 0x0, 0x1);
        gbc.writeMem(0xd368, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3182);
        EXPECT(gbc.pc(), 0xd36a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd368), 0xcb);
        EXPECT(gbc.readMem(0xd369), 0x84);
        // CB 84 0214
        gbc.setState(0x1bd4, 0x2f35, 0x73b0, 0x4aed, 0x9b5a, 0x54f0, 0x0, 0x1);
        gbc.writeMem(0x1bd4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2f35);
        EXPECT(gbc.pc(), 0x1bd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0215
        gbc.setState(0xda40, 0xedbf, 0xe040, 0x3b41, 0x423, 0xc31a, 0x0, 0x0);
        gbc.writeMem(0xda40, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xedbf);
        EXPECT(gbc.pc(), 0xda42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda40), 0xcb);
        EXPECT(gbc.readMem(0xda41), 0x84);
        // CB 84 0216
        gbc.setState(0x9e2e, 0xae2a, 0xd2a0, 0x5e9d, 0xc329, 0x35b2, 0x1, 0x1);
        gbc.writeMem(0x9e2e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xae2a);
        EXPECT(gbc.pc(), 0x9e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e2e), 0xcb);
        EXPECT(gbc.readMem(0x9e2f), 0x84);
        // CB 84 0217
        gbc.setState(0x378, 0x9a4e, 0xace0, 0xcd85, 0x70ad, 0x5089, 0x0, 0x1);
        gbc.writeMem(0x378, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9a4e);
        EXPECT(gbc.pc(), 0x37a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0218
        gbc.setState(0x3661, 0x1cce, 0x6a70, 0x4966, 0x85a5, 0x1c5f, 0x0, 0x0);
        gbc.writeMem(0x3661, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1cce);
        EXPECT(gbc.pc(), 0x3663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0219
        gbc.setState(0xea5a, 0xbec6, 0xc170, 0x1ec0, 0x3d8b, 0x7655, 0x1, 0x0);
        gbc.writeMem(0xea5a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xbec6);
        EXPECT(gbc.pc(), 0xea5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea5a), 0xcb);
        EXPECT(gbc.readMem(0xea5b), 0x84);
        // CB 84 021A
        gbc.setState(0x9b1e, 0x118b, 0xbe50, 0x3212, 0xfe81, 0x5c5f, 0x1, 0x1);
        gbc.writeMem(0x9b1e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x118b);
        EXPECT(gbc.pc(), 0x9b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1e), 0xcb);
        EXPECT(gbc.readMem(0x9b1f), 0x84);
        // CB 84 021B
        gbc.setState(0x4710, 0xb83c, 0x16c0, 0xdc3e, 0xd2f5, 0x9b5f, 0x1, 0x0);
        gbc.writeMem(0x4710, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb83c);
        EXPECT(gbc.pc(), 0x4712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 021C
        gbc.setState(0xdbc, 0xb07c, 0xfb70, 0x989e, 0xe8c0, 0x71ae, 0x1, 0x1);
        gbc.writeMem(0xdbc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb07c);
        EXPECT(gbc.pc(), 0xdbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 021D
        gbc.setState(0x2188, 0x10f7, 0xe720, 0xd0c0, 0x66c3, 0xd1af, 0x1, 0x0);
        gbc.writeMem(0x2188, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x10f7);
        EXPECT(gbc.pc(), 0x218a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 021E
        gbc.setState(0x8eb3, 0x3a1d, 0x7d00, 0x9e8, 0x36d0, 0x2663, 0x1, 0x1);
        gbc.writeMem(0x8eb3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3a1d);
        EXPECT(gbc.pc(), 0x8eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb3), 0xcb);
        EXPECT(gbc.readMem(0x8eb4), 0x84);
        // CB 84 0220
        gbc.setState(0x75bb, 0xc702, 0x29d0, 0x24e4, 0x8c77, 0x1ffb, 0x1, 0x0);
        gbc.writeMem(0x75bb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc702);
        EXPECT(gbc.pc(), 0x75bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0221
        gbc.setState(0x178f, 0x949, 0x3c40, 0x9d5, 0x1be6, 0x85ed, 0x0, 0x1);
        gbc.writeMem(0x178f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x949);
        EXPECT(gbc.pc(), 0x1791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0222
        gbc.setState(0xea29, 0x5be, 0xfb60, 0x8a4, 0x6a97, 0x2fad, 0x0, 0x1);
        gbc.writeMem(0xea29, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5be);
        EXPECT(gbc.pc(), 0xea2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea29), 0xcb);
        EXPECT(gbc.readMem(0xea2a), 0x84);
        // CB 84 0223
        gbc.setState(0xc4a, 0x82e7, 0x28e0, 0x9e6d, 0x5ea8, 0xae3b, 0x0, 0x0);
        gbc.writeMem(0xc4a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x82e7);
        EXPECT(gbc.pc(), 0xc4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0224
        gbc.setState(0xbf3c, 0x5189, 0xfc0, 0x1305, 0xc144, 0x52f, 0x1, 0x0);
        gbc.writeMem(0xbf3c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5189);
        EXPECT(gbc.pc(), 0xbf3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf3c), 0xcb);
        EXPECT(gbc.readMem(0xbf3d), 0x84);
        // CB 84 0225
        gbc.setState(0x3e8b, 0x5d7, 0x3a00, 0xf56d, 0x5af0, 0x729c, 0x0, 0x0);
        gbc.writeMem(0x3e8b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5d7);
        EXPECT(gbc.pc(), 0x3e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0226
        gbc.setState(0x8ed3, 0x5f6d, 0x1860, 0xab5d, 0x5204, 0xa2f2, 0x1, 0x1);
        gbc.writeMem(0x8ed3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5f6d);
        EXPECT(gbc.pc(), 0x8ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed3), 0xcb);
        EXPECT(gbc.readMem(0x8ed4), 0x84);
        // CB 84 0227
        gbc.setState(0x9521, 0x34d7, 0x8900, 0xa9d7, 0x6119, 0xf845, 0x0, 0x0);
        gbc.writeMem(0x9521, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x34d7);
        EXPECT(gbc.pc(), 0x9523);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9521), 0xcb);
        EXPECT(gbc.readMem(0x9522), 0x84);
        // CB 84 0228
        gbc.setState(0xda2e, 0xae05, 0x5ed0, 0x862d, 0xd5b9, 0x93ac, 0x1, 0x0);
        gbc.writeMem(0xda2e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xae05);
        EXPECT(gbc.pc(), 0xda30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda2e), 0xcb);
        EXPECT(gbc.readMem(0xda2f), 0x84);
        // CB 84 0229
        gbc.setState(0x6815, 0x6370, 0x820, 0x2e54, 0x6422, 0xb737, 0x1, 0x0);
        gbc.writeMem(0x6815, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6370);
        EXPECT(gbc.pc(), 0x6817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 022A
        gbc.setState(0x8200, 0x2f66, 0xc1b0, 0xf222, 0x49d3, 0x673d, 0x1, 0x0);
        gbc.writeMem(0x8200, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2f66);
        EXPECT(gbc.pc(), 0x8202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8200), 0xcb);
        EXPECT(gbc.readMem(0x8201), 0x84);
        // CB 84 022C
        gbc.setState(0xe709, 0x5d32, 0x9870, 0xe0, 0x4df4, 0xd5bf, 0x0, 0x1);
        gbc.writeMem(0xe709, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5d32);
        EXPECT(gbc.pc(), 0xe70b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe709), 0xcb);
        EXPECT(gbc.readMem(0xe70a), 0x84);
        // CB 84 022D
        gbc.setState(0x27b8, 0x8c3f, 0xf1d0, 0x6c97, 0xd6a9, 0x2740, 0x0, 0x0);
        gbc.writeMem(0x27b8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8c3f);
        EXPECT(gbc.pc(), 0x27ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 022E
        gbc.setState(0xc79e, 0xafdd, 0xc0d0, 0xc3e2, 0x90ac, 0x519a, 0x1, 0x1);
        gbc.writeMem(0xc79e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xafdd);
        EXPECT(gbc.pc(), 0xc7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc79e), 0xcb);
        EXPECT(gbc.readMem(0xc79f), 0x84);
        // CB 84 022F
        gbc.setState(0x3dd1, 0x5b40, 0xd8f0, 0xc6e2, 0x61db, 0xfaa8, 0x0, 0x1);
        gbc.writeMem(0x3dd1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5b40);
        EXPECT(gbc.pc(), 0x3dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0230
        gbc.setState(0xb191, 0x2a95, 0x7720, 0x2207, 0xbfbc, 0x182f, 0x0, 0x1);
        gbc.writeMem(0xb191, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2a95);
        EXPECT(gbc.pc(), 0xb193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb191), 0xcb);
        EXPECT(gbc.readMem(0xb192), 0x84);
        // CB 84 0231
        gbc.setState(0x18cd, 0xda64, 0x3050, 0x30ca, 0x4897, 0xbd12, 0x0, 0x0);
        gbc.writeMem(0x18cd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xda64);
        EXPECT(gbc.pc(), 0x18cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0232
        gbc.setState(0xdc34, 0xd4ad, 0xbf70, 0x954a, 0x8ae3, 0x8b03, 0x1, 0x0);
        gbc.writeMem(0xdc34, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd4ad);
        EXPECT(gbc.pc(), 0xdc36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc34), 0xcb);
        EXPECT(gbc.readMem(0xdc35), 0x84);
        // CB 84 0233
        gbc.setState(0xed2, 0x4dda, 0xe1b0, 0xdb54, 0xc7d4, 0x23c9, 0x0, 0x1);
        gbc.writeMem(0xed2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4dda);
        EXPECT(gbc.pc(), 0xed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0234
        gbc.setState(0xd031, 0xa0f7, 0x2b00, 0x8999, 0x8ca4, 0xd491, 0x1, 0x1);
        gbc.writeMem(0xd031, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa0f7);
        EXPECT(gbc.pc(), 0xd033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd031), 0xcb);
        EXPECT(gbc.readMem(0xd032), 0x84);
        // CB 84 0235
        gbc.setState(0xe2f5, 0x89a9, 0x18a0, 0xe70e, 0xf8ac, 0xd009, 0x1, 0x1);
        gbc.writeMem(0xe2f5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x89a9);
        EXPECT(gbc.pc(), 0xe2f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f5), 0xcb);
        EXPECT(gbc.readMem(0xe2f6), 0x84);
        // CB 84 0236
        gbc.setState(0xec78, 0x64bb, 0x3c60, 0x7234, 0xe4aa, 0xf034, 0x1, 0x0);
        gbc.writeMem(0xec78, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x64bb);
        EXPECT(gbc.pc(), 0xec7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec78), 0xcb);
        EXPECT(gbc.readMem(0xec79), 0x84);
        // CB 84 0237
        gbc.setState(0x6d3f, 0x6f2f, 0x5000, 0x8d15, 0x821, 0x94e6, 0x0, 0x1);
        gbc.writeMem(0x6d3f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6f2f);
        EXPECT(gbc.pc(), 0x6d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0238
        gbc.setState(0x27c8, 0xd42a, 0xf820, 0xe112, 0xed9e, 0xd164, 0x0, 0x0);
        gbc.writeMem(0x27c8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd42a);
        EXPECT(gbc.pc(), 0x27ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0239
        gbc.setState(0x1816, 0xdfb4, 0x5080, 0x1c6e, 0x5274, 0x4d02, 0x0, 0x0);
        gbc.writeMem(0x1816, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdfb4);
        EXPECT(gbc.pc(), 0x1818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 023A
        gbc.setState(0xd1f6, 0xfced, 0xfb20, 0x4f1b, 0x4e8c, 0x4987, 0x0, 0x1);
        gbc.writeMem(0xd1f6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfced);
        EXPECT(gbc.pc(), 0xd1f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f6), 0xcb);
        EXPECT(gbc.readMem(0xd1f7), 0x84);
        // CB 84 023C
        gbc.setState(0x4360, 0x2e89, 0x2310, 0x1d10, 0x37f2, 0x60fa, 0x1, 0x1);
        gbc.writeMem(0x4360, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2e89);
        EXPECT(gbc.pc(), 0x4362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 023D
        gbc.setState(0x5a69, 0x1e0a, 0xe8a0, 0xe613, 0x6f72, 0x8c8a, 0x1, 0x0);
        gbc.writeMem(0x5a69, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1e0a);
        EXPECT(gbc.pc(), 0x5a6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 023E
        gbc.setState(0xc17d, 0x83de, 0x82a0, 0x4f69, 0x83c, 0xe98c, 0x0, 0x0);
        gbc.writeMem(0xc17d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x83de);
        EXPECT(gbc.pc(), 0xc17f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc17d), 0xcb);
        EXPECT(gbc.readMem(0xc17e), 0x84);
        // CB 84 023F
        gbc.setState(0x5b18, 0x9239, 0x7e20, 0xcde9, 0x80ec, 0x7661, 0x0, 0x0);
        gbc.writeMem(0x5b18, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9239);
        EXPECT(gbc.pc(), 0x5b1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0240
        gbc.setState(0x104a, 0xd405, 0x790, 0xc8ad, 0xca05, 0xfa39, 0x1, 0x1);
        gbc.writeMem(0x104a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd405);
        EXPECT(gbc.pc(), 0x104c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0241
        gbc.setState(0x35a3, 0xbb8f, 0xa640, 0x916d, 0x2741, 0x887c, 0x0, 0x0);
        gbc.writeMem(0x35a3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbb8f);
        EXPECT(gbc.pc(), 0x35a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0242
        gbc.setState(0x68c, 0xbb23, 0x7570, 0x9608, 0x907b, 0xcd25, 0x0, 0x0);
        gbc.writeMem(0x68c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbb23);
        EXPECT(gbc.pc(), 0x68e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0243
        gbc.setState(0xe95f, 0x8e5, 0xc240, 0x5d62, 0xfdf6, 0x8333, 0x0, 0x0);
        gbc.writeMem(0xe95f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8e5);
        EXPECT(gbc.pc(), 0xe961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe95f), 0xcb);
        EXPECT(gbc.readMem(0xe960), 0x84);
        // CB 84 0244
        gbc.setState(0x5894, 0xc1bd, 0x50e0, 0x2d38, 0x3a3, 0xe61c, 0x1, 0x0);
        gbc.writeMem(0x5894, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc1bd);
        EXPECT(gbc.pc(), 0x5896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0245
        gbc.setState(0x2faf, 0xf31b, 0x9930, 0xe50b, 0x9b12, 0xc6ab, 0x1, 0x1);
        gbc.writeMem(0x2faf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf31b);
        EXPECT(gbc.pc(), 0x2fb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0246
        gbc.setState(0x1413, 0x7dba, 0xbdc0, 0xaeaa, 0x3542, 0x6d94, 0x0, 0x1);
        gbc.writeMem(0x1413, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7dba);
        EXPECT(gbc.pc(), 0x1415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0247
        gbc.setState(0xa739, 0x2f3d, 0xd770, 0x42e1, 0xbb8d, 0xcd94, 0x0, 0x1);
        gbc.writeMem(0xa739, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2f3d);
        EXPECT(gbc.pc(), 0xa73b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa739), 0xcb);
        EXPECT(gbc.readMem(0xa73a), 0x84);
        // CB 84 0248
        gbc.setState(0x8a8f, 0x17a8, 0x54b0, 0x8c4, 0xe8be, 0x4b15, 0x1, 0x1);
        gbc.writeMem(0x8a8f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x17a8);
        EXPECT(gbc.pc(), 0x8a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a8f), 0xcb);
        EXPECT(gbc.readMem(0x8a90), 0x84);
        // CB 84 0249
        gbc.setState(0x8a9b, 0x7563, 0xf100, 0xd321, 0x256f, 0xfbf6, 0x1, 0x0);
        gbc.writeMem(0x8a9b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7563);
        EXPECT(gbc.pc(), 0x8a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a9b), 0xcb);
        EXPECT(gbc.readMem(0x8a9c), 0x84);
        // CB 84 024A
        gbc.setState(0x570f, 0xccda, 0xda90, 0xc198, 0xa39e, 0x1144, 0x0, 0x1);
        gbc.writeMem(0x570f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xccda);
        EXPECT(gbc.pc(), 0x5711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 024B
        gbc.setState(0xd503, 0x5ba8, 0x22c0, 0x187f, 0xbfcb, 0xf0be, 0x0, 0x0);
        gbc.writeMem(0xd503, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5ba8);
        EXPECT(gbc.pc(), 0xd505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd503), 0xcb);
        EXPECT(gbc.readMem(0xd504), 0x84);
        // CB 84 024C
        gbc.setState(0x96ce, 0xc9b2, 0x65c0, 0x2c56, 0xfd0, 0xac73, 0x0, 0x0);
        gbc.writeMem(0x96ce, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc9b2);
        EXPECT(gbc.pc(), 0x96d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ce), 0xcb);
        EXPECT(gbc.readMem(0x96cf), 0x84);
        // CB 84 024E
        gbc.setState(0xe4bf, 0x5760, 0x6280, 0x66c3, 0x6f49, 0x9f0a, 0x0, 0x1);
        gbc.writeMem(0xe4bf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5760);
        EXPECT(gbc.pc(), 0xe4c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4bf), 0xcb);
        EXPECT(gbc.readMem(0xe4c0), 0x84);
        // CB 84 024F
        gbc.setState(0x52fc, 0x17fb, 0x2b0, 0x1a1, 0xc417, 0x3c80, 0x1, 0x0);
        gbc.writeMem(0x52fc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x17fb);
        EXPECT(gbc.pc(), 0x52fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0250
        gbc.setState(0x6533, 0xd993, 0x1c60, 0x491e, 0xa045, 0x3f0e, 0x1, 0x0);
        gbc.writeMem(0x6533, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd993);
        EXPECT(gbc.pc(), 0x6535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0251
        gbc.setState(0xb77e, 0xda63, 0x6040, 0x2f02, 0xadca, 0x5d7, 0x0, 0x1);
        gbc.writeMem(0xb77e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xda63);
        EXPECT(gbc.pc(), 0xb780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb77e), 0xcb);
        EXPECT(gbc.readMem(0xb77f), 0x84);
        // CB 84 0252
        gbc.setState(0x709b, 0xcb29, 0x1110, 0xf141, 0x1cee, 0x9f5b, 0x0, 0x0);
        gbc.writeMem(0x709b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xcb29);
        EXPECT(gbc.pc(), 0x709d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0253
        gbc.setState(0x4d0, 0xa55a, 0xb6f0, 0x98c1, 0x8ab, 0x4976, 0x1, 0x1);
        gbc.writeMem(0x4d0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa55a);
        EXPECT(gbc.pc(), 0x4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0254
        gbc.setState(0x1d49, 0x9d61, 0x32f0, 0xe812, 0x2e6f, 0x3035, 0x1, 0x1);
        gbc.writeMem(0x1d49, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9d61);
        EXPECT(gbc.pc(), 0x1d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0255
        gbc.setState(0xcb32, 0xd2a1, 0xd8b0, 0x7d51, 0x703a, 0x5415, 0x1, 0x1);
        gbc.writeMem(0xcb32, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd2a1);
        EXPECT(gbc.pc(), 0xcb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb32), 0xcb);
        EXPECT(gbc.readMem(0xcb33), 0x84);
        // CB 84 0256
        gbc.setState(0xc52d, 0x72b, 0x9170, 0xc21d, 0xce7b, 0x9ed6, 0x1, 0x0);
        gbc.writeMem(0xc52d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x72b);
        EXPECT(gbc.pc(), 0xc52f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc52d), 0xcb);
        EXPECT(gbc.readMem(0xc52e), 0x84);
        // CB 84 0257
        gbc.setState(0x9645, 0x607, 0x7400, 0x1c12, 0xbff7, 0xbc10, 0x0, 0x0);
        gbc.writeMem(0x9645, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x607);
        EXPECT(gbc.pc(), 0x9647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9645), 0xcb);
        EXPECT(gbc.readMem(0x9646), 0x84);
        // CB 84 0258
        gbc.setState(0xb940, 0x6039, 0xcc80, 0x9275, 0x6940, 0x589c, 0x1, 0x0);
        gbc.writeMem(0xb940, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6039);
        EXPECT(gbc.pc(), 0xb942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb940), 0xcb);
        EXPECT(gbc.readMem(0xb941), 0x84);
        // CB 84 0259
        gbc.setState(0x1dcd, 0xcaa8, 0xd390, 0x204c, 0xa0f0, 0xda9a, 0x1, 0x1);
        gbc.writeMem(0x1dcd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xcaa8);
        EXPECT(gbc.pc(), 0x1dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 025A
        gbc.setState(0xdedc, 0x59c3, 0x9a80, 0x6622, 0xb7bf, 0x323e, 0x1, 0x1);
        gbc.writeMem(0xdedc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x59c3);
        EXPECT(gbc.pc(), 0xdede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdedc), 0xcb);
        EXPECT(gbc.readMem(0xdedd), 0x84);
        // CB 84 025B
        gbc.setState(0x4442, 0xbbbc, 0x84a0, 0x6000, 0x1614, 0x8557, 0x0, 0x0);
        gbc.writeMem(0x4442, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbbbc);
        EXPECT(gbc.pc(), 0x4444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 025D
        gbc.setState(0x6175, 0xfd72, 0x5920, 0xe2, 0x62d3, 0x5cb8, 0x1, 0x0);
        gbc.writeMem(0x6175, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfd72);
        EXPECT(gbc.pc(), 0x6177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 025E
        gbc.setState(0x42f6, 0x290e, 0xdad0, 0xded4, 0x31f, 0x3155, 0x0, 0x0);
        gbc.writeMem(0x42f6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x290e);
        EXPECT(gbc.pc(), 0x42f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 025F
        gbc.setState(0x55ee, 0x85ec, 0xc30, 0x8f9e, 0xf297, 0xce20, 0x1, 0x0);
        gbc.writeMem(0x55ee, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x85ec);
        EXPECT(gbc.pc(), 0x55f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0261
        gbc.setState(0x9dc1, 0x5770, 0x1490, 0x3041, 0xe0f5, 0x4a10, 0x1, 0x0);
        gbc.writeMem(0x9dc1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5770);
        EXPECT(gbc.pc(), 0x9dc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc1), 0xcb);
        EXPECT(gbc.readMem(0x9dc2), 0x84);
        // CB 84 0262
        gbc.setState(0xb990, 0x718c, 0x7120, 0x5c5e, 0xf0e4, 0xa4ac, 0x0, 0x0);
        gbc.writeMem(0xb990, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x718c);
        EXPECT(gbc.pc(), 0xb992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb990), 0xcb);
        EXPECT(gbc.readMem(0xb991), 0x84);
        // CB 84 0263
        gbc.setState(0xcc23, 0x8c70, 0x44d0, 0x8942, 0x9052, 0x4a80, 0x1, 0x1);
        gbc.writeMem(0xcc23, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8c70);
        EXPECT(gbc.pc(), 0xcc25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc23), 0xcb);
        EXPECT(gbc.readMem(0xcc24), 0x84);
        // CB 84 0264
        gbc.setState(0xa83c, 0xf079, 0x7560, 0xd8b, 0x7c73, 0xb2f4, 0x1, 0x1);
        gbc.writeMem(0xa83c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf079);
        EXPECT(gbc.pc(), 0xa83e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa83c), 0xcb);
        EXPECT(gbc.readMem(0xa83d), 0x84);
        // CB 84 0265
        gbc.setState(0xafc1, 0xde20, 0x9730, 0xe224, 0x4a86, 0xac8b, 0x0, 0x0);
        gbc.writeMem(0xafc1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xde20);
        EXPECT(gbc.pc(), 0xafc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc1), 0xcb);
        EXPECT(gbc.readMem(0xafc2), 0x84);
        // CB 84 0266
        gbc.setState(0xb3d, 0x623d, 0xc730, 0x27de, 0xc787, 0xc15b, 0x0, 0x1);
        gbc.writeMem(0xb3d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x623d);
        EXPECT(gbc.pc(), 0xb3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0267
        gbc.setState(0xa8df, 0xd0e4, 0xe2b0, 0x25e, 0xbe41, 0x8182, 0x0, 0x1);
        gbc.writeMem(0xa8df, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd0e4);
        EXPECT(gbc.pc(), 0xa8e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8df), 0xcb);
        EXPECT(gbc.readMem(0xa8e0), 0x84);
        // CB 84 0268
        gbc.setState(0xc9da, 0xa777, 0x8680, 0x6ecd, 0xd62e, 0x2b9d, 0x0, 0x1);
        gbc.writeMem(0xc9da, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa777);
        EXPECT(gbc.pc(), 0xc9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9da), 0xcb);
        EXPECT(gbc.readMem(0xc9db), 0x84);
        // CB 84 0269
        gbc.setState(0x5037, 0x2473, 0x6eb0, 0x1450, 0xc468, 0xb0d4, 0x0, 0x1);
        gbc.writeMem(0x5037, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2473);
        EXPECT(gbc.pc(), 0x5039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 026A
        gbc.setState(0x7833, 0xc800, 0xe1f0, 0x34cc, 0x3385, 0x34d0, 0x0, 0x1);
        gbc.writeMem(0x7833, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc800);
        EXPECT(gbc.pc(), 0x7835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 026B
        gbc.setState(0x3b26, 0x2a45, 0xb590, 0x8dac, 0x936a, 0x21fc, 0x0, 0x1);
        gbc.writeMem(0x3b26, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2a45);
        EXPECT(gbc.pc(), 0x3b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 026C
        gbc.setState(0x8ee4, 0x6d46, 0x10b0, 0x1507, 0xefa0, 0x928c, 0x0, 0x1);
        gbc.writeMem(0x8ee4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6d46);
        EXPECT(gbc.pc(), 0x8ee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ee4), 0xcb);
        EXPECT(gbc.readMem(0x8ee5), 0x84);
        // CB 84 026D
        gbc.setState(0x4733, 0x283b, 0x7580, 0xc1aa, 0x4c8b, 0x50e4, 0x1, 0x0);
        gbc.writeMem(0x4733, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x283b);
        EXPECT(gbc.pc(), 0x4735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 026E
        gbc.setState(0xc157, 0x9481, 0xe8c0, 0xe6f1, 0xb9d3, 0xc09a, 0x1, 0x1);
        gbc.writeMem(0xc157, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9481);
        EXPECT(gbc.pc(), 0xc159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc157), 0xcb);
        EXPECT(gbc.readMem(0xc158), 0x84);
        // CB 84 026F
        gbc.setState(0xd004, 0xfa5e, 0x4cf0, 0xbf1e, 0xb2ed, 0x33e6, 0x0, 0x1);
        gbc.writeMem(0xd004, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfa5e);
        EXPECT(gbc.pc(), 0xd006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd004), 0xcb);
        EXPECT(gbc.readMem(0xd005), 0x84);
        // CB 84 0270
        gbc.setState(0x5def, 0x700b, 0x38d0, 0x1ac3, 0xfb3e, 0x5706, 0x0, 0x1);
        gbc.writeMem(0x5def, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x700b);
        EXPECT(gbc.pc(), 0x5df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0271
        gbc.setState(0x8dac, 0x1d3a, 0x5bd0, 0x55f4, 0x68e8, 0xa112, 0x0, 0x0);
        gbc.writeMem(0x8dac, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1d3a);
        EXPECT(gbc.pc(), 0x8dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dac), 0xcb);
        EXPECT(gbc.readMem(0x8dad), 0x84);
        // CB 84 0272
        gbc.setState(0xe529, 0x53fe, 0x7be0, 0x1834, 0xe96, 0x26b, 0x0, 0x0);
        gbc.writeMem(0xe529, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x53fe);
        EXPECT(gbc.pc(), 0xe52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe529), 0xcb);
        EXPECT(gbc.readMem(0xe52a), 0x84);
        // CB 84 0273
        gbc.setState(0x4f33, 0x1dd8, 0xf170, 0xba2d, 0xefa3, 0x1fc8, 0x0, 0x0);
        gbc.writeMem(0x4f33, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1dd8);
        EXPECT(gbc.pc(), 0x4f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0274
        gbc.setState(0xd74b, 0xca94, 0x21b0, 0x4587, 0x1a67, 0xd4c4, 0x0, 0x1);
        gbc.writeMem(0xd74b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xca94);
        EXPECT(gbc.pc(), 0xd74d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd74b), 0xcb);
        EXPECT(gbc.readMem(0xd74c), 0x84);
        // CB 84 0275
        gbc.setState(0x295b, 0x6ef6, 0xbd0, 0x203c, 0x5d5a, 0xa5f0, 0x1, 0x1);
        gbc.writeMem(0x295b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6ef6);
        EXPECT(gbc.pc(), 0x295d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0276
        gbc.setState(0xa0f4, 0xb789, 0xa7b0, 0x2a0f, 0xb016, 0x8768, 0x1, 0x0);
        gbc.writeMem(0xa0f4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb789);
        EXPECT(gbc.pc(), 0xa0f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f4), 0xcb);
        EXPECT(gbc.readMem(0xa0f5), 0x84);
        // CB 84 0277
        gbc.setState(0x4e9b, 0x5e87, 0xa7b0, 0xa61b, 0x296c, 0xd2, 0x1, 0x1);
        gbc.writeMem(0x4e9b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5e87);
        EXPECT(gbc.pc(), 0x4e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0278
        gbc.setState(0x4668, 0xea19, 0xed70, 0x38d7, 0xcff5, 0xdb95, 0x1, 0x1);
        gbc.writeMem(0x4668, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xea19);
        EXPECT(gbc.pc(), 0x466a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0279
        gbc.setState(0x39dc, 0xe1cf, 0xeb0, 0xd42b, 0x1707, 0xb041, 0x0, 0x1);
        gbc.writeMem(0x39dc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe1cf);
        EXPECT(gbc.pc(), 0x39de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 027A
        gbc.setState(0x56fb, 0xa2b5, 0x68b0, 0xea26, 0xf2a6, 0xa2f, 0x0, 0x0);
        gbc.writeMem(0x56fb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa2b5);
        EXPECT(gbc.pc(), 0x56fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 027B
        gbc.setState(0xe8a2, 0xfb4e, 0xc6d0, 0x4993, 0x6c3d, 0x2487, 0x1, 0x0);
        gbc.writeMem(0xe8a2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfb4e);
        EXPECT(gbc.pc(), 0xe8a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a2), 0xcb);
        EXPECT(gbc.readMem(0xe8a3), 0x84);
        // CB 84 027D
        gbc.setState(0x1481, 0x2afb, 0x61a0, 0x6b53, 0xa11e, 0x31a9, 0x1, 0x0);
        gbc.writeMem(0x1481, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2afb);
        EXPECT(gbc.pc(), 0x1483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 027F
        gbc.setState(0x259a, 0x3d99, 0x44b0, 0x3323, 0xbc3f, 0xbf2c, 0x1, 0x1);
        gbc.writeMem(0x259a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3d99);
        EXPECT(gbc.pc(), 0x259c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0280
        gbc.setState(0x8fce, 0x42dc, 0x7d00, 0x2e05, 0xdf9f, 0xe20a, 0x0, 0x1);
        gbc.writeMem(0x8fce, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x42dc);
        EXPECT(gbc.pc(), 0x8fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fce), 0xcb);
        EXPECT(gbc.readMem(0x8fcf), 0x84);
        // CB 84 0281
        gbc.setState(0xb09d, 0xfbe9, 0xa2f0, 0x8035, 0xfdaf, 0x9b56, 0x0, 0x0);
        gbc.writeMem(0xb09d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfbe9);
        EXPECT(gbc.pc(), 0xb09f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb09d), 0xcb);
        EXPECT(gbc.readMem(0xb09e), 0x84);
        // CB 84 0282
        gbc.setState(0x5317, 0x4262, 0x4650, 0x5396, 0x5022, 0xe640, 0x1, 0x0);
        gbc.writeMem(0x5317, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4262);
        EXPECT(gbc.pc(), 0x5319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0283
        gbc.setState(0x68db, 0x3e65, 0xc2b0, 0x8775, 0xe52c, 0x3f8a, 0x0, 0x0);
        gbc.writeMem(0x68db, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3e65);
        EXPECT(gbc.pc(), 0x68dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0284
        gbc.setState(0x6a, 0xeba8, 0x5a00, 0x9db, 0x18a2, 0xa444, 0x0, 0x1);
        gbc.writeMem(0x6a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xeba8);
        EXPECT(gbc.pc(), 0x6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0285
        gbc.setState(0xb849, 0x2811, 0xcf60, 0x874c, 0x7502, 0x1c3, 0x1, 0x1);
        gbc.writeMem(0xb849, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2811);
        EXPECT(gbc.pc(), 0xb84b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb849), 0xcb);
        EXPECT(gbc.readMem(0xb84a), 0x84);
        // CB 84 0286
        gbc.setState(0x9679, 0x32c1, 0x8350, 0x4942, 0xd845, 0x4ef6, 0x1, 0x0);
        gbc.writeMem(0x9679, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x32c1);
        EXPECT(gbc.pc(), 0x967b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9679), 0xcb);
        EXPECT(gbc.readMem(0x967a), 0x84);
        // CB 84 0287
        gbc.setState(0x6969, 0xc5a9, 0xf380, 0xc210, 0xd63a, 0x491f, 0x1, 0x1);
        gbc.writeMem(0x6969, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc5a9);
        EXPECT(gbc.pc(), 0x696b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0288
        gbc.setState(0xd090, 0xa1b0, 0xb040, 0x8637, 0xb015, 0x18f3, 0x0, 0x0);
        gbc.writeMem(0xd090, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa1b0);
        EXPECT(gbc.pc(), 0xd092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd090), 0xcb);
        EXPECT(gbc.readMem(0xd091), 0x84);
        // CB 84 0289
        gbc.setState(0xe212, 0xfe14, 0x9be0, 0x38f, 0x92da, 0xfe86, 0x1, 0x0);
        gbc.writeMem(0xe212, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xfe14);
        EXPECT(gbc.pc(), 0xe214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe212), 0xcb);
        EXPECT(gbc.readMem(0xe213), 0x84);
        // CB 84 028A
        gbc.setState(0x811, 0x9bb6, 0xbd90, 0x39db, 0x59b0, 0x3faf, 0x1, 0x0);
        gbc.writeMem(0x811, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9bb6);
        EXPECT(gbc.pc(), 0x813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 028B
        gbc.setState(0xe3d0, 0xcdbe, 0xbdd0, 0x3fdf, 0x9b64, 0x11c4, 0x0, 0x1);
        gbc.writeMem(0xe3d0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcdbe);
        EXPECT(gbc.pc(), 0xe3d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3d0), 0xcb);
        EXPECT(gbc.readMem(0xe3d1), 0x84);
        // CB 84 028C
        gbc.setState(0xba4d, 0x9fef, 0x88e0, 0xba8a, 0x793a, 0x561, 0x1, 0x1);
        gbc.writeMem(0xba4d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9fef);
        EXPECT(gbc.pc(), 0xba4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba4d), 0xcb);
        EXPECT(gbc.readMem(0xba4e), 0x84);
        // CB 84 028D
        gbc.setState(0x8bd4, 0x9be6, 0xe60, 0x71d5, 0x9c06, 0x78af, 0x1, 0x1);
        gbc.writeMem(0x8bd4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9be6);
        EXPECT(gbc.pc(), 0x8bd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd4), 0xcb);
        EXPECT(gbc.readMem(0x8bd5), 0x84);
        // CB 84 028E
        gbc.setState(0x721b, 0x4985, 0x2cb0, 0x94e6, 0x7d65, 0xb4ab, 0x1, 0x1);
        gbc.writeMem(0x721b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4985);
        EXPECT(gbc.pc(), 0x721d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 028F
        gbc.setState(0x6a4c, 0x3fdb, 0x8f60, 0x3c2e, 0x86ad, 0x5b1b, 0x1, 0x0);
        gbc.writeMem(0x6a4c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3fdb);
        EXPECT(gbc.pc(), 0x6a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0290
        gbc.setState(0x8883, 0x6c38, 0x920, 0x65bf, 0x1e5c, 0xd58c, 0x0, 0x1);
        gbc.writeMem(0x8883, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6c38);
        EXPECT(gbc.pc(), 0x8885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8883), 0xcb);
        EXPECT(gbc.readMem(0x8884), 0x84);
        // CB 84 0291
        gbc.setState(0x5485, 0x40af, 0x2fe0, 0x7642, 0x49d4, 0xa72a, 0x1, 0x1);
        gbc.writeMem(0x5485, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x40af);
        EXPECT(gbc.pc(), 0x5487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0292
        gbc.setState(0x7f3d, 0x99f1, 0xc500, 0x5acb, 0x6979, 0x8c1, 0x0, 0x1);
        gbc.writeMem(0x7f3d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x99f1);
        EXPECT(gbc.pc(), 0x7f3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0293
        gbc.setState(0x3a3f, 0xa6ef, 0xaa50, 0x9a4d, 0x79b9, 0x6b93, 0x1, 0x1);
        gbc.writeMem(0x3a3f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa6ef);
        EXPECT(gbc.pc(), 0x3a41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0294
        gbc.setState(0x12e5, 0xc88b, 0xec20, 0xbb15, 0xf7d8, 0xf0f0, 0x1, 0x0);
        gbc.writeMem(0x12e5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc88b);
        EXPECT(gbc.pc(), 0x12e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0295
        gbc.setState(0x2a7c, 0x109c, 0x9970, 0x20d5, 0xe7a8, 0x3fac, 0x0, 0x0);
        gbc.writeMem(0x2a7c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x109c);
        EXPECT(gbc.pc(), 0x2a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0296
        gbc.setState(0x5649, 0x75dc, 0xdc80, 0x42a6, 0x67de, 0x618b, 0x0, 0x0);
        gbc.writeMem(0x5649, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x75dc);
        EXPECT(gbc.pc(), 0x564b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0297
        gbc.setState(0x2673, 0xb031, 0xbb40, 0xaaa6, 0x700d, 0x4481, 0x0, 0x0);
        gbc.writeMem(0x2673, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb031);
        EXPECT(gbc.pc(), 0x2675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0298
        gbc.setState(0xd656, 0xd12, 0x3ad0, 0xa6d6, 0x211b, 0xb459, 0x1, 0x0);
        gbc.writeMem(0xd656, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd12);
        EXPECT(gbc.pc(), 0xd658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd656), 0xcb);
        EXPECT(gbc.readMem(0xd657), 0x84);
        // CB 84 0299
        gbc.setState(0x96a9, 0xb3df, 0xfb50, 0x31db, 0x5903, 0x7a0c, 0x1, 0x1);
        gbc.writeMem(0x96a9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb3df);
        EXPECT(gbc.pc(), 0x96ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a9), 0xcb);
        EXPECT(gbc.readMem(0x96aa), 0x84);
        // CB 84 029A
        gbc.setState(0x34f8, 0xb843, 0x6df0, 0x1209, 0x3a1, 0x7935, 0x0, 0x1);
        gbc.writeMem(0x34f8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb843);
        EXPECT(gbc.pc(), 0x34fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 029B
        gbc.setState(0x2394, 0x2a58, 0x7e00, 0x38aa, 0xbfdf, 0xb6b1, 0x0, 0x0);
        gbc.writeMem(0x2394, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2a58);
        EXPECT(gbc.pc(), 0x2396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 029C
        gbc.setState(0xd457, 0x4704, 0xfe00, 0xd309, 0x1d95, 0x182, 0x0, 0x0);
        gbc.writeMem(0xd457, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4704);
        EXPECT(gbc.pc(), 0xd459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd457), 0xcb);
        EXPECT(gbc.readMem(0xd458), 0x84);
        // CB 84 029D
        gbc.setState(0x200d, 0x682, 0xd430, 0x14ae, 0x738b, 0x4e98, 0x1, 0x1);
        gbc.writeMem(0x200d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x682);
        EXPECT(gbc.pc(), 0x200f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 029E
        gbc.setState(0x82f4, 0xf3dd, 0xf220, 0xec62, 0x1d14, 0xbb6a, 0x1, 0x0);
        gbc.writeMem(0x82f4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf3dd);
        EXPECT(gbc.pc(), 0x82f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f4), 0xcb);
        EXPECT(gbc.readMem(0x82f5), 0x84);
        // CB 84 029F
        gbc.setState(0xe36e, 0x7be4, 0x9830, 0x9de9, 0x1248, 0x60e2, 0x0, 0x1);
        gbc.writeMem(0xe36e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7be4);
        EXPECT(gbc.pc(), 0xe370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe36e), 0xcb);
        EXPECT(gbc.readMem(0xe36f), 0x84);
        // CB 84 02A1
        gbc.setState(0xb49a, 0xc44e, 0xb950, 0x2ffe, 0x5f8a, 0xbe13, 0x0, 0x0);
        gbc.writeMem(0xb49a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc44e);
        EXPECT(gbc.pc(), 0xb49c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb49a), 0xcb);
        EXPECT(gbc.readMem(0xb49b), 0x84);
        // CB 84 02A2
        gbc.setState(0x22ff, 0xb2c3, 0x8750, 0x5bb, 0x613c, 0xdf10, 0x1, 0x1);
        gbc.writeMem(0x22ff, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb2c3);
        EXPECT(gbc.pc(), 0x2301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02A3
        gbc.setState(0x5e1e, 0xc54e, 0xdf40, 0x350a, 0xf84e, 0x4151, 0x1, 0x0);
        gbc.writeMem(0x5e1e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc54e);
        EXPECT(gbc.pc(), 0x5e20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02A4
        gbc.setState(0xe351, 0x59e0, 0x89e0, 0x46d8, 0x783c, 0x697d, 0x0, 0x0);
        gbc.writeMem(0xe351, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x59e0);
        EXPECT(gbc.pc(), 0xe353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe351), 0xcb);
        EXPECT(gbc.readMem(0xe352), 0x84);
        // CB 84 02A5
        gbc.setState(0xc3e3, 0x13a7, 0xe930, 0xacc, 0x30c6, 0x23d4, 0x0, 0x1);
        gbc.writeMem(0xc3e3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x13a7);
        EXPECT(gbc.pc(), 0xc3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e3), 0xcb);
        EXPECT(gbc.readMem(0xc3e4), 0x84);
        // CB 84 02A7
        gbc.setState(0xaf74, 0xa282, 0x9b60, 0xd7cd, 0x72d5, 0xd2eb, 0x1, 0x0);
        gbc.writeMem(0xaf74, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa282);
        EXPECT(gbc.pc(), 0xaf76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf74), 0xcb);
        EXPECT(gbc.readMem(0xaf75), 0x84);
        // CB 84 02A8
        gbc.setState(0xb884, 0xa1ea, 0x94d0, 0x87ca, 0xc7e3, 0x16fc, 0x0, 0x0);
        gbc.writeMem(0xb884, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa1ea);
        EXPECT(gbc.pc(), 0xb886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb884), 0xcb);
        EXPECT(gbc.readMem(0xb885), 0x84);
        // CB 84 02A9
        gbc.setState(0x870c, 0x7778, 0x6e10, 0x674d, 0xb89f, 0x530e, 0x0, 0x1);
        gbc.writeMem(0x870c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7778);
        EXPECT(gbc.pc(), 0x870e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x870c), 0xcb);
        EXPECT(gbc.readMem(0x870d), 0x84);
        // CB 84 02AA
        gbc.setState(0x67ab, 0x3c98, 0xccd0, 0x90ee, 0x69e7, 0x53bc, 0x1, 0x1);
        gbc.writeMem(0x67ab, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3c98);
        EXPECT(gbc.pc(), 0x67ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02AB
        gbc.setState(0xd9f3, 0xaab3, 0x7b00, 0xc8ba, 0xda67, 0x822b, 0x1, 0x1);
        gbc.writeMem(0xd9f3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xaab3);
        EXPECT(gbc.pc(), 0xd9f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f3), 0xcb);
        EXPECT(gbc.readMem(0xd9f4), 0x84);
        // CB 84 02AC
        gbc.setState(0xa2e3, 0xe844, 0x2060, 0x3fa5, 0x6f16, 0xffd9, 0x0, 0x0);
        gbc.writeMem(0xa2e3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe844);
        EXPECT(gbc.pc(), 0xa2e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e3), 0xcb);
        EXPECT(gbc.readMem(0xa2e4), 0x84);
        // CB 84 02AD
        gbc.setState(0x2c8c, 0xa764, 0xbd40, 0x7949, 0x650b, 0x361b, 0x1, 0x1);
        gbc.writeMem(0x2c8c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa764);
        EXPECT(gbc.pc(), 0x2c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02AF
        gbc.setState(0x8715, 0x539d, 0x3af0, 0x727a, 0x5d73, 0x3512, 0x1, 0x1);
        gbc.writeMem(0x8715, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x539d);
        EXPECT(gbc.pc(), 0x8717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8715), 0xcb);
        EXPECT(gbc.readMem(0x8716), 0x84);
        // CB 84 02B0
        gbc.setState(0x6aec, 0xb968, 0x2b30, 0xf2ef, 0x5671, 0x7e9b, 0x0, 0x0);
        gbc.writeMem(0x6aec, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb968);
        EXPECT(gbc.pc(), 0x6aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02B1
        gbc.setState(0x5c6a, 0x6440, 0x7c40, 0x1f17, 0x30d5, 0x3305, 0x0, 0x1);
        gbc.writeMem(0x5c6a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6440);
        EXPECT(gbc.pc(), 0x5c6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02B2
        gbc.setState(0x3a78, 0x54bb, 0xb550, 0xc06f, 0x6845, 0x6376, 0x1, 0x1);
        gbc.writeMem(0x3a78, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x54bb);
        EXPECT(gbc.pc(), 0x3a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02B3
        gbc.setState(0x6e9c, 0xea3c, 0xb590, 0x8a25, 0xa392, 0x6a0a, 0x0, 0x0);
        gbc.writeMem(0x6e9c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xea3c);
        EXPECT(gbc.pc(), 0x6e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02B4
        gbc.setState(0x73cb, 0x3614, 0xc040, 0x270c, 0x8c97, 0xc060, 0x1, 0x0);
        gbc.writeMem(0x73cb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3614);
        EXPECT(gbc.pc(), 0x73cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02B5
        gbc.setState(0x3b20, 0x7c89, 0xf050, 0x93a0, 0x6ef9, 0x5718, 0x0, 0x0);
        gbc.writeMem(0x3b20, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7c89);
        EXPECT(gbc.pc(), 0x3b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02B6
        gbc.setState(0xd10d, 0x158a, 0x42c0, 0xf823, 0x8946, 0x9019, 0x1, 0x1);
        gbc.writeMem(0xd10d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x158a);
        EXPECT(gbc.pc(), 0xd10f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10d), 0xcb);
        EXPECT(gbc.readMem(0xd10e), 0x84);
        // CB 84 02B7
        gbc.setState(0x887e, 0x54c6, 0xc1d0, 0x9ad2, 0x5177, 0x13c, 0x1, 0x1);
        gbc.writeMem(0x887e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x54c6);
        EXPECT(gbc.pc(), 0x8880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x887e), 0xcb);
        EXPECT(gbc.readMem(0x887f), 0x84);
        // CB 84 02B8
        gbc.setState(0x3341, 0x6aa, 0xd960, 0xc018, 0xffe8, 0x7197, 0x1, 0x0);
        gbc.writeMem(0x3341, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6aa);
        EXPECT(gbc.pc(), 0x3343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02B9
        gbc.setState(0xb811, 0x563a, 0xe7b0, 0xd81f, 0x386b, 0x321f, 0x1, 0x1);
        gbc.writeMem(0xb811, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x563a);
        EXPECT(gbc.pc(), 0xb813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb811), 0xcb);
        EXPECT(gbc.readMem(0xb812), 0x84);
        // CB 84 02BA
        gbc.setState(0xe080, 0x40f9, 0xdce0, 0x2dc7, 0xaafb, 0x8fc1, 0x0, 0x1);
        gbc.writeMem(0xe080, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x40f9);
        EXPECT(gbc.pc(), 0xe082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe080), 0xcb);
        EXPECT(gbc.readMem(0xe081), 0x84);
        // CB 84 02BB
        gbc.setState(0x6ab2, 0xee81, 0x4660, 0xffb5, 0xd1c5, 0x9da, 0x0, 0x0);
        gbc.writeMem(0x6ab2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xee81);
        EXPECT(gbc.pc(), 0x6ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02BC
        gbc.setState(0xb64f, 0x86c0, 0xdf40, 0x6a5e, 0x92d1, 0x9eb8, 0x0, 0x0);
        gbc.writeMem(0xb64f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x86c0);
        EXPECT(gbc.pc(), 0xb651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb64f), 0xcb);
        EXPECT(gbc.readMem(0xb650), 0x84);
        // CB 84 02BD
        gbc.setState(0xc6a2, 0x251e, 0x1940, 0x1768, 0x11df, 0xd9bf, 0x0, 0x0);
        gbc.writeMem(0xc6a2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x251e);
        EXPECT(gbc.pc(), 0xc6a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a2), 0xcb);
        EXPECT(gbc.readMem(0xc6a3), 0x84);
        // CB 84 02BE
        gbc.setState(0x8e37, 0xf30b, 0x9220, 0xd199, 0xedc6, 0x178f, 0x1, 0x0);
        gbc.writeMem(0x8e37, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf30b);
        EXPECT(gbc.pc(), 0x8e39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e37), 0xcb);
        EXPECT(gbc.readMem(0x8e38), 0x84);
        // CB 84 02C0
        gbc.setState(0x45f5, 0xa899, 0xeee0, 0xb33e, 0x8521, 0xcfb1, 0x1, 0x1);
        gbc.writeMem(0x45f5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa899);
        EXPECT(gbc.pc(), 0x45f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02C1
        gbc.setState(0x880c, 0x4c68, 0x5790, 0x4b1d, 0x3b3b, 0x7e1d, 0x0, 0x1);
        gbc.writeMem(0x880c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4c68);
        EXPECT(gbc.pc(), 0x880e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x880c), 0xcb);
        EXPECT(gbc.readMem(0x880d), 0x84);
        // CB 84 02C2
        gbc.setState(0xb6c4, 0xf3b3, 0x9910, 0x141e, 0x1416, 0xb0b6, 0x0, 0x0);
        gbc.writeMem(0xb6c4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf3b3);
        EXPECT(gbc.pc(), 0xb6c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6c4), 0xcb);
        EXPECT(gbc.readMem(0xb6c5), 0x84);
        // CB 84 02C4
        gbc.setState(0x8b69, 0x7e46, 0x2c80, 0xf88c, 0x2dd4, 0x2ce4, 0x0, 0x1);
        gbc.writeMem(0x8b69, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7e46);
        EXPECT(gbc.pc(), 0x8b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b69), 0xcb);
        EXPECT(gbc.readMem(0x8b6a), 0x84);
        // CB 84 02C5
        gbc.setState(0x106, 0xc1a, 0x9a10, 0x92b4, 0x242, 0xa419, 0x1, 0x0);
        gbc.writeMem(0x106, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc1a);
        EXPECT(gbc.pc(), 0x108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02C6
        gbc.setState(0x85d8, 0xcc96, 0x80b0, 0x4e2b, 0x95f4, 0xe07e, 0x0, 0x1);
        gbc.writeMem(0x85d8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xcc96);
        EXPECT(gbc.pc(), 0x85da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d8), 0xcb);
        EXPECT(gbc.readMem(0x85d9), 0x84);
        // CB 84 02C7
        gbc.setState(0x1028, 0x379f, 0xc6f0, 0x2b1d, 0x9a3, 0x4e1, 0x0, 0x1);
        gbc.writeMem(0x1028, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x379f);
        EXPECT(gbc.pc(), 0x102a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02C8
        gbc.setState(0x3335, 0x5122, 0x1970, 0x7251, 0xacd9, 0x8a7a, 0x0, 0x0);
        gbc.writeMem(0x3335, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5122);
        EXPECT(gbc.pc(), 0x3337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02C9
        gbc.setState(0x8941, 0xd1b, 0x5be0, 0xd99d, 0x7a04, 0x53bf, 0x1, 0x1);
        gbc.writeMem(0x8941, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd1b);
        EXPECT(gbc.pc(), 0x8943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8941), 0xcb);
        EXPECT(gbc.readMem(0x8942), 0x84);
        // CB 84 02CA
        gbc.setState(0xc08b, 0xa594, 0x6420, 0xef85, 0x781b, 0xbb4a, 0x0, 0x1);
        gbc.writeMem(0xc08b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa594);
        EXPECT(gbc.pc(), 0xc08d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc08b), 0xcb);
        EXPECT(gbc.readMem(0xc08c), 0x84);
        // CB 84 02CB
        gbc.setState(0x1df0, 0x127d, 0x8a90, 0x65c2, 0x82f9, 0x8f44, 0x0, 0x0);
        gbc.writeMem(0x1df0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x127d);
        EXPECT(gbc.pc(), 0x1df2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02CC
        gbc.setState(0x134f, 0x5951, 0x86c0, 0x21f0, 0x9301, 0x5404, 0x1, 0x0);
        gbc.writeMem(0x134f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5951);
        EXPECT(gbc.pc(), 0x1351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02CD
        gbc.setState(0x151f, 0xb36a, 0x5190, 0x147, 0xdacc, 0x1fa4, 0x1, 0x1);
        gbc.writeMem(0x151f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb36a);
        EXPECT(gbc.pc(), 0x1521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02CE
        gbc.setState(0x89d4, 0xd5b3, 0xe540, 0x983a, 0x46ee, 0x81de, 0x1, 0x0);
        gbc.writeMem(0x89d4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd5b3);
        EXPECT(gbc.pc(), 0x89d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d4), 0xcb);
        EXPECT(gbc.readMem(0x89d5), 0x84);
        // CB 84 02CF
        gbc.setState(0x884b, 0xe9a1, 0xcfc0, 0xef53, 0xc09a, 0xb730, 0x1, 0x1);
        gbc.writeMem(0x884b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe9a1);
        EXPECT(gbc.pc(), 0x884d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x884b), 0xcb);
        EXPECT(gbc.readMem(0x884c), 0x84);
        // CB 84 02D0
        gbc.setState(0x443a, 0xda, 0xe880, 0x4324, 0x9b1c, 0xe33d, 0x0, 0x0);
        gbc.writeMem(0x443a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xda);
        EXPECT(gbc.pc(), 0x443c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02D1
        gbc.setState(0xd0d1, 0x4f4, 0xf880, 0xf6f9, 0x8eb3, 0x983c, 0x0, 0x1);
        gbc.writeMem(0xd0d1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4f4);
        EXPECT(gbc.pc(), 0xd0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d1), 0xcb);
        EXPECT(gbc.readMem(0xd0d2), 0x84);
        // CB 84 02D2
        gbc.setState(0x8417, 0x7f5a, 0xd210, 0xd4fd, 0x2f66, 0xafea, 0x1, 0x1);
        gbc.writeMem(0x8417, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7f5a);
        EXPECT(gbc.pc(), 0x8419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8417), 0xcb);
        EXPECT(gbc.readMem(0x8418), 0x84);
        // CB 84 02D3
        gbc.setState(0xb006, 0xac1b, 0x3a30, 0xfb47, 0xb12, 0x985d, 0x0, 0x0);
        gbc.writeMem(0xb006, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xac1b);
        EXPECT(gbc.pc(), 0xb008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb006), 0xcb);
        EXPECT(gbc.readMem(0xb007), 0x84);
        // CB 84 02D5
        gbc.setState(0x4584, 0xd1d2, 0x1b20, 0x787a, 0x740e, 0xb8e7, 0x1, 0x0);
        gbc.writeMem(0x4584, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd1d2);
        EXPECT(gbc.pc(), 0x4586);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02D6
        gbc.setState(0xb25e, 0x453c, 0x300, 0x57af, 0x93e4, 0x7691, 0x0, 0x1);
        gbc.writeMem(0xb25e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x453c);
        EXPECT(gbc.pc(), 0xb260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25e), 0xcb);
        EXPECT(gbc.readMem(0xb25f), 0x84);
        // CB 84 02D7
        gbc.setState(0xd6ef, 0x2de8, 0xd930, 0x5e56, 0x6b7e, 0x37d8, 0x0, 0x0);
        gbc.writeMem(0xd6ef, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2de8);
        EXPECT(gbc.pc(), 0xd6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ef), 0xcb);
        EXPECT(gbc.readMem(0xd6f0), 0x84);
        // CB 84 02D9
        gbc.setState(0x5030, 0xd705, 0x97f0, 0xa725, 0xc4dd, 0x6398, 0x0, 0x1);
        gbc.writeMem(0x5030, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd705);
        EXPECT(gbc.pc(), 0x5032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02DA
        gbc.setState(0x748b, 0x30c9, 0x16c0, 0xf1e, 0xc01b, 0x28eb, 0x0, 0x0);
        gbc.writeMem(0x748b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x30c9);
        EXPECT(gbc.pc(), 0x748d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02DB
        gbc.setState(0xc905, 0xe44f, 0x9280, 0x4fdb, 0xf406, 0x9b7e, 0x1, 0x1);
        gbc.writeMem(0xc905, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe44f);
        EXPECT(gbc.pc(), 0xc907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc905), 0xcb);
        EXPECT(gbc.readMem(0xc906), 0x84);
        // CB 84 02DC
        gbc.setState(0xe8cb, 0xb380, 0x3c90, 0xd144, 0x6646, 0x597e, 0x0, 0x1);
        gbc.writeMem(0xe8cb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb380);
        EXPECT(gbc.pc(), 0xe8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8cb), 0xcb);
        EXPECT(gbc.readMem(0xe8cc), 0x84);
        // CB 84 02DD
        gbc.setState(0xad7b, 0x2eb2, 0xae30, 0x6555, 0x16f7, 0xd6d5, 0x0, 0x0);
        gbc.writeMem(0xad7b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2eb2);
        EXPECT(gbc.pc(), 0xad7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad7b), 0xcb);
        EXPECT(gbc.readMem(0xad7c), 0x84);
        // CB 84 02DE
        gbc.setState(0xbb2a, 0xa13b, 0x27a0, 0x9fa3, 0xfbb8, 0xdb76, 0x1, 0x0);
        gbc.writeMem(0xbb2a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa13b);
        EXPECT(gbc.pc(), 0xbb2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2a), 0xcb);
        EXPECT(gbc.readMem(0xbb2b), 0x84);
        // CB 84 02DF
        gbc.setState(0x587d, 0x434f, 0x7270, 0x394e, 0xa177, 0x29ae, 0x1, 0x1);
        gbc.writeMem(0x587d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x434f);
        EXPECT(gbc.pc(), 0x587f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02E0
        gbc.setState(0x757b, 0xe374, 0x79e0, 0x530c, 0xd857, 0xedcd, 0x1, 0x1);
        gbc.writeMem(0x757b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe374);
        EXPECT(gbc.pc(), 0x757d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02E1
        gbc.setState(0xacf5, 0x5da, 0x340, 0xb27f, 0xe932, 0xd19, 0x0, 0x1);
        gbc.writeMem(0xacf5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5da);
        EXPECT(gbc.pc(), 0xacf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf5), 0xcb);
        EXPECT(gbc.readMem(0xacf6), 0x84);
        // CB 84 02E2
        gbc.setState(0x1d31, 0x7c4f, 0xa330, 0xc40d, 0xaf7b, 0xc1a, 0x1, 0x0);
        gbc.writeMem(0x1d31, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7c4f);
        EXPECT(gbc.pc(), 0x1d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02E3
        gbc.setState(0x50b, 0x5940, 0x2fc0, 0x5a64, 0xfab1, 0xbb8d, 0x0, 0x1);
        gbc.writeMem(0x50b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5940);
        EXPECT(gbc.pc(), 0x50d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02E4
        gbc.setState(0x1d07, 0xb3f4, 0x5980, 0x3c38, 0x2f84, 0xc513, 0x0, 0x1);
        gbc.writeMem(0x1d07, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb3f4);
        EXPECT(gbc.pc(), 0x1d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02E5
        gbc.setState(0x8049, 0xab73, 0xd820, 0xac4, 0xc6d1, 0x258a, 0x1, 0x1);
        gbc.writeMem(0x8049, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xab73);
        EXPECT(gbc.pc(), 0x804b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8049), 0xcb);
        EXPECT(gbc.readMem(0x804a), 0x84);
        // CB 84 02E6
        gbc.setState(0x6eff, 0xf7d7, 0xc4e0, 0x11c6, 0x3d6f, 0x46d1, 0x0, 0x1);
        gbc.writeMem(0x6eff, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf7d7);
        EXPECT(gbc.pc(), 0x6f01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02E7
        gbc.setState(0x73db, 0x21ed, 0x2e50, 0x7f79, 0xb24b, 0x58a1, 0x0, 0x1);
        gbc.writeMem(0x73db, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x21ed);
        EXPECT(gbc.pc(), 0x73dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02E8
        gbc.setState(0xe906, 0x828e, 0x1790, 0xf05e, 0xdafa, 0x6707, 0x0, 0x1);
        gbc.writeMem(0xe906, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x828e);
        EXPECT(gbc.pc(), 0xe908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe906), 0xcb);
        EXPECT(gbc.readMem(0xe907), 0x84);
        // CB 84 02EA
        gbc.setState(0x3ed2, 0xa85a, 0x9590, 0x285c, 0xb191, 0x1d15, 0x1, 0x1);
        gbc.writeMem(0x3ed2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa85a);
        EXPECT(gbc.pc(), 0x3ed4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02EB
        gbc.setState(0x4b66, 0xda4d, 0xf2c0, 0x21cf, 0x80eb, 0x9bd9, 0x1, 0x1);
        gbc.writeMem(0x4b66, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xda4d);
        EXPECT(gbc.pc(), 0x4b68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02EC
        gbc.setState(0x29b3, 0x7a5d, 0x4ee0, 0xa36d, 0x2a6a, 0x57d9, 0x1, 0x1);
        gbc.writeMem(0x29b3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7a5d);
        EXPECT(gbc.pc(), 0x29b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02ED
        gbc.setState(0x768e, 0x56af, 0xbcf0, 0x696a, 0xc72b, 0x409b, 0x0, 0x1);
        gbc.writeMem(0x768e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x56af);
        EXPECT(gbc.pc(), 0x7690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02EE
        gbc.setState(0xefca, 0x82e5, 0xd910, 0x15ca, 0xb97e, 0x3fae, 0x0, 0x1);
        gbc.writeMem(0xefca, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x82e5);
        EXPECT(gbc.pc(), 0xefcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefca), 0xcb);
        EXPECT(gbc.readMem(0xefcb), 0x84);
        // CB 84 02EF
        gbc.setState(0xa29d, 0x59c2, 0x11d0, 0x87ca, 0xa297, 0x10f5, 0x0, 0x1);
        gbc.writeMem(0xa29d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x59c2);
        EXPECT(gbc.pc(), 0xa29f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa29d), 0xcb);
        EXPECT(gbc.readMem(0xa29e), 0x84);
        // CB 84 02F0
        gbc.setState(0x90e4, 0x2dbf, 0x8080, 0x2692, 0xd34c, 0xbcfc, 0x1, 0x1);
        gbc.writeMem(0x90e4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2dbf);
        EXPECT(gbc.pc(), 0x90e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e4), 0xcb);
        EXPECT(gbc.readMem(0x90e5), 0x84);
        // CB 84 02F1
        gbc.setState(0xec01, 0x5a62, 0xa590, 0x28da, 0x8cbf, 0xa3e3, 0x0, 0x0);
        gbc.writeMem(0xec01, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5a62);
        EXPECT(gbc.pc(), 0xec03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec01), 0xcb);
        EXPECT(gbc.readMem(0xec02), 0x84);
        // CB 84 02F3
        gbc.setState(0xd88e, 0x9fc, 0xa2a0, 0xc28c, 0x8184, 0x1337, 0x0, 0x0);
        gbc.writeMem(0xd88e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9fc);
        EXPECT(gbc.pc(), 0xd890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88e), 0xcb);
        EXPECT(gbc.readMem(0xd88f), 0x84);
        // CB 84 02F4
        gbc.setState(0xbefe, 0x23bb, 0x9a40, 0x4149, 0x79e5, 0x6e1b, 0x0, 0x0);
        gbc.writeMem(0xbefe, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x23bb);
        EXPECT(gbc.pc(), 0xbf00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbefe), 0xcb);
        EXPECT(gbc.readMem(0xbeff), 0x84);
        // CB 84 02F5
        gbc.setState(0x8434, 0xa58b, 0x82e0, 0x80, 0x75ee, 0xcdae, 0x0, 0x1);
        gbc.writeMem(0x8434, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa58b);
        EXPECT(gbc.pc(), 0x8436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8434), 0xcb);
        EXPECT(gbc.readMem(0x8435), 0x84);
        // CB 84 02F6
        gbc.setState(0x5a09, 0x2cd1, 0xbb60, 0x6bad, 0xe0fc, 0xb7ca, 0x1, 0x1);
        gbc.writeMem(0x5a09, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2cd1);
        EXPECT(gbc.pc(), 0x5a0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02F7
        gbc.setState(0xd8e9, 0x95db, 0xddb0, 0xbe59, 0x904b, 0x8a4, 0x0, 0x1);
        gbc.writeMem(0xd8e9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x95db);
        EXPECT(gbc.pc(), 0xd8eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8e9), 0xcb);
        EXPECT(gbc.readMem(0xd8ea), 0x84);
        // CB 84 02F8
        gbc.setState(0x3b, 0x52e5, 0x9d20, 0xdd87, 0x3c42, 0x21b8, 0x0, 0x0);
        gbc.writeMem(0x3b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x52e5);
        EXPECT(gbc.pc(), 0x3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02F9
        gbc.setState(0x200a, 0xfd8b, 0xe0b0, 0x11ed, 0x92c5, 0x2e80, 0x1, 0x1);
        gbc.writeMem(0x200a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xfd8b);
        EXPECT(gbc.pc(), 0x200c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02FB
        gbc.setState(0x752, 0x8654, 0x5b90, 0x28f8, 0xd628, 0x4779, 0x0, 0x0);
        gbc.writeMem(0x752, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8654);
        EXPECT(gbc.pc(), 0x754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 02FC
        gbc.setState(0x8ff3, 0xddd1, 0x3ca0, 0x2ba3, 0x2628, 0x2794, 0x0, 0x0);
        gbc.writeMem(0x8ff3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xddd1);
        EXPECT(gbc.pc(), 0x8ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff3), 0xcb);
        EXPECT(gbc.readMem(0x8ff4), 0x84);
        // CB 84 02FD
        gbc.setState(0xae01, 0x13fd, 0xd0, 0x9a8b, 0xc8fb, 0xe0c8, 0x0, 0x1);
        gbc.writeMem(0xae01, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x13fd);
        EXPECT(gbc.pc(), 0xae03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae01), 0xcb);
        EXPECT(gbc.readMem(0xae02), 0x84);
        // CB 84 02FE
        gbc.setState(0x7263, 0x1a52, 0x8640, 0x1b40, 0xf8ef, 0xf0e9, 0x0, 0x1);
        gbc.writeMem(0x7263, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1a52);
        EXPECT(gbc.pc(), 0x7265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 02FF
        gbc.setState(0xc370, 0x6c80, 0xf9b0, 0x4fba, 0xe9e9, 0xe111, 0x0, 0x1);
        gbc.writeMem(0xc370, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6c80);
        EXPECT(gbc.pc(), 0xc372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc370), 0xcb);
        EXPECT(gbc.readMem(0xc371), 0x84);
        // CB 84 0301
        gbc.setState(0xc047, 0x4a48, 0x4150, 0x6e9e, 0x86fb, 0x6e85, 0x1, 0x1);
        gbc.writeMem(0xc047, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4a48);
        EXPECT(gbc.pc(), 0xc049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc047), 0xcb);
        EXPECT(gbc.readMem(0xc048), 0x84);
        // CB 84 0302
        gbc.setState(0x1831, 0xd42e, 0xa120, 0x3803, 0x497c, 0x119e, 0x0, 0x1);
        gbc.writeMem(0x1831, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd42e);
        EXPECT(gbc.pc(), 0x1833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0303
        gbc.setState(0x491e, 0x1f83, 0x7f50, 0xa378, 0x89e3, 0xd49d, 0x1, 0x1);
        gbc.writeMem(0x491e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1f83);
        EXPECT(gbc.pc(), 0x4920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0304
        gbc.setState(0xdc5d, 0x849c, 0xf950, 0xcef1, 0xf482, 0x183, 0x1, 0x0);
        gbc.writeMem(0xdc5d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x849c);
        EXPECT(gbc.pc(), 0xdc5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc5d), 0xcb);
        EXPECT(gbc.readMem(0xdc5e), 0x84);
        // CB 84 0305
        gbc.setState(0xb1bf, 0x39e2, 0x6710, 0x78d2, 0xad95, 0xa833, 0x1, 0x1);
        gbc.writeMem(0xb1bf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x39e2);
        EXPECT(gbc.pc(), 0xb1c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1bf), 0xcb);
        EXPECT(gbc.readMem(0xb1c0), 0x84);
        // CB 84 0306
        gbc.setState(0x8027, 0x51d3, 0x1260, 0x2af6, 0x264a, 0xdb38, 0x1, 0x0);
        gbc.writeMem(0x8027, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x51d3);
        EXPECT(gbc.pc(), 0x8029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8027), 0xcb);
        EXPECT(gbc.readMem(0x8028), 0x84);
        // CB 84 0307
        gbc.setState(0x19e0, 0xcc2c, 0x4290, 0x45f4, 0x26b6, 0x27fe, 0x1, 0x1);
        gbc.writeMem(0x19e0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xcc2c);
        EXPECT(gbc.pc(), 0x19e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0308
        gbc.setState(0x5008, 0xe92b, 0x69e0, 0xc00a, 0xe6f0, 0xd65c, 0x0, 0x1);
        gbc.writeMem(0x5008, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe92b);
        EXPECT(gbc.pc(), 0x500a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0309
        gbc.setState(0x26e1, 0x6f, 0x99c0, 0x25f6, 0x1fa0, 0xdb55, 0x0, 0x0);
        gbc.writeMem(0x26e1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6f);
        EXPECT(gbc.pc(), 0x26e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 030A
        gbc.setState(0x29d1, 0x383b, 0x5730, 0x5575, 0xeb8c, 0xe468, 0x1, 0x1);
        gbc.writeMem(0x29d1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x383b);
        EXPECT(gbc.pc(), 0x29d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 030B
        gbc.setState(0xe0ec, 0x6fea, 0xcf20, 0xd8d6, 0x3fd8, 0xf029, 0x0, 0x1);
        gbc.writeMem(0xe0ec, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6fea);
        EXPECT(gbc.pc(), 0xe0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ec), 0xcb);
        EXPECT(gbc.readMem(0xe0ed), 0x84);
        // CB 84 030C
        gbc.setState(0x3ec9, 0xbc94, 0x7500, 0xa86f, 0x1efb, 0xccd4, 0x0, 0x1);
        gbc.writeMem(0x3ec9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbc94);
        EXPECT(gbc.pc(), 0x3ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 030D
        gbc.setState(0x4213, 0x8ab4, 0x8330, 0xbae2, 0xdd78, 0x541b, 0x0, 0x1);
        gbc.writeMem(0x4213, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8ab4);
        EXPECT(gbc.pc(), 0x4215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 030E
        gbc.setState(0x3a57, 0x558, 0x5de0, 0xfb42, 0x29d0, 0x8561, 0x0, 0x1);
        gbc.writeMem(0x3a57, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x558);
        EXPECT(gbc.pc(), 0x3a59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 030F
        gbc.setState(0x1fbf, 0x409e, 0x9000, 0x5861, 0x2137, 0xeadc, 0x1, 0x1);
        gbc.writeMem(0x1fbf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x409e);
        EXPECT(gbc.pc(), 0x1fc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0310
        gbc.setState(0x9cbc, 0x9e52, 0xa660, 0xb182, 0x57d8, 0x5002, 0x1, 0x1);
        gbc.writeMem(0x9cbc, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9e52);
        EXPECT(gbc.pc(), 0x9cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cbc), 0xcb);
        EXPECT(gbc.readMem(0x9cbd), 0x84);
        // CB 84 0311
        gbc.setState(0x4e6f, 0x304c, 0x47a0, 0x464a, 0xe7c, 0xdf5c, 0x1, 0x1);
        gbc.writeMem(0x4e6f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x304c);
        EXPECT(gbc.pc(), 0x4e71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0312
        gbc.setState(0xd6e4, 0x2667, 0x27f0, 0x1c51, 0x83c4, 0xdd95, 0x0, 0x1);
        gbc.writeMem(0xd6e4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2667);
        EXPECT(gbc.pc(), 0xd6e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e4), 0xcb);
        EXPECT(gbc.readMem(0xd6e5), 0x84);
        // CB 84 0316
        gbc.setState(0x3412, 0xda00, 0x5140, 0x6e12, 0x3157, 0x7c93, 0x1, 0x1);
        gbc.writeMem(0x3412, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xda00);
        EXPECT(gbc.pc(), 0x3414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0317
        gbc.setState(0x65f0, 0x971e, 0xa1f0, 0xb4fc, 0xc439, 0x6936, 0x1, 0x0);
        gbc.writeMem(0x65f0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x971e);
        EXPECT(gbc.pc(), 0x65f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0318
        gbc.setState(0x9bf3, 0x9851, 0x7650, 0x5a45, 0x9258, 0x1d9, 0x1, 0x1);
        gbc.writeMem(0x9bf3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9851);
        EXPECT(gbc.pc(), 0x9bf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf3), 0xcb);
        EXPECT(gbc.readMem(0x9bf4), 0x84);
        // CB 84 0319
        gbc.setState(0x53db, 0xf8ea, 0xdd90, 0x435f, 0x6197, 0x3b3a, 0x0, 0x0);
        gbc.writeMem(0x53db, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf8ea);
        EXPECT(gbc.pc(), 0x53dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 031A
        gbc.setState(0xa08b, 0x7b0f, 0xf8d0, 0x88d7, 0xb929, 0xb6f4, 0x0, 0x1);
        gbc.writeMem(0xa08b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7b0f);
        EXPECT(gbc.pc(), 0xa08d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa08b), 0xcb);
        EXPECT(gbc.readMem(0xa08c), 0x84);
        // CB 84 031B
        gbc.setState(0x7a40, 0xaf6f, 0x90c0, 0x13b8, 0x6cf8, 0xfb12, 0x0, 0x1);
        gbc.writeMem(0x7a40, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xaf6f);
        EXPECT(gbc.pc(), 0x7a42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 031C
        gbc.setState(0x44a7, 0x5ab6, 0x7880, 0xf319, 0xaf92, 0x9d17, 0x1, 0x1);
        gbc.writeMem(0x44a7, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5ab6);
        EXPECT(gbc.pc(), 0x44a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 031D
        gbc.setState(0x3762, 0xf24b, 0x6d30, 0x2a64, 0x7fbe, 0xe09d, 0x0, 0x1);
        gbc.writeMem(0x3762, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf24b);
        EXPECT(gbc.pc(), 0x3764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 031E
        gbc.setState(0xccb3, 0x1ce4, 0x7c90, 0xdca6, 0x8db5, 0x38ab, 0x0, 0x1);
        gbc.writeMem(0xccb3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1ce4);
        EXPECT(gbc.pc(), 0xccb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccb3), 0xcb);
        EXPECT(gbc.readMem(0xccb4), 0x84);
        // CB 84 031F
        gbc.setState(0x5e4a, 0x867, 0xdc60, 0x7717, 0xf2b8, 0xe060, 0x1, 0x1);
        gbc.writeMem(0x5e4a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x867);
        EXPECT(gbc.pc(), 0x5e4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0320
        gbc.setState(0xeba6, 0x6462, 0x6900, 0x8965, 0xefd9, 0x1eb0, 0x1, 0x1);
        gbc.writeMem(0xeba6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6462);
        EXPECT(gbc.pc(), 0xeba8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba6), 0xcb);
        EXPECT(gbc.readMem(0xeba7), 0x84);
        // CB 84 0321
        gbc.setState(0xa465, 0x7a32, 0xfa30, 0x17ae, 0x5081, 0x322b, 0x0, 0x1);
        gbc.writeMem(0xa465, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7a32);
        EXPECT(gbc.pc(), 0xa467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa465), 0xcb);
        EXPECT(gbc.readMem(0xa466), 0x84);
        // CB 84 0322
        gbc.setState(0x84f1, 0x6690, 0x1ea0, 0xf01b, 0x7704, 0x9aef, 0x1, 0x0);
        gbc.writeMem(0x84f1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6690);
        EXPECT(gbc.pc(), 0x84f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f1), 0xcb);
        EXPECT(gbc.readMem(0x84f2), 0x84);
        // CB 84 0323
        gbc.setState(0xd40a, 0x8870, 0x9c0, 0x6aab, 0xbf4b, 0x60b9, 0x1, 0x0);
        gbc.writeMem(0xd40a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8870);
        EXPECT(gbc.pc(), 0xd40c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd40a), 0xcb);
        EXPECT(gbc.readMem(0xd40b), 0x84);
        // CB 84 0324
        gbc.setState(0x2204, 0x5825, 0x630, 0x82d6, 0x8f3e, 0xfe90, 0x0, 0x1);
        gbc.writeMem(0x2204, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5825);
        EXPECT(gbc.pc(), 0x2206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0325
        gbc.setState(0x213a, 0x5733, 0xb4e0, 0x34a4, 0x9e58, 0x4bb4, 0x0, 0x0);
        gbc.writeMem(0x213a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5733);
        EXPECT(gbc.pc(), 0x213c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0326
        gbc.setState(0xc2ba, 0x3e30, 0xbf40, 0xb39f, 0xfb06, 0xf46, 0x1, 0x1);
        gbc.writeMem(0xc2ba, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3e30);
        EXPECT(gbc.pc(), 0xc2bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ba), 0xcb);
        EXPECT(gbc.readMem(0xc2bb), 0x84);
        // CB 84 0327
        gbc.setState(0x93ef, 0x61cd, 0x9250, 0x9f68, 0x41bc, 0x27cc, 0x1, 0x0);
        gbc.writeMem(0x93ef, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x61cd);
        EXPECT(gbc.pc(), 0x93f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ef), 0xcb);
        EXPECT(gbc.readMem(0x93f0), 0x84);
        // CB 84 0328
        gbc.setState(0x51fa, 0x49ce, 0xc7a0, 0xe84d, 0xe45b, 0xcd05, 0x0, 0x1);
        gbc.writeMem(0x51fa, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x49ce);
        EXPECT(gbc.pc(), 0x51fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0329
        gbc.setState(0xe787, 0x172c, 0x8e20, 0x89f6, 0x84a2, 0x9cea, 0x1, 0x1);
        gbc.writeMem(0xe787, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x172c);
        EXPECT(gbc.pc(), 0xe789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe787), 0xcb);
        EXPECT(gbc.readMem(0xe788), 0x84);
        // CB 84 032A
        gbc.setState(0x394f, 0x9f80, 0x52f0, 0xe252, 0x5c18, 0x7d82, 0x0, 0x1);
        gbc.writeMem(0x394f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9f80);
        EXPECT(gbc.pc(), 0x3951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 032B
        gbc.setState(0x2aa0, 0xf8d6, 0x47a0, 0x3099, 0xb025, 0x77cf, 0x1, 0x0);
        gbc.writeMem(0x2aa0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf8d6);
        EXPECT(gbc.pc(), 0x2aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 032C
        gbc.setState(0xbd34, 0x8312, 0x7dd0, 0xe078, 0xeae4, 0xfa7b, 0x0, 0x0);
        gbc.writeMem(0xbd34, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8312);
        EXPECT(gbc.pc(), 0xbd36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd34), 0xcb);
        EXPECT(gbc.readMem(0xbd35), 0x84);
        // CB 84 032D
        gbc.setState(0x2c49, 0x7a5e, 0xaa10, 0x4314, 0xe82c, 0x8c0f, 0x0, 0x1);
        gbc.writeMem(0x2c49, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7a5e);
        EXPECT(gbc.pc(), 0x2c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 032E
        gbc.setState(0x90d9, 0x365c, 0xc6e0, 0x5238, 0xcc06, 0xde1d, 0x0, 0x0);
        gbc.writeMem(0x90d9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x365c);
        EXPECT(gbc.pc(), 0x90db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d9), 0xcb);
        EXPECT(gbc.readMem(0x90da), 0x84);
        // CB 84 032F
        gbc.setState(0x4fa6, 0xd1c0, 0x6280, 0xc52a, 0xd258, 0x7972, 0x1, 0x0);
        gbc.writeMem(0x4fa6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd1c0);
        EXPECT(gbc.pc(), 0x4fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0330
        gbc.setState(0xb6ad, 0xb1b3, 0x6fa0, 0xed03, 0x45a1, 0xada4, 0x1, 0x0);
        gbc.writeMem(0xb6ad, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb1b3);
        EXPECT(gbc.pc(), 0xb6af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ad), 0xcb);
        EXPECT(gbc.readMem(0xb6ae), 0x84);
        // CB 84 0331
        gbc.setState(0x9916, 0x4a5b, 0x44e0, 0xe442, 0x7a67, 0x430d, 0x1, 0x1);
        gbc.writeMem(0x9916, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4a5b);
        EXPECT(gbc.pc(), 0x9918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9916), 0xcb);
        EXPECT(gbc.readMem(0x9917), 0x84);
        // CB 84 0332
        gbc.setState(0x4984, 0x3cd, 0x4940, 0x83dd, 0xfcb0, 0xeed0, 0x1, 0x0);
        gbc.writeMem(0x4984, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3cd);
        EXPECT(gbc.pc(), 0x4986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0333
        gbc.setState(0xcb43, 0xbc30, 0x3c10, 0x9fec, 0x97de, 0x3be3, 0x0, 0x0);
        gbc.writeMem(0xcb43, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xbc30);
        EXPECT(gbc.pc(), 0xcb45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb43), 0xcb);
        EXPECT(gbc.readMem(0xcb44), 0x84);
        // CB 84 0334
        gbc.setState(0xe77d, 0xfdd9, 0xb150, 0xc41a, 0x661e, 0x806f, 0x1, 0x1);
        gbc.writeMem(0xe77d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfdd9);
        EXPECT(gbc.pc(), 0xe77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe77d), 0xcb);
        EXPECT(gbc.readMem(0xe77e), 0x84);
        // CB 84 0335
        gbc.setState(0x9cef, 0xbdad, 0x8ab0, 0x3a1b, 0xdc7, 0x79c2, 0x1, 0x0);
        gbc.writeMem(0x9cef, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbdad);
        EXPECT(gbc.pc(), 0x9cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cef), 0xcb);
        EXPECT(gbc.readMem(0x9cf0), 0x84);
        // CB 84 0337
        gbc.setState(0x3f66, 0x4494, 0xc790, 0xcafc, 0xaa1b, 0xceb2, 0x0, 0x1);
        gbc.writeMem(0x3f66, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4494);
        EXPECT(gbc.pc(), 0x3f68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0338
        gbc.setState(0xa51e, 0x7aaa, 0xffd0, 0x37f4, 0x55a5, 0x9b3f, 0x0, 0x0);
        gbc.writeMem(0xa51e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7aaa);
        EXPECT(gbc.pc(), 0xa520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa51e), 0xcb);
        EXPECT(gbc.readMem(0xa51f), 0x84);
        // CB 84 0339
        gbc.setState(0xaf67, 0xdce7, 0x23c0, 0xe167, 0x1b24, 0xc89d, 0x0, 0x0);
        gbc.writeMem(0xaf67, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdce7);
        EXPECT(gbc.pc(), 0xaf69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf67), 0xcb);
        EXPECT(gbc.readMem(0xaf68), 0x84);
        // CB 84 033A
        gbc.setState(0x32b3, 0x6690, 0x6900, 0xf936, 0x72d, 0x30ac, 0x1, 0x0);
        gbc.writeMem(0x32b3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6690);
        EXPECT(gbc.pc(), 0x32b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 033D
        gbc.setState(0x1a36, 0xcac6, 0x4480, 0xa997, 0xd62e, 0xf29f, 0x1, 0x1);
        gbc.writeMem(0x1a36, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xcac6);
        EXPECT(gbc.pc(), 0x1a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 033E
        gbc.setState(0xe44e, 0x490a, 0x2d20, 0xa517, 0x7e9f, 0xb63c, 0x0, 0x1);
        gbc.writeMem(0xe44e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x490a);
        EXPECT(gbc.pc(), 0xe450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe44e), 0xcb);
        EXPECT(gbc.readMem(0xe44f), 0x84);
        // CB 84 033F
        gbc.setState(0xaa04, 0x1252, 0x51a0, 0x8518, 0x46d4, 0x4659, 0x1, 0x0);
        gbc.writeMem(0xaa04, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1252);
        EXPECT(gbc.pc(), 0xaa06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa04), 0xcb);
        EXPECT(gbc.readMem(0xaa05), 0x84);
        // CB 84 0340
        gbc.setState(0x88ab, 0x24c4, 0x1250, 0x5da0, 0x4fb2, 0xf585, 0x1, 0x1);
        gbc.writeMem(0x88ab, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x24c4);
        EXPECT(gbc.pc(), 0x88ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ab), 0xcb);
        EXPECT(gbc.readMem(0x88ac), 0x84);
        // CB 84 0341
        gbc.setState(0x685c, 0x1f1f, 0x9c90, 0xcd4b, 0x8391, 0x694f, 0x0, 0x1);
        gbc.writeMem(0x685c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1f1f);
        EXPECT(gbc.pc(), 0x685e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0342
        gbc.setState(0x528a, 0x1240, 0x6e90, 0xd5d2, 0x6d5a, 0x8869, 0x1, 0x0);
        gbc.writeMem(0x528a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1240);
        EXPECT(gbc.pc(), 0x528c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0343
        gbc.setState(0x7c25, 0x865c, 0x1e10, 0x7205, 0x2347, 0x9338, 0x1, 0x0);
        gbc.writeMem(0x7c25, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x865c);
        EXPECT(gbc.pc(), 0x7c27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0344
        gbc.setState(0xa603, 0xf73e, 0x3790, 0xd94a, 0xd206, 0xd6c4, 0x0, 0x1);
        gbc.writeMem(0xa603, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf73e);
        EXPECT(gbc.pc(), 0xa605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa603), 0xcb);
        EXPECT(gbc.readMem(0xa604), 0x84);
        // CB 84 0345
        gbc.setState(0x35fa, 0x4c9b, 0x53b0, 0x73c4, 0x7c27, 0xaeb, 0x0, 0x0);
        gbc.writeMem(0x35fa, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4c9b);
        EXPECT(gbc.pc(), 0x35fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0346
        gbc.setState(0xd7b9, 0x61ff, 0x4530, 0x8058, 0xe350, 0x3d03, 0x0, 0x1);
        gbc.writeMem(0xd7b9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x61ff);
        EXPECT(gbc.pc(), 0xd7bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b9), 0xcb);
        EXPECT(gbc.readMem(0xd7ba), 0x84);
        // CB 84 0348
        gbc.setState(0x9d94, 0x4247, 0x1360, 0xaa2b, 0xc0e, 0x6381, 0x1, 0x1);
        gbc.writeMem(0x9d94, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4247);
        EXPECT(gbc.pc(), 0x9d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d94), 0xcb);
        EXPECT(gbc.readMem(0x9d95), 0x84);
        // CB 84 0349
        gbc.setState(0xd7f1, 0xca55, 0xe360, 0x7063, 0x4e41, 0x70ba, 0x1, 0x1);
        gbc.writeMem(0xd7f1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xca55);
        EXPECT(gbc.pc(), 0xd7f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f1), 0xcb);
        EXPECT(gbc.readMem(0xd7f2), 0x84);
        // CB 84 034A
        gbc.setState(0xde6e, 0xc8c5, 0x5b80, 0x5a79, 0x5ac7, 0x6226, 0x0, 0x0);
        gbc.writeMem(0xde6e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc8c5);
        EXPECT(gbc.pc(), 0xde70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde6e), 0xcb);
        EXPECT(gbc.readMem(0xde6f), 0x84);
        // CB 84 034B
        gbc.setState(0xacc1, 0x6e79, 0x9d50, 0x7e53, 0xecc4, 0x9136, 0x1, 0x1);
        gbc.writeMem(0xacc1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6e79);
        EXPECT(gbc.pc(), 0xacc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc1), 0xcb);
        EXPECT(gbc.readMem(0xacc2), 0x84);
        // CB 84 034C
        gbc.setState(0x9349, 0x4805, 0x3930, 0x1f80, 0x8cd0, 0x8214, 0x1, 0x1);
        gbc.writeMem(0x9349, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4805);
        EXPECT(gbc.pc(), 0x934b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9349), 0xcb);
        EXPECT(gbc.readMem(0x934a), 0x84);
        // CB 84 034D
        gbc.setState(0x3281, 0xc0d5, 0xa570, 0xbed9, 0x1bf6, 0x8af4, 0x1, 0x0);
        gbc.writeMem(0x3281, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc0d5);
        EXPECT(gbc.pc(), 0x3283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 034E
        gbc.setState(0x72ac, 0x3a5b, 0x8090, 0xee7b, 0xdb9a, 0xff99, 0x1, 0x0);
        gbc.writeMem(0x72ac, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3a5b);
        EXPECT(gbc.pc(), 0x72ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 034F
        gbc.setState(0x5d48, 0x694f, 0x8590, 0x2ec3, 0x195b, 0xa71a, 0x1, 0x1);
        gbc.writeMem(0x5d48, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x694f);
        EXPECT(gbc.pc(), 0x5d4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0350
        gbc.setState(0x10a9, 0x6560, 0x7db0, 0xeee8, 0xbfc4, 0xe362, 0x1, 0x0);
        gbc.writeMem(0x10a9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6560);
        EXPECT(gbc.pc(), 0x10ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0351
        gbc.setState(0x1a5d, 0xf40f, 0x3130, 0x17a, 0xb829, 0xc34, 0x1, 0x0);
        gbc.writeMem(0x1a5d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf40f);
        EXPECT(gbc.pc(), 0x1a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0352
        gbc.setState(0xdd16, 0x922e, 0x2b80, 0xafb2, 0xf19d, 0xca90, 0x0, 0x1);
        gbc.writeMem(0xdd16, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x922e);
        EXPECT(gbc.pc(), 0xdd18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd16), 0xcb);
        EXPECT(gbc.readMem(0xdd17), 0x84);
        // CB 84 0353
        gbc.setState(0x64d7, 0x5d72, 0xd630, 0x4595, 0x1c7f, 0xa6eb, 0x1, 0x0);
        gbc.writeMem(0x64d7, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5d72);
        EXPECT(gbc.pc(), 0x64d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0354
        gbc.setState(0xdacd, 0xb9f3, 0x3080, 0xb062, 0x864a, 0x9240, 0x0, 0x0);
        gbc.writeMem(0xdacd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb9f3);
        EXPECT(gbc.pc(), 0xdacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdacd), 0xcb);
        EXPECT(gbc.readMem(0xdace), 0x84);
        // CB 84 0355
        gbc.setState(0x382, 0xb9d1, 0xab40, 0xd369, 0x238d, 0xbc23, 0x0, 0x0);
        gbc.writeMem(0x382, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb9d1);
        EXPECT(gbc.pc(), 0x384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0356
        gbc.setState(0xc4dd, 0x7486, 0xdd20, 0x3f0c, 0x9c1f, 0x1f6d, 0x0, 0x1);
        gbc.writeMem(0xc4dd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7486);
        EXPECT(gbc.pc(), 0xc4df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4dd), 0xcb);
        EXPECT(gbc.readMem(0xc4de), 0x84);
        // CB 84 0357
        gbc.setState(0xbb6e, 0xe1cd, 0xe520, 0xe82e, 0xe9e5, 0x3ede, 0x0, 0x1);
        gbc.writeMem(0xbb6e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe1cd);
        EXPECT(gbc.pc(), 0xbb70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb6e), 0xcb);
        EXPECT(gbc.readMem(0xbb6f), 0x84);
        // CB 84 035A
        gbc.setState(0x9240, 0xe404, 0x6d80, 0x515c, 0x41f7, 0x7d63, 0x1, 0x1);
        gbc.writeMem(0x9240, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe404);
        EXPECT(gbc.pc(), 0x9242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9240), 0xcb);
        EXPECT(gbc.readMem(0x9241), 0x84);
        // CB 84 035B
        gbc.setState(0x73ce, 0xd11e, 0x6f80, 0xb615, 0xfa52, 0xb4c6, 0x0, 0x1);
        gbc.writeMem(0x73ce, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd11e);
        EXPECT(gbc.pc(), 0x73d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 035C
        gbc.setState(0x8b1c, 0x7f0, 0x48e0, 0x8207, 0x66f7, 0xb005, 0x0, 0x0);
        gbc.writeMem(0x8b1c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7f0);
        EXPECT(gbc.pc(), 0x8b1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b1c), 0xcb);
        EXPECT(gbc.readMem(0x8b1d), 0x84);
        // CB 84 035D
        gbc.setState(0x2ebb, 0x6ee8, 0xdda0, 0x215b, 0xd915, 0xfee2, 0x1, 0x0);
        gbc.writeMem(0x2ebb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6ee8);
        EXPECT(gbc.pc(), 0x2ebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 035E
        gbc.setState(0xa17d, 0x3702, 0xab90, 0xf0f, 0xff2e, 0x9072, 0x0, 0x0);
        gbc.writeMem(0xa17d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3702);
        EXPECT(gbc.pc(), 0xa17f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa17d), 0xcb);
        EXPECT(gbc.readMem(0xa17e), 0x84);
        // CB 84 035F
        gbc.setState(0xcb63, 0x743e, 0x300, 0x6f28, 0x1076, 0xc3cb, 0x0, 0x0);
        gbc.writeMem(0xcb63, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x743e);
        EXPECT(gbc.pc(), 0xcb65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb63), 0xcb);
        EXPECT(gbc.readMem(0xcb64), 0x84);
        // CB 84 0360
        gbc.setState(0x4163, 0xb814, 0xea30, 0x74c5, 0x19ee, 0x5a11, 0x0, 0x1);
        gbc.writeMem(0x4163, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb814);
        EXPECT(gbc.pc(), 0x4165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0361
        gbc.setState(0x8d77, 0x81cd, 0x7540, 0x4391, 0x3784, 0x8418, 0x1, 0x0);
        gbc.writeMem(0x8d77, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x81cd);
        EXPECT(gbc.pc(), 0x8d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d77), 0xcb);
        EXPECT(gbc.readMem(0x8d78), 0x84);
        // CB 84 0362
        gbc.setState(0x816c, 0x8675, 0x590, 0x1f6f, 0xbe98, 0x1824, 0x1, 0x0);
        gbc.writeMem(0x816c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8675);
        EXPECT(gbc.pc(), 0x816e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816c), 0xcb);
        EXPECT(gbc.readMem(0x816d), 0x84);
        // CB 84 0363
        gbc.setState(0xbb66, 0x18e6, 0x5910, 0x217b, 0x30aa, 0x58f9, 0x0, 0x0);
        gbc.writeMem(0xbb66, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x18e6);
        EXPECT(gbc.pc(), 0xbb68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb66), 0xcb);
        EXPECT(gbc.readMem(0xbb67), 0x84);
        // CB 84 0364
        gbc.setState(0x3b22, 0x69db, 0xba60, 0x2dd8, 0xb34, 0x8ee0, 0x1, 0x1);
        gbc.writeMem(0x3b22, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x69db);
        EXPECT(gbc.pc(), 0x3b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0365
        gbc.setState(0xc968, 0x49f2, 0xb1b0, 0x8c6c, 0xf53a, 0xd14, 0x0, 0x0);
        gbc.writeMem(0xc968, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x49f2);
        EXPECT(gbc.pc(), 0xc96a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc968), 0xcb);
        EXPECT(gbc.readMem(0xc969), 0x84);
        // CB 84 0366
        gbc.setState(0xe643, 0x9a47, 0x2000, 0x53d7, 0x8de4, 0xda0, 0x0, 0x0);
        gbc.writeMem(0xe643, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9a47);
        EXPECT(gbc.pc(), 0xe645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe643), 0xcb);
        EXPECT(gbc.readMem(0xe644), 0x84);
        // CB 84 0367
        gbc.setState(0x44e9, 0xeade, 0x3160, 0x9d8f, 0x927f, 0x587b, 0x1, 0x0);
        gbc.writeMem(0x44e9, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xeade);
        EXPECT(gbc.pc(), 0x44eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0368
        gbc.setState(0xb93e, 0xfd3f, 0xe550, 0x1b7b, 0x1207, 0x3c7e, 0x0, 0x1);
        gbc.writeMem(0xb93e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfd3f);
        EXPECT(gbc.pc(), 0xb940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93e), 0xcb);
        EXPECT(gbc.readMem(0xb93f), 0x84);
        // CB 84 0369
        gbc.setState(0x584d, 0xcb42, 0xa9f0, 0xc33, 0x60ba, 0x9204, 0x1, 0x1);
        gbc.writeMem(0x584d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xcb42);
        EXPECT(gbc.pc(), 0x584f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 036A
        gbc.setState(0x2b83, 0xea2a, 0x3a10, 0xa277, 0x9037, 0xe0a9, 0x1, 0x1);
        gbc.writeMem(0x2b83, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xea2a);
        EXPECT(gbc.pc(), 0x2b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 036B
        gbc.setState(0xf2f, 0xbfc8, 0x2590, 0x2c01, 0x37b8, 0xb07a, 0x0, 0x0);
        gbc.writeMem(0xf2f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbfc8);
        EXPECT(gbc.pc(), 0xf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 036C
        gbc.setState(0x2933, 0x8af5, 0xa880, 0x4a27, 0x88c8, 0xc46c, 0x0, 0x1);
        gbc.writeMem(0x2933, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8af5);
        EXPECT(gbc.pc(), 0x2935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 036D
        gbc.setState(0x99ab, 0xbb97, 0xecc0, 0x568, 0x83f2, 0x4a3, 0x1, 0x0);
        gbc.writeMem(0x99ab, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xbb97);
        EXPECT(gbc.pc(), 0x99ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ab), 0xcb);
        EXPECT(gbc.readMem(0x99ac), 0x84);
        // CB 84 036E
        gbc.setState(0x4c22, 0x8f0b, 0x6660, 0xb1ea, 0x516c, 0xf4f8, 0x0, 0x1);
        gbc.writeMem(0x4c22, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8f0b);
        EXPECT(gbc.pc(), 0x4c24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 036F
        gbc.setState(0xb56c, 0x79c3, 0xb240, 0xd3e7, 0x9bbf, 0xe63a, 0x1, 0x1);
        gbc.writeMem(0xb56c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x79c3);
        EXPECT(gbc.pc(), 0xb56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb56c), 0xcb);
        EXPECT(gbc.readMem(0xb56d), 0x84);
        // CB 84 0370
        gbc.setState(0x20e2, 0x4d49, 0x750, 0x34be, 0x6e0e, 0x4f22, 0x0, 0x1);
        gbc.writeMem(0x20e2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4d49);
        EXPECT(gbc.pc(), 0x20e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0371
        gbc.setState(0x3771, 0x70de, 0x5b80, 0x2f87, 0x9330, 0x70c0, 0x1, 0x0);
        gbc.writeMem(0x3771, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x70de);
        EXPECT(gbc.pc(), 0x3773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0372
        gbc.setState(0xe9b0, 0xd09f, 0x25d0, 0x966a, 0x7e25, 0xe4e, 0x1, 0x1);
        gbc.writeMem(0xe9b0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd09f);
        EXPECT(gbc.pc(), 0xe9b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b0), 0xcb);
        EXPECT(gbc.readMem(0xe9b1), 0x84);
        // CB 84 0374
        gbc.setState(0xa3b5, 0x4652, 0x55f0, 0xdef9, 0x7f4c, 0x5530, 0x1, 0x0);
        gbc.writeMem(0xa3b5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4652);
        EXPECT(gbc.pc(), 0xa3b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b5), 0xcb);
        EXPECT(gbc.readMem(0xa3b6), 0x84);
        // CB 84 0375
        gbc.setState(0x595d, 0xc0e6, 0xbc30, 0xa0eb, 0xe177, 0xbc46, 0x1, 0x1);
        gbc.writeMem(0x595d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc0e6);
        EXPECT(gbc.pc(), 0x595f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0376
        gbc.setState(0x8ff1, 0x3c59, 0x4300, 0xf2e3, 0x2d58, 0xceab, 0x0, 0x1);
        gbc.writeMem(0x8ff1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3c59);
        EXPECT(gbc.pc(), 0x8ff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff1), 0xcb);
        EXPECT(gbc.readMem(0x8ff2), 0x84);
        // CB 84 0377
        gbc.setState(0xcaea, 0x9e28, 0xb140, 0x46ff, 0x74c3, 0xa4ab, 0x0, 0x0);
        gbc.writeMem(0xcaea, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9e28);
        EXPECT(gbc.pc(), 0xcaec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaea), 0xcb);
        EXPECT(gbc.readMem(0xcaeb), 0x84);
        // CB 84 0378
        gbc.setState(0x853f, 0x70e4, 0xb760, 0x3ae, 0xad75, 0xe03e, 0x1, 0x0);
        gbc.writeMem(0x853f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x70e4);
        EXPECT(gbc.pc(), 0x8541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x853f), 0xcb);
        EXPECT(gbc.readMem(0x8540), 0x84);
        // CB 84 0379
        gbc.setState(0x85b6, 0xa991, 0x5590, 0xc0f3, 0xa127, 0x5840, 0x0, 0x1);
        gbc.writeMem(0x85b6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa991);
        EXPECT(gbc.pc(), 0x85b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85b6), 0xcb);
        EXPECT(gbc.readMem(0x85b7), 0x84);
        // CB 84 037A
        gbc.setState(0x5b65, 0xb545, 0xbd40, 0xc33f, 0x9ace, 0x5b0b, 0x0, 0x0);
        gbc.writeMem(0x5b65, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb545);
        EXPECT(gbc.pc(), 0x5b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 037B
        gbc.setState(0x6539, 0xe121, 0x76f0, 0xae0c, 0x47ae, 0x50a8, 0x0, 0x0);
        gbc.writeMem(0x6539, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe121);
        EXPECT(gbc.pc(), 0x653b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 037C
        gbc.setState(0x3313, 0x73a, 0xb7d0, 0xd536, 0x1ff7, 0x9fc8, 0x1, 0x0);
        gbc.writeMem(0x3313, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x73a);
        EXPECT(gbc.pc(), 0x3315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 037D
        gbc.setState(0x86c7, 0x2f6d, 0xd570, 0xd13e, 0xe75e, 0x5092, 0x1, 0x1);
        gbc.writeMem(0x86c7, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2f6d);
        EXPECT(gbc.pc(), 0x86c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c7), 0xcb);
        EXPECT(gbc.readMem(0x86c8), 0x84);
        // CB 84 037E
        gbc.setState(0x925e, 0x7fc1, 0x2330, 0x273a, 0xc474, 0x1d3c, 0x0, 0x1);
        gbc.writeMem(0x925e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7fc1);
        EXPECT(gbc.pc(), 0x9260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x925e), 0xcb);
        EXPECT(gbc.readMem(0x925f), 0x84);
        // CB 84 037F
        gbc.setState(0x2f52, 0xf5e3, 0x5340, 0x64d9, 0x85f6, 0xf0aa, 0x1, 0x1);
        gbc.writeMem(0x2f52, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf5e3);
        EXPECT(gbc.pc(), 0x2f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0380
        gbc.setState(0x828b, 0x11c4, 0x4720, 0x99cf, 0xebb6, 0x3e9f, 0x0, 0x0);
        gbc.writeMem(0x828b, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x11c4);
        EXPECT(gbc.pc(), 0x828d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x828b), 0xcb);
        EXPECT(gbc.readMem(0x828c), 0x84);
        // CB 84 0382
        gbc.setState(0x6980, 0x97ad, 0x4120, 0xcbaf, 0x475b, 0x6280, 0x1, 0x0);
        gbc.writeMem(0x6980, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x97ad);
        EXPECT(gbc.pc(), 0x6982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0383
        gbc.setState(0x6a3f, 0x5d28, 0x6cb0, 0x870b, 0xf88f, 0x8a5e, 0x0, 0x1);
        gbc.writeMem(0x6a3f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5d28);
        EXPECT(gbc.pc(), 0x6a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0384
        gbc.setState(0x1c53, 0xb013, 0x2dc0, 0x36fe, 0x2c57, 0xa3f7, 0x1, 0x0);
        gbc.writeMem(0x1c53, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb013);
        EXPECT(gbc.pc(), 0x1c55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0385
        gbc.setState(0x101a, 0x7119, 0xe360, 0xd1d5, 0x5126, 0x9d59, 0x0, 0x0);
        gbc.writeMem(0x101a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7119);
        EXPECT(gbc.pc(), 0x101c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0386
        gbc.setState(0x41c2, 0xe2bd, 0xa810, 0xebe2, 0xd0be, 0xe739, 0x1, 0x1);
        gbc.writeMem(0x41c2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe2bd);
        EXPECT(gbc.pc(), 0x41c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0387
        gbc.setState(0xcfb0, 0x658a, 0x560, 0xabc, 0xaa2f, 0xb700, 0x1, 0x0);
        gbc.writeMem(0xcfb0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x658a);
        EXPECT(gbc.pc(), 0xcfb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb0), 0xcb);
        EXPECT(gbc.readMem(0xcfb1), 0x84);
        // CB 84 0388
        gbc.setState(0xb055, 0xc861, 0xd200, 0x7765, 0x250a, 0xfa4b, 0x0, 0x0);
        gbc.writeMem(0xb055, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc861);
        EXPECT(gbc.pc(), 0xb057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb055), 0xcb);
        EXPECT(gbc.readMem(0xb056), 0x84);
        // CB 84 038A
        gbc.setState(0x98e1, 0xe5b1, 0xa180, 0xb9c4, 0x3a4, 0x29c2, 0x1, 0x1);
        gbc.writeMem(0x98e1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe5b1);
        EXPECT(gbc.pc(), 0x98e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e1), 0xcb);
        EXPECT(gbc.readMem(0x98e2), 0x84);
        // CB 84 038B
        gbc.setState(0xec51, 0x5aed, 0x6720, 0xb69c, 0x3568, 0xf5b6, 0x0, 0x0);
        gbc.writeMem(0xec51, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5aed);
        EXPECT(gbc.pc(), 0xec53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec51), 0xcb);
        EXPECT(gbc.readMem(0xec52), 0x84);
        // CB 84 038C
        gbc.setState(0x1f3, 0x469c, 0x2ec0, 0xc9ca, 0x80f0, 0x6382, 0x1, 0x0);
        gbc.writeMem(0x1f3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x469c);
        EXPECT(gbc.pc(), 0x1f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 038D
        gbc.setState(0xcfdf, 0x52d9, 0x8050, 0x88c2, 0x7bc5, 0xf8cb, 0x1, 0x0);
        gbc.writeMem(0xcfdf, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x52d9);
        EXPECT(gbc.pc(), 0xcfe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfdf), 0xcb);
        EXPECT(gbc.readMem(0xcfe0), 0x84);
        // CB 84 038E
        gbc.setState(0x4e4c, 0x6fa4, 0x8960, 0x2996, 0x9e5, 0x47d9, 0x1, 0x1);
        gbc.writeMem(0x4e4c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6fa4);
        EXPECT(gbc.pc(), 0x4e4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 038F
        gbc.setState(0x7de5, 0x8ab2, 0xd710, 0x19da, 0x8465, 0x8db6, 0x0, 0x0);
        gbc.writeMem(0x7de5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8ab2);
        EXPECT(gbc.pc(), 0x7de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0390
        gbc.setState(0x583d, 0x2728, 0xdeb0, 0xb5f6, 0x74ac, 0xa197, 0x1, 0x0);
        gbc.writeMem(0x583d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2728);
        EXPECT(gbc.pc(), 0x583f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0391
        gbc.setState(0x5c9a, 0xff2e, 0xc830, 0x669c, 0xcaa7, 0x2d9, 0x1, 0x0);
        gbc.writeMem(0x5c9a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xff2e);
        EXPECT(gbc.pc(), 0x5c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0392
        gbc.setState(0x5377, 0x357d, 0xccb0, 0x97e8, 0x6ba2, 0x4264, 0x0, 0x0);
        gbc.writeMem(0x5377, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x357d);
        EXPECT(gbc.pc(), 0x5379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0394
        gbc.setState(0x6423, 0xc09b, 0x50a0, 0xee23, 0x90f, 0xafb7, 0x0, 0x1);
        gbc.writeMem(0x6423, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc09b);
        EXPECT(gbc.pc(), 0x6425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 0395
        gbc.setState(0xaaa6, 0xcced, 0x5e60, 0xccd, 0x7b8d, 0x68b3, 0x1, 0x1);
        gbc.writeMem(0xaaa6, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcced);
        EXPECT(gbc.pc(), 0xaaa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa6), 0xcb);
        EXPECT(gbc.readMem(0xaaa7), 0x84);
        // CB 84 0396
        gbc.setState(0xe6b1, 0x45c2, 0xfd80, 0x51a5, 0x2b31, 0x6bcb, 0x1, 0x1);
        gbc.writeMem(0xe6b1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x45c2);
        EXPECT(gbc.pc(), 0xe6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b1), 0xcb);
        EXPECT(gbc.readMem(0xe6b2), 0x84);
        // CB 84 0397
        gbc.setState(0x6e0e, 0x6214, 0x64d0, 0x29d7, 0x50df, 0x47a0, 0x0, 0x0);
        gbc.writeMem(0x6e0e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6214);
        EXPECT(gbc.pc(), 0x6e10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 0398
        gbc.setState(0xa015, 0x34db, 0x25a0, 0x6379, 0xbf30, 0x8e52, 0x1, 0x0);
        gbc.writeMem(0xa015, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x34db);
        EXPECT(gbc.pc(), 0xa017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa015), 0xcb);
        EXPECT(gbc.readMem(0xa016), 0x84);
        // CB 84 0399
        gbc.setState(0x2851, 0x6893, 0xbd10, 0x708a, 0x765f, 0x8aeb, 0x0, 0x0);
        gbc.writeMem(0x2851, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6893);
        EXPECT(gbc.pc(), 0x2853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 039A
        gbc.setState(0x6ba3, 0xa5af, 0x2c30, 0x17bc, 0x775c, 0x736f, 0x1, 0x1);
        gbc.writeMem(0x6ba3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa5af);
        EXPECT(gbc.pc(), 0x6ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 039B
        gbc.setState(0xeff8, 0x8d51, 0x600, 0x6893, 0x7881, 0x6741, 0x0, 0x1);
        gbc.writeMem(0xeff8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8d51);
        EXPECT(gbc.pc(), 0xeffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff8), 0xcb);
        EXPECT(gbc.readMem(0xeff9), 0x84);
        // CB 84 039C
        gbc.setState(0x4dea, 0xe891, 0x67b0, 0xe46b, 0x7469, 0x937d, 0x0, 0x0);
        gbc.writeMem(0x4dea, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe891);
        EXPECT(gbc.pc(), 0x4dec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 039E
        gbc.setState(0x5250, 0x194f, 0x6040, 0x1ca0, 0xf3ce, 0x596c, 0x1, 0x1);
        gbc.writeMem(0x5250, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x194f);
        EXPECT(gbc.pc(), 0x5252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 039F
        gbc.setState(0x26c2, 0xa69a, 0x3f00, 0x4548, 0x591f, 0x1b2c, 0x1, 0x0);
        gbc.writeMem(0x26c2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa69a);
        EXPECT(gbc.pc(), 0x26c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03A0
        gbc.setState(0x45eb, 0x798f, 0xacc0, 0x8854, 0xfd5d, 0x917c, 0x0, 0x0);
        gbc.writeMem(0x45eb, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x798f);
        EXPECT(gbc.pc(), 0x45ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03A1
        gbc.setState(0xe54a, 0x6878, 0x2170, 0x8118, 0xee39, 0xf4bb, 0x0, 0x1);
        gbc.writeMem(0xe54a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6878);
        EXPECT(gbc.pc(), 0xe54c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe54a), 0xcb);
        EXPECT(gbc.readMem(0xe54b), 0x84);
        // CB 84 03A2
        gbc.setState(0x1759, 0xff85, 0xe9d0, 0xe0cd, 0x3bac, 0xe48b, 0x0, 0x1);
        gbc.writeMem(0x1759, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xff85);
        EXPECT(gbc.pc(), 0x175b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03A3
        gbc.setState(0x7aae, 0xd652, 0x3ab0, 0x5e87, 0x4907, 0x3ed, 0x0, 0x1);
        gbc.writeMem(0x7aae, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd652);
        EXPECT(gbc.pc(), 0x7ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03A4
        gbc.setState(0x1e15, 0x7dc2, 0x7d00, 0x26eb, 0x6fbf, 0xf312, 0x0, 0x1);
        gbc.writeMem(0x1e15, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7dc2);
        EXPECT(gbc.pc(), 0x1e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03A5
        gbc.setState(0x296d, 0xc81d, 0x5450, 0xea49, 0xdc7d, 0x17bc, 0x0, 0x1);
        gbc.writeMem(0x296d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc81d);
        EXPECT(gbc.pc(), 0x296f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03A6
        gbc.setState(0x4996, 0xe084, 0x7090, 0x706c, 0x7a42, 0xf3cd, 0x1, 0x1);
        gbc.writeMem(0x4996, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe084);
        EXPECT(gbc.pc(), 0x4998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03A7
        gbc.setState(0x512a, 0xc7a7, 0x3ee0, 0xdae0, 0x8a15, 0x71d1, 0x0, 0x1);
        gbc.writeMem(0x512a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc7a7);
        EXPECT(gbc.pc(), 0x512c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03A8
        gbc.setState(0xab23, 0x63fe, 0x600, 0xe575, 0xb0a6, 0x1ca8, 0x0, 0x1);
        gbc.writeMem(0xab23, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x63fe);
        EXPECT(gbc.pc(), 0xab25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab23), 0xcb);
        EXPECT(gbc.readMem(0xab24), 0x84);
        // CB 84 03A9
        gbc.setState(0x7a9d, 0xf8e3, 0xe5b0, 0xbb44, 0x8426, 0x389e, 0x0, 0x0);
        gbc.writeMem(0x7a9d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf8e3);
        EXPECT(gbc.pc(), 0x7a9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03AA
        gbc.setState(0x6d02, 0x67ad, 0x9a70, 0x7f7f, 0xa92f, 0xea47, 0x1, 0x0);
        gbc.writeMem(0x6d02, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x67ad);
        EXPECT(gbc.pc(), 0x6d04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03AB
        gbc.setState(0x1b74, 0xcece, 0xbc0, 0xf912, 0x4f09, 0xf57f, 0x1, 0x1);
        gbc.writeMem(0x1b74, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xcece);
        EXPECT(gbc.pc(), 0x1b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03AC
        gbc.setState(0x843d, 0xd66a, 0x1e30, 0xd167, 0x2e05, 0x6e4, 0x1, 0x0);
        gbc.writeMem(0x843d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd66a);
        EXPECT(gbc.pc(), 0x843f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x843d), 0xcb);
        EXPECT(gbc.readMem(0x843e), 0x84);
        // CB 84 03AD
        gbc.setState(0x8769, 0xbeca, 0x800, 0xb361, 0x2314, 0x2b01, 0x0, 0x0);
        gbc.writeMem(0x8769, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbeca);
        EXPECT(gbc.pc(), 0x876b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8769), 0xcb);
        EXPECT(gbc.readMem(0x876a), 0x84);
        // CB 84 03AE
        gbc.setState(0xccbd, 0x8922, 0x2e20, 0x22, 0x2f9b, 0x2ca7, 0x0, 0x0);
        gbc.writeMem(0xccbd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8922);
        EXPECT(gbc.pc(), 0xccbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccbd), 0xcb);
        EXPECT(gbc.readMem(0xccbe), 0x84);
        // CB 84 03AF
        gbc.setState(0xbbe4, 0x4b59, 0x2770, 0x6bb0, 0xf740, 0xb47b, 0x1, 0x0);
        gbc.writeMem(0xbbe4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4b59);
        EXPECT(gbc.pc(), 0xbbe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe4), 0xcb);
        EXPECT(gbc.readMem(0xbbe5), 0x84);
        // CB 84 03B0
        gbc.setState(0x8509, 0xb2b6, 0x3890, 0xeb0b, 0x3561, 0xb3c, 0x1, 0x1);
        gbc.writeMem(0x8509, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb2b6);
        EXPECT(gbc.pc(), 0x850b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8509), 0xcb);
        EXPECT(gbc.readMem(0x850a), 0x84);
        // CB 84 03B1
        gbc.setState(0x240d, 0xe1dd, 0x95f0, 0xea50, 0x38dc, 0xf9c2, 0x0, 0x0);
        gbc.writeMem(0x240d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe1dd);
        EXPECT(gbc.pc(), 0x240f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03B2
        gbc.setState(0x5b84, 0xb16a, 0xd340, 0x12b6, 0xb351, 0x85b9, 0x0, 0x1);
        gbc.writeMem(0x5b84, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb16a);
        EXPECT(gbc.pc(), 0x5b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03B3
        gbc.setState(0x91e4, 0x443, 0xcc30, 0x72e5, 0x9e81, 0x35ab, 0x1, 0x0);
        gbc.writeMem(0x91e4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x443);
        EXPECT(gbc.pc(), 0x91e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e4), 0xcb);
        EXPECT(gbc.readMem(0x91e5), 0x84);
        // CB 84 03B4
        gbc.setState(0xbb99, 0x5d94, 0x1a70, 0x7ba, 0x4fad, 0xe3ca, 0x1, 0x1);
        gbc.writeMem(0xbb99, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5d94);
        EXPECT(gbc.pc(), 0xbb9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb99), 0xcb);
        EXPECT(gbc.readMem(0xbb9a), 0x84);
        // CB 84 03B5
        gbc.setState(0x6b61, 0x62ca, 0x49d0, 0xd3ac, 0x753f, 0x275d, 0x0, 0x1);
        gbc.writeMem(0x6b61, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x62ca);
        EXPECT(gbc.pc(), 0x6b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03B6
        gbc.setState(0xeb85, 0x672f, 0x5b00, 0xdf13, 0x95ac, 0xbd83, 0x1, 0x0);
        gbc.writeMem(0xeb85, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x672f);
        EXPECT(gbc.pc(), 0xeb87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb85), 0xcb);
        EXPECT(gbc.readMem(0xeb86), 0x84);
        // CB 84 03B7
        gbc.setState(0x3d52, 0x3f75, 0xd310, 0xb815, 0xd3a5, 0xa97c, 0x1, 0x1);
        gbc.writeMem(0x3d52, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3f75);
        EXPECT(gbc.pc(), 0x3d54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03B8
        gbc.setState(0xcd6f, 0x77f7, 0x1c40, 0xfd31, 0x4c75, 0xcc59, 0x0, 0x0);
        gbc.writeMem(0xcd6f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x77f7);
        EXPECT(gbc.pc(), 0xcd71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd6f), 0xcb);
        EXPECT(gbc.readMem(0xcd70), 0x84);
        // CB 84 03B9
        gbc.setState(0x5d84, 0xaa8f, 0xb340, 0x5f96, 0xe389, 0x7f3c, 0x1, 0x0);
        gbc.writeMem(0x5d84, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xaa8f);
        EXPECT(gbc.pc(), 0x5d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03BA
        gbc.setState(0x2aa0, 0xbbb5, 0x6930, 0x5804, 0x6dcb, 0x9b17, 0x1, 0x0);
        gbc.writeMem(0x2aa0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbbb5);
        EXPECT(gbc.pc(), 0x2aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03BB
        gbc.setState(0xd126, 0xb943, 0xabe0, 0xd748, 0x61c2, 0x8afd, 0x1, 0x1);
        gbc.writeMem(0xd126, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb943);
        EXPECT(gbc.pc(), 0xd128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd126), 0xcb);
        EXPECT(gbc.readMem(0xd127), 0x84);
        // CB 84 03BC
        gbc.setState(0x79ab, 0xdcc0, 0x3720, 0x4093, 0x8171, 0x38e4, 0x1, 0x1);
        gbc.writeMem(0x79ab, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdcc0);
        EXPECT(gbc.pc(), 0x79ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03BD
        gbc.setState(0xee02, 0x4611, 0x6ae0, 0x1535, 0xffa2, 0x59b1, 0x1, 0x1);
        gbc.writeMem(0xee02, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4611);
        EXPECT(gbc.pc(), 0xee04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee02), 0xcb);
        EXPECT(gbc.readMem(0xee03), 0x84);
        // CB 84 03BE
        gbc.setState(0xd80c, 0xcbd5, 0x1350, 0x86fa, 0x4337, 0x9fe6, 0x1, 0x0);
        gbc.writeMem(0xd80c, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcbd5);
        EXPECT(gbc.pc(), 0xd80e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd80c), 0xcb);
        EXPECT(gbc.readMem(0xd80d), 0x84);
        // CB 84 03BF
        gbc.setState(0x8fc5, 0x517e, 0xbc90, 0xe8e8, 0x8e05, 0x58ca, 0x0, 0x1);
        gbc.writeMem(0x8fc5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x517e);
        EXPECT(gbc.pc(), 0x8fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc5), 0xcb);
        EXPECT(gbc.readMem(0x8fc6), 0x84);
        // CB 84 03C1
        gbc.setState(0xb8b8, 0xb8e3, 0x5120, 0x2dd9, 0x8597, 0x28fc, 0x1, 0x0);
        gbc.writeMem(0xb8b8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb8e3);
        EXPECT(gbc.pc(), 0xb8ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8b8), 0xcb);
        EXPECT(gbc.readMem(0xb8b9), 0x84);
        // CB 84 03C3
        gbc.setState(0x30c0, 0xeddc, 0x2f30, 0x4078, 0x1fd3, 0xfcfc, 0x0, 0x0);
        gbc.writeMem(0x30c0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xeddc);
        EXPECT(gbc.pc(), 0x30c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03C4
        gbc.setState(0xa81a, 0x81eb, 0x65a0, 0x89f0, 0x1de4, 0xd803, 0x0, 0x0);
        gbc.writeMem(0xa81a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x81eb);
        EXPECT(gbc.pc(), 0xa81c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81a), 0xcb);
        EXPECT(gbc.readMem(0xa81b), 0x84);
        // CB 84 03C5
        gbc.setState(0xe8aa, 0x4b9e, 0x7940, 0xd9a4, 0x58c2, 0x9645, 0x1, 0x1);
        gbc.writeMem(0xe8aa, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4b9e);
        EXPECT(gbc.pc(), 0xe8ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8aa), 0xcb);
        EXPECT(gbc.readMem(0xe8ab), 0x84);
        // CB 84 03C6
        gbc.setState(0x6e72, 0x9de2, 0xad50, 0x162, 0x1884, 0xe250, 0x1, 0x1);
        gbc.writeMem(0x6e72, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9de2);
        EXPECT(gbc.pc(), 0x6e74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03C8
        gbc.setState(0x2f75, 0x3433, 0xb4c0, 0xbc94, 0xe546, 0xbf53, 0x1, 0x0);
        gbc.writeMem(0x2f75, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3433);
        EXPECT(gbc.pc(), 0x2f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03C9
        gbc.setState(0x425a, 0xf4b1, 0x4090, 0x153d, 0x1060, 0xa4e7, 0x1, 0x0);
        gbc.writeMem(0x425a, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf4b1);
        EXPECT(gbc.pc(), 0x425c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03CA
        gbc.setState(0xddb5, 0xf414, 0x3710, 0x8db7, 0x12e9, 0x7def, 0x0, 0x0);
        gbc.writeMem(0xddb5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf414);
        EXPECT(gbc.pc(), 0xddb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddb5), 0xcb);
        EXPECT(gbc.readMem(0xddb6), 0x84);
        // CB 84 03CC
        gbc.setState(0x77e, 0xd78d, 0x1ea0, 0x46e1, 0x50f4, 0x594, 0x1, 0x0);
        gbc.writeMem(0x77e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd78d);
        EXPECT(gbc.pc(), 0x780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03CD
        gbc.setState(0x9fe5, 0x22b5, 0x6630, 0xe1da, 0xc8c1, 0x71f5, 0x1, 0x0);
        gbc.writeMem(0x9fe5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x22b5);
        EXPECT(gbc.pc(), 0x9fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe5), 0xcb);
        EXPECT(gbc.readMem(0x9fe6), 0x84);
        // CB 84 03CE
        gbc.setState(0x903d, 0xfa00, 0x1ed0, 0xcdac, 0xdce0, 0x75f9, 0x1, 0x1);
        gbc.writeMem(0x903d, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfa00);
        EXPECT(gbc.pc(), 0x903f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x903d), 0xcb);
        EXPECT(gbc.readMem(0x903e), 0x84);
        // CB 84 03CF
        gbc.setState(0x4e65, 0xe4a1, 0x6f40, 0xdb53, 0xe4ef, 0xf127, 0x0, 0x1);
        gbc.writeMem(0x4e65, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe4a1);
        EXPECT(gbc.pc(), 0x4e67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03D0
        gbc.setState(0x50a1, 0xa81c, 0x670, 0x7053, 0x6f7e, 0x1057, 0x1, 0x0);
        gbc.writeMem(0x50a1, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa81c);
        EXPECT(gbc.pc(), 0x50a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03D1
        gbc.setState(0x742f, 0xc505, 0xe660, 0x2962, 0x243c, 0xaa2f, 0x1, 0x0);
        gbc.writeMem(0x742f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc505);
        EXPECT(gbc.pc(), 0x7431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03D2
        gbc.setState(0x6a22, 0xaaff, 0x7890, 0x3119, 0x51a, 0xc46e, 0x0, 0x1);
        gbc.writeMem(0x6a22, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xaaff);
        EXPECT(gbc.pc(), 0x6a24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03D3
        gbc.setState(0x65ea, 0xfd07, 0x1870, 0xc2ec, 0x4200, 0xaa0, 0x1, 0x1);
        gbc.writeMem(0x65ea, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfd07);
        EXPECT(gbc.pc(), 0x65ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03D4
        gbc.setState(0x1214, 0x1ae4, 0xa8c0, 0x1e70, 0xbc5b, 0xdec9, 0x0, 0x1);
        gbc.writeMem(0x1214, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1ae4);
        EXPECT(gbc.pc(), 0x1216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03D5
        gbc.setState(0x3ea2, 0x1f26, 0xff0, 0x3c7, 0xda4e, 0x9c42, 0x0, 0x0);
        gbc.writeMem(0x3ea2, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1f26);
        EXPECT(gbc.pc(), 0x3ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03D6
        gbc.setState(0xd0d3, 0x4fa, 0xce30, 0x1193, 0xf433, 0x775f, 0x1, 0x1);
        gbc.writeMem(0xd0d3, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4fa);
        EXPECT(gbc.pc(), 0xd0d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d3), 0xcb);
        EXPECT(gbc.readMem(0xd0d4), 0x84);
        // CB 84 03D7
        gbc.setState(0xa3c5, 0xcdc7, 0x2280, 0x4645, 0x1e7e, 0x1349, 0x1, 0x1);
        gbc.writeMem(0xa3c5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xcdc7);
        EXPECT(gbc.pc(), 0xa3c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c5), 0xcb);
        EXPECT(gbc.readMem(0xa3c6), 0x84);
        // CB 84 03D8
        gbc.setState(0xbe2e, 0x9a92, 0x4620, 0xe095, 0x786b, 0x249c, 0x1, 0x0);
        gbc.writeMem(0xbe2e, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9a92);
        EXPECT(gbc.pc(), 0xbe30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe2e), 0xcb);
        EXPECT(gbc.readMem(0xbe2f), 0x84);
        // CB 84 03D9
        gbc.setState(0x9d0, 0xc655, 0xd9f0, 0x4a02, 0xcc82, 0x4def, 0x1, 0x0);
        gbc.writeMem(0x9d0, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc655);
        EXPECT(gbc.pc(), 0x9d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03DA
        gbc.setState(0x32e4, 0x8109, 0xef50, 0x62e, 0xc4af, 0x1648, 0x0, 0x0);
        gbc.writeMem(0x32e4, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8109);
        EXPECT(gbc.pc(), 0x32e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 84 03DB
        gbc.setState(0x99bd, 0x9746, 0xc3d0, 0xa81f, 0x8078, 0x1831, 0x0, 0x0);
        gbc.writeMem(0x99bd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9746);
        EXPECT(gbc.pc(), 0x99bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99bd), 0xcb);
        EXPECT(gbc.readMem(0x99be), 0x84);
        // CB 84 03DC
        gbc.setState(0xb943, 0xb0a1, 0x3150, 0x10bd, 0x4562, 0x919e, 0x0, 0x0);
        gbc.writeMem(0xb943, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb0a1);
        EXPECT(gbc.pc(), 0xb945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb943), 0xcb);
        EXPECT(gbc.readMem(0xb944), 0x84);
        // CB 84 03DD
        gbc.setState(0xd392, 0x6a34, 0x8700, 0xc567, 0xc99f, 0x362d, 0x0, 0x0);
        gbc.writeMem(0xd392, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6a34);
        EXPECT(gbc.pc(), 0xd394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd392), 0xcb);
        EXPECT(gbc.readMem(0xd393), 0x84);
        // CB 84 03DE
        gbc.setState(0xa664, 0x4800, 0xdf20, 0x6ae4, 0x5ff7, 0xd18e, 0x1, 0x0);
        gbc.writeMem(0xa664, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4800);
        EXPECT(gbc.pc(), 0xa666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa664), 0xcb);
        EXPECT(gbc.readMem(0xa665), 0x84);
        // CB 84 03DF
        gbc.setState(0x14ee, 0xc64, 0x600, 0x6706, 0x4490, 0x209d, 0x1, 0x0);
        gbc.writeMem(0x14ee, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc64);
        EXPECT(gbc.pc(), 0x14f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03E0
        gbc.setState(0xd2dd, 0x2268, 0xdc60, 0x644e, 0x898c, 0x885, 0x0, 0x1);
        gbc.writeMem(0xd2dd, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2268);
        EXPECT(gbc.pc(), 0xd2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2dd), 0xcb);
        EXPECT(gbc.readMem(0xd2de), 0x84);
        // CB 84 03E1
        gbc.setState(0xda36, 0xa6dc, 0x5fd0, 0xbb1, 0xa0dd, 0x5c74, 0x0, 0x1);
        gbc.writeMem(0xda36, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa6dc);
        EXPECT(gbc.pc(), 0xda38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda36), 0xcb);
        EXPECT(gbc.readMem(0xda37), 0x84);
        // CB 84 03E2
        gbc.setState(0xe965, 0x3832, 0xb800, 0x9b79, 0x9825, 0x5078, 0x1, 0x0);
        gbc.writeMem(0xe965, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3832);
        EXPECT(gbc.pc(), 0xe967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe965), 0xcb);
        EXPECT(gbc.readMem(0xe966), 0x84);
        // CB 84 03E3
        gbc.setState(0x6b8f, 0xff08, 0x9960, 0xb129, 0xd90e, 0x5ac3, 0x0, 0x1);
        gbc.writeMem(0x6b8f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xff08);
        EXPECT(gbc.pc(), 0x6b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03E4
        gbc.setState(0xd9e8, 0xfbc4, 0x40b0, 0x37c, 0xcc85, 0x7a9a, 0x0, 0x0);
        gbc.writeMem(0xd9e8, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfbc4);
        EXPECT(gbc.pc(), 0xd9ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e8), 0xcb);
        EXPECT(gbc.readMem(0xd9e9), 0x84);
        // CB 84 03E5
        gbc.setState(0xc83f, 0x7162, 0x8fe0, 0xec06, 0x239c, 0xf1de, 0x0, 0x1);
        gbc.writeMem(0xc83f, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7162);
        EXPECT(gbc.pc(), 0xc841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc83f), 0xcb);
        EXPECT(gbc.readMem(0xc840), 0x84);
        // CB 84 03E6
        gbc.setState(0x2666, 0xa0f2, 0x2400, 0xc15, 0xeb78, 0x15cd, 0x0, 0x0);
        gbc.writeMem(0x2666, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa0f2);
        EXPECT(gbc.pc(), 0x2668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 84 03E7
        gbc.setState(0x90a5, 0x8905, 0x8e80, 0x4f97, 0x4cb9, 0xe908, 0x0, 0x0);
        gbc.writeMem(0x90a5, { 0xcb, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8905);
        EXPECT(gbc.pc(), 0x90a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90a5), 0xcb);
        EXPECT(gbc.readMem(0x90a6), 0x84);
    }
