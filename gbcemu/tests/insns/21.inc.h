    TEST(gbcemu, opcode_21) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 21 0000
        gbc.setState(0x1f5f, 0x6be5, 0xcf00, 0x4d34, 0x5620, 0xd925, 0x1, 0x1);
        gbc.writeMem(0x1f5f, { 0x21, 0x37, 0xc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6be5, gbc.sp());
        EXPECT(0x1f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0001
        gbc.setState(0xb089, 0xc591, 0x37c0, 0x1472, 0xcc4d, 0x4218, 0x0, 0x1);
        gbc.writeMem(0xb089, { 0x21, 0xad, 0xcc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc591, gbc.sp());
        EXPECT(0xb08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb089));
        EXPECT(0xad, gbc.readMem(0xb08a));
        EXPECT(0xcc, gbc.readMem(0xb08b));
        // 21 0002
        gbc.setState(0xdb7, 0xed54, 0xdb20, 0x9c, 0xe7df, 0x1d22, 0x0, 0x1);
        gbc.writeMem(0xdb7, { 0x21, 0x21, 0xca });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xed54, gbc.sp());
        EXPECT(0xdba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0003
        gbc.setState(0x7dd2, 0xb97e, 0x5140, 0xc0b4, 0xc673, 0x12f5, 0x1, 0x0);
        gbc.writeMem(0x7dd2, { 0x21, 0x51, 0x9f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb97e, gbc.sp());
        EXPECT(0x7dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0004
        gbc.setState(0x7fc0, 0xbbc0, 0x27a0, 0x9f56, 0xbfbb, 0x9690, 0x1, 0x1);
        gbc.writeMem(0x7fc0, { 0x21, 0x80, 0x79 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbbc0, gbc.sp());
        EXPECT(0x7fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0005
        gbc.setState(0x51db, 0x17e9, 0xb8d0, 0x6c5c, 0xe076, 0x9471, 0x1, 0x0);
        gbc.writeMem(0x51db, { 0x21, 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x17e9, gbc.sp());
        EXPECT(0x51de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0006
        gbc.setState(0x7a2a, 0x3a0a, 0xc550, 0x4aaa, 0x46d3, 0x26a2, 0x0, 0x1);
        gbc.writeMem(0x7a2a, { 0x21, 0x59, 0xf1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3a0a, gbc.sp());
        EXPECT(0x7a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0007
        gbc.setState(0xafdb, 0xa5c, 0x9d50, 0x60c7, 0x940c, 0x740a, 0x0, 0x1);
        gbc.writeMem(0xafdb, { 0x21, 0xd2, 0xd3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa5c, gbc.sp());
        EXPECT(0xafde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xafdb));
        EXPECT(0xd2, gbc.readMem(0xafdc));
        EXPECT(0xd3, gbc.readMem(0xafdd));
        // 21 0008
        gbc.setState(0x5e0d, 0x9c3b, 0xd2e0, 0x1adc, 0xfc6, 0xd599, 0x0, 0x0);
        gbc.writeMem(0x5e0d, { 0x21, 0x1, 0xe2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9c3b, gbc.sp());
        EXPECT(0x5e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0009
        gbc.setState(0x9c2e, 0x2e32, 0x3130, 0x89c5, 0x9353, 0x89f2, 0x1, 0x0);
        gbc.writeMem(0x9c2e, { 0x21, 0xd, 0x77 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2e32, gbc.sp());
        EXPECT(0x9c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9c2e));
        EXPECT(0xd, gbc.readMem(0x9c2f));
        EXPECT(0x77, gbc.readMem(0x9c30));
        // 21 000A
        gbc.setState(0x714e, 0xf287, 0x1770, 0x8d1, 0xb29b, 0x2e06, 0x1, 0x1);
        gbc.writeMem(0x714e, { 0x21, 0xb1, 0xd4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf287, gbc.sp());
        EXPECT(0x7151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 000B
        gbc.setState(0xab98, 0xf09a, 0x5d40, 0x3a79, 0xe149, 0xdc61, 0x1, 0x0);
        gbc.writeMem(0xab98, { 0x21, 0x4, 0x7b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf09a, gbc.sp());
        EXPECT(0xab9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xab98));
        EXPECT(0x4, gbc.readMem(0xab99));
        EXPECT(0x7b, gbc.readMem(0xab9a));
        // 21 000C
        gbc.setState(0x9809, 0xc528, 0x3730, 0xba09, 0xd3cb, 0x5637, 0x0, 0x0);
        gbc.writeMem(0x9809, { 0x21, 0x49, 0xc1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc528, gbc.sp());
        EXPECT(0x980c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9809));
        EXPECT(0x49, gbc.readMem(0x980a));
        EXPECT(0xc1, gbc.readMem(0x980b));
        // 21 000D
        gbc.setState(0x9eba, 0x1c55, 0xb3d0, 0x87da, 0x3b26, 0xd92d, 0x1, 0x0);
        gbc.writeMem(0x9eba, { 0x21, 0xc6, 0x6d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1c55, gbc.sp());
        EXPECT(0x9ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9eba));
        EXPECT(0xc6, gbc.readMem(0x9ebb));
        EXPECT(0x6d, gbc.readMem(0x9ebc));
        // 21 000E
        gbc.setState(0xdf7c, 0xe189, 0x1830, 0xc90, 0xc365, 0xb081, 0x1, 0x1);
        gbc.writeMem(0xdf7c, { 0x21, 0xc7, 0x5c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe189, gbc.sp());
        EXPECT(0xdf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdf7c));
        EXPECT(0xc7, gbc.readMem(0xdf7d));
        EXPECT(0x5c, gbc.readMem(0xdf7e));
        // 21 000F
        gbc.setState(0x2f7c, 0x8822, 0xbbc0, 0x3f1a, 0xfe67, 0x379d, 0x1, 0x1);
        gbc.writeMem(0x2f7c, { 0x21, 0x4e, 0x94 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8822, gbc.sp());
        EXPECT(0x2f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0011
        gbc.setState(0xe253, 0x5aa7, 0xb9d0, 0x571a, 0xde35, 0x8298, 0x1, 0x0);
        gbc.writeMem(0xe253, { 0x21, 0x7f, 0x6e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5aa7, gbc.sp());
        EXPECT(0xe256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe253));
        EXPECT(0x7f, gbc.readMem(0xe254));
        EXPECT(0x6e, gbc.readMem(0xe255));
        // 21 0012
        gbc.setState(0x3d0e, 0x95a1, 0x6f60, 0x4122, 0x481f, 0xf9cf, 0x1, 0x0);
        gbc.writeMem(0x3d0e, { 0x21, 0xf9, 0x37 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x95a1, gbc.sp());
        EXPECT(0x3d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0013
        gbc.setState(0xbe74, 0xf826, 0x6230, 0x5bc3, 0x4b8d, 0xb65e, 0x0, 0x0);
        gbc.writeMem(0xbe74, { 0x21, 0xfb, 0x4d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf826, gbc.sp());
        EXPECT(0xbe77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbe74));
        EXPECT(0xfb, gbc.readMem(0xbe75));
        EXPECT(0x4d, gbc.readMem(0xbe76));
        // 21 0014
        gbc.setState(0x46a1, 0x4962, 0xfa30, 0x638b, 0xcba4, 0x7de2, 0x0, 0x1);
        gbc.writeMem(0x46a1, { 0x21, 0x50, 0x63 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4962, gbc.sp());
        EXPECT(0x46a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0015
        gbc.setState(0xa3c5, 0x4bab, 0xef80, 0xb62a, 0xcf36, 0x1fa6, 0x1, 0x0);
        gbc.writeMem(0xa3c5, { 0x21, 0xb6, 0x43 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4bab, gbc.sp());
        EXPECT(0xa3c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa3c5));
        EXPECT(0xb6, gbc.readMem(0xa3c6));
        EXPECT(0x43, gbc.readMem(0xa3c7));
        // 21 0016
        gbc.setState(0x9667, 0x11e1, 0xc600, 0xbd7b, 0x65b9, 0xe67d, 0x1, 0x0);
        gbc.writeMem(0x9667, { 0x21, 0x77, 0x4c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x11e1, gbc.sp());
        EXPECT(0x966a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9667));
        EXPECT(0x77, gbc.readMem(0x9668));
        EXPECT(0x4c, gbc.readMem(0x9669));
        // 21 0017
        gbc.setState(0x9e4a, 0x3763, 0xf150, 0x57f8, 0xab2f, 0x4be1, 0x0, 0x0);
        gbc.writeMem(0x9e4a, { 0x21, 0x5f, 0x36 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3763, gbc.sp());
        EXPECT(0x9e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9e4a));
        EXPECT(0x5f, gbc.readMem(0x9e4b));
        EXPECT(0x36, gbc.readMem(0x9e4c));
        // 21 0018
        gbc.setState(0xb83f, 0x860b, 0xc440, 0x14d6, 0x89ee, 0x1fd5, 0x1, 0x0);
        gbc.writeMem(0xb83f, { 0x21, 0xd4, 0x41 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x860b, gbc.sp());
        EXPECT(0xb842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb83f));
        EXPECT(0xd4, gbc.readMem(0xb840));
        EXPECT(0x41, gbc.readMem(0xb841));
        // 21 0019
        gbc.setState(0x2f59, 0x6c3c, 0x4560, 0x51e3, 0xa80f, 0x30ad, 0x0, 0x1);
        gbc.writeMem(0x2f59, { 0x21, 0x5e, 0xfa });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6c3c, gbc.sp());
        EXPECT(0x2f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 001A
        gbc.setState(0xd4bf, 0x11cc, 0x2470, 0x8907, 0x6cb6, 0x33a, 0x1, 0x1);
        gbc.writeMem(0xd4bf, { 0x21, 0xca, 0xae });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x11cc, gbc.sp());
        EXPECT(0xd4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd4bf));
        EXPECT(0xca, gbc.readMem(0xd4c0));
        EXPECT(0xae, gbc.readMem(0xd4c1));
        // 21 001B
        gbc.setState(0xad2e, 0x17dc, 0xf9c0, 0x7aa6, 0xa8cd, 0x17ad, 0x1, 0x1);
        gbc.writeMem(0xad2e, { 0x21, 0x8, 0x8b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x17dc, gbc.sp());
        EXPECT(0xad31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xad2e));
        EXPECT(0x8, gbc.readMem(0xad2f));
        EXPECT(0x8b, gbc.readMem(0xad30));
        // 21 001C
        gbc.setState(0x5cb, 0x638d, 0xda20, 0x9316, 0x4340, 0x3d23, 0x1, 0x1);
        gbc.writeMem(0x5cb, { 0x21, 0xa3, 0x16 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x638d, gbc.sp());
        EXPECT(0x5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 001D
        gbc.setState(0x1b2, 0x7d87, 0x3130, 0x5c8f, 0xc129, 0x5dcf, 0x1, 0x0);
        gbc.writeMem(0x1b2, { 0x21, 0xc2, 0x56 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7d87, gbc.sp());
        EXPECT(0x1b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 001E
        gbc.setState(0xd885, 0xa3e7, 0x5260, 0xe620, 0x648f, 0x6a9, 0x0, 0x0);
        gbc.writeMem(0xd885, { 0x21, 0xf5, 0x48 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa3e7, gbc.sp());
        EXPECT(0xd888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd885));
        EXPECT(0xf5, gbc.readMem(0xd886));
        EXPECT(0x48, gbc.readMem(0xd887));
        // 21 001F
        gbc.setState(0x72f6, 0x7ca6, 0xc5a0, 0x64d2, 0xe439, 0x6c80, 0x0, 0x1);
        gbc.writeMem(0x72f6, { 0x21, 0xd9, 0xd0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7ca6, gbc.sp());
        EXPECT(0x72f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0020
        gbc.setState(0xa89c, 0x71bc, 0xcbb0, 0x6b2a, 0x5f49, 0xff4, 0x0, 0x1);
        gbc.writeMem(0xa89c, { 0x21, 0x2c, 0x82 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x71bc, gbc.sp());
        EXPECT(0xa89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa89c));
        EXPECT(0x2c, gbc.readMem(0xa89d));
        EXPECT(0x82, gbc.readMem(0xa89e));
        // 21 0021
        gbc.setState(0x5833, 0xee8e, 0x1400, 0x8f38, 0xf094, 0x58c9, 0x1, 0x0);
        gbc.writeMem(0x5833, { 0x21, 0x6e, 0xe6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xee8e, gbc.sp());
        EXPECT(0x5836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0022
        gbc.setState(0xd83f, 0xe6a3, 0x3a10, 0x2b9d, 0x32fb, 0xdf8, 0x1, 0x1);
        gbc.writeMem(0xd83f, { 0x21, 0x1c, 0xc1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe6a3, gbc.sp());
        EXPECT(0xd842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd83f));
        EXPECT(0x1c, gbc.readMem(0xd840));
        EXPECT(0xc1, gbc.readMem(0xd841));
        // 21 0023
        gbc.setState(0xceba, 0xaa08, 0xf460, 0xfa9d, 0x5fa7, 0xd590, 0x1, 0x1);
        gbc.writeMem(0xceba, { 0x21, 0x7f, 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xaa08, gbc.sp());
        EXPECT(0xcebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xceba));
        EXPECT(0x7f, gbc.readMem(0xcebb));
        EXPECT(0x8f, gbc.readMem(0xcebc));
        // 21 0024
        gbc.setState(0x7cdb, 0x502b, 0xa370, 0xca06, 0xe078, 0x6703, 0x0, 0x0);
        gbc.writeMem(0x7cdb, { 0x21, 0x35, 0xfd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x502b, gbc.sp());
        EXPECT(0x7cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0025
        gbc.setState(0xb764, 0x7285, 0x24a0, 0x2562, 0x874b, 0x5043, 0x0, 0x1);
        gbc.writeMem(0xb764, { 0x21, 0x90, 0xad });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7285, gbc.sp());
        EXPECT(0xb767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb764));
        EXPECT(0x90, gbc.readMem(0xb765));
        EXPECT(0xad, gbc.readMem(0xb766));
        // 21 0027
        gbc.setState(0x1e3e, 0xf7a2, 0x7e00, 0xfbe, 0xc958, 0x297c, 0x0, 0x1);
        gbc.writeMem(0x1e3e, { 0x21, 0xc9, 0x44 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf7a2, gbc.sp());
        EXPECT(0x1e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0028
        gbc.setState(0xb9c0, 0xdce0, 0x5ab0, 0x2f18, 0xd0d, 0x36b2, 0x1, 0x1);
        gbc.writeMem(0xb9c0, { 0x21, 0xf9, 0x2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdce0, gbc.sp());
        EXPECT(0xb9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb9c0));
        EXPECT(0xf9, gbc.readMem(0xb9c1));
        EXPECT(0x2, gbc.readMem(0xb9c2));
        // 21 0029
        gbc.setState(0xa6ba, 0x7900, 0x38c0, 0xbaea, 0x4d83, 0xb61b, 0x0, 0x0);
        gbc.writeMem(0xa6ba, { 0x21, 0xc7, 0x6c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7900, gbc.sp());
        EXPECT(0xa6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa6ba));
        EXPECT(0xc7, gbc.readMem(0xa6bb));
        EXPECT(0x6c, gbc.readMem(0xa6bc));
        // 21 002A
        gbc.setState(0xd372, 0x5908, 0x3e70, 0x7cba, 0x95c8, 0x9838, 0x1, 0x1);
        gbc.writeMem(0xd372, { 0x21, 0xf4, 0xc6 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5908, gbc.sp());
        EXPECT(0xd375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd372));
        EXPECT(0xf4, gbc.readMem(0xd373));
        EXPECT(0xc6, gbc.readMem(0xd374));
        // 21 002B
        gbc.setState(0x7221, 0x9a2, 0x80e0, 0xa5bc, 0xcd5d, 0x4469, 0x0, 0x1);
        gbc.writeMem(0x7221, { 0x21, 0x15, 0x90 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9a2, gbc.sp());
        EXPECT(0x7224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 002C
        gbc.setState(0x248e, 0xc4f9, 0xa0c0, 0xa193, 0xc673, 0x1db0, 0x1, 0x1);
        gbc.writeMem(0x248e, { 0x21, 0x0, 0x1b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc4f9, gbc.sp());
        EXPECT(0x2491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 002D
        gbc.setState(0x7948, 0xd98e, 0xcd30, 0x8e35, 0x1197, 0x666b, 0x0, 0x1);
        gbc.writeMem(0x7948, { 0x21, 0x80, 0xe });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd98e, gbc.sp());
        EXPECT(0x794b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 002E
        gbc.setState(0x2224, 0x33a9, 0x83e0, 0x514f, 0x99a9, 0x5430, 0x1, 0x0);
        gbc.writeMem(0x2224, { 0x21, 0x84, 0x48 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x33a9, gbc.sp());
        EXPECT(0x2227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 002F
        gbc.setState(0xcddb, 0xff0e, 0xcaa0, 0x9390, 0x27a3, 0x82f6, 0x1, 0x1);
        gbc.writeMem(0xcddb, { 0x21, 0x20, 0xd6 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xff0e, gbc.sp());
        EXPECT(0xcdde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcddb));
        EXPECT(0x20, gbc.readMem(0xcddc));
        EXPECT(0xd6, gbc.readMem(0xcddd));
        // 21 0030
        gbc.setState(0x771d, 0xf5ab, 0xa4b0, 0xcd0c, 0x542d, 0x3849, 0x1, 0x1);
        gbc.writeMem(0x771d, { 0x21, 0x6c, 0xb6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf5ab, gbc.sp());
        EXPECT(0x7720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0031
        gbc.setState(0x80cd, 0xf031, 0xbd90, 0xf0f9, 0x91f1, 0x4a46, 0x1, 0x0);
        gbc.writeMem(0x80cd, { 0x21, 0xc2, 0x3a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf031, gbc.sp());
        EXPECT(0x80d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x80cd));
        EXPECT(0xc2, gbc.readMem(0x80ce));
        EXPECT(0x3a, gbc.readMem(0x80cf));
        // 21 0032
        gbc.setState(0x1967, 0xb214, 0xf310, 0x93b9, 0x6f5d, 0x642, 0x0, 0x1);
        gbc.writeMem(0x1967, { 0x21, 0xec, 0xd0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb214, gbc.sp());
        EXPECT(0x196a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0033
        gbc.setState(0xcd8a, 0x51bc, 0x8950, 0xbb87, 0xca9d, 0xecf, 0x0, 0x0);
        gbc.writeMem(0xcd8a, { 0x21, 0x72, 0xc3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x51bc, gbc.sp());
        EXPECT(0xcd8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcd8a));
        EXPECT(0x72, gbc.readMem(0xcd8b));
        EXPECT(0xc3, gbc.readMem(0xcd8c));
        // 21 0036
        gbc.setState(0x825f, 0x3c97, 0xa660, 0x431c, 0xda4e, 0xafd7, 0x0, 0x0);
        gbc.writeMem(0x825f, { 0x21, 0x9, 0xad });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3c97, gbc.sp());
        EXPECT(0x8262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x825f));
        EXPECT(0x9, gbc.readMem(0x8260));
        EXPECT(0xad, gbc.readMem(0x8261));
        // 21 0037
        gbc.setState(0xbb12, 0xbfbb, 0xad30, 0xe323, 0xa8a7, 0xe022, 0x0, 0x1);
        gbc.writeMem(0xbb12, { 0x21, 0xbd, 0x11 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbfbb, gbc.sp());
        EXPECT(0xbb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbb12));
        EXPECT(0xbd, gbc.readMem(0xbb13));
        EXPECT(0x11, gbc.readMem(0xbb14));
        // 21 0038
        gbc.setState(0x7d74, 0x9ba2, 0xbd70, 0x8b30, 0xc2da, 0x331e, 0x0, 0x1);
        gbc.writeMem(0x7d74, { 0x21, 0xf, 0xb4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9ba2, gbc.sp());
        EXPECT(0x7d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0039
        gbc.setState(0x9c8b, 0xaa5b, 0xd8a0, 0xd384, 0xc4ef, 0x730b, 0x0, 0x1);
        gbc.writeMem(0x9c8b, { 0x21, 0xd5, 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaa5b, gbc.sp());
        EXPECT(0x9c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9c8b));
        EXPECT(0xd5, gbc.readMem(0x9c8c));
        EXPECT(0xd0, gbc.readMem(0x9c8d));
        // 21 003A
        gbc.setState(0xd1ff, 0x1e7c, 0x2390, 0x3984, 0x6340, 0x6754, 0x0, 0x1);
        gbc.writeMem(0xd1ff, { 0x21, 0xf3, 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1e7c, gbc.sp());
        EXPECT(0xd202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd1ff));
        EXPECT(0xf3, gbc.readMem(0xd200));
        EXPECT(0x6a, gbc.readMem(0xd201));
        // 21 003B
        gbc.setState(0xf60, 0x94c7, 0x7e80, 0xff90, 0xcea, 0x6bff, 0x1, 0x1);
        gbc.writeMem(0xf60, { 0x21, 0xe, 0xa1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x94c7, gbc.sp());
        EXPECT(0xf63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 003C
        gbc.setState(0x87da, 0x4f41, 0xaa60, 0xf1f0, 0xb3fb, 0xc0b7, 0x1, 0x1);
        gbc.writeMem(0x87da, { 0x21, 0xd0, 0x45 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4f41, gbc.sp());
        EXPECT(0x87dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x87da));
        EXPECT(0xd0, gbc.readMem(0x87db));
        EXPECT(0x45, gbc.readMem(0x87dc));
        // 21 003D
        gbc.setState(0x57fd, 0x261d, 0xe160, 0x19a1, 0xa348, 0x9cf2, 0x1, 0x0);
        gbc.writeMem(0x57fd, { 0x21, 0xc5, 0x88 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x261d, gbc.sp());
        EXPECT(0x5800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 003E
        gbc.setState(0x5131, 0xf395, 0xd470, 0xe589, 0x68c, 0xecca, 0x0, 0x0);
        gbc.writeMem(0x5131, { 0x21, 0x9b, 0x37 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf395, gbc.sp());
        EXPECT(0x5134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 003F
        gbc.setState(0x371b, 0xe954, 0xe210, 0x3ac9, 0x7771, 0x658a, 0x0, 0x0);
        gbc.writeMem(0x371b, { 0x21, 0xf5, 0x8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe954, gbc.sp());
        EXPECT(0x371e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0040
        gbc.setState(0xb3d1, 0xfdc4, 0x5ff0, 0xd5ff, 0xfe92, 0x68b, 0x1, 0x1);
        gbc.writeMem(0xb3d1, { 0x21, 0xc9, 0x51 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfdc4, gbc.sp());
        EXPECT(0xb3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb3d1));
        EXPECT(0xc9, gbc.readMem(0xb3d2));
        EXPECT(0x51, gbc.readMem(0xb3d3));
        // 21 0041
        gbc.setState(0x145c, 0x3e1f, 0x76a0, 0xe90e, 0x58db, 0x25df, 0x1, 0x0);
        gbc.writeMem(0x145c, { 0x21, 0x45, 0xff });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3e1f, gbc.sp());
        EXPECT(0x145f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0042
        gbc.setState(0xa3c9, 0x34fa, 0x7a60, 0x7bec, 0xeb3c, 0xa28e, 0x1, 0x1);
        gbc.writeMem(0xa3c9, { 0x21, 0xd5, 0x6b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x34fa, gbc.sp());
        EXPECT(0xa3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa3c9));
        EXPECT(0xd5, gbc.readMem(0xa3ca));
        EXPECT(0x6b, gbc.readMem(0xa3cb));
        // 21 0043
        gbc.setState(0xd75c, 0xc239, 0xcd20, 0x60ce, 0x51a7, 0x96b0, 0x0, 0x0);
        gbc.writeMem(0xd75c, { 0x21, 0xc5, 0xee });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc239, gbc.sp());
        EXPECT(0xd75f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd75c));
        EXPECT(0xc5, gbc.readMem(0xd75d));
        EXPECT(0xee, gbc.readMem(0xd75e));
        // 21 0044
        gbc.setState(0xe83b, 0xb7c5, 0xb500, 0xcd31, 0xc2dd, 0xd61a, 0x1, 0x1);
        gbc.writeMem(0xe83b, { 0x21, 0xf8, 0xf0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb7c5, gbc.sp());
        EXPECT(0xe83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe83b));
        EXPECT(0xf8, gbc.readMem(0xe83c));
        EXPECT(0xf0, gbc.readMem(0xe83d));
        // 21 0045
        gbc.setState(0xaf4f, 0xb213, 0x5830, 0xea87, 0x39cc, 0x5cdc, 0x1, 0x0);
        gbc.writeMem(0xaf4f, { 0x21, 0xd7, 0xff });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb213, gbc.sp());
        EXPECT(0xaf52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xaf4f));
        EXPECT(0xd7, gbc.readMem(0xaf50));
        EXPECT(0xff, gbc.readMem(0xaf51));
        // 21 0046
        gbc.setState(0x5afa, 0x8f00, 0xd2f0, 0x2f3, 0xaaaa, 0xa10f, 0x1, 0x1);
        gbc.writeMem(0x5afa, { 0x21, 0x96, 0xd7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8f00, gbc.sp());
        EXPECT(0x5afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0047
        gbc.setState(0x8381, 0x83f8, 0xc9f0, 0x23d8, 0x6164, 0x9262, 0x1, 0x1);
        gbc.writeMem(0x8381, { 0x21, 0xd1, 0xbf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x83f8, gbc.sp());
        EXPECT(0x8384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8381));
        EXPECT(0xd1, gbc.readMem(0x8382));
        EXPECT(0xbf, gbc.readMem(0x8383));
        // 21 0048
        gbc.setState(0x3f78, 0x1129, 0x5b0, 0x30b7, 0x1413, 0x1363, 0x0, 0x1);
        gbc.writeMem(0x3f78, { 0x21, 0x96, 0xe9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1129, gbc.sp());
        EXPECT(0x3f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0049
        gbc.setState(0x917c, 0x6a1f, 0x4080, 0x512, 0x6d3b, 0x9706, 0x0, 0x1);
        gbc.writeMem(0x917c, { 0x21, 0xe8, 0x48 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6a1f, gbc.sp());
        EXPECT(0x917f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x917c));
        EXPECT(0xe8, gbc.readMem(0x917d));
        EXPECT(0x48, gbc.readMem(0x917e));
        // 21 004A
        gbc.setState(0x8d71, 0xb34b, 0x9220, 0xa6a0, 0xf184, 0x6f4b, 0x1, 0x1);
        gbc.writeMem(0x8d71, { 0x21, 0x4, 0x4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb34b, gbc.sp());
        EXPECT(0x8d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8d71));
        EXPECT(0x4, gbc.readMem(0x8d72));
        EXPECT(0x4, gbc.readMem(0x8d73));
        // 21 004B
        gbc.setState(0xd479, 0x28db, 0x7000, 0x1871, 0x4c82, 0xb294, 0x0, 0x0);
        gbc.writeMem(0xd479, { 0x21, 0xf1, 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x28db, gbc.sp());
        EXPECT(0xd47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd479));
        EXPECT(0xf1, gbc.readMem(0xd47a));
        EXPECT(0x13, gbc.readMem(0xd47b));
        // 21 004C
        gbc.setState(0x859c, 0x7292, 0xe230, 0x7319, 0x4535, 0x1ada, 0x0, 0x1);
        gbc.writeMem(0x859c, { 0x21, 0x10, 0x53 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7292, gbc.sp());
        EXPECT(0x859f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x859c));
        EXPECT(0x10, gbc.readMem(0x859d));
        EXPECT(0x53, gbc.readMem(0x859e));
        // 21 004D
        gbc.setState(0xbf58, 0xc1f9, 0xb680, 0x6915, 0x2daa, 0xfa51, 0x0, 0x0);
        gbc.writeMem(0xbf58, { 0x21, 0x53, 0x2e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc1f9, gbc.sp());
        EXPECT(0xbf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbf58));
        EXPECT(0x53, gbc.readMem(0xbf59));
        EXPECT(0x2e, gbc.readMem(0xbf5a));
        // 21 004E
        gbc.setState(0x66db, 0xd674, 0x9480, 0xcf52, 0x5541, 0x5aed, 0x0, 0x1);
        gbc.writeMem(0x66db, { 0x21, 0x6c, 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd674, gbc.sp());
        EXPECT(0x66de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 004F
        gbc.setState(0xbc89, 0x1bcb, 0xcea0, 0x163, 0x863f, 0x26b7, 0x1, 0x1);
        gbc.writeMem(0xbc89, { 0x21, 0xd2, 0xf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1bcb, gbc.sp());
        EXPECT(0xbc8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbc89));
        EXPECT(0xd2, gbc.readMem(0xbc8a));
        EXPECT(0xf, gbc.readMem(0xbc8b));
        // 21 0050
        gbc.setState(0x4923, 0xf694, 0xf150, 0xcc50, 0x1b33, 0xf9c6, 0x0, 0x1);
        gbc.writeMem(0x4923, { 0x21, 0xda, 0x43 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf694, gbc.sp());
        EXPECT(0x4926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0051
        gbc.setState(0x7826, 0x19b2, 0x5440, 0x8839, 0xcd8f, 0xd93f, 0x0, 0x0);
        gbc.writeMem(0x7826, { 0x21, 0x22, 0x72 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x19b2, gbc.sp());
        EXPECT(0x7829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0052
        gbc.setState(0x91a6, 0x2f0b, 0x4dc0, 0x7ebb, 0xe800, 0xde39, 0x0, 0x0);
        gbc.writeMem(0x91a6, { 0x21, 0x34, 0x8b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2f0b, gbc.sp());
        EXPECT(0x91a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x91a6));
        EXPECT(0x34, gbc.readMem(0x91a7));
        EXPECT(0x8b, gbc.readMem(0x91a8));
        // 21 0053
        gbc.setState(0xc0d6, 0x4f6e, 0x7cb0, 0x41d6, 0x6a55, 0xbb29, 0x1, 0x0);
        gbc.writeMem(0xc0d6, { 0x21, 0xee, 0x38 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4f6e, gbc.sp());
        EXPECT(0xc0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc0d6));
        EXPECT(0xee, gbc.readMem(0xc0d7));
        EXPECT(0x38, gbc.readMem(0xc0d8));
        // 21 0054
        gbc.setState(0x9073, 0xcae8, 0x3540, 0x8e0d, 0xad79, 0xf530, 0x1, 0x0);
        gbc.writeMem(0x9073, { 0x21, 0x99, 0x46 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcae8, gbc.sp());
        EXPECT(0x9076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9073));
        EXPECT(0x99, gbc.readMem(0x9074));
        EXPECT(0x46, gbc.readMem(0x9075));
        // 21 0055
        gbc.setState(0xba65, 0xb76, 0x3750, 0xeb9d, 0x7710, 0x6e65, 0x0, 0x1);
        gbc.writeMem(0xba65, { 0x21, 0x5d, 0xc8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb76, gbc.sp());
        EXPECT(0xba68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xba65));
        EXPECT(0x5d, gbc.readMem(0xba66));
        EXPECT(0xc8, gbc.readMem(0xba67));
        // 21 0056
        gbc.setState(0x20c1, 0x7258, 0x770, 0xe23, 0xad, 0xf0f6, 0x0, 0x1);
        gbc.writeMem(0x20c1, { 0x21, 0x4, 0xf4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7258, gbc.sp());
        EXPECT(0x20c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0058
        gbc.setState(0x7ff4, 0xe455, 0x5470, 0x2b61, 0x8cd3, 0x7e52, 0x0, 0x1);
        gbc.writeMem(0x7ff4, { 0x21, 0x6a, 0xd5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe455, gbc.sp());
        EXPECT(0x7ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0059
        gbc.setState(0xc233, 0x447e, 0x67b0, 0xfd8f, 0xfb05, 0x1641, 0x0, 0x1);
        gbc.writeMem(0xc233, { 0x21, 0x18, 0xa });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x447e, gbc.sp());
        EXPECT(0xc236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc233));
        EXPECT(0x18, gbc.readMem(0xc234));
        EXPECT(0xa, gbc.readMem(0xc235));
        // 21 005A
        gbc.setState(0xe1f7, 0x25d, 0xd7f0, 0x377f, 0x2e7d, 0x351e, 0x0, 0x1);
        gbc.writeMem(0xe1f7, { 0x21, 0x5e, 0x1a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x25d, gbc.sp());
        EXPECT(0xe1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe1f7));
        EXPECT(0x5e, gbc.readMem(0xe1f8));
        EXPECT(0x1a, gbc.readMem(0xe1f9));
        // 21 005B
        gbc.setState(0x8899, 0x47e0, 0x9ee0, 0x2b0c, 0xa93c, 0x2319, 0x1, 0x1);
        gbc.writeMem(0x8899, { 0x21, 0xa2, 0x30 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x47e0, gbc.sp());
        EXPECT(0x889c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8899));
        EXPECT(0xa2, gbc.readMem(0x889a));
        EXPECT(0x30, gbc.readMem(0x889b));
        // 21 005C
        gbc.setState(0xaea7, 0x7fbf, 0x2320, 0xc330, 0x8f03, 0x2f1e, 0x1, 0x1);
        gbc.writeMem(0xaea7, { 0x21, 0x95, 0xe6 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7fbf, gbc.sp());
        EXPECT(0xaeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xaea7));
        EXPECT(0x95, gbc.readMem(0xaea8));
        EXPECT(0xe6, gbc.readMem(0xaea9));
        // 21 005D
        gbc.setState(0x2606, 0x9a41, 0x6d70, 0x2c6b, 0x1194, 0x5241, 0x0, 0x1);
        gbc.writeMem(0x2606, { 0x21, 0x5d, 0x9a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9a41, gbc.sp());
        EXPECT(0x2609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 005E
        gbc.setState(0xdd99, 0x2c8c, 0x88b0, 0x1c1a, 0x9741, 0x3b14, 0x0, 0x1);
        gbc.writeMem(0xdd99, { 0x21, 0x9c, 0x53 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2c8c, gbc.sp());
        EXPECT(0xdd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdd99));
        EXPECT(0x9c, gbc.readMem(0xdd9a));
        EXPECT(0x53, gbc.readMem(0xdd9b));
        // 21 005F
        gbc.setState(0xb6b, 0x52ac, 0x3c30, 0x6c4d, 0x38e1, 0xbb02, 0x1, 0x1);
        gbc.writeMem(0xb6b, { 0x21, 0x22, 0xd9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x52ac, gbc.sp());
        EXPECT(0xb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0060
        gbc.setState(0x8086, 0x4a08, 0x5420, 0x79b, 0x9fd7, 0x8697, 0x0, 0x0);
        gbc.writeMem(0x8086, { 0x21, 0xdf, 0x64 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4a08, gbc.sp());
        EXPECT(0x8089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8086));
        EXPECT(0xdf, gbc.readMem(0x8087));
        EXPECT(0x64, gbc.readMem(0x8088));
        // 21 0061
        gbc.setState(0x37d8, 0xbb3, 0xb320, 0xac69, 0x5ef1, 0x8220, 0x0, 0x1);
        gbc.writeMem(0x37d8, { 0x21, 0x59, 0xf3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbb3, gbc.sp());
        EXPECT(0x37db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0063
        gbc.setState(0xe4f6, 0x2a5f, 0xf900, 0x9cb, 0x525d, 0x31b5, 0x0, 0x1);
        gbc.writeMem(0xe4f6, { 0x21, 0x3f, 0x65 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2a5f, gbc.sp());
        EXPECT(0xe4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe4f6));
        EXPECT(0x3f, gbc.readMem(0xe4f7));
        EXPECT(0x65, gbc.readMem(0xe4f8));
        // 21 0064
        gbc.setState(0xc07a, 0xdf18, 0x8880, 0xec62, 0x5393, 0x6d66, 0x0, 0x1);
        gbc.writeMem(0xc07a, { 0x21, 0xda, 0xb9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdf18, gbc.sp());
        EXPECT(0xc07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc07a));
        EXPECT(0xda, gbc.readMem(0xc07b));
        EXPECT(0xb9, gbc.readMem(0xc07c));
        // 21 0065
        gbc.setState(0x33c2, 0x468a, 0x52b0, 0xb32a, 0x9923, 0x2dc4, 0x1, 0x0);
        gbc.writeMem(0x33c2, { 0x21, 0x79, 0x59 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x468a, gbc.sp());
        EXPECT(0x33c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0066
        gbc.setState(0xabf2, 0x7f04, 0x4970, 0x4f25, 0x5249, 0x427e, 0x1, 0x0);
        gbc.writeMem(0xabf2, { 0x21, 0x45, 0x3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7f04, gbc.sp());
        EXPECT(0xabf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xabf2));
        EXPECT(0x45, gbc.readMem(0xabf3));
        EXPECT(0x3, gbc.readMem(0xabf4));
        // 21 0067
        gbc.setState(0xdb56, 0xbf50, 0xdc20, 0xc7d0, 0x2f05, 0xb69b, 0x0, 0x0);
        gbc.writeMem(0xdb56, { 0x21, 0x40, 0xea });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbf50, gbc.sp());
        EXPECT(0xdb59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdb56));
        EXPECT(0x40, gbc.readMem(0xdb57));
        EXPECT(0xea, gbc.readMem(0xdb58));
        // 21 006A
        gbc.setState(0x4583, 0x4af, 0x5910, 0x37c2, 0xc38, 0x315d, 0x1, 0x1);
        gbc.writeMem(0x4583, { 0x21, 0xe9, 0x45 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4af, gbc.sp());
        EXPECT(0x4586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 006B
        gbc.setState(0x15f, 0x32af, 0x77f0, 0x7c0, 0xebc7, 0x7d35, 0x0, 0x0);
        gbc.writeMem(0x15f, { 0x21, 0x42, 0xe0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x32af, gbc.sp());
        EXPECT(0x162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 006C
        gbc.setState(0xe924, 0x6481, 0xf100, 0xc261, 0x892b, 0xa318, 0x0, 0x1);
        gbc.writeMem(0xe924, { 0x21, 0xb0, 0x12 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6481, gbc.sp());
        EXPECT(0xe927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe924));
        EXPECT(0xb0, gbc.readMem(0xe925));
        EXPECT(0x12, gbc.readMem(0xe926));
        // 21 006D
        gbc.setState(0x7744, 0x83b3, 0x4d40, 0xd029, 0x64a7, 0xa654, 0x1, 0x1);
        gbc.writeMem(0x7744, { 0x21, 0xd5, 0x99 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x83b3, gbc.sp());
        EXPECT(0x7747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 006E
        gbc.setState(0xaee6, 0xea8, 0x9120, 0x3586, 0xa3ac, 0xc99d, 0x1, 0x1);
        gbc.writeMem(0xaee6, { 0x21, 0x36, 0x8b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xea8, gbc.sp());
        EXPECT(0xaee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xaee6));
        EXPECT(0x36, gbc.readMem(0xaee7));
        EXPECT(0x8b, gbc.readMem(0xaee8));
        // 21 006F
        gbc.setState(0x3c8d, 0xbc, 0xc120, 0xf206, 0x736d, 0x43c2, 0x1, 0x0);
        gbc.writeMem(0x3c8d, { 0x21, 0xc9, 0xa1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbc, gbc.sp());
        EXPECT(0x3c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0070
        gbc.setState(0x52c6, 0x74f1, 0xd750, 0x2aa7, 0xf063, 0xdfe5, 0x0, 0x0);
        gbc.writeMem(0x52c6, { 0x21, 0x44, 0x48 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x74f1, gbc.sp());
        EXPECT(0x52c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0072
        gbc.setState(0xcf3f, 0xd3f5, 0x35f0, 0xa7f2, 0xc9ad, 0x3fb9, 0x0, 0x1);
        gbc.writeMem(0xcf3f, { 0x21, 0x6f, 0x85 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd3f5, gbc.sp());
        EXPECT(0xcf42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcf3f));
        EXPECT(0x6f, gbc.readMem(0xcf40));
        EXPECT(0x85, gbc.readMem(0xcf41));
        // 21 0073
        gbc.setState(0xa3a6, 0xb777, 0x9000, 0x6951, 0x3ea0, 0x378b, 0x0, 0x0);
        gbc.writeMem(0xa3a6, { 0x21, 0x6b, 0xc3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb777, gbc.sp());
        EXPECT(0xa3a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa3a6));
        EXPECT(0x6b, gbc.readMem(0xa3a7));
        EXPECT(0xc3, gbc.readMem(0xa3a8));
        // 21 0074
        gbc.setState(0x91e6, 0xf69f, 0xb320, 0xb494, 0x8b51, 0xb8e4, 0x0, 0x1);
        gbc.writeMem(0x91e6, { 0x21, 0x64, 0x1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf69f, gbc.sp());
        EXPECT(0x91e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x91e6));
        EXPECT(0x64, gbc.readMem(0x91e7));
        EXPECT(0x1, gbc.readMem(0x91e8));
        // 21 0075
        gbc.setState(0x80fb, 0x88e2, 0xbbb0, 0x5a42, 0x21cf, 0x9597, 0x0, 0x0);
        gbc.writeMem(0x80fb, { 0x21, 0xbf, 0x7f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x88e2, gbc.sp());
        EXPECT(0x80fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x80fb));
        EXPECT(0xbf, gbc.readMem(0x80fc));
        EXPECT(0x7f, gbc.readMem(0x80fd));
        // 21 0076
        gbc.setState(0xba91, 0x962b, 0xadf0, 0xb6e2, 0x7ca4, 0xb450, 0x1, 0x0);
        gbc.writeMem(0xba91, { 0x21, 0xbc, 0x87 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x962b, gbc.sp());
        EXPECT(0xba94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xba91));
        EXPECT(0xbc, gbc.readMem(0xba92));
        EXPECT(0x87, gbc.readMem(0xba93));
        // 21 0077
        gbc.setState(0xd5d, 0xf520, 0x2090, 0xbe6a, 0x2caa, 0x730, 0x0, 0x1);
        gbc.writeMem(0xd5d, { 0x21, 0x6d, 0x5f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf520, gbc.sp());
        EXPECT(0xd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0078
        gbc.setState(0x25c1, 0xfdf5, 0xa990, 0x2abe, 0x31b, 0xc82d, 0x0, 0x0);
        gbc.writeMem(0x25c1, { 0x21, 0x8a, 0x8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfdf5, gbc.sp());
        EXPECT(0x25c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0079
        gbc.setState(0x86d5, 0x2f29, 0xdaa0, 0x1a7c, 0xbf15, 0x9a2e, 0x1, 0x0);
        gbc.writeMem(0x86d5, { 0x21, 0x1f, 0xfe });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2f29, gbc.sp());
        EXPECT(0x86d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x86d5));
        EXPECT(0x1f, gbc.readMem(0x86d6));
        EXPECT(0xfe, gbc.readMem(0x86d7));
        // 21 007A
        gbc.setState(0x1953, 0xdb42, 0xc9f0, 0xf73c, 0x620d, 0xee80, 0x0, 0x0);
        gbc.writeMem(0x1953, { 0x21, 0x8c, 0xf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdb42, gbc.sp());
        EXPECT(0x1956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 007B
        gbc.setState(0x52f1, 0x2df5, 0x8ba0, 0xc70a, 0xc8a3, 0xc3ec, 0x0, 0x1);
        gbc.writeMem(0x52f1, { 0x21, 0x96, 0x77 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2df5, gbc.sp());
        EXPECT(0x52f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 007C
        gbc.setState(0x7197, 0xc577, 0x5b50, 0x82ba, 0x379c, 0x1375, 0x1, 0x0);
        gbc.writeMem(0x7197, { 0x21, 0xd2, 0xf0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc577, gbc.sp());
        EXPECT(0x719a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 007D
        gbc.setState(0x475c, 0x4ab1, 0xe200, 0x400, 0x6452, 0x7516, 0x0, 0x0);
        gbc.writeMem(0x475c, { 0x21, 0xdb, 0xaf });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4ab1, gbc.sp());
        EXPECT(0x475f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 007E
        gbc.setState(0x9ff, 0x41f3, 0x1030, 0x1cf, 0x5c6a, 0xdae5, 0x1, 0x1);
        gbc.writeMem(0x9ff, { 0x21, 0xeb, 0xb6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x41f3, gbc.sp());
        EXPECT(0xa02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 007F
        gbc.setState(0x5ce7, 0x230d, 0xa7a0, 0x2bdc, 0xf712, 0xacd, 0x0, 0x0);
        gbc.writeMem(0x5ce7, { 0x21, 0xd3, 0xa5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x230d, gbc.sp());
        EXPECT(0x5cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0080
        gbc.setState(0xaec4, 0xd74b, 0x6620, 0x9575, 0x1c25, 0xa85e, 0x0, 0x1);
        gbc.writeMem(0xaec4, { 0x21, 0x7, 0x59 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd74b, gbc.sp());
        EXPECT(0xaec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xaec4));
        EXPECT(0x7, gbc.readMem(0xaec5));
        EXPECT(0x59, gbc.readMem(0xaec6));
        // 21 0081
        gbc.setState(0x4f44, 0x3f0e, 0xaae0, 0x8790, 0x8442, 0xc756, 0x1, 0x0);
        gbc.writeMem(0x4f44, { 0x21, 0xe2, 0x44 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3f0e, gbc.sp());
        EXPECT(0x4f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0082
        gbc.setState(0x834c, 0xb91b, 0x91b0, 0xc9c8, 0x86c7, 0x5f40, 0x0, 0x0);
        gbc.writeMem(0x834c, { 0x21, 0x7c, 0x76 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb91b, gbc.sp());
        EXPECT(0x834f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x834c));
        EXPECT(0x7c, gbc.readMem(0x834d));
        EXPECT(0x76, gbc.readMem(0x834e));
        // 21 0083
        gbc.setState(0x941, 0x5b12, 0xe2e0, 0x9e2, 0xda8c, 0xc309, 0x1, 0x1);
        gbc.writeMem(0x941, { 0x21, 0x4d, 0x5e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5b12, gbc.sp());
        EXPECT(0x944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0084
        gbc.setState(0x68dd, 0x43d, 0xcdf0, 0x9711, 0x624d, 0x4f16, 0x0, 0x0);
        gbc.writeMem(0x68dd, { 0x21, 0x6c, 0x1b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x43d, gbc.sp());
        EXPECT(0x68e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0085
        gbc.setState(0xea1, 0x916b, 0x52c0, 0xda66, 0xbbce, 0xc937, 0x0, 0x0);
        gbc.writeMem(0xea1, { 0x21, 0x4f, 0xa4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x916b, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0086
        gbc.setState(0xd2b8, 0xa02a, 0x96d0, 0xc9df, 0x9e76, 0x5c67, 0x1, 0x0);
        gbc.writeMem(0xd2b8, { 0x21, 0xa, 0xd1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa02a, gbc.sp());
        EXPECT(0xd2bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd2b8));
        EXPECT(0xa, gbc.readMem(0xd2b9));
        EXPECT(0xd1, gbc.readMem(0xd2ba));
        // 21 0087
        gbc.setState(0x62ca, 0xa91e, 0xdc10, 0x2fca, 0x3bd9, 0xcf4d, 0x0, 0x0);
        gbc.writeMem(0x62ca, { 0x21, 0x1, 0x34 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa91e, gbc.sp());
        EXPECT(0x62cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0088
        gbc.setState(0x2c51, 0xecc0, 0xc250, 0x9f4a, 0xeefa, 0x70a7, 0x0, 0x0);
        gbc.writeMem(0x2c51, { 0x21, 0xe1, 0x3b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xecc0, gbc.sp());
        EXPECT(0x2c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0089
        gbc.setState(0x17a8, 0x3643, 0x9fd0, 0xe7cd, 0xf228, 0xfe11, 0x1, 0x0);
        gbc.writeMem(0x17a8, { 0x21, 0xd, 0xca });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3643, gbc.sp());
        EXPECT(0x17ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 008B
        gbc.setState(0xdfdd, 0x8f74, 0x4fc0, 0x3f4, 0xe99b, 0x2ff9, 0x1, 0x1);
        gbc.writeMem(0xdfdd, { 0x21, 0xb8, 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8f74, gbc.sp());
        EXPECT(0xdfe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdfdd));
        EXPECT(0xb8, gbc.readMem(0xdfde));
        EXPECT(0x2d, gbc.readMem(0xdfdf));
        // 21 008C
        gbc.setState(0x6, 0x6bfd, 0xbde0, 0xdbf, 0xcbb4, 0x5515, 0x1, 0x0);
        gbc.writeMem(0x6, { 0x21, 0x6c, 0xbc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6bfd, gbc.sp());
        EXPECT(0x9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 008D
        gbc.setState(0x379d, 0x52b4, 0x2820, 0x9866, 0x6a90, 0x510b, 0x0, 0x1);
        gbc.writeMem(0x379d, { 0x21, 0x85, 0xc4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x52b4, gbc.sp());
        EXPECT(0x37a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 008E
        gbc.setState(0xd198, 0x5fd3, 0x9580, 0x7f99, 0x93df, 0xfbac, 0x0, 0x0);
        gbc.writeMem(0xd198, { 0x21, 0x84, 0x86 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5fd3, gbc.sp());
        EXPECT(0xd19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd198));
        EXPECT(0x84, gbc.readMem(0xd199));
        EXPECT(0x86, gbc.readMem(0xd19a));
        // 21 008F
        gbc.setState(0xa0ef, 0xc9de, 0x160, 0xa1e7, 0x4a84, 0x92fa, 0x1, 0x0);
        gbc.writeMem(0xa0ef, { 0x21, 0x1c, 0x40 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc9de, gbc.sp());
        EXPECT(0xa0f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa0ef));
        EXPECT(0x1c, gbc.readMem(0xa0f0));
        EXPECT(0x40, gbc.readMem(0xa0f1));
        // 21 0090
        gbc.setState(0x6a89, 0x9b96, 0xc4f0, 0xd582, 0x346b, 0x520c, 0x0, 0x1);
        gbc.writeMem(0x6a89, { 0x21, 0x4, 0xca });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9b96, gbc.sp());
        EXPECT(0x6a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0091
        gbc.setState(0xb915, 0x431a, 0x6700, 0x3120, 0xbdf4, 0x78e4, 0x0, 0x1);
        gbc.writeMem(0xb915, { 0x21, 0xeb, 0xf9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x431a, gbc.sp());
        EXPECT(0xb918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb915));
        EXPECT(0xeb, gbc.readMem(0xb916));
        EXPECT(0xf9, gbc.readMem(0xb917));
        // 21 0092
        gbc.setState(0x4737, 0x3212, 0xac00, 0xf6fb, 0xfb47, 0x7b08, 0x1, 0x0);
        gbc.writeMem(0x4737, { 0x21, 0xd6, 0xa7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3212, gbc.sp());
        EXPECT(0x473a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0093
        gbc.setState(0xbc58, 0xdacb, 0xce0, 0x9bd5, 0x344d, 0x84c2, 0x0, 0x0);
        gbc.writeMem(0xbc58, { 0x21, 0x8c, 0x6 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdacb, gbc.sp());
        EXPECT(0xbc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbc58));
        EXPECT(0x8c, gbc.readMem(0xbc59));
        EXPECT(0x6, gbc.readMem(0xbc5a));
        // 21 0094
        gbc.setState(0x5310, 0x26b2, 0x76d0, 0xbd4b, 0xf64d, 0x32c7, 0x0, 0x0);
        gbc.writeMem(0x5310, { 0x21, 0xdd, 0xbe });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x26b2, gbc.sp());
        EXPECT(0x5313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0095
        gbc.setState(0x290b, 0xc53c, 0x11e0, 0xec86, 0x9a3d, 0x6f77, 0x1, 0x0);
        gbc.writeMem(0x290b, { 0x21, 0x11, 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc53c, gbc.sp());
        EXPECT(0x290e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0096
        gbc.setState(0xe4fd, 0xd44, 0x5b10, 0xaafe, 0x63c7, 0xee35, 0x0, 0x0);
        gbc.writeMem(0xe4fd, { 0x21, 0x4c, 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd44, gbc.sp());
        EXPECT(0xe500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe4fd));
        EXPECT(0x4c, gbc.readMem(0xe4fe));
        EXPECT(0x89, gbc.readMem(0xe4ff));
        // 21 0097
        gbc.setState(0xcd77, 0xd6b1, 0x3250, 0x20bf, 0xf9a, 0xf5bb, 0x0, 0x0);
        gbc.writeMem(0xcd77, { 0x21, 0x6d, 0xb2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd6b1, gbc.sp());
        EXPECT(0xcd7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcd77));
        EXPECT(0x6d, gbc.readMem(0xcd78));
        EXPECT(0xb2, gbc.readMem(0xcd79));
        // 21 0098
        gbc.setState(0x4d75, 0x8417, 0x81a0, 0x361, 0x1167, 0x6f92, 0x1, 0x0);
        gbc.writeMem(0x4d75, { 0x21, 0x42, 0x88 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8417, gbc.sp());
        EXPECT(0x4d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0099
        gbc.setState(0x6c6c, 0x4c22, 0x9050, 0x20ea, 0x4553, 0x9109, 0x0, 0x0);
        gbc.writeMem(0x6c6c, { 0x21, 0x56, 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4c22, gbc.sp());
        EXPECT(0x6c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 009A
        gbc.setState(0x2ee9, 0xab46, 0x1f90, 0x68b5, 0xbdfe, 0x9f23, 0x1, 0x0);
        gbc.writeMem(0x2ee9, { 0x21, 0x70, 0xd2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xab46, gbc.sp());
        EXPECT(0x2eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 009B
        gbc.setState(0xcc71, 0x19e, 0xf230, 0x9d9a, 0x54e8, 0x6223, 0x0, 0x1);
        gbc.writeMem(0xcc71, { 0x21, 0xa2, 0xf4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x19e, gbc.sp());
        EXPECT(0xcc74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcc71));
        EXPECT(0xa2, gbc.readMem(0xcc72));
        EXPECT(0xf4, gbc.readMem(0xcc73));
        // 21 009C
        gbc.setState(0x7945, 0xfde, 0x9070, 0xd557, 0xda48, 0xec90, 0x0, 0x0);
        gbc.writeMem(0x7945, { 0x21, 0xfb, 0x3a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfde, gbc.sp());
        EXPECT(0x7948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 009E
        gbc.setState(0x4b3d, 0x7a04, 0xbf90, 0xef76, 0x1173, 0x3648, 0x1, 0x1);
        gbc.writeMem(0x4b3d, { 0x21, 0x7a, 0x5f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7a04, gbc.sp());
        EXPECT(0x4b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 009F
        gbc.setState(0x1a41, 0xf218, 0xebe0, 0x8cbf, 0x1f6d, 0xbda0, 0x0, 0x1);
        gbc.writeMem(0x1a41, { 0x21, 0x6b, 0xb1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf218, gbc.sp());
        EXPECT(0x1a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00A0
        gbc.setState(0x8e57, 0xf105, 0x9390, 0x2bd5, 0x5e2c, 0x939b, 0x1, 0x0);
        gbc.writeMem(0x8e57, { 0x21, 0x10, 0x75 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf105, gbc.sp());
        EXPECT(0x8e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8e57));
        EXPECT(0x10, gbc.readMem(0x8e58));
        EXPECT(0x75, gbc.readMem(0x8e59));
        // 21 00A1
        gbc.setState(0xc084, 0x3814, 0x2110, 0xa3c2, 0xfb37, 0xcd1, 0x1, 0x0);
        gbc.writeMem(0xc084, { 0x21, 0x43, 0x5e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3814, gbc.sp());
        EXPECT(0xc087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc084));
        EXPECT(0x43, gbc.readMem(0xc085));
        EXPECT(0x5e, gbc.readMem(0xc086));
        // 21 00A3
        gbc.setState(0x75e3, 0xb3a1, 0x9310, 0x6d3f, 0x1fc1, 0x476f, 0x1, 0x1);
        gbc.writeMem(0x75e3, { 0x21, 0x50, 0x17 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb3a1, gbc.sp());
        EXPECT(0x75e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00A4
        gbc.setState(0x5cac, 0xaf5a, 0xee60, 0x1846, 0xbe6b, 0x4d85, 0x0, 0x1);
        gbc.writeMem(0x5cac, { 0x21, 0x81, 0x24 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xaf5a, gbc.sp());
        EXPECT(0x5caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00A5
        gbc.setState(0xd853, 0x5b6d, 0xb570, 0x515e, 0x93ca, 0x292a, 0x1, 0x0);
        gbc.writeMem(0xd853, { 0x21, 0xe7, 0x83 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5b6d, gbc.sp());
        EXPECT(0xd856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd853));
        EXPECT(0xe7, gbc.readMem(0xd854));
        EXPECT(0x83, gbc.readMem(0xd855));
        // 21 00A6
        gbc.setState(0x4df1, 0xf606, 0x9ce0, 0xe89e, 0x2617, 0xfe8c, 0x0, 0x1);
        gbc.writeMem(0x4df1, { 0x21, 0xce, 0xf7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf606, gbc.sp());
        EXPECT(0x4df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00A7
        gbc.setState(0x1329, 0x5c90, 0x7670, 0x8668, 0xa65, 0x36e9, 0x1, 0x0);
        gbc.writeMem(0x1329, { 0x21, 0x54, 0x81 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5c90, gbc.sp());
        EXPECT(0x132c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00A8
        gbc.setState(0xa2ec, 0xba50, 0x6250, 0x4e5e, 0x969b, 0xd4de, 0x1, 0x0);
        gbc.writeMem(0xa2ec, { 0x21, 0x5a, 0x8a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xba50, gbc.sp());
        EXPECT(0xa2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa2ec));
        EXPECT(0x5a, gbc.readMem(0xa2ed));
        EXPECT(0x8a, gbc.readMem(0xa2ee));
        // 21 00A9
        gbc.setState(0x8607, 0x585a, 0xed70, 0xc571, 0x345b, 0x8451, 0x1, 0x0);
        gbc.writeMem(0x8607, { 0x21, 0xf1, 0x51 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x585a, gbc.sp());
        EXPECT(0x860a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8607));
        EXPECT(0xf1, gbc.readMem(0x8608));
        EXPECT(0x51, gbc.readMem(0x8609));
        // 21 00AA
        gbc.setState(0x7102, 0xff80, 0xb1e0, 0xc194, 0xac9c, 0xa0d3, 0x0, 0x1);
        gbc.writeMem(0x7102, { 0x21, 0xe0, 0xb5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xff80, gbc.sp());
        EXPECT(0x7105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00AB
        gbc.setState(0xe656, 0x4b7f, 0x1a10, 0x1835, 0x19d1, 0x312b, 0x0, 0x0);
        gbc.writeMem(0xe656, { 0x21, 0x3c, 0xad });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4b7f, gbc.sp());
        EXPECT(0xe659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe656));
        EXPECT(0x3c, gbc.readMem(0xe657));
        EXPECT(0xad, gbc.readMem(0xe658));
        // 21 00AC
        gbc.setState(0x8f71, 0x55c3, 0x7e20, 0xac3f, 0x6acc, 0x5d30, 0x1, 0x0);
        gbc.writeMem(0x8f71, { 0x21, 0x47, 0xdd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x55c3, gbc.sp());
        EXPECT(0x8f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8f71));
        EXPECT(0x47, gbc.readMem(0x8f72));
        EXPECT(0xdd, gbc.readMem(0x8f73));
        // 21 00AD
        gbc.setState(0xbabd, 0x6cce, 0x7ab0, 0xb21, 0xafdb, 0x7df7, 0x0, 0x1);
        gbc.writeMem(0xbabd, { 0x21, 0x39, 0xe2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6cce, gbc.sp());
        EXPECT(0xbac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbabd));
        EXPECT(0x39, gbc.readMem(0xbabe));
        EXPECT(0xe2, gbc.readMem(0xbabf));
        // 21 00AE
        gbc.setState(0x62b8, 0x3c0a, 0x8dd0, 0xe476, 0x9ec8, 0x2a56, 0x0, 0x0);
        gbc.writeMem(0x62b8, { 0x21, 0x10, 0xef });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3c0a, gbc.sp());
        EXPECT(0x62bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00AF
        gbc.setState(0x53eb, 0x55cd, 0xdfb0, 0x9932, 0x8e96, 0x69f9, 0x1, 0x0);
        gbc.writeMem(0x53eb, { 0x21, 0xbf, 0x5c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x55cd, gbc.sp());
        EXPECT(0x53ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00B0
        gbc.setState(0xd041, 0xc659, 0x20a0, 0x9c37, 0xeb65, 0xc3b6, 0x1, 0x0);
        gbc.writeMem(0xd041, { 0x21, 0x34, 0x3e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc659, gbc.sp());
        EXPECT(0xd044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd041));
        EXPECT(0x34, gbc.readMem(0xd042));
        EXPECT(0x3e, gbc.readMem(0xd043));
        // 21 00B1
        gbc.setState(0xc728, 0xe1ea, 0x2fc0, 0x8fdf, 0x51d4, 0x6263, 0x0, 0x0);
        gbc.writeMem(0xc728, { 0x21, 0xbb, 0x86 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe1ea, gbc.sp());
        EXPECT(0xc72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc728));
        EXPECT(0xbb, gbc.readMem(0xc729));
        EXPECT(0x86, gbc.readMem(0xc72a));
        // 21 00B2
        gbc.setState(0xb3fd, 0x2fa, 0x2180, 0x1a63, 0x7bd4, 0xb15f, 0x1, 0x0);
        gbc.writeMem(0xb3fd, { 0x21, 0xd1, 0x31 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2fa, gbc.sp());
        EXPECT(0xb400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb3fd));
        EXPECT(0xd1, gbc.readMem(0xb3fe));
        EXPECT(0x31, gbc.readMem(0xb3ff));
        // 21 00B3
        gbc.setState(0x469, 0x1fdb, 0xaf0, 0xe087, 0x4873, 0x379d, 0x0, 0x1);
        gbc.writeMem(0x469, { 0x21, 0xf, 0x2e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1fdb, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00B4
        gbc.setState(0xd89c, 0x4643, 0x9e70, 0x85e2, 0x3202, 0xac3c, 0x1, 0x1);
        gbc.writeMem(0xd89c, { 0x21, 0x58, 0x8d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4643, gbc.sp());
        EXPECT(0xd89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd89c));
        EXPECT(0x58, gbc.readMem(0xd89d));
        EXPECT(0x8d, gbc.readMem(0xd89e));
        // 21 00B5
        gbc.setState(0xb6c3, 0x4683, 0xd100, 0xf6d5, 0x189d, 0xcff8, 0x1, 0x1);
        gbc.writeMem(0xb6c3, { 0x21, 0xd9, 0x55 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4683, gbc.sp());
        EXPECT(0xb6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb6c3));
        EXPECT(0xd9, gbc.readMem(0xb6c4));
        EXPECT(0x55, gbc.readMem(0xb6c5));
        // 21 00B6
        gbc.setState(0xc1f8, 0xe5b7, 0x9180, 0x9627, 0x329c, 0x87ec, 0x1, 0x1);
        gbc.writeMem(0xc1f8, { 0x21, 0x38, 0x8a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe5b7, gbc.sp());
        EXPECT(0xc1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc1f8));
        EXPECT(0x38, gbc.readMem(0xc1f9));
        EXPECT(0x8a, gbc.readMem(0xc1fa));
        // 21 00B7
        gbc.setState(0x4354, 0x9821, 0xf60, 0x439b, 0xb21d, 0x10b, 0x0, 0x0);
        gbc.writeMem(0x4354, { 0x21, 0xfa, 0xc6 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9821, gbc.sp());
        EXPECT(0x4357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00B8
        gbc.setState(0xafa, 0xa468, 0x1e10, 0xc01a, 0x2305, 0x661b, 0x0, 0x0);
        gbc.writeMem(0xafa, { 0x21, 0x5b, 0xa4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa468, gbc.sp());
        EXPECT(0xafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00B9
        gbc.setState(0xb0fb, 0x4916, 0xa390, 0x3b19, 0x20c1, 0x37f5, 0x1, 0x0);
        gbc.writeMem(0xb0fb, { 0x21, 0xaf, 0xe6 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4916, gbc.sp());
        EXPECT(0xb0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb0fb));
        EXPECT(0xaf, gbc.readMem(0xb0fc));
        EXPECT(0xe6, gbc.readMem(0xb0fd));
        // 21 00BA
        gbc.setState(0x97b2, 0xc8be, 0xda00, 0x8bf1, 0xff6d, 0x880b, 0x0, 0x1);
        gbc.writeMem(0x97b2, { 0x21, 0xf3, 0x3b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc8be, gbc.sp());
        EXPECT(0x97b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x97b2));
        EXPECT(0xf3, gbc.readMem(0x97b3));
        EXPECT(0x3b, gbc.readMem(0x97b4));
        // 21 00BB
        gbc.setState(0x950a, 0x9c12, 0x9f00, 0xd648, 0x9fcf, 0xd450, 0x1, 0x1);
        gbc.writeMem(0x950a, { 0x21, 0x61, 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9c12, gbc.sp());
        EXPECT(0x950d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x950a));
        EXPECT(0x61, gbc.readMem(0x950b));
        EXPECT(0x9f, gbc.readMem(0x950c));
        // 21 00BC
        gbc.setState(0x6ce9, 0xb7e4, 0xd800, 0x9c45, 0x6a59, 0xf1b3, 0x1, 0x1);
        gbc.writeMem(0x6ce9, { 0x21, 0xbd, 0x33 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb7e4, gbc.sp());
        EXPECT(0x6cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00BD
        gbc.setState(0x1d23, 0x3d3f, 0xf850, 0x7114, 0x4714, 0xc3c3, 0x0, 0x0);
        gbc.writeMem(0x1d23, { 0x21, 0x77, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3d3f, gbc.sp());
        EXPECT(0x1d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00BE
        gbc.setState(0x4010, 0xc724, 0x230, 0x630a, 0x1e5e, 0xabb5, 0x0, 0x1);
        gbc.writeMem(0x4010, { 0x21, 0x12, 0xf8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc724, gbc.sp());
        EXPECT(0x4013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00BF
        gbc.setState(0xdef0, 0x49e9, 0x50f0, 0xbe6, 0xbf74, 0xf86d, 0x0, 0x0);
        gbc.writeMem(0xdef0, { 0x21, 0xe7, 0x3e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x49e9, gbc.sp());
        EXPECT(0xdef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdef0));
        EXPECT(0xe7, gbc.readMem(0xdef1));
        EXPECT(0x3e, gbc.readMem(0xdef2));
        // 21 00C0
        gbc.setState(0xcc13, 0xbc99, 0xdcf0, 0x5321, 0x6270, 0x3027, 0x0, 0x1);
        gbc.writeMem(0xcc13, { 0x21, 0xc9, 0x67 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbc99, gbc.sp());
        EXPECT(0xcc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcc13));
        EXPECT(0xc9, gbc.readMem(0xcc14));
        EXPECT(0x67, gbc.readMem(0xcc15));
        // 21 00C1
        gbc.setState(0xd0fd, 0x913, 0xc060, 0x9636, 0x1da1, 0x20f, 0x0, 0x0);
        gbc.writeMem(0xd0fd, { 0x21, 0xde, 0x9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x913, gbc.sp());
        EXPECT(0xd100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd0fd));
        EXPECT(0xde, gbc.readMem(0xd0fe));
        EXPECT(0x9, gbc.readMem(0xd0ff));
        // 21 00C2
        gbc.setState(0x6156, 0xd0bb, 0x1830, 0x36df, 0xf674, 0x5081, 0x0, 0x1);
        gbc.writeMem(0x6156, { 0x21, 0x14, 0x79 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd0bb, gbc.sp());
        EXPECT(0x6159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00C3
        gbc.setState(0xcd94, 0xd03, 0x45d0, 0xcfc2, 0x5883, 0x8ad2, 0x1, 0x1);
        gbc.writeMem(0xcd94, { 0x21, 0x58, 0x63 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd03, gbc.sp());
        EXPECT(0xcd97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcd94));
        EXPECT(0x58, gbc.readMem(0xcd95));
        EXPECT(0x63, gbc.readMem(0xcd96));
        // 21 00C4
        gbc.setState(0x937, 0x91bf, 0x9230, 0x1a56, 0xcb39, 0xd9ad, 0x0, 0x1);
        gbc.writeMem(0x937, { 0x21, 0xbd, 0x2a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x91bf, gbc.sp());
        EXPECT(0x93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00C5
        gbc.setState(0x9200, 0xdc48, 0x3dd0, 0xf949, 0x32a8, 0xe1ba, 0x0, 0x1);
        gbc.writeMem(0x9200, { 0x21, 0x16, 0xb9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdc48, gbc.sp());
        EXPECT(0x9203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9200));
        EXPECT(0x16, gbc.readMem(0x9201));
        EXPECT(0xb9, gbc.readMem(0x9202));
        // 21 00C6
        gbc.setState(0x7ae, 0x9479, 0xecd0, 0x288c, 0x5db3, 0x6b9e, 0x1, 0x0);
        gbc.writeMem(0x7ae, { 0x21, 0x1c, 0xd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9479, gbc.sp());
        EXPECT(0x7b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00C7
        gbc.setState(0x363d, 0xc7fa, 0x10d0, 0x55bb, 0x9b52, 0x5fbc, 0x1, 0x1);
        gbc.writeMem(0x363d, { 0x21, 0xd, 0xcb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc7fa, gbc.sp());
        EXPECT(0x3640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00C8
        gbc.setState(0xf88, 0xbe11, 0x63d0, 0xa446, 0xa92a, 0x68b9, 0x0, 0x0);
        gbc.writeMem(0xf88, { 0x21, 0x99, 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbe11, gbc.sp());
        EXPECT(0xf8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00C9
        gbc.setState(0xa1c9, 0x1fb9, 0x3c60, 0x8404, 0x69, 0x6c1e, 0x1, 0x0);
        gbc.writeMem(0xa1c9, { 0x21, 0x87, 0x8c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1fb9, gbc.sp());
        EXPECT(0xa1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa1c9));
        EXPECT(0x87, gbc.readMem(0xa1ca));
        EXPECT(0x8c, gbc.readMem(0xa1cb));
        // 21 00CA
        gbc.setState(0x8f38, 0x3e7c, 0x3bd0, 0x90e3, 0x3d0d, 0xd641, 0x1, 0x1);
        gbc.writeMem(0x8f38, { 0x21, 0xf, 0xef });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3e7c, gbc.sp());
        EXPECT(0x8f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8f38));
        EXPECT(0xf, gbc.readMem(0x8f39));
        EXPECT(0xef, gbc.readMem(0x8f3a));
        // 21 00CB
        gbc.setState(0x36d, 0x92ca, 0xcd40, 0xa8b0, 0xf85e, 0xda3a, 0x1, 0x0);
        gbc.writeMem(0x36d, { 0x21, 0xaf, 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x92ca, gbc.sp());
        EXPECT(0x370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00CC
        gbc.setState(0x7949, 0xaa27, 0x2be0, 0x94cd, 0x3dbb, 0xbf45, 0x0, 0x1);
        gbc.writeMem(0x7949, { 0x21, 0xe, 0x4c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaa27, gbc.sp());
        EXPECT(0x794c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00CD
        gbc.setState(0x6bf2, 0x99d, 0xe430, 0x6b27, 0x699d, 0xea4a, 0x0, 0x0);
        gbc.writeMem(0x6bf2, { 0x21, 0x47, 0x93 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x99d, gbc.sp());
        EXPECT(0x6bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00CE
        gbc.setState(0x3bdc, 0xbb72, 0xcee0, 0xb115, 0xf21c, 0x208a, 0x0, 0x1);
        gbc.writeMem(0x3bdc, { 0x21, 0x26, 0xc6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbb72, gbc.sp());
        EXPECT(0x3bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00CF
        gbc.setState(0x1a6, 0x7da8, 0xcca0, 0x9023, 0x6722, 0xd37b, 0x1, 0x1);
        gbc.writeMem(0x1a6, { 0x21, 0x5, 0xab });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7da8, gbc.sp());
        EXPECT(0x1a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00D0
        gbc.setState(0x233b, 0xc903, 0xa3e0, 0xfa09, 0x408b, 0xd792, 0x0, 0x0);
        gbc.writeMem(0x233b, { 0x21, 0xcd, 0x79 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc903, gbc.sp());
        EXPECT(0x233e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00D1
        gbc.setState(0x20ea, 0x6de3, 0x6230, 0x4bd4, 0xe68d, 0x198e, 0x1, 0x0);
        gbc.writeMem(0x20ea, { 0x21, 0x69, 0x9e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6de3, gbc.sp());
        EXPECT(0x20ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00D2
        gbc.setState(0x59b6, 0x10ea, 0xa850, 0x2dc, 0x1996, 0x1a67, 0x0, 0x1);
        gbc.writeMem(0x59b6, { 0x21, 0xd0, 0xe2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x10ea, gbc.sp());
        EXPECT(0x59b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00D3
        gbc.setState(0xc78d, 0x461a, 0xa0f0, 0xcf0b, 0x5b19, 0x2233, 0x1, 0x0);
        gbc.writeMem(0xc78d, { 0x21, 0xb8, 0xd3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x461a, gbc.sp());
        EXPECT(0xc790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc78d));
        EXPECT(0xb8, gbc.readMem(0xc78e));
        EXPECT(0xd3, gbc.readMem(0xc78f));
        // 21 00D4
        gbc.setState(0x4790, 0x5a2f, 0x4330, 0x3de5, 0xe69b, 0x776f, 0x0, 0x0);
        gbc.writeMem(0x4790, { 0x21, 0x7e, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5a2f, gbc.sp());
        EXPECT(0x4793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00D5
        gbc.setState(0xded6, 0x9991, 0x81c0, 0xb284, 0x721c, 0x3b85, 0x0, 0x0);
        gbc.writeMem(0xded6, { 0x21, 0x4e, 0xb0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9991, gbc.sp());
        EXPECT(0xded9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xded6));
        EXPECT(0x4e, gbc.readMem(0xded7));
        EXPECT(0xb0, gbc.readMem(0xded8));
        // 21 00D6
        gbc.setState(0x66c8, 0xa951, 0x2220, 0x5722, 0xccab, 0x7f11, 0x1, 0x0);
        gbc.writeMem(0x66c8, { 0x21, 0xb7, 0x16 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa951, gbc.sp());
        EXPECT(0x66cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00D7
        gbc.setState(0xa24c, 0x6b57, 0x5710, 0x3a0a, 0xe5c6, 0xa82d, 0x1, 0x0);
        gbc.writeMem(0xa24c, { 0x21, 0x3a, 0x22 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6b57, gbc.sp());
        EXPECT(0xa24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa24c));
        EXPECT(0x3a, gbc.readMem(0xa24d));
        EXPECT(0x22, gbc.readMem(0xa24e));
        // 21 00D8
        gbc.setState(0x8151, 0x3b4b, 0x28d0, 0x5025, 0x6ee0, 0x75d1, 0x0, 0x1);
        gbc.writeMem(0x8151, { 0x21, 0x10, 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3b4b, gbc.sp());
        EXPECT(0x8154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8151));
        EXPECT(0x10, gbc.readMem(0x8152));
        EXPECT(0x2f, gbc.readMem(0x8153));
        // 21 00D9
        gbc.setState(0x21a9, 0x2336, 0x5700, 0x9923, 0x28f5, 0x299d, 0x0, 0x0);
        gbc.writeMem(0x21a9, { 0x21, 0x84, 0xc5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2336, gbc.sp());
        EXPECT(0x21ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00DA
        gbc.setState(0x2f82, 0xa652, 0xa1e0, 0xe8b0, 0x7f62, 0x3839, 0x0, 0x0);
        gbc.writeMem(0x2f82, { 0x21, 0x24, 0x98 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa652, gbc.sp());
        EXPECT(0x2f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00DB
        gbc.setState(0x984b, 0x2f6b, 0xc8d0, 0xc376, 0xa412, 0x319a, 0x1, 0x0);
        gbc.writeMem(0x984b, { 0x21, 0xe0, 0xf9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2f6b, gbc.sp());
        EXPECT(0x984e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x984b));
        EXPECT(0xe0, gbc.readMem(0x984c));
        EXPECT(0xf9, gbc.readMem(0x984d));
        // 21 00DD
        gbc.setState(0xbeb6, 0x49e5, 0xd900, 0x675e, 0x1ffa, 0x1aa4, 0x0, 0x1);
        gbc.writeMem(0xbeb6, { 0x21, 0xd5, 0x65 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x49e5, gbc.sp());
        EXPECT(0xbeb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbeb6));
        EXPECT(0xd5, gbc.readMem(0xbeb7));
        EXPECT(0x65, gbc.readMem(0xbeb8));
        // 21 00DE
        gbc.setState(0xed63, 0x1c88, 0x35a0, 0xea71, 0x56b6, 0x533e, 0x1, 0x0);
        gbc.writeMem(0xed63, { 0x21, 0xbb, 0xe1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1c88, gbc.sp());
        EXPECT(0xed66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xed63));
        EXPECT(0xbb, gbc.readMem(0xed64));
        EXPECT(0xe1, gbc.readMem(0xed65));
        // 21 00DF
        gbc.setState(0x8848, 0xe5df, 0xb400, 0xa22, 0xf73e, 0xe437, 0x1, 0x1);
        gbc.writeMem(0x8848, { 0x21, 0x5e, 0xd0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe5df, gbc.sp());
        EXPECT(0x884b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8848));
        EXPECT(0x5e, gbc.readMem(0x8849));
        EXPECT(0xd0, gbc.readMem(0x884a));
        // 21 00E0
        gbc.setState(0xc08a, 0x27fc, 0x95b0, 0x428c, 0x2f08, 0x275d, 0x1, 0x0);
        gbc.writeMem(0xc08a, { 0x21, 0x64, 0x86 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x27fc, gbc.sp());
        EXPECT(0xc08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc08a));
        EXPECT(0x64, gbc.readMem(0xc08b));
        EXPECT(0x86, gbc.readMem(0xc08c));
        // 21 00E1
        gbc.setState(0x84e5, 0x5c89, 0x8dd0, 0x15d7, 0xb70b, 0x11f2, 0x1, 0x0);
        gbc.writeMem(0x84e5, { 0x21, 0xc9, 0x5d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5c89, gbc.sp());
        EXPECT(0x84e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x84e5));
        EXPECT(0xc9, gbc.readMem(0x84e6));
        EXPECT(0x5d, gbc.readMem(0x84e7));
        // 21 00E2
        gbc.setState(0xa35f, 0x221a, 0x2f50, 0xf907, 0xf882, 0x402, 0x1, 0x0);
        gbc.writeMem(0xa35f, { 0x21, 0x2d, 0x8c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x221a, gbc.sp());
        EXPECT(0xa362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa35f));
        EXPECT(0x2d, gbc.readMem(0xa360));
        EXPECT(0x8c, gbc.readMem(0xa361));
        // 21 00E3
        gbc.setState(0xd2ce, 0x7fd3, 0x8c50, 0xf01, 0xe0, 0xfa01, 0x1, 0x0);
        gbc.writeMem(0xd2ce, { 0x21, 0x5b, 0x1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7fd3, gbc.sp());
        EXPECT(0xd2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd2ce));
        EXPECT(0x5b, gbc.readMem(0xd2cf));
        EXPECT(0x1, gbc.readMem(0xd2d0));
        // 21 00E4
        gbc.setState(0x92e2, 0x1b7a, 0x8640, 0x50eb, 0x8cfc, 0x7c22, 0x0, 0x1);
        gbc.writeMem(0x92e2, { 0x21, 0x52, 0xd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1b7a, gbc.sp());
        EXPECT(0x92e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x92e2));
        EXPECT(0x52, gbc.readMem(0x92e3));
        EXPECT(0xd, gbc.readMem(0x92e4));
        // 21 00E5
        gbc.setState(0xb154, 0xdce8, 0x340, 0x8b77, 0xd9ee, 0xf366, 0x0, 0x0);
        gbc.writeMem(0xb154, { 0x21, 0x8a, 0xdd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdce8, gbc.sp());
        EXPECT(0xb157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb154));
        EXPECT(0x8a, gbc.readMem(0xb155));
        EXPECT(0xdd, gbc.readMem(0xb156));
        // 21 00E6
        gbc.setState(0xda67, 0xe927, 0x64f0, 0x9b22, 0xf4a9, 0xa21d, 0x0, 0x0);
        gbc.writeMem(0xda67, { 0x21, 0x15, 0x71 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe927, gbc.sp());
        EXPECT(0xda6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xda67));
        EXPECT(0x15, gbc.readMem(0xda68));
        EXPECT(0x71, gbc.readMem(0xda69));
        // 21 00E7
        gbc.setState(0x557f, 0xe634, 0xcd30, 0x3997, 0xa2d, 0x82b7, 0x0, 0x0);
        gbc.writeMem(0x557f, { 0x21, 0x1f, 0x17 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe634, gbc.sp());
        EXPECT(0x5582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00E8
        gbc.setState(0x563c, 0xad64, 0x3720, 0xf536, 0x6f86, 0xb5e0, 0x1, 0x1);
        gbc.writeMem(0x563c, { 0x21, 0xf7, 0xd4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xad64, gbc.sp());
        EXPECT(0x563f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00E9
        gbc.setState(0x37cb, 0xc678, 0x4380, 0xc92e, 0x99cb, 0xdbd7, 0x0, 0x1);
        gbc.writeMem(0x37cb, { 0x21, 0x7e, 0x8e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc678, gbc.sp());
        EXPECT(0x37ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00EA
        gbc.setState(0xc876, 0xc1a0, 0x2b0, 0x3d29, 0xe5c4, 0x1763, 0x0, 0x1);
        gbc.writeMem(0xc876, { 0x21, 0x1b, 0x7f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc1a0, gbc.sp());
        EXPECT(0xc879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc876));
        EXPECT(0x1b, gbc.readMem(0xc877));
        EXPECT(0x7f, gbc.readMem(0xc878));
        // 21 00EB
        gbc.setState(0x2048, 0xffb6, 0x2ec0, 0xa167, 0xf479, 0x4c9d, 0x1, 0x1);
        gbc.writeMem(0x2048, { 0x21, 0xa7, 0xd7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xffb6, gbc.sp());
        EXPECT(0x204b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00EC
        gbc.setState(0xd4ac, 0xba60, 0xd30, 0xb9c6, 0x7ce1, 0xe2ca, 0x0, 0x0);
        gbc.writeMem(0xd4ac, { 0x21, 0x2f, 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xba60, gbc.sp());
        EXPECT(0xd4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd4ac));
        EXPECT(0x2f, gbc.readMem(0xd4ad));
        EXPECT(0x0, gbc.readMem(0xd4ae));
        // 21 00ED
        gbc.setState(0xe5fc, 0x3ee2, 0x20a0, 0xc7e3, 0x9028, 0x8b94, 0x1, 0x0);
        gbc.writeMem(0xe5fc, { 0x21, 0x17, 0xe1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3ee2, gbc.sp());
        EXPECT(0xe5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe5fc));
        EXPECT(0x17, gbc.readMem(0xe5fd));
        EXPECT(0xe1, gbc.readMem(0xe5fe));
        // 21 00EE
        gbc.setState(0xc6c, 0xf272, 0x5d50, 0xb306, 0xfbcc, 0x63ec, 0x1, 0x0);
        gbc.writeMem(0xc6c, { 0x21, 0x9a, 0xb9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf272, gbc.sp());
        EXPECT(0xc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00EF
        gbc.setState(0x9533, 0x1802, 0x2770, 0x83e9, 0x13d1, 0x1b0c, 0x0, 0x1);
        gbc.writeMem(0x9533, { 0x21, 0xe, 0x98 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1802, gbc.sp());
        EXPECT(0x9536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9533));
        EXPECT(0xe, gbc.readMem(0x9534));
        EXPECT(0x98, gbc.readMem(0x9535));
        // 21 00F0
        gbc.setState(0x2d5e, 0x4dc7, 0xb6b0, 0x3418, 0xece, 0x5b2f, 0x0, 0x0);
        gbc.writeMem(0x2d5e, { 0x21, 0xad, 0x32 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4dc7, gbc.sp());
        EXPECT(0x2d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00F1
        gbc.setState(0x78c1, 0x11b2, 0xa880, 0x236c, 0x42d4, 0x7690, 0x1, 0x1);
        gbc.writeMem(0x78c1, { 0x21, 0x7, 0x68 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x11b2, gbc.sp());
        EXPECT(0x78c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00F2
        gbc.setState(0xe3d5, 0x9bb6, 0xa50, 0x8bb4, 0x7033, 0xa1fc, 0x1, 0x1);
        gbc.writeMem(0xe3d5, { 0x21, 0xb4, 0xd8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9bb6, gbc.sp());
        EXPECT(0xe3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe3d5));
        EXPECT(0xb4, gbc.readMem(0xe3d6));
        EXPECT(0xd8, gbc.readMem(0xe3d7));
        // 21 00F3
        gbc.setState(0x6efc, 0x5183, 0x8900, 0xfbea, 0xf626, 0x2acb, 0x1, 0x1);
        gbc.writeMem(0x6efc, { 0x21, 0xa0, 0xfd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5183, gbc.sp());
        EXPECT(0x6eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00F4
        gbc.setState(0xecde, 0x2db3, 0x8110, 0xf6ac, 0x6ead, 0x27f5, 0x1, 0x0);
        gbc.writeMem(0xecde, { 0x21, 0x84, 0x2e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2db3, gbc.sp());
        EXPECT(0xece1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xecde));
        EXPECT(0x84, gbc.readMem(0xecdf));
        EXPECT(0x2e, gbc.readMem(0xece0));
        // 21 00F5
        gbc.setState(0x1a6c, 0xa2f5, 0x8560, 0xd16b, 0x52d1, 0x9363, 0x0, 0x0);
        gbc.writeMem(0x1a6c, { 0x21, 0xc, 0xc1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa2f5, gbc.sp());
        EXPECT(0x1a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00F6
        gbc.setState(0x4d23, 0xae85, 0xa5f0, 0x5864, 0x5c15, 0xbf50, 0x0, 0x0);
        gbc.writeMem(0x4d23, { 0x21, 0xb, 0x90 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xae85, gbc.sp());
        EXPECT(0x4d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00F7
        gbc.setState(0xb79c, 0x886f, 0x7ab0, 0xbce3, 0x3f62, 0xcd37, 0x1, 0x0);
        gbc.writeMem(0xb79c, { 0x21, 0xcf, 0xd1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x886f, gbc.sp());
        EXPECT(0xb79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb79c));
        EXPECT(0xcf, gbc.readMem(0xb79d));
        EXPECT(0xd1, gbc.readMem(0xb79e));
        // 21 00F8
        gbc.setState(0x6f22, 0xbd47, 0x63b0, 0xe00c, 0x2cd, 0x633a, 0x1, 0x0);
        gbc.writeMem(0x6f22, { 0x21, 0xad, 0x89 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbd47, gbc.sp());
        EXPECT(0x6f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00F9
        gbc.setState(0xd5cc, 0x7bd0, 0xda60, 0x1556, 0x88fe, 0x9d5e, 0x1, 0x0);
        gbc.writeMem(0xd5cc, { 0x21, 0x9c, 0xeb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7bd0, gbc.sp());
        EXPECT(0xd5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd5cc));
        EXPECT(0x9c, gbc.readMem(0xd5cd));
        EXPECT(0xeb, gbc.readMem(0xd5ce));
        // 21 00FA
        gbc.setState(0x2228, 0x6cbf, 0x4fb0, 0x995f, 0xb2f7, 0xabbd, 0x1, 0x1);
        gbc.writeMem(0x2228, { 0x21, 0xba, 0x52 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6cbf, gbc.sp());
        EXPECT(0x222b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00FB
        gbc.setState(0x64ec, 0xb7e6, 0xc2b0, 0xe006, 0x7cea, 0x65eb, 0x0, 0x1);
        gbc.writeMem(0x64ec, { 0x21, 0x25, 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb7e6, gbc.sp());
        EXPECT(0x64ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 00FC
        gbc.setState(0xe311, 0x23e7, 0xb0b0, 0xe789, 0x402e, 0x8dc, 0x0, 0x0);
        gbc.writeMem(0xe311, { 0x21, 0x33, 0xc2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x23e7, gbc.sp());
        EXPECT(0xe314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe311));
        EXPECT(0x33, gbc.readMem(0xe312));
        EXPECT(0xc2, gbc.readMem(0xe313));
        // 21 00FD
        gbc.setState(0x6b28, 0xaae3, 0x7f60, 0x25d2, 0x286e, 0x665b, 0x0, 0x1);
        gbc.writeMem(0x6b28, { 0x21, 0xbf, 0x92 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xaae3, gbc.sp());
        EXPECT(0x6b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 00FE
        gbc.setState(0xcbc0, 0x512f, 0x5210, 0xea11, 0x42d9, 0x3a4a, 0x0, 0x0);
        gbc.writeMem(0xcbc0, { 0x21, 0xf4, 0x31 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x512f, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcbc0));
        EXPECT(0xf4, gbc.readMem(0xcbc1));
        EXPECT(0x31, gbc.readMem(0xcbc2));
        // 21 00FF
        gbc.setState(0xa644, 0x935d, 0x2ac0, 0xe3a5, 0xac5b, 0xcc31, 0x1, 0x1);
        gbc.writeMem(0xa644, { 0x21, 0xe6, 0xa });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x935d, gbc.sp());
        EXPECT(0xa647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa644));
        EXPECT(0xe6, gbc.readMem(0xa645));
        EXPECT(0xa, gbc.readMem(0xa646));
        // 21 0100
        gbc.setState(0x2075, 0x73d1, 0x1550, 0xba70, 0x31e1, 0xabd3, 0x1, 0x0);
        gbc.writeMem(0x2075, { 0x21, 0x24, 0x52 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x73d1, gbc.sp());
        EXPECT(0x2078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0101
        gbc.setState(0x42ae, 0x8264, 0x8870, 0xe236, 0x90cb, 0x6b1b, 0x0, 0x0);
        gbc.writeMem(0x42ae, { 0x21, 0xf0, 0x3c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8264, gbc.sp());
        EXPECT(0x42b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0102
        gbc.setState(0x26e0, 0x60ce, 0x3370, 0x620a, 0x135f, 0x4df9, 0x1, 0x1);
        gbc.writeMem(0x26e0, { 0x21, 0xaf, 0xc5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x60ce, gbc.sp());
        EXPECT(0x26e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0103
        gbc.setState(0xe665, 0x3d87, 0x5560, 0xe808, 0x6305, 0xc3e0, 0x1, 0x1);
        gbc.writeMem(0xe665, { 0x21, 0xe7, 0xa6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3d87, gbc.sp());
        EXPECT(0xe668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe665));
        EXPECT(0xe7, gbc.readMem(0xe666));
        EXPECT(0xa6, gbc.readMem(0xe667));
        // 21 0104
        gbc.setState(0xb28e, 0x75b8, 0xf620, 0xc708, 0xa95f, 0x7cf9, 0x0, 0x1);
        gbc.writeMem(0xb28e, { 0x21, 0x10, 0x27 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x75b8, gbc.sp());
        EXPECT(0xb291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb28e));
        EXPECT(0x10, gbc.readMem(0xb28f));
        EXPECT(0x27, gbc.readMem(0xb290));
        // 21 0105
        gbc.setState(0xee09, 0xed07, 0xcf40, 0x581a, 0x6ddd, 0xa52f, 0x0, 0x1);
        gbc.writeMem(0xee09, { 0x21, 0xd2, 0x2a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xed07, gbc.sp());
        EXPECT(0xee0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xee09));
        EXPECT(0xd2, gbc.readMem(0xee0a));
        EXPECT(0x2a, gbc.readMem(0xee0b));
        // 21 0106
        gbc.setState(0xcfcd, 0xe052, 0x57d0, 0x749f, 0x8af3, 0x9091, 0x1, 0x1);
        gbc.writeMem(0xcfcd, { 0x21, 0x68, 0x23 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe052, gbc.sp());
        EXPECT(0xcfd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcfcd));
        EXPECT(0x68, gbc.readMem(0xcfce));
        EXPECT(0x23, gbc.readMem(0xcfcf));
        // 21 0107
        gbc.setState(0x902c, 0x9fae, 0x18c0, 0xaba2, 0x1aaf, 0x6801, 0x0, 0x1);
        gbc.writeMem(0x902c, { 0x21, 0xf1, 0x6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9fae, gbc.sp());
        EXPECT(0x902f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x902c));
        EXPECT(0xf1, gbc.readMem(0x902d));
        EXPECT(0x6, gbc.readMem(0x902e));
        // 21 0108
        gbc.setState(0x95ed, 0xe435, 0x3d10, 0xd624, 0x2b0f, 0xb4c4, 0x0, 0x0);
        gbc.writeMem(0x95ed, { 0x21, 0x26, 0xef });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe435, gbc.sp());
        EXPECT(0x95f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x95ed));
        EXPECT(0x26, gbc.readMem(0x95ee));
        EXPECT(0xef, gbc.readMem(0x95ef));
        // 21 0109
        gbc.setState(0x2f9d, 0xc84e, 0x29f0, 0x7ea5, 0x8a56, 0x806d, 0x1, 0x0);
        gbc.writeMem(0x2f9d, { 0x21, 0xfc, 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc84e, gbc.sp());
        EXPECT(0x2fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 010A
        gbc.setState(0x350e, 0x22d7, 0x6a70, 0x4a93, 0xf9d2, 0x1067, 0x1, 0x0);
        gbc.writeMem(0x350e, { 0x21, 0x0, 0x34 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x22d7, gbc.sp());
        EXPECT(0x3511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 010B
        gbc.setState(0xad3c, 0x989e, 0x2370, 0xc8bc, 0x1837, 0x2d22, 0x0, 0x0);
        gbc.writeMem(0xad3c, { 0x21, 0xf3, 0x5a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x989e, gbc.sp());
        EXPECT(0xad3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xad3c));
        EXPECT(0xf3, gbc.readMem(0xad3d));
        EXPECT(0x5a, gbc.readMem(0xad3e));
        // 21 010C
        gbc.setState(0x3f94, 0xf470, 0xb780, 0xb3a0, 0xe758, 0xfeb2, 0x0, 0x1);
        gbc.writeMem(0x3f94, { 0x21, 0x84, 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf470, gbc.sp());
        EXPECT(0x3f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 010D
        gbc.setState(0x3c3d, 0x4ff2, 0x2d10, 0x5701, 0x23e0, 0x6063, 0x0, 0x1);
        gbc.writeMem(0x3c3d, { 0x21, 0x78, 0x6b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4ff2, gbc.sp());
        EXPECT(0x3c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 010E
        gbc.setState(0xcc3b, 0x5fc2, 0x6d60, 0x8e4f, 0x5210, 0xfae0, 0x0, 0x1);
        gbc.writeMem(0xcc3b, { 0x21, 0x27, 0x6f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5fc2, gbc.sp());
        EXPECT(0xcc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcc3b));
        EXPECT(0x27, gbc.readMem(0xcc3c));
        EXPECT(0x6f, gbc.readMem(0xcc3d));
        // 21 010F
        gbc.setState(0x49b9, 0x4c31, 0xae90, 0x6042, 0x3fb2, 0x4750, 0x1, 0x0);
        gbc.writeMem(0x49b9, { 0x21, 0xb8, 0x1a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4c31, gbc.sp());
        EXPECT(0x49bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0110
        gbc.setState(0xb2cf, 0xf0e3, 0x1b40, 0xfe47, 0xef93, 0xebe0, 0x1, 0x0);
        gbc.writeMem(0xb2cf, { 0x21, 0x26, 0x45 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf0e3, gbc.sp());
        EXPECT(0xb2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb2cf));
        EXPECT(0x26, gbc.readMem(0xb2d0));
        EXPECT(0x45, gbc.readMem(0xb2d1));
        // 21 0111
        gbc.setState(0x1430, 0x3ed2, 0x8c20, 0xb63e, 0xca27, 0x7a19, 0x0, 0x1);
        gbc.writeMem(0x1430, { 0x21, 0x39, 0x54 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3ed2, gbc.sp());
        EXPECT(0x1433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0112
        gbc.setState(0xc7b, 0x194e, 0x5090, 0x81a7, 0xd719, 0x2083, 0x1, 0x1);
        gbc.writeMem(0xc7b, { 0x21, 0xa5, 0x6f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x194e, gbc.sp());
        EXPECT(0xc7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0113
        gbc.setState(0x5fe3, 0xbd22, 0x65d0, 0x995, 0x263e, 0x96aa, 0x0, 0x1);
        gbc.writeMem(0x5fe3, { 0x21, 0x48, 0xe8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbd22, gbc.sp());
        EXPECT(0x5fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0114
        gbc.setState(0x9509, 0x5fd2, 0x7e00, 0xbe26, 0x8fdb, 0x72aa, 0x1, 0x1);
        gbc.writeMem(0x9509, { 0x21, 0x86, 0x61 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5fd2, gbc.sp());
        EXPECT(0x950c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9509));
        EXPECT(0x86, gbc.readMem(0x950a));
        EXPECT(0x61, gbc.readMem(0x950b));
        // 21 0115
        gbc.setState(0x6093, 0xe1db, 0x90c0, 0x656c, 0xd2f2, 0xd8b2, 0x0, 0x1);
        gbc.writeMem(0x6093, { 0x21, 0x21, 0x9e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe1db, gbc.sp());
        EXPECT(0x6096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0116
        gbc.setState(0x519f, 0x8b83, 0xbe40, 0xa491, 0x3852, 0x3d6e, 0x1, 0x0);
        gbc.writeMem(0x519f, { 0x21, 0xbd, 0xb1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8b83, gbc.sp());
        EXPECT(0x51a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0117
        gbc.setState(0x141c, 0xe22d, 0x9350, 0x79f6, 0xa1a4, 0xaca0, 0x1, 0x1);
        gbc.writeMem(0x141c, { 0x21, 0x25, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe22d, gbc.sp());
        EXPECT(0x141f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0118
        gbc.setState(0x5cb9, 0x946a, 0xaf90, 0xd118, 0xad38, 0xaa78, 0x0, 0x1);
        gbc.writeMem(0x5cb9, { 0x21, 0xd3, 0xcd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x946a, gbc.sp());
        EXPECT(0x5cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0119
        gbc.setState(0xce35, 0xe9ba, 0x8660, 0xd55c, 0x4b85, 0x1b75, 0x0, 0x1);
        gbc.writeMem(0xce35, { 0x21, 0xd6, 0xc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe9ba, gbc.sp());
        EXPECT(0xce38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xce35));
        EXPECT(0xd6, gbc.readMem(0xce36));
        EXPECT(0xc, gbc.readMem(0xce37));
        // 21 011A
        gbc.setState(0xa1ab, 0x7d52, 0x9780, 0x120f, 0x1a3a, 0x8223, 0x0, 0x0);
        gbc.writeMem(0xa1ab, { 0x21, 0x2f, 0x31 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7d52, gbc.sp());
        EXPECT(0xa1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa1ab));
        EXPECT(0x2f, gbc.readMem(0xa1ac));
        EXPECT(0x31, gbc.readMem(0xa1ad));
        // 21 011B
        gbc.setState(0x7331, 0xec6, 0x4140, 0x3ec8, 0xecbe, 0x860b, 0x1, 0x0);
        gbc.writeMem(0x7331, { 0x21, 0x34, 0x69 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xec6, gbc.sp());
        EXPECT(0x7334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 011C
        gbc.setState(0x94f4, 0x33b8, 0x2ba0, 0x9a38, 0xb492, 0xff39, 0x0, 0x0);
        gbc.writeMem(0x94f4, { 0x21, 0x92, 0x51 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x33b8, gbc.sp());
        EXPECT(0x94f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x94f4));
        EXPECT(0x92, gbc.readMem(0x94f5));
        EXPECT(0x51, gbc.readMem(0x94f6));
        // 21 011D
        gbc.setState(0x90b1, 0xed11, 0x4a80, 0x7d9f, 0x388f, 0x75fb, 0x0, 0x0);
        gbc.writeMem(0x90b1, { 0x21, 0x16, 0x8e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xed11, gbc.sp());
        EXPECT(0x90b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x90b1));
        EXPECT(0x16, gbc.readMem(0x90b2));
        EXPECT(0x8e, gbc.readMem(0x90b3));
        // 21 011E
        gbc.setState(0x82f9, 0xe728, 0x9760, 0x8f0d, 0xef7a, 0x959f, 0x1, 0x0);
        gbc.writeMem(0x82f9, { 0x21, 0x3, 0xe1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe728, gbc.sp());
        EXPECT(0x82fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x82f9));
        EXPECT(0x3, gbc.readMem(0x82fa));
        EXPECT(0xe1, gbc.readMem(0x82fb));
        // 21 011F
        gbc.setState(0xc0be, 0x2805, 0xbfa0, 0x4afc, 0xd875, 0x9f, 0x1, 0x1);
        gbc.writeMem(0xc0be, { 0x21, 0x4e, 0xbd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2805, gbc.sp());
        EXPECT(0xc0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc0be));
        EXPECT(0x4e, gbc.readMem(0xc0bf));
        EXPECT(0xbd, gbc.readMem(0xc0c0));
        // 21 0120
        gbc.setState(0x9e92, 0x241d, 0xca20, 0x2a7a, 0x1bc, 0x875b, 0x1, 0x1);
        gbc.writeMem(0x9e92, { 0x21, 0xa3, 0xdb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x241d, gbc.sp());
        EXPECT(0x9e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9e92));
        EXPECT(0xa3, gbc.readMem(0x9e93));
        EXPECT(0xdb, gbc.readMem(0x9e94));
        // 21 0121
        gbc.setState(0x75ba, 0xb2df, 0xe760, 0x50c9, 0x9db, 0x316e, 0x1, 0x1);
        gbc.writeMem(0x75ba, { 0x21, 0xaa, 0x39 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb2df, gbc.sp());
        EXPECT(0x75bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0122
        gbc.setState(0x83c4, 0x9a56, 0x8860, 0x3d5b, 0xaf52, 0xaf51, 0x1, 0x1);
        gbc.writeMem(0x83c4, { 0x21, 0x4, 0x20 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9a56, gbc.sp());
        EXPECT(0x83c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x83c4));
        EXPECT(0x4, gbc.readMem(0x83c5));
        EXPECT(0x20, gbc.readMem(0x83c6));
        // 21 0123
        gbc.setState(0xb254, 0xa9c7, 0x2740, 0x656c, 0xd5e3, 0xbb8c, 0x0, 0x0);
        gbc.writeMem(0xb254, { 0x21, 0x1e, 0x43 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa9c7, gbc.sp());
        EXPECT(0xb257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb254));
        EXPECT(0x1e, gbc.readMem(0xb255));
        EXPECT(0x43, gbc.readMem(0xb256));
        // 21 0124
        gbc.setState(0xc166, 0x8637, 0x4e30, 0x25bc, 0x566c, 0xf681, 0x1, 0x1);
        gbc.writeMem(0xc166, { 0x21, 0xa4, 0x7c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8637, gbc.sp());
        EXPECT(0xc169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc166));
        EXPECT(0xa4, gbc.readMem(0xc167));
        EXPECT(0x7c, gbc.readMem(0xc168));
        // 21 0125
        gbc.setState(0x668d, 0xb135, 0x10e0, 0xef15, 0xcf5d, 0x6d07, 0x0, 0x1);
        gbc.writeMem(0x668d, { 0x21, 0xe6, 0xda });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb135, gbc.sp());
        EXPECT(0x6690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0126
        gbc.setState(0x98f2, 0x2fbf, 0x8a00, 0xebc2, 0xcfa1, 0x464b, 0x0, 0x1);
        gbc.writeMem(0x98f2, { 0x21, 0xa3, 0xa3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2fbf, gbc.sp());
        EXPECT(0x98f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x98f2));
        EXPECT(0xa3, gbc.readMem(0x98f3));
        EXPECT(0xa3, gbc.readMem(0x98f4));
        // 21 0127
        gbc.setState(0x608c, 0x64ca, 0x6870, 0xdc66, 0xb12c, 0x5c4b, 0x1, 0x0);
        gbc.writeMem(0x608c, { 0x21, 0x7e, 0xce });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x64ca, gbc.sp());
        EXPECT(0x608f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0128
        gbc.setState(0xe56f, 0x5f4b, 0xa900, 0x399a, 0x65ae, 0x256, 0x1, 0x0);
        gbc.writeMem(0xe56f, { 0x21, 0x4c, 0x46 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5f4b, gbc.sp());
        EXPECT(0xe572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe56f));
        EXPECT(0x4c, gbc.readMem(0xe570));
        EXPECT(0x46, gbc.readMem(0xe571));
        // 21 0129
        gbc.setState(0xc4ae, 0xfc4, 0x2f00, 0x454d, 0x4d4, 0xc3c4, 0x0, 0x0);
        gbc.writeMem(0xc4ae, { 0x21, 0x1, 0xa6 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfc4, gbc.sp());
        EXPECT(0xc4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc4ae));
        EXPECT(0x1, gbc.readMem(0xc4af));
        EXPECT(0xa6, gbc.readMem(0xc4b0));
        // 21 012A
        gbc.setState(0xdbfc, 0x3f78, 0xd600, 0xf3ae, 0x704, 0x2f4c, 0x0, 0x0);
        gbc.writeMem(0xdbfc, { 0x21, 0x64, 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3f78, gbc.sp());
        EXPECT(0xdbff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdbfc));
        EXPECT(0x64, gbc.readMem(0xdbfd));
        EXPECT(0xff, gbc.readMem(0xdbfe));
        // 21 012B
        gbc.setState(0xa072, 0xecbe, 0x28b0, 0xf565, 0x5a78, 0xa18f, 0x0, 0x0);
        gbc.writeMem(0xa072, { 0x21, 0x60, 0x6c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xecbe, gbc.sp());
        EXPECT(0xa075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa072));
        EXPECT(0x60, gbc.readMem(0xa073));
        EXPECT(0x6c, gbc.readMem(0xa074));
        // 21 012C
        gbc.setState(0x95e7, 0x5ed5, 0xccd0, 0x34a, 0x2da3, 0x4622, 0x1, 0x0);
        gbc.writeMem(0x95e7, { 0x21, 0xe9, 0x28 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5ed5, gbc.sp());
        EXPECT(0x95ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x95e7));
        EXPECT(0xe9, gbc.readMem(0x95e8));
        EXPECT(0x28, gbc.readMem(0x95e9));
        // 21 012D
        gbc.setState(0xcc0c, 0xbc55, 0x9100, 0x26d1, 0xee36, 0xe95f, 0x0, 0x0);
        gbc.writeMem(0xcc0c, { 0x21, 0x29, 0xb6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbc55, gbc.sp());
        EXPECT(0xcc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcc0c));
        EXPECT(0x29, gbc.readMem(0xcc0d));
        EXPECT(0xb6, gbc.readMem(0xcc0e));
        // 21 012E
        gbc.setState(0x9738, 0xb8c0, 0xce30, 0x4c3d, 0x5884, 0x178a, 0x1, 0x0);
        gbc.writeMem(0x9738, { 0x21, 0xcb, 0xf1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb8c0, gbc.sp());
        EXPECT(0x973b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9738));
        EXPECT(0xcb, gbc.readMem(0x9739));
        EXPECT(0xf1, gbc.readMem(0x973a));
        // 21 0130
        gbc.setState(0xd654, 0xc621, 0x8100, 0xd29b, 0x4b41, 0x7488, 0x1, 0x1);
        gbc.writeMem(0xd654, { 0x21, 0x5e, 0x24 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc621, gbc.sp());
        EXPECT(0xd657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd654));
        EXPECT(0x5e, gbc.readMem(0xd655));
        EXPECT(0x24, gbc.readMem(0xd656));
        // 21 0131
        gbc.setState(0x83e2, 0xe972, 0xf4d0, 0xc419, 0x8dff, 0xaa9b, 0x1, 0x0);
        gbc.writeMem(0x83e2, { 0x21, 0x6, 0x22 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe972, gbc.sp());
        EXPECT(0x83e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x83e2));
        EXPECT(0x6, gbc.readMem(0x83e3));
        EXPECT(0x22, gbc.readMem(0x83e4));
        // 21 0133
        gbc.setState(0x3cd, 0xb676, 0x8790, 0x4f1f, 0xb58a, 0xeff6, 0x1, 0x1);
        gbc.writeMem(0x3cd, { 0x21, 0x31, 0x45 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb676, gbc.sp());
        EXPECT(0x3d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0134
        gbc.setState(0x66ad, 0xf9d5, 0x2db0, 0xe6ed, 0x8f8b, 0x8d96, 0x1, 0x1);
        gbc.writeMem(0x66ad, { 0x21, 0x44, 0xc9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf9d5, gbc.sp());
        EXPECT(0x66b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0135
        gbc.setState(0x49c4, 0x4cf3, 0x5970, 0xaa48, 0xa521, 0xb454, 0x1, 0x0);
        gbc.writeMem(0x49c4, { 0x21, 0x74, 0xa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4cf3, gbc.sp());
        EXPECT(0x49c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0136
        gbc.setState(0x5310, 0x8ca7, 0xe240, 0x8642, 0x7a51, 0x304d, 0x1, 0x0);
        gbc.writeMem(0x5310, { 0x21, 0xdd, 0xbe });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8ca7, gbc.sp());
        EXPECT(0x5313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0137
        gbc.setState(0x9c80, 0xf712, 0xdb50, 0x8b22, 0x6b7f, 0x5be0, 0x1, 0x1);
        gbc.writeMem(0x9c80, { 0x21, 0x74, 0x6b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf712, gbc.sp());
        EXPECT(0x9c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9c80));
        EXPECT(0x74, gbc.readMem(0x9c81));
        EXPECT(0x6b, gbc.readMem(0x9c82));
        // 21 0138
        gbc.setState(0x5ca7, 0x7ed2, 0x2010, 0xa8ae, 0x9d66, 0xabf0, 0x0, 0x0);
        gbc.writeMem(0x5ca7, { 0x21, 0x3e, 0xee });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7ed2, gbc.sp());
        EXPECT(0x5caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0139
        gbc.setState(0x2e76, 0x909a, 0x2350, 0xf37, 0x57ef, 0x8cf9, 0x0, 0x1);
        gbc.writeMem(0x2e76, { 0x21, 0x43, 0x98 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x909a, gbc.sp());
        EXPECT(0x2e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 013A
        gbc.setState(0x19ee, 0xf3b1, 0x2f70, 0x4cb5, 0x3efc, 0x5c2, 0x1, 0x1);
        gbc.writeMem(0x19ee, { 0x21, 0x62, 0xd4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf3b1, gbc.sp());
        EXPECT(0x19f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 013B
        gbc.setState(0x8fd3, 0xffb5, 0xe1a0, 0xca5e, 0x38f7, 0x6aeb, 0x0, 0x0);
        gbc.writeMem(0x8fd3, { 0x21, 0xb, 0x4d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xffb5, gbc.sp());
        EXPECT(0x8fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8fd3));
        EXPECT(0xb, gbc.readMem(0x8fd4));
        EXPECT(0x4d, gbc.readMem(0x8fd5));
        // 21 013C
        gbc.setState(0x1f0f, 0x9eb, 0x26d0, 0xbef0, 0xb318, 0x16b9, 0x1, 0x0);
        gbc.writeMem(0x1f0f, { 0x21, 0x6c, 0xb5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9eb, gbc.sp());
        EXPECT(0x1f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 013E
        gbc.setState(0x3b57, 0x4c1a, 0x7530, 0x5f52, 0x608a, 0x673d, 0x1, 0x1);
        gbc.writeMem(0x3b57, { 0x21, 0x73, 0xc7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4c1a, gbc.sp());
        EXPECT(0x3b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 013F
        gbc.setState(0xa50f, 0x9a9c, 0xb3a0, 0x7ef5, 0x7e63, 0x5823, 0x0, 0x0);
        gbc.writeMem(0xa50f, { 0x21, 0xed, 0x9e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9a9c, gbc.sp());
        EXPECT(0xa512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa50f));
        EXPECT(0xed, gbc.readMem(0xa510));
        EXPECT(0x9e, gbc.readMem(0xa511));
        // 21 0140
        gbc.setState(0x7919, 0x7e61, 0x78c0, 0x16c6, 0xcd6a, 0xcf5c, 0x0, 0x0);
        gbc.writeMem(0x7919, { 0x21, 0xfd, 0x3e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7e61, gbc.sp());
        EXPECT(0x791c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0141
        gbc.setState(0xd910, 0x74df, 0x2ce0, 0x876, 0x880c, 0x249c, 0x0, 0x0);
        gbc.writeMem(0xd910, { 0x21, 0x1f, 0x91 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x74df, gbc.sp());
        EXPECT(0xd913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd910));
        EXPECT(0x1f, gbc.readMem(0xd911));
        EXPECT(0x91, gbc.readMem(0xd912));
        // 21 0142
        gbc.setState(0x6f0b, 0x4bfc, 0x21a0, 0xf0f1, 0x73db, 0x500f, 0x0, 0x0);
        gbc.writeMem(0x6f0b, { 0x21, 0x62, 0x83 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4bfc, gbc.sp());
        EXPECT(0x6f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0143
        gbc.setState(0xeb35, 0x8a76, 0x1860, 0xb4b6, 0xc7e8, 0xdcef, 0x1, 0x0);
        gbc.writeMem(0xeb35, { 0x21, 0x38, 0xab });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8a76, gbc.sp());
        EXPECT(0xeb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xeb35));
        EXPECT(0x38, gbc.readMem(0xeb36));
        EXPECT(0xab, gbc.readMem(0xeb37));
        // 21 0144
        gbc.setState(0x6d20, 0x7cfc, 0x1090, 0xdda5, 0x5e07, 0x9880, 0x0, 0x0);
        gbc.writeMem(0x6d20, { 0x21, 0xfd, 0x9c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7cfc, gbc.sp());
        EXPECT(0x6d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0145
        gbc.setState(0x215a, 0x27b7, 0xc40, 0x2d94, 0xc034, 0x9774, 0x0, 0x1);
        gbc.writeMem(0x215a, { 0x21, 0xb2, 0x21 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x27b7, gbc.sp());
        EXPECT(0x215d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0146
        gbc.setState(0x779c, 0x35c1, 0x41f0, 0x2a1a, 0xae88, 0xa11, 0x0, 0x0);
        gbc.writeMem(0x779c, { 0x21, 0x8c, 0x1e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x35c1, gbc.sp());
        EXPECT(0x779f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0147
        gbc.setState(0x4e58, 0x7ea5, 0x6c00, 0xe1d9, 0xc302, 0x836f, 0x1, 0x1);
        gbc.writeMem(0x4e58, { 0x21, 0xb0, 0xc3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7ea5, gbc.sp());
        EXPECT(0x4e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0148
        gbc.setState(0x9b1b, 0x2169, 0xce30, 0x93b2, 0x97da, 0x9179, 0x1, 0x1);
        gbc.writeMem(0x9b1b, { 0x21, 0x55, 0x39 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2169, gbc.sp());
        EXPECT(0x9b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9b1b));
        EXPECT(0x55, gbc.readMem(0x9b1c));
        EXPECT(0x39, gbc.readMem(0x9b1d));
        // 21 0149
        gbc.setState(0x1506, 0xa30f, 0xa930, 0xba78, 0xdbce, 0xd8c, 0x1, 0x1);
        gbc.writeMem(0x1506, { 0x21, 0x2f, 0xe1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa30f, gbc.sp());
        EXPECT(0x1509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 014A
        gbc.setState(0xe010, 0x4244, 0x4080, 0xa0ae, 0x727d, 0x7cbe, 0x0, 0x1);
        gbc.writeMem(0xe010, { 0x21, 0xda, 0x1b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4244, gbc.sp());
        EXPECT(0xe013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe010));
        EXPECT(0xda, gbc.readMem(0xe011));
        EXPECT(0x1b, gbc.readMem(0xe012));
        // 21 014B
        gbc.setState(0x79c, 0x6c3f, 0x9f20, 0x953a, 0x96c4, 0x3a57, 0x0, 0x0);
        gbc.writeMem(0x79c, { 0x21, 0x6b, 0x39 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6c3f, gbc.sp());
        EXPECT(0x79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 014C
        gbc.setState(0xb30c, 0x65c2, 0x1170, 0xa17c, 0xc5a5, 0x5b38, 0x0, 0x1);
        gbc.writeMem(0xb30c, { 0x21, 0xc8, 0x9a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x65c2, gbc.sp());
        EXPECT(0xb30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb30c));
        EXPECT(0xc8, gbc.readMem(0xb30d));
        EXPECT(0x9a, gbc.readMem(0xb30e));
        // 21 014D
        gbc.setState(0x46e, 0xbd55, 0x5a60, 0x3bb8, 0x130f, 0x4bbb, 0x1, 0x0);
        gbc.writeMem(0x46e, { 0x21, 0x8c, 0x32 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbd55, gbc.sp());
        EXPECT(0x471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 014E
        gbc.setState(0x963, 0xccf9, 0xf300, 0x5f63, 0x5650, 0xf231, 0x1, 0x1);
        gbc.writeMem(0x963, { 0x21, 0x74, 0xfe });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xccf9, gbc.sp());
        EXPECT(0x966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 014F
        gbc.setState(0x4eb3, 0xac19, 0x4830, 0xf256, 0x1f4c, 0x5b84, 0x1, 0x1);
        gbc.writeMem(0x4eb3, { 0x21, 0x4a, 0x32 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xac19, gbc.sp());
        EXPECT(0x4eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0150
        gbc.setState(0xd12c, 0x323f, 0x5b0, 0xf39b, 0x245b, 0xf4d8, 0x1, 0x1);
        gbc.writeMem(0xd12c, { 0x21, 0x7f, 0xc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x323f, gbc.sp());
        EXPECT(0xd12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd12c));
        EXPECT(0x7f, gbc.readMem(0xd12d));
        EXPECT(0xc, gbc.readMem(0xd12e));
        // 21 0151
        gbc.setState(0xde5c, 0x6ec4, 0x6930, 0x5069, 0xcb0d, 0xde9d, 0x0, 0x0);
        gbc.writeMem(0xde5c, { 0x21, 0x1a, 0x97 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6ec4, gbc.sp());
        EXPECT(0xde5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xde5c));
        EXPECT(0x1a, gbc.readMem(0xde5d));
        EXPECT(0x97, gbc.readMem(0xde5e));
        // 21 0152
        gbc.setState(0x7610, 0x1441, 0xe530, 0x7f3, 0xb1d1, 0xa3bd, 0x0, 0x1);
        gbc.writeMem(0x7610, { 0x21, 0xf0, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1441, gbc.sp());
        EXPECT(0x7613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0153
        gbc.setState(0xdd21, 0x1d12, 0x1120, 0xf083, 0x813f, 0x2af3, 0x1, 0x0);
        gbc.writeMem(0xdd21, { 0x21, 0x4f, 0x93 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1d12, gbc.sp());
        EXPECT(0xdd24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdd21));
        EXPECT(0x4f, gbc.readMem(0xdd22));
        EXPECT(0x93, gbc.readMem(0xdd23));
        // 21 0154
        gbc.setState(0x119f, 0xccbb, 0x5fa0, 0xb3df, 0xfc1e, 0x4fc8, 0x0, 0x0);
        gbc.writeMem(0x119f, { 0x21, 0xf8, 0xdc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xccbb, gbc.sp());
        EXPECT(0x11a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0156
        gbc.setState(0x73bd, 0xf29d, 0xe100, 0x70d2, 0xfedd, 0x66da, 0x0, 0x1);
        gbc.writeMem(0x73bd, { 0x21, 0x74, 0x3e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf29d, gbc.sp());
        EXPECT(0x73c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0157
        gbc.setState(0xd2ee, 0xef80, 0x7a60, 0x9196, 0x91e8, 0xedef, 0x0, 0x1);
        gbc.writeMem(0xd2ee, { 0x21, 0xbd, 0xc9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xef80, gbc.sp());
        EXPECT(0xd2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd2ee));
        EXPECT(0xbd, gbc.readMem(0xd2ef));
        EXPECT(0xc9, gbc.readMem(0xd2f0));
        // 21 0158
        gbc.setState(0x4be7, 0xbf2a, 0x6e40, 0x20e9, 0x7247, 0x719, 0x1, 0x1);
        gbc.writeMem(0x4be7, { 0x21, 0xb2, 0x2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbf2a, gbc.sp());
        EXPECT(0x4bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 015A
        gbc.setState(0xc0be, 0x2cae, 0x9230, 0xc34a, 0xfb4c, 0x5584, 0x0, 0x0);
        gbc.writeMem(0xc0be, { 0x21, 0x4e, 0xbd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2cae, gbc.sp());
        EXPECT(0xc0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc0be));
        EXPECT(0x4e, gbc.readMem(0xc0bf));
        EXPECT(0xbd, gbc.readMem(0xc0c0));
        // 21 015B
        gbc.setState(0xc9be, 0x4e9e, 0x75c0, 0xba06, 0x6f54, 0x1a48, 0x1, 0x0);
        gbc.writeMem(0xc9be, { 0x21, 0xdc, 0xff });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4e9e, gbc.sp());
        EXPECT(0xc9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc9be));
        EXPECT(0xdc, gbc.readMem(0xc9bf));
        EXPECT(0xff, gbc.readMem(0xc9c0));
        // 21 015C
        gbc.setState(0x85a4, 0xbfd, 0xc900, 0x4d0e, 0x5dc, 0x9c15, 0x0, 0x1);
        gbc.writeMem(0x85a4, { 0x21, 0xf5, 0xb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbfd, gbc.sp());
        EXPECT(0x85a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x85a4));
        EXPECT(0xf5, gbc.readMem(0x85a5));
        EXPECT(0xb, gbc.readMem(0x85a6));
        // 21 015D
        gbc.setState(0xccce, 0x3b69, 0xc850, 0x8051, 0xe7a6, 0xa5ea, 0x0, 0x0);
        gbc.writeMem(0xccce, { 0x21, 0x4e, 0xa8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3b69, gbc.sp());
        EXPECT(0xccd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xccce));
        EXPECT(0x4e, gbc.readMem(0xcccf));
        EXPECT(0xa8, gbc.readMem(0xccd0));
        // 21 015E
        gbc.setState(0x1813, 0x4965, 0x4440, 0x9043, 0x321e, 0x3f7c, 0x0, 0x1);
        gbc.writeMem(0x1813, { 0x21, 0x9b, 0x59 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4965, gbc.sp());
        EXPECT(0x1816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 015F
        gbc.setState(0xc17, 0x60a6, 0xd1a0, 0xd943, 0x454f, 0x518b, 0x0, 0x0);
        gbc.writeMem(0xc17, { 0x21, 0xe9, 0x88 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x60a6, gbc.sp());
        EXPECT(0xc1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0160
        gbc.setState(0x81b1, 0xa047, 0xeaa0, 0xb561, 0xb8e9, 0xd08, 0x1, 0x1);
        gbc.writeMem(0x81b1, { 0x21, 0x3b, 0x96 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa047, gbc.sp());
        EXPECT(0x81b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x81b1));
        EXPECT(0x3b, gbc.readMem(0x81b2));
        EXPECT(0x96, gbc.readMem(0x81b3));
        // 21 0161
        gbc.setState(0xeb0b, 0x8dab, 0xec0, 0xf7f9, 0xa747, 0x186f, 0x1, 0x1);
        gbc.writeMem(0xeb0b, { 0x21, 0x10, 0x1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8dab, gbc.sp());
        EXPECT(0xeb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xeb0b));
        EXPECT(0x10, gbc.readMem(0xeb0c));
        EXPECT(0x1, gbc.readMem(0xeb0d));
        // 21 0162
        gbc.setState(0x3f2a, 0x455, 0x4e80, 0x3f9d, 0x8fed, 0x11f3, 0x0, 0x0);
        gbc.writeMem(0x3f2a, { 0x21, 0x34, 0xa4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x455, gbc.sp());
        EXPECT(0x3f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0163
        gbc.setState(0x9542, 0x952d, 0xb8d0, 0x4bbc, 0xe4, 0xc9b9, 0x1, 0x0);
        gbc.writeMem(0x9542, { 0x21, 0xed, 0x64 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x952d, gbc.sp());
        EXPECT(0x9545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9542));
        EXPECT(0xed, gbc.readMem(0x9543));
        EXPECT(0x64, gbc.readMem(0x9544));
        // 21 0164
        gbc.setState(0x2260, 0x3958, 0x6850, 0x21b, 0x75fb, 0x9be, 0x0, 0x1);
        gbc.writeMem(0x2260, { 0x21, 0xe3, 0x5e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3958, gbc.sp());
        EXPECT(0x2263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0165
        gbc.setState(0x2931, 0x906a, 0x2f10, 0xd911, 0x60fe, 0xa277, 0x1, 0x0);
        gbc.writeMem(0x2931, { 0x21, 0xfb, 0x7e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x906a, gbc.sp());
        EXPECT(0x2934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0166
        gbc.setState(0x538a, 0xb1d5, 0xde30, 0xd387, 0xeda8, 0xd744, 0x0, 0x0);
        gbc.writeMem(0x538a, { 0x21, 0x6d, 0xf3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb1d5, gbc.sp());
        EXPECT(0x538d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0167
        gbc.setState(0x2fa6, 0x9d60, 0xab90, 0xd2b1, 0xaebd, 0x9136, 0x0, 0x1);
        gbc.writeMem(0x2fa6, { 0x21, 0x63, 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9d60, gbc.sp());
        EXPECT(0x2fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0168
        gbc.setState(0x4e07, 0x233f, 0xf980, 0x7c5e, 0x89d8, 0x4797, 0x0, 0x0);
        gbc.writeMem(0x4e07, { 0x21, 0x6a, 0x24 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x233f, gbc.sp());
        EXPECT(0x4e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 016A
        gbc.setState(0xe203, 0x41c6, 0x20f0, 0x92cd, 0x39e7, 0xabab, 0x1, 0x0);
        gbc.writeMem(0xe203, { 0x21, 0xda, 0xc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x41c6, gbc.sp());
        EXPECT(0xe206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe203));
        EXPECT(0xda, gbc.readMem(0xe204));
        EXPECT(0xc, gbc.readMem(0xe205));
        // 21 016B
        gbc.setState(0x4088, 0x2236, 0xeac0, 0x674e, 0xb3c6, 0xfff8, 0x1, 0x0);
        gbc.writeMem(0x4088, { 0x21, 0xb9, 0x5f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2236, gbc.sp());
        EXPECT(0x408b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 016C
        gbc.setState(0x2dea, 0xb57d, 0x8230, 0x8d14, 0x76bd, 0xc34b, 0x1, 0x1);
        gbc.writeMem(0x2dea, { 0x21, 0x38, 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb57d, gbc.sp());
        EXPECT(0x2ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 016D
        gbc.setState(0xac6a, 0xf957, 0xd900, 0xc995, 0xac4, 0xd285, 0x0, 0x1);
        gbc.writeMem(0xac6a, { 0x21, 0x71, 0x86 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf957, gbc.sp());
        EXPECT(0xac6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xac6a));
        EXPECT(0x71, gbc.readMem(0xac6b));
        EXPECT(0x86, gbc.readMem(0xac6c));
        // 21 016E
        gbc.setState(0x98f8, 0xed12, 0x1650, 0x9284, 0x281, 0xa40a, 0x1, 0x1);
        gbc.writeMem(0x98f8, { 0x21, 0x4b, 0xf0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xed12, gbc.sp());
        EXPECT(0x98fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x98f8));
        EXPECT(0x4b, gbc.readMem(0x98f9));
        EXPECT(0xf0, gbc.readMem(0x98fa));
        // 21 016F
        gbc.setState(0xa403, 0x1c11, 0x470, 0x7257, 0x93bc, 0xe9c6, 0x1, 0x1);
        gbc.writeMem(0xa403, { 0x21, 0x9d, 0x56 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1c11, gbc.sp());
        EXPECT(0xa406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa403));
        EXPECT(0x9d, gbc.readMem(0xa404));
        EXPECT(0x56, gbc.readMem(0xa405));
        // 21 0170
        gbc.setState(0x7586, 0xf2d1, 0x5d10, 0xd7fb, 0xa742, 0x9735, 0x1, 0x1);
        gbc.writeMem(0x7586, { 0x21, 0xb9, 0x4d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf2d1, gbc.sp());
        EXPECT(0x7589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0171
        gbc.setState(0xa966, 0xcd06, 0xc0f0, 0x53ba, 0x53ac, 0x4d87, 0x1, 0x0);
        gbc.writeMem(0xa966, { 0x21, 0x8, 0xd0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcd06, gbc.sp());
        EXPECT(0xa969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa966));
        EXPECT(0x8, gbc.readMem(0xa967));
        EXPECT(0xd0, gbc.readMem(0xa968));
        // 21 0172
        gbc.setState(0x5c5, 0xb7e6, 0x7e30, 0xbb34, 0x3b21, 0x7d01, 0x0, 0x0);
        gbc.writeMem(0x5c5, { 0x21, 0x5d, 0xda });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb7e6, gbc.sp());
        EXPECT(0x5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0173
        gbc.setState(0x53c7, 0x5030, 0x4480, 0xbe8, 0x91b8, 0xda7c, 0x0, 0x1);
        gbc.writeMem(0x53c7, { 0x21, 0xda, 0xae });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5030, gbc.sp());
        EXPECT(0x53ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0174
        gbc.setState(0x7f8f, 0x97c0, 0x6320, 0x675d, 0x706c, 0xa033, 0x0, 0x1);
        gbc.writeMem(0x7f8f, { 0x21, 0x2e, 0x89 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x97c0, gbc.sp());
        EXPECT(0x7f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0175
        gbc.setState(0xea5f, 0x8d91, 0x4520, 0x80a5, 0x177d, 0x8a42, 0x1, 0x0);
        gbc.writeMem(0xea5f, { 0x21, 0x48, 0x5b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8d91, gbc.sp());
        EXPECT(0xea62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xea5f));
        EXPECT(0x48, gbc.readMem(0xea60));
        EXPECT(0x5b, gbc.readMem(0xea61));
        // 21 0176
        gbc.setState(0x3c67, 0xc4fe, 0x2110, 0xcc71, 0xa388, 0x158f, 0x1, 0x1);
        gbc.writeMem(0x3c67, { 0x21, 0xbb, 0x41 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc4fe, gbc.sp());
        EXPECT(0x3c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0177
        gbc.setState(0x8850, 0x3098, 0xbd00, 0x303d, 0xc814, 0xe1e8, 0x0, 0x0);
        gbc.writeMem(0x8850, { 0x21, 0x6c, 0x14 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3098, gbc.sp());
        EXPECT(0x8853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8850));
        EXPECT(0x6c, gbc.readMem(0x8851));
        EXPECT(0x14, gbc.readMem(0x8852));
        // 21 0178
        gbc.setState(0xa0ee, 0x6030, 0xc850, 0x69d8, 0x32a6, 0x5843, 0x1, 0x0);
        gbc.writeMem(0xa0ee, { 0x21, 0x46, 0x1c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6030, gbc.sp());
        EXPECT(0xa0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa0ee));
        EXPECT(0x46, gbc.readMem(0xa0ef));
        EXPECT(0x1c, gbc.readMem(0xa0f0));
        // 21 0179
        gbc.setState(0x8de7, 0xdf3b, 0xc160, 0xab25, 0xfe55, 0xc54f, 0x1, 0x1);
        gbc.writeMem(0x8de7, { 0x21, 0x56, 0x19 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdf3b, gbc.sp());
        EXPECT(0x8dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8de7));
        EXPECT(0x56, gbc.readMem(0x8de8));
        EXPECT(0x19, gbc.readMem(0x8de9));
        // 21 017A
        gbc.setState(0x506, 0x620e, 0xe530, 0x180f, 0xf763, 0xc2c8, 0x1, 0x1);
        gbc.writeMem(0x506, { 0x21, 0xe1, 0x23 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x620e, gbc.sp());
        EXPECT(0x509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 017B
        gbc.setState(0xd25b, 0x2edb, 0x94f0, 0x7fb9, 0xd940, 0xa109, 0x0, 0x1);
        gbc.writeMem(0xd25b, { 0x21, 0xfa, 0xce });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2edb, gbc.sp());
        EXPECT(0xd25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd25b));
        EXPECT(0xfa, gbc.readMem(0xd25c));
        EXPECT(0xce, gbc.readMem(0xd25d));
        // 21 017C
        gbc.setState(0xc77e, 0xee23, 0xeb20, 0x9603, 0x1620, 0x3de1, 0x1, 0x1);
        gbc.writeMem(0xc77e, { 0x21, 0xb4, 0x80 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xee23, gbc.sp());
        EXPECT(0xc781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc77e));
        EXPECT(0xb4, gbc.readMem(0xc77f));
        EXPECT(0x80, gbc.readMem(0xc780));
        // 21 017D
        gbc.setState(0xec05, 0x908a, 0x8290, 0xe724, 0xfa9e, 0x13d8, 0x1, 0x0);
        gbc.writeMem(0xec05, { 0x21, 0x8a, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x908a, gbc.sp());
        EXPECT(0xec08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xec05));
        EXPECT(0x8a, gbc.readMem(0xec06));
        EXPECT(0x97, gbc.readMem(0xec07));
        // 21 017E
        gbc.setState(0x80d9, 0x61f8, 0x7470, 0x143, 0xf4a2, 0xb4eb, 0x1, 0x1);
        gbc.writeMem(0x80d9, { 0x21, 0x19, 0xe8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x61f8, gbc.sp());
        EXPECT(0x80dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x80d9));
        EXPECT(0x19, gbc.readMem(0x80da));
        EXPECT(0xe8, gbc.readMem(0x80db));
        // 21 017F
        gbc.setState(0x3043, 0x695c, 0x4110, 0x46d, 0xbfcd, 0xe2c5, 0x0, 0x0);
        gbc.writeMem(0x3043, { 0x21, 0x3e, 0x76 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x695c, gbc.sp());
        EXPECT(0x3046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0180
        gbc.setState(0x3e87, 0x8112, 0xfb10, 0xe667, 0x8ebc, 0x4ca0, 0x0, 0x1);
        gbc.writeMem(0x3e87, { 0x21, 0x1f, 0xc0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8112, gbc.sp());
        EXPECT(0x3e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0181
        gbc.setState(0x14bb, 0x96f6, 0xe80, 0xa1f, 0x8dd, 0xe274, 0x1, 0x0);
        gbc.writeMem(0x14bb, { 0x21, 0x12, 0xb5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x96f6, gbc.sp());
        EXPECT(0x14be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0182
        gbc.setState(0x11c3, 0x225d, 0x3300, 0xb357, 0xa964, 0xeb2a, 0x0, 0x0);
        gbc.writeMem(0x11c3, { 0x21, 0x73, 0xbb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x225d, gbc.sp());
        EXPECT(0x11c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0183
        gbc.setState(0x8727, 0x9561, 0x8210, 0x894d, 0xa16, 0xe2e6, 0x0, 0x1);
        gbc.writeMem(0x8727, { 0x21, 0x58, 0x45 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9561, gbc.sp());
        EXPECT(0x872a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8727));
        EXPECT(0x58, gbc.readMem(0x8728));
        EXPECT(0x45, gbc.readMem(0x8729));
        // 21 0184
        gbc.setState(0x2c62, 0x468b, 0xcbf0, 0x76a4, 0xcb8, 0x48c5, 0x0, 0x0);
        gbc.writeMem(0x2c62, { 0x21, 0x45, 0x24 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x468b, gbc.sp());
        EXPECT(0x2c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0185
        gbc.setState(0x4a60, 0xe861, 0x50, 0x3994, 0xb3cb, 0xa371, 0x0, 0x1);
        gbc.writeMem(0x4a60, { 0x21, 0x9, 0x17 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe861, gbc.sp());
        EXPECT(0x4a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0186
        gbc.setState(0x77d3, 0x8426, 0xce10, 0x2a00, 0xc050, 0x743, 0x1, 0x0);
        gbc.writeMem(0x77d3, { 0x21, 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8426, gbc.sp());
        EXPECT(0x77d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0187
        gbc.setState(0xb52e, 0xe1be, 0x9380, 0x513a, 0x50e7, 0x2f87, 0x1, 0x0);
        gbc.writeMem(0xb52e, { 0x21, 0x77, 0x5f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe1be, gbc.sp());
        EXPECT(0xb531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb52e));
        EXPECT(0x77, gbc.readMem(0xb52f));
        EXPECT(0x5f, gbc.readMem(0xb530));
        // 21 0188
        gbc.setState(0xbc6, 0xe3ab, 0x4170, 0x5dad, 0xbb2, 0x8c04, 0x0, 0x0);
        gbc.writeMem(0xbc6, { 0x21, 0x5e, 0xad });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe3ab, gbc.sp());
        EXPECT(0xbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0189
        gbc.setState(0xe2a7, 0x9d03, 0x72d0, 0x7719, 0xebec, 0xa95b, 0x0, 0x0);
        gbc.writeMem(0xe2a7, { 0x21, 0x2a, 0xe2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9d03, gbc.sp());
        EXPECT(0xe2aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe2a7));
        EXPECT(0x2a, gbc.readMem(0xe2a8));
        EXPECT(0xe2, gbc.readMem(0xe2a9));
        // 21 018A
        gbc.setState(0x4b61, 0xb530, 0x6c00, 0x2b6c, 0x7074, 0x4332, 0x0, 0x0);
        gbc.writeMem(0x4b61, { 0x21, 0xba, 0x13 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb530, gbc.sp());
        EXPECT(0x4b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 018C
        gbc.setState(0xb7bb, 0x65cb, 0xddb0, 0x1155, 0x998a, 0xa798, 0x0, 0x0);
        gbc.writeMem(0xb7bb, { 0x21, 0xb9, 0x69 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x65cb, gbc.sp());
        EXPECT(0xb7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb7bb));
        EXPECT(0xb9, gbc.readMem(0xb7bc));
        EXPECT(0x69, gbc.readMem(0xb7bd));
        // 21 018D
        gbc.setState(0x25e, 0x13ab, 0x8e60, 0xf795, 0x1b, 0x311c, 0x1, 0x1);
        gbc.writeMem(0x25e, { 0x21, 0xbe, 0xf9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x13ab, gbc.sp());
        EXPECT(0x261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 018E
        gbc.setState(0xa224, 0x4344, 0x2e50, 0xc5a8, 0x5c81, 0x6d13, 0x1, 0x1);
        gbc.writeMem(0xa224, { 0x21, 0xa6, 0xb8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4344, gbc.sp());
        EXPECT(0xa227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa224));
        EXPECT(0xa6, gbc.readMem(0xa225));
        EXPECT(0xb8, gbc.readMem(0xa226));
        // 21 018F
        gbc.setState(0x6520, 0x8aaf, 0xc3e0, 0xfde, 0x95ea, 0x809, 0x0, 0x0);
        gbc.writeMem(0x6520, { 0x21, 0x7, 0x7f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8aaf, gbc.sp());
        EXPECT(0x6523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0190
        gbc.setState(0x7ef1, 0x5b9d, 0xf3a0, 0xba34, 0x911e, 0xa74a, 0x1, 0x1);
        gbc.writeMem(0x7ef1, { 0x21, 0xa4, 0x94 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5b9d, gbc.sp());
        EXPECT(0x7ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0191
        gbc.setState(0x9f6b, 0x4632, 0x3f00, 0x9cae, 0xf9e0, 0x76ab, 0x0, 0x0);
        gbc.writeMem(0x9f6b, { 0x21, 0xb4, 0x60 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4632, gbc.sp());
        EXPECT(0x9f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9f6b));
        EXPECT(0xb4, gbc.readMem(0x9f6c));
        EXPECT(0x60, gbc.readMem(0x9f6d));
        // 21 0192
        gbc.setState(0xe404, 0x29f3, 0x9850, 0x6ddb, 0xa2b3, 0x455d, 0x1, 0x1);
        gbc.writeMem(0xe404, { 0x21, 0x32, 0xf8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x29f3, gbc.sp());
        EXPECT(0xe407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe404));
        EXPECT(0x32, gbc.readMem(0xe405));
        EXPECT(0xf8, gbc.readMem(0xe406));
        // 21 0193
        gbc.setState(0xec0f, 0x2284, 0x21b0, 0x8ad2, 0x510a, 0x2c87, 0x1, 0x1);
        gbc.writeMem(0xec0f, { 0x21, 0x2f, 0x20 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2284, gbc.sp());
        EXPECT(0xec12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xec0f));
        EXPECT(0x2f, gbc.readMem(0xec10));
        EXPECT(0x20, gbc.readMem(0xec11));
        // 21 0194
        gbc.setState(0x372d, 0x95bc, 0x7490, 0xb07e, 0xecef, 0x372e, 0x0, 0x0);
        gbc.writeMem(0x372d, { 0x21, 0x74, 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x95bc, gbc.sp());
        EXPECT(0x3730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0195
        gbc.setState(0xe3f2, 0x19fd, 0xbf70, 0x3365, 0xc5e5, 0x9b63, 0x0, 0x0);
        gbc.writeMem(0xe3f2, { 0x21, 0x2, 0x62 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x19fd, gbc.sp());
        EXPECT(0xe3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe3f2));
        EXPECT(0x2, gbc.readMem(0xe3f3));
        EXPECT(0x62, gbc.readMem(0xe3f4));
        // 21 0196
        gbc.setState(0x7c73, 0xd87, 0xe320, 0x37d2, 0x1bf8, 0x7985, 0x0, 0x0);
        gbc.writeMem(0x7c73, { 0x21, 0xee, 0x30 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd87, gbc.sp());
        EXPECT(0x7c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0197
        gbc.setState(0x86ac, 0xcc70, 0x2410, 0x4f2e, 0xb6aa, 0x62e0, 0x1, 0x0);
        gbc.writeMem(0x86ac, { 0x21, 0xbb, 0x76 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcc70, gbc.sp());
        EXPECT(0x86af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x86ac));
        EXPECT(0xbb, gbc.readMem(0x86ad));
        EXPECT(0x76, gbc.readMem(0x86ae));
        // 21 0198
        gbc.setState(0x11d3, 0x3287, 0xe550, 0x11cc, 0xedc4, 0xbacf, 0x1, 0x0);
        gbc.writeMem(0x11d3, { 0x21, 0x35, 0x41 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3287, gbc.sp());
        EXPECT(0x11d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0199
        gbc.setState(0x9314, 0xc6e7, 0xb3e0, 0xcaf1, 0xb86b, 0xb88f, 0x0, 0x0);
        gbc.writeMem(0x9314, { 0x21, 0xce, 0x77 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc6e7, gbc.sp());
        EXPECT(0x9317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9314));
        EXPECT(0xce, gbc.readMem(0x9315));
        EXPECT(0x77, gbc.readMem(0x9316));
        // 21 019A
        gbc.setState(0x5d77, 0xf89c, 0x5ab0, 0xe803, 0xb83d, 0x9166, 0x1, 0x0);
        gbc.writeMem(0x5d77, { 0x21, 0xb2, 0x32 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf89c, gbc.sp());
        EXPECT(0x5d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 019B
        gbc.setState(0x3571, 0x201a, 0x2350, 0x22b7, 0xe972, 0xaf17, 0x1, 0x0);
        gbc.writeMem(0x3571, { 0x21, 0xe4, 0xda });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x201a, gbc.sp());
        EXPECT(0x3574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 019C
        gbc.setState(0xb91c, 0x59a4, 0xb860, 0x11b3, 0xffee, 0x29ae, 0x0, 0x1);
        gbc.writeMem(0xb91c, { 0x21, 0x29, 0x97 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x59a4, gbc.sp());
        EXPECT(0xb91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb91c));
        EXPECT(0x29, gbc.readMem(0xb91d));
        EXPECT(0x97, gbc.readMem(0xb91e));
        // 21 019D
        gbc.setState(0x208c, 0x72c3, 0xacb0, 0xe60c, 0xde67, 0xf434, 0x0, 0x0);
        gbc.writeMem(0x208c, { 0x21, 0x24, 0x2c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x72c3, gbc.sp());
        EXPECT(0x208f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 019E
        gbc.setState(0x6ab4, 0x76c7, 0x6980, 0x73b6, 0xe1d7, 0xc132, 0x0, 0x0);
        gbc.writeMem(0x6ab4, { 0x21, 0xc, 0xcd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x76c7, gbc.sp());
        EXPECT(0x6ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 019F
        gbc.setState(0x7b44, 0xf053, 0xa870, 0xbde6, 0x2660, 0x525c, 0x1, 0x0);
        gbc.writeMem(0x7b44, { 0x21, 0x66, 0x9e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf053, gbc.sp());
        EXPECT(0x7b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01A0
        gbc.setState(0x6181, 0x7a36, 0x8920, 0xe006, 0xbae5, 0xf2c1, 0x0, 0x1);
        gbc.writeMem(0x6181, { 0x21, 0x3, 0x8d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7a36, gbc.sp());
        EXPECT(0x6184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01A1
        gbc.setState(0x471e, 0x9aca, 0xe7d0, 0x30b2, 0x330a, 0x3c0b, 0x1, 0x1);
        gbc.writeMem(0x471e, { 0x21, 0x4e, 0xf4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9aca, gbc.sp());
        EXPECT(0x4721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01A2
        gbc.setState(0x965f, 0xb6bb, 0x1be0, 0xa99c, 0xd756, 0x80cb, 0x1, 0x0);
        gbc.writeMem(0x965f, { 0x21, 0xda, 0xcb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb6bb, gbc.sp());
        EXPECT(0x9662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x965f));
        EXPECT(0xda, gbc.readMem(0x9660));
        EXPECT(0xcb, gbc.readMem(0x9661));
        // 21 01A3
        gbc.setState(0x9360, 0x328e, 0x7b50, 0xa6fc, 0xf55e, 0xc474, 0x0, 0x0);
        gbc.writeMem(0x9360, { 0x21, 0xa7, 0x89 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x328e, gbc.sp());
        EXPECT(0x9363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9360));
        EXPECT(0xa7, gbc.readMem(0x9361));
        EXPECT(0x89, gbc.readMem(0x9362));
        // 21 01A4
        gbc.setState(0x1701, 0x1a70, 0x3080, 0xb781, 0x9dee, 0x8cab, 0x1, 0x1);
        gbc.writeMem(0x1701, { 0x21, 0x68, 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1a70, gbc.sp());
        EXPECT(0x1704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01A5
        gbc.setState(0xacab, 0x2d41, 0x8b90, 0xf893, 0xe8b7, 0xf81, 0x0, 0x1);
        gbc.writeMem(0xacab, { 0x21, 0x68, 0x3c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2d41, gbc.sp());
        EXPECT(0xacae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xacab));
        EXPECT(0x68, gbc.readMem(0xacac));
        EXPECT(0x3c, gbc.readMem(0xacad));
        // 21 01A6
        gbc.setState(0xb891, 0x4f15, 0xf290, 0xe138, 0x1d7a, 0x4adc, 0x1, 0x0);
        gbc.writeMem(0xb891, { 0x21, 0x52, 0xa1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4f15, gbc.sp());
        EXPECT(0xb894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb891));
        EXPECT(0x52, gbc.readMem(0xb892));
        EXPECT(0xa1, gbc.readMem(0xb893));
        // 21 01A7
        gbc.setState(0xebd5, 0x331d, 0x1680, 0xfded, 0x4de2, 0x20eb, 0x0, 0x0);
        gbc.writeMem(0xebd5, { 0x21, 0x1a, 0xb5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x331d, gbc.sp());
        EXPECT(0xebd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xebd5));
        EXPECT(0x1a, gbc.readMem(0xebd6));
        EXPECT(0xb5, gbc.readMem(0xebd7));
        // 21 01A8
        gbc.setState(0xa533, 0x557c, 0x1dd0, 0xda04, 0x74e3, 0xad6, 0x1, 0x0);
        gbc.writeMem(0xa533, { 0x21, 0x19, 0x5b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x557c, gbc.sp());
        EXPECT(0xa536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa533));
        EXPECT(0x19, gbc.readMem(0xa534));
        EXPECT(0x5b, gbc.readMem(0xa535));
        // 21 01A9
        gbc.setState(0x49a4, 0xe724, 0xee60, 0xa455, 0xad5a, 0x1aab, 0x0, 0x1);
        gbc.writeMem(0x49a4, { 0x21, 0x9, 0xdf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe724, gbc.sp());
        EXPECT(0x49a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01AA
        gbc.setState(0x4e43, 0xd866, 0x3670, 0xe000, 0x6065, 0xcbe0, 0x1, 0x1);
        gbc.writeMem(0x4e43, { 0x21, 0xd1, 0x60 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd866, gbc.sp());
        EXPECT(0x4e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01AB
        gbc.setState(0x6d1, 0x960a, 0x88c0, 0xe0ca, 0x160b, 0xea31, 0x0, 0x0);
        gbc.writeMem(0x6d1, { 0x21, 0xae, 0x99 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x960a, gbc.sp());
        EXPECT(0x6d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01AC
        gbc.setState(0x51dc, 0xd975, 0x85e0, 0xe355, 0x2ad2, 0x5638, 0x1, 0x1);
        gbc.writeMem(0x51dc, { 0x21, 0x21, 0x5c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd975, gbc.sp());
        EXPECT(0x51df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01AD
        gbc.setState(0xa94e, 0x7cb3, 0xcff0, 0x6184, 0x54ae, 0x5845, 0x1, 0x0);
        gbc.writeMem(0xa94e, { 0x21, 0xbb, 0x53 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7cb3, gbc.sp());
        EXPECT(0xa951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa94e));
        EXPECT(0xbb, gbc.readMem(0xa94f));
        EXPECT(0x53, gbc.readMem(0xa950));
        // 21 01AE
        gbc.setState(0xb75f, 0xfbf4, 0xc960, 0xda60, 0x515c, 0xdeca, 0x0, 0x1);
        gbc.writeMem(0xb75f, { 0x21, 0x77, 0xcb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfbf4, gbc.sp());
        EXPECT(0xb762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb75f));
        EXPECT(0x77, gbc.readMem(0xb760));
        EXPECT(0xcb, gbc.readMem(0xb761));
        // 21 01AF
        gbc.setState(0x5d34, 0x4e46, 0x8120, 0xfd3a, 0xc382, 0x84df, 0x1, 0x0);
        gbc.writeMem(0x5d34, { 0x21, 0x20, 0xf7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4e46, gbc.sp());
        EXPECT(0x5d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01B0
        gbc.setState(0x851, 0x1914, 0x3b80, 0x29b3, 0xa173, 0xf8a6, 0x1, 0x0);
        gbc.writeMem(0x851, { 0x21, 0x51, 0x8d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1914, gbc.sp());
        EXPECT(0x854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01B1
        gbc.setState(0xdae2, 0x6781, 0xc5f0, 0xf525, 0x31a9, 0xb25, 0x1, 0x1);
        gbc.writeMem(0xdae2, { 0x21, 0x32, 0xfe });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6781, gbc.sp());
        EXPECT(0xdae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdae2));
        EXPECT(0x32, gbc.readMem(0xdae3));
        EXPECT(0xfe, gbc.readMem(0xdae4));
        // 21 01B2
        gbc.setState(0xcf84, 0x1be2, 0xd200, 0x5941, 0x3ccb, 0x470f, 0x0, 0x0);
        gbc.writeMem(0xcf84, { 0x21, 0x7b, 0x2f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1be2, gbc.sp());
        EXPECT(0xcf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcf84));
        EXPECT(0x7b, gbc.readMem(0xcf85));
        EXPECT(0x2f, gbc.readMem(0xcf86));
        // 21 01B3
        gbc.setState(0x533b, 0x521c, 0xc040, 0xbf3, 0xa3fb, 0xe039, 0x1, 0x0);
        gbc.writeMem(0x533b, { 0x21, 0xa3, 0xa });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x521c, gbc.sp());
        EXPECT(0x533e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01B4
        gbc.setState(0x1834, 0xf870, 0x1df0, 0x7ffd, 0x9902, 0x4f2d, 0x1, 0x1);
        gbc.writeMem(0x1834, { 0x21, 0x0, 0x11 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf870, gbc.sp());
        EXPECT(0x1837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01B5
        gbc.setState(0x4aeb, 0x4dbe, 0x8e40, 0xec2, 0x8d35, 0xca24, 0x0, 0x0);
        gbc.writeMem(0x4aeb, { 0x21, 0xcf, 0x66 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4dbe, gbc.sp());
        EXPECT(0x4aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01B6
        gbc.setState(0x6e30, 0x51e6, 0x59d0, 0xbaa3, 0x6500, 0xb7ae, 0x1, 0x1);
        gbc.writeMem(0x6e30, { 0x21, 0xac, 0x5b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x51e6, gbc.sp());
        EXPECT(0x6e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01B7
        gbc.setState(0x7c7e, 0x7110, 0x98a0, 0xba42, 0x3ba, 0x3d0d, 0x1, 0x0);
        gbc.writeMem(0x7c7e, { 0x21, 0xb4, 0xbf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7110, gbc.sp());
        EXPECT(0x7c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01B8
        gbc.setState(0xedb2, 0x6136, 0x67b0, 0xc875, 0x3c5f, 0x7ded, 0x1, 0x0);
        gbc.writeMem(0xedb2, { 0x21, 0x39, 0x61 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6136, gbc.sp());
        EXPECT(0xedb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xedb2));
        EXPECT(0x39, gbc.readMem(0xedb3));
        EXPECT(0x61, gbc.readMem(0xedb4));
        // 21 01B9
        gbc.setState(0xc880, 0x9b34, 0x74e0, 0x197, 0x535c, 0xa7a8, 0x1, 0x1);
        gbc.writeMem(0xc880, { 0x21, 0x1f, 0x98 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9b34, gbc.sp());
        EXPECT(0xc883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc880));
        EXPECT(0x1f, gbc.readMem(0xc881));
        EXPECT(0x98, gbc.readMem(0xc882));
        // 21 01BA
        gbc.setState(0xc98a, 0x5f7b, 0xfc40, 0x704c, 0xbdbb, 0x605f, 0x1, 0x0);
        gbc.writeMem(0xc98a, { 0x21, 0x8d, 0xa3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5f7b, gbc.sp());
        EXPECT(0xc98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc98a));
        EXPECT(0x8d, gbc.readMem(0xc98b));
        EXPECT(0xa3, gbc.readMem(0xc98c));
        // 21 01BC
        gbc.setState(0xb499, 0x92b, 0x41f0, 0xe614, 0x7b25, 0x35ae, 0x1, 0x0);
        gbc.writeMem(0xb499, { 0x21, 0xef, 0x97 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x92b, gbc.sp());
        EXPECT(0xb49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb499));
        EXPECT(0xef, gbc.readMem(0xb49a));
        EXPECT(0x97, gbc.readMem(0xb49b));
        // 21 01BD
        gbc.setState(0x701e, 0xa90, 0xb120, 0x4a2c, 0x23b6, 0x8318, 0x1, 0x0);
        gbc.writeMem(0x701e, { 0x21, 0xc, 0x5b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa90, gbc.sp());
        EXPECT(0x7021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01BE
        gbc.setState(0x391e, 0xba2f, 0xbfa0, 0xe793, 0xcd82, 0x272e, 0x1, 0x1);
        gbc.writeMem(0x391e, { 0x21, 0xe0, 0xd9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xba2f, gbc.sp());
        EXPECT(0x3921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01BF
        gbc.setState(0x5466, 0xf3dd, 0xb4e0, 0x734f, 0x60ca, 0xf72a, 0x0, 0x1);
        gbc.writeMem(0x5466, { 0x21, 0x56, 0xe9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf3dd, gbc.sp());
        EXPECT(0x5469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01C1
        gbc.setState(0x1a84, 0x6313, 0x3920, 0x474d, 0xd3dc, 0xadc8, 0x0, 0x1);
        gbc.writeMem(0x1a84, { 0x21, 0x2f, 0xd9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6313, gbc.sp());
        EXPECT(0x1a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01C2
        gbc.setState(0x835e, 0x67e5, 0x41e0, 0xd1df, 0xd115, 0x553, 0x0, 0x0);
        gbc.writeMem(0x835e, { 0x21, 0x27, 0x5b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x67e5, gbc.sp());
        EXPECT(0x8361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x835e));
        EXPECT(0x27, gbc.readMem(0x835f));
        EXPECT(0x5b, gbc.readMem(0x8360));
        // 21 01C3
        gbc.setState(0x85b8, 0x95ad, 0x7f90, 0x1ca2, 0x92c2, 0x423, 0x1, 0x0);
        gbc.writeMem(0x85b8, { 0x21, 0xba, 0xe1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x95ad, gbc.sp());
        EXPECT(0x85bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x85b8));
        EXPECT(0xba, gbc.readMem(0x85b9));
        EXPECT(0xe1, gbc.readMem(0x85ba));
        // 21 01C4
        gbc.setState(0x6edc, 0x1acf, 0x4c40, 0xcce9, 0xec8c, 0x7bfb, 0x1, 0x1);
        gbc.writeMem(0x6edc, { 0x21, 0xd6, 0xc3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1acf, gbc.sp());
        EXPECT(0x6edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01C5
        gbc.setState(0xdb29, 0x4dd8, 0xc560, 0xf23d, 0xf5a7, 0x52d2, 0x1, 0x0);
        gbc.writeMem(0xdb29, { 0x21, 0xd, 0x6f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4dd8, gbc.sp());
        EXPECT(0xdb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdb29));
        EXPECT(0xd, gbc.readMem(0xdb2a));
        EXPECT(0x6f, gbc.readMem(0xdb2b));
        // 21 01C6
        gbc.setState(0xeef6, 0x54a1, 0x44b0, 0x167f, 0x5f58, 0xb095, 0x1, 0x1);
        gbc.writeMem(0xeef6, { 0x21, 0x5, 0x99 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x54a1, gbc.sp());
        EXPECT(0xeef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xeef6));
        EXPECT(0x5, gbc.readMem(0xeef7));
        EXPECT(0x99, gbc.readMem(0xeef8));
        // 21 01C7
        gbc.setState(0x65f8, 0x83fa, 0x70b0, 0xc350, 0xabeb, 0xc55c, 0x0, 0x0);
        gbc.writeMem(0x65f8, { 0x21, 0xcb, 0x57 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x83fa, gbc.sp());
        EXPECT(0x65fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01C8
        gbc.setState(0xd8ca, 0x555e, 0x6420, 0x10d4, 0xe129, 0xcc2, 0x0, 0x1);
        gbc.writeMem(0xd8ca, { 0x21, 0x8f, 0xae });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x555e, gbc.sp());
        EXPECT(0xd8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd8ca));
        EXPECT(0x8f, gbc.readMem(0xd8cb));
        EXPECT(0xae, gbc.readMem(0xd8cc));
        // 21 01C9
        gbc.setState(0xe95b, 0x6905, 0x1f20, 0x18d5, 0x4183, 0xc676, 0x1, 0x0);
        gbc.writeMem(0xe95b, { 0x21, 0xa, 0x56 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6905, gbc.sp());
        EXPECT(0xe95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe95b));
        EXPECT(0xa, gbc.readMem(0xe95c));
        EXPECT(0x56, gbc.readMem(0xe95d));
        // 21 01CA
        gbc.setState(0xa384, 0x925, 0x6e30, 0xd66a, 0x2912, 0xc2f1, 0x0, 0x0);
        gbc.writeMem(0xa384, { 0x21, 0x82, 0x8c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x925, gbc.sp());
        EXPECT(0xa387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa384));
        EXPECT(0x82, gbc.readMem(0xa385));
        EXPECT(0x8c, gbc.readMem(0xa386));
        // 21 01CB
        gbc.setState(0x4922, 0x88be, 0x90d0, 0xec51, 0xe888, 0x5fef, 0x0, 0x0);
        gbc.writeMem(0x4922, { 0x21, 0xc8, 0xda });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x88be, gbc.sp());
        EXPECT(0x4925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01CC
        gbc.setState(0x1873, 0xc902, 0x7930, 0xa002, 0x58e, 0xd651, 0x1, 0x1);
        gbc.writeMem(0x1873, { 0x21, 0x8c, 0x24 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc902, gbc.sp());
        EXPECT(0x1876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01CD
        gbc.setState(0xb1f5, 0x280d, 0xd3b0, 0x5443, 0x376a, 0xfcc7, 0x0, 0x1);
        gbc.writeMem(0xb1f5, { 0x21, 0x52, 0xdd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x280d, gbc.sp());
        EXPECT(0xb1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb1f5));
        EXPECT(0x52, gbc.readMem(0xb1f6));
        EXPECT(0xdd, gbc.readMem(0xb1f7));
        // 21 01CE
        gbc.setState(0x8cdd, 0xcbc1, 0x4d00, 0xfdc8, 0x73a3, 0x4aa6, 0x1, 0x1);
        gbc.writeMem(0x8cdd, { 0x21, 0x36, 0x56 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcbc1, gbc.sp());
        EXPECT(0x8ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8cdd));
        EXPECT(0x36, gbc.readMem(0x8cde));
        EXPECT(0x56, gbc.readMem(0x8cdf));
        // 21 01CF
        gbc.setState(0x455a, 0x402, 0xcae0, 0x217a, 0x29c6, 0x8250, 0x1, 0x0);
        gbc.writeMem(0x455a, { 0x21, 0x5, 0xfc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x402, gbc.sp());
        EXPECT(0x455d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01D0
        gbc.setState(0x511d, 0xe381, 0xa730, 0xce1e, 0xb424, 0xb019, 0x1, 0x1);
        gbc.writeMem(0x511d, { 0x21, 0xfb, 0xc5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe381, gbc.sp());
        EXPECT(0x5120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01D1
        gbc.setState(0x4aa4, 0x2adb, 0x8fa0, 0xd6b2, 0xe4c7, 0x953, 0x1, 0x0);
        gbc.writeMem(0x4aa4, { 0x21, 0x5f, 0x34 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2adb, gbc.sp());
        EXPECT(0x4aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01D2
        gbc.setState(0x50b8, 0xf247, 0x5e10, 0xe735, 0x1d0b, 0xbc77, 0x0, 0x0);
        gbc.writeMem(0x50b8, { 0x21, 0x35, 0xce });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf247, gbc.sp());
        EXPECT(0x50bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01D3
        gbc.setState(0x6046, 0xe9c5, 0x9f10, 0xd2dc, 0xd1d0, 0x3ab, 0x1, 0x1);
        gbc.writeMem(0x6046, { 0x21, 0xb8, 0xb0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe9c5, gbc.sp());
        EXPECT(0x6049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01D4
        gbc.setState(0xa339, 0x6073, 0x4050, 0x6ec1, 0x9a6f, 0x953d, 0x0, 0x0);
        gbc.writeMem(0xa339, { 0x21, 0x8b, 0xc5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6073, gbc.sp());
        EXPECT(0xa33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa339));
        EXPECT(0x8b, gbc.readMem(0xa33a));
        EXPECT(0xc5, gbc.readMem(0xa33b));
        // 21 01D5
        gbc.setState(0xa4f3, 0xa6d3, 0xe5e0, 0x72, 0x22f4, 0x8bf, 0x0, 0x1);
        gbc.writeMem(0xa4f3, { 0x21, 0xaf, 0x93 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa6d3, gbc.sp());
        EXPECT(0xa4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa4f3));
        EXPECT(0xaf, gbc.readMem(0xa4f4));
        EXPECT(0x93, gbc.readMem(0xa4f5));
        // 21 01D6
        gbc.setState(0x1fc6, 0xfd4f, 0x9e70, 0xc52e, 0xb062, 0x6268, 0x1, 0x0);
        gbc.writeMem(0x1fc6, { 0x21, 0x82, 0xdf });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfd4f, gbc.sp());
        EXPECT(0x1fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01D7
        gbc.setState(0xdf85, 0xaa96, 0x39d0, 0xac69, 0x3bc2, 0x71cf, 0x1, 0x1);
        gbc.writeMem(0xdf85, { 0x21, 0x8b, 0x88 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaa96, gbc.sp());
        EXPECT(0xdf88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdf85));
        EXPECT(0x8b, gbc.readMem(0xdf86));
        EXPECT(0x88, gbc.readMem(0xdf87));
        // 21 01D8
        gbc.setState(0x28ec, 0xcdaf, 0xd3b0, 0x4521, 0x4906, 0xd183, 0x1, 0x0);
        gbc.writeMem(0x28ec, { 0x21, 0x37, 0x4f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcdaf, gbc.sp());
        EXPECT(0x28ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01D9
        gbc.setState(0x1382, 0x2c92, 0x4eb0, 0x185e, 0x7ee5, 0x5e59, 0x0, 0x0);
        gbc.writeMem(0x1382, { 0x21, 0x4c, 0x65 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2c92, gbc.sp());
        EXPECT(0x1385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01DA
        gbc.setState(0x9631, 0x572, 0x7d0, 0x22d3, 0x139d, 0x4660, 0x1, 0x0);
        gbc.writeMem(0x9631, { 0x21, 0xff, 0x69 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x572, gbc.sp());
        EXPECT(0x9634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9631));
        EXPECT(0xff, gbc.readMem(0x9632));
        EXPECT(0x69, gbc.readMem(0x9633));
        // 21 01DB
        gbc.setState(0x891f, 0xfb99, 0xc560, 0xba22, 0x70e3, 0x392f, 0x1, 0x0);
        gbc.writeMem(0x891f, { 0x21, 0xa5, 0x74 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfb99, gbc.sp());
        EXPECT(0x8922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x891f));
        EXPECT(0xa5, gbc.readMem(0x8920));
        EXPECT(0x74, gbc.readMem(0x8921));
        // 21 01DC
        gbc.setState(0xcb90, 0xccc4, 0x3190, 0xddc9, 0x4142, 0xe7f, 0x0, 0x0);
        gbc.writeMem(0xcb90, { 0x21, 0x51, 0x9a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xccc4, gbc.sp());
        EXPECT(0xcb93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcb90));
        EXPECT(0x51, gbc.readMem(0xcb91));
        EXPECT(0x9a, gbc.readMem(0xcb92));
        // 21 01DD
        gbc.setState(0x2d8e, 0xe459, 0x9120, 0x4a05, 0x2244, 0x40a2, 0x1, 0x1);
        gbc.writeMem(0x2d8e, { 0x21, 0xde, 0xa9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe459, gbc.sp());
        EXPECT(0x2d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01DE
        gbc.setState(0x81ad, 0xdbe, 0x57c0, 0x8ccc, 0x6991, 0xabbd, 0x0, 0x1);
        gbc.writeMem(0x81ad, { 0x21, 0x3a, 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdbe, gbc.sp());
        EXPECT(0x81b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x81ad));
        EXPECT(0x3a, gbc.readMem(0x81ae));
        EXPECT(0x2c, gbc.readMem(0x81af));
        // 21 01DF
        gbc.setState(0xa837, 0x6f6f, 0x5ee0, 0x8658, 0x3e8d, 0xdc41, 0x1, 0x1);
        gbc.writeMem(0xa837, { 0x21, 0xcd, 0xe6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6f6f, gbc.sp());
        EXPECT(0xa83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa837));
        EXPECT(0xcd, gbc.readMem(0xa838));
        EXPECT(0xe6, gbc.readMem(0xa839));
        // 21 01E2
        gbc.setState(0xeabd, 0xf64e, 0x2f90, 0x902c, 0x9b3a, 0xb850, 0x0, 0x1);
        gbc.writeMem(0xeabd, { 0x21, 0x85, 0x5e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf64e, gbc.sp());
        EXPECT(0xeac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xeabd));
        EXPECT(0x85, gbc.readMem(0xeabe));
        EXPECT(0x5e, gbc.readMem(0xeabf));
        // 21 01E3
        gbc.setState(0xc8f, 0x2a3b, 0xfb70, 0x523e, 0x3da2, 0x6d0c, 0x0, 0x0);
        gbc.writeMem(0xc8f, { 0x21, 0x8b, 0x19 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2a3b, gbc.sp());
        EXPECT(0xc92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01E4
        gbc.setState(0x225d, 0x6d55, 0x3d70, 0x521a, 0x583e, 0xfb57, 0x0, 0x1);
        gbc.writeMem(0x225d, { 0x21, 0x5b, 0x10 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6d55, gbc.sp());
        EXPECT(0x2260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01E5
        gbc.setState(0xec90, 0xbc74, 0x770, 0x830d, 0x546d, 0xf755, 0x0, 0x1);
        gbc.writeMem(0xec90, { 0x21, 0x73, 0x8f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbc74, gbc.sp());
        EXPECT(0xec93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xec90));
        EXPECT(0x73, gbc.readMem(0xec91));
        EXPECT(0x8f, gbc.readMem(0xec92));
        // 21 01E6
        gbc.setState(0x621c, 0xec07, 0xeb30, 0x1492, 0xfed1, 0xabbb, 0x0, 0x0);
        gbc.writeMem(0x621c, { 0x21, 0x90, 0x96 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xec07, gbc.sp());
        EXPECT(0x621f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01E7
        gbc.setState(0xba42, 0x41f1, 0x4250, 0x2539, 0xb298, 0xaa56, 0x1, 0x1);
        gbc.writeMem(0xba42, { 0x21, 0x4b, 0x5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x41f1, gbc.sp());
        EXPECT(0xba45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xba42));
        EXPECT(0x4b, gbc.readMem(0xba43));
        EXPECT(0x5, gbc.readMem(0xba44));
        // 21 01E8
        gbc.setState(0xc963, 0x19e0, 0x5c00, 0x339c, 0xf3f1, 0x2423, 0x1, 0x1);
        gbc.writeMem(0xc963, { 0x21, 0x15, 0x80 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x19e0, gbc.sp());
        EXPECT(0xc966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc963));
        EXPECT(0x15, gbc.readMem(0xc964));
        EXPECT(0x80, gbc.readMem(0xc965));
        // 21 01E9
        gbc.setState(0x16ad, 0x6ba7, 0xe3f0, 0xd291, 0x4971, 0xab3b, 0x1, 0x0);
        gbc.writeMem(0x16ad, { 0x21, 0xd2, 0xc5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6ba7, gbc.sp());
        EXPECT(0x16b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01EB
        gbc.setState(0x472b, 0x5166, 0xe3d0, 0x789e, 0x129c, 0x19e0, 0x1, 0x0);
        gbc.writeMem(0x472b, { 0x21, 0xed, 0x13 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5166, gbc.sp());
        EXPECT(0x472e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01EC
        gbc.setState(0x9de2, 0x1209, 0x5810, 0x400d, 0x20ec, 0xd0c2, 0x0, 0x1);
        gbc.writeMem(0x9de2, { 0x21, 0x92, 0xc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1209, gbc.sp());
        EXPECT(0x9de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9de2));
        EXPECT(0x92, gbc.readMem(0x9de3));
        EXPECT(0xc, gbc.readMem(0x9de4));
        // 21 01ED
        gbc.setState(0xbf6b, 0xf562, 0x1e70, 0x7708, 0x3888, 0xb4af, 0x0, 0x0);
        gbc.writeMem(0xbf6b, { 0x21, 0x2d, 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf562, gbc.sp());
        EXPECT(0xbf6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbf6b));
        EXPECT(0x2d, gbc.readMem(0xbf6c));
        EXPECT(0xe9, gbc.readMem(0xbf6d));
        // 21 01EE
        gbc.setState(0xc47b, 0x3c0, 0x74a0, 0x5c41, 0x82fe, 0x9434, 0x0, 0x0);
        gbc.writeMem(0xc47b, { 0x21, 0xcd, 0x90 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3c0, gbc.sp());
        EXPECT(0xc47e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc47b));
        EXPECT(0xcd, gbc.readMem(0xc47c));
        EXPECT(0x90, gbc.readMem(0xc47d));
        // 21 01EF
        gbc.setState(0xca, 0x7a73, 0x4cf0, 0xd357, 0xcd48, 0x7db6, 0x1, 0x0);
        gbc.writeMem(0xca, { 0x21, 0xd, 0x5a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7a73, gbc.sp());
        EXPECT(0xcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01F0
        gbc.setState(0x444b, 0x58f3, 0xa730, 0xfe97, 0xa966, 0x6ce8, 0x0, 0x0);
        gbc.writeMem(0x444b, { 0x21, 0x50, 0x16 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x58f3, gbc.sp());
        EXPECT(0x444e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01F2
        gbc.setState(0xa80b, 0x955e, 0x9f30, 0x6eff, 0xb62d, 0x1a18, 0x1, 0x0);
        gbc.writeMem(0xa80b, { 0x21, 0x8e, 0x75 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x955e, gbc.sp());
        EXPECT(0xa80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa80b));
        EXPECT(0x8e, gbc.readMem(0xa80c));
        EXPECT(0x75, gbc.readMem(0xa80d));
        // 21 01F3
        gbc.setState(0x394e, 0x2c06, 0xc590, 0xf292, 0xe10c, 0xdd6f, 0x1, 0x1);
        gbc.writeMem(0x394e, { 0x21, 0xd7, 0x3e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2c06, gbc.sp());
        EXPECT(0x3951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01F4
        gbc.setState(0x5dcb, 0xd7d5, 0x7890, 0x5e23, 0xb9e, 0xe2ca, 0x0, 0x0);
        gbc.writeMem(0x5dcb, { 0x21, 0xe6, 0x3a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd7d5, gbc.sp());
        EXPECT(0x5dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01F5
        gbc.setState(0x3bc2, 0xabea, 0xf300, 0x1236, 0x92f4, 0x299, 0x1, 0x1);
        gbc.writeMem(0x3bc2, { 0x21, 0xb6, 0x25 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xabea, gbc.sp());
        EXPECT(0x3bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01F6
        gbc.setState(0x7ceb, 0xbd21, 0xe0f0, 0xb1e3, 0xae74, 0x3ab7, 0x1, 0x0);
        gbc.writeMem(0x7ceb, { 0x21, 0x89, 0x5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbd21, gbc.sp());
        EXPECT(0x7cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01F7
        gbc.setState(0xcb3c, 0xecd9, 0xa2e0, 0xbb79, 0x920e, 0xf135, 0x0, 0x1);
        gbc.writeMem(0xcb3c, { 0x21, 0xee, 0x51 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xecd9, gbc.sp());
        EXPECT(0xcb3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcb3c));
        EXPECT(0xee, gbc.readMem(0xcb3d));
        EXPECT(0x51, gbc.readMem(0xcb3e));
        // 21 01F8
        gbc.setState(0xa3c7, 0x4d84, 0x1740, 0xb1ab, 0xe776, 0x4d32, 0x0, 0x0);
        gbc.writeMem(0xa3c7, { 0x21, 0xd5, 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4d84, gbc.sp());
        EXPECT(0xa3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa3c7));
        EXPECT(0xd5, gbc.readMem(0xa3c8));
        EXPECT(0x10, gbc.readMem(0xa3c9));
        // 21 01F9
        gbc.setState(0x9040, 0xa3fe, 0xab30, 0x5b06, 0x4ffb, 0xa8c5, 0x1, 0x0);
        gbc.writeMem(0x9040, { 0x21, 0xdf, 0xa3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa3fe, gbc.sp());
        EXPECT(0x9043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9040));
        EXPECT(0xdf, gbc.readMem(0x9041));
        EXPECT(0xa3, gbc.readMem(0x9042));
        // 21 01FA
        gbc.setState(0x4684, 0x2207, 0x6740, 0x5ddd, 0xe2fb, 0x1588, 0x0, 0x0);
        gbc.writeMem(0x4684, { 0x21, 0x67, 0xe3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2207, gbc.sp());
        EXPECT(0x4687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 01FB
        gbc.setState(0x13c0, 0xa31f, 0xcff0, 0xb0d2, 0xc4d8, 0xe341, 0x1, 0x1);
        gbc.writeMem(0x13c0, { 0x21, 0xe9, 0x5f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa31f, gbc.sp());
        EXPECT(0x13c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01FC
        gbc.setState(0xdabf, 0x1b21, 0x7c20, 0x8e3b, 0x75ee, 0x55f3, 0x0, 0x0);
        gbc.writeMem(0xdabf, { 0x21, 0x2c, 0x73 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1b21, gbc.sp());
        EXPECT(0xdac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdabf));
        EXPECT(0x2c, gbc.readMem(0xdac0));
        EXPECT(0x73, gbc.readMem(0xdac1));
        // 21 01FD
        gbc.setState(0x87e0, 0x9af, 0x6be0, 0x1ad8, 0xabc, 0xb394, 0x0, 0x0);
        gbc.writeMem(0x87e0, { 0x21, 0x4f, 0xda });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9af, gbc.sp());
        EXPECT(0x87e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x87e0));
        EXPECT(0x4f, gbc.readMem(0x87e1));
        EXPECT(0xda, gbc.readMem(0x87e2));
        // 21 01FE
        gbc.setState(0x28a8, 0xd8d6, 0x6c90, 0x213f, 0xabfe, 0x72bc, 0x0, 0x0);
        gbc.writeMem(0x28a8, { 0x21, 0x9a, 0x51 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd8d6, gbc.sp());
        EXPECT(0x28ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 01FF
        gbc.setState(0x6f2b, 0x5f20, 0x39e0, 0x8b02, 0x70a7, 0x1459, 0x1, 0x0);
        gbc.writeMem(0x6f2b, { 0x21, 0x1f, 0xa0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5f20, gbc.sp());
        EXPECT(0x6f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0200
        gbc.setState(0xd2d3, 0xdf35, 0xaa80, 0xa46d, 0xe626, 0x4b5a, 0x0, 0x1);
        gbc.writeMem(0xd2d3, { 0x21, 0xdf, 0x9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdf35, gbc.sp());
        EXPECT(0xd2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd2d3));
        EXPECT(0xdf, gbc.readMem(0xd2d4));
        EXPECT(0x9, gbc.readMem(0xd2d5));
        // 21 0203
        gbc.setState(0xcbcb, 0x40c4, 0xaee0, 0xd162, 0x9520, 0x1be4, 0x0, 0x0);
        gbc.writeMem(0xcbcb, { 0x21, 0x5e, 0x35 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x40c4, gbc.sp());
        EXPECT(0xcbce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcbcb));
        EXPECT(0x5e, gbc.readMem(0xcbcc));
        EXPECT(0x35, gbc.readMem(0xcbcd));
        // 21 0204
        gbc.setState(0x2876, 0x572, 0xc50, 0x491e, 0xf773, 0xd0e7, 0x1, 0x0);
        gbc.writeMem(0x2876, { 0x21, 0xbc, 0x14 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x572, gbc.sp());
        EXPECT(0x2879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0205
        gbc.setState(0x8fc7, 0x77f3, 0x9f70, 0x2d3b, 0x9d9d, 0x79c6, 0x1, 0x1);
        gbc.writeMem(0x8fc7, { 0x21, 0xfe, 0xf7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x77f3, gbc.sp());
        EXPECT(0x8fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8fc7));
        EXPECT(0xfe, gbc.readMem(0x8fc8));
        EXPECT(0xf7, gbc.readMem(0x8fc9));
        // 21 0206
        gbc.setState(0x3475, 0x5594, 0x470, 0xec20, 0xfe16, 0xd1bc, 0x1, 0x1);
        gbc.writeMem(0x3475, { 0x21, 0x8b, 0x37 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5594, gbc.sp());
        EXPECT(0x3478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0207
        gbc.setState(0x5f91, 0x3d69, 0x4b20, 0xee24, 0xea0a, 0x6bd3, 0x0, 0x0);
        gbc.writeMem(0x5f91, { 0x21, 0x0, 0x3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3d69, gbc.sp());
        EXPECT(0x5f94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0209
        gbc.setState(0x296, 0xd56, 0xe150, 0x7bd0, 0xc8c0, 0x58d3, 0x1, 0x0);
        gbc.writeMem(0x296, { 0x21, 0x57, 0x44 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd56, gbc.sp());
        EXPECT(0x299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 020A
        gbc.setState(0x4871, 0x8a2f, 0x8d40, 0xdfd0, 0xcb97, 0x171f, 0x1, 0x0);
        gbc.writeMem(0x4871, { 0x21, 0xb0, 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8a2f, gbc.sp());
        EXPECT(0x4874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 020B
        gbc.setState(0x72fd, 0xb8e8, 0x9690, 0xf0f, 0xbbbf, 0x7905, 0x0, 0x1);
        gbc.writeMem(0x72fd, { 0x21, 0x9d, 0xb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb8e8, gbc.sp());
        EXPECT(0x7300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 020C
        gbc.setState(0x2b65, 0x8486, 0x1630, 0xe5eb, 0x5358, 0x7f7c, 0x1, 0x1);
        gbc.writeMem(0x2b65, { 0x21, 0x1b, 0x72 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8486, gbc.sp());
        EXPECT(0x2b68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 020D
        gbc.setState(0x4f1, 0xc38d, 0xf410, 0x77a2, 0x55ef, 0x1c6b, 0x1, 0x0);
        gbc.writeMem(0x4f1, { 0x21, 0x9e, 0x80 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc38d, gbc.sp());
        EXPECT(0x4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 020E
        gbc.setState(0x4a6, 0x231, 0xa7f0, 0x4b49, 0x6d5e, 0xf9dc, 0x0, 0x1);
        gbc.writeMem(0x4a6, { 0x21, 0x94, 0xd7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x231, gbc.sp());
        EXPECT(0x4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 020F
        gbc.setState(0xa761, 0xea9, 0x7ba0, 0x10a3, 0xcd87, 0x8ecc, 0x1, 0x1);
        gbc.writeMem(0xa761, { 0x21, 0xaf, 0x1d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xea9, gbc.sp());
        EXPECT(0xa764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa761));
        EXPECT(0xaf, gbc.readMem(0xa762));
        EXPECT(0x1d, gbc.readMem(0xa763));
        // 21 0210
        gbc.setState(0x3142, 0x65f3, 0x8dd0, 0x2a76, 0x164a, 0x594b, 0x0, 0x0);
        gbc.writeMem(0x3142, { 0x21, 0xaa, 0x32 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x65f3, gbc.sp());
        EXPECT(0x3145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0211
        gbc.setState(0x860b, 0xbabd, 0xaaf0, 0xc2c, 0x9aed, 0xb4c2, 0x1, 0x1);
        gbc.writeMem(0x860b, { 0x21, 0xf2, 0x4e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbabd, gbc.sp());
        EXPECT(0x860e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x860b));
        EXPECT(0xf2, gbc.readMem(0x860c));
        EXPECT(0x4e, gbc.readMem(0x860d));
        // 21 0212
        gbc.setState(0x85cb, 0x88f, 0xef70, 0xe5d2, 0x14ee, 0xf34, 0x0, 0x1);
        gbc.writeMem(0x85cb, { 0x21, 0x27, 0x1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x88f, gbc.sp());
        EXPECT(0x85ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x85cb));
        EXPECT(0x27, gbc.readMem(0x85cc));
        EXPECT(0x1, gbc.readMem(0x85cd));
        // 21 0213
        gbc.setState(0x78e, 0xf840, 0x55a0, 0x3583, 0xc3d3, 0x483e, 0x0, 0x0);
        gbc.writeMem(0x78e, { 0x21, 0x2e, 0x5c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf840, gbc.sp());
        EXPECT(0x791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0214
        gbc.setState(0x5e69, 0x32d4, 0xce80, 0xd03f, 0x4e5e, 0xc90e, 0x1, 0x1);
        gbc.writeMem(0x5e69, { 0x21, 0xaf, 0xdd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x32d4, gbc.sp());
        EXPECT(0x5e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0215
        gbc.setState(0x60b7, 0x9b0d, 0x8af0, 0xd455, 0x3a1f, 0xd1f2, 0x0, 0x1);
        gbc.writeMem(0x60b7, { 0x21, 0x41, 0x2f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9b0d, gbc.sp());
        EXPECT(0x60ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0216
        gbc.setState(0x6e9f, 0x3f27, 0xe0b0, 0x917f, 0x80ca, 0xf997, 0x0, 0x1);
        gbc.writeMem(0x6e9f, { 0x21, 0x47, 0xeb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3f27, gbc.sp());
        EXPECT(0x6ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0217
        gbc.setState(0xa599, 0xad15, 0xbb10, 0x471a, 0xf196, 0xe5d9, 0x1, 0x1);
        gbc.writeMem(0xa599, { 0x21, 0x4b, 0xd6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xad15, gbc.sp());
        EXPECT(0xa59c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa599));
        EXPECT(0x4b, gbc.readMem(0xa59a));
        EXPECT(0xd6, gbc.readMem(0xa59b));
        // 21 0218
        gbc.setState(0x3179, 0xd238, 0x8c40, 0x4822, 0x1b64, 0xcb22, 0x1, 0x1);
        gbc.writeMem(0x3179, { 0x21, 0x11, 0x6d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd238, gbc.sp());
        EXPECT(0x317c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0219
        gbc.setState(0xdf49, 0x44c8, 0xfe70, 0x4a41, 0xa16a, 0x9166, 0x0, 0x1);
        gbc.writeMem(0xdf49, { 0x21, 0x64, 0x61 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x44c8, gbc.sp());
        EXPECT(0xdf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdf49));
        EXPECT(0x64, gbc.readMem(0xdf4a));
        EXPECT(0x61, gbc.readMem(0xdf4b));
        // 21 021B
        gbc.setState(0x1808, 0x6e9, 0xa60, 0xf229, 0x7871, 0xfde8, 0x0, 0x1);
        gbc.writeMem(0x1808, { 0x21, 0xf0, 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6e9, gbc.sp());
        EXPECT(0x180b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 021C
        gbc.setState(0x4daf, 0xfdfe, 0xb7e0, 0x16bc, 0x27e7, 0xb39d, 0x1, 0x1);
        gbc.writeMem(0x4daf, { 0x21, 0xcf, 0xa8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfdfe, gbc.sp());
        EXPECT(0x4db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 021D
        gbc.setState(0xb755, 0x636, 0x6fb0, 0xb4, 0x1f15, 0x1062, 0x0, 0x0);
        gbc.writeMem(0xb755, { 0x21, 0x9, 0xb4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x636, gbc.sp());
        EXPECT(0xb758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb755));
        EXPECT(0x9, gbc.readMem(0xb756));
        EXPECT(0xb4, gbc.readMem(0xb757));
        // 21 021E
        gbc.setState(0xb306, 0xe799, 0x4a70, 0x62cb, 0x4225, 0x9f02, 0x1, 0x1);
        gbc.writeMem(0xb306, { 0x21, 0xe8, 0xaa });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe799, gbc.sp());
        EXPECT(0xb309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb306));
        EXPECT(0xe8, gbc.readMem(0xb307));
        EXPECT(0xaa, gbc.readMem(0xb308));
        // 21 021F
        gbc.setState(0xc91a, 0x2c83, 0xf0e0, 0x4f4c, 0x602f, 0x7d14, 0x1, 0x1);
        gbc.writeMem(0xc91a, { 0x21, 0x83, 0x40 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2c83, gbc.sp());
        EXPECT(0xc91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc91a));
        EXPECT(0x83, gbc.readMem(0xc91b));
        EXPECT(0x40, gbc.readMem(0xc91c));
        // 21 0220
        gbc.setState(0x8987, 0x7d74, 0x4c50, 0xb7fb, 0x75, 0x66f3, 0x1, 0x0);
        gbc.writeMem(0x8987, { 0x21, 0xf0, 0x14 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7d74, gbc.sp());
        EXPECT(0x898a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8987));
        EXPECT(0xf0, gbc.readMem(0x8988));
        EXPECT(0x14, gbc.readMem(0x8989));
        // 21 0221
        gbc.setState(0xe8a3, 0xa6f5, 0xd490, 0xcda7, 0xe3c9, 0x827a, 0x1, 0x1);
        gbc.writeMem(0xe8a3, { 0x21, 0x8c, 0x1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa6f5, gbc.sp());
        EXPECT(0xe8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe8a3));
        EXPECT(0x8c, gbc.readMem(0xe8a4));
        EXPECT(0x1, gbc.readMem(0xe8a5));
        // 21 0222
        gbc.setState(0x8248, 0x9826, 0x1e90, 0xd938, 0x4a54, 0x4478, 0x0, 0x1);
        gbc.writeMem(0x8248, { 0x21, 0x9b, 0x7b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9826, gbc.sp());
        EXPECT(0x824b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8248));
        EXPECT(0x9b, gbc.readMem(0x8249));
        EXPECT(0x7b, gbc.readMem(0x824a));
        // 21 0223
        gbc.setState(0x7c93, 0xdd55, 0xcb60, 0x948d, 0x2110, 0x166d, 0x1, 0x1);
        gbc.writeMem(0x7c93, { 0x21, 0xff, 0xeb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdd55, gbc.sp());
        EXPECT(0x7c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0224
        gbc.setState(0xd619, 0x2a4b, 0x7a00, 0x5e17, 0x1143, 0xae2c, 0x1, 0x1);
        gbc.writeMem(0xd619, { 0x21, 0x7a, 0x2a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2a4b, gbc.sp());
        EXPECT(0xd61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd619));
        EXPECT(0x7a, gbc.readMem(0xd61a));
        EXPECT(0x2a, gbc.readMem(0xd61b));
        // 21 0225
        gbc.setState(0x3c94, 0x29b3, 0xd710, 0xc35f, 0x6511, 0x152b, 0x0, 0x0);
        gbc.writeMem(0x3c94, { 0x21, 0x15, 0xc3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x29b3, gbc.sp());
        EXPECT(0x3c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0226
        gbc.setState(0x8682, 0xb115, 0x5f20, 0x8bb6, 0xa325, 0xc397, 0x0, 0x0);
        gbc.writeMem(0x8682, { 0x21, 0x81, 0xe5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb115, gbc.sp());
        EXPECT(0x8685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8682));
        EXPECT(0x81, gbc.readMem(0x8683));
        EXPECT(0xe5, gbc.readMem(0x8684));
        // 21 0227
        gbc.setState(0xa7d7, 0x6796, 0x900, 0xb105, 0xbc78, 0xb06, 0x1, 0x0);
        gbc.writeMem(0xa7d7, { 0x21, 0xb5, 0xf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6796, gbc.sp());
        EXPECT(0xa7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa7d7));
        EXPECT(0xb5, gbc.readMem(0xa7d8));
        EXPECT(0xf, gbc.readMem(0xa7d9));
        // 21 0228
        gbc.setState(0xcce6, 0xb6fc, 0xe260, 0x55bf, 0x8297, 0x78f2, 0x0, 0x0);
        gbc.writeMem(0xcce6, { 0x21, 0x6c, 0x74 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb6fc, gbc.sp());
        EXPECT(0xcce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcce6));
        EXPECT(0x6c, gbc.readMem(0xcce7));
        EXPECT(0x74, gbc.readMem(0xcce8));
        // 21 0229
        gbc.setState(0x5bb5, 0x5e48, 0x4020, 0xde87, 0x54a1, 0x5012, 0x0, 0x0);
        gbc.writeMem(0x5bb5, { 0x21, 0xaf, 0x20 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5e48, gbc.sp());
        EXPECT(0x5bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 022A
        gbc.setState(0xe649, 0xc4ef, 0x1b70, 0xa696, 0xa8ea, 0xac8d, 0x0, 0x0);
        gbc.writeMem(0xe649, { 0x21, 0xa4, 0x6d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc4ef, gbc.sp());
        EXPECT(0xe64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe649));
        EXPECT(0xa4, gbc.readMem(0xe64a));
        EXPECT(0x6d, gbc.readMem(0xe64b));
        // 21 022B
        gbc.setState(0x1eb1, 0xd794, 0x4f90, 0xbd02, 0x5d3e, 0xa854, 0x1, 0x0);
        gbc.writeMem(0x1eb1, { 0x21, 0xa0, 0x99 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd794, gbc.sp());
        EXPECT(0x1eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 022C
        gbc.setState(0x88ce, 0x1b53, 0x3e60, 0x96c6, 0xa7fc, 0x8997, 0x1, 0x1);
        gbc.writeMem(0x88ce, { 0x21, 0xf1, 0x94 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1b53, gbc.sp());
        EXPECT(0x88d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x88ce));
        EXPECT(0xf1, gbc.readMem(0x88cf));
        EXPECT(0x94, gbc.readMem(0x88d0));
        // 21 022D
        gbc.setState(0x2c7, 0xe273, 0x9690, 0x2127, 0x995d, 0xfeb3, 0x0, 0x1);
        gbc.writeMem(0x2c7, { 0x21, 0xcd, 0xe3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe273, gbc.sp());
        EXPECT(0x2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 022F
        gbc.setState(0x175d, 0xad19, 0x8a90, 0xe35a, 0xf3f1, 0x375e, 0x0, 0x1);
        gbc.writeMem(0x175d, { 0x21, 0x5e, 0x14 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xad19, gbc.sp());
        EXPECT(0x1760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0230
        gbc.setState(0xceb3, 0x55f9, 0xf1c0, 0xd789, 0x5d7e, 0xf1be, 0x1, 0x0);
        gbc.writeMem(0xceb3, { 0x21, 0x72, 0x59 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x55f9, gbc.sp());
        EXPECT(0xceb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xceb3));
        EXPECT(0x72, gbc.readMem(0xceb4));
        EXPECT(0x59, gbc.readMem(0xceb5));
        // 21 0231
        gbc.setState(0x2a0f, 0x34fb, 0x64e0, 0xf9dd, 0x3742, 0x3710, 0x0, 0x0);
        gbc.writeMem(0x2a0f, { 0x21, 0x56, 0xff });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x34fb, gbc.sp());
        EXPECT(0x2a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0232
        gbc.setState(0x9cb7, 0xc6d9, 0xdc50, 0x79e8, 0x1584, 0xca3d, 0x0, 0x1);
        gbc.writeMem(0x9cb7, { 0x21, 0xd4, 0x18 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc6d9, gbc.sp());
        EXPECT(0x9cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9cb7));
        EXPECT(0xd4, gbc.readMem(0x9cb8));
        EXPECT(0x18, gbc.readMem(0x9cb9));
        // 21 0233
        gbc.setState(0x6ad8, 0x6708, 0x82b0, 0x9219, 0x949f, 0x7475, 0x0, 0x1);
        gbc.writeMem(0x6ad8, { 0x21, 0xf8, 0xec });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6708, gbc.sp());
        EXPECT(0x6adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0234
        gbc.setState(0x79dd, 0x1828, 0x7480, 0x7fd9, 0x1c3a, 0xd5d9, 0x1, 0x0);
        gbc.writeMem(0x79dd, { 0x21, 0xac, 0xd5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1828, gbc.sp());
        EXPECT(0x79e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0235
        gbc.setState(0xd340, 0x6703, 0x1e50, 0x1a49, 0x6c81, 0xc781, 0x0, 0x0);
        gbc.writeMem(0xd340, { 0x21, 0x14, 0xf2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6703, gbc.sp());
        EXPECT(0xd343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd340));
        EXPECT(0x14, gbc.readMem(0xd341));
        EXPECT(0xf2, gbc.readMem(0xd342));
        // 21 0236
        gbc.setState(0x4384, 0x37b6, 0x310, 0xb8bc, 0x5833, 0x7a03, 0x0, 0x0);
        gbc.writeMem(0x4384, { 0x21, 0x30, 0x28 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x37b6, gbc.sp());
        EXPECT(0x4387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0237
        gbc.setState(0x2c4d, 0x5e0d, 0x1f60, 0x851e, 0x448f, 0x5eef, 0x1, 0x1);
        gbc.writeMem(0x2c4d, { 0x21, 0x2a, 0xc9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5e0d, gbc.sp());
        EXPECT(0x2c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0238
        gbc.setState(0x1559, 0x9c5c, 0x1fb0, 0x1d2, 0x1384, 0x2709, 0x0, 0x0);
        gbc.writeMem(0x1559, { 0x21, 0x41, 0x43 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9c5c, gbc.sp());
        EXPECT(0x155c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 023A
        gbc.setState(0x895d, 0x5ca4, 0xa650, 0xda0f, 0x9e25, 0x4377, 0x1, 0x1);
        gbc.writeMem(0x895d, { 0x21, 0xd2, 0x78 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5ca4, gbc.sp());
        EXPECT(0x8960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x895d));
        EXPECT(0xd2, gbc.readMem(0x895e));
        EXPECT(0x78, gbc.readMem(0x895f));
        // 21 023B
        gbc.setState(0x2851, 0x8cc1, 0xacb0, 0x69ec, 0x6c7f, 0x7026, 0x0, 0x1);
        gbc.writeMem(0x2851, { 0x21, 0x58, 0xb2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8cc1, gbc.sp());
        EXPECT(0x2854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 023C
        gbc.setState(0xc1c2, 0xeba4, 0xb9e0, 0xeed0, 0xf47a, 0x319d, 0x0, 0x1);
        gbc.writeMem(0xc1c2, { 0x21, 0xd1, 0x2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xeba4, gbc.sp());
        EXPECT(0xc1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc1c2));
        EXPECT(0xd1, gbc.readMem(0xc1c3));
        EXPECT(0x2, gbc.readMem(0xc1c4));
        // 21 023D
        gbc.setState(0x6710, 0x5ee8, 0x760, 0x4bef, 0x4191, 0xa8, 0x0, 0x0);
        gbc.writeMem(0x6710, { 0x21, 0xa5, 0x88 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5ee8, gbc.sp());
        EXPECT(0x6713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 023E
        gbc.setState(0x119a, 0xe67b, 0x34c0, 0x51ba, 0x744f, 0x147b, 0x1, 0x0);
        gbc.writeMem(0x119a, { 0x21, 0x3d, 0xd8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe67b, gbc.sp());
        EXPECT(0x119d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 023F
        gbc.setState(0xda55, 0x2a0b, 0x6f80, 0x7b56, 0x7064, 0xdaf6, 0x0, 0x0);
        gbc.writeMem(0xda55, { 0x21, 0xaa, 0xc2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2a0b, gbc.sp());
        EXPECT(0xda58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xda55));
        EXPECT(0xaa, gbc.readMem(0xda56));
        EXPECT(0xc2, gbc.readMem(0xda57));
        // 21 0240
        gbc.setState(0xa287, 0x3c16, 0x8940, 0xdccc, 0x4ff9, 0x5b31, 0x0, 0x0);
        gbc.writeMem(0xa287, { 0x21, 0x25, 0xf5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3c16, gbc.sp());
        EXPECT(0xa28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa287));
        EXPECT(0x25, gbc.readMem(0xa288));
        EXPECT(0xf5, gbc.readMem(0xa289));
        // 21 0241
        gbc.setState(0x1d3d, 0x33d7, 0xd580, 0xd051, 0x28c1, 0x8a2b, 0x1, 0x1);
        gbc.writeMem(0x1d3d, { 0x21, 0x85, 0xb3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x33d7, gbc.sp());
        EXPECT(0x1d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0242
        gbc.setState(0x9134, 0x8c2e, 0x1680, 0xb210, 0xff03, 0x398b, 0x0, 0x1);
        gbc.writeMem(0x9134, { 0x21, 0x35, 0x78 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8c2e, gbc.sp());
        EXPECT(0x9137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9134));
        EXPECT(0x35, gbc.readMem(0x9135));
        EXPECT(0x78, gbc.readMem(0x9136));
        // 21 0243
        gbc.setState(0xd3fc, 0xc409, 0xe3c0, 0xd750, 0xc056, 0xe6c9, 0x0, 0x1);
        gbc.writeMem(0xd3fc, { 0x21, 0x50, 0xd3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc409, gbc.sp());
        EXPECT(0xd3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd3fc));
        EXPECT(0x50, gbc.readMem(0xd3fd));
        EXPECT(0xd3, gbc.readMem(0xd3fe));
        // 21 0244
        gbc.setState(0x441a, 0x1bd1, 0x66f0, 0xfe38, 0xac3c, 0x1500, 0x0, 0x0);
        gbc.writeMem(0x441a, { 0x21, 0xad, 0xe5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1bd1, gbc.sp());
        EXPECT(0x441d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0245
        gbc.setState(0x2a9c, 0x945b, 0x6450, 0x7c96, 0xbfd8, 0x40d5, 0x1, 0x0);
        gbc.writeMem(0x2a9c, { 0x21, 0xdc, 0x6b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x945b, gbc.sp());
        EXPECT(0x2a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0246
        gbc.setState(0xab0b, 0x26a8, 0x9de0, 0xd8, 0x2c40, 0xd8c4, 0x1, 0x0);
        gbc.writeMem(0xab0b, { 0x21, 0xf8, 0x99 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x26a8, gbc.sp());
        EXPECT(0xab0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xab0b));
        EXPECT(0xf8, gbc.readMem(0xab0c));
        EXPECT(0x99, gbc.readMem(0xab0d));
        // 21 0247
        gbc.setState(0x5603, 0x32de, 0x5720, 0xd0c5, 0xaf03, 0x381, 0x1, 0x1);
        gbc.writeMem(0x5603, { 0x21, 0x2a, 0xb8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x32de, gbc.sp());
        EXPECT(0x5606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0248
        gbc.setState(0xed63, 0xa421, 0xe4c0, 0xf2d3, 0xe271, 0xc4cf, 0x1, 0x0);
        gbc.writeMem(0xed63, { 0x21, 0xbb, 0xe1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa421, gbc.sp());
        EXPECT(0xed66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xed63));
        EXPECT(0xbb, gbc.readMem(0xed64));
        EXPECT(0xe1, gbc.readMem(0xed65));
        // 21 024A
        gbc.setState(0xbcdb, 0x6d67, 0x18b0, 0x38e0, 0x9a18, 0x7734, 0x1, 0x1);
        gbc.writeMem(0xbcdb, { 0x21, 0x63, 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6d67, gbc.sp());
        EXPECT(0xbcde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbcdb));
        EXPECT(0x63, gbc.readMem(0xbcdc));
        EXPECT(0xa4, gbc.readMem(0xbcdd));
        // 21 024B
        gbc.setState(0x634f, 0x3209, 0xe0b0, 0x397c, 0x7647, 0x3809, 0x1, 0x0);
        gbc.writeMem(0x634f, { 0x21, 0x2c, 0x57 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3209, gbc.sp());
        EXPECT(0x6352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 024C
        gbc.setState(0x3756, 0xce40, 0xab20, 0x8996, 0x7f7d, 0x3d29, 0x0, 0x0);
        gbc.writeMem(0x3756, { 0x21, 0xfb, 0x53 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xce40, gbc.sp());
        EXPECT(0x3759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 024D
        gbc.setState(0x8525, 0x4cd7, 0x2f40, 0x8af5, 0x1f59, 0xb601, 0x1, 0x1);
        gbc.writeMem(0x8525, { 0x21, 0x44, 0xdf });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4cd7, gbc.sp());
        EXPECT(0x8528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8525));
        EXPECT(0x44, gbc.readMem(0x8526));
        EXPECT(0xdf, gbc.readMem(0x8527));
        // 21 024E
        gbc.setState(0x8280, 0xc69d, 0xebb0, 0xa4b9, 0x6ec7, 0xee29, 0x1, 0x1);
        gbc.writeMem(0x8280, { 0x21, 0xb8, 0xa2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc69d, gbc.sp());
        EXPECT(0x8283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8280));
        EXPECT(0xb8, gbc.readMem(0x8281));
        EXPECT(0xa2, gbc.readMem(0x8282));
        // 21 024F
        gbc.setState(0xed98, 0x3d05, 0x6610, 0xd28d, 0xba83, 0x1526, 0x1, 0x0);
        gbc.writeMem(0xed98, { 0x21, 0x83, 0x6c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3d05, gbc.sp());
        EXPECT(0xed9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xed98));
        EXPECT(0x83, gbc.readMem(0xed99));
        EXPECT(0x6c, gbc.readMem(0xed9a));
        // 21 0250
        gbc.setState(0x7bec, 0x3665, 0xd60, 0x2fe8, 0xad3a, 0xd872, 0x0, 0x0);
        gbc.writeMem(0x7bec, { 0x21, 0xc5, 0x70 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3665, gbc.sp());
        EXPECT(0x7bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0251
        gbc.setState(0x5e27, 0x3601, 0x8970, 0xaf6d, 0x922c, 0x1113, 0x1, 0x1);
        gbc.writeMem(0x5e27, { 0x21, 0xf0, 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3601, gbc.sp());
        EXPECT(0x5e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0252
        gbc.setState(0x3f73, 0xb361, 0x4550, 0xcf79, 0x20c5, 0x2495, 0x0, 0x1);
        gbc.writeMem(0x3f73, { 0x21, 0xbd, 0xe });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb361, gbc.sp());
        EXPECT(0x3f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0253
        gbc.setState(0x39b4, 0xf81, 0xb920, 0x48b0, 0x2e39, 0x3538, 0x0, 0x1);
        gbc.writeMem(0x39b4, { 0x21, 0x97, 0x8d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf81, gbc.sp());
        EXPECT(0x39b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0254
        gbc.setState(0x9ac0, 0x1eea, 0xeb0, 0x9767, 0x1ba, 0x85c8, 0x1, 0x1);
        gbc.writeMem(0x9ac0, { 0x21, 0x79, 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1eea, gbc.sp());
        EXPECT(0x9ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9ac0));
        EXPECT(0x79, gbc.readMem(0x9ac1));
        EXPECT(0x53, gbc.readMem(0x9ac2));
        // 21 0255
        gbc.setState(0x8833, 0x6122, 0xfdd0, 0x4ac5, 0xebbb, 0x8f81, 0x1, 0x1);
        gbc.writeMem(0x8833, { 0x21, 0x17, 0xc3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6122, gbc.sp());
        EXPECT(0x8836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8833));
        EXPECT(0x17, gbc.readMem(0x8834));
        EXPECT(0xc3, gbc.readMem(0x8835));
        // 21 0256
        gbc.setState(0x7f9c, 0x620b, 0x110, 0x2096, 0x91c4, 0xfa69, 0x1, 0x0);
        gbc.writeMem(0x7f9c, { 0x21, 0xf0, 0xc5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x620b, gbc.sp());
        EXPECT(0x7f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0257
        gbc.setState(0x7e, 0x9081, 0x6210, 0xb9cf, 0xe2bb, 0xc39f, 0x0, 0x0);
        gbc.writeMem(0x7e, { 0x21, 0x95, 0x27 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9081, gbc.sp());
        EXPECT(0x81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0258
        gbc.setState(0x39ea, 0x7bf, 0xd180, 0x3570, 0xb215, 0x6137, 0x1, 0x0);
        gbc.writeMem(0x39ea, { 0x21, 0xa2, 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7bf, gbc.sp());
        EXPECT(0x39ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0259
        gbc.setState(0x5250, 0x18e7, 0x4bc0, 0x614f, 0xc87e, 0xcc38, 0x1, 0x0);
        gbc.writeMem(0x5250, { 0x21, 0xbc, 0x92 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x18e7, gbc.sp());
        EXPECT(0x5253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 025A
        gbc.setState(0x7338, 0xc523, 0x1730, 0x9323, 0xc53e, 0xe968, 0x1, 0x1);
        gbc.writeMem(0x7338, { 0x21, 0xbc, 0x60 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc523, gbc.sp());
        EXPECT(0x733b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 025B
        gbc.setState(0x4f57, 0xc440, 0x8520, 0x2292, 0xb5c8, 0x78d9, 0x1, 0x1);
        gbc.writeMem(0x4f57, { 0x21, 0x1c, 0x39 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc440, gbc.sp());
        EXPECT(0x4f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 025C
        gbc.setState(0x61c0, 0xb178, 0xb260, 0x9f0e, 0xa28a, 0x89ac, 0x0, 0x1);
        gbc.writeMem(0x61c0, { 0x21, 0x3a, 0x32 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb178, gbc.sp());
        EXPECT(0x61c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 025D
        gbc.setState(0x2e8, 0x892e, 0x2c60, 0x211f, 0xe89b, 0x69f5, 0x1, 0x1);
        gbc.writeMem(0x2e8, { 0x21, 0xf0, 0xf5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x892e, gbc.sp());
        EXPECT(0x2eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 025E
        gbc.setState(0xe743, 0x7866, 0x9130, 0x4aea, 0x2f31, 0x5048, 0x0, 0x1);
        gbc.writeMem(0xe743, { 0x21, 0x3c, 0x77 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7866, gbc.sp());
        EXPECT(0xe746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe743));
        EXPECT(0x3c, gbc.readMem(0xe744));
        EXPECT(0x77, gbc.readMem(0xe745));
        // 21 025F
        gbc.setState(0x16d2, 0xf9b2, 0x5d0, 0xb46a, 0x56e4, 0x37e3, 0x1, 0x1);
        gbc.writeMem(0x16d2, { 0x21, 0xee, 0xf8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf9b2, gbc.sp());
        EXPECT(0x16d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0260
        gbc.setState(0x6d34, 0x606d, 0x3060, 0x42fc, 0x48c7, 0xc4f3, 0x1, 0x1);
        gbc.writeMem(0x6d34, { 0x21, 0xce, 0x4b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x606d, gbc.sp());
        EXPECT(0x6d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0261
        gbc.setState(0x2cc3, 0xdea2, 0xb5c0, 0xc18, 0x1641, 0x2696, 0x1, 0x0);
        gbc.writeMem(0x2cc3, { 0x21, 0x13, 0x35 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdea2, gbc.sp());
        EXPECT(0x2cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0262
        gbc.setState(0xfd2, 0x58e2, 0xebb0, 0x2136, 0xad0e, 0xf195, 0x1, 0x0);
        gbc.writeMem(0xfd2, { 0x21, 0xb1, 0x9a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x58e2, gbc.sp());
        EXPECT(0xfd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0263
        gbc.setState(0x80a3, 0xc648, 0x63c0, 0x6e17, 0xb84f, 0xb191, 0x0, 0x1);
        gbc.writeMem(0x80a3, { 0x21, 0xa8, 0x28 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc648, gbc.sp());
        EXPECT(0x80a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x80a3));
        EXPECT(0xa8, gbc.readMem(0x80a4));
        EXPECT(0x28, gbc.readMem(0x80a5));
        // 21 0265
        gbc.setState(0x12dd, 0xc950, 0x450, 0xcb7b, 0x264, 0x22fc, 0x0, 0x1);
        gbc.writeMem(0x12dd, { 0x21, 0xa8, 0xfe });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc950, gbc.sp());
        EXPECT(0x12e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0266
        gbc.setState(0x939c, 0x965b, 0xa00, 0xae4b, 0x6b63, 0x8d94, 0x0, 0x0);
        gbc.writeMem(0x939c, { 0x21, 0xba, 0x92 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x965b, gbc.sp());
        EXPECT(0x939f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x939c));
        EXPECT(0xba, gbc.readMem(0x939d));
        EXPECT(0x92, gbc.readMem(0x939e));
        // 21 0267
        gbc.setState(0xef1c, 0xc95f, 0x990, 0x2098, 0x5523, 0x8ff0, 0x0, 0x0);
        gbc.writeMem(0xef1c, { 0x21, 0xc7, 0xc2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc95f, gbc.sp());
        EXPECT(0xef1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xef1c));
        EXPECT(0xc7, gbc.readMem(0xef1d));
        EXPECT(0xc2, gbc.readMem(0xef1e));
        // 21 0268
        gbc.setState(0xe5e0, 0xbd4f, 0xb8b0, 0xec9, 0x2334, 0x3fba, 0x0, 0x0);
        gbc.writeMem(0xe5e0, { 0x21, 0x29, 0xc9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbd4f, gbc.sp());
        EXPECT(0xe5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe5e0));
        EXPECT(0x29, gbc.readMem(0xe5e1));
        EXPECT(0xc9, gbc.readMem(0xe5e2));
        // 21 0269
        gbc.setState(0x9f3e, 0xf0f4, 0x7e40, 0x34d1, 0xe957, 0xaf0f, 0x0, 0x1);
        gbc.writeMem(0x9f3e, { 0x21, 0x2b, 0xab });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf0f4, gbc.sp());
        EXPECT(0x9f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9f3e));
        EXPECT(0x2b, gbc.readMem(0x9f3f));
        EXPECT(0xab, gbc.readMem(0x9f40));
        // 21 026A
        gbc.setState(0x5309, 0x8a0f, 0x5070, 0x222f, 0xd627, 0xcd39, 0x1, 0x1);
        gbc.writeMem(0x5309, { 0x21, 0x44, 0xef });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8a0f, gbc.sp());
        EXPECT(0x530c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 026B
        gbc.setState(0x4fc9, 0x5ac1, 0x2520, 0xcf8c, 0x79db, 0xd86e, 0x1, 0x1);
        gbc.writeMem(0x4fc9, { 0x21, 0x66, 0x33 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5ac1, gbc.sp());
        EXPECT(0x4fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 026C
        gbc.setState(0x6162, 0x43b4, 0x78c0, 0xa666, 0x505a, 0x25c8, 0x1, 0x1);
        gbc.writeMem(0x6162, { 0x21, 0x8e, 0x16 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x43b4, gbc.sp());
        EXPECT(0x6165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 026D
        gbc.setState(0x3063, 0xa2af, 0xa7e0, 0xefd, 0x7295, 0xb5ad, 0x0, 0x1);
        gbc.writeMem(0x3063, { 0x21, 0xac, 0x2f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa2af, gbc.sp());
        EXPECT(0x3066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 026E
        gbc.setState(0xd4d1, 0x427b, 0xf9c0, 0xb096, 0xec8b, 0xf322, 0x0, 0x1);
        gbc.writeMem(0xd4d1, { 0x21, 0xc1, 0xdb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x427b, gbc.sp());
        EXPECT(0xd4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd4d1));
        EXPECT(0xc1, gbc.readMem(0xd4d2));
        EXPECT(0xdb, gbc.readMem(0xd4d3));
        // 21 026F
        gbc.setState(0xe4f8, 0xe216, 0xbd20, 0xaeee, 0x117b, 0xf901, 0x1, 0x0);
        gbc.writeMem(0xe4f8, { 0x21, 0x2, 0xdc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe216, gbc.sp());
        EXPECT(0xe4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe4f8));
        EXPECT(0x2, gbc.readMem(0xe4f9));
        EXPECT(0xdc, gbc.readMem(0xe4fa));
        // 21 0270
        gbc.setState(0x1a19, 0xf3a5, 0xb6e0, 0xe4f8, 0xe39c, 0xa7ce, 0x0, 0x0);
        gbc.writeMem(0x1a19, { 0x21, 0x53, 0x7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf3a5, gbc.sp());
        EXPECT(0x1a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0271
        gbc.setState(0xe943, 0xbc4c, 0x1b80, 0xb357, 0x4ab8, 0x9249, 0x0, 0x0);
        gbc.writeMem(0xe943, { 0x21, 0x19, 0x5e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbc4c, gbc.sp());
        EXPECT(0xe946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe943));
        EXPECT(0x19, gbc.readMem(0xe944));
        EXPECT(0x5e, gbc.readMem(0xe945));
        // 21 0272
        gbc.setState(0xdcb5, 0x55d1, 0x5b20, 0xad6, 0xc5be, 0xf42e, 0x1, 0x0);
        gbc.writeMem(0xdcb5, { 0x21, 0xc5, 0x3d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x55d1, gbc.sp());
        EXPECT(0xdcb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdcb5));
        EXPECT(0xc5, gbc.readMem(0xdcb6));
        EXPECT(0x3d, gbc.readMem(0xdcb7));
        // 21 0273
        gbc.setState(0xd2fb, 0xa26c, 0xcc10, 0x8a65, 0x774f, 0xe618, 0x1, 0x0);
        gbc.writeMem(0xd2fb, { 0x21, 0xe8, 0x71 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa26c, gbc.sp());
        EXPECT(0xd2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd2fb));
        EXPECT(0xe8, gbc.readMem(0xd2fc));
        EXPECT(0x71, gbc.readMem(0xd2fd));
        // 21 0274
        gbc.setState(0x44ac, 0xb38, 0x19e0, 0x4dac, 0x3950, 0x29e0, 0x0, 0x0);
        gbc.writeMem(0x44ac, { 0x21, 0x6, 0xb0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb38, gbc.sp());
        EXPECT(0x44af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0275
        gbc.setState(0x3091, 0xa504, 0x6790, 0x38cc, 0x3947, 0x54c6, 0x1, 0x1);
        gbc.writeMem(0x3091, { 0x21, 0xec, 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa504, gbc.sp());
        EXPECT(0x3094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0276
        gbc.setState(0x7da0, 0xe3e1, 0x15a0, 0xb3d6, 0x34ba, 0x45ec, 0x0, 0x1);
        gbc.writeMem(0x7da0, { 0x21, 0x97, 0x2d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe3e1, gbc.sp());
        EXPECT(0x7da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0277
        gbc.setState(0x7e0e, 0x3944, 0x95f0, 0xe09f, 0xc291, 0x8e6, 0x0, 0x0);
        gbc.writeMem(0x7e0e, { 0x21, 0xc9, 0xe7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3944, gbc.sp());
        EXPECT(0x7e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0278
        gbc.setState(0x1038, 0x2729, 0xd380, 0xdf4f, 0xe402, 0x5f37, 0x1, 0x1);
        gbc.writeMem(0x1038, { 0x21, 0x1e, 0xb2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2729, gbc.sp());
        EXPECT(0x103b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0279
        gbc.setState(0xd4e1, 0xe542, 0x7fd0, 0x3c02, 0xaa38, 0x167a, 0x0, 0x1);
        gbc.writeMem(0xd4e1, { 0x21, 0xbe, 0x45 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe542, gbc.sp());
        EXPECT(0xd4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd4e1));
        EXPECT(0xbe, gbc.readMem(0xd4e2));
        EXPECT(0x45, gbc.readMem(0xd4e3));
        // 21 027A
        gbc.setState(0x99d1, 0xccfc, 0xd390, 0x5545, 0x1c05, 0xe17d, 0x0, 0x0);
        gbc.writeMem(0x99d1, { 0x21, 0x77, 0xb1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xccfc, gbc.sp());
        EXPECT(0x99d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x99d1));
        EXPECT(0x77, gbc.readMem(0x99d2));
        EXPECT(0xb1, gbc.readMem(0x99d3));
        // 21 027B
        gbc.setState(0x7433, 0xcaaf, 0x8800, 0x70b6, 0xffbe, 0x4edb, 0x0, 0x1);
        gbc.writeMem(0x7433, { 0x21, 0x8b, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcaaf, gbc.sp());
        EXPECT(0x7436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 027C
        gbc.setState(0x4ade, 0x3a4f, 0x37a0, 0xd8f3, 0xd8d, 0xcd10, 0x0, 0x1);
        gbc.writeMem(0x4ade, { 0x21, 0x5f, 0xfd });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3a4f, gbc.sp());
        EXPECT(0x4ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 027D
        gbc.setState(0x192e, 0xb52e, 0xe0e0, 0x17fe, 0x9d5d, 0xa4e2, 0x1, 0x0);
        gbc.writeMem(0x192e, { 0x21, 0xc6, 0x6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb52e, gbc.sp());
        EXPECT(0x1931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 027E
        gbc.setState(0xc863, 0xdf4e, 0x3270, 0x78d3, 0x31d2, 0x5c12, 0x1, 0x0);
        gbc.writeMem(0xc863, { 0x21, 0xbc, 0x82 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdf4e, gbc.sp());
        EXPECT(0xc866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc863));
        EXPECT(0xbc, gbc.readMem(0xc864));
        EXPECT(0x82, gbc.readMem(0xc865));
        // 21 027F
        gbc.setState(0xa44f, 0x8bd2, 0x5dd0, 0xb820, 0x8db3, 0x3d6c, 0x1, 0x0);
        gbc.writeMem(0xa44f, { 0x21, 0x67, 0x83 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8bd2, gbc.sp());
        EXPECT(0xa452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa44f));
        EXPECT(0x67, gbc.readMem(0xa450));
        EXPECT(0x83, gbc.readMem(0xa451));
        // 21 0280
        gbc.setState(0x5fb2, 0x659a, 0x9360, 0xe55a, 0x8d78, 0x6487, 0x0, 0x1);
        gbc.writeMem(0x5fb2, { 0x21, 0xfb, 0xf0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x659a, gbc.sp());
        EXPECT(0x5fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0281
        gbc.setState(0xa4f3, 0xf8, 0x35e0, 0x634e, 0xf937, 0x3550, 0x1, 0x1);
        gbc.writeMem(0xa4f3, { 0x21, 0xaf, 0x93 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf8, gbc.sp());
        EXPECT(0xa4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa4f3));
        EXPECT(0xaf, gbc.readMem(0xa4f4));
        EXPECT(0x93, gbc.readMem(0xa4f5));
        // 21 0282
        gbc.setState(0x1595, 0xaeff, 0x3920, 0x258b, 0xcb39, 0x3cb9, 0x1, 0x0);
        gbc.writeMem(0x1595, { 0x21, 0xdf, 0xf3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xaeff, gbc.sp());
        EXPECT(0x1598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0283
        gbc.setState(0xe4db, 0xfd3b, 0x7500, 0xa0bf, 0xbd56, 0x5389, 0x1, 0x0);
        gbc.writeMem(0xe4db, { 0x21, 0xe, 0xaf });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfd3b, gbc.sp());
        EXPECT(0xe4de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe4db));
        EXPECT(0xe, gbc.readMem(0xe4dc));
        EXPECT(0xaf, gbc.readMem(0xe4dd));
        // 21 0284
        gbc.setState(0xc348, 0xa55a, 0x7b60, 0x46c5, 0x9504, 0x88e1, 0x0, 0x0);
        gbc.writeMem(0xc348, { 0x21, 0xe6, 0xfe });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa55a, gbc.sp());
        EXPECT(0xc34b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc348));
        EXPECT(0xe6, gbc.readMem(0xc349));
        EXPECT(0xfe, gbc.readMem(0xc34a));
        // 21 0285
        gbc.setState(0x136a, 0xf32a, 0x8550, 0xb36, 0xb4e5, 0x13d6, 0x0, 0x0);
        gbc.writeMem(0x136a, { 0x21, 0x85, 0xce });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf32a, gbc.sp());
        EXPECT(0x136d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0286
        gbc.setState(0x7984, 0x6d7d, 0x8050, 0x42d, 0x1aba, 0xd061, 0x0, 0x1);
        gbc.writeMem(0x7984, { 0x21, 0xb9, 0xe8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6d7d, gbc.sp());
        EXPECT(0x7987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0287
        gbc.setState(0xab70, 0x6826, 0x3b70, 0x1f96, 0x1c3, 0x768d, 0x1, 0x1);
        gbc.writeMem(0xab70, { 0x21, 0xb2, 0x36 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6826, gbc.sp());
        EXPECT(0xab73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xab70));
        EXPECT(0xb2, gbc.readMem(0xab71));
        EXPECT(0x36, gbc.readMem(0xab72));
        // 21 0288
        gbc.setState(0x565d, 0xa6ec, 0x19f0, 0x9116, 0x9146, 0x1957, 0x1, 0x1);
        gbc.writeMem(0x565d, { 0x21, 0x12, 0xe2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa6ec, gbc.sp());
        EXPECT(0x5660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0289
        gbc.setState(0xdf8f, 0x38a7, 0x530, 0x29a5, 0x5ae7, 0xcc82, 0x1, 0x0);
        gbc.writeMem(0xdf8f, { 0x21, 0x55, 0xce });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x38a7, gbc.sp());
        EXPECT(0xdf92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdf8f));
        EXPECT(0x55, gbc.readMem(0xdf90));
        EXPECT(0xce, gbc.readMem(0xdf91));
        // 21 028A
        gbc.setState(0x2531, 0xfefe, 0xfd00, 0x2f19, 0xdc99, 0x6e25, 0x0, 0x1);
        gbc.writeMem(0x2531, { 0x21, 0x51, 0xaf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfefe, gbc.sp());
        EXPECT(0x2534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 028B
        gbc.setState(0x533, 0x6242, 0x4d0, 0xd307, 0x8b75, 0xe745, 0x0, 0x1);
        gbc.writeMem(0x533, { 0x21, 0x71, 0x72 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6242, gbc.sp());
        EXPECT(0x536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 028C
        gbc.setState(0x2673, 0x7f3c, 0x9110, 0x7b32, 0xc864, 0x50ea, 0x1, 0x0);
        gbc.writeMem(0x2673, { 0x21, 0x58, 0xfe });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7f3c, gbc.sp());
        EXPECT(0x2676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 028D
        gbc.setState(0xde7f, 0x2b85, 0x8dd0, 0x496b, 0x8111, 0x50cc, 0x0, 0x1);
        gbc.writeMem(0xde7f, { 0x21, 0xf3, 0x53 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2b85, gbc.sp());
        EXPECT(0xde82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xde7f));
        EXPECT(0xf3, gbc.readMem(0xde80));
        EXPECT(0x53, gbc.readMem(0xde81));
        // 21 028E
        gbc.setState(0x31fc, 0xa149, 0xe000, 0x46cb, 0xe90, 0xfeae, 0x1, 0x0);
        gbc.writeMem(0x31fc, { 0x21, 0x56, 0xf6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa149, gbc.sp());
        EXPECT(0x31ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0290
        gbc.setState(0x2885, 0xd88b, 0xf500, 0xd7ae, 0x81e1, 0x5aa, 0x1, 0x0);
        gbc.writeMem(0x2885, { 0x21, 0x4c, 0x92 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd88b, gbc.sp());
        EXPECT(0x2888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0291
        gbc.setState(0x5c1c, 0x6520, 0xec90, 0x3624, 0xb34f, 0x48c0, 0x0, 0x0);
        gbc.writeMem(0x5c1c, { 0x21, 0xd3, 0x99 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6520, gbc.sp());
        EXPECT(0x5c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0292
        gbc.setState(0x2c15, 0x5fc7, 0xb0c0, 0x59d2, 0x19c5, 0x673a, 0x0, 0x1);
        gbc.writeMem(0x2c15, { 0x21, 0xce, 0x53 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5fc7, gbc.sp());
        EXPECT(0x2c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0293
        gbc.setState(0x2dab, 0xdd87, 0x4340, 0xa0c8, 0xb9d4, 0x3e97, 0x1, 0x1);
        gbc.writeMem(0x2dab, { 0x21, 0xfd, 0xce });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdd87, gbc.sp());
        EXPECT(0x2dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0294
        gbc.setState(0x3de, 0xb0e7, 0xee90, 0x9702, 0x9a38, 0x9f96, 0x0, 0x0);
        gbc.writeMem(0x3de, { 0x21, 0x59, 0x2e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb0e7, gbc.sp());
        EXPECT(0x3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0295
        gbc.setState(0x2ef9, 0x2d14, 0x12c0, 0x8edd, 0x7ead, 0xea9e, 0x0, 0x0);
        gbc.writeMem(0x2ef9, { 0x21, 0x62, 0x96 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2d14, gbc.sp());
        EXPECT(0x2efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0297
        gbc.setState(0x10f5, 0x39df, 0xfb30, 0xf8ad, 0xe605, 0x2d55, 0x0, 0x1);
        gbc.writeMem(0x10f5, { 0x21, 0x6, 0x42 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x39df, gbc.sp());
        EXPECT(0x10f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0298
        gbc.setState(0xd2da, 0x8ae7, 0x8390, 0xc59d, 0x6d3b, 0x3764, 0x1, 0x0);
        gbc.writeMem(0xd2da, { 0x21, 0xfe, 0xbb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8ae7, gbc.sp());
        EXPECT(0xd2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd2da));
        EXPECT(0xfe, gbc.readMem(0xd2db));
        EXPECT(0xbb, gbc.readMem(0xd2dc));
        // 21 0299
        gbc.setState(0x53fb, 0x62b3, 0x3580, 0xa7a4, 0xd544, 0x8d0, 0x1, 0x0);
        gbc.writeMem(0x53fb, { 0x21, 0x2d, 0x23 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x62b3, gbc.sp());
        EXPECT(0x53fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 029A
        gbc.setState(0x1e37, 0xa8fe, 0x1e10, 0x78be, 0xd84c, 0x667a, 0x1, 0x0);
        gbc.writeMem(0x1e37, { 0x21, 0x88, 0xd4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa8fe, gbc.sp());
        EXPECT(0x1e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 029B
        gbc.setState(0xde02, 0xc4df, 0xb1b0, 0x7057, 0xe520, 0x45fb, 0x1, 0x1);
        gbc.writeMem(0xde02, { 0x21, 0xe5, 0x1a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc4df, gbc.sp());
        EXPECT(0xde05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xde02));
        EXPECT(0xe5, gbc.readMem(0xde03));
        EXPECT(0x1a, gbc.readMem(0xde04));
        // 21 029C
        gbc.setState(0xac66, 0xda25, 0x76e0, 0x567b, 0xa03d, 0xac59, 0x0, 0x1);
        gbc.writeMem(0xac66, { 0x21, 0x66, 0x63 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xda25, gbc.sp());
        EXPECT(0xac69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xac66));
        EXPECT(0x66, gbc.readMem(0xac67));
        EXPECT(0x63, gbc.readMem(0xac68));
        // 21 029E
        gbc.setState(0xe1a0, 0xc764, 0x3490, 0xa1e6, 0xb1e3, 0x1fd5, 0x0, 0x0);
        gbc.writeMem(0xe1a0, { 0x21, 0xa8, 0x5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc764, gbc.sp());
        EXPECT(0xe1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe1a0));
        EXPECT(0xa8, gbc.readMem(0xe1a1));
        EXPECT(0x5, gbc.readMem(0xe1a2));
        // 21 029F
        gbc.setState(0x6c69, 0xb94d, 0x6dd0, 0xc3c3, 0x3488, 0xb22c, 0x1, 0x1);
        gbc.writeMem(0x6c69, { 0x21, 0x2b, 0xca });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb94d, gbc.sp());
        EXPECT(0x6c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02A0
        gbc.setState(0x911c, 0xaaf5, 0x8fb0, 0x5887, 0xbd98, 0xedcb, 0x1, 0x0);
        gbc.writeMem(0x911c, { 0x21, 0xdd, 0xa3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xaaf5, gbc.sp());
        EXPECT(0x911f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x911c));
        EXPECT(0xdd, gbc.readMem(0x911d));
        EXPECT(0xa3, gbc.readMem(0x911e));
        // 21 02A1
        gbc.setState(0xaf47, 0x5706, 0xde90, 0xb237, 0xecec, 0x7d77, 0x1, 0x1);
        gbc.writeMem(0xaf47, { 0x21, 0xa9, 0x2d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5706, gbc.sp());
        EXPECT(0xaf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xaf47));
        EXPECT(0xa9, gbc.readMem(0xaf48));
        EXPECT(0x2d, gbc.readMem(0xaf49));
        // 21 02A2
        gbc.setState(0x2fa7, 0x1029, 0xab30, 0x1b7, 0x938f, 0x2e0, 0x0, 0x1);
        gbc.writeMem(0x2fa7, { 0x21, 0xa7, 0xaa });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1029, gbc.sp());
        EXPECT(0x2faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02A3
        gbc.setState(0xaaae, 0x917b, 0x16b0, 0x2a6d, 0x37b9, 0x1354, 0x0, 0x0);
        gbc.writeMem(0xaaae, { 0x21, 0x4b, 0x45 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x917b, gbc.sp());
        EXPECT(0xaab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xaaae));
        EXPECT(0x4b, gbc.readMem(0xaaaf));
        EXPECT(0x45, gbc.readMem(0xaab0));
        // 21 02A4
        gbc.setState(0x1a4e, 0xae54, 0x1c00, 0x9ebe, 0x8ae2, 0x4010, 0x1, 0x1);
        gbc.writeMem(0x1a4e, { 0x21, 0x12, 0x8d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xae54, gbc.sp());
        EXPECT(0x1a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02A5
        gbc.setState(0xbfa8, 0x7a01, 0x4660, 0x855a, 0xa2c0, 0x6f9b, 0x0, 0x0);
        gbc.writeMem(0xbfa8, { 0x21, 0x77, 0xa8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7a01, gbc.sp());
        EXPECT(0xbfab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbfa8));
        EXPECT(0x77, gbc.readMem(0xbfa9));
        EXPECT(0xa8, gbc.readMem(0xbfaa));
        // 21 02A6
        gbc.setState(0x4f60, 0xdb92, 0x5830, 0xa34c, 0x1206, 0xb3f6, 0x1, 0x0);
        gbc.writeMem(0x4f60, { 0x21, 0xef, 0x52 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdb92, gbc.sp());
        EXPECT(0x4f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02A8
        gbc.setState(0x9ed, 0x90e8, 0xa1c0, 0xe6d, 0xcd7e, 0xe179, 0x1, 0x1);
        gbc.writeMem(0x9ed, { 0x21, 0x0, 0x87 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x90e8, gbc.sp());
        EXPECT(0x9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02A9
        gbc.setState(0x794a, 0x3f55, 0xb9e0, 0x8076, 0x468c, 0x6b0c, 0x0, 0x1);
        gbc.writeMem(0x794a, { 0x21, 0x4c, 0xd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3f55, gbc.sp());
        EXPECT(0x794d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02AA
        gbc.setState(0xc1c, 0x44bf, 0x81e0, 0xd73e, 0x265b, 0xd47c, 0x0, 0x0);
        gbc.writeMem(0xc1c, { 0x21, 0x66, 0x55 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x44bf, gbc.sp());
        EXPECT(0xc1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02AB
        gbc.setState(0x2262, 0x57a4, 0xed40, 0x88b2, 0xffa7, 0xe211, 0x0, 0x0);
        gbc.writeMem(0x2262, { 0x21, 0xd7, 0xe7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x57a4, gbc.sp());
        EXPECT(0x2265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02AC
        gbc.setState(0x1fca, 0x7e19, 0xba50, 0x5819, 0x781c, 0x296c, 0x0, 0x0);
        gbc.writeMem(0x1fca, { 0x21, 0x92, 0x6e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7e19, gbc.sp());
        EXPECT(0x1fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02AD
        gbc.setState(0x53d, 0xaafe, 0x1db0, 0x7eb1, 0x40dd, 0xc903, 0x1, 0x0);
        gbc.writeMem(0x53d, { 0x21, 0x31, 0xb3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xaafe, gbc.sp());
        EXPECT(0x540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02AE
        gbc.setState(0x4e00, 0x63c5, 0x9c90, 0xcada, 0xafb6, 0x38e3, 0x0, 0x1);
        gbc.writeMem(0x4e00, { 0x21, 0x8f, 0x3a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x63c5, gbc.sp());
        EXPECT(0x4e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02AF
        gbc.setState(0xdb39, 0xdde5, 0xc0e0, 0x7ba7, 0x5452, 0x6286, 0x1, 0x0);
        gbc.writeMem(0xdb39, { 0x21, 0xa4, 0xb0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdde5, gbc.sp());
        EXPECT(0xdb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdb39));
        EXPECT(0xa4, gbc.readMem(0xdb3a));
        EXPECT(0xb0, gbc.readMem(0xdb3b));
        // 21 02B0
        gbc.setState(0x7b1c, 0x6c08, 0x24c0, 0x5c14, 0x84a4, 0xc0c8, 0x1, 0x1);
        gbc.writeMem(0x7b1c, { 0x21, 0xb0, 0x4d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6c08, gbc.sp());
        EXPECT(0x7b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02B1
        gbc.setState(0x629c, 0xa3ca, 0x5cb0, 0x545a, 0xc296, 0xf33d, 0x0, 0x1);
        gbc.writeMem(0x629c, { 0x21, 0xa3, 0x47 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa3ca, gbc.sp());
        EXPECT(0x629f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02B2
        gbc.setState(0x44e4, 0x2d82, 0xc8a0, 0xf2e0, 0xd9d9, 0xc8eb, 0x0, 0x1);
        gbc.writeMem(0x44e4, { 0x21, 0x35, 0xf4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2d82, gbc.sp());
        EXPECT(0x44e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02B3
        gbc.setState(0x344, 0xb0d3, 0x710, 0xc1ac, 0xaaea, 0x2d9d, 0x0, 0x1);
        gbc.writeMem(0x344, { 0x21, 0x71, 0x5c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb0d3, gbc.sp());
        EXPECT(0x347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02B4
        gbc.setState(0xa941, 0xe59f, 0x48e0, 0x8d15, 0x16fb, 0xa50a, 0x0, 0x0);
        gbc.writeMem(0xa941, { 0x21, 0xf4, 0x25 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe59f, gbc.sp());
        EXPECT(0xa944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa941));
        EXPECT(0xf4, gbc.readMem(0xa942));
        EXPECT(0x25, gbc.readMem(0xa943));
        // 21 02B5
        gbc.setState(0x555e, 0xc5e2, 0xa5e0, 0xd577, 0x6173, 0x1a36, 0x1, 0x1);
        gbc.writeMem(0x555e, { 0x21, 0xed, 0x5a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc5e2, gbc.sp());
        EXPECT(0x5561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02B6
        gbc.setState(0x7cf4, 0x9d87, 0xb780, 0xd30f, 0xbf7e, 0x32f5, 0x1, 0x1);
        gbc.writeMem(0x7cf4, { 0x21, 0xa3, 0xce });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9d87, gbc.sp());
        EXPECT(0x7cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02B7
        gbc.setState(0xcfb5, 0x7c4a, 0xd6f0, 0x8c3c, 0x2bbf, 0x7f05, 0x0, 0x1);
        gbc.writeMem(0xcfb5, { 0x21, 0x92, 0x4e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7c4a, gbc.sp());
        EXPECT(0xcfb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcfb5));
        EXPECT(0x92, gbc.readMem(0xcfb6));
        EXPECT(0x4e, gbc.readMem(0xcfb7));
        // 21 02B8
        gbc.setState(0xa10c, 0x5268, 0x51d0, 0x113e, 0x2051, 0xc62e, 0x0, 0x1);
        gbc.writeMem(0xa10c, { 0x21, 0x3, 0x59 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5268, gbc.sp());
        EXPECT(0xa10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa10c));
        EXPECT(0x3, gbc.readMem(0xa10d));
        EXPECT(0x59, gbc.readMem(0xa10e));
        // 21 02B9
        gbc.setState(0x81c6, 0xd338, 0x7850, 0x3cf0, 0x7107, 0xc1, 0x1, 0x1);
        gbc.writeMem(0x81c6, { 0x21, 0xf3, 0xb4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd338, gbc.sp());
        EXPECT(0x81c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x81c6));
        EXPECT(0xf3, gbc.readMem(0x81c7));
        EXPECT(0xb4, gbc.readMem(0x81c8));
        // 21 02BA
        gbc.setState(0x2248, 0x3f01, 0x2c90, 0x28d0, 0x32ca, 0xb3b1, 0x1, 0x1);
        gbc.writeMem(0x2248, { 0x21, 0x3a, 0x4d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3f01, gbc.sp());
        EXPECT(0x224b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02BB
        gbc.setState(0x6266, 0x39fd, 0xa3e0, 0x4aef, 0x9f2d, 0x9915, 0x1, 0x1);
        gbc.writeMem(0x6266, { 0x21, 0xd2, 0xda });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x39fd, gbc.sp());
        EXPECT(0x6269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02BC
        gbc.setState(0xebd, 0x9b1f, 0xf9f0, 0x62be, 0xe01a, 0xce8f, 0x0, 0x1);
        gbc.writeMem(0xebd, { 0x21, 0xdd, 0xcd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9b1f, gbc.sp());
        EXPECT(0xec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02BD
        gbc.setState(0x6185, 0x8e34, 0x2360, 0x4e7d, 0xf2fd, 0x6e3c, 0x1, 0x0);
        gbc.writeMem(0x6185, { 0x21, 0x6, 0x74 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8e34, gbc.sp());
        EXPECT(0x6188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02BE
        gbc.setState(0x39c6, 0xc5d3, 0xbf80, 0x56a7, 0x298, 0x982f, 0x0, 0x0);
        gbc.writeMem(0x39c6, { 0x21, 0xa8, 0xe2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc5d3, gbc.sp());
        EXPECT(0x39c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02BF
        gbc.setState(0x9da1, 0x214a, 0x4940, 0xc3fd, 0xb698, 0x832b, 0x0, 0x0);
        gbc.writeMem(0x9da1, { 0x21, 0x9, 0xd5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x214a, gbc.sp());
        EXPECT(0x9da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9da1));
        EXPECT(0x9, gbc.readMem(0x9da2));
        EXPECT(0xd5, gbc.readMem(0x9da3));
        // 21 02C1
        gbc.setState(0x724d, 0xd6d9, 0x95c0, 0xc8ef, 0x73d1, 0x88df, 0x0, 0x0);
        gbc.writeMem(0x724d, { 0x21, 0xb1, 0x68 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd6d9, gbc.sp());
        EXPECT(0x7250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02C2
        gbc.setState(0x7963, 0x8f04, 0xef60, 0xeef8, 0xf715, 0x504e, 0x0, 0x0);
        gbc.writeMem(0x7963, { 0x21, 0xec, 0x34 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8f04, gbc.sp());
        EXPECT(0x7966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02C3
        gbc.setState(0x576d, 0xc2a4, 0xd6c0, 0x2b8f, 0x4fce, 0xa79b, 0x1, 0x0);
        gbc.writeMem(0x576d, { 0x21, 0xd9, 0x75 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc2a4, gbc.sp());
        EXPECT(0x5770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02C5
        gbc.setState(0xd36d, 0x1c39, 0x1610, 0x81b8, 0x6801, 0x7946, 0x0, 0x1);
        gbc.writeMem(0xd36d, { 0x21, 0xd9, 0x6 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1c39, gbc.sp());
        EXPECT(0xd370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd36d));
        EXPECT(0xd9, gbc.readMem(0xd36e));
        EXPECT(0x6, gbc.readMem(0xd36f));
        // 21 02C6
        gbc.setState(0x205e, 0x4032, 0xbcf0, 0xa6f3, 0xa020, 0x78e7, 0x0, 0x1);
        gbc.writeMem(0x205e, { 0x21, 0xa7, 0x1f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4032, gbc.sp());
        EXPECT(0x2061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02C7
        gbc.setState(0x972b, 0xe718, 0x4c40, 0xb05a, 0xd8d, 0xa671, 0x1, 0x0);
        gbc.writeMem(0x972b, { 0x21, 0x50, 0xf3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe718, gbc.sp());
        EXPECT(0x972e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x972b));
        EXPECT(0x50, gbc.readMem(0x972c));
        EXPECT(0xf3, gbc.readMem(0x972d));
        // 21 02C8
        gbc.setState(0x1028, 0x1c3, 0x6b80, 0xd557, 0x9531, 0xdb9c, 0x1, 0x1);
        gbc.writeMem(0x1028, { 0x21, 0x74, 0x34 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1c3, gbc.sp());
        EXPECT(0x102b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02CA
        gbc.setState(0xe425, 0x78eb, 0x1700, 0xd076, 0x6baf, 0x15bf, 0x1, 0x0);
        gbc.writeMem(0xe425, { 0x21, 0xb9, 0xe4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x78eb, gbc.sp());
        EXPECT(0xe428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe425));
        EXPECT(0xb9, gbc.readMem(0xe426));
        EXPECT(0xe4, gbc.readMem(0xe427));
        // 21 02CB
        gbc.setState(0xb2b0, 0xe9ac, 0x7260, 0xa379, 0x3797, 0x5902, 0x1, 0x0);
        gbc.writeMem(0xb2b0, { 0x21, 0xc7, 0x43 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe9ac, gbc.sp());
        EXPECT(0xb2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb2b0));
        EXPECT(0xc7, gbc.readMem(0xb2b1));
        EXPECT(0x43, gbc.readMem(0xb2b2));
        // 21 02CC
        gbc.setState(0x65b6, 0xae72, 0x1810, 0x86f0, 0x85f9, 0xad8c, 0x1, 0x1);
        gbc.writeMem(0x65b6, { 0x21, 0xae, 0xfe });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xae72, gbc.sp());
        EXPECT(0x65b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02CD
        gbc.setState(0x804c, 0x65e7, 0xc6d0, 0x72bf, 0x4b81, 0x9294, 0x1, 0x1);
        gbc.writeMem(0x804c, { 0x21, 0x69, 0xc4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x65e7, gbc.sp());
        EXPECT(0x804f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x804c));
        EXPECT(0x69, gbc.readMem(0x804d));
        EXPECT(0xc4, gbc.readMem(0x804e));
        // 21 02CE
        gbc.setState(0x2ef5, 0x8db6, 0x6600, 0xa60, 0xb1f5, 0x4cdd, 0x0, 0x0);
        gbc.writeMem(0x2ef5, { 0x21, 0x54, 0x65 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8db6, gbc.sp());
        EXPECT(0x2ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02CF
        gbc.setState(0x393e, 0x1214, 0x1350, 0x1d00, 0xfdcc, 0x638f, 0x0, 0x0);
        gbc.writeMem(0x393e, { 0x21, 0x13, 0x59 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1214, gbc.sp());
        EXPECT(0x3941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02D0
        gbc.setState(0x6d05, 0xde3f, 0x22a0, 0xc1a9, 0x1e2e, 0xed36, 0x0, 0x1);
        gbc.writeMem(0x6d05, { 0x21, 0x15, 0xc1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xde3f, gbc.sp());
        EXPECT(0x6d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02D1
        gbc.setState(0x5533, 0x4db8, 0xbb90, 0x1a25, 0xab15, 0x65bf, 0x0, 0x1);
        gbc.writeMem(0x5533, { 0x21, 0x89, 0xef });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4db8, gbc.sp());
        EXPECT(0x5536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02D2
        gbc.setState(0x8b2, 0x29be, 0x380, 0x51a3, 0x60e1, 0xe606, 0x0, 0x1);
        gbc.writeMem(0x8b2, { 0x21, 0x66, 0xa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x29be, gbc.sp());
        EXPECT(0x8b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02D3
        gbc.setState(0x6ee5, 0x74a4, 0x50d0, 0x5d32, 0x5c70, 0x5821, 0x0, 0x0);
        gbc.writeMem(0x6ee5, { 0x21, 0x67, 0x1b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x74a4, gbc.sp());
        EXPECT(0x6ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02D4
        gbc.setState(0x9eee, 0x2ee5, 0xfcf0, 0xcc97, 0xfbb7, 0x4d32, 0x1, 0x0);
        gbc.writeMem(0x9eee, { 0x21, 0x4, 0xca });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2ee5, gbc.sp());
        EXPECT(0x9ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9eee));
        EXPECT(0x4, gbc.readMem(0x9eef));
        EXPECT(0xca, gbc.readMem(0x9ef0));
        // 21 02D5
        gbc.setState(0x2359, 0x2c94, 0xd5e0, 0x3a37, 0x6ab2, 0x4e05, 0x1, 0x1);
        gbc.writeMem(0x2359, { 0x21, 0x46, 0x81 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2c94, gbc.sp());
        EXPECT(0x235c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02D6
        gbc.setState(0xecec, 0xa6ef, 0x2b10, 0x2c68, 0x2bd3, 0xeeaa, 0x1, 0x0);
        gbc.writeMem(0xecec, { 0x21, 0xb, 0x4f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa6ef, gbc.sp());
        EXPECT(0xecef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xecec));
        EXPECT(0xb, gbc.readMem(0xeced));
        EXPECT(0x4f, gbc.readMem(0xecee));
        // 21 02D8
        gbc.setState(0x443f, 0x7d16, 0xbde0, 0xc49a, 0x951b, 0x111d, 0x1, 0x0);
        gbc.writeMem(0x443f, { 0x21, 0x50, 0x9d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7d16, gbc.sp());
        EXPECT(0x4442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02D9
        gbc.setState(0x3652, 0xc98d, 0xe810, 0x6307, 0xda34, 0x5f98, 0x0, 0x1);
        gbc.writeMem(0x3652, { 0x21, 0x88, 0xc6 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc98d, gbc.sp());
        EXPECT(0x3655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02DA
        gbc.setState(0x8740, 0xc69b, 0x1350, 0x7cd3, 0xba11, 0xee0d, 0x0, 0x1);
        gbc.writeMem(0x8740, { 0x21, 0xcb, 0xe4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc69b, gbc.sp());
        EXPECT(0x8743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8740));
        EXPECT(0xcb, gbc.readMem(0x8741));
        EXPECT(0xe4, gbc.readMem(0x8742));
        // 21 02DB
        gbc.setState(0x1015, 0xb20e, 0x2370, 0xdfef, 0xe292, 0x8449, 0x1, 0x0);
        gbc.writeMem(0x1015, { 0x21, 0x2d, 0x52 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb20e, gbc.sp());
        EXPECT(0x1018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02DC
        gbc.setState(0xc758, 0x6cc0, 0x430, 0x32d1, 0xd78f, 0xa2d5, 0x1, 0x0);
        gbc.writeMem(0xc758, { 0x21, 0xb5, 0xb5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6cc0, gbc.sp());
        EXPECT(0xc75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc758));
        EXPECT(0xb5, gbc.readMem(0xc759));
        EXPECT(0xb5, gbc.readMem(0xc75a));
        // 21 02DD
        gbc.setState(0x67cc, 0xde75, 0x6140, 0x5cc9, 0x5b7a, 0xf4f6, 0x0, 0x1);
        gbc.writeMem(0x67cc, { 0x21, 0x92, 0xd3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xde75, gbc.sp());
        EXPECT(0x67cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02DE
        gbc.setState(0xb38b, 0x2e22, 0x2f50, 0xe71b, 0x203f, 0x2966, 0x0, 0x1);
        gbc.writeMem(0xb38b, { 0x21, 0x97, 0xd2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2e22, gbc.sp());
        EXPECT(0xb38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb38b));
        EXPECT(0x97, gbc.readMem(0xb38c));
        EXPECT(0xd2, gbc.readMem(0xb38d));
        // 21 02DF
        gbc.setState(0x9fc7, 0x8941, 0xd0c0, 0xe8c5, 0x929b, 0xd352, 0x1, 0x0);
        gbc.writeMem(0x9fc7, { 0x21, 0xc1, 0x17 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8941, gbc.sp());
        EXPECT(0x9fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9fc7));
        EXPECT(0xc1, gbc.readMem(0x9fc8));
        EXPECT(0x17, gbc.readMem(0x9fc9));
        // 21 02E0
        gbc.setState(0xabc1, 0xfd64, 0x58a0, 0x7e22, 0x3765, 0x8827, 0x1, 0x0);
        gbc.writeMem(0xabc1, { 0x21, 0xf8, 0x6f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfd64, gbc.sp());
        EXPECT(0xabc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xabc1));
        EXPECT(0xf8, gbc.readMem(0xabc2));
        EXPECT(0x6f, gbc.readMem(0xabc3));
        // 21 02E1
        gbc.setState(0xa2f0, 0xb18, 0x2100, 0xc50c, 0x888c, 0xfc87, 0x0, 0x0);
        gbc.writeMem(0xa2f0, { 0x21, 0xd6, 0x42 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb18, gbc.sp());
        EXPECT(0xa2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa2f0));
        EXPECT(0xd6, gbc.readMem(0xa2f1));
        EXPECT(0x42, gbc.readMem(0xa2f2));
        // 21 02E2
        gbc.setState(0xada6, 0xb134, 0xdb40, 0xcc44, 0xfd7d, 0x8b6e, 0x0, 0x1);
        gbc.writeMem(0xada6, { 0x21, 0x72, 0xc7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb134, gbc.sp());
        EXPECT(0xada9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xada6));
        EXPECT(0x72, gbc.readMem(0xada7));
        EXPECT(0xc7, gbc.readMem(0xada8));
        // 21 02E3
        gbc.setState(0x749d, 0x6159, 0xba60, 0x76bf, 0xe4cd, 0x4154, 0x1, 0x0);
        gbc.writeMem(0x749d, { 0x21, 0xc7, 0x6f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6159, gbc.sp());
        EXPECT(0x74a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02E4
        gbc.setState(0x1116, 0xe448, 0x9900, 0x6279, 0x51f7, 0x4065, 0x1, 0x0);
        gbc.writeMem(0x1116, { 0x21, 0xea, 0x16 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe448, gbc.sp());
        EXPECT(0x1119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02E5
        gbc.setState(0xefd7, 0xc74c, 0xc9b0, 0x178d, 0xf1f3, 0x765b, 0x1, 0x0);
        gbc.writeMem(0xefd7, { 0x21, 0xb1, 0xc0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc74c, gbc.sp());
        EXPECT(0xefda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xefd7));
        EXPECT(0xb1, gbc.readMem(0xefd8));
        EXPECT(0xc0, gbc.readMem(0xefd9));
        // 21 02E7
        gbc.setState(0x3492, 0xae6d, 0x8ed0, 0x3917, 0xe720, 0xc784, 0x1, 0x0);
        gbc.writeMem(0x3492, { 0x21, 0xc0, 0x48 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xae6d, gbc.sp());
        EXPECT(0x3495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02E8
        gbc.setState(0xa07f, 0x1699, 0x8d70, 0xe010, 0x5ece, 0x9eb0, 0x0, 0x0);
        gbc.writeMem(0xa07f, { 0x21, 0x3d, 0xfa });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1699, gbc.sp());
        EXPECT(0xa082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa07f));
        EXPECT(0x3d, gbc.readMem(0xa080));
        EXPECT(0xfa, gbc.readMem(0xa081));
        // 21 02E9
        gbc.setState(0xebd, 0xa5c0, 0xb50, 0x35b9, 0xec00, 0xfb22, 0x1, 0x1);
        gbc.writeMem(0xebd, { 0x21, 0xdd, 0xcd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa5c0, gbc.sp());
        EXPECT(0xec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02EA
        gbc.setState(0x3aea, 0xcd12, 0xe100, 0xf4b6, 0x7162, 0xb4c2, 0x0, 0x1);
        gbc.writeMem(0x3aea, { 0x21, 0xde, 0x25 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcd12, gbc.sp());
        EXPECT(0x3aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02EB
        gbc.setState(0xc03d, 0xb101, 0x56f0, 0xe16, 0x3389, 0x8996, 0x1, 0x1);
        gbc.writeMem(0xc03d, { 0x21, 0x75, 0xbd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb101, gbc.sp());
        EXPECT(0xc040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc03d));
        EXPECT(0x75, gbc.readMem(0xc03e));
        EXPECT(0xbd, gbc.readMem(0xc03f));
        // 21 02EC
        gbc.setState(0xcf64, 0xd770, 0xf380, 0x67df, 0xf7cb, 0xa5ce, 0x1, 0x0);
        gbc.writeMem(0xcf64, { 0x21, 0xa6, 0xfe });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd770, gbc.sp());
        EXPECT(0xcf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcf64));
        EXPECT(0xa6, gbc.readMem(0xcf65));
        EXPECT(0xfe, gbc.readMem(0xcf66));
        // 21 02ED
        gbc.setState(0x6129, 0x568e, 0x9a0, 0x35a6, 0x43d8, 0x14a9, 0x1, 0x1);
        gbc.writeMem(0x6129, { 0x21, 0xc8, 0x1b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x568e, gbc.sp());
        EXPECT(0x612c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02EF
        gbc.setState(0x31d6, 0x76a, 0x3b70, 0x9e7c, 0x227d, 0x8390, 0x1, 0x0);
        gbc.writeMem(0x31d6, { 0x21, 0x34, 0xae });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x76a, gbc.sp());
        EXPECT(0x31d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02F0
        gbc.setState(0x568c, 0xf50e, 0x9310, 0x609a, 0x3e56, 0xbe5b, 0x1, 0x0);
        gbc.writeMem(0x568c, { 0x21, 0x5f, 0x91 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf50e, gbc.sp());
        EXPECT(0x568f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02F2
        gbc.setState(0x504a, 0x80a5, 0xb0b0, 0x5788, 0x9c17, 0xac60, 0x1, 0x0);
        gbc.writeMem(0x504a, { 0x21, 0xc4, 0xec });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x80a5, gbc.sp());
        EXPECT(0x504d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02F3
        gbc.setState(0x3828, 0xc5cf, 0xed10, 0xc33c, 0x48b3, 0x5502, 0x0, 0x1);
        gbc.writeMem(0x3828, { 0x21, 0xd9, 0x59 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc5cf, gbc.sp());
        EXPECT(0x382b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02F4
        gbc.setState(0x43f4, 0xac87, 0x51e0, 0xa655, 0x4541, 0x123a, 0x0, 0x1);
        gbc.writeMem(0x43f4, { 0x21, 0x8e, 0x76 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xac87, gbc.sp());
        EXPECT(0x43f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02F5
        gbc.setState(0x7a1d, 0xfd83, 0x1dd0, 0x6282, 0xdf85, 0x97ae, 0x1, 0x0);
        gbc.writeMem(0x7a1d, { 0x21, 0x25, 0x79 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfd83, gbc.sp());
        EXPECT(0x7a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02F6
        gbc.setState(0xbaa4, 0x2614, 0xe720, 0x235d, 0x950e, 0xb955, 0x0, 0x0);
        gbc.writeMem(0xbaa4, { 0x21, 0x7d, 0xb6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2614, gbc.sp());
        EXPECT(0xbaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbaa4));
        EXPECT(0x7d, gbc.readMem(0xbaa5));
        EXPECT(0xb6, gbc.readMem(0xbaa6));
        // 21 02F7
        gbc.setState(0xa0e, 0xe2d8, 0xa8d0, 0xe828, 0xe2a, 0xf736, 0x1, 0x0);
        gbc.writeMem(0xa0e, { 0x21, 0x4a, 0x62 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe2d8, gbc.sp());
        EXPECT(0xa11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02F8
        gbc.setState(0x6592, 0xe120, 0x6400, 0xde49, 0x64ed, 0xea5f, 0x0, 0x0);
        gbc.writeMem(0x6592, { 0x21, 0x96, 0xac });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe120, gbc.sp());
        EXPECT(0x6595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02F9
        gbc.setState(0x664a, 0x51f6, 0xa9d0, 0xe786, 0xf5bb, 0x2d24, 0x1, 0x1);
        gbc.writeMem(0x664a, { 0x21, 0xc9, 0x8c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x51f6, gbc.sp());
        EXPECT(0x664d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02FA
        gbc.setState(0x6fb1, 0x4f12, 0x4380, 0x7043, 0x5bb5, 0x79f, 0x0, 0x1);
        gbc.writeMem(0x6fb1, { 0x21, 0x50, 0xf0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4f12, gbc.sp());
        EXPECT(0x6fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 02FB
        gbc.setState(0x3375, 0x3f5, 0xeb50, 0xdeb4, 0x3eb7, 0x392a, 0x0, 0x1);
        gbc.writeMem(0x3375, { 0x21, 0xd, 0x72 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3f5, gbc.sp());
        EXPECT(0x3378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02FC
        gbc.setState(0xd738, 0xc426, 0xbdf0, 0x8cf0, 0xdd9a, 0x9cc6, 0x0, 0x0);
        gbc.writeMem(0xd738, { 0x21, 0xd7, 0x5a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc426, gbc.sp());
        EXPECT(0xd73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd738));
        EXPECT(0xd7, gbc.readMem(0xd739));
        EXPECT(0x5a, gbc.readMem(0xd73a));
        // 21 02FD
        gbc.setState(0xa466, 0x2577, 0xbac0, 0x1255, 0xe8bd, 0xd30c, 0x0, 0x0);
        gbc.writeMem(0xa466, { 0x21, 0xef, 0xf9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2577, gbc.sp());
        EXPECT(0xa469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa466));
        EXPECT(0xef, gbc.readMem(0xa467));
        EXPECT(0xf9, gbc.readMem(0xa468));
        // 21 02FE
        gbc.setState(0x5a2c, 0xf61b, 0xe3d0, 0xc982, 0xd3af, 0x5266, 0x0, 0x1);
        gbc.writeMem(0x5a2c, { 0x21, 0x68, 0xe5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf61b, gbc.sp());
        EXPECT(0x5a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 02FF
        gbc.setState(0xac1, 0xe645, 0x2e90, 0x8d63, 0xde7, 0x585b, 0x1, 0x1);
        gbc.writeMem(0xac1, { 0x21, 0xf1, 0xa2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe645, gbc.sp());
        EXPECT(0xac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0300
        gbc.setState(0xcc73, 0x856d, 0xae40, 0x6312, 0xd92b, 0x8909, 0x0, 0x0);
        gbc.writeMem(0xcc73, { 0x21, 0x28, 0x41 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0xcc76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcc73));
        EXPECT(0x28, gbc.readMem(0xcc74));
        EXPECT(0x41, gbc.readMem(0xcc75));
        // 21 0301
        gbc.setState(0x9e13, 0x3cb8, 0x57e0, 0xf1f9, 0x253b, 0x797c, 0x1, 0x0);
        gbc.writeMem(0x9e13, { 0x21, 0xac, 0x60 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3cb8, gbc.sp());
        EXPECT(0x9e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9e13));
        EXPECT(0xac, gbc.readMem(0x9e14));
        EXPECT(0x60, gbc.readMem(0x9e15));
        // 21 0302
        gbc.setState(0x7454, 0xaad3, 0x8510, 0x66a0, 0x8f3f, 0x4952, 0x1, 0x0);
        gbc.writeMem(0x7454, { 0x21, 0x19, 0x15 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xaad3, gbc.sp());
        EXPECT(0x7457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0304
        gbc.setState(0x2d22, 0x6e8b, 0x6d70, 0x99f5, 0x95a0, 0xa506, 0x1, 0x1);
        gbc.writeMem(0x2d22, { 0x21, 0xfb, 0x82 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6e8b, gbc.sp());
        EXPECT(0x2d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0305
        gbc.setState(0x2846, 0xbe3b, 0x9b90, 0x9d50, 0x7488, 0x7b43, 0x0, 0x1);
        gbc.writeMem(0x2846, { 0x21, 0xe0, 0x98 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbe3b, gbc.sp());
        EXPECT(0x2849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0306
        gbc.setState(0x7f63, 0x188d, 0x1d90, 0x5dbe, 0x7a79, 0xe830, 0x1, 0x0);
        gbc.writeMem(0x7f63, { 0x21, 0xd4, 0xb8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x188d, gbc.sp());
        EXPECT(0x7f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0307
        gbc.setState(0x5b24, 0xcf35, 0x8440, 0xb8f8, 0x6c18, 0x9ca3, 0x0, 0x0);
        gbc.writeMem(0x5b24, { 0x21, 0x74, 0x47 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcf35, gbc.sp());
        EXPECT(0x5b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0308
        gbc.setState(0x19a1, 0x7771, 0xba90, 0x32bf, 0x7eee, 0x4516, 0x0, 0x0);
        gbc.writeMem(0x19a1, { 0x21, 0x71, 0xd4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7771, gbc.sp());
        EXPECT(0x19a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0309
        gbc.setState(0x59be, 0xf75a, 0x2d70, 0xcb98, 0x4b3b, 0x2159, 0x1, 0x0);
        gbc.writeMem(0x59be, { 0x21, 0x65, 0x81 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf75a, gbc.sp());
        EXPECT(0x59c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 030A
        gbc.setState(0x772f, 0x61f2, 0xaba0, 0x595e, 0xd0b9, 0x31e0, 0x1, 0x0);
        gbc.writeMem(0x772f, { 0x21, 0xec, 0x9a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x61f2, gbc.sp());
        EXPECT(0x7732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 030B
        gbc.setState(0xaa5d, 0x8552, 0x8960, 0x2072, 0x7dbb, 0x8c89, 0x0, 0x1);
        gbc.writeMem(0xaa5d, { 0x21, 0xd2, 0x17 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8552, gbc.sp());
        EXPECT(0xaa60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xaa5d));
        EXPECT(0xd2, gbc.readMem(0xaa5e));
        EXPECT(0x17, gbc.readMem(0xaa5f));
        // 21 030C
        gbc.setState(0xd5a7, 0xbc13, 0x5860, 0xd998, 0x6975, 0xbc98, 0x0, 0x1);
        gbc.writeMem(0xd5a7, { 0x21, 0x30, 0xf6 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbc13, gbc.sp());
        EXPECT(0xd5aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd5a7));
        EXPECT(0x30, gbc.readMem(0xd5a8));
        EXPECT(0xf6, gbc.readMem(0xd5a9));
        // 21 030D
        gbc.setState(0x46e, 0xad87, 0xe670, 0x5183, 0x5979, 0xd921, 0x0, 0x1);
        gbc.writeMem(0x46e, { 0x21, 0x8c, 0x32 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xad87, gbc.sp());
        EXPECT(0x471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 030E
        gbc.setState(0x65d9, 0xafc4, 0x98e0, 0xa4bf, 0x7c85, 0xea87, 0x1, 0x1);
        gbc.writeMem(0x65d9, { 0x21, 0x9, 0x2a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xafc4, gbc.sp());
        EXPECT(0x65dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 030F
        gbc.setState(0x87eb, 0xd276, 0xb850, 0xce6a, 0x1b53, 0x6f6d, 0x1, 0x1);
        gbc.writeMem(0x87eb, { 0x21, 0x2e, 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd276, gbc.sp());
        EXPECT(0x87ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x87eb));
        EXPECT(0x2e, gbc.readMem(0x87ec));
        EXPECT(0x8f, gbc.readMem(0x87ed));
        // 21 0310
        gbc.setState(0xc746, 0x990b, 0x20d0, 0x5df5, 0xa3dc, 0xacb4, 0x0, 0x1);
        gbc.writeMem(0xc746, { 0x21, 0x4f, 0x9b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x990b, gbc.sp());
        EXPECT(0xc749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc746));
        EXPECT(0x4f, gbc.readMem(0xc747));
        EXPECT(0x9b, gbc.readMem(0xc748));
        // 21 0311
        gbc.setState(0xc143, 0xc706, 0x2eb0, 0x14e2, 0xf46d, 0x51a2, 0x1, 0x0);
        gbc.writeMem(0xc143, { 0x21, 0x20, 0xad });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc706, gbc.sp());
        EXPECT(0xc146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc143));
        EXPECT(0x20, gbc.readMem(0xc144));
        EXPECT(0xad, gbc.readMem(0xc145));
        // 21 0312
        gbc.setState(0x5b1, 0x8822, 0x2820, 0x439, 0xd6f, 0x259a, 0x1, 0x0);
        gbc.writeMem(0x5b1, { 0x21, 0xf2, 0xa8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8822, gbc.sp());
        EXPECT(0x5b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0313
        gbc.setState(0x9cab, 0xdb51, 0xb6d0, 0xb518, 0xd90c, 0x5447, 0x1, 0x0);
        gbc.writeMem(0x9cab, { 0x21, 0x21, 0xfe });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdb51, gbc.sp());
        EXPECT(0x9cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9cab));
        EXPECT(0x21, gbc.readMem(0x9cac));
        EXPECT(0xfe, gbc.readMem(0x9cad));
        // 21 0314
        gbc.setState(0x4b48, 0x84e9, 0x69e0, 0xa5fb, 0x835a, 0xeee9, 0x1, 0x0);
        gbc.writeMem(0x4b48, { 0x21, 0xde, 0x94 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x84e9, gbc.sp());
        EXPECT(0x4b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0315
        gbc.setState(0xb378, 0x145e, 0x9820, 0xd2c4, 0xd065, 0x4f65, 0x0, 0x0);
        gbc.writeMem(0xb378, { 0x21, 0x3f, 0xd1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x145e, gbc.sp());
        EXPECT(0xb37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb378));
        EXPECT(0x3f, gbc.readMem(0xb379));
        EXPECT(0xd1, gbc.readMem(0xb37a));
        // 21 0316
        gbc.setState(0x1b1c, 0xfa5f, 0x9a00, 0x461c, 0x84e5, 0xddd6, 0x0, 0x1);
        gbc.writeMem(0x1b1c, { 0x21, 0xe0, 0xb7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfa5f, gbc.sp());
        EXPECT(0x1b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0317
        gbc.setState(0x3c76, 0x2c9b, 0x3370, 0x5839, 0x2700, 0x624f, 0x1, 0x1);
        gbc.writeMem(0x3c76, { 0x21, 0x6b, 0x6b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2c9b, gbc.sp());
        EXPECT(0x3c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0318
        gbc.setState(0xa383, 0xb94a, 0xa220, 0x4438, 0x23fb, 0xd072, 0x1, 0x0);
        gbc.writeMem(0xa383, { 0x21, 0x10, 0x82 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb94a, gbc.sp());
        EXPECT(0xa386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa383));
        EXPECT(0x10, gbc.readMem(0xa384));
        EXPECT(0x82, gbc.readMem(0xa385));
        // 21 0319
        gbc.setState(0x55e7, 0xc8c2, 0xefd0, 0x92b2, 0x6128, 0x63bd, 0x0, 0x1);
        gbc.writeMem(0x55e7, { 0x21, 0x82, 0x9c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc8c2, gbc.sp());
        EXPECT(0x55ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 031A
        gbc.setState(0xc0e9, 0x8e8, 0x11f0, 0x52a1, 0x9dbd, 0x3c36, 0x1, 0x0);
        gbc.writeMem(0xc0e9, { 0x21, 0xbe, 0xf8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8e8, gbc.sp());
        EXPECT(0xc0ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc0e9));
        EXPECT(0xbe, gbc.readMem(0xc0ea));
        EXPECT(0xf8, gbc.readMem(0xc0eb));
        // 21 031B
        gbc.setState(0x9870, 0x7701, 0x92d0, 0xbd06, 0x91d6, 0x47a0, 0x1, 0x1);
        gbc.writeMem(0x9870, { 0x21, 0x3e, 0xf1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7701, gbc.sp());
        EXPECT(0x9873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9870));
        EXPECT(0x3e, gbc.readMem(0x9871));
        EXPECT(0xf1, gbc.readMem(0x9872));
        // 21 031C
        gbc.setState(0x50c5, 0x1db2, 0x22b0, 0xb8a2, 0xfaa7, 0x4a6e, 0x1, 0x0);
        gbc.writeMem(0x50c5, { 0x21, 0x5, 0x79 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1db2, gbc.sp());
        EXPECT(0x50c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 031D
        gbc.setState(0xdba2, 0x6d67, 0x1660, 0x6b19, 0xe969, 0xc53a, 0x1, 0x1);
        gbc.writeMem(0xdba2, { 0x21, 0xdf, 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6d67, gbc.sp());
        EXPECT(0xdba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdba2));
        EXPECT(0xdf, gbc.readMem(0xdba3));
        EXPECT(0xe9, gbc.readMem(0xdba4));
        // 21 031E
        gbc.setState(0x1d16, 0x33b6, 0x2a00, 0xfec6, 0x65de, 0xbf01, 0x1, 0x0);
        gbc.writeMem(0x1d16, { 0x21, 0xa3, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x33b6, gbc.sp());
        EXPECT(0x1d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0321
        gbc.setState(0x194, 0x6f45, 0x52c0, 0xd46e, 0x1f22, 0xead7, 0x0, 0x1);
        gbc.writeMem(0x194, { 0x21, 0x4d, 0xc1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6f45, gbc.sp());
        EXPECT(0x197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0322
        gbc.setState(0xcf4, 0xeb1d, 0x9a20, 0x970d, 0x3950, 0x3e52, 0x0, 0x0);
        gbc.writeMem(0xcf4, { 0x21, 0x97, 0xc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xeb1d, gbc.sp());
        EXPECT(0xcf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0323
        gbc.setState(0xc10a, 0xd657, 0xf380, 0x9c8, 0x35a7, 0x69b6, 0x1, 0x1);
        gbc.writeMem(0xc10a, { 0x21, 0x1e, 0x8b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd657, gbc.sp());
        EXPECT(0xc10d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc10a));
        EXPECT(0x1e, gbc.readMem(0xc10b));
        EXPECT(0x8b, gbc.readMem(0xc10c));
        // 21 0324
        gbc.setState(0x378c, 0xb92, 0x210, 0x1705, 0x5e38, 0x9d4, 0x0, 0x0);
        gbc.writeMem(0x378c, { 0x21, 0x12, 0x87 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb92, gbc.sp());
        EXPECT(0x378f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0326
        gbc.setState(0xeab5, 0x4c70, 0x8060, 0x9529, 0xe521, 0xc650, 0x1, 0x1);
        gbc.writeMem(0xeab5, { 0x21, 0x1b, 0xb2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4c70, gbc.sp());
        EXPECT(0xeab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xeab5));
        EXPECT(0x1b, gbc.readMem(0xeab6));
        EXPECT(0xb2, gbc.readMem(0xeab7));
        // 21 0327
        gbc.setState(0x6ed6, 0xee64, 0x3f50, 0x4c7c, 0x26df, 0x1266, 0x0, 0x0);
        gbc.writeMem(0x6ed6, { 0x21, 0x70, 0x35 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xee64, gbc.sp());
        EXPECT(0x6ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0328
        gbc.setState(0x6cb3, 0x4f28, 0xf400, 0xb869, 0xbc3d, 0x16e4, 0x1, 0x1);
        gbc.writeMem(0x6cb3, { 0x21, 0xe4, 0x32 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4f28, gbc.sp());
        EXPECT(0x6cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0329
        gbc.setState(0xa630, 0xad38, 0x2ac0, 0x6b42, 0xeab4, 0x1b94, 0x0, 0x1);
        gbc.writeMem(0xa630, { 0x21, 0x39, 0x9d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xad38, gbc.sp());
        EXPECT(0xa633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa630));
        EXPECT(0x39, gbc.readMem(0xa631));
        EXPECT(0x9d, gbc.readMem(0xa632));
        // 21 032A
        gbc.setState(0x6462, 0x4033, 0xe660, 0xdffa, 0xabc7, 0x7228, 0x1, 0x1);
        gbc.writeMem(0x6462, { 0x21, 0xf0, 0xd5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4033, gbc.sp());
        EXPECT(0x6465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 032B
        gbc.setState(0xd08f, 0x9e55, 0x7b40, 0x58ad, 0x8a4b, 0xbcf1, 0x0, 0x0);
        gbc.writeMem(0xd08f, { 0x21, 0x4, 0x32 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9e55, gbc.sp());
        EXPECT(0xd092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd08f));
        EXPECT(0x4, gbc.readMem(0xd090));
        EXPECT(0x32, gbc.readMem(0xd091));
        // 21 032C
        gbc.setState(0x91fa, 0xc15a, 0x1460, 0xf4e3, 0x72df, 0xb4af, 0x1, 0x0);
        gbc.writeMem(0x91fa, { 0x21, 0x4b, 0x9b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc15a, gbc.sp());
        EXPECT(0x91fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x91fa));
        EXPECT(0x4b, gbc.readMem(0x91fb));
        EXPECT(0x9b, gbc.readMem(0x91fc));
        // 21 032D
        gbc.setState(0xb7ce, 0x6543, 0x2400, 0xf592, 0x90eb, 0xceaf, 0x0, 0x1);
        gbc.writeMem(0xb7ce, { 0x21, 0xca, 0x38 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6543, gbc.sp());
        EXPECT(0xb7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb7ce));
        EXPECT(0xca, gbc.readMem(0xb7cf));
        EXPECT(0x38, gbc.readMem(0xb7d0));
        // 21 032E
        gbc.setState(0xc69c, 0xfef8, 0xde60, 0x1be4, 0xaa00, 0x77f7, 0x1, 0x0);
        gbc.writeMem(0xc69c, { 0x21, 0x85, 0x35 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfef8, gbc.sp());
        EXPECT(0xc69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc69c));
        EXPECT(0x85, gbc.readMem(0xc69d));
        EXPECT(0x35, gbc.readMem(0xc69e));
        // 21 032F
        gbc.setState(0x7a5e, 0x8782, 0x5140, 0x630d, 0x6226, 0x40fc, 0x1, 0x1);
        gbc.writeMem(0x7a5e, { 0x21, 0xa, 0xc0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8782, gbc.sp());
        EXPECT(0x7a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0330
        gbc.setState(0xa78d, 0xf775, 0xcfc0, 0xb452, 0x7c72, 0xb879, 0x0, 0x0);
        gbc.writeMem(0xa78d, { 0x21, 0xd9, 0xb7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf775, gbc.sp());
        EXPECT(0xa790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa78d));
        EXPECT(0xd9, gbc.readMem(0xa78e));
        EXPECT(0xb7, gbc.readMem(0xa78f));
        // 21 0331
        gbc.setState(0x384d, 0x8434, 0x5050, 0xbe90, 0x751f, 0xad05, 0x1, 0x0);
        gbc.writeMem(0x384d, { 0x21, 0xac, 0x66 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8434, gbc.sp());
        EXPECT(0x3850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0332
        gbc.setState(0xb565, 0xf48a, 0x81b0, 0xa3f8, 0x4feb, 0x14bf, 0x0, 0x0);
        gbc.writeMem(0xb565, { 0x21, 0xdf, 0xfb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf48a, gbc.sp());
        EXPECT(0xb568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb565));
        EXPECT(0xdf, gbc.readMem(0xb566));
        EXPECT(0xfb, gbc.readMem(0xb567));
        // 21 0334
        gbc.setState(0x8baf, 0x2910, 0xc90, 0x9994, 0x4fa8, 0xa079, 0x0, 0x1);
        gbc.writeMem(0x8baf, { 0x21, 0xe5, 0x5e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2910, gbc.sp());
        EXPECT(0x8bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8baf));
        EXPECT(0xe5, gbc.readMem(0x8bb0));
        EXPECT(0x5e, gbc.readMem(0x8bb1));
        // 21 0335
        gbc.setState(0x4463, 0x89ca, 0xfcf0, 0x3d91, 0x40b0, 0x8b10, 0x1, 0x1);
        gbc.writeMem(0x4463, { 0x21, 0x1, 0xa8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x89ca, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0336
        gbc.setState(0x2cc4, 0xf91, 0x510, 0x2e26, 0x30f8, 0x13a0, 0x0, 0x0);
        gbc.writeMem(0x2cc4, { 0x21, 0x35, 0xf1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf91, gbc.sp());
        EXPECT(0x2cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0337
        gbc.setState(0x223a, 0x9e70, 0xebb0, 0xcb8f, 0xbc02, 0x5ebd, 0x0, 0x1);
        gbc.writeMem(0x223a, { 0x21, 0x99, 0x8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9e70, gbc.sp());
        EXPECT(0x223d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0338
        gbc.setState(0xc8b8, 0x672a, 0xb830, 0xe30c, 0x967b, 0xea59, 0x0, 0x1);
        gbc.writeMem(0xc8b8, { 0x21, 0xd6, 0xa1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x672a, gbc.sp());
        EXPECT(0xc8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc8b8));
        EXPECT(0xd6, gbc.readMem(0xc8b9));
        EXPECT(0xa1, gbc.readMem(0xc8ba));
        // 21 0339
        gbc.setState(0x2eb7, 0x6a11, 0x1830, 0x83da, 0xdfaa, 0x5a99, 0x1, 0x0);
        gbc.writeMem(0x2eb7, { 0x21, 0x4a, 0x9e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6a11, gbc.sp());
        EXPECT(0x2eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 033A
        gbc.setState(0xd5ce, 0xcb14, 0x8590, 0x9490, 0xd42d, 0xe618, 0x1, 0x1);
        gbc.writeMem(0xd5ce, { 0x21, 0xbf, 0x6b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcb14, gbc.sp());
        EXPECT(0xd5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd5ce));
        EXPECT(0xbf, gbc.readMem(0xd5cf));
        EXPECT(0x6b, gbc.readMem(0xd5d0));
        // 21 033B
        gbc.setState(0x95f6, 0x7923, 0x3b70, 0xf290, 0xc2cb, 0xf220, 0x1, 0x0);
        gbc.writeMem(0x95f6, { 0x21, 0x6, 0x8c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7923, gbc.sp());
        EXPECT(0x95f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x95f6));
        EXPECT(0x6, gbc.readMem(0x95f7));
        EXPECT(0x8c, gbc.readMem(0x95f8));
        // 21 033D
        gbc.setState(0x2fa3, 0x414b, 0x3ea0, 0x817d, 0xbb8, 0x6e1, 0x0, 0x1);
        gbc.writeMem(0x2fa3, { 0x21, 0x83, 0xf8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x414b, gbc.sp());
        EXPECT(0x2fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 033E
        gbc.setState(0x586, 0xeaaf, 0x1a70, 0x575d, 0x469a, 0x43ca, 0x1, 0x1);
        gbc.writeMem(0x586, { 0x21, 0x71, 0xa3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeaaf, gbc.sp());
        EXPECT(0x589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 033F
        gbc.setState(0x28ea, 0x96f7, 0x9e60, 0xee82, 0x8584, 0x22b8, 0x1, 0x1);
        gbc.writeMem(0x28ea, { 0x21, 0x23, 0xec });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x96f7, gbc.sp());
        EXPECT(0x28ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0340
        gbc.setState(0x5d51, 0xaacf, 0x6160, 0x4b7a, 0x725a, 0x25ac, 0x1, 0x1);
        gbc.writeMem(0x5d51, { 0x21, 0x22, 0x3a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xaacf, gbc.sp());
        EXPECT(0x5d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0341
        gbc.setState(0x79d4, 0xfc44, 0xaa0, 0x5d24, 0x52be, 0x6e9, 0x1, 0x1);
        gbc.writeMem(0x79d4, { 0x21, 0xdc, 0x13 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfc44, gbc.sp());
        EXPECT(0x79d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0343
        gbc.setState(0xa49a, 0x1f7f, 0xd650, 0x8415, 0xea16, 0x2db4, 0x0, 0x0);
        gbc.writeMem(0xa49a, { 0x21, 0x88, 0x39 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1f7f, gbc.sp());
        EXPECT(0xa49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa49a));
        EXPECT(0x88, gbc.readMem(0xa49b));
        EXPECT(0x39, gbc.readMem(0xa49c));
        // 21 0344
        gbc.setState(0xc85a, 0x3dcd, 0x3710, 0x2c0d, 0x65a, 0xaf49, 0x1, 0x1);
        gbc.writeMem(0xc85a, { 0x21, 0xf8, 0x50 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3dcd, gbc.sp());
        EXPECT(0xc85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc85a));
        EXPECT(0xf8, gbc.readMem(0xc85b));
        EXPECT(0x50, gbc.readMem(0xc85c));
        // 21 0345
        gbc.setState(0x3adc, 0xc5fb, 0x94f0, 0x640d, 0x60ca, 0x7ba0, 0x1, 0x0);
        gbc.writeMem(0x3adc, { 0x21, 0xf2, 0x6b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc5fb, gbc.sp());
        EXPECT(0x3adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0346
        gbc.setState(0xcabe, 0x30e8, 0x23f0, 0x6d3c, 0x70e7, 0xe052, 0x0, 0x0);
        gbc.writeMem(0xcabe, { 0x21, 0xfb, 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x30e8, gbc.sp());
        EXPECT(0xcac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcabe));
        EXPECT(0xfb, gbc.readMem(0xcabf));
        EXPECT(0xac, gbc.readMem(0xcac0));
        // 21 0347
        gbc.setState(0xedd8, 0x4da3, 0x1100, 0x2911, 0x12fc, 0x6211, 0x0, 0x0);
        gbc.writeMem(0xedd8, { 0x21, 0x3f, 0x71 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4da3, gbc.sp());
        EXPECT(0xeddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xedd8));
        EXPECT(0x3f, gbc.readMem(0xedd9));
        EXPECT(0x71, gbc.readMem(0xedda));
        // 21 0348
        gbc.setState(0x1c4a, 0x5e80, 0xbd60, 0x7014, 0xe785, 0xadd1, 0x0, 0x0);
        gbc.writeMem(0x1c4a, { 0x21, 0x48, 0x4e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5e80, gbc.sp());
        EXPECT(0x1c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0349
        gbc.setState(0xbd07, 0x110f, 0x6f20, 0xd4b2, 0xd871, 0xa4ca, 0x0, 0x0);
        gbc.writeMem(0xbd07, { 0x21, 0x5f, 0x50 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x110f, gbc.sp());
        EXPECT(0xbd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbd07));
        EXPECT(0x5f, gbc.readMem(0xbd08));
        EXPECT(0x50, gbc.readMem(0xbd09));
        // 21 034A
        gbc.setState(0x8b6, 0x8009, 0x23e0, 0xc219, 0x1bfd, 0x8f5f, 0x1, 0x0);
        gbc.writeMem(0x8b6, { 0x21, 0xb7, 0x9a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8009, gbc.sp());
        EXPECT(0x8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 034B
        gbc.setState(0x69dd, 0xbc74, 0xc740, 0x755a, 0x3f59, 0x5884, 0x0, 0x0);
        gbc.writeMem(0x69dd, { 0x21, 0x9e, 0x7a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbc74, gbc.sp());
        EXPECT(0x69e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 034C
        gbc.setState(0x57ee, 0xbf8a, 0x4ac0, 0x1310, 0x57c, 0xdbe5, 0x1, 0x0);
        gbc.writeMem(0x57ee, { 0x21, 0x4d, 0xec });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbf8a, gbc.sp());
        EXPECT(0x57f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 034E
        gbc.setState(0xe016, 0xf247, 0x1ed0, 0x7256, 0x653f, 0x6f38, 0x1, 0x0);
        gbc.writeMem(0xe016, { 0x21, 0xf8, 0x35 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf247, gbc.sp());
        EXPECT(0xe019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe016));
        EXPECT(0xf8, gbc.readMem(0xe017));
        EXPECT(0x35, gbc.readMem(0xe018));
        // 21 034F
        gbc.setState(0xbe09, 0xbce9, 0x7490, 0xeb2d, 0x71a6, 0x75f6, 0x0, 0x1);
        gbc.writeMem(0xbe09, { 0x21, 0xd2, 0xef });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbce9, gbc.sp());
        EXPECT(0xbe0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbe09));
        EXPECT(0xd2, gbc.readMem(0xbe0a));
        EXPECT(0xef, gbc.readMem(0xbe0b));
        // 21 0350
        gbc.setState(0xec57, 0x6115, 0xe1e0, 0xce5e, 0x6567, 0x1c74, 0x0, 0x1);
        gbc.writeMem(0xec57, { 0x21, 0x2a, 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0xec5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xec57));
        EXPECT(0x2a, gbc.readMem(0xec58));
        EXPECT(0x2d, gbc.readMem(0xec59));
        // 21 0351
        gbc.setState(0x9094, 0xb73, 0x2240, 0x7524, 0xbcd5, 0xfdc5, 0x0, 0x1);
        gbc.writeMem(0x9094, { 0x21, 0x5c, 0x35 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb73, gbc.sp());
        EXPECT(0x9097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9094));
        EXPECT(0x5c, gbc.readMem(0x9095));
        EXPECT(0x35, gbc.readMem(0x9096));
        // 21 0352
        gbc.setState(0x58a2, 0xd9aa, 0x2730, 0x6e76, 0x973c, 0xbb79, 0x1, 0x0);
        gbc.writeMem(0x58a2, { 0x21, 0xbc, 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd9aa, gbc.sp());
        EXPECT(0x58a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0353
        gbc.setState(0xb40, 0x3822, 0xde30, 0xa7ce, 0xbc09, 0x854c, 0x1, 0x1);
        gbc.writeMem(0xb40, { 0x21, 0x6, 0xb7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3822, gbc.sp());
        EXPECT(0xb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0354
        gbc.setState(0xac8f, 0x313a, 0xf650, 0x91dd, 0xcdbd, 0x5e41, 0x1, 0x0);
        gbc.writeMem(0xac8f, { 0x21, 0x84, 0xb4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x313a, gbc.sp());
        EXPECT(0xac92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xac8f));
        EXPECT(0x84, gbc.readMem(0xac90));
        EXPECT(0xb4, gbc.readMem(0xac91));
        // 21 0355
        gbc.setState(0x2b7a, 0x96f, 0x3e30, 0x2e7f, 0x13e6, 0xe4c5, 0x1, 0x1);
        gbc.writeMem(0x2b7a, { 0x21, 0xc7, 0x23 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x96f, gbc.sp());
        EXPECT(0x2b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0356
        gbc.setState(0x124e, 0x75ac, 0xcb0, 0x5048, 0xdece, 0x5d9f, 0x1, 0x0);
        gbc.writeMem(0x124e, { 0x21, 0x4d, 0x2b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x75ac, gbc.sp());
        EXPECT(0x1251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0357
        gbc.setState(0x49b6, 0x2ef6, 0x65a0, 0xb9ea, 0x5de8, 0xfd10, 0x1, 0x0);
        gbc.writeMem(0x49b6, { 0x21, 0xdc, 0xfd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2ef6, gbc.sp());
        EXPECT(0x49b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0358
        gbc.setState(0x191e, 0x947b, 0x4b0, 0x3bbe, 0x8bea, 0x1c25, 0x1, 0x0);
        gbc.writeMem(0x191e, { 0x21, 0xdd, 0x1e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x947b, gbc.sp());
        EXPECT(0x1921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0359
        gbc.setState(0x5fb7, 0xdbf4, 0xafd0, 0xb92d, 0xaa7a, 0xdb8e, 0x1, 0x0);
        gbc.writeMem(0x5fb7, { 0x21, 0xac, 0x6b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdbf4, gbc.sp());
        EXPECT(0x5fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 035A
        gbc.setState(0xefb8, 0x997c, 0xb3e0, 0x12dd, 0x68eb, 0x60bb, 0x1, 0x0);
        gbc.writeMem(0xefb8, { 0x21, 0x2b, 0x2c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x997c, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xefb8));
        EXPECT(0x2b, gbc.readMem(0xefb9));
        EXPECT(0x2c, gbc.readMem(0xefba));
        // 21 035C
        gbc.setState(0x4868, 0x9818, 0x8750, 0x1d0c, 0x9c44, 0x29b5, 0x0, 0x0);
        gbc.writeMem(0x4868, { 0x21, 0x95, 0x65 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9818, gbc.sp());
        EXPECT(0x486b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 035D
        gbc.setState(0x5b64, 0xaf0f, 0x9580, 0x4ad7, 0xeab0, 0x9740, 0x1, 0x0);
        gbc.writeMem(0x5b64, { 0x21, 0xcb, 0x74 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaf0f, gbc.sp());
        EXPECT(0x5b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 035F
        gbc.setState(0x6ba, 0x17ea, 0x60c0, 0x1538, 0x4304, 0x72ca, 0x0, 0x1);
        gbc.writeMem(0x6ba, { 0x21, 0xc7, 0xc0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x17ea, gbc.sp());
        EXPECT(0x6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0360
        gbc.setState(0x6492, 0x5d06, 0xe8b0, 0x18b3, 0xae0b, 0xecff, 0x0, 0x1);
        gbc.writeMem(0x6492, { 0x21, 0x18, 0xe3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5d06, gbc.sp());
        EXPECT(0x6495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0362
        gbc.setState(0x6f8d, 0xe4ad, 0xa060, 0x75e3, 0xc36c, 0x6df3, 0x1, 0x0);
        gbc.writeMem(0x6f8d, { 0x21, 0x13, 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe4ad, gbc.sp());
        EXPECT(0x6f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0363
        gbc.setState(0x44c8, 0x2b2e, 0x34d0, 0xed2b, 0x6ce5, 0x4bbd, 0x0, 0x0);
        gbc.writeMem(0x44c8, { 0x21, 0xc6, 0xd3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2b2e, gbc.sp());
        EXPECT(0x44cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0364
        gbc.setState(0x3978, 0xa215, 0xae10, 0x2346, 0xea2, 0x9422, 0x0, 0x1);
        gbc.writeMem(0x3978, { 0x21, 0xe, 0x4a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa215, gbc.sp());
        EXPECT(0x397b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0365
        gbc.setState(0x2d30, 0xe7bc, 0x8360, 0xd004, 0xe205, 0x67d0, 0x1, 0x1);
        gbc.writeMem(0x2d30, { 0x21, 0x8a, 0xe9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe7bc, gbc.sp());
        EXPECT(0x2d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0366
        gbc.setState(0x4352, 0x78ef, 0x4bd0, 0xd8fb, 0x6596, 0x37a9, 0x1, 0x0);
        gbc.writeMem(0x4352, { 0x21, 0xb3, 0x8a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x78ef, gbc.sp());
        EXPECT(0x4355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0368
        gbc.setState(0xaec5, 0x8be3, 0x8ef0, 0xbfc3, 0x7413, 0xc617, 0x0, 0x0);
        gbc.writeMem(0xaec5, { 0x21, 0x59, 0xba });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8be3, gbc.sp());
        EXPECT(0xaec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xaec5));
        EXPECT(0x59, gbc.readMem(0xaec6));
        EXPECT(0xba, gbc.readMem(0xaec7));
        // 21 0369
        gbc.setState(0x2c09, 0xcb57, 0x1360, 0x159b, 0x5acf, 0xd680, 0x1, 0x1);
        gbc.writeMem(0x2c09, { 0x21, 0x83, 0x7f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcb57, gbc.sp());
        EXPECT(0x2c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 036A
        gbc.setState(0x9edd, 0xa5f6, 0x12d0, 0x85b8, 0x1d29, 0x8d98, 0x1, 0x0);
        gbc.writeMem(0x9edd, { 0x21, 0x54, 0x42 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa5f6, gbc.sp());
        EXPECT(0x9ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9edd));
        EXPECT(0x54, gbc.readMem(0x9ede));
        EXPECT(0x42, gbc.readMem(0x9edf));
        // 21 036B
        gbc.setState(0x718b, 0x1ae0, 0x8250, 0x5a26, 0x81e8, 0x5a27, 0x1, 0x0);
        gbc.writeMem(0x718b, { 0x21, 0x75, 0xb3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1ae0, gbc.sp());
        EXPECT(0x718e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 036C
        gbc.setState(0x2e0c, 0xa49e, 0xf870, 0x2607, 0x7ab, 0xb2b5, 0x1, 0x0);
        gbc.writeMem(0x2e0c, { 0x21, 0x5e, 0x7d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa49e, gbc.sp());
        EXPECT(0x2e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 036D
        gbc.setState(0xa3ed, 0xdd0d, 0xd690, 0xca42, 0x5d2c, 0xce6e, 0x1, 0x0);
        gbc.writeMem(0xa3ed, { 0x21, 0x5d, 0x9b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdd0d, gbc.sp());
        EXPECT(0xa3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa3ed));
        EXPECT(0x5d, gbc.readMem(0xa3ee));
        EXPECT(0x9b, gbc.readMem(0xa3ef));
        // 21 036F
        gbc.setState(0x709c, 0x8caa, 0xada0, 0xd825, 0xd119, 0x6dde, 0x0, 0x1);
        gbc.writeMem(0x709c, { 0x21, 0x53, 0x8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8caa, gbc.sp());
        EXPECT(0x709f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0370
        gbc.setState(0xe2ae, 0x42a2, 0x7f20, 0x8dcc, 0xb960, 0xbcfb, 0x0, 0x1);
        gbc.writeMem(0xe2ae, { 0x21, 0x85, 0xf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x42a2, gbc.sp());
        EXPECT(0xe2b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe2ae));
        EXPECT(0x85, gbc.readMem(0xe2af));
        EXPECT(0xf, gbc.readMem(0xe2b0));
        // 21 0371
        gbc.setState(0xe4ac, 0xaaaf, 0x31f0, 0x3a47, 0xb06a, 0xa5c5, 0x1, 0x1);
        gbc.writeMem(0xe4ac, { 0x21, 0x68, 0x4c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xaaaf, gbc.sp());
        EXPECT(0xe4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe4ac));
        EXPECT(0x68, gbc.readMem(0xe4ad));
        EXPECT(0x4c, gbc.readMem(0xe4ae));
        // 21 0372
        gbc.setState(0xed14, 0x2d15, 0x9cf0, 0x9ff2, 0x1ace, 0x778e, 0x0, 0x1);
        gbc.writeMem(0xed14, { 0x21, 0x96, 0x54 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2d15, gbc.sp());
        EXPECT(0xed17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xed14));
        EXPECT(0x96, gbc.readMem(0xed15));
        EXPECT(0x54, gbc.readMem(0xed16));
        // 21 0373
        gbc.setState(0x2995, 0x4b82, 0xd6a0, 0xf0d9, 0x3441, 0xe90b, 0x1, 0x0);
        gbc.writeMem(0x2995, { 0x21, 0x6c, 0x47 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4b82, gbc.sp());
        EXPECT(0x2998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0374
        gbc.setState(0x2867, 0x5e53, 0x70e0, 0xdcc6, 0xd8b9, 0x50b6, 0x0, 0x1);
        gbc.writeMem(0x2867, { 0x21, 0xe8, 0x69 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5e53, gbc.sp());
        EXPECT(0x286a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0375
        gbc.setState(0x7ffd, 0xf501, 0xecf0, 0x89bc, 0x1183, 0x738a, 0x0, 0x1);
        gbc.writeMem(0x7ffd, { 0x21, 0x33, 0x26 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf501, gbc.sp());
        EXPECT(0x8000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0376
        gbc.setState(0x604, 0x3a75, 0x6780, 0x690e, 0x6efe, 0x4c0, 0x0, 0x0);
        gbc.writeMem(0x604, { 0x21, 0xd2, 0x23 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3a75, gbc.sp());
        EXPECT(0x607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0377
        gbc.setState(0x1db2, 0x38fd, 0x7670, 0xf8ec, 0xd1da, 0x30da, 0x1, 0x0);
        gbc.writeMem(0x1db2, { 0x21, 0xee, 0xcc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x38fd, gbc.sp());
        EXPECT(0x1db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0378
        gbc.setState(0x5aa5, 0x5a8c, 0xf790, 0xba1c, 0xa9d9, 0x8292, 0x1, 0x1);
        gbc.writeMem(0x5aa5, { 0x21, 0x18, 0x13 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5a8c, gbc.sp());
        EXPECT(0x5aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0379
        gbc.setState(0x68a5, 0xc7d6, 0x6000, 0xfd3d, 0xefe6, 0x92a3, 0x1, 0x0);
        gbc.writeMem(0x68a5, { 0x21, 0x5f, 0x23 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc7d6, gbc.sp());
        EXPECT(0x68a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 037A
        gbc.setState(0xae1, 0x603c, 0xaf90, 0x1bfd, 0x7dfe, 0xb14a, 0x0, 0x1);
        gbc.writeMem(0xae1, { 0x21, 0x49, 0xc8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x603c, gbc.sp());
        EXPECT(0xae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 037B
        gbc.setState(0x5796, 0xcf3d, 0xefa0, 0xe935, 0xd81, 0xf823, 0x1, 0x0);
        gbc.writeMem(0x5796, { 0x21, 0x63, 0xf9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcf3d, gbc.sp());
        EXPECT(0x5799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 037C
        gbc.setState(0x500d, 0x8771, 0x23a0, 0xea54, 0x489c, 0xfde9, 0x1, 0x0);
        gbc.writeMem(0x500d, { 0x21, 0x72, 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8771, gbc.sp());
        EXPECT(0x5010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 037D
        gbc.setState(0x1c4, 0x8c8a, 0x1e0, 0x3e13, 0xeb8e, 0xc8c0, 0x1, 0x1);
        gbc.writeMem(0x1c4, { 0x21, 0x77, 0xdb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8c8a, gbc.sp());
        EXPECT(0x1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 037E
        gbc.setState(0xc24a, 0x94fa, 0x56e0, 0x639b, 0x933e, 0x5525, 0x1, 0x1);
        gbc.writeMem(0xc24a, { 0x21, 0x6c, 0xe6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x94fa, gbc.sp());
        EXPECT(0xc24d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc24a));
        EXPECT(0x6c, gbc.readMem(0xc24b));
        EXPECT(0xe6, gbc.readMem(0xc24c));
        // 21 037F
        gbc.setState(0x4b13, 0x988b, 0xf7c0, 0xbc8b, 0xf44e, 0x54ab, 0x1, 0x0);
        gbc.writeMem(0x4b13, { 0x21, 0x19, 0x59 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x988b, gbc.sp());
        EXPECT(0x4b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0380
        gbc.setState(0xe3c7, 0xbb8f, 0x46b0, 0xfdb0, 0xb786, 0xcb64, 0x0, 0x0);
        gbc.writeMem(0xe3c7, { 0x21, 0xee, 0x67 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbb8f, gbc.sp());
        EXPECT(0xe3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe3c7));
        EXPECT(0xee, gbc.readMem(0xe3c8));
        EXPECT(0x67, gbc.readMem(0xe3c9));
        // 21 0381
        gbc.setState(0xe113, 0x9d9d, 0x6090, 0x3663, 0x297, 0xee8f, 0x0, 0x0);
        gbc.writeMem(0xe113, { 0x21, 0x3e, 0x86 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9d9d, gbc.sp());
        EXPECT(0xe116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe113));
        EXPECT(0x3e, gbc.readMem(0xe114));
        EXPECT(0x86, gbc.readMem(0xe115));
        // 21 0382
        gbc.setState(0x2631, 0x3252, 0x9440, 0x672d, 0xd5f7, 0xd896, 0x1, 0x1);
        gbc.writeMem(0x2631, { 0x21, 0x51, 0x63 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3252, gbc.sp());
        EXPECT(0x2634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0383
        gbc.setState(0xe085, 0xd726, 0xbbf0, 0xc606, 0x473c, 0x4d01, 0x1, 0x0);
        gbc.writeMem(0xe085, { 0x21, 0x80, 0x96 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd726, gbc.sp());
        EXPECT(0xe088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe085));
        EXPECT(0x80, gbc.readMem(0xe086));
        EXPECT(0x96, gbc.readMem(0xe087));
        // 21 0384
        gbc.setState(0x9bd9, 0x25ac, 0x8b20, 0x62db, 0xce53, 0x62e6, 0x1, 0x0);
        gbc.writeMem(0x9bd9, { 0x21, 0xba, 0x80 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x25ac, gbc.sp());
        EXPECT(0x9bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9bd9));
        EXPECT(0xba, gbc.readMem(0x9bda));
        EXPECT(0x80, gbc.readMem(0x9bdb));
        // 21 0386
        gbc.setState(0x186e, 0x528a, 0x5f90, 0x4d95, 0xbc25, 0x7529, 0x0, 0x1);
        gbc.writeMem(0x186e, { 0x21, 0x77, 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x528a, gbc.sp());
        EXPECT(0x1871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0387
        gbc.setState(0x2bcd, 0xdf8e, 0x1f50, 0xe290, 0xcd91, 0x9100, 0x1, 0x0);
        gbc.writeMem(0x2bcd, { 0x21, 0x22, 0x25 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdf8e, gbc.sp());
        EXPECT(0x2bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0388
        gbc.setState(0x3759, 0xae9b, 0x4360, 0x551c, 0x1548, 0x67e1, 0x1, 0x1);
        gbc.writeMem(0x3759, { 0x21, 0x4c, 0x35 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xae9b, gbc.sp());
        EXPECT(0x375c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0389
        gbc.setState(0x71ee, 0x7b72, 0x8750, 0x9546, 0x10db, 0x1559, 0x1, 0x1);
        gbc.writeMem(0x71ee, { 0x21, 0x37, 0x3b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7b72, gbc.sp());
        EXPECT(0x71f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 038A
        gbc.setState(0x18b7, 0x90e5, 0xec50, 0x2a05, 0xe0b0, 0x7db, 0x1, 0x1);
        gbc.writeMem(0x18b7, { 0x21, 0x51, 0x4a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x90e5, gbc.sp());
        EXPECT(0x18ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 038B
        gbc.setState(0xc467, 0xc7fd, 0x7250, 0xbee8, 0xafad, 0xafa8, 0x1, 0x0);
        gbc.writeMem(0xc467, { 0x21, 0xc4, 0xfa });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc7fd, gbc.sp());
        EXPECT(0xc46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc467));
        EXPECT(0xc4, gbc.readMem(0xc468));
        EXPECT(0xfa, gbc.readMem(0xc469));
        // 21 038C
        gbc.setState(0x14bf, 0x5a16, 0xc000, 0x3bc1, 0xdb18, 0xa895, 0x0, 0x0);
        gbc.writeMem(0x14bf, { 0x21, 0xde, 0xd8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5a16, gbc.sp());
        EXPECT(0x14c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 038D
        gbc.setState(0x269a, 0x2e47, 0xe410, 0xbbc2, 0x6ddd, 0x97ae, 0x1, 0x0);
        gbc.writeMem(0x269a, { 0x21, 0x2b, 0x8d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2e47, gbc.sp());
        EXPECT(0x269d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 038E
        gbc.setState(0x2f7, 0x140b, 0x67c0, 0x488e, 0xa41a, 0x2a5a, 0x0, 0x0);
        gbc.writeMem(0x2f7, { 0x21, 0x96, 0x60 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x140b, gbc.sp());
        EXPECT(0x2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 038F
        gbc.setState(0x2a51, 0xd979, 0x86e0, 0x420, 0xa705, 0x4a91, 0x0, 0x0);
        gbc.writeMem(0x2a51, { 0x21, 0x46, 0x1c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd979, gbc.sp());
        EXPECT(0x2a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 0390
        gbc.setState(0xbd40, 0x48d5, 0x18d0, 0x1ec6, 0xe898, 0x561a, 0x1, 0x0);
        gbc.writeMem(0xbd40, { 0x21, 0x9e, 0x56 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x48d5, gbc.sp());
        EXPECT(0xbd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbd40));
        EXPECT(0x9e, gbc.readMem(0xbd41));
        EXPECT(0x56, gbc.readMem(0xbd42));
        // 21 0391
        gbc.setState(0xa499, 0x3a30, 0xb930, 0x7df, 0xce07, 0x71f0, 0x1, 0x0);
        gbc.writeMem(0xa499, { 0x21, 0x64, 0x88 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3a30, gbc.sp());
        EXPECT(0xa49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa499));
        EXPECT(0x64, gbc.readMem(0xa49a));
        EXPECT(0x88, gbc.readMem(0xa49b));
        // 21 0392
        gbc.setState(0xb45b, 0xdde8, 0xd620, 0x6881, 0xcf84, 0x21f0, 0x1, 0x0);
        gbc.writeMem(0xb45b, { 0x21, 0x7c, 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdde8, gbc.sp());
        EXPECT(0xb45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb45b));
        EXPECT(0x7c, gbc.readMem(0xb45c));
        EXPECT(0x3b, gbc.readMem(0xb45d));
        // 21 0393
        gbc.setState(0x86a1, 0x48d3, 0x6830, 0xf5dd, 0x7f71, 0x3e53, 0x1, 0x1);
        gbc.writeMem(0x86a1, { 0x21, 0xc1, 0x70 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x48d3, gbc.sp());
        EXPECT(0x86a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x86a1));
        EXPECT(0xc1, gbc.readMem(0x86a2));
        EXPECT(0x70, gbc.readMem(0x86a3));
        // 21 0394
        gbc.setState(0x52f1, 0xfab5, 0xc70, 0x1eea, 0x84fa, 0xb5c6, 0x1, 0x0);
        gbc.writeMem(0x52f1, { 0x21, 0x96, 0x77 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfab5, gbc.sp());
        EXPECT(0x52f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 0395
        gbc.setState(0xbaaa, 0x8e37, 0xf210, 0x11c, 0x641d, 0x30f9, 0x0, 0x1);
        gbc.writeMem(0xbaaa, { 0x21, 0xeb, 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8e37, gbc.sp());
        EXPECT(0xbaad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbaaa));
        EXPECT(0xeb, gbc.readMem(0xbaab));
        EXPECT(0xb9, gbc.readMem(0xbaac));
        // 21 0396
        gbc.setState(0x8e3f, 0xa0f5, 0x51c0, 0xfc51, 0x24cf, 0xfdc7, 0x0, 0x1);
        gbc.writeMem(0x8e3f, { 0x21, 0xf, 0xd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa0f5, gbc.sp());
        EXPECT(0x8e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8e3f));
        EXPECT(0xf, gbc.readMem(0x8e40));
        EXPECT(0xd, gbc.readMem(0x8e41));
        // 21 0397
        gbc.setState(0xd97a, 0x48cb, 0xaaa0, 0xf319, 0xefbb, 0x855a, 0x0, 0x1);
        gbc.writeMem(0xd97a, { 0x21, 0xec, 0x30 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x48cb, gbc.sp());
        EXPECT(0xd97d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd97a));
        EXPECT(0xec, gbc.readMem(0xd97b));
        EXPECT(0x30, gbc.readMem(0xd97c));
        // 21 0398
        gbc.setState(0x97c9, 0xab94, 0xd320, 0x1760, 0xd2b4, 0xd1db, 0x1, 0x1);
        gbc.writeMem(0x97c9, { 0x21, 0xbe, 0x75 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xab94, gbc.sp());
        EXPECT(0x97cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x97c9));
        EXPECT(0xbe, gbc.readMem(0x97ca));
        EXPECT(0x75, gbc.readMem(0x97cb));
        // 21 0399
        gbc.setState(0xc823, 0x6ba3, 0xfbd0, 0xd70e, 0xa49d, 0xbcf, 0x1, 0x1);
        gbc.writeMem(0xc823, { 0x21, 0xb6, 0x14 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6ba3, gbc.sp());
        EXPECT(0xc826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc823));
        EXPECT(0xb6, gbc.readMem(0xc824));
        EXPECT(0x14, gbc.readMem(0xc825));
        // 21 039A
        gbc.setState(0x9a0b, 0x2f1d, 0xacb0, 0xaf65, 0xe56b, 0x8f5c, 0x1, 0x0);
        gbc.writeMem(0x9a0b, { 0x21, 0xa2, 0x6 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2f1d, gbc.sp());
        EXPECT(0x9a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9a0b));
        EXPECT(0xa2, gbc.readMem(0x9a0c));
        EXPECT(0x6, gbc.readMem(0x9a0d));
        // 21 039B
        gbc.setState(0x9237, 0x8563, 0x8270, 0x3404, 0x968e, 0x14ad, 0x1, 0x0);
        gbc.writeMem(0x9237, { 0x21, 0xfe, 0x1f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8563, gbc.sp());
        EXPECT(0x923a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9237));
        EXPECT(0xfe, gbc.readMem(0x9238));
        EXPECT(0x1f, gbc.readMem(0x9239));
        // 21 039C
        gbc.setState(0x68a4, 0x19d0, 0x2190, 0x2d0d, 0x7436, 0x3ccf, 0x1, 0x0);
        gbc.writeMem(0x68a4, { 0x21, 0x90, 0x5f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x19d0, gbc.sp());
        EXPECT(0x68a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 039D
        gbc.setState(0x582e, 0x53dd, 0x2d00, 0x4da5, 0x8ce1, 0xfd26, 0x0, 0x0);
        gbc.writeMem(0x582e, { 0x21, 0x5e, 0xa1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x53dd, gbc.sp());
        EXPECT(0x5831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 039F
        gbc.setState(0x6b8f, 0x5ec6, 0xd920, 0x9de, 0x3c2b, 0x6a83, 0x1, 0x1);
        gbc.writeMem(0x6b8f, { 0x21, 0x8, 0x7b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5ec6, gbc.sp());
        EXPECT(0x6b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03A0
        gbc.setState(0x450f, 0xe1fc, 0x14c0, 0xcf10, 0x5579, 0x2c40, 0x0, 0x0);
        gbc.writeMem(0x450f, { 0x21, 0x80, 0x10 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe1fc, gbc.sp());
        EXPECT(0x4512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03A1
        gbc.setState(0xe59f, 0xb443, 0x9dd0, 0x832d, 0xd088, 0x5a03, 0x1, 0x0);
        gbc.writeMem(0xe59f, { 0x21, 0x84, 0x78 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb443, gbc.sp());
        EXPECT(0xe5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe59f));
        EXPECT(0x84, gbc.readMem(0xe5a0));
        EXPECT(0x78, gbc.readMem(0xe5a1));
        // 21 03A2
        gbc.setState(0x283a, 0x2a99, 0x1380, 0xce8, 0x6eb3, 0x6c05, 0x1, 0x0);
        gbc.writeMem(0x283a, { 0x21, 0xb7, 0x9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2a99, gbc.sp());
        EXPECT(0x283d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03A3
        gbc.setState(0x810f, 0x1941, 0xa3c0, 0x6301, 0xa221, 0x8822, 0x1, 0x1);
        gbc.writeMem(0x810f, { 0x21, 0x98, 0xb3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1941, gbc.sp());
        EXPECT(0x8112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x810f));
        EXPECT(0x98, gbc.readMem(0x8110));
        EXPECT(0xb3, gbc.readMem(0x8111));
        // 21 03A4
        gbc.setState(0x3ab, 0xf982, 0x6e40, 0x3a8a, 0xbf6, 0xe62a, 0x1, 0x0);
        gbc.writeMem(0x3ab, { 0x21, 0x7c, 0xbf });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf982, gbc.sp());
        EXPECT(0x3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03A5
        gbc.setState(0xc72e, 0xfc07, 0x5770, 0xe816, 0xc53c, 0x5d43, 0x1, 0x0);
        gbc.writeMem(0xc72e, { 0x21, 0xe1, 0x30 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfc07, gbc.sp());
        EXPECT(0xc731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc72e));
        EXPECT(0xe1, gbc.readMem(0xc72f));
        EXPECT(0x30, gbc.readMem(0xc730));
        // 21 03A6
        gbc.setState(0x798c, 0x6cee, 0x1aa0, 0x3201, 0xf32e, 0x22c5, 0x0, 0x0);
        gbc.writeMem(0x798c, { 0x21, 0x64, 0xf1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6cee, gbc.sp());
        EXPECT(0x798f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03A7
        gbc.setState(0xe575, 0x4c0b, 0x9700, 0x4943, 0x7b68, 0xa0c9, 0x1, 0x1);
        gbc.writeMem(0xe575, { 0x21, 0x4f, 0x2a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4c0b, gbc.sp());
        EXPECT(0xe578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe575));
        EXPECT(0x4f, gbc.readMem(0xe576));
        EXPECT(0x2a, gbc.readMem(0xe577));
        // 21 03A8
        gbc.setState(0xd18e, 0x20c9, 0x1720, 0xb723, 0x3e1c, 0x5285, 0x1, 0x0);
        gbc.writeMem(0xd18e, { 0x21, 0x1d, 0xc0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x20c9, gbc.sp());
        EXPECT(0xd191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd18e));
        EXPECT(0x1d, gbc.readMem(0xd18f));
        EXPECT(0xc0, gbc.readMem(0xd190));
        // 21 03A9
        gbc.setState(0xaaed, 0x4c63, 0xeb70, 0x7cc6, 0xce58, 0x1a88, 0x1, 0x0);
        gbc.writeMem(0xaaed, { 0x21, 0x1c, 0xca });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4c63, gbc.sp());
        EXPECT(0xaaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xaaed));
        EXPECT(0x1c, gbc.readMem(0xaaee));
        EXPECT(0xca, gbc.readMem(0xaaef));
        // 21 03AA
        gbc.setState(0x33ec, 0x81fc, 0x3e20, 0x1f3a, 0xd7d0, 0x84a7, 0x1, 0x0);
        gbc.writeMem(0x33ec, { 0x21, 0x4a, 0x96 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x81fc, gbc.sp());
        EXPECT(0x33ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03AC
        gbc.setState(0x236, 0x2f0e, 0xa440, 0x970e, 0xbd2f, 0x8638, 0x0, 0x0);
        gbc.writeMem(0x236, { 0x21, 0x65, 0x78 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2f0e, gbc.sp());
        EXPECT(0x239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03AD
        gbc.setState(0xc2df, 0x4d1d, 0xbdd0, 0x1004, 0xfed1, 0xbb6f, 0x0, 0x0);
        gbc.writeMem(0xc2df, { 0x21, 0xdc, 0x8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4d1d, gbc.sp());
        EXPECT(0xc2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc2df));
        EXPECT(0xdc, gbc.readMem(0xc2e0));
        EXPECT(0x8, gbc.readMem(0xc2e1));
        // 21 03AE
        gbc.setState(0xef19, 0xc4a1, 0x4560, 0x3ce1, 0x5811, 0xb686, 0x0, 0x0);
        gbc.writeMem(0xef19, { 0x21, 0x88, 0xc2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc4a1, gbc.sp());
        EXPECT(0xef1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xef19));
        EXPECT(0x88, gbc.readMem(0xef1a));
        EXPECT(0xc2, gbc.readMem(0xef1b));
        // 21 03AF
        gbc.setState(0x7b18, 0xc7a7, 0x51d0, 0xdfc5, 0xa990, 0x513d, 0x1, 0x0);
        gbc.writeMem(0x7b18, { 0x21, 0x60, 0x48 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc7a7, gbc.sp());
        EXPECT(0x7b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03B0
        gbc.setState(0x3962, 0x97b, 0xa520, 0xd6d5, 0x4d77, 0x898e, 0x1, 0x1);
        gbc.writeMem(0x3962, { 0x21, 0xd4, 0x54 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x97b, gbc.sp());
        EXPECT(0x3965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03B1
        gbc.setState(0x91b8, 0x75e6, 0x7470, 0x8bf4, 0x62ef, 0x6ce3, 0x0, 0x1);
        gbc.writeMem(0x91b8, { 0x21, 0x20, 0x50 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x75e6, gbc.sp());
        EXPECT(0x91bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x91b8));
        EXPECT(0x20, gbc.readMem(0x91b9));
        EXPECT(0x50, gbc.readMem(0x91ba));
        // 21 03B2
        gbc.setState(0x63c7, 0x5d36, 0xfaa0, 0xabaa, 0xb80c, 0xe527, 0x0, 0x1);
        gbc.writeMem(0x63c7, { 0x21, 0xc6, 0x6e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5d36, gbc.sp());
        EXPECT(0x63ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03B3
        gbc.setState(0x3b87, 0xafbc, 0x85a0, 0x7c3c, 0x2ef6, 0xf022, 0x1, 0x1);
        gbc.writeMem(0x3b87, { 0x21, 0xae, 0xa2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xafbc, gbc.sp());
        EXPECT(0x3b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03B4
        gbc.setState(0x1253, 0x5a5, 0x38b0, 0x89c5, 0xaa14, 0x3bef, 0x1, 0x1);
        gbc.writeMem(0x1253, { 0x21, 0xe, 0xf2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5a5, gbc.sp());
        EXPECT(0x1256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03B5
        gbc.setState(0x7abd, 0xca9c, 0x4450, 0xf955, 0x4def, 0xacc8, 0x1, 0x0);
        gbc.writeMem(0x7abd, { 0x21, 0xaf, 0xb4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xca9c, gbc.sp());
        EXPECT(0x7ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03B6
        gbc.setState(0x6e0c, 0xbca8, 0xc7e0, 0x2236, 0xa497, 0xc90f, 0x0, 0x1);
        gbc.writeMem(0x6e0c, { 0x21, 0xa1, 0x7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbca8, gbc.sp());
        EXPECT(0x6e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03B7
        gbc.setState(0x9ada, 0xc396, 0x1c30, 0x33f6, 0x5081, 0xf2, 0x0, 0x0);
        gbc.writeMem(0x9ada, { 0x21, 0xef, 0x9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc396, gbc.sp());
        EXPECT(0x9add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9ada));
        EXPECT(0xef, gbc.readMem(0x9adb));
        EXPECT(0x9, gbc.readMem(0x9adc));
        // 21 03B8
        gbc.setState(0x5f5e, 0x616e, 0x2d10, 0x99bb, 0x7778, 0x563f, 0x0, 0x0);
        gbc.writeMem(0x5f5e, { 0x21, 0x5d, 0x1c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x616e, gbc.sp());
        EXPECT(0x5f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03B9
        gbc.setState(0x78c8, 0xa664, 0x6000, 0xb8fa, 0xcc5e, 0x53f1, 0x0, 0x0);
        gbc.writeMem(0x78c8, { 0x21, 0x71, 0x9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa664, gbc.sp());
        EXPECT(0x78cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03BA
        gbc.setState(0x2499, 0x4ab3, 0x8050, 0x7e4e, 0x760f, 0x28e2, 0x0, 0x1);
        gbc.writeMem(0x2499, { 0x21, 0xad, 0x8b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4ab3, gbc.sp());
        EXPECT(0x249c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03BB
        gbc.setState(0x19c1, 0x2adc, 0x4c80, 0x705, 0xb615, 0x3aad, 0x0, 0x1);
        gbc.writeMem(0x19c1, { 0x21, 0x85, 0xde });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2adc, gbc.sp());
        EXPECT(0x19c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03BC
        gbc.setState(0x2785, 0xe79f, 0x2c40, 0x9321, 0x9b0b, 0xf11c, 0x0, 0x0);
        gbc.writeMem(0x2785, { 0x21, 0x89, 0xa4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe79f, gbc.sp());
        EXPECT(0x2788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03BD
        gbc.setState(0x7a8b, 0xb7d7, 0xb670, 0x89d6, 0x92ac, 0x4a65, 0x0, 0x0);
        gbc.writeMem(0x7a8b, { 0x21, 0xf3, 0x17 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb7d7, gbc.sp());
        EXPECT(0x7a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03BE
        gbc.setState(0x109e, 0x61bc, 0x4b10, 0xfb1c, 0xb1d, 0x5b17, 0x0, 0x1);
        gbc.writeMem(0x109e, { 0x21, 0x0, 0x7c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x61bc, gbc.sp());
        EXPECT(0x10a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03C0
        gbc.setState(0xa644, 0x1d57, 0xa9d0, 0x993a, 0x3e0e, 0xe95f, 0x0, 0x1);
        gbc.writeMem(0xa644, { 0x21, 0xe6, 0xa });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1d57, gbc.sp());
        EXPECT(0xa647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa644));
        EXPECT(0xe6, gbc.readMem(0xa645));
        EXPECT(0xa, gbc.readMem(0xa646));
        // 21 03C1
        gbc.setState(0xe396, 0xd1fc, 0x83d0, 0x49b1, 0xc4aa, 0x7be4, 0x0, 0x1);
        gbc.writeMem(0xe396, { 0x21, 0x2e, 0x86 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd1fc, gbc.sp());
        EXPECT(0xe399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe396));
        EXPECT(0x2e, gbc.readMem(0xe397));
        EXPECT(0x86, gbc.readMem(0xe398));
        // 21 03C2
        gbc.setState(0x246e, 0x71fd, 0xb7f0, 0xd97e, 0x9913, 0xde94, 0x0, 0x0);
        gbc.writeMem(0x246e, { 0x21, 0xa2, 0x8d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x71fd, gbc.sp());
        EXPECT(0x2471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03C3
        gbc.setState(0xc4a9, 0x30fc, 0x9980, 0x113, 0xf8a2, 0xb89c, 0x0, 0x1);
        gbc.writeMem(0xc4a9, { 0x21, 0x95, 0x6d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x30fc, gbc.sp());
        EXPECT(0xc4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc4a9));
        EXPECT(0x95, gbc.readMem(0xc4aa));
        EXPECT(0x6d, gbc.readMem(0xc4ab));
        // 21 03C4
        gbc.setState(0xda99, 0x2429, 0xf390, 0xafd0, 0x541, 0xe1e2, 0x0, 0x0);
        gbc.writeMem(0xda99, { 0x21, 0x29, 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2429, gbc.sp());
        EXPECT(0xda9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xda99));
        EXPECT(0x29, gbc.readMem(0xda9a));
        EXPECT(0x43, gbc.readMem(0xda9b));
        // 21 03C5
        gbc.setState(0x3af4, 0xbcbf, 0xaae0, 0xbf50, 0x32e, 0x187b, 0x0, 0x0);
        gbc.writeMem(0x3af4, { 0x21, 0x12, 0x9f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbcbf, gbc.sp());
        EXPECT(0x3af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03C6
        gbc.setState(0xe8e3, 0x1c90, 0x82a0, 0x5048, 0x7035, 0xd67a, 0x0, 0x1);
        gbc.writeMem(0xe8e3, { 0x21, 0xdc, 0x48 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1c90, gbc.sp());
        EXPECT(0xe8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe8e3));
        EXPECT(0xdc, gbc.readMem(0xe8e4));
        EXPECT(0x48, gbc.readMem(0xe8e5));
        // 21 03C7
        gbc.setState(0x4083, 0xafa6, 0x2a00, 0x3620, 0x63ee, 0xe414, 0x0, 0x1);
        gbc.writeMem(0x4083, { 0x21, 0x93, 0x88 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xafa6, gbc.sp());
        EXPECT(0x4086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03C8
        gbc.setState(0x6b4, 0xde3a, 0x5dd0, 0xd01, 0x8c85, 0x8be2, 0x0, 0x0);
        gbc.writeMem(0x6b4, { 0x21, 0x16, 0xb1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xde3a, gbc.sp());
        EXPECT(0x6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03C9
        gbc.setState(0x83a8, 0x3872, 0x23d0, 0x9e16, 0x80fe, 0xde9b, 0x0, 0x0);
        gbc.writeMem(0x83a8, { 0x21, 0x1f, 0xcd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3872, gbc.sp());
        EXPECT(0x83ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x83a8));
        EXPECT(0x1f, gbc.readMem(0x83a9));
        EXPECT(0xcd, gbc.readMem(0x83aa));
        // 21 03CA
        gbc.setState(0x884a, 0x4ae, 0x4ee0, 0x29e7, 0x6fc0, 0x25fc, 0x0, 0x0);
        gbc.writeMem(0x884a, { 0x21, 0xc3, 0xcd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4ae, gbc.sp());
        EXPECT(0x884d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x884a));
        EXPECT(0xc3, gbc.readMem(0x884b));
        EXPECT(0xcd, gbc.readMem(0x884c));
        // 21 03CB
        gbc.setState(0xddb3, 0xf83f, 0x8050, 0xf089, 0x4a0c, 0xccbc, 0x1, 0x0);
        gbc.writeMem(0xddb3, { 0x21, 0x1b, 0xf6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf83f, gbc.sp());
        EXPECT(0xddb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xddb3));
        EXPECT(0x1b, gbc.readMem(0xddb4));
        EXPECT(0xf6, gbc.readMem(0xddb5));
        // 21 03CC
        gbc.setState(0x4c0f, 0x4d90, 0xc8a0, 0x82cd, 0xdb7e, 0xcd46, 0x1, 0x1);
        gbc.writeMem(0x4c0f, { 0x21, 0xf5, 0xcf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4d90, gbc.sp());
        EXPECT(0x4c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03CD
        gbc.setState(0x397f, 0x64ca, 0x2e00, 0xf581, 0x3100, 0xb497, 0x1, 0x0);
        gbc.writeMem(0x397f, { 0x21, 0xe6, 0x46 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x64ca, gbc.sp());
        EXPECT(0x3982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03CE
        gbc.setState(0xed7f, 0x30c8, 0xdb70, 0xa4bd, 0xec59, 0x9ccc, 0x0, 0x0);
        gbc.writeMem(0xed7f, { 0x21, 0x2b, 0xdd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x30c8, gbc.sp());
        EXPECT(0xed82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xed7f));
        EXPECT(0x2b, gbc.readMem(0xed80));
        EXPECT(0xdd, gbc.readMem(0xed81));
        // 21 03CF
        gbc.setState(0x90bb, 0x7e42, 0x77a0, 0x75af, 0x5a0b, 0xbf9d, 0x0, 0x1);
        gbc.writeMem(0x90bb, { 0x21, 0xb4, 0xa });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7e42, gbc.sp());
        EXPECT(0x90be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x90bb));
        EXPECT(0xb4, gbc.readMem(0x90bc));
        EXPECT(0xa, gbc.readMem(0x90bd));
        // 21 03D0
        gbc.setState(0x74cc, 0xe50f, 0x8240, 0xde03, 0xd24b, 0x9630, 0x0, 0x1);
        gbc.writeMem(0x74cc, { 0x21, 0xef, 0x92 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe50f, gbc.sp());
        EXPECT(0x74cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03D1
        gbc.setState(0x8652, 0x724a, 0xe4a0, 0x2395, 0xee4f, 0x61dd, 0x1, 0x0);
        gbc.writeMem(0x8652, { 0x21, 0xc6, 0xa9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x724a, gbc.sp());
        EXPECT(0x8655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8652));
        EXPECT(0xc6, gbc.readMem(0x8653));
        EXPECT(0xa9, gbc.readMem(0x8654));
        // 21 03D2
        gbc.setState(0xa61, 0xe5e5, 0x5a90, 0x6b21, 0x5841, 0xea96, 0x1, 0x1);
        gbc.writeMem(0xa61, { 0x21, 0xe6, 0xcc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe5e5, gbc.sp());
        EXPECT(0xa64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03D3
        gbc.setState(0x2980, 0xcdf2, 0x1140, 0xdbf3, 0x6957, 0x8148, 0x1, 0x0);
        gbc.writeMem(0x2980, { 0x21, 0xbd, 0xad });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcdf2, gbc.sp());
        EXPECT(0x2983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03D4
        gbc.setState(0xeef1, 0x6566, 0x9e30, 0x8bd0, 0x2995, 0x9d83, 0x0, 0x0);
        gbc.writeMem(0xeef1, { 0x21, 0x93, 0xfd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6566, gbc.sp());
        EXPECT(0xeef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xeef1));
        EXPECT(0x93, gbc.readMem(0xeef2));
        EXPECT(0xfd, gbc.readMem(0xeef3));
        // 21 03D6
        gbc.setState(0x897a, 0xf14a, 0xd4b0, 0xaa6b, 0xac00, 0x6dc, 0x0, 0x0);
        gbc.writeMem(0x897a, { 0x21, 0x9e, 0x56 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf14a, gbc.sp());
        EXPECT(0x897d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x897a));
        EXPECT(0x9e, gbc.readMem(0x897b));
        EXPECT(0x56, gbc.readMem(0x897c));
        // 21 03D8
        gbc.setState(0xccc7, 0x47bf, 0x6ce0, 0xfd83, 0xcbc, 0xbc19, 0x0, 0x0);
        gbc.writeMem(0xccc7, { 0x21, 0x75, 0x2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x47bf, gbc.sp());
        EXPECT(0xccca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xccc7));
        EXPECT(0x75, gbc.readMem(0xccc8));
        EXPECT(0x2, gbc.readMem(0xccc9));
        // 21 03D9
        gbc.setState(0x2a06, 0xa3a9, 0x54a0, 0xd1b7, 0xebce, 0x188c, 0x1, 0x1);
        gbc.writeMem(0x2a06, { 0x21, 0xac, 0xfb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa3a9, gbc.sp());
        EXPECT(0x2a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03DA
        gbc.setState(0x151c, 0x232a, 0x8220, 0x9cad, 0x683, 0x39aa, 0x1, 0x0);
        gbc.writeMem(0x151c, { 0x21, 0xde, 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x232a, gbc.sp());
        EXPECT(0x151f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03DB
        gbc.setState(0x9d9d, 0x80a5, 0x6e80, 0xb7b, 0x2aae, 0x2cc3, 0x0, 0x0);
        gbc.writeMem(0x9d9d, { 0x21, 0x1, 0xaf });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x80a5, gbc.sp());
        EXPECT(0x9da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9d9d));
        EXPECT(0x1, gbc.readMem(0x9d9e));
        EXPECT(0xaf, gbc.readMem(0x9d9f));
        // 21 03DC
        gbc.setState(0x549e, 0x26da, 0xf880, 0xfae, 0x559c, 0xfe3d, 0x1, 0x0);
        gbc.writeMem(0x549e, { 0x21, 0x77, 0x60 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x26da, gbc.sp());
        EXPECT(0x54a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03DD
        gbc.setState(0xb75f, 0x1f4f, 0x5d10, 0xe60b, 0x4d61, 0xa843, 0x1, 0x1);
        gbc.writeMem(0xb75f, { 0x21, 0x77, 0xcb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1f4f, gbc.sp());
        EXPECT(0xb762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb75f));
        EXPECT(0x77, gbc.readMem(0xb760));
        EXPECT(0xcb, gbc.readMem(0xb761));
        // 21 03DE
        gbc.setState(0x126a, 0x7384, 0xae0, 0xa33c, 0xa927, 0x312a, 0x1, 0x1);
        gbc.writeMem(0x126a, { 0x21, 0x52, 0x67 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7384, gbc.sp());
        EXPECT(0x126d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03DF
        gbc.setState(0x8c68, 0xb31f, 0xc5d0, 0x6640, 0xa34, 0xc542, 0x1, 0x0);
        gbc.writeMem(0x8c68, { 0x21, 0x3b, 0x87 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb31f, gbc.sp());
        EXPECT(0x8c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8c68));
        EXPECT(0x3b, gbc.readMem(0x8c69));
        EXPECT(0x87, gbc.readMem(0x8c6a));
        // 21 03E0
        gbc.setState(0x8936, 0xb92d, 0xbad0, 0x6c5f, 0xd055, 0xd505, 0x1, 0x0);
        gbc.writeMem(0x8936, { 0x21, 0xb1, 0xa6 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb92d, gbc.sp());
        EXPECT(0x8939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8936));
        EXPECT(0xb1, gbc.readMem(0x8937));
        EXPECT(0xa6, gbc.readMem(0x8938));
        // 21 03E1
        gbc.setState(0xb9b3, 0x9d0f, 0x6210, 0xac9e, 0x194a, 0x14c0, 0x0, 0x0);
        gbc.writeMem(0xb9b3, { 0x21, 0x52, 0x9e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9d0f, gbc.sp());
        EXPECT(0xb9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb9b3));
        EXPECT(0x52, gbc.readMem(0xb9b4));
        EXPECT(0x9e, gbc.readMem(0xb9b5));
        // 21 03E2
        gbc.setState(0x5173, 0x5d6d, 0x1c0, 0x1a38, 0x13c2, 0xdf42, 0x0, 0x0);
        gbc.writeMem(0x5173, { 0x21, 0x86, 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5d6d, gbc.sp());
        EXPECT(0x5176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03E4
        gbc.setState(0x2d9f, 0x6c3f, 0x4630, 0xf263, 0x941c, 0x37e7, 0x0, 0x1);
        gbc.writeMem(0x2d9f, { 0x21, 0x0, 0xba });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6c3f, gbc.sp());
        EXPECT(0x2da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03E5
        gbc.setState(0x1e50, 0xc823, 0xb420, 0xf9a6, 0x8bd4, 0x17c, 0x1, 0x1);
        gbc.writeMem(0x1e50, { 0x21, 0x9f, 0xa });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc823, gbc.sp());
        EXPECT(0x1e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 21 03E6
        gbc.setState(0x41f1, 0x6387, 0x6290, 0xe741, 0x9cce, 0xde3a, 0x1, 0x0);
        gbc.writeMem(0x41f1, { 0x21, 0xd9, 0x94 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6387, gbc.sp());
        EXPECT(0x41f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 21 03E7
        gbc.setState(0xe735, 0xe42a, 0xea00, 0x14dc, 0x4f4a, 0x7414, 0x1, 0x1);
        gbc.writeMem(0xe735, { 0x21, 0x44, 0x44 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe42a, gbc.sp());
        EXPECT(0xe738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe735));
        EXPECT(0x44, gbc.readMem(0xe736));
        EXPECT(0x44, gbc.readMem(0xe737));
    }
