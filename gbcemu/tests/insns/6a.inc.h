    TEST(gbcemu, opcode_6a) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 6A 0000
        gbc.setState(0xea3b, 0x508, 0xf110, 0x4170, 0x4aff, 0x51b0, 0x0, 0x0);
        gbc.writeMem(0xea3b, { 0x6a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x508, gbc.sp());
        EXPECT(0xea3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xea3b));
        // 6A 0001
        gbc.setState(0x9b7a, 0x310e, 0x44c0, 0x2f8, 0x849c, 0x14e3, 0x1, 0x1);
        gbc.writeMem(0x9b7a, { 0x6a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x310e, gbc.sp());
        EXPECT(0x9b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9b7a));
        // 6A 0002
        gbc.setState(0xcfec, 0xc8d2, 0x66b0, 0x3a2e, 0x11b8, 0x8cba, 0x1, 0x0);
        gbc.writeMem(0xcfec, { 0x6a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc8d2, gbc.sp());
        EXPECT(0xcfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcfec));
        // 6A 0003
        gbc.setState(0x7615, 0x32cc, 0x7c20, 0x48b4, 0xfebf, 0x6fcc, 0x1, 0x0);
        gbc.writeMem(0x7615, { 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x32cc, gbc.sp());
        EXPECT(0x7616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0004
        gbc.setState(0x6dcc, 0x5a8d, 0x2cf0, 0x9703, 0x10ca, 0x4ab4, 0x1, 0x0);
        gbc.writeMem(0x6dcc, { 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5a8d, gbc.sp());
        EXPECT(0x6dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0005
        gbc.setState(0x3cbe, 0xda3d, 0xb8b0, 0x92f2, 0x81b8, 0xe0f8, 0x1, 0x1);
        gbc.writeMem(0x3cbe, { 0x6a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xda3d, gbc.sp());
        EXPECT(0x3cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0006
        gbc.setState(0x95a, 0xc9e5, 0x2b30, 0xf456, 0xf221, 0xfed8, 0x1, 0x0);
        gbc.writeMem(0x95a, { 0x6a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc9e5, gbc.sp());
        EXPECT(0x95b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0007
        gbc.setState(0x26ee, 0xabbe, 0x9cf0, 0x9a39, 0x6aaf, 0x4546, 0x0, 0x0);
        gbc.writeMem(0x26ee, { 0x6a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xabbe, gbc.sp());
        EXPECT(0x26ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0008
        gbc.setState(0x97, 0x2e41, 0x4010, 0x995e, 0x1a30, 0x6fad, 0x1, 0x0);
        gbc.writeMem(0x97, { 0x6a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2e41, gbc.sp());
        EXPECT(0x98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0009
        gbc.setState(0x895a, 0x55e7, 0x900, 0xdd51, 0x123e, 0x94b7, 0x0, 0x0);
        gbc.writeMem(0x895a, { 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x55e7, gbc.sp());
        EXPECT(0x895b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x895a));
        // 6A 000A
        gbc.setState(0xc9d8, 0x872c, 0x1f70, 0x8b62, 0x4c95, 0xe6f8, 0x1, 0x1);
        gbc.writeMem(0xc9d8, { 0x6a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x872c, gbc.sp());
        EXPECT(0xc9d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc9d8));
        // 6A 000B
        gbc.setState(0xe45b, 0x37b6, 0x96a0, 0xbb7b, 0xebb6, 0xa7f1, 0x0, 0x1);
        gbc.writeMem(0xe45b, { 0x6a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x37b6, gbc.sp());
        EXPECT(0xe45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe45b));
        // 6A 000C
        gbc.setState(0x9fb, 0x9eab, 0xc180, 0xbdec, 0x3ac7, 0xffc, 0x1, 0x0);
        gbc.writeMem(0x9fb, { 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9eab, gbc.sp());
        EXPECT(0x9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 000D
        gbc.setState(0x4b54, 0xa437, 0xe880, 0x3dfa, 0xec0c, 0x3f0d, 0x0, 0x1);
        gbc.writeMem(0x4b54, { 0x6a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa437, gbc.sp());
        EXPECT(0x4b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 000E
        gbc.setState(0x52bd, 0x66aa, 0xd40, 0x121b, 0x4465, 0x2248, 0x0, 0x1);
        gbc.writeMem(0x52bd, { 0x6a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x66aa, gbc.sp());
        EXPECT(0x52be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0010
        gbc.setState(0xe81a, 0xf1e6, 0x8c80, 0x71bf, 0x994a, 0xd289, 0x1, 0x1);
        gbc.writeMem(0xe81a, { 0x6a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf1e6, gbc.sp());
        EXPECT(0xe81b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe81a));
        // 6A 0011
        gbc.setState(0x254f, 0x2524, 0x41f0, 0x3e72, 0x18c5, 0xdab0, 0x0, 0x1);
        gbc.writeMem(0x254f, { 0x6a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2524, gbc.sp());
        EXPECT(0x2550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0012
        gbc.setState(0xa2f3, 0xe1f1, 0xdc70, 0xb098, 0x4e47, 0x8d49, 0x0, 0x1);
        gbc.writeMem(0xa2f3, { 0x6a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe1f1, gbc.sp());
        EXPECT(0xa2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa2f3));
        // 6A 0013
        gbc.setState(0xf9c, 0x43ef, 0xa6c0, 0x5449, 0xdba7, 0xf151, 0x1, 0x0);
        gbc.writeMem(0xf9c, { 0x6a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x43ef, gbc.sp());
        EXPECT(0xf9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0014
        gbc.setState(0x3235, 0xbdcd, 0xb250, 0xe603, 0xc2c5, 0x5f9e, 0x1, 0x1);
        gbc.writeMem(0x3235, { 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbdcd, gbc.sp());
        EXPECT(0x3236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0015
        gbc.setState(0x4d2e, 0x4555, 0xd330, 0xcc75, 0x5cd7, 0x6fef, 0x0, 0x0);
        gbc.writeMem(0x4d2e, { 0x6a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4555, gbc.sp());
        EXPECT(0x4d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0016
        gbc.setState(0xb3a5, 0x2a30, 0x23a0, 0xd1a4, 0xfdcc, 0xa753, 0x1, 0x1);
        gbc.writeMem(0xb3a5, { 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2a30, gbc.sp());
        EXPECT(0xb3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb3a5));
        // 6A 0017
        gbc.setState(0xcd48, 0x7b59, 0x8600, 0xb8b0, 0x2c81, 0x24a, 0x1, 0x1);
        gbc.writeMem(0xcd48, { 0x6a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7b59, gbc.sp());
        EXPECT(0xcd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcd48));
        // 6A 0018
        gbc.setState(0xd7b6, 0xcf6a, 0xf520, 0x54f8, 0x780d, 0x60af, 0x1, 0x1);
        gbc.writeMem(0xd7b6, { 0x6a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0xd7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd7b6));
        // 6A 0019
        gbc.setState(0x39c0, 0xefea, 0x1540, 0xb2b, 0x435c, 0xbd08, 0x0, 0x0);
        gbc.writeMem(0x39c0, { 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xefea, gbc.sp());
        EXPECT(0x39c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 001A
        gbc.setState(0xe595, 0x5c60, 0x58f0, 0x56f9, 0x466c, 0xd780, 0x0, 0x1);
        gbc.writeMem(0xe595, { 0x6a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5c60, gbc.sp());
        EXPECT(0xe596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe595));
        // 6A 001B
        gbc.setState(0xea62, 0x1828, 0x4b00, 0x5a97, 0x925c, 0x69dc, 0x1, 0x0);
        gbc.writeMem(0xea62, { 0x6a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1828, gbc.sp());
        EXPECT(0xea63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xea62));
        // 6A 001C
        gbc.setState(0x880b, 0x5af7, 0x5c80, 0x4424, 0xa799, 0xac63, 0x1, 0x0);
        gbc.writeMem(0x880b, { 0x6a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5af7, gbc.sp());
        EXPECT(0x880c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x880b));
        // 6A 001D
        gbc.setState(0x3942, 0xba86, 0xf390, 0x8e16, 0xfb24, 0x9a, 0x0, 0x0);
        gbc.writeMem(0x3942, { 0x6a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xba86, gbc.sp());
        EXPECT(0x3943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 001E
        gbc.setState(0xa73a, 0xf18b, 0xeb80, 0x248b, 0x5b1b, 0x41b9, 0x1, 0x1);
        gbc.writeMem(0xa73a, { 0x6a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf18b, gbc.sp());
        EXPECT(0xa73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa73a));
        // 6A 001F
        gbc.setState(0xd00f, 0x7c36, 0x9b20, 0x8355, 0x3b03, 0xa0f1, 0x0, 0x1);
        gbc.writeMem(0xd00f, { 0x6a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7c36, gbc.sp());
        EXPECT(0xd010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd00f));
        // 6A 0020
        gbc.setState(0x212b, 0x79f9, 0x14f0, 0xfe70, 0xf691, 0xb7fa, 0x1, 0x1);
        gbc.writeMem(0x212b, { 0x6a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x79f9, gbc.sp());
        EXPECT(0x212c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0021
        gbc.setState(0x57d5, 0x6724, 0x6bf0, 0xf25e, 0x9323, 0xbb10, 0x1, 0x0);
        gbc.writeMem(0x57d5, { 0x6a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6724, gbc.sp());
        EXPECT(0x57d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0022
        gbc.setState(0x5207, 0x504c, 0x2ef0, 0xf061, 0x4bfd, 0x2c14, 0x1, 0x0);
        gbc.writeMem(0x5207, { 0x6a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x504c, gbc.sp());
        EXPECT(0x5208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0023
        gbc.setState(0xa979, 0x206b, 0xb010, 0xc1d9, 0x1b9d, 0xaef8, 0x0, 0x0);
        gbc.writeMem(0xa979, { 0x6a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x206b, gbc.sp());
        EXPECT(0xa97a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa979));
        // 6A 0024
        gbc.setState(0x2584, 0xffa3, 0x36d0, 0x304c, 0x6f48, 0xd2b, 0x0, 0x1);
        gbc.writeMem(0x2584, { 0x6a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xffa3, gbc.sp());
        EXPECT(0x2585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0025
        gbc.setState(0x995e, 0xff40, 0x2710, 0x5237, 0x45f2, 0x306e, 0x0, 0x0);
        gbc.writeMem(0x995e, { 0x6a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xff40, gbc.sp());
        EXPECT(0x995f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x995e));
        // 6A 0026
        gbc.setState(0x91a8, 0xb76f, 0xe1c0, 0x9685, 0xb53b, 0xea08, 0x0, 0x1);
        gbc.writeMem(0x91a8, { 0x6a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb76f, gbc.sp());
        EXPECT(0x91a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x91a8));
        // 6A 0027
        gbc.setState(0x2f0c, 0xacf4, 0xeef0, 0x1a92, 0x9ea5, 0xdc42, 0x1, 0x0);
        gbc.writeMem(0x2f0c, { 0x6a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xacf4, gbc.sp());
        EXPECT(0x2f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0029
        gbc.setState(0x1e6c, 0xa339, 0xa8d0, 0x4814, 0xe0a1, 0xfc6f, 0x0, 0x1);
        gbc.writeMem(0x1e6c, { 0x6a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa339, gbc.sp());
        EXPECT(0x1e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 002A
        gbc.setState(0x579a, 0x7ae1, 0x640, 0x5a55, 0xd1b3, 0x3e90, 0x0, 0x1);
        gbc.writeMem(0x579a, { 0x6a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7ae1, gbc.sp());
        EXPECT(0x579b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 002B
        gbc.setState(0xb5ae, 0x4fc3, 0xb330, 0xe895, 0x3bd6, 0xd7ff, 0x0, 0x0);
        gbc.writeMem(0xb5ae, { 0x6a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4fc3, gbc.sp());
        EXPECT(0xb5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb5ae));
        // 6A 002C
        gbc.setState(0x2e41, 0xec16, 0xe380, 0xfc76, 0x839, 0xe63b, 0x1, 0x1);
        gbc.writeMem(0x2e41, { 0x6a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xec16, gbc.sp());
        EXPECT(0x2e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 002E
        gbc.setState(0x8c2d, 0xcd07, 0xc9f0, 0x1bd7, 0xf171, 0x6a1a, 0x1, 0x1);
        gbc.writeMem(0x8c2d, { 0x6a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcd07, gbc.sp());
        EXPECT(0x8c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8c2d));
        // 6A 002F
        gbc.setState(0xcf82, 0xa2e4, 0x50e0, 0x262b, 0xce3d, 0x85ea, 0x1, 0x0);
        gbc.writeMem(0xcf82, { 0x6a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa2e4, gbc.sp());
        EXPECT(0xcf83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcf82));
        // 6A 0030
        gbc.setState(0x8283, 0x4435, 0x7450, 0xfe83, 0x744d, 0x6d77, 0x1, 0x0);
        gbc.writeMem(0x8283, { 0x6a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4435, gbc.sp());
        EXPECT(0x8284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8283));
        // 6A 0031
        gbc.setState(0x436c, 0x6c, 0xc050, 0x1bae, 0xd504, 0x17ec, 0x0, 0x1);
        gbc.writeMem(0x436c, { 0x6a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6c, gbc.sp());
        EXPECT(0x436d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0032
        gbc.setState(0x637d, 0x570d, 0xb760, 0xb3d0, 0x5a28, 0xa225, 0x0, 0x1);
        gbc.writeMem(0x637d, { 0x6a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x570d, gbc.sp());
        EXPECT(0x637e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0033
        gbc.setState(0x2203, 0x7502, 0x7c50, 0x6e18, 0xbd09, 0x2b98, 0x1, 0x1);
        gbc.writeMem(0x2203, { 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7502, gbc.sp());
        EXPECT(0x2204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0034
        gbc.setState(0x2194, 0x85, 0x5bc0, 0x3253, 0x67ff, 0x9b91, 0x1, 0x1);
        gbc.writeMem(0x2194, { 0x6a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x85, gbc.sp());
        EXPECT(0x2195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0035
        gbc.setState(0x17b6, 0x7ac3, 0x35c0, 0x1a0a, 0x77dc, 0xb226, 0x0, 0x0);
        gbc.writeMem(0x17b6, { 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7ac3, gbc.sp());
        EXPECT(0x17b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0036
        gbc.setState(0x8832, 0x241e, 0xc6d0, 0x5e79, 0x9f6f, 0xb313, 0x0, 0x0);
        gbc.writeMem(0x8832, { 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x241e, gbc.sp());
        EXPECT(0x8833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8832));
        // 6A 0037
        gbc.setState(0x1970, 0xd517, 0x4380, 0x980d, 0xe558, 0x3a10, 0x0, 0x0);
        gbc.writeMem(0x1970, { 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd517, gbc.sp());
        EXPECT(0x1971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0038
        gbc.setState(0x240, 0x6653, 0x67a0, 0x1699, 0xc1b4, 0x30c0, 0x0, 0x1);
        gbc.writeMem(0x240, { 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6653, gbc.sp());
        EXPECT(0x241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0039
        gbc.setState(0x95d2, 0x3647, 0x1ed0, 0x6f3a, 0x3f56, 0xfdc7, 0x1, 0x0);
        gbc.writeMem(0x95d2, { 0x6a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3647, gbc.sp());
        EXPECT(0x95d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x95d2));
        // 6A 003A
        gbc.setState(0x7fce, 0x25bd, 0x690, 0x5999, 0xfb2, 0x93a3, 0x0, 0x1);
        gbc.writeMem(0x7fce, { 0x6a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x25bd, gbc.sp());
        EXPECT(0x7fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 003B
        gbc.setState(0x4e36, 0x89b1, 0x66a0, 0xca5c, 0x63b8, 0x180c, 0x0, 0x1);
        gbc.writeMem(0x4e36, { 0x6a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x89b1, gbc.sp());
        EXPECT(0x4e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 003C
        gbc.setState(0xeb28, 0xc8aa, 0x9d0, 0xcf83, 0x780d, 0x7de8, 0x1, 0x0);
        gbc.writeMem(0xeb28, { 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc8aa, gbc.sp());
        EXPECT(0xeb29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xeb28));
        // 6A 003D
        gbc.setState(0xc4ef, 0x6ee8, 0xdfb0, 0x4572, 0x8963, 0x4e44, 0x0, 0x1);
        gbc.writeMem(0xc4ef, { 0x6a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6ee8, gbc.sp());
        EXPECT(0xc4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc4ef));
        // 6A 003E
        gbc.setState(0xa9e1, 0x79a5, 0x8690, 0xa9fe, 0xee3b, 0xb4f6, 0x1, 0x0);
        gbc.writeMem(0xa9e1, { 0x6a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x79a5, gbc.sp());
        EXPECT(0xa9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa9e1));
        // 6A 003F
        gbc.setState(0x97cb, 0xa2db, 0x1590, 0xdf50, 0x580b, 0x8ed1, 0x0, 0x1);
        gbc.writeMem(0x97cb, { 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa2db, gbc.sp());
        EXPECT(0x97cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x97cb));
        // 6A 0040
        gbc.setState(0x85a7, 0xf65f, 0x15f0, 0x7f1c, 0xcf6c, 0xdb9, 0x0, 0x0);
        gbc.writeMem(0x85a7, { 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf65f, gbc.sp());
        EXPECT(0x85a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x85a7));
        // 6A 0041
        gbc.setState(0x3958, 0x8bf6, 0xe580, 0x7d89, 0xbf1a, 0x5a37, 0x0, 0x0);
        gbc.writeMem(0x3958, { 0x6a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8bf6, gbc.sp());
        EXPECT(0x3959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0042
        gbc.setState(0x1b17, 0x4104, 0x2930, 0xa147, 0x219b, 0x2ad2, 0x0, 0x0);
        gbc.writeMem(0x1b17, { 0x6a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4104, gbc.sp());
        EXPECT(0x1b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0043
        gbc.setState(0xae67, 0xeca4, 0xa210, 0x22d4, 0x5f4c, 0x56fb, 0x1, 0x1);
        gbc.writeMem(0xae67, { 0x6a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xeca4, gbc.sp());
        EXPECT(0xae68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xae67));
        // 6A 0044
        gbc.setState(0x71c8, 0x4838, 0x8b0, 0xd3a9, 0x8dcb, 0x38f6, 0x0, 0x0);
        gbc.writeMem(0x71c8, { 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4838, gbc.sp());
        EXPECT(0x71c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0045
        gbc.setState(0xd71d, 0xe791, 0x3d10, 0xff2d, 0x14fe, 0x419e, 0x1, 0x1);
        gbc.writeMem(0xd71d, { 0x6a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe791, gbc.sp());
        EXPECT(0xd71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd71d));
        // 6A 0046
        gbc.setState(0x7017, 0xde9f, 0x6f70, 0x4da8, 0xc484, 0xf427, 0x1, 0x0);
        gbc.writeMem(0x7017, { 0x6a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xde9f, gbc.sp());
        EXPECT(0x7018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0047
        gbc.setState(0x7ea6, 0x8c95, 0xd820, 0xe8f, 0xcec8, 0xfdfb, 0x0, 0x1);
        gbc.writeMem(0x7ea6, { 0x6a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8c95, gbc.sp());
        EXPECT(0x7ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0048
        gbc.setState(0x5d47, 0xad70, 0xbb10, 0x2c90, 0x8cd3, 0x4512, 0x1, 0x1);
        gbc.writeMem(0x5d47, { 0x6a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xad70, gbc.sp());
        EXPECT(0x5d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0049
        gbc.setState(0x4a9f, 0x54d4, 0x89b0, 0xddfc, 0xac5d, 0x45e9, 0x0, 0x1);
        gbc.writeMem(0x4a9f, { 0x6a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x54d4, gbc.sp());
        EXPECT(0x4aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 004A
        gbc.setState(0xbd09, 0xb283, 0xc0f0, 0x74a4, 0xb546, 0x2c39, 0x1, 0x1);
        gbc.writeMem(0xbd09, { 0x6a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb283, gbc.sp());
        EXPECT(0xbd0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbd09));
        // 6A 004B
        gbc.setState(0xc3d8, 0xba, 0x1260, 0x3729, 0x589a, 0x15cc, 0x1, 0x0);
        gbc.writeMem(0xc3d8, { 0x6a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xba, gbc.sp());
        EXPECT(0xc3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc3d8));
        // 6A 004C
        gbc.setState(0xaa16, 0xa443, 0x1490, 0x548a, 0x90d9, 0xbe6f, 0x0, 0x1);
        gbc.writeMem(0xaa16, { 0x6a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa443, gbc.sp());
        EXPECT(0xaa17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xaa16));
        // 6A 004D
        gbc.setState(0xdaa8, 0xcf80, 0x62a0, 0x415f, 0x3f88, 0x2f8d, 0x0, 0x0);
        gbc.writeMem(0xdaa8, { 0x6a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcf80, gbc.sp());
        EXPECT(0xdaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdaa8));
        // 6A 004E
        gbc.setState(0x1e48, 0x7ab, 0x6e70, 0xe0cb, 0x7db8, 0xa40f, 0x0, 0x1);
        gbc.writeMem(0x1e48, { 0x6a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0x1e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 004F
        gbc.setState(0xc32e, 0xc0e8, 0xcf10, 0x5436, 0xdf3f, 0x9924, 0x0, 0x0);
        gbc.writeMem(0xc32e, { 0x6a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0xc32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc32e));
        // 6A 0050
        gbc.setState(0xa2a7, 0xa15e, 0xe450, 0x79f5, 0xa4db, 0x95ed, 0x1, 0x0);
        gbc.writeMem(0xa2a7, { 0x6a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa15e, gbc.sp());
        EXPECT(0xa2a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa2a7));
        // 6A 0051
        gbc.setState(0xaa83, 0xaa23, 0xfae0, 0xd6c, 0xe2c3, 0xc4cc, 0x1, 0x1);
        gbc.writeMem(0xaa83, { 0x6a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xaa23, gbc.sp());
        EXPECT(0xaa84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xaa83));
        // 6A 0052
        gbc.setState(0xd25c, 0x7ee, 0xada0, 0x937c, 0xa10b, 0xcab4, 0x0, 0x0);
        gbc.writeMem(0xd25c, { 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7ee, gbc.sp());
        EXPECT(0xd25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd25c));
        // 6A 0055
        gbc.setState(0x1305, 0x8b83, 0x42d0, 0x1dd5, 0x5374, 0x61f7, 0x1, 0x0);
        gbc.writeMem(0x1305, { 0x6a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8b83, gbc.sp());
        EXPECT(0x1306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0056
        gbc.setState(0x6201, 0x6b33, 0x11f0, 0xc280, 0x727e, 0x6ad7, 0x0, 0x0);
        gbc.writeMem(0x6201, { 0x6a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6b33, gbc.sp());
        EXPECT(0x6202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0057
        gbc.setState(0x760, 0x36dc, 0xf980, 0xa4d5, 0x878b, 0xd1da, 0x0, 0x0);
        gbc.writeMem(0x760, { 0x6a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x36dc, gbc.sp());
        EXPECT(0x761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0058
        gbc.setState(0xcc79, 0xaff3, 0xfca0, 0x53c0, 0xcbcf, 0x76b0, 0x0, 0x0);
        gbc.writeMem(0xcc79, { 0x6a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaff3, gbc.sp());
        EXPECT(0xcc7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcc79));
        // 6A 0059
        gbc.setState(0xca77, 0x7e65, 0x2010, 0x1150, 0xb4d9, 0x2919, 0x0, 0x0);
        gbc.writeMem(0xca77, { 0x6a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7e65, gbc.sp());
        EXPECT(0xca78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xca77));
        // 6A 005A
        gbc.setState(0x1e40, 0x5711, 0x5e0, 0xcb59, 0xf4ea, 0x143b, 0x1, 0x0);
        gbc.writeMem(0x1e40, { 0x6a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5711, gbc.sp());
        EXPECT(0x1e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 005B
        gbc.setState(0xe012, 0x321b, 0x5ca0, 0xde85, 0xfadb, 0x27e, 0x0, 0x0);
        gbc.writeMem(0xe012, { 0x6a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x321b, gbc.sp());
        EXPECT(0xe013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe012));
        // 6A 005C
        gbc.setState(0x74df, 0x38e7, 0x6cb0, 0x2aa9, 0xcc9b, 0x4bfe, 0x1, 0x0);
        gbc.writeMem(0x74df, { 0x6a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x38e7, gbc.sp());
        EXPECT(0x74e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 005D
        gbc.setState(0xd70, 0xcce1, 0xf360, 0x368f, 0xdb5, 0x5b78, 0x1, 0x1);
        gbc.writeMem(0xd70, { 0x6a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcce1, gbc.sp());
        EXPECT(0xd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 005E
        gbc.setState(0xe6d9, 0x9d1a, 0x3cf0, 0x2076, 0x820a, 0x1100, 0x0, 0x0);
        gbc.writeMem(0xe6d9, { 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9d1a, gbc.sp());
        EXPECT(0xe6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe6d9));
        // 6A 005F
        gbc.setState(0xfb8, 0x276f, 0x3560, 0xaf5b, 0xe79d, 0xb69c, 0x1, 0x1);
        gbc.writeMem(0xfb8, { 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x276f, gbc.sp());
        EXPECT(0xfb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0060
        gbc.setState(0xb063, 0xebae, 0x3db0, 0xd6ac, 0x1526, 0x120b, 0x1, 0x1);
        gbc.writeMem(0xb063, { 0x6a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xebae, gbc.sp());
        EXPECT(0xb064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb063));
        // 6A 0061
        gbc.setState(0x9e7a, 0xb4b1, 0xdc0, 0xea1a, 0xfc8e, 0xd4be, 0x1, 0x1);
        gbc.writeMem(0x9e7a, { 0x6a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb4b1, gbc.sp());
        EXPECT(0x9e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9e7a));
        // 6A 0062
        gbc.setState(0xeab6, 0xa7b9, 0x1460, 0x6fc3, 0x7a7d, 0xea4a, 0x0, 0x0);
        gbc.writeMem(0xeab6, { 0x6a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa7b9, gbc.sp());
        EXPECT(0xeab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xeab6));
        // 6A 0063
        gbc.setState(0x57d3, 0x61e9, 0x6070, 0xf8af, 0xe8f2, 0xc032, 0x1, 0x0);
        gbc.writeMem(0x57d3, { 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x61e9, gbc.sp());
        EXPECT(0x57d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0064
        gbc.setState(0x1322, 0xed0, 0x9810, 0x4f70, 0x31a0, 0xef3b, 0x0, 0x0);
        gbc.writeMem(0x1322, { 0x6a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xed0, gbc.sp());
        EXPECT(0x1323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0065
        gbc.setState(0x74db, 0x5743, 0x92e0, 0x1dce, 0xb330, 0x7555, 0x0, 0x1);
        gbc.writeMem(0x74db, { 0x6a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5743, gbc.sp());
        EXPECT(0x74dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0066
        gbc.setState(0xa2a, 0x9a00, 0xc170, 0xb1a, 0x2a95, 0xe11b, 0x1, 0x1);
        gbc.writeMem(0xa2a, { 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9a00, gbc.sp());
        EXPECT(0xa2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0067
        gbc.setState(0xda1b, 0x2e4, 0x4aa0, 0x3db8, 0x7b0e, 0xc194, 0x0, 0x1);
        gbc.writeMem(0xda1b, { 0x6a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2e4, gbc.sp());
        EXPECT(0xda1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xda1b));
        // 6A 0068
        gbc.setState(0xa0b, 0x5cbf, 0xc690, 0x6875, 0xcdf7, 0x9c47, 0x0, 0x1);
        gbc.writeMem(0xa0b, { 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5cbf, gbc.sp());
        EXPECT(0xa0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0069
        gbc.setState(0xef19, 0x637c, 0x6860, 0x92c6, 0xcfc7, 0x845d, 0x0, 0x1);
        gbc.writeMem(0xef19, { 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x637c, gbc.sp());
        EXPECT(0xef1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xef19));
        // 6A 006A
        gbc.setState(0x23e3, 0x235, 0x8650, 0xdce6, 0x19cb, 0xbb55, 0x1, 0x0);
        gbc.writeMem(0x23e3, { 0x6a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x235, gbc.sp());
        EXPECT(0x23e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 006B
        gbc.setState(0x76e1, 0x64f8, 0x9e00, 0x8b7d, 0xd628, 0x2f4b, 0x0, 0x1);
        gbc.writeMem(0x76e1, { 0x6a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x64f8, gbc.sp());
        EXPECT(0x76e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 006C
        gbc.setState(0xab60, 0x49cd, 0x7a40, 0x97d2, 0x2040, 0xaa22, 0x1, 0x1);
        gbc.writeMem(0xab60, { 0x6a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x49cd, gbc.sp());
        EXPECT(0xab61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xab60));
        // 6A 006D
        gbc.setState(0x7a08, 0xb40f, 0x9a30, 0xe968, 0x9f57, 0x862f, 0x0, 0x1);
        gbc.writeMem(0x7a08, { 0x6a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb40f, gbc.sp());
        EXPECT(0x7a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 006E
        gbc.setState(0x2508, 0x55ed, 0xa200, 0xeb0a, 0xeaa7, 0x535, 0x0, 0x0);
        gbc.writeMem(0x2508, { 0x6a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x55ed, gbc.sp());
        EXPECT(0x2509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 006F
        gbc.setState(0x60d5, 0x7769, 0xd5a0, 0x997b, 0x13fc, 0xf9f5, 0x0, 0x0);
        gbc.writeMem(0x60d5, { 0x6a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7769, gbc.sp());
        EXPECT(0x60d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0070
        gbc.setState(0x96e6, 0x1a19, 0x5370, 0x6dfc, 0xa97e, 0xe0de, 0x0, 0x0);
        gbc.writeMem(0x96e6, { 0x6a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1a19, gbc.sp());
        EXPECT(0x96e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x96e6));
        // 6A 0071
        gbc.setState(0xbaab, 0xdad, 0x7830, 0xea45, 0xb809, 0xbc54, 0x1, 0x1);
        gbc.writeMem(0xbaab, { 0x6a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdad, gbc.sp());
        EXPECT(0xbaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbaab));
        // 6A 0072
        gbc.setState(0x2774, 0xd0c8, 0x9f80, 0xe7b0, 0x9af9, 0x534c, 0x1, 0x1);
        gbc.writeMem(0x2774, { 0x6a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd0c8, gbc.sp());
        EXPECT(0x2775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0073
        gbc.setState(0x2eea, 0xaead, 0x6a80, 0x7c61, 0x88c0, 0xfc6d, 0x0, 0x0);
        gbc.writeMem(0x2eea, { 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xaead, gbc.sp());
        EXPECT(0x2eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0074
        gbc.setState(0x47dc, 0x7a0, 0x7e30, 0x644c, 0x487a, 0x241b, 0x1, 0x0);
        gbc.writeMem(0x47dc, { 0x6a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7a0, gbc.sp());
        EXPECT(0x47dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0075
        gbc.setState(0xdc94, 0x226a, 0x25d0, 0xa9dc, 0xef64, 0xe719, 0x0, 0x0);
        gbc.writeMem(0xdc94, { 0x6a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x226a, gbc.sp());
        EXPECT(0xdc95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdc94));
        // 6A 0076
        gbc.setState(0x8e09, 0xba73, 0x8a90, 0xb5f5, 0x365, 0x5419, 0x1, 0x1);
        gbc.writeMem(0x8e09, { 0x6a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xba73, gbc.sp());
        EXPECT(0x8e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8e09));
        // 6A 0078
        gbc.setState(0x3bfc, 0xca25, 0xcc80, 0x2bc4, 0xacf0, 0x6e3e, 0x1, 0x0);
        gbc.writeMem(0x3bfc, { 0x6a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xca25, gbc.sp());
        EXPECT(0x3bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0079
        gbc.setState(0x1f14, 0xcaf6, 0x9a10, 0x69f, 0xa5ea, 0x5728, 0x0, 0x1);
        gbc.writeMem(0x1f14, { 0x6a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcaf6, gbc.sp());
        EXPECT(0x1f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 007A
        gbc.setState(0x70cd, 0x253e, 0xe9d0, 0x63f9, 0x4fa8, 0x695c, 0x1, 0x0);
        gbc.writeMem(0x70cd, { 0x6a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x253e, gbc.sp());
        EXPECT(0x70ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 007B
        gbc.setState(0xdf8f, 0x9a75, 0xc990, 0xa4c4, 0x9a4, 0xcb9f, 0x0, 0x0);
        gbc.writeMem(0xdf8f, { 0x6a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9a75, gbc.sp());
        EXPECT(0xdf90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdf8f));
        // 6A 007C
        gbc.setState(0x6650, 0x6d3f, 0x6df0, 0x5200, 0x2c76, 0x88df, 0x0, 0x0);
        gbc.writeMem(0x6650, { 0x6a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6d3f, gbc.sp());
        EXPECT(0x6651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 007D
        gbc.setState(0xb551, 0xc228, 0xe210, 0x4c2f, 0xc57c, 0x9ec, 0x1, 0x1);
        gbc.writeMem(0xb551, { 0x6a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc228, gbc.sp());
        EXPECT(0xb552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb551));
        // 6A 007F
        gbc.setState(0x9cbe, 0xe5ba, 0xcd70, 0x78b5, 0xe054, 0xd474, 0x1, 0x1);
        gbc.writeMem(0x9cbe, { 0x6a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe5ba, gbc.sp());
        EXPECT(0x9cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9cbe));
        // 6A 0080
        gbc.setState(0x3ffb, 0xaf51, 0xa6b0, 0x327f, 0xb3fc, 0x9397, 0x0, 0x1);
        gbc.writeMem(0x3ffb, { 0x6a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xaf51, gbc.sp());
        EXPECT(0x3ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0081
        gbc.setState(0xe40c, 0xf33f, 0x4ff0, 0x6eac, 0xc54, 0x6d36, 0x1, 0x0);
        gbc.writeMem(0xe40c, { 0x6a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf33f, gbc.sp());
        EXPECT(0xe40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe40c));
        // 6A 0082
        gbc.setState(0xe499, 0xc13c, 0x5820, 0xa785, 0x4540, 0xfb0, 0x0, 0x1);
        gbc.writeMem(0xe499, { 0x6a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc13c, gbc.sp());
        EXPECT(0xe49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe499));
        // 6A 0083
        gbc.setState(0x8960, 0xdad6, 0xc560, 0x2ccd, 0x59c8, 0x90db, 0x1, 0x1);
        gbc.writeMem(0x8960, { 0x6a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdad6, gbc.sp());
        EXPECT(0x8961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8960));
        // 6A 0084
        gbc.setState(0xec23, 0x578a, 0x56b0, 0x815c, 0x943f, 0x42e0, 0x1, 0x0);
        gbc.writeMem(0xec23, { 0x6a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x578a, gbc.sp());
        EXPECT(0xec24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xec23));
        // 6A 0085
        gbc.setState(0x79bb, 0xe913, 0x45d0, 0xe031, 0x4db5, 0x24fd, 0x1, 0x1);
        gbc.writeMem(0x79bb, { 0x6a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe913, gbc.sp());
        EXPECT(0x79bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0086
        gbc.setState(0x661c, 0x35d7, 0x9580, 0xce6c, 0xb23, 0x7621, 0x1, 0x0);
        gbc.writeMem(0x661c, { 0x6a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x35d7, gbc.sp());
        EXPECT(0x661d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0087
        gbc.setState(0xdce3, 0x2d6f, 0x3b0, 0xb4cc, 0xb50c, 0x4b, 0x1, 0x1);
        gbc.writeMem(0xdce3, { 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2d6f, gbc.sp());
        EXPECT(0xdce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdce3));
        // 6A 0088
        gbc.setState(0xa3b4, 0x6a27, 0xd080, 0xdddc, 0x9683, 0xc364, 0x1, 0x0);
        gbc.writeMem(0xa3b4, { 0x6a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6a27, gbc.sp());
        EXPECT(0xa3b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa3b4));
        // 6A 0089
        gbc.setState(0x8cfd, 0x71fb, 0x5d30, 0x80ad, 0xd6dc, 0x7fc2, 0x1, 0x1);
        gbc.writeMem(0x8cfd, { 0x6a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x71fb, gbc.sp());
        EXPECT(0x8cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8cfd));
        // 6A 008B
        gbc.setState(0xc543, 0x1c49, 0xa790, 0x2d33, 0x9f29, 0xa19, 0x1, 0x1);
        gbc.writeMem(0xc543, { 0x6a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1c49, gbc.sp());
        EXPECT(0xc544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc543));
        // 6A 008C
        gbc.setState(0x5535, 0xffd4, 0x35f0, 0xc68c, 0xa86a, 0x6a3d, 0x0, 0x1);
        gbc.writeMem(0x5535, { 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xffd4, gbc.sp());
        EXPECT(0x5536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 008D
        gbc.setState(0x6c87, 0xeb67, 0x2d60, 0x372c, 0x7bab, 0xe887, 0x1, 0x0);
        gbc.writeMem(0x6c87, { 0x6a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xeb67, gbc.sp());
        EXPECT(0x6c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 008E
        gbc.setState(0x9888, 0xfcdc, 0xa70, 0xa6be, 0x8be8, 0x4512, 0x1, 0x0);
        gbc.writeMem(0x9888, { 0x6a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfcdc, gbc.sp());
        EXPECT(0x9889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9888));
        // 6A 008F
        gbc.setState(0x8456, 0xc9ae, 0x2740, 0x2ae5, 0xd18a, 0x7e20, 0x0, 0x1);
        gbc.writeMem(0x8456, { 0x6a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc9ae, gbc.sp());
        EXPECT(0x8457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8456));
        // 6A 0090
        gbc.setState(0x8d53, 0x15f1, 0xd420, 0x7f3b, 0x2313, 0x8cfe, 0x1, 0x0);
        gbc.writeMem(0x8d53, { 0x6a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x15f1, gbc.sp());
        EXPECT(0x8d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8d53));
        // 6A 0092
        gbc.setState(0x3d83, 0x1faf, 0x2690, 0x7abb, 0x1844, 0xe65c, 0x0, 0x1);
        gbc.writeMem(0x3d83, { 0x6a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1faf, gbc.sp());
        EXPECT(0x3d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0093
        gbc.setState(0x5851, 0x6c07, 0xcf70, 0x8c5a, 0x55de, 0xf523, 0x0, 0x0);
        gbc.writeMem(0x5851, { 0x6a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6c07, gbc.sp());
        EXPECT(0x5852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0094
        gbc.setState(0x860b, 0x8574, 0xf60, 0xd119, 0x4281, 0xf2de, 0x1, 0x0);
        gbc.writeMem(0x860b, { 0x6a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8574, gbc.sp());
        EXPECT(0x860c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x860b));
        // 6A 0095
        gbc.setState(0xa1c4, 0xe559, 0x12f0, 0xb3a9, 0xae58, 0x5b4f, 0x1, 0x1);
        gbc.writeMem(0xa1c4, { 0x6a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe559, gbc.sp());
        EXPECT(0xa1c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa1c4));
        // 6A 0096
        gbc.setState(0x44e0, 0x9378, 0x1ff0, 0xdc19, 0x7f82, 0x4dd9, 0x0, 0x1);
        gbc.writeMem(0x44e0, { 0x6a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9378, gbc.sp());
        EXPECT(0x44e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0097
        gbc.setState(0x54b2, 0x7d19, 0xe5d0, 0x958, 0x77f6, 0x282a, 0x1, 0x1);
        gbc.writeMem(0x54b2, { 0x6a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7d19, gbc.sp());
        EXPECT(0x54b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0098
        gbc.setState(0xa933, 0x2f77, 0x3ee0, 0xf533, 0x304e, 0x8df1, 0x0, 0x1);
        gbc.writeMem(0xa933, { 0x6a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2f77, gbc.sp());
        EXPECT(0xa934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa933));
        // 6A 0099
        gbc.setState(0x181d, 0x8d7a, 0xe560, 0x71fa, 0x784c, 0x498e, 0x0, 0x0);
        gbc.writeMem(0x181d, { 0x6a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8d7a, gbc.sp());
        EXPECT(0x181e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 009A
        gbc.setState(0xdecd, 0x1133, 0xa420, 0xbefc, 0x5f8, 0x33d5, 0x1, 0x0);
        gbc.writeMem(0xdecd, { 0x6a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1133, gbc.sp());
        EXPECT(0xdece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdecd));
        // 6A 009B
        gbc.setState(0x7d55, 0xd5c0, 0xa030, 0xb8c0, 0x6349, 0x2661, 0x1, 0x0);
        gbc.writeMem(0x7d55, { 0x6a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd5c0, gbc.sp());
        EXPECT(0x7d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 009C
        gbc.setState(0x6f1, 0x254, 0xb50, 0xba16, 0x2816, 0x2f5b, 0x0, 0x0);
        gbc.writeMem(0x6f1, { 0x6a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x254, gbc.sp());
        EXPECT(0x6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 009D
        gbc.setState(0x1aba, 0xbbc, 0x20a0, 0x17b6, 0x5be3, 0xb524, 0x0, 0x0);
        gbc.writeMem(0x1aba, { 0x6a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbbc, gbc.sp());
        EXPECT(0x1abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 009E
        gbc.setState(0x395f, 0x4299, 0xade0, 0xaad2, 0x2c94, 0xef32, 0x0, 0x0);
        gbc.writeMem(0x395f, { 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4299, gbc.sp());
        EXPECT(0x3960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 009F
        gbc.setState(0x644d, 0xd87c, 0x62f0, 0x8bb1, 0x7dcd, 0x2c07, 0x1, 0x0);
        gbc.writeMem(0x644d, { 0x6a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd87c, gbc.sp());
        EXPECT(0x644e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00A0
        gbc.setState(0xd121, 0x11a6, 0x42f0, 0xd946, 0x47e2, 0xbe7e, 0x1, 0x0);
        gbc.writeMem(0xd121, { 0x6a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x11a6, gbc.sp());
        EXPECT(0xd122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd121));
        // 6A 00A1
        gbc.setState(0xe71, 0x9013, 0x2350, 0x82af, 0xc5fa, 0xe48c, 0x1, 0x1);
        gbc.writeMem(0xe71, { 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9013, gbc.sp());
        EXPECT(0xe72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00A2
        gbc.setState(0xd01a, 0x43a1, 0xd070, 0x4b9c, 0xa075, 0xc2c7, 0x1, 0x0);
        gbc.writeMem(0xd01a, { 0x6a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x43a1, gbc.sp());
        EXPECT(0xd01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd01a));
        // 6A 00A3
        gbc.setState(0x8b5f, 0x211, 0xb2b0, 0xc166, 0x7866, 0x36fa, 0x1, 0x1);
        gbc.writeMem(0x8b5f, { 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x211, gbc.sp());
        EXPECT(0x8b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8b5f));
        // 6A 00A4
        gbc.setState(0xce8d, 0x4d0c, 0x4ac0, 0x50a9, 0xd20d, 0x9be1, 0x1, 0x0);
        gbc.writeMem(0xce8d, { 0x6a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4d0c, gbc.sp());
        EXPECT(0xce8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xce8d));
        // 6A 00A5
        gbc.setState(0x18f5, 0xb2ce, 0x920, 0xc87e, 0x2443, 0x263b, 0x0, 0x1);
        gbc.writeMem(0x18f5, { 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb2ce, gbc.sp());
        EXPECT(0x18f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00A6
        gbc.setState(0xbb98, 0xf187, 0x8880, 0x6d6f, 0x792d, 0x6120, 0x1, 0x0);
        gbc.writeMem(0xbb98, { 0x6a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf187, gbc.sp());
        EXPECT(0xbb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbb98));
        // 6A 00A7
        gbc.setState(0x6559, 0x2869, 0x4b70, 0xed8f, 0xc54a, 0xd9a6, 0x1, 0x1);
        gbc.writeMem(0x6559, { 0x6a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2869, gbc.sp());
        EXPECT(0x655a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00A8
        gbc.setState(0xe8b2, 0xaa26, 0xfe10, 0xfd0d, 0x12c6, 0x6db0, 0x1, 0x1);
        gbc.writeMem(0xe8b2, { 0x6a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0xe8b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe8b2));
        // 6A 00A9
        gbc.setState(0x849b, 0x5d59, 0x3c80, 0xbec2, 0x25be, 0x9004, 0x1, 0x0);
        gbc.writeMem(0x849b, { 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5d59, gbc.sp());
        EXPECT(0x849c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x849b));
        // 6A 00AA
        gbc.setState(0x5698, 0xa45f, 0xa740, 0xb9e3, 0xa50a, 0x3bce, 0x1, 0x1);
        gbc.writeMem(0x5698, { 0x6a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa45f, gbc.sp());
        EXPECT(0x5699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00AC
        gbc.setState(0xb902, 0x2b77, 0x320, 0x3d96, 0x3b80, 0x822, 0x0, 0x1);
        gbc.writeMem(0xb902, { 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2b77, gbc.sp());
        EXPECT(0xb903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb902));
        // 6A 00AD
        gbc.setState(0xa55, 0x16c1, 0x4630, 0x1c3f, 0x26a8, 0x5847, 0x0, 0x0);
        gbc.writeMem(0xa55, { 0x6a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x16c1, gbc.sp());
        EXPECT(0xa56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00AE
        gbc.setState(0x8265, 0xb49a, 0xf960, 0x677e, 0x25ea, 0x5580, 0x0, 0x0);
        gbc.writeMem(0x8265, { 0x6a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb49a, gbc.sp());
        EXPECT(0x8266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8265));
        // 6A 00AF
        gbc.setState(0x1c2d, 0xdd00, 0x19b0, 0x2924, 0xe39a, 0x6429, 0x0, 0x0);
        gbc.writeMem(0x1c2d, { 0x6a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdd00, gbc.sp());
        EXPECT(0x1c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00B0
        gbc.setState(0x4e87, 0x3d3d, 0xb280, 0xda3c, 0xbaf5, 0xd1c2, 0x0, 0x1);
        gbc.writeMem(0x4e87, { 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3d3d, gbc.sp());
        EXPECT(0x4e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00B1
        gbc.setState(0x86c2, 0xf1b9, 0x4500, 0xd74f, 0x8b19, 0xf628, 0x0, 0x1);
        gbc.writeMem(0x86c2, { 0x6a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf1b9, gbc.sp());
        EXPECT(0x86c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x86c2));
        // 6A 00B2
        gbc.setState(0xc830, 0xc1a3, 0x800, 0x2ee4, 0xf69b, 0x1fb8, 0x1, 0x0);
        gbc.writeMem(0xc830, { 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc1a3, gbc.sp());
        EXPECT(0xc831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc830));
        // 6A 00B3
        gbc.setState(0xa2f1, 0x3b6e, 0x67c0, 0x9415, 0xee3c, 0x494, 0x0, 0x0);
        gbc.writeMem(0xa2f1, { 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3b6e, gbc.sp());
        EXPECT(0xa2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa2f1));
        // 6A 00B4
        gbc.setState(0xd9df, 0xceef, 0xc3e0, 0xe03a, 0x132e, 0x4c5c, 0x1, 0x0);
        gbc.writeMem(0xd9df, { 0x6a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xceef, gbc.sp());
        EXPECT(0xd9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd9df));
        // 6A 00B5
        gbc.setState(0x628, 0xd89e, 0xed90, 0xa3b9, 0xcc18, 0xa2b1, 0x1, 0x1);
        gbc.writeMem(0x628, { 0x6a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd89e, gbc.sp());
        EXPECT(0x629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00B6
        gbc.setState(0x1c3e, 0xd57a, 0x6710, 0x712d, 0x5afd, 0x1bcc, 0x1, 0x1);
        gbc.writeMem(0x1c3e, { 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd57a, gbc.sp());
        EXPECT(0x1c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00B7
        gbc.setState(0xce1f, 0x5826, 0xfd00, 0xfdaf, 0x89ee, 0xe903, 0x1, 0x1);
        gbc.writeMem(0xce1f, { 0x6a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5826, gbc.sp());
        EXPECT(0xce20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xce1f));
        // 6A 00B8
        gbc.setState(0x71a6, 0x15e7, 0x4850, 0x6ac9, 0xc6e, 0x93b1, 0x1, 0x0);
        gbc.writeMem(0x71a6, { 0x6a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x15e7, gbc.sp());
        EXPECT(0x71a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00B9
        gbc.setState(0x4de4, 0x5188, 0xf7c0, 0xda1c, 0x51e4, 0x1c7c, 0x0, 0x0);
        gbc.writeMem(0x4de4, { 0x6a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5188, gbc.sp());
        EXPECT(0x4de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00BA
        gbc.setState(0x4a2d, 0xf58b, 0xf670, 0x78b6, 0x97a8, 0xcac9, 0x1, 0x1);
        gbc.writeMem(0x4a2d, { 0x6a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf58b, gbc.sp());
        EXPECT(0x4a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00BB
        gbc.setState(0x134d, 0x39b9, 0xaaf0, 0xd7cb, 0xbc9f, 0xcb63, 0x0, 0x0);
        gbc.writeMem(0x134d, { 0x6a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x39b9, gbc.sp());
        EXPECT(0x134e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00BC
        gbc.setState(0xe894, 0xf378, 0x84f0, 0xe18f, 0xca50, 0x3f89, 0x0, 0x1);
        gbc.writeMem(0xe894, { 0x6a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf378, gbc.sp());
        EXPECT(0xe895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe894));
        // 6A 00BD
        gbc.setState(0x7a1e, 0xe190, 0xf9b0, 0x6ec7, 0x8c7c, 0x22eb, 0x1, 0x1);
        gbc.writeMem(0x7a1e, { 0x6a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0x7a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00BE
        gbc.setState(0x9dbb, 0xfe87, 0x7c80, 0x57ab, 0x2014, 0xdc20, 0x1, 0x1);
        gbc.writeMem(0x9dbb, { 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfe87, gbc.sp());
        EXPECT(0x9dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9dbb));
        // 6A 00BF
        gbc.setState(0x2904, 0xd112, 0x6d80, 0x9fd7, 0xd202, 0xece0, 0x1, 0x1);
        gbc.writeMem(0x2904, { 0x6a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd112, gbc.sp());
        EXPECT(0x2905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00C0
        gbc.setState(0xc661, 0xfd6c, 0x6000, 0x9046, 0x3580, 0xdcb8, 0x0, 0x0);
        gbc.writeMem(0xc661, { 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfd6c, gbc.sp());
        EXPECT(0xc662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc661));
        // 6A 00C1
        gbc.setState(0x5aae, 0xafe5, 0x3600, 0x4b59, 0xb131, 0xea1e, 0x1, 0x0);
        gbc.writeMem(0x5aae, { 0x6a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xafe5, gbc.sp());
        EXPECT(0x5aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00C2
        gbc.setState(0x74fe, 0x57e4, 0xd100, 0x87de, 0x1937, 0x448d, 0x0, 0x1);
        gbc.writeMem(0x74fe, { 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x57e4, gbc.sp());
        EXPECT(0x74ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00C3
        gbc.setState(0x87ac, 0x4084, 0xb3c0, 0xb9aa, 0x7148, 0x4253, 0x0, 0x0);
        gbc.writeMem(0x87ac, { 0x6a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4084, gbc.sp());
        EXPECT(0x87ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x87ac));
        // 6A 00C4
        gbc.setState(0x6552, 0x8277, 0x97c0, 0x7854, 0xcd7f, 0x131c, 0x1, 0x1);
        gbc.writeMem(0x6552, { 0x6a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8277, gbc.sp());
        EXPECT(0x6553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00C5
        gbc.setState(0x433c, 0xcc41, 0x6590, 0xf432, 0x78ef, 0x129c, 0x1, 0x1);
        gbc.writeMem(0x433c, { 0x6a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcc41, gbc.sp());
        EXPECT(0x433d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00C7
        gbc.setState(0xcf78, 0xffbb, 0x820, 0x4f48, 0x694, 0xf3e0, 0x1, 0x1);
        gbc.writeMem(0xcf78, { 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xffbb, gbc.sp());
        EXPECT(0xcf79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcf78));
        // 6A 00C8
        gbc.setState(0xe8bb, 0x12eb, 0x89f0, 0x75d6, 0xa459, 0x3ffb, 0x1, 0x1);
        gbc.writeMem(0xe8bb, { 0x6a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x12eb, gbc.sp());
        EXPECT(0xe8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe8bb));
        // 6A 00C9
        gbc.setState(0xe8f6, 0xac9f, 0xdb10, 0x2687, 0x957c, 0x2923, 0x1, 0x0);
        gbc.writeMem(0xe8f6, { 0x6a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xac9f, gbc.sp());
        EXPECT(0xe8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe8f6));
        // 6A 00CA
        gbc.setState(0x929c, 0xcffa, 0x8cc0, 0xca81, 0x94e8, 0xea14, 0x0, 0x1);
        gbc.writeMem(0x929c, { 0x6a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcffa, gbc.sp());
        EXPECT(0x929d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x929c));
        // 6A 00CB
        gbc.setState(0xe635, 0xb6cc, 0x6bf0, 0x7e9e, 0x9ff2, 0x6154, 0x0, 0x1);
        gbc.writeMem(0xe635, { 0x6a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb6cc, gbc.sp());
        EXPECT(0xe636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe635));
        // 6A 00CC
        gbc.setState(0x19b1, 0x8938, 0xcbc0, 0x1fc4, 0xe8f7, 0x7923, 0x1, 0x1);
        gbc.writeMem(0x19b1, { 0x6a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8938, gbc.sp());
        EXPECT(0x19b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00CD
        gbc.setState(0xd7f2, 0xc775, 0x3b0, 0x22a0, 0x42c8, 0x61c4, 0x1, 0x1);
        gbc.writeMem(0xd7f2, { 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc775, gbc.sp());
        EXPECT(0xd7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd7f2));
        // 6A 00CE
        gbc.setState(0x873, 0xce2d, 0x19d0, 0x17db, 0x69b1, 0x111e, 0x1, 0x1);
        gbc.writeMem(0x873, { 0x6a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xce2d, gbc.sp());
        EXPECT(0x874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00CF
        gbc.setState(0x1b57, 0xb2f, 0xf7b0, 0xb547, 0x99b7, 0x80d0, 0x1, 0x1);
        gbc.writeMem(0x1b57, { 0x6a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb2f, gbc.sp());
        EXPECT(0x1b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00D0
        gbc.setState(0x79ae, 0xee32, 0x5110, 0x60ef, 0xf2e3, 0x7812, 0x0, 0x0);
        gbc.writeMem(0x79ae, { 0x6a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xee32, gbc.sp());
        EXPECT(0x79af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00D1
        gbc.setState(0xe4a9, 0xfb05, 0x40d0, 0xaae1, 0x9173, 0xe1e0, 0x1, 0x0);
        gbc.writeMem(0xe4a9, { 0x6a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfb05, gbc.sp());
        EXPECT(0xe4aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe4a9));
        // 6A 00D2
        gbc.setState(0xcc8d, 0x4019, 0x5e80, 0x1636, 0x1c51, 0xd3c3, 0x0, 0x0);
        gbc.writeMem(0xcc8d, { 0x6a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4019, gbc.sp());
        EXPECT(0xcc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcc8d));
        // 6A 00D4
        gbc.setState(0xee2b, 0xc587, 0x6f00, 0xdfa8, 0x3a32, 0x83fe, 0x1, 0x1);
        gbc.writeMem(0xee2b, { 0x6a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc587, gbc.sp());
        EXPECT(0xee2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xee2b));
        // 6A 00D5
        gbc.setState(0xd214, 0xd86d, 0xe30, 0x2ebe, 0xeeff, 0x4e0d, 0x0, 0x1);
        gbc.writeMem(0xd214, { 0x6a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd86d, gbc.sp());
        EXPECT(0xd215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd214));
        // 6A 00D6
        gbc.setState(0xaa80, 0xecc4, 0x18a0, 0xd980, 0x9ffd, 0x6e80, 0x1, 0x0);
        gbc.writeMem(0xaa80, { 0x6a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xecc4, gbc.sp());
        EXPECT(0xaa81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xaa80));
        // 6A 00D7
        gbc.setState(0x8bab, 0xaad2, 0x24a0, 0xdb23, 0xa273, 0x7562, 0x1, 0x0);
        gbc.writeMem(0x8bab, { 0x6a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaad2, gbc.sp());
        EXPECT(0x8bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8bab));
        // 6A 00D8
        gbc.setState(0xdec2, 0x6d8c, 0xc540, 0x4f1, 0x7640, 0x78f5, 0x1, 0x1);
        gbc.writeMem(0xdec2, { 0x6a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6d8c, gbc.sp());
        EXPECT(0xdec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdec2));
        // 6A 00D9
        gbc.setState(0xea20, 0xfd33, 0x8730, 0xae93, 0x8eda, 0x32a4, 0x1, 0x1);
        gbc.writeMem(0xea20, { 0x6a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfd33, gbc.sp());
        EXPECT(0xea21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xea20));
        // 6A 00DA
        gbc.setState(0x2169, 0x7806, 0x9c90, 0xee4b, 0x170, 0x4ae8, 0x0, 0x1);
        gbc.writeMem(0x2169, { 0x6a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7806, gbc.sp());
        EXPECT(0x216a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00DB
        gbc.setState(0xff1, 0x9c55, 0xfc40, 0xf465, 0xfab1, 0x20df, 0x1, 0x1);
        gbc.writeMem(0xff1, { 0x6a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9c55, gbc.sp());
        EXPECT(0xff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00DC
        gbc.setState(0xbfbe, 0xd12, 0x9400, 0x403e, 0x9e66, 0x733f, 0x0, 0x1);
        gbc.writeMem(0xbfbe, { 0x6a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd12, gbc.sp());
        EXPECT(0xbfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbfbe));
        // 6A 00DD
        gbc.setState(0xdaa8, 0xdfa0, 0x6650, 0xc699, 0xb826, 0x2364, 0x1, 0x1);
        gbc.writeMem(0xdaa8, { 0x6a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdfa0, gbc.sp());
        EXPECT(0xdaa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdaa8));
        // 6A 00DE
        gbc.setState(0xe9ee, 0xba8, 0xba20, 0x1af7, 0x846c, 0x1cd, 0x0, 0x1);
        gbc.writeMem(0xe9ee, { 0x6a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xba8, gbc.sp());
        EXPECT(0xe9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe9ee));
        // 6A 00DF
        gbc.setState(0x8c12, 0x4b64, 0x76f0, 0x70c1, 0x7a3b, 0xccfa, 0x1, 0x0);
        gbc.writeMem(0x8c12, { 0x6a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4b64, gbc.sp());
        EXPECT(0x8c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8c12));
        // 6A 00E0
        gbc.setState(0x6acc, 0x3eb8, 0x3510, 0xd70b, 0x4d8, 0x8d6a, 0x0, 0x0);
        gbc.writeMem(0x6acc, { 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3eb8, gbc.sp());
        EXPECT(0x6acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00E1
        gbc.setState(0xea02, 0xf94d, 0xfe10, 0x2b06, 0xe9be, 0x2339, 0x0, 0x1);
        gbc.writeMem(0xea02, { 0x6a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf94d, gbc.sp());
        EXPECT(0xea03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xea02));
        // 6A 00E2
        gbc.setState(0x6586, 0x3daa, 0x4530, 0x5d1d, 0xa047, 0xfec8, 0x0, 0x0);
        gbc.writeMem(0x6586, { 0x6a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3daa, gbc.sp());
        EXPECT(0x6587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00E4
        gbc.setState(0xa420, 0xa169, 0x4720, 0x5d31, 0xe893, 0xfa44, 0x0, 0x0);
        gbc.writeMem(0xa420, { 0x6a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa169, gbc.sp());
        EXPECT(0xa421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa420));
        // 6A 00E5
        gbc.setState(0x8fbf, 0xba6a, 0x41e0, 0x52f5, 0xba3b, 0x6446, 0x1, 0x1);
        gbc.writeMem(0x8fbf, { 0x6a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xba6a, gbc.sp());
        EXPECT(0x8fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8fbf));
        // 6A 00E6
        gbc.setState(0x51ab, 0x9f3e, 0x9d10, 0x3b28, 0xa111, 0x1261, 0x0, 0x0);
        gbc.writeMem(0x51ab, { 0x6a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9f3e, gbc.sp());
        EXPECT(0x51ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00E7
        gbc.setState(0x8b99, 0xd994, 0xc850, 0xfe72, 0xd880, 0x228, 0x0, 0x0);
        gbc.writeMem(0x8b99, { 0x6a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd994, gbc.sp());
        EXPECT(0x8b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8b99));
        // 6A 00E8
        gbc.setState(0xc7b4, 0x933f, 0xae30, 0x98b0, 0xa410, 0x1e7a, 0x0, 0x1);
        gbc.writeMem(0xc7b4, { 0x6a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x933f, gbc.sp());
        EXPECT(0xc7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc7b4));
        // 6A 00EB
        gbc.setState(0x89df, 0x4f1d, 0x4a60, 0x3fc4, 0xd799, 0x6ee9, 0x0, 0x0);
        gbc.writeMem(0x89df, { 0x6a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4f1d, gbc.sp());
        EXPECT(0x89e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x89df));
        // 6A 00EC
        gbc.setState(0x8ccc, 0xee71, 0xc8c0, 0xeb2c, 0x9e2b, 0x14bf, 0x0, 0x1);
        gbc.writeMem(0x8ccc, { 0x6a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xee71, gbc.sp());
        EXPECT(0x8ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8ccc));
        // 6A 00ED
        gbc.setState(0x8ca7, 0x8027, 0xdc0, 0xbf9d, 0x6d97, 0x1ba5, 0x1, 0x0);
        gbc.writeMem(0x8ca7, { 0x6a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8027, gbc.sp());
        EXPECT(0x8ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8ca7));
        // 6A 00EE
        gbc.setState(0x6f58, 0x9273, 0xa060, 0xa86a, 0xa71e, 0xe33b, 0x0, 0x0);
        gbc.writeMem(0x6f58, { 0x6a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9273, gbc.sp());
        EXPECT(0x6f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00EF
        gbc.setState(0xcd2b, 0x965f, 0xfa20, 0x2667, 0xd92b, 0xee58, 0x1, 0x0);
        gbc.writeMem(0xcd2b, { 0x6a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x965f, gbc.sp());
        EXPECT(0xcd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcd2b));
        // 6A 00F0
        gbc.setState(0x3d15, 0x10ad, 0xea30, 0x6238, 0x8f66, 0xc09e, 0x1, 0x1);
        gbc.writeMem(0x3d15, { 0x6a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x10ad, gbc.sp());
        EXPECT(0x3d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00F1
        gbc.setState(0x3a0f, 0xf5ab, 0xda80, 0xccb2, 0xa22, 0xb0c5, 0x0, 0x0);
        gbc.writeMem(0x3a0f, { 0x6a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf5ab, gbc.sp());
        EXPECT(0x3a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00F2
        gbc.setState(0xe09, 0x20a0, 0xfa90, 0xcf17, 0x60fc, 0x67f5, 0x0, 0x1);
        gbc.writeMem(0xe09, { 0x6a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x20a0, gbc.sp());
        EXPECT(0xe0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00F4
        gbc.setState(0x1319, 0x52f4, 0x2ac0, 0xbe23, 0x1e05, 0xf0c5, 0x1, 0x0);
        gbc.writeMem(0x1319, { 0x6a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x52f4, gbc.sp());
        EXPECT(0x131a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00F5
        gbc.setState(0x8eb7, 0xad6, 0x8330, 0xbc0, 0x129f, 0x8bca, 0x0, 0x0);
        gbc.writeMem(0x8eb7, { 0x6a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xad6, gbc.sp());
        EXPECT(0x8eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8eb7));
        // 6A 00F6
        gbc.setState(0x7a1b, 0x7bd1, 0x3bb0, 0x5c81, 0xc084, 0x96d0, 0x0, 0x1);
        gbc.writeMem(0x7a1b, { 0x6a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7bd1, gbc.sp());
        EXPECT(0x7a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00F7
        gbc.setState(0xd420, 0x631e, 0xbe40, 0x78de, 0xdbdd, 0x8cd7, 0x1, 0x1);
        gbc.writeMem(0xd420, { 0x6a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x631e, gbc.sp());
        EXPECT(0xd421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd420));
        // 6A 00F8
        gbc.setState(0x6a67, 0xb72f, 0x3940, 0x882e, 0x4326, 0xc3b3, 0x1, 0x0);
        gbc.writeMem(0x6a67, { 0x6a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb72f, gbc.sp());
        EXPECT(0x6a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 00F9
        gbc.setState(0x161f, 0xe04e, 0x57f0, 0xa2c6, 0xb087, 0x72c3, 0x1, 0x0);
        gbc.writeMem(0x161f, { 0x6a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe04e, gbc.sp());
        EXPECT(0x1620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00FA
        gbc.setState(0x8ad9, 0xbe88, 0x9df0, 0xf55f, 0x3e9f, 0x68d4, 0x0, 0x0);
        gbc.writeMem(0x8ad9, { 0x6a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbe88, gbc.sp());
        EXPECT(0x8ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8ad9));
        // 6A 00FB
        gbc.setState(0x7d6b, 0x5d4e, 0x4ad0, 0xcaa1, 0xf611, 0x4a93, 0x0, 0x1);
        gbc.writeMem(0x7d6b, { 0x6a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5d4e, gbc.sp());
        EXPECT(0x7d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00FC
        gbc.setState(0x8cee, 0x657, 0x2610, 0x4bc0, 0x7ae7, 0x836c, 0x1, 0x1);
        gbc.writeMem(0x8cee, { 0x6a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x657, gbc.sp());
        EXPECT(0x8cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8cee));
        // 6A 00FD
        gbc.setState(0x51, 0xaf33, 0xb190, 0x68f3, 0x12e0, 0x65df, 0x0, 0x1);
        gbc.writeMem(0x51, { 0x6a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaf33, gbc.sp());
        EXPECT(0x52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 00FE
        gbc.setState(0xb203, 0x3aa2, 0x7410, 0x7aff, 0xb322, 0xf3a4, 0x1, 0x0);
        gbc.writeMem(0xb203, { 0x6a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3aa2, gbc.sp());
        EXPECT(0xb204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb203));
        // 6A 00FF
        gbc.setState(0xda5a, 0x1c2b, 0x8510, 0x27f2, 0xc623, 0xf273, 0x1, 0x0);
        gbc.writeMem(0xda5a, { 0x6a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1c2b, gbc.sp());
        EXPECT(0xda5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xda5a));
        // 6A 0100
        gbc.setState(0x7711, 0x97fe, 0xb450, 0x68fa, 0xae2, 0x3851, 0x0, 0x1);
        gbc.writeMem(0x7711, { 0x6a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x97fe, gbc.sp());
        EXPECT(0x7712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0101
        gbc.setState(0xe333, 0x8fd2, 0x46c0, 0x7edb, 0xd951, 0xd3d1, 0x0, 0x1);
        gbc.writeMem(0xe333, { 0x6a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8fd2, gbc.sp());
        EXPECT(0xe334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe333));
        // 6A 0102
        gbc.setState(0x5816, 0xbc54, 0x9f50, 0xa25a, 0xa30b, 0x6e5e, 0x1, 0x1);
        gbc.writeMem(0x5816, { 0x6a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbc54, gbc.sp());
        EXPECT(0x5817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0103
        gbc.setState(0x9a3f, 0xbc37, 0xccb0, 0x9eea, 0x8d8d, 0x850b, 0x1, 0x1);
        gbc.writeMem(0x9a3f, { 0x6a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbc37, gbc.sp());
        EXPECT(0x9a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9a3f));
        // 6A 0104
        gbc.setState(0x692e, 0xcd9a, 0x3d40, 0x9ad8, 0x7d13, 0x9c56, 0x0, 0x0);
        gbc.writeMem(0x692e, { 0x6a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcd9a, gbc.sp());
        EXPECT(0x692f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0105
        gbc.setState(0x236d, 0xd77e, 0x3c10, 0x8bb2, 0xb8e4, 0x4b76, 0x1, 0x0);
        gbc.writeMem(0x236d, { 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd77e, gbc.sp());
        EXPECT(0x236e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0107
        gbc.setState(0x5cdb, 0x8255, 0x72c0, 0x8454, 0xd7f0, 0x9ce5, 0x0, 0x1);
        gbc.writeMem(0x5cdb, { 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8255, gbc.sp());
        EXPECT(0x5cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0108
        gbc.setState(0x752e, 0x262d, 0x9ba0, 0xb980, 0x6088, 0xe6, 0x0, 0x0);
        gbc.writeMem(0x752e, { 0x6a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x262d, gbc.sp());
        EXPECT(0x752f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0109
        gbc.setState(0xa019, 0xfe93, 0x6d20, 0x767, 0x8b7a, 0x765, 0x0, 0x0);
        gbc.writeMem(0xa019, { 0x6a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfe93, gbc.sp());
        EXPECT(0xa01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa019));
        // 6A 010A
        gbc.setState(0xe28e, 0x81f7, 0xe520, 0x71, 0xa3e4, 0x3888, 0x0, 0x0);
        gbc.writeMem(0xe28e, { 0x6a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x81f7, gbc.sp());
        EXPECT(0xe28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe28e));
        // 6A 010B
        gbc.setState(0xa4ce, 0x51b1, 0x7650, 0x2507, 0xc485, 0x2047, 0x1, 0x1);
        gbc.writeMem(0xa4ce, { 0x6a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x51b1, gbc.sp());
        EXPECT(0xa4cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa4ce));
        // 6A 010C
        gbc.setState(0x9fc5, 0x245b, 0xeb00, 0x20c1, 0xdee4, 0xfb53, 0x1, 0x0);
        gbc.writeMem(0x9fc5, { 0x6a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x245b, gbc.sp());
        EXPECT(0x9fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9fc5));
        // 6A 010D
        gbc.setState(0x52d, 0x3af4, 0xdf60, 0xf711, 0x89eb, 0xcea3, 0x1, 0x1);
        gbc.writeMem(0x52d, { 0x6a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3af4, gbc.sp());
        EXPECT(0x52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 010E
        gbc.setState(0x8d10, 0xba17, 0xe7b0, 0xd68b, 0x7fd0, 0xfd29, 0x1, 0x0);
        gbc.writeMem(0x8d10, { 0x6a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xba17, gbc.sp());
        EXPECT(0x8d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8d10));
        // 6A 010F
        gbc.setState(0x4f65, 0x10be, 0xc070, 0xe06e, 0x31ae, 0xa763, 0x1, 0x1);
        gbc.writeMem(0x4f65, { 0x6a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x10be, gbc.sp());
        EXPECT(0x4f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0110
        gbc.setState(0xbde5, 0x8612, 0x9060, 0x259a, 0xb080, 0xdcbe, 0x0, 0x1);
        gbc.writeMem(0xbde5, { 0x6a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8612, gbc.sp());
        EXPECT(0xbde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbde5));
        // 6A 0111
        gbc.setState(0x8a2c, 0x2495, 0xca90, 0xa6fb, 0x65a7, 0x673f, 0x1, 0x1);
        gbc.writeMem(0x8a2c, { 0x6a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2495, gbc.sp());
        EXPECT(0x8a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8a2c));
        // 6A 0113
        gbc.setState(0x83e7, 0x2001, 0xc1d0, 0xcd9, 0x21be, 0x335e, 0x1, 0x0);
        gbc.writeMem(0x83e7, { 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2001, gbc.sp());
        EXPECT(0x83e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x83e7));
        // 6A 0114
        gbc.setState(0x287e, 0xb95, 0xa750, 0x4293, 0xe3ad, 0x9a97, 0x1, 0x1);
        gbc.writeMem(0x287e, { 0x6a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb95, gbc.sp());
        EXPECT(0x287f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0115
        gbc.setState(0xdf17, 0xa5f0, 0xa050, 0xea87, 0x5002, 0xa92c, 0x0, 0x0);
        gbc.writeMem(0xdf17, { 0x6a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa5f0, gbc.sp());
        EXPECT(0xdf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdf17));
        // 6A 0116
        gbc.setState(0xb8e5, 0x1a5f, 0x4e40, 0xa4d5, 0xd2f7, 0x81ce, 0x1, 0x0);
        gbc.writeMem(0xb8e5, { 0x6a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1a5f, gbc.sp());
        EXPECT(0xb8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb8e5));
        // 6A 0117
        gbc.setState(0x1d41, 0xfd7e, 0xd5d0, 0x75e7, 0xcfa4, 0x8f3, 0x0, 0x1);
        gbc.writeMem(0x1d41, { 0x6a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfd7e, gbc.sp());
        EXPECT(0x1d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0118
        gbc.setState(0x54ee, 0x6b8e, 0x34d0, 0xf6fa, 0x93a8, 0xc7ff, 0x1, 0x1);
        gbc.writeMem(0x54ee, { 0x6a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6b8e, gbc.sp());
        EXPECT(0x54ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0119
        gbc.setState(0x2fe9, 0x9880, 0xfec0, 0xd7a4, 0x5587, 0x6763, 0x0, 0x0);
        gbc.writeMem(0x2fe9, { 0x6a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9880, gbc.sp());
        EXPECT(0x2fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 011A
        gbc.setState(0x30bb, 0xd8c6, 0xdfd0, 0x7260, 0x6a0c, 0xa1d5, 0x1, 0x1);
        gbc.writeMem(0x30bb, { 0x6a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd8c6, gbc.sp());
        EXPECT(0x30bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 011B
        gbc.setState(0xbb9d, 0x9a1d, 0xf270, 0xdf64, 0x90a, 0x10f5, 0x0, 0x1);
        gbc.writeMem(0xbb9d, { 0x6a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9a1d, gbc.sp());
        EXPECT(0xbb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbb9d));
        // 6A 011C
        gbc.setState(0x66cb, 0x901b, 0xb590, 0xe865, 0x6540, 0x3635, 0x1, 0x0);
        gbc.writeMem(0x66cb, { 0x6a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x901b, gbc.sp());
        EXPECT(0x66cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 011D
        gbc.setState(0x150d, 0x97f7, 0xcbe0, 0x4720, 0xc225, 0x5497, 0x1, 0x1);
        gbc.writeMem(0x150d, { 0x6a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x97f7, gbc.sp());
        EXPECT(0x150e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 011E
        gbc.setState(0x763c, 0xfc30, 0xc720, 0x8969, 0x8f4f, 0xd1b4, 0x1, 0x1);
        gbc.writeMem(0x763c, { 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfc30, gbc.sp());
        EXPECT(0x763d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 011F
        gbc.setState(0xdc6d, 0xe8cd, 0xfba0, 0xff88, 0x6a5, 0xb237, 0x0, 0x0);
        gbc.writeMem(0xdc6d, { 0x6a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe8cd, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdc6d));
        // 6A 0120
        gbc.setState(0xaa41, 0xab0b, 0x6df0, 0xf576, 0xf933, 0x4eb1, 0x0, 0x1);
        gbc.writeMem(0xaa41, { 0x6a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xab0b, gbc.sp());
        EXPECT(0xaa42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xaa41));
        // 6A 0121
        gbc.setState(0x80c6, 0xd09, 0x7930, 0x7e77, 0xcb37, 0x2d7c, 0x0, 0x1);
        gbc.writeMem(0x80c6, { 0x6a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd09, gbc.sp());
        EXPECT(0x80c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x80c6));
        // 6A 0122
        gbc.setState(0xd9da, 0xce27, 0xe170, 0xc110, 0xbe68, 0x7730, 0x0, 0x1);
        gbc.writeMem(0xd9da, { 0x6a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xce27, gbc.sp());
        EXPECT(0xd9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd9da));
        // 6A 0123
        gbc.setState(0x6a46, 0x313f, 0x4960, 0x5c5a, 0xc239, 0xd018, 0x0, 0x1);
        gbc.writeMem(0x6a46, { 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x313f, gbc.sp());
        EXPECT(0x6a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0124
        gbc.setState(0xafa0, 0xf2fc, 0x1020, 0x5dd1, 0x6ec2, 0x737a, 0x1, 0x1);
        gbc.writeMem(0xafa0, { 0x6a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf2fc, gbc.sp());
        EXPECT(0xafa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xafa0));
        // 6A 0125
        gbc.setState(0x64e8, 0x4c96, 0xafd0, 0x43fc, 0xb820, 0xbf33, 0x1, 0x1);
        gbc.writeMem(0x64e8, { 0x6a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4c96, gbc.sp());
        EXPECT(0x64e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0126
        gbc.setState(0x2676, 0x247f, 0x6280, 0x7961, 0x4df4, 0x9c71, 0x0, 0x1);
        gbc.writeMem(0x2676, { 0x6a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x247f, gbc.sp());
        EXPECT(0x2677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0127
        gbc.setState(0x2bcb, 0xfc86, 0xab20, 0xfe0e, 0xc9bf, 0xf6, 0x1, 0x0);
        gbc.writeMem(0x2bcb, { 0x6a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfc86, gbc.sp());
        EXPECT(0x2bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0128
        gbc.setState(0xd20, 0x800a, 0x5750, 0x2d82, 0xd001, 0x55a2, 0x0, 0x0);
        gbc.writeMem(0xd20, { 0x6a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x800a, gbc.sp());
        EXPECT(0xd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0129
        gbc.setState(0x34fa, 0x51f2, 0x27e0, 0x3a93, 0x250f, 0xe260, 0x1, 0x1);
        gbc.writeMem(0x34fa, { 0x6a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x51f2, gbc.sp());
        EXPECT(0x34fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 012A
        gbc.setState(0x1340, 0xddb, 0x3cf0, 0x8ffa, 0x67ad, 0x9d2c, 0x0, 0x1);
        gbc.writeMem(0x1340, { 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xddb, gbc.sp());
        EXPECT(0x1341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 012B
        gbc.setState(0x1ebf, 0x529f, 0xa400, 0x5ce2, 0x683f, 0x347, 0x1, 0x1);
        gbc.writeMem(0x1ebf, { 0x6a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x529f, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 012C
        gbc.setState(0x5a9, 0x91d, 0xd730, 0xf67d, 0xef31, 0x25e5, 0x0, 0x0);
        gbc.writeMem(0x5a9, { 0x6a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x91d, gbc.sp());
        EXPECT(0x5aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 012D
        gbc.setState(0x94d0, 0xf6ef, 0xf020, 0x2d42, 0xe15a, 0x991, 0x0, 0x1);
        gbc.writeMem(0x94d0, { 0x6a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf6ef, gbc.sp());
        EXPECT(0x94d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x94d0));
        // 6A 012E
        gbc.setState(0xead8, 0xcdf2, 0xce10, 0xb3f7, 0x7758, 0x1762, 0x0, 0x1);
        gbc.writeMem(0xead8, { 0x6a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcdf2, gbc.sp());
        EXPECT(0xead9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xead8));
        // 6A 012F
        gbc.setState(0xeb3e, 0x4677, 0xe960, 0x236a, 0xe2cf, 0xe7, 0x1, 0x0);
        gbc.writeMem(0xeb3e, { 0x6a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4677, gbc.sp());
        EXPECT(0xeb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xeb3e));
        // 6A 0130
        gbc.setState(0x1103, 0x3389, 0x8100, 0xb43a, 0xb367, 0x28c9, 0x1, 0x1);
        gbc.writeMem(0x1103, { 0x6a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3389, gbc.sp());
        EXPECT(0x1104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0132
        gbc.setState(0x3aeb, 0x5397, 0x68f0, 0xc3ae, 0xdf45, 0x5948, 0x0, 0x1);
        gbc.writeMem(0x3aeb, { 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5397, gbc.sp());
        EXPECT(0x3aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0133
        gbc.setState(0x4094, 0x45e, 0xc7d0, 0xc6c4, 0x2b80, 0xb58, 0x0, 0x1);
        gbc.writeMem(0x4094, { 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x45e, gbc.sp());
        EXPECT(0x4095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0134
        gbc.setState(0x10c8, 0xfc8, 0xf840, 0xd683, 0x87d4, 0xc0b1, 0x0, 0x1);
        gbc.writeMem(0x10c8, { 0x6a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfc8, gbc.sp());
        EXPECT(0x10c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0135
        gbc.setState(0x3cf9, 0x50f4, 0xade0, 0xbd94, 0x6065, 0xa9b2, 0x0, 0x0);
        gbc.writeMem(0x3cf9, { 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x50f4, gbc.sp());
        EXPECT(0x3cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0136
        gbc.setState(0x2ae4, 0xc34b, 0xe50, 0x7186, 0xc524, 0x49fc, 0x0, 0x1);
        gbc.writeMem(0x2ae4, { 0x6a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc34b, gbc.sp());
        EXPECT(0x2ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0137
        gbc.setState(0xa6c4, 0x13e2, 0x1fd0, 0x4d32, 0x178a, 0xb6f5, 0x0, 0x0);
        gbc.writeMem(0xa6c4, { 0x6a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x13e2, gbc.sp());
        EXPECT(0xa6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa6c4));
        // 6A 0138
        gbc.setState(0x443b, 0x4390, 0xd420, 0x79a7, 0xb7e, 0x9f91, 0x1, 0x0);
        gbc.writeMem(0x443b, { 0x6a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4390, gbc.sp());
        EXPECT(0x443c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0139
        gbc.setState(0x1ae9, 0x47b9, 0xba90, 0xb54, 0x9b78, 0xc51a, 0x1, 0x1);
        gbc.writeMem(0x1ae9, { 0x6a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x47b9, gbc.sp());
        EXPECT(0x1aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 013A
        gbc.setState(0x89e2, 0xe5cd, 0xfec0, 0xc6bc, 0x9977, 0xa5d, 0x0, 0x1);
        gbc.writeMem(0x89e2, { 0x6a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe5cd, gbc.sp());
        EXPECT(0x89e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x89e2));
        // 6A 013B
        gbc.setState(0x512c, 0x8b85, 0x6a60, 0x1b13, 0x1d5, 0xafa2, 0x1, 0x0);
        gbc.writeMem(0x512c, { 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8b85, gbc.sp());
        EXPECT(0x512d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 013C
        gbc.setState(0xb32e, 0xd790, 0xa150, 0xebe9, 0xf7a2, 0x689f, 0x1, 0x1);
        gbc.writeMem(0xb32e, { 0x6a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd790, gbc.sp());
        EXPECT(0xb32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb32e));
        // 6A 013D
        gbc.setState(0x6162, 0x2ce4, 0x7920, 0x5bc, 0x2013, 0xd83f, 0x1, 0x0);
        gbc.writeMem(0x6162, { 0x6a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2ce4, gbc.sp());
        EXPECT(0x6163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 013F
        gbc.setState(0x7cf2, 0x2a4, 0x3ee0, 0x8d0e, 0x6e6d, 0x3e70, 0x0, 0x0);
        gbc.writeMem(0x7cf2, { 0x6a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2a4, gbc.sp());
        EXPECT(0x7cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0140
        gbc.setState(0x6b26, 0x1a92, 0xf230, 0x98a, 0xee90, 0x556f, 0x0, 0x0);
        gbc.writeMem(0x6b26, { 0x6a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1a92, gbc.sp());
        EXPECT(0x6b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0141
        gbc.setState(0xff1, 0x55b2, 0xec70, 0x235b, 0xf218, 0x9cd, 0x0, 0x1);
        gbc.writeMem(0xff1, { 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x55b2, gbc.sp());
        EXPECT(0xff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0142
        gbc.setState(0xa45a, 0x2ff8, 0x8b70, 0x520a, 0xaa32, 0xb10f, 0x0, 0x1);
        gbc.writeMem(0xa45a, { 0x6a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2ff8, gbc.sp());
        EXPECT(0xa45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa45a));
        // 6A 0143
        gbc.setState(0x82e4, 0x1aeb, 0x3720, 0x9b58, 0x6bb5, 0xb7f3, 0x0, 0x1);
        gbc.writeMem(0x82e4, { 0x6a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1aeb, gbc.sp());
        EXPECT(0x82e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x82e4));
        // 6A 0144
        gbc.setState(0x86c1, 0x5d6a, 0xfe20, 0xb6aa, 0xeb6b, 0xebf1, 0x0, 0x0);
        gbc.writeMem(0x86c1, { 0x6a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5d6a, gbc.sp());
        EXPECT(0x86c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x86c1));
        // 6A 0145
        gbc.setState(0xce11, 0x6e13, 0xc650, 0x36f9, 0x8e76, 0x67b8, 0x1, 0x0);
        gbc.writeMem(0xce11, { 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6e13, gbc.sp());
        EXPECT(0xce12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xce11));
        // 6A 0146
        gbc.setState(0x5eb5, 0x52ac, 0x43d0, 0xfec9, 0x7be0, 0xd65a, 0x0, 0x0);
        gbc.writeMem(0x5eb5, { 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x52ac, gbc.sp());
        EXPECT(0x5eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0148
        gbc.setState(0xcafd, 0xed84, 0xc650, 0x4a9, 0x9afc, 0xf3fd, 0x1, 0x0);
        gbc.writeMem(0xcafd, { 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xed84, gbc.sp());
        EXPECT(0xcafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcafd));
        // 6A 0149
        gbc.setState(0x4a32, 0x5bdd, 0x4310, 0x8968, 0x3e26, 0x266a, 0x1, 0x1);
        gbc.writeMem(0x4a32, { 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5bdd, gbc.sp());
        EXPECT(0x4a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 014A
        gbc.setState(0x7d3d, 0xb120, 0x9ee0, 0xd221, 0xf57b, 0x480d, 0x0, 0x0);
        gbc.writeMem(0x7d3d, { 0x6a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb120, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 014B
        gbc.setState(0xb42d, 0x75cc, 0xdab0, 0x48c4, 0xb5d6, 0xb137, 0x0, 0x0);
        gbc.writeMem(0xb42d, { 0x6a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x75cc, gbc.sp());
        EXPECT(0xb42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb42d));
        // 6A 014C
        gbc.setState(0xd200, 0x7431, 0x2a80, 0xd0f7, 0x58f4, 0x8a72, 0x1, 0x0);
        gbc.writeMem(0xd200, { 0x6a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7431, gbc.sp());
        EXPECT(0xd201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd200));
        // 6A 014D
        gbc.setState(0xe305, 0x3db8, 0x9ba0, 0x5e53, 0xd076, 0x675, 0x0, 0x1);
        gbc.writeMem(0xe305, { 0x6a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3db8, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe305));
        // 6A 014F
        gbc.setState(0x67bd, 0x8409, 0x86b0, 0x5a01, 0x20f1, 0x4140, 0x1, 0x1);
        gbc.writeMem(0x67bd, { 0x6a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8409, gbc.sp());
        EXPECT(0x67be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0150
        gbc.setState(0xb420, 0xfc24, 0x6320, 0x353f, 0x1e14, 0x7eac, 0x0, 0x0);
        gbc.writeMem(0xb420, { 0x6a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfc24, gbc.sp());
        EXPECT(0xb421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb420));
        // 6A 0151
        gbc.setState(0xd8dc, 0xc052, 0xb310, 0x31d6, 0xe05b, 0xb204, 0x0, 0x1);
        gbc.writeMem(0xd8dc, { 0x6a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc052, gbc.sp());
        EXPECT(0xd8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd8dc));
        // 6A 0153
        gbc.setState(0x67, 0xbae2, 0xaa40, 0x3cfa, 0x6d22, 0x5476, 0x1, 0x0);
        gbc.writeMem(0x67, { 0x6a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbae2, gbc.sp());
        EXPECT(0x68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0154
        gbc.setState(0xa7af, 0xe535, 0xade0, 0x8e23, 0x8d95, 0x19b, 0x0, 0x0);
        gbc.writeMem(0xa7af, { 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe535, gbc.sp());
        EXPECT(0xa7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa7af));
        // 6A 0155
        gbc.setState(0xe523, 0x8a33, 0xd3e0, 0x88d5, 0xa938, 0xb806, 0x1, 0x0);
        gbc.writeMem(0xe523, { 0x6a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8a33, gbc.sp());
        EXPECT(0xe524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe523));
        // 6A 0156
        gbc.setState(0x609f, 0x7c2, 0x78c0, 0xf867, 0x7921, 0xbca9, 0x1, 0x0);
        gbc.writeMem(0x609f, { 0x6a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7c2, gbc.sp());
        EXPECT(0x60a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0157
        gbc.setState(0xdc24, 0x8388, 0xaf90, 0x5da2, 0xf227, 0xf775, 0x0, 0x0);
        gbc.writeMem(0xdc24, { 0x6a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8388, gbc.sp());
        EXPECT(0xdc25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdc24));
        // 6A 0158
        gbc.setState(0x9786, 0x9d18, 0x3a00, 0x8d76, 0xb439, 0xba62, 0x1, 0x1);
        gbc.writeMem(0x9786, { 0x6a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9d18, gbc.sp());
        EXPECT(0x9787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9786));
        // 6A 0159
        gbc.setState(0xe19e, 0x38dc, 0xe5b0, 0xfff2, 0x364b, 0xf269, 0x0, 0x0);
        gbc.writeMem(0xe19e, { 0x6a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x38dc, gbc.sp());
        EXPECT(0xe19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe19e));
        // 6A 015A
        gbc.setState(0x316a, 0xa289, 0x8080, 0x8472, 0x27c4, 0x3ef3, 0x0, 0x1);
        gbc.writeMem(0x316a, { 0x6a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa289, gbc.sp());
        EXPECT(0x316b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 015B
        gbc.setState(0x8c68, 0x2002, 0xb470, 0x35ab, 0x6da8, 0xc448, 0x1, 0x0);
        gbc.writeMem(0x8c68, { 0x6a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2002, gbc.sp());
        EXPECT(0x8c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8c68));
        // 6A 015C
        gbc.setState(0x25c4, 0x3546, 0xc220, 0xe4d5, 0xef38, 0xf725, 0x0, 0x1);
        gbc.writeMem(0x25c4, { 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3546, gbc.sp());
        EXPECT(0x25c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 015D
        gbc.setState(0x7b07, 0xd261, 0x3dc0, 0x40ac, 0x7e89, 0x7297, 0x0, 0x1);
        gbc.writeMem(0x7b07, { 0x6a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd261, gbc.sp());
        EXPECT(0x7b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 015F
        gbc.setState(0x5201, 0x8ebf, 0x640, 0x85f2, 0x61f3, 0x7f63, 0x1, 0x1);
        gbc.writeMem(0x5201, { 0x6a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8ebf, gbc.sp());
        EXPECT(0x5202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0160
        gbc.setState(0x436d, 0xe4b9, 0x3c0, 0x7082, 0x49e1, 0xbfde, 0x1, 0x1);
        gbc.writeMem(0x436d, { 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe4b9, gbc.sp());
        EXPECT(0x436e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0161
        gbc.setState(0x426, 0x8c80, 0x3190, 0xc633, 0x3a7f, 0x79d3, 0x1, 0x1);
        gbc.writeMem(0x426, { 0x6a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8c80, gbc.sp());
        EXPECT(0x427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0162
        gbc.setState(0x4242, 0x6b35, 0xfef0, 0x8bf8, 0x6f, 0x2c9d, 0x1, 0x1);
        gbc.writeMem(0x4242, { 0x6a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6b35, gbc.sp());
        EXPECT(0x4243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0163
        gbc.setState(0x4816, 0xc341, 0xb740, 0x8fab, 0x47b5, 0xb010, 0x1, 0x1);
        gbc.writeMem(0x4816, { 0x6a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc341, gbc.sp());
        EXPECT(0x4817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0164
        gbc.setState(0x3707, 0xfb9d, 0xb20, 0x35d1, 0xb3c8, 0xc96a, 0x1, 0x1);
        gbc.writeMem(0x3707, { 0x6a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfb9d, gbc.sp());
        EXPECT(0x3708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0165
        gbc.setState(0x75ae, 0x7a29, 0x840, 0xf551, 0x94e, 0x891f, 0x0, 0x1);
        gbc.writeMem(0x75ae, { 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7a29, gbc.sp());
        EXPECT(0x75af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0166
        gbc.setState(0xb13f, 0xa8b2, 0xab50, 0x17a5, 0x3eb6, 0x890b, 0x0, 0x1);
        gbc.writeMem(0xb13f, { 0x6a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa8b2, gbc.sp());
        EXPECT(0xb140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb13f));
        // 6A 0167
        gbc.setState(0x7695, 0x70fc, 0x7d40, 0xef9a, 0x744, 0xbfd8, 0x0, 0x0);
        gbc.writeMem(0x7695, { 0x6a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x70fc, gbc.sp());
        EXPECT(0x7696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0168
        gbc.setState(0xdb97, 0xab16, 0x8c20, 0x374e, 0x518e, 0x589a, 0x1, 0x0);
        gbc.writeMem(0xdb97, { 0x6a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xab16, gbc.sp());
        EXPECT(0xdb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdb97));
        // 6A 0169
        gbc.setState(0xccd, 0x7d63, 0x3500, 0xa1dc, 0x5fe0, 0xefd3, 0x0, 0x0);
        gbc.writeMem(0xccd, { 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7d63, gbc.sp());
        EXPECT(0xcce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 016A
        gbc.setState(0x3a3b, 0xd377, 0x540, 0x4184, 0xf4d7, 0x24e, 0x0, 0x0);
        gbc.writeMem(0x3a3b, { 0x6a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd377, gbc.sp());
        EXPECT(0x3a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 016B
        gbc.setState(0x7690, 0x26de, 0xf20, 0x144f, 0x5932, 0xe254, 0x0, 0x1);
        gbc.writeMem(0x7690, { 0x6a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x26de, gbc.sp());
        EXPECT(0x7691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 016C
        gbc.setState(0xabe, 0x61d2, 0x7500, 0x30a1, 0x767a, 0xbfb, 0x1, 0x1);
        gbc.writeMem(0xabe, { 0x6a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x61d2, gbc.sp());
        EXPECT(0xabf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 016D
        gbc.setState(0x136b, 0xc78b, 0xfa30, 0x2b51, 0xe7c8, 0x9de4, 0x0, 0x0);
        gbc.writeMem(0x136b, { 0x6a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc78b, gbc.sp());
        EXPECT(0x136c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 016E
        gbc.setState(0x740f, 0xdcf9, 0xb0c0, 0xb06a, 0x5a59, 0xbc10, 0x0, 0x0);
        gbc.writeMem(0x740f, { 0x6a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdcf9, gbc.sp());
        EXPECT(0x7410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 016F
        gbc.setState(0xa6ca, 0x4d99, 0x61f0, 0x25c3, 0x43f9, 0x6a61, 0x1, 0x0);
        gbc.writeMem(0xa6ca, { 0x6a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4d99, gbc.sp());
        EXPECT(0xa6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa6ca));
        // 6A 0170
        gbc.setState(0x20dc, 0x2965, 0xd0f0, 0x67f5, 0x3ae6, 0xd449, 0x0, 0x1);
        gbc.writeMem(0x20dc, { 0x6a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2965, gbc.sp());
        EXPECT(0x20dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0171
        gbc.setState(0x96c, 0x9030, 0x8990, 0x49ff, 0x662b, 0x1d39, 0x1, 0x1);
        gbc.writeMem(0x96c, { 0x6a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9030, gbc.sp());
        EXPECT(0x96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0172
        gbc.setState(0xa29, 0x9073, 0x8020, 0x645d, 0x1735, 0x2a53, 0x0, 0x0);
        gbc.writeMem(0xa29, { 0x6a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9073, gbc.sp());
        EXPECT(0xa2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0173
        gbc.setState(0x8c5a, 0xead, 0xa6f0, 0xed8f, 0xac84, 0xd55b, 0x1, 0x0);
        gbc.writeMem(0x8c5a, { 0x6a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xead, gbc.sp());
        EXPECT(0x8c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8c5a));
        // 6A 0174
        gbc.setState(0x9a53, 0xaa60, 0x1a0, 0x5723, 0x9b60, 0x81ab, 0x1, 0x1);
        gbc.writeMem(0x9a53, { 0x6a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xaa60, gbc.sp());
        EXPECT(0x9a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9a53));
        // 6A 0175
        gbc.setState(0x5bcb, 0x3ebb, 0x1b80, 0xc18d, 0xbc07, 0x5022, 0x0, 0x0);
        gbc.writeMem(0x5bcb, { 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3ebb, gbc.sp());
        EXPECT(0x5bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0176
        gbc.setState(0x924d, 0xd0b, 0xa60, 0x59da, 0x2dfc, 0xc9e6, 0x1, 0x1);
        gbc.writeMem(0x924d, { 0x6a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd0b, gbc.sp());
        EXPECT(0x924e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x924d));
        // 6A 0177
        gbc.setState(0xb1f9, 0x9c5, 0x4460, 0xfcbe, 0x6a0e, 0x973f, 0x1, 0x0);
        gbc.writeMem(0xb1f9, { 0x6a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9c5, gbc.sp());
        EXPECT(0xb1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb1f9));
        // 6A 0178
        gbc.setState(0x13f4, 0xfa70, 0x5fb0, 0x6edb, 0x10b2, 0xc60e, 0x1, 0x0);
        gbc.writeMem(0x13f4, { 0x6a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfa70, gbc.sp());
        EXPECT(0x13f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0179
        gbc.setState(0xae20, 0x2013, 0x48e0, 0xcfed, 0x4059, 0xc24, 0x1, 0x0);
        gbc.writeMem(0xae20, { 0x6a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2013, gbc.sp());
        EXPECT(0xae21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xae20));
        // 6A 017A
        gbc.setState(0x52ca, 0x37e, 0x1cb0, 0xb603, 0x402b, 0x7fa2, 0x0, 0x0);
        gbc.writeMem(0x52ca, { 0x6a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x37e, gbc.sp());
        EXPECT(0x52cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 017B
        gbc.setState(0x5dc3, 0xceb9, 0x1e90, 0xd157, 0x77a, 0x9463, 0x1, 0x0);
        gbc.writeMem(0x5dc3, { 0x6a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xceb9, gbc.sp());
        EXPECT(0x5dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 017C
        gbc.setState(0xdd9b, 0x2925, 0x1600, 0xcf3c, 0x1402, 0x7a91, 0x0, 0x0);
        gbc.writeMem(0xdd9b, { 0x6a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2925, gbc.sp());
        EXPECT(0xdd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdd9b));
        // 6A 017D
        gbc.setState(0x5057, 0xe2a6, 0xaa50, 0x14aa, 0xbed0, 0xacd2, 0x0, 0x1);
        gbc.writeMem(0x5057, { 0x6a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe2a6, gbc.sp());
        EXPECT(0x5058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 017E
        gbc.setState(0x9181, 0xbe8d, 0x9e60, 0xcbb, 0x92a7, 0xb7a5, 0x1, 0x0);
        gbc.writeMem(0x9181, { 0x6a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbe8d, gbc.sp());
        EXPECT(0x9182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9181));
        // 6A 017F
        gbc.setState(0x12c8, 0xe2f7, 0xb2d0, 0x6744, 0xc2f3, 0xc319, 0x0, 0x0);
        gbc.writeMem(0x12c8, { 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe2f7, gbc.sp());
        EXPECT(0x12c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0180
        gbc.setState(0xaf1a, 0xce3a, 0xb0f0, 0xa376, 0xe53, 0xafee, 0x1, 0x0);
        gbc.writeMem(0xaf1a, { 0x6a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xce3a, gbc.sp());
        EXPECT(0xaf1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xaf1a));
        // 6A 0181
        gbc.setState(0xab7d, 0xfd8b, 0x2260, 0x194f, 0x8ce9, 0xbc93, 0x0, 0x0);
        gbc.writeMem(0xab7d, { 0x6a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfd8b, gbc.sp());
        EXPECT(0xab7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xab7d));
        // 6A 0182
        gbc.setState(0xac30, 0x7c26, 0x6990, 0x5af2, 0xc585, 0x5682, 0x0, 0x0);
        gbc.writeMem(0xac30, { 0x6a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7c26, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xac30));
        // 6A 0183
        gbc.setState(0xe4cd, 0xaab7, 0xd130, 0x25ae, 0x73fb, 0xbc5d, 0x1, 0x0);
        gbc.writeMem(0xe4cd, { 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xaab7, gbc.sp());
        EXPECT(0xe4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe4cd));
        // 6A 0184
        gbc.setState(0x45d4, 0xd894, 0x9200, 0x6fdf, 0x2d53, 0x6300, 0x0, 0x0);
        gbc.writeMem(0x45d4, { 0x6a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd894, gbc.sp());
        EXPECT(0x45d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0185
        gbc.setState(0x6a1c, 0x6115, 0x5bf0, 0x3477, 0xb463, 0x2ae5, 0x0, 0x0);
        gbc.writeMem(0x6a1c, { 0x6a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0x6a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0186
        gbc.setState(0xce7b, 0x7315, 0x53b0, 0xd04d, 0xb096, 0x323a, 0x0, 0x0);
        gbc.writeMem(0xce7b, { 0x6a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7315, gbc.sp());
        EXPECT(0xce7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xce7b));
        // 6A 0187
        gbc.setState(0x54c3, 0x8922, 0x3c20, 0x8021, 0x5a20, 0x2794, 0x0, 0x0);
        gbc.writeMem(0x54c3, { 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8922, gbc.sp());
        EXPECT(0x54c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0188
        gbc.setState(0xa2f0, 0xfe13, 0xfe20, 0x2370, 0xe546, 0x7111, 0x0, 0x0);
        gbc.writeMem(0xa2f0, { 0x6a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfe13, gbc.sp());
        EXPECT(0xa2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa2f0));
        // 6A 0189
        gbc.setState(0x2274, 0xc33b, 0x9fc0, 0x72b2, 0xa68c, 0xc08d, 0x0, 0x0);
        gbc.writeMem(0x2274, { 0x6a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc33b, gbc.sp());
        EXPECT(0x2275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 018A
        gbc.setState(0x17e6, 0xd88f, 0x9f0, 0x5499, 0xe22c, 0x8b26, 0x1, 0x0);
        gbc.writeMem(0x17e6, { 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd88f, gbc.sp());
        EXPECT(0x17e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 018B
        gbc.setState(0xaf38, 0x7311, 0xbd00, 0x74ff, 0xb563, 0xc2b8, 0x1, 0x1);
        gbc.writeMem(0xaf38, { 0x6a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7311, gbc.sp());
        EXPECT(0xaf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xaf38));
        // 6A 018C
        gbc.setState(0xe2d, 0xcb0d, 0x3160, 0xce1c, 0x79d7, 0xc955, 0x1, 0x0);
        gbc.writeMem(0xe2d, { 0x6a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcb0d, gbc.sp());
        EXPECT(0xe2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 018D
        gbc.setState(0x8cef, 0xf8ce, 0xc330, 0x823b, 0xce0a, 0xa943, 0x0, 0x1);
        gbc.writeMem(0x8cef, { 0x6a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf8ce, gbc.sp());
        EXPECT(0x8cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8cef));
        // 6A 018E
        gbc.setState(0x45e8, 0xf65c, 0x2f80, 0x2759, 0x9fc7, 0x4a8b, 0x1, 0x1);
        gbc.writeMem(0x45e8, { 0x6a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf65c, gbc.sp());
        EXPECT(0x45e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 018F
        gbc.setState(0x8317, 0xa3ea, 0xed60, 0x4a4, 0x5909, 0xad44, 0x1, 0x0);
        gbc.writeMem(0x8317, { 0x6a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa3ea, gbc.sp());
        EXPECT(0x8318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8317));
        // 6A 0190
        gbc.setState(0x415f, 0x61d7, 0xa0c0, 0xbd28, 0xff6a, 0xa110, 0x0, 0x0);
        gbc.writeMem(0x415f, { 0x6a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0x4160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0191
        gbc.setState(0x4f68, 0x8c2c, 0xe1a0, 0xe583, 0x653c, 0xe006, 0x0, 0x1);
        gbc.writeMem(0x4f68, { 0x6a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8c2c, gbc.sp());
        EXPECT(0x4f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0192
        gbc.setState(0x3f30, 0xf8fe, 0x5990, 0x234d, 0xae0d, 0x7f73, 0x1, 0x1);
        gbc.writeMem(0x3f30, { 0x6a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf8fe, gbc.sp());
        EXPECT(0x3f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0193
        gbc.setState(0xed1e, 0x96d7, 0x9670, 0x976e, 0x282f, 0xe6e3, 0x1, 0x1);
        gbc.writeMem(0xed1e, { 0x6a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x96d7, gbc.sp());
        EXPECT(0xed1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xed1e));
        // 6A 0194
        gbc.setState(0x1181, 0x40db, 0xb900, 0x1372, 0x191b, 0x822e, 0x1, 0x1);
        gbc.writeMem(0x1181, { 0x6a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x40db, gbc.sp());
        EXPECT(0x1182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0196
        gbc.setState(0x5c8c, 0x4083, 0x2e10, 0x8750, 0x7812, 0x3ed2, 0x1, 0x0);
        gbc.writeMem(0x5c8c, { 0x6a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4083, gbc.sp());
        EXPECT(0x5c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0197
        gbc.setState(0x96de, 0xfa5e, 0xed90, 0xa2cd, 0x8341, 0x3a79, 0x1, 0x1);
        gbc.writeMem(0x96de, { 0x6a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfa5e, gbc.sp());
        EXPECT(0x96df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x96de));
        // 6A 0198
        gbc.setState(0x2e33, 0x9fac, 0x80f0, 0x4979, 0x61a5, 0x7eff, 0x1, 0x0);
        gbc.writeMem(0x2e33, { 0x6a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9fac, gbc.sp());
        EXPECT(0x2e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0199
        gbc.setState(0x1072, 0xdab4, 0x7e0, 0x9066, 0x824a, 0xce8a, 0x0, 0x0);
        gbc.writeMem(0x1072, { 0x6a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdab4, gbc.sp());
        EXPECT(0x1073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 019A
        gbc.setState(0xa785, 0xb2a3, 0xafa0, 0x5e31, 0x436f, 0x8af5, 0x1, 0x1);
        gbc.writeMem(0xa785, { 0x6a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb2a3, gbc.sp());
        EXPECT(0xa786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa785));
        // 6A 019B
        gbc.setState(0xcd38, 0x5f94, 0x5c10, 0xc637, 0x2f42, 0x6e3d, 0x1, 0x1);
        gbc.writeMem(0xcd38, { 0x6a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5f94, gbc.sp());
        EXPECT(0xcd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcd38));
        // 6A 019C
        gbc.setState(0x55af, 0xa54b, 0xa210, 0xed53, 0x3c5e, 0x1f37, 0x1, 0x0);
        gbc.writeMem(0x55af, { 0x6a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa54b, gbc.sp());
        EXPECT(0x55b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 019D
        gbc.setState(0x38d2, 0x51c8, 0xce30, 0x6bc9, 0x39e6, 0x3987, 0x1, 0x0);
        gbc.writeMem(0x38d2, { 0x6a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x51c8, gbc.sp());
        EXPECT(0x38d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 019E
        gbc.setState(0x4b7e, 0xcdd1, 0x35e0, 0xd04a, 0xd6ae, 0xcda7, 0x0, 0x1);
        gbc.writeMem(0x4b7e, { 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcdd1, gbc.sp());
        EXPECT(0x4b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 019F
        gbc.setState(0xa9c5, 0xb345, 0xd460, 0xe687, 0x4b26, 0x6872, 0x1, 0x0);
        gbc.writeMem(0xa9c5, { 0x6a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb345, gbc.sp());
        EXPECT(0xa9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa9c5));
        // 6A 01A0
        gbc.setState(0x8bfe, 0xd1c7, 0x8490, 0xf723, 0x9b32, 0x1b34, 0x0, 0x1);
        gbc.writeMem(0x8bfe, { 0x6a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd1c7, gbc.sp());
        EXPECT(0x8bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8bfe));
        // 6A 01A1
        gbc.setState(0x8400, 0xd2e0, 0x51a0, 0xe50e, 0x9aed, 0x242, 0x1, 0x0);
        gbc.writeMem(0x8400, { 0x6a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd2e0, gbc.sp());
        EXPECT(0x8401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8400));
        // 6A 01A2
        gbc.setState(0xd744, 0x8a1d, 0xad60, 0x1695, 0xb8c7, 0xa99e, 0x1, 0x1);
        gbc.writeMem(0xd744, { 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8a1d, gbc.sp());
        EXPECT(0xd745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd744));
        // 6A 01A3
        gbc.setState(0x6d07, 0xe12, 0xc760, 0xeae7, 0x657c, 0x775a, 0x1, 0x0);
        gbc.writeMem(0x6d07, { 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe12, gbc.sp());
        EXPECT(0x6d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01A4
        gbc.setState(0x78a0, 0x53f8, 0xd90, 0x58d, 0xce34, 0xbb6e, 0x0, 0x1);
        gbc.writeMem(0x78a0, { 0x6a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x53f8, gbc.sp());
        EXPECT(0x78a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01A5
        gbc.setState(0xc04a, 0xfde3, 0x60c0, 0x7f4a, 0x554, 0xfa8f, 0x1, 0x1);
        gbc.writeMem(0xc04a, { 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfde3, gbc.sp());
        EXPECT(0xc04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc04a));
        // 6A 01A6
        gbc.setState(0xe0b6, 0x8460, 0x2050, 0xe0e4, 0x416, 0xeb67, 0x0, 0x0);
        gbc.writeMem(0xe0b6, { 0x6a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8460, gbc.sp());
        EXPECT(0xe0b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe0b6));
        // 6A 01A7
        gbc.setState(0x93de, 0x6625, 0x7830, 0x323b, 0x35a8, 0x17a2, 0x1, 0x0);
        gbc.writeMem(0x93de, { 0x6a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6625, gbc.sp());
        EXPECT(0x93df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x93de));
        // 6A 01A8
        gbc.setState(0x92e4, 0x532b, 0x3590, 0xb1d3, 0x6316, 0xbf18, 0x0, 0x0);
        gbc.writeMem(0x92e4, { 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x532b, gbc.sp());
        EXPECT(0x92e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x92e4));
        // 6A 01A9
        gbc.setState(0xc4c9, 0xa052, 0x460, 0x7219, 0xd41b, 0x796a, 0x0, 0x0);
        gbc.writeMem(0xc4c9, { 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa052, gbc.sp());
        EXPECT(0xc4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc4c9));
        // 6A 01AA
        gbc.setState(0xa6c7, 0x16da, 0xb770, 0xda88, 0x273f, 0x42ca, 0x1, 0x1);
        gbc.writeMem(0xa6c7, { 0x6a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x16da, gbc.sp());
        EXPECT(0xa6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa6c7));
        // 6A 01AB
        gbc.setState(0x7b8f, 0xa4d8, 0xf5a0, 0x6748, 0x87b1, 0xfc0f, 0x1, 0x0);
        gbc.writeMem(0x7b8f, { 0x6a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa4d8, gbc.sp());
        EXPECT(0x7b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01AC
        gbc.setState(0x6889, 0x3dd, 0x6e60, 0x2685, 0x4a86, 0x4ada, 0x0, 0x1);
        gbc.writeMem(0x6889, { 0x6a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3dd, gbc.sp());
        EXPECT(0x688a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01AD
        gbc.setState(0x51b5, 0x51cc, 0xf4f0, 0x2418, 0xc97, 0xda59, 0x1, 0x0);
        gbc.writeMem(0x51b5, { 0x6a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x51cc, gbc.sp());
        EXPECT(0x51b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01AE
        gbc.setState(0x3de2, 0x37da, 0x53f0, 0x2597, 0x443e, 0x2948, 0x1, 0x0);
        gbc.writeMem(0x3de2, { 0x6a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x37da, gbc.sp());
        EXPECT(0x3de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01AF
        gbc.setState(0x68a6, 0xa5e3, 0x4790, 0x521b, 0x4f5, 0x82e9, 0x1, 0x1);
        gbc.writeMem(0x68a6, { 0x6a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa5e3, gbc.sp());
        EXPECT(0x68a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01B0
        gbc.setState(0xdbd9, 0xba4e, 0xd960, 0xc863, 0xccb6, 0x8d86, 0x0, 0x0);
        gbc.writeMem(0xdbd9, { 0x6a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xba4e, gbc.sp());
        EXPECT(0xdbda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdbd9));
        // 6A 01B1
        gbc.setState(0xe42c, 0x2b24, 0xe880, 0x392e, 0xf037, 0x5b53, 0x1, 0x1);
        gbc.writeMem(0xe42c, { 0x6a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2b24, gbc.sp());
        EXPECT(0xe42d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe42c));
        // 6A 01B2
        gbc.setState(0x6dd8, 0x5a20, 0xe6c0, 0x9ee, 0x58d0, 0x2cae, 0x1, 0x0);
        gbc.writeMem(0x6dd8, { 0x6a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5a20, gbc.sp());
        EXPECT(0x6dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01B3
        gbc.setState(0x608e, 0xe39b, 0x2010, 0x5538, 0x34eb, 0xb315, 0x0, 0x1);
        gbc.writeMem(0x608e, { 0x6a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe39b, gbc.sp());
        EXPECT(0x608f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01B4
        gbc.setState(0xb34b, 0xa10a, 0xdc60, 0xbfa, 0x1a8a, 0x17bb, 0x1, 0x0);
        gbc.writeMem(0xb34b, { 0x6a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa10a, gbc.sp());
        EXPECT(0xb34c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb34b));
        // 6A 01B5
        gbc.setState(0x7181, 0x7eb6, 0xe080, 0xbfcd, 0x3b83, 0xf151, 0x0, 0x1);
        gbc.writeMem(0x7181, { 0x6a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7eb6, gbc.sp());
        EXPECT(0x7182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01B6
        gbc.setState(0xdbbf, 0xa2f4, 0x99e0, 0x8b83, 0xe90d, 0x2f90, 0x1, 0x0);
        gbc.writeMem(0xdbbf, { 0x6a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa2f4, gbc.sp());
        EXPECT(0xdbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdbbf));
        // 6A 01B7
        gbc.setState(0xe74a, 0x81bb, 0x6eb0, 0xa995, 0x2453, 0x7ba1, 0x0, 0x1);
        gbc.writeMem(0xe74a, { 0x6a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x81bb, gbc.sp());
        EXPECT(0xe74b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe74a));
        // 6A 01B8
        gbc.setState(0xe211, 0x296d, 0x6870, 0x34dc, 0x1116, 0xdeed, 0x1, 0x1);
        gbc.writeMem(0xe211, { 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x296d, gbc.sp());
        EXPECT(0xe212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe211));
        // 6A 01B9
        gbc.setState(0x45e6, 0x2a63, 0x1240, 0xf24f, 0xfdbf, 0xcb2c, 0x1, 0x0);
        gbc.writeMem(0x45e6, { 0x6a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2a63, gbc.sp());
        EXPECT(0x45e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01BA
        gbc.setState(0xb257, 0xe440, 0xd3f0, 0x351d, 0xe276, 0xc0b6, 0x0, 0x1);
        gbc.writeMem(0xb257, { 0x6a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe440, gbc.sp());
        EXPECT(0xb258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb257));
        // 6A 01BB
        gbc.setState(0x345e, 0xc729, 0x18d0, 0x624a, 0xa548, 0xa9ad, 0x1, 0x0);
        gbc.writeMem(0x345e, { 0x6a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc729, gbc.sp());
        EXPECT(0x345f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01BC
        gbc.setState(0xd25e, 0x566b, 0x5140, 0x4f10, 0x2c85, 0xead8, 0x1, 0x0);
        gbc.writeMem(0xd25e, { 0x6a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x566b, gbc.sp());
        EXPECT(0xd25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd25e));
        // 6A 01BD
        gbc.setState(0xbe0a, 0xbc2b, 0xa3e0, 0xd6a9, 0xd257, 0x26de, 0x0, 0x0);
        gbc.writeMem(0xbe0a, { 0x6a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbc2b, gbc.sp());
        EXPECT(0xbe0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbe0a));
        // 6A 01BE
        gbc.setState(0xc5c1, 0x5189, 0x2380, 0x82d7, 0xc25e, 0xa2a4, 0x1, 0x0);
        gbc.writeMem(0xc5c1, { 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5189, gbc.sp());
        EXPECT(0xc5c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc5c1));
        // 6A 01BF
        gbc.setState(0xf97, 0xe71f, 0x7cd0, 0x7a93, 0xbfee, 0x75ca, 0x0, 0x1);
        gbc.writeMem(0xf97, { 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe71f, gbc.sp());
        EXPECT(0xf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01C0
        gbc.setState(0xeb2b, 0x555c, 0x35d0, 0xd0c, 0xe250, 0x3c11, 0x1, 0x1);
        gbc.writeMem(0xeb2b, { 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x555c, gbc.sp());
        EXPECT(0xeb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xeb2b));
        // 6A 01C1
        gbc.setState(0x856e, 0xec6b, 0x2080, 0x80e0, 0xa0e9, 0x7335, 0x0, 0x1);
        gbc.writeMem(0x856e, { 0x6a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xec6b, gbc.sp());
        EXPECT(0x856f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x856e));
        // 6A 01C3
        gbc.setState(0xb89b, 0xf322, 0x6eb0, 0x3c72, 0x37b3, 0x50ab, 0x0, 0x1);
        gbc.writeMem(0xb89b, { 0x6a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf322, gbc.sp());
        EXPECT(0xb89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb89b));
        // 6A 01C4
        gbc.setState(0x5767, 0xdcc5, 0x3df0, 0xfa93, 0x58e4, 0x6144, 0x1, 0x0);
        gbc.writeMem(0x5767, { 0x6a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdcc5, gbc.sp());
        EXPECT(0x5768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01C5
        gbc.setState(0x6bce, 0xf150, 0xe8b0, 0x87ba, 0x2823, 0xffe6, 0x1, 0x0);
        gbc.writeMem(0x6bce, { 0x6a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf150, gbc.sp());
        EXPECT(0x6bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01C6
        gbc.setState(0x1070, 0xea8b, 0x6300, 0x62a5, 0xf233, 0xfe05, 0x0, 0x0);
        gbc.writeMem(0x1070, { 0x6a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xea8b, gbc.sp());
        EXPECT(0x1071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01C7
        gbc.setState(0x8c00, 0x705c, 0x11a0, 0xf4e, 0x71d9, 0xfa61, 0x0, 0x0);
        gbc.writeMem(0x8c00, { 0x6a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x705c, gbc.sp());
        EXPECT(0x8c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8c00));
        // 6A 01C8
        gbc.setState(0xaa72, 0x88c1, 0x6050, 0x9b82, 0xef59, 0x27b6, 0x0, 0x1);
        gbc.writeMem(0xaa72, { 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x88c1, gbc.sp());
        EXPECT(0xaa73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xaa72));
        // 6A 01C9
        gbc.setState(0x5196, 0x7eea, 0x43c0, 0xf917, 0xe3a6, 0x6c56, 0x0, 0x0);
        gbc.writeMem(0x5196, { 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7eea, gbc.sp());
        EXPECT(0x5197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01CA
        gbc.setState(0x4cfc, 0x7932, 0xe250, 0x83cb, 0x2af9, 0xe860, 0x1, 0x0);
        gbc.writeMem(0x4cfc, { 0x6a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7932, gbc.sp());
        EXPECT(0x4cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01CB
        gbc.setState(0xd2f0, 0xd0f0, 0x4370, 0x2fdb, 0xd0d7, 0x5a0e, 0x1, 0x0);
        gbc.writeMem(0xd2f0, { 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd0f0, gbc.sp());
        EXPECT(0xd2f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd2f0));
        // 6A 01CC
        gbc.setState(0xd780, 0x30d4, 0x6ff0, 0x2572, 0xc7df, 0x7b2f, 0x1, 0x1);
        gbc.writeMem(0xd780, { 0x6a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x30d4, gbc.sp());
        EXPECT(0xd781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd780));
        // 6A 01CD
        gbc.setState(0x5e7a, 0x212c, 0x6860, 0x87ed, 0x2e86, 0x1d39, 0x1, 0x1);
        gbc.writeMem(0x5e7a, { 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x212c, gbc.sp());
        EXPECT(0x5e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01CE
        gbc.setState(0x83df, 0x663c, 0x8f30, 0x357a, 0x7ad9, 0xec61, 0x0, 0x0);
        gbc.writeMem(0x83df, { 0x6a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x663c, gbc.sp());
        EXPECT(0x83e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x83df));
        // 6A 01CF
        gbc.setState(0x4fe2, 0xf145, 0x4130, 0xe786, 0xd231, 0x3144, 0x0, 0x0);
        gbc.writeMem(0x4fe2, { 0x6a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf145, gbc.sp());
        EXPECT(0x4fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01D0
        gbc.setState(0xdeac, 0xfc18, 0xf9a0, 0x8271, 0x37f7, 0x9609, 0x1, 0x1);
        gbc.writeMem(0xdeac, { 0x6a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfc18, gbc.sp());
        EXPECT(0xdead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdeac));
        // 6A 01D1
        gbc.setState(0x3b30, 0x3892, 0x27e0, 0xb663, 0xc1e0, 0x66f2, 0x1, 0x1);
        gbc.writeMem(0x3b30, { 0x6a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3892, gbc.sp());
        EXPECT(0x3b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01D2
        gbc.setState(0x2509, 0x7897, 0x8e40, 0x9a5f, 0x46ab, 0xfc7f, 0x1, 0x1);
        gbc.writeMem(0x2509, { 0x6a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7897, gbc.sp());
        EXPECT(0x250a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01D3
        gbc.setState(0xc2e5, 0x1823, 0x8ef0, 0x5ac5, 0xb46, 0xe298, 0x1, 0x1);
        gbc.writeMem(0xc2e5, { 0x6a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1823, gbc.sp());
        EXPECT(0xc2e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc2e5));
        // 6A 01D4
        gbc.setState(0x4bd6, 0x3456, 0x5a80, 0xb3c, 0xbd4c, 0x42d5, 0x0, 0x0);
        gbc.writeMem(0x4bd6, { 0x6a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3456, gbc.sp());
        EXPECT(0x4bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01D5
        gbc.setState(0x8b8c, 0x3d13, 0x4ff0, 0xf56, 0x4898, 0x4404, 0x1, 0x1);
        gbc.writeMem(0x8b8c, { 0x6a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3d13, gbc.sp());
        EXPECT(0x8b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8b8c));
        // 6A 01D6
        gbc.setState(0x5ed9, 0x28ad, 0x85d0, 0x867a, 0xb7ea, 0xe091, 0x0, 0x1);
        gbc.writeMem(0x5ed9, { 0x6a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x28ad, gbc.sp());
        EXPECT(0x5eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01D7
        gbc.setState(0x34ca, 0xf0b8, 0xb2b0, 0x2699, 0x74ca, 0x2f1e, 0x0, 0x0);
        gbc.writeMem(0x34ca, { 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf0b8, gbc.sp());
        EXPECT(0x34cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01D8
        gbc.setState(0x708, 0xaa9, 0x4d10, 0x3ddd, 0x77cd, 0xc162, 0x0, 0x1);
        gbc.writeMem(0x708, { 0x6a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xaa9, gbc.sp());
        EXPECT(0x709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01D9
        gbc.setState(0xe0f6, 0x9631, 0x55b0, 0x674d, 0x6d18, 0xb12, 0x0, 0x0);
        gbc.writeMem(0xe0f6, { 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9631, gbc.sp());
        EXPECT(0xe0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe0f6));
        // 6A 01DA
        gbc.setState(0xa078, 0xca49, 0x98c0, 0x75b3, 0x11f6, 0x41fb, 0x1, 0x0);
        gbc.writeMem(0xa078, { 0x6a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xca49, gbc.sp());
        EXPECT(0xa079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa078));
        // 6A 01DB
        gbc.setState(0x40ec, 0x4218, 0x89c0, 0x5071, 0x6383, 0x1a24, 0x1, 0x0);
        gbc.writeMem(0x40ec, { 0x6a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4218, gbc.sp());
        EXPECT(0x40ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01DC
        gbc.setState(0xd1c, 0x6352, 0xa820, 0x36ab, 0x20de, 0x9023, 0x0, 0x0);
        gbc.writeMem(0xd1c, { 0x6a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6352, gbc.sp());
        EXPECT(0xd1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01DD
        gbc.setState(0x36c9, 0xc2c7, 0x5f0, 0x1e0b, 0x33b6, 0x1358, 0x0, 0x0);
        gbc.writeMem(0x36c9, { 0x6a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc2c7, gbc.sp());
        EXPECT(0x36ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01DF
        gbc.setState(0xc282, 0x362a, 0xbb40, 0xc927, 0x18a1, 0xa82e, 0x1, 0x1);
        gbc.writeMem(0xc282, { 0x6a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x362a, gbc.sp());
        EXPECT(0xc283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc282));
        // 6A 01E0
        gbc.setState(0x6c2d, 0xbf49, 0xb0c0, 0xf66f, 0x8add, 0x374, 0x1, 0x1);
        gbc.writeMem(0x6c2d, { 0x6a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbf49, gbc.sp());
        EXPECT(0x6c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01E1
        gbc.setState(0x9fcc, 0xfc5c, 0x3f00, 0x8a51, 0x58ba, 0x3318, 0x0, 0x0);
        gbc.writeMem(0x9fcc, { 0x6a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfc5c, gbc.sp());
        EXPECT(0x9fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9fcc));
        // 6A 01E2
        gbc.setState(0x8ddf, 0x8328, 0x1540, 0xa85e, 0xc59c, 0xddb2, 0x1, 0x1);
        gbc.writeMem(0x8ddf, { 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8328, gbc.sp());
        EXPECT(0x8de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8ddf));
        // 6A 01E3
        gbc.setState(0x3c94, 0x6b31, 0xd1e0, 0x4aad, 0x8f23, 0x3300, 0x1, 0x0);
        gbc.writeMem(0x3c94, { 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6b31, gbc.sp());
        EXPECT(0x3c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01E4
        gbc.setState(0x54d1, 0xb1f5, 0x1150, 0xf03a, 0x38f7, 0xb937, 0x1, 0x1);
        gbc.writeMem(0x54d1, { 0x6a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb1f5, gbc.sp());
        EXPECT(0x54d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01E5
        gbc.setState(0xa63b, 0xed23, 0xbd00, 0x1de2, 0xd3c5, 0x6447, 0x0, 0x0);
        gbc.writeMem(0xa63b, { 0x6a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xed23, gbc.sp());
        EXPECT(0xa63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa63b));
        // 6A 01E6
        gbc.setState(0x144, 0xc5df, 0x8d30, 0xc40d, 0x17d9, 0x71ad, 0x0, 0x1);
        gbc.writeMem(0x144, { 0x6a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc5df, gbc.sp());
        EXPECT(0x145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01E7
        gbc.setState(0xb4c6, 0x4fc4, 0xb300, 0x2e4, 0x2304, 0xbdc, 0x0, 0x0);
        gbc.writeMem(0xb4c6, { 0x6a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4fc4, gbc.sp());
        EXPECT(0xb4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb4c6));
        // 6A 01E8
        gbc.setState(0x8343, 0xc894, 0x6810, 0x50e0, 0xd815, 0x53ff, 0x1, 0x0);
        gbc.writeMem(0x8343, { 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc894, gbc.sp());
        EXPECT(0x8344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8343));
        // 6A 01E9
        gbc.setState(0x6193, 0x8654, 0x7cd0, 0x359f, 0x491a, 0xa225, 0x0, 0x1);
        gbc.writeMem(0x6193, { 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8654, gbc.sp());
        EXPECT(0x6194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01EA
        gbc.setState(0xabaf, 0xb35, 0x4dc0, 0x2993, 0x85ba, 0xfeef, 0x1, 0x0);
        gbc.writeMem(0xabaf, { 0x6a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb35, gbc.sp());
        EXPECT(0xabb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xabaf));
        // 6A 01EB
        gbc.setState(0xa049, 0xf528, 0xbfe0, 0xe633, 0x2839, 0x6c92, 0x1, 0x0);
        gbc.writeMem(0xa049, { 0x6a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf528, gbc.sp());
        EXPECT(0xa04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa049));
        // 6A 01EC
        gbc.setState(0x3a70, 0x6c1a, 0x5e30, 0x5217, 0xdf3b, 0x388a, 0x0, 0x0);
        gbc.writeMem(0x3a70, { 0x6a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6c1a, gbc.sp());
        EXPECT(0x3a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01ED
        gbc.setState(0xc6fb, 0x574f, 0x1d30, 0xd175, 0x9b7b, 0xb081, 0x1, 0x1);
        gbc.writeMem(0xc6fb, { 0x6a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x574f, gbc.sp());
        EXPECT(0xc6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc6fb));
        // 6A 01EE
        gbc.setState(0xb53c, 0xa8c5, 0x2a0, 0x68a1, 0x6080, 0xf8f0, 0x0, 0x1);
        gbc.writeMem(0xb53c, { 0x6a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa8c5, gbc.sp());
        EXPECT(0xb53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb53c));
        // 6A 01EF
        gbc.setState(0x9a2a, 0xd81b, 0x63c0, 0xbfce, 0x5432, 0x26da, 0x0, 0x0);
        gbc.writeMem(0x9a2a, { 0x6a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd81b, gbc.sp());
        EXPECT(0x9a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9a2a));
        // 6A 01F0
        gbc.setState(0xd1e, 0xe563, 0xe9a0, 0x924a, 0x8b85, 0xfabc, 0x0, 0x0);
        gbc.writeMem(0xd1e, { 0x6a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe563, gbc.sp());
        EXPECT(0xd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01F1
        gbc.setState(0x7b47, 0xb4ee, 0x950, 0x30fd, 0xee23, 0xd8a7, 0x0, 0x0);
        gbc.writeMem(0x7b47, { 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb4ee, gbc.sp());
        EXPECT(0x7b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01F2
        gbc.setState(0xc90e, 0xc2f, 0x12f0, 0x119c, 0xe026, 0x5750, 0x0, 0x1);
        gbc.writeMem(0xc90e, { 0x6a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc2f, gbc.sp());
        EXPECT(0xc90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc90e));
        // 6A 01F3
        gbc.setState(0x64d1, 0x804f, 0x4d60, 0xcfdf, 0x2d08, 0xb25c, 0x0, 0x1);
        gbc.writeMem(0x64d1, { 0x6a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x804f, gbc.sp());
        EXPECT(0x64d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01F4
        gbc.setState(0xe614, 0x3fe1, 0xdd40, 0xf519, 0x51ed, 0x8faf, 0x0, 0x1);
        gbc.writeMem(0xe614, { 0x6a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3fe1, gbc.sp());
        EXPECT(0xe615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe614));
        // 6A 01F5
        gbc.setState(0x436d, 0x30ea, 0xe010, 0x7736, 0x2d7, 0x1f01, 0x1, 0x0);
        gbc.writeMem(0x436d, { 0x6a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x30ea, gbc.sp());
        EXPECT(0x436e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01F6
        gbc.setState(0x24b1, 0x42b1, 0x170, 0x13ba, 0x76a4, 0x4e1e, 0x0, 0x1);
        gbc.writeMem(0x24b1, { 0x6a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x42b1, gbc.sp());
        EXPECT(0x24b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01F7
        gbc.setState(0x721c, 0x3911, 0x6720, 0xdf6a, 0x32f8, 0xef5a, 0x1, 0x1);
        gbc.writeMem(0x721c, { 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3911, gbc.sp());
        EXPECT(0x721d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01F8
        gbc.setState(0x6f, 0x7cf2, 0xc630, 0x1e6b, 0x7a3e, 0x6d8e, 0x0, 0x1);
        gbc.writeMem(0x6f, { 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7cf2, gbc.sp());
        EXPECT(0x70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01F9
        gbc.setState(0x2238, 0xecd3, 0xb1d0, 0x90cc, 0x2c16, 0xb8fb, 0x0, 0x0);
        gbc.writeMem(0x2238, { 0x6a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xecd3, gbc.sp());
        EXPECT(0x2239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01FA
        gbc.setState(0x3047, 0x7283, 0xaa80, 0x6f10, 0x820f, 0x5066, 0x1, 0x1);
        gbc.writeMem(0x3047, { 0x6a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7283, gbc.sp());
        EXPECT(0x3048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01FB
        gbc.setState(0x3530, 0xb6be, 0x6780, 0x3cfa, 0xe78b, 0xc26, 0x1, 0x1);
        gbc.writeMem(0x3530, { 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb6be, gbc.sp());
        EXPECT(0x3531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 01FC
        gbc.setState(0x5c0d, 0x2ff8, 0xb7f0, 0x92fb, 0x5c0d, 0xeebc, 0x1, 0x1);
        gbc.writeMem(0x5c0d, { 0x6a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2ff8, gbc.sp());
        EXPECT(0x5c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01FD
        gbc.setState(0x69bc, 0xb53b, 0x6f70, 0xf8fb, 0xe3cc, 0x5a45, 0x0, 0x1);
        gbc.writeMem(0x69bc, { 0x6a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb53b, gbc.sp());
        EXPECT(0x69bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01FE
        gbc.setState(0x6de1, 0x9e81, 0x3eb0, 0xab72, 0xa58d, 0x9420, 0x1, 0x0);
        gbc.writeMem(0x6de1, { 0x6a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9e81, gbc.sp());
        EXPECT(0x6de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 01FF
        gbc.setState(0xed43, 0x5332, 0xb5c0, 0x185d, 0x2bc4, 0x169d, 0x0, 0x0);
        gbc.writeMem(0xed43, { 0x6a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5332, gbc.sp());
        EXPECT(0xed44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xed43));
        // 6A 0200
        gbc.setState(0x9e26, 0x57b4, 0x4910, 0x18a1, 0x5ef3, 0x4afc, 0x0, 0x1);
        gbc.writeMem(0x9e26, { 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x57b4, gbc.sp());
        EXPECT(0x9e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9e26));
        // 6A 0202
        gbc.setState(0x6a5e, 0x2bd, 0x1bd0, 0xe162, 0xd0ee, 0x2e91, 0x0, 0x1);
        gbc.writeMem(0x6a5e, { 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2bd, gbc.sp());
        EXPECT(0x6a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0203
        gbc.setState(0xad64, 0xd600, 0x9ec0, 0xa22c, 0x94c4, 0xecc0, 0x1, 0x0);
        gbc.writeMem(0xad64, { 0x6a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd600, gbc.sp());
        EXPECT(0xad65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xad64));
        // 6A 0204
        gbc.setState(0xacf5, 0x625f, 0x1f20, 0x4d70, 0x246b, 0xb6f6, 0x1, 0x1);
        gbc.writeMem(0xacf5, { 0x6a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x625f, gbc.sp());
        EXPECT(0xacf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xacf5));
        // 6A 0205
        gbc.setState(0xcadd, 0x3874, 0x8800, 0x72fc, 0x4736, 0x9c64, 0x1, 0x0);
        gbc.writeMem(0xcadd, { 0x6a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3874, gbc.sp());
        EXPECT(0xcade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcadd));
        // 6A 0206
        gbc.setState(0xcd0a, 0x4ff1, 0x4600, 0x4aae, 0x460e, 0xed49, 0x0, 0x0);
        gbc.writeMem(0xcd0a, { 0x6a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4ff1, gbc.sp());
        EXPECT(0xcd0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcd0a));
        // 6A 0207
        gbc.setState(0x1c8b, 0x943d, 0x94b0, 0xfe08, 0x89c1, 0x265d, 0x0, 0x1);
        gbc.writeMem(0x1c8b, { 0x6a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x943d, gbc.sp());
        EXPECT(0x1c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0208
        gbc.setState(0x16c8, 0x302c, 0x9840, 0xa1, 0x23d9, 0x2c64, 0x1, 0x0);
        gbc.writeMem(0x16c8, { 0x6a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x302c, gbc.sp());
        EXPECT(0x16c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0209
        gbc.setState(0xdfcb, 0x5001, 0xed20, 0x6aee, 0x99e7, 0x780f, 0x1, 0x1);
        gbc.writeMem(0xdfcb, { 0x6a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5001, gbc.sp());
        EXPECT(0xdfcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdfcb));
        // 6A 020A
        gbc.setState(0x630b, 0x2876, 0x8880, 0x857f, 0x27dd, 0xfab0, 0x0, 0x0);
        gbc.writeMem(0x630b, { 0x6a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2876, gbc.sp());
        EXPECT(0x630c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 020B
        gbc.setState(0x2532, 0x993, 0x90a0, 0x7338, 0xf9bb, 0x697d, 0x1, 0x0);
        gbc.writeMem(0x2532, { 0x6a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x993, gbc.sp());
        EXPECT(0x2533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 020C
        gbc.setState(0x84f2, 0x68c4, 0x2c50, 0x942d, 0xee3d, 0x65c3, 0x1, 0x1);
        gbc.writeMem(0x84f2, { 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x68c4, gbc.sp());
        EXPECT(0x84f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x84f2));
        // 6A 020D
        gbc.setState(0xa6cc, 0xcb7b, 0xc190, 0x2af, 0x21f4, 0xa4c2, 0x1, 0x1);
        gbc.writeMem(0xa6cc, { 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcb7b, gbc.sp());
        EXPECT(0xa6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa6cc));
        // 6A 020E
        gbc.setState(0xbbbd, 0xe655, 0x3b0, 0xecbe, 0xc719, 0xdee2, 0x0, 0x0);
        gbc.writeMem(0xbbbd, { 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe655, gbc.sp());
        EXPECT(0xbbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbbbd));
        // 6A 020F
        gbc.setState(0xbff9, 0x5bf4, 0xcd40, 0xb4, 0xb956, 0xeb9c, 0x0, 0x0);
        gbc.writeMem(0xbff9, { 0x6a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5bf4, gbc.sp());
        EXPECT(0xbffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbff9));
        // 6A 0210
        gbc.setState(0x9d5a, 0xb74d, 0x2d40, 0xa994, 0x50ff, 0xc904, 0x1, 0x0);
        gbc.writeMem(0x9d5a, { 0x6a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb74d, gbc.sp());
        EXPECT(0x9d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9d5a));
        // 6A 0211
        gbc.setState(0xb133, 0x82b0, 0xc640, 0xe8e7, 0xd84f, 0x675a, 0x1, 0x0);
        gbc.writeMem(0xb133, { 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x82b0, gbc.sp());
        EXPECT(0xb134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb133));
        // 6A 0212
        gbc.setState(0x7696, 0x30cd, 0xa650, 0xa3bd, 0x2f53, 0xb50d, 0x1, 0x0);
        gbc.writeMem(0x7696, { 0x6a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x30cd, gbc.sp());
        EXPECT(0x7697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0213
        gbc.setState(0xeb79, 0x5ed9, 0xdd40, 0xe9c7, 0x3d07, 0x7bfe, 0x0, 0x1);
        gbc.writeMem(0xeb79, { 0x6a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5ed9, gbc.sp());
        EXPECT(0xeb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xeb79));
        // 6A 0214
        gbc.setState(0x1e98, 0x74b1, 0x7dc0, 0xfebd, 0x8673, 0xbe3, 0x1, 0x1);
        gbc.writeMem(0x1e98, { 0x6a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x74b1, gbc.sp());
        EXPECT(0x1e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0215
        gbc.setState(0x3bef, 0x8a57, 0x5a60, 0x4532, 0x9781, 0xcd2a, 0x1, 0x1);
        gbc.writeMem(0x3bef, { 0x6a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8a57, gbc.sp());
        EXPECT(0x3bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0217
        gbc.setState(0xa882, 0x5667, 0x18e0, 0x8220, 0x37a4, 0x2d29, 0x0, 0x1);
        gbc.writeMem(0xa882, { 0x6a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5667, gbc.sp());
        EXPECT(0xa883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa882));
        // 6A 0218
        gbc.setState(0x3ef5, 0x76a3, 0xd240, 0xf400, 0xc976, 0x6edb, 0x1, 0x1);
        gbc.writeMem(0x3ef5, { 0x6a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x76a3, gbc.sp());
        EXPECT(0x3ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 021A
        gbc.setState(0xb9f5, 0xdf7d, 0x7b20, 0xb003, 0xf5b8, 0xbf8e, 0x1, 0x1);
        gbc.writeMem(0xb9f5, { 0x6a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdf7d, gbc.sp());
        EXPECT(0xb9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb9f5));
        // 6A 021B
        gbc.setState(0x6f70, 0x829e, 0x25e0, 0xd9f2, 0x3d63, 0x1ae8, 0x0, 0x0);
        gbc.writeMem(0x6f70, { 0x6a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x829e, gbc.sp());
        EXPECT(0x6f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 021C
        gbc.setState(0xdb66, 0xe1fa, 0xf7f0, 0x9a05, 0xaff7, 0xf27d, 0x0, 0x1);
        gbc.writeMem(0xdb66, { 0x6a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe1fa, gbc.sp());
        EXPECT(0xdb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdb66));
        // 6A 021D
        gbc.setState(0x8d36, 0x75b7, 0x51d0, 0xef5e, 0x6f51, 0x180c, 0x1, 0x0);
        gbc.writeMem(0x8d36, { 0x6a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x75b7, gbc.sp());
        EXPECT(0x8d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8d36));
        // 6A 021F
        gbc.setState(0xed9, 0xbfd0, 0xdfe0, 0xa4c9, 0xeaba, 0x87d9, 0x0, 0x1);
        gbc.writeMem(0xed9, { 0x6a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbfd0, gbc.sp());
        EXPECT(0xeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0220
        gbc.setState(0x1179, 0x70f0, 0x230, 0xaa5e, 0x4a65, 0x86e3, 0x0, 0x0);
        gbc.writeMem(0x1179, { 0x6a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x70f0, gbc.sp());
        EXPECT(0x117a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0221
        gbc.setState(0xac82, 0x401a, 0xd740, 0x16ca, 0xa1b3, 0xfc58, 0x1, 0x1);
        gbc.writeMem(0xac82, { 0x6a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x401a, gbc.sp());
        EXPECT(0xac83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xac82));
        // 6A 0222
        gbc.setState(0x4a5, 0x6a01, 0x1a40, 0x8ed7, 0x8a4c, 0xbaaa, 0x0, 0x0);
        gbc.writeMem(0x4a5, { 0x6a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6a01, gbc.sp());
        EXPECT(0x4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0223
        gbc.setState(0x75db, 0xfd14, 0xb790, 0x544, 0xdddc, 0xacb6, 0x0, 0x1);
        gbc.writeMem(0x75db, { 0x6a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfd14, gbc.sp());
        EXPECT(0x75dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0224
        gbc.setState(0x622f, 0x245a, 0xfa70, 0x73f2, 0x247a, 0xcd36, 0x0, 0x1);
        gbc.writeMem(0x622f, { 0x6a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x245a, gbc.sp());
        EXPECT(0x6230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0225
        gbc.setState(0x864, 0xfa3, 0x44e0, 0x96de, 0x57f3, 0xe375, 0x1, 0x1);
        gbc.writeMem(0x864, { 0x6a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfa3, gbc.sp());
        EXPECT(0x865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0226
        gbc.setState(0x2454, 0x1c7, 0x1910, 0xdb1e, 0x71c4, 0x1a96, 0x1, 0x1);
        gbc.writeMem(0x2454, { 0x6a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1c7, gbc.sp());
        EXPECT(0x2455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0227
        gbc.setState(0x8cfc, 0x9380, 0x5ab0, 0xc99d, 0x2d04, 0xf5bc, 0x0, 0x1);
        gbc.writeMem(0x8cfc, { 0x6a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9380, gbc.sp());
        EXPECT(0x8cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8cfc));
        // 6A 0228
        gbc.setState(0x35e9, 0x90b8, 0xf020, 0x2e24, 0x3821, 0xcf27, 0x0, 0x1);
        gbc.writeMem(0x35e9, { 0x6a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x90b8, gbc.sp());
        EXPECT(0x35ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0229
        gbc.setState(0x468, 0xd609, 0x6960, 0x37b1, 0x5b6c, 0xb3aa, 0x0, 0x0);
        gbc.writeMem(0x468, { 0x6a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd609, gbc.sp());
        EXPECT(0x469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 022A
        gbc.setState(0x7e31, 0xabd9, 0xe640, 0x6c8, 0x2206, 0xc230, 0x1, 0x1);
        gbc.writeMem(0x7e31, { 0x6a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xabd9, gbc.sp());
        EXPECT(0x7e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 022B
        gbc.setState(0x9ff2, 0xb35c, 0x6f0, 0x64c1, 0x93f4, 0xc4b1, 0x0, 0x1);
        gbc.writeMem(0x9ff2, { 0x6a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb35c, gbc.sp());
        EXPECT(0x9ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9ff2));
        // 6A 022C
        gbc.setState(0x173c, 0x65ce, 0x5dd0, 0x1e2, 0x3125, 0xf983, 0x0, 0x0);
        gbc.writeMem(0x173c, { 0x6a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x65ce, gbc.sp());
        EXPECT(0x173d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 022D
        gbc.setState(0xe4db, 0xb010, 0xac80, 0x50e3, 0x13bc, 0x1c5b, 0x1, 0x1);
        gbc.writeMem(0xe4db, { 0x6a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb010, gbc.sp());
        EXPECT(0xe4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe4db));
        // 6A 022E
        gbc.setState(0x8905, 0x17f3, 0x3770, 0xdecd, 0x50e4, 0x6612, 0x1, 0x1);
        gbc.writeMem(0x8905, { 0x6a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x17f3, gbc.sp());
        EXPECT(0x8906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8905));
        // 6A 022F
        gbc.setState(0x3192, 0xade7, 0x7340, 0x77aa, 0x26c7, 0x2d29, 0x1, 0x0);
        gbc.writeMem(0x3192, { 0x6a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xade7, gbc.sp());
        EXPECT(0x3193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0230
        gbc.setState(0xab23, 0xc428, 0xc690, 0xc5f4, 0xb4cd, 0xd220, 0x1, 0x1);
        gbc.writeMem(0xab23, { 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc428, gbc.sp());
        EXPECT(0xab24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xab23));
        // 6A 0231
        gbc.setState(0x8f1c, 0x2cb3, 0x6d70, 0x528, 0x3d7a, 0xb87a, 0x1, 0x1);
        gbc.writeMem(0x8f1c, { 0x6a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2cb3, gbc.sp());
        EXPECT(0x8f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8f1c));
        // 6A 0232
        gbc.setState(0x8a7c, 0xfde3, 0x1d0, 0x5aaa, 0x224d, 0xc0b2, 0x1, 0x0);
        gbc.writeMem(0x8a7c, { 0x6a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfde3, gbc.sp());
        EXPECT(0x8a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8a7c));
        // 6A 0233
        gbc.setState(0xc3a9, 0x14ae, 0x7060, 0xec1c, 0x5839, 0x2beb, 0x1, 0x0);
        gbc.writeMem(0xc3a9, { 0x6a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x14ae, gbc.sp());
        EXPECT(0xc3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc3a9));
        // 6A 0234
        gbc.setState(0x684c, 0x87dd, 0xc7e0, 0x1867, 0x15c1, 0x436b, 0x0, 0x0);
        gbc.writeMem(0x684c, { 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x87dd, gbc.sp());
        EXPECT(0x684d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0235
        gbc.setState(0x6f12, 0x804e, 0xdfe0, 0x5481, 0x373e, 0x7a2a, 0x0, 0x1);
        gbc.writeMem(0x6f12, { 0x6a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x804e, gbc.sp());
        EXPECT(0x6f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0236
        gbc.setState(0xf0e, 0x16ef, 0xb80, 0x5d02, 0x73fe, 0x4d5d, 0x1, 0x0);
        gbc.writeMem(0xf0e, { 0x6a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x16ef, gbc.sp());
        EXPECT(0xf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0237
        gbc.setState(0x47b4, 0xa98c, 0xfc90, 0x853, 0x3ada, 0xc4b5, 0x0, 0x1);
        gbc.writeMem(0x47b4, { 0x6a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa98c, gbc.sp());
        EXPECT(0x47b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0238
        gbc.setState(0x76ed, 0x8712, 0xbf40, 0xbccd, 0xd3b9, 0x6d25, 0x1, 0x1);
        gbc.writeMem(0x76ed, { 0x6a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8712, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0239
        gbc.setState(0x4235, 0xe567, 0x88b0, 0xfe6c, 0x9eb3, 0xc981, 0x0, 0x1);
        gbc.writeMem(0x4235, { 0x6a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe567, gbc.sp());
        EXPECT(0x4236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 023A
        gbc.setState(0x4a6a, 0x5b4c, 0x2440, 0x651d, 0xb261, 0x8f8c, 0x1, 0x0);
        gbc.writeMem(0x4a6a, { 0x6a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5b4c, gbc.sp());
        EXPECT(0x4a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 023B
        gbc.setState(0x789a, 0x1c4f, 0x9300, 0x404c, 0x4103, 0x2604, 0x1, 0x0);
        gbc.writeMem(0x789a, { 0x6a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1c4f, gbc.sp());
        EXPECT(0x789b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 023D
        gbc.setState(0xb1ba, 0x169f, 0xf610, 0xb046, 0xf77b, 0xfe73, 0x0, 0x0);
        gbc.writeMem(0xb1ba, { 0x6a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x169f, gbc.sp());
        EXPECT(0xb1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb1ba));
        // 6A 023E
        gbc.setState(0x18c, 0xb4c5, 0xbd40, 0xe1c4, 0xe3d3, 0x644a, 0x0, 0x1);
        gbc.writeMem(0x18c, { 0x6a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb4c5, gbc.sp());
        EXPECT(0x18d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 023F
        gbc.setState(0xe755, 0xb53c, 0xa6f0, 0xdf2a, 0x482, 0xc7a9, 0x0, 0x0);
        gbc.writeMem(0xe755, { 0x6a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb53c, gbc.sp());
        EXPECT(0xe756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe755));
        // 6A 0240
        gbc.setState(0x9fbe, 0xfbc5, 0x6020, 0x7e8a, 0x830a, 0xf97b, 0x1, 0x0);
        gbc.writeMem(0x9fbe, { 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfbc5, gbc.sp());
        EXPECT(0x9fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9fbe));
        // 6A 0241
        gbc.setState(0x33ee, 0x2061, 0x4330, 0xde77, 0xa07f, 0xaf94, 0x0, 0x0);
        gbc.writeMem(0x33ee, { 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2061, gbc.sp());
        EXPECT(0x33ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0242
        gbc.setState(0x1017, 0x4623, 0x1040, 0x398e, 0x90fb, 0x11a5, 0x0, 0x0);
        gbc.writeMem(0x1017, { 0x6a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4623, gbc.sp());
        EXPECT(0x1018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0244
        gbc.setState(0x5606, 0x7bc2, 0x9a80, 0xf1c6, 0x8370, 0x230d, 0x0, 0x0);
        gbc.writeMem(0x5606, { 0x6a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7bc2, gbc.sp());
        EXPECT(0x5607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0245
        gbc.setState(0xef1c, 0x40f5, 0x51f0, 0x93f4, 0x68ac, 0x4c58, 0x1, 0x0);
        gbc.writeMem(0xef1c, { 0x6a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x40f5, gbc.sp());
        EXPECT(0xef1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xef1c));
        // 6A 0246
        gbc.setState(0xab8a, 0x369c, 0x740, 0x7570, 0xf772, 0xe6ec, 0x0, 0x1);
        gbc.writeMem(0xab8a, { 0x6a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x369c, gbc.sp());
        EXPECT(0xab8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xab8a));
        // 6A 0247
        gbc.setState(0x1ec3, 0x8025, 0xc460, 0x5e05, 0x615a, 0x20af, 0x1, 0x0);
        gbc.writeMem(0x1ec3, { 0x6a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8025, gbc.sp());
        EXPECT(0x1ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0248
        gbc.setState(0x134d, 0xd9ee, 0x6500, 0x376d, 0x8bcd, 0x25e4, 0x0, 0x0);
        gbc.writeMem(0x134d, { 0x6a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd9ee, gbc.sp());
        EXPECT(0x134e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0249
        gbc.setState(0xa319, 0x5ef1, 0xb20, 0xebe5, 0x58dc, 0x47a0, 0x1, 0x0);
        gbc.writeMem(0xa319, { 0x6a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5ef1, gbc.sp());
        EXPECT(0xa31a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa319));
        // 6A 024A
        gbc.setState(0x7b15, 0x14c, 0x33c0, 0x20b4, 0xe152, 0x8e6b, 0x1, 0x1);
        gbc.writeMem(0x7b15, { 0x6a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x14c, gbc.sp());
        EXPECT(0x7b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 024B
        gbc.setState(0x489, 0x74c, 0xd650, 0xc82b, 0x715e, 0xf3a4, 0x1, 0x1);
        gbc.writeMem(0x489, { 0x6a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x74c, gbc.sp());
        EXPECT(0x48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 024C
        gbc.setState(0x5937, 0x8b9a, 0x7330, 0x5bae, 0x8247, 0xe296, 0x0, 0x0);
        gbc.writeMem(0x5937, { 0x6a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8b9a, gbc.sp());
        EXPECT(0x5938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 024D
        gbc.setState(0xe053, 0x5e1b, 0x1d30, 0x439f, 0x39ae, 0xfe5d, 0x1, 0x0);
        gbc.writeMem(0xe053, { 0x6a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5e1b, gbc.sp());
        EXPECT(0xe054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe053));
        // 6A 024E
        gbc.setState(0x5db3, 0x351a, 0x750, 0xd17d, 0xc188, 0x8852, 0x0, 0x0);
        gbc.writeMem(0x5db3, { 0x6a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x351a, gbc.sp());
        EXPECT(0x5db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 024F
        gbc.setState(0xaf14, 0xb88e, 0x2eb0, 0xe1f2, 0x4b9a, 0x399d, 0x1, 0x1);
        gbc.writeMem(0xaf14, { 0x6a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb88e, gbc.sp());
        EXPECT(0xaf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xaf14));
        // 6A 0250
        gbc.setState(0xad9, 0xc8dc, 0xd750, 0x14f5, 0xb801, 0xea69, 0x0, 0x0);
        gbc.writeMem(0xad9, { 0x6a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc8dc, gbc.sp());
        EXPECT(0xada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0251
        gbc.setState(0xc153, 0xd5e, 0x14f0, 0xfb62, 0x84c8, 0x1096, 0x1, 0x0);
        gbc.writeMem(0xc153, { 0x6a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd5e, gbc.sp());
        EXPECT(0xc154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc153));
        // 6A 0252
        gbc.setState(0xb50a, 0x46ee, 0x1330, 0xa094, 0xa084, 0x6fe4, 0x0, 0x0);
        gbc.writeMem(0xb50a, { 0x6a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x46ee, gbc.sp());
        EXPECT(0xb50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb50a));
        // 6A 0254
        gbc.setState(0x495, 0x684e, 0x8a60, 0x8a45, 0x82d5, 0xca13, 0x1, 0x0);
        gbc.writeMem(0x495, { 0x6a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x684e, gbc.sp());
        EXPECT(0x496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0255
        gbc.setState(0xe7be, 0x2c8d, 0xf130, 0xf1ff, 0x1a41, 0x64b8, 0x0, 0x1);
        gbc.writeMem(0xe7be, { 0x6a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2c8d, gbc.sp());
        EXPECT(0xe7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe7be));
        // 6A 0257
        gbc.setState(0x2f09, 0x3cdf, 0xdf10, 0x7e39, 0xdfc0, 0xcdc5, 0x1, 0x1);
        gbc.writeMem(0x2f09, { 0x6a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3cdf, gbc.sp());
        EXPECT(0x2f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0258
        gbc.setState(0xb56c, 0x5253, 0x9750, 0x4299, 0xa0a9, 0x3bb3, 0x0, 0x0);
        gbc.writeMem(0xb56c, { 0x6a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5253, gbc.sp());
        EXPECT(0xb56d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb56c));
        // 6A 0259
        gbc.setState(0xce7a, 0x9583, 0x7790, 0xc682, 0xe4ea, 0x216c, 0x1, 0x0);
        gbc.writeMem(0xce7a, { 0x6a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9583, gbc.sp());
        EXPECT(0xce7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xce7a));
        // 6A 025A
        gbc.setState(0x2d2a, 0x6210, 0x7eb0, 0x61b, 0xf638, 0xabf6, 0x0, 0x0);
        gbc.writeMem(0x2d2a, { 0x6a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6210, gbc.sp());
        EXPECT(0x2d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 025C
        gbc.setState(0x7774, 0x4272, 0xff0, 0x1a7d, 0xfc04, 0x600, 0x1, 0x1);
        gbc.writeMem(0x7774, { 0x6a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4272, gbc.sp());
        EXPECT(0x7775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 025D
        gbc.setState(0x841e, 0xef5f, 0x97b0, 0x720d, 0x2ca1, 0xda55, 0x1, 0x1);
        gbc.writeMem(0x841e, { 0x6a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xef5f, gbc.sp());
        EXPECT(0x841f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x841e));
        // 6A 025E
        gbc.setState(0x3055, 0x2e9a, 0x2250, 0x8bb7, 0x9ec8, 0x81f3, 0x0, 0x0);
        gbc.writeMem(0x3055, { 0x6a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2e9a, gbc.sp());
        EXPECT(0x3056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 025F
        gbc.setState(0xa5a7, 0xc289, 0x3890, 0xde20, 0x6c9f, 0xd2d1, 0x1, 0x1);
        gbc.writeMem(0xa5a7, { 0x6a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc289, gbc.sp());
        EXPECT(0xa5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa5a7));
        // 6A 0260
        gbc.setState(0x67c6, 0x34ab, 0x76d0, 0x5fd1, 0x74d4, 0xedb5, 0x0, 0x1);
        gbc.writeMem(0x67c6, { 0x6a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x34ab, gbc.sp());
        EXPECT(0x67c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0261
        gbc.setState(0x7ef9, 0xa923, 0xadf0, 0x176c, 0xd98b, 0xce4f, 0x0, 0x0);
        gbc.writeMem(0x7ef9, { 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa923, gbc.sp());
        EXPECT(0x7efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0262
        gbc.setState(0xa85c, 0xef42, 0x6bd0, 0x244, 0xb6dc, 0x42f5, 0x0, 0x1);
        gbc.writeMem(0xa85c, { 0x6a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xef42, gbc.sp());
        EXPECT(0xa85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa85c));
        // 6A 0263
        gbc.setState(0x33e0, 0x7821, 0x9be0, 0x1b5, 0x1088, 0x7944, 0x1, 0x1);
        gbc.writeMem(0x33e0, { 0x6a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7821, gbc.sp());
        EXPECT(0x33e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0264
        gbc.setState(0x41e2, 0xd710, 0x1970, 0x34f7, 0xfa19, 0x706a, 0x1, 0x0);
        gbc.writeMem(0x41e2, { 0x6a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd710, gbc.sp());
        EXPECT(0x41e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0266
        gbc.setState(0x81ad, 0xa0c4, 0x1e60, 0xad87, 0x998d, 0xac6c, 0x0, 0x0);
        gbc.writeMem(0x81ad, { 0x6a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa0c4, gbc.sp());
        EXPECT(0x81ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x81ad));
        // 6A 0267
        gbc.setState(0x47d0, 0x55be, 0xc930, 0xd797, 0x5947, 0xebe4, 0x1, 0x0);
        gbc.writeMem(0x47d0, { 0x6a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x55be, gbc.sp());
        EXPECT(0x47d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0269
        gbc.setState(0x9eb4, 0xba04, 0x8940, 0xc2be, 0x6024, 0xc172, 0x1, 0x1);
        gbc.writeMem(0x9eb4, { 0x6a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xba04, gbc.sp());
        EXPECT(0x9eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9eb4));
        // 6A 026A
        gbc.setState(0xc347, 0x2f44, 0xd270, 0x2879, 0xe3e, 0x7864, 0x1, 0x1);
        gbc.writeMem(0xc347, { 0x6a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2f44, gbc.sp());
        EXPECT(0xc348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc347));
        // 6A 026B
        gbc.setState(0xe851, 0x1ace, 0xc8b0, 0xf920, 0xdcf5, 0xc7b1, 0x0, 0x0);
        gbc.writeMem(0xe851, { 0x6a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1ace, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe851));
        // 6A 026C
        gbc.setState(0x20e3, 0x83b8, 0x2c0, 0xf3f6, 0xe164, 0xa6cb, 0x0, 0x0);
        gbc.writeMem(0x20e3, { 0x6a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x83b8, gbc.sp());
        EXPECT(0x20e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 026D
        gbc.setState(0xbc1b, 0xf921, 0x5df0, 0x982c, 0x2e4f, 0xef0e, 0x1, 0x1);
        gbc.writeMem(0xbc1b, { 0x6a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf921, gbc.sp());
        EXPECT(0xbc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbc1b));
        // 6A 026E
        gbc.setState(0xa3e7, 0xe40e, 0x50a0, 0xbac6, 0x92a5, 0xdc0e, 0x0, 0x1);
        gbc.writeMem(0xa3e7, { 0x6a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe40e, gbc.sp());
        EXPECT(0xa3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa3e7));
        // 6A 026F
        gbc.setState(0xe721, 0xb037, 0xf110, 0xc874, 0x454f, 0xb1cd, 0x1, 0x1);
        gbc.writeMem(0xe721, { 0x6a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb037, gbc.sp());
        EXPECT(0xe722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe721));
        // 6A 0270
        gbc.setState(0xdf23, 0xde77, 0x8d50, 0x3df9, 0x4a, 0xc61a, 0x0, 0x1);
        gbc.writeMem(0xdf23, { 0x6a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xde77, gbc.sp());
        EXPECT(0xdf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdf23));
        // 6A 0271
        gbc.setState(0x6856, 0x2ce4, 0xb670, 0x3f86, 0x8ff9, 0xe980, 0x1, 0x0);
        gbc.writeMem(0x6856, { 0x6a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2ce4, gbc.sp());
        EXPECT(0x6857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0272
        gbc.setState(0x8c18, 0xdbc1, 0x5820, 0x9427, 0x70aa, 0xc985, 0x1, 0x0);
        gbc.writeMem(0x8c18, { 0x6a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdbc1, gbc.sp());
        EXPECT(0x8c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8c18));
        // 6A 0273
        gbc.setState(0x4106, 0x5de2, 0x2330, 0x142f, 0xd10, 0x9281, 0x0, 0x1);
        gbc.writeMem(0x4106, { 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5de2, gbc.sp());
        EXPECT(0x4107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0274
        gbc.setState(0xb835, 0xae07, 0x4860, 0x9192, 0xb469, 0x1b58, 0x0, 0x1);
        gbc.writeMem(0xb835, { 0x6a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xae07, gbc.sp());
        EXPECT(0xb836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb835));
        // 6A 0275
        gbc.setState(0x1a53, 0x87e0, 0x8690, 0x8cbe, 0x4a89, 0xd8d, 0x0, 0x0);
        gbc.writeMem(0x1a53, { 0x6a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x87e0, gbc.sp());
        EXPECT(0x1a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0276
        gbc.setState(0xc11e, 0x71dd, 0x5400, 0xb1a5, 0x1000, 0x95b, 0x1, 0x1);
        gbc.writeMem(0xc11e, { 0x6a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x71dd, gbc.sp());
        EXPECT(0xc11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc11e));
        // 6A 0277
        gbc.setState(0x8616, 0x8781, 0x8cc0, 0xc5e8, 0x7171, 0x3e2d, 0x0, 0x1);
        gbc.writeMem(0x8616, { 0x6a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8781, gbc.sp());
        EXPECT(0x8617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8616));
        // 6A 0278
        gbc.setState(0x8c1c, 0xabcc, 0x470, 0x8845, 0x20e5, 0x4bb9, 0x1, 0x0);
        gbc.writeMem(0x8c1c, { 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xabcc, gbc.sp());
        EXPECT(0x8c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8c1c));
        // 6A 0279
        gbc.setState(0xb342, 0xb32f, 0xf170, 0xebaa, 0x2ea, 0x385d, 0x0, 0x1);
        gbc.writeMem(0xb342, { 0x6a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb32f, gbc.sp());
        EXPECT(0xb343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb342));
        // 6A 027B
        gbc.setState(0xb2, 0xd65b, 0xd4f0, 0x57d9, 0xe48e, 0x61c9, 0x1, 0x1);
        gbc.writeMem(0xb2, { 0x6a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd65b, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 027C
        gbc.setState(0xb636, 0x6659, 0x9ce0, 0xc5ef, 0xc858, 0x76ca, 0x0, 0x0);
        gbc.writeMem(0xb636, { 0x6a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6659, gbc.sp());
        EXPECT(0xb637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb636));
        // 6A 027D
        gbc.setState(0x6e87, 0xd087, 0xc580, 0xc075, 0xe8b5, 0xf986, 0x1, 0x0);
        gbc.writeMem(0x6e87, { 0x6a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd087, gbc.sp());
        EXPECT(0x6e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 027E
        gbc.setState(0x6e84, 0xd996, 0xb500, 0xc9e3, 0x372, 0x509d, 0x1, 0x0);
        gbc.writeMem(0x6e84, { 0x6a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd996, gbc.sp());
        EXPECT(0x6e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 027F
        gbc.setState(0x74b4, 0x8c, 0x5570, 0x1fa4, 0x271d, 0xbcef, 0x0, 0x1);
        gbc.writeMem(0x74b4, { 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8c, gbc.sp());
        EXPECT(0x74b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0280
        gbc.setState(0x2aec, 0x522e, 0x2e20, 0x74fe, 0xfe0c, 0x8e1f, 0x1, 0x1);
        gbc.writeMem(0x2aec, { 0x6a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x522e, gbc.sp());
        EXPECT(0x2aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0281
        gbc.setState(0x4253, 0x92d0, 0x3c60, 0x49bc, 0x51ad, 0x5fe8, 0x1, 0x0);
        gbc.writeMem(0x4253, { 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x92d0, gbc.sp());
        EXPECT(0x4254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0282
        gbc.setState(0x21ed, 0xa525, 0x60b0, 0xe179, 0x8bb5, 0x85e4, 0x1, 0x1);
        gbc.writeMem(0x21ed, { 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa525, gbc.sp());
        EXPECT(0x21ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0283
        gbc.setState(0x90e1, 0x90f0, 0xb250, 0x9338, 0x88f4, 0x1b32, 0x0, 0x0);
        gbc.writeMem(0x90e1, { 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x90f0, gbc.sp());
        EXPECT(0x90e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x90e1));
        // 6A 0284
        gbc.setState(0x1c34, 0x58cb, 0x6220, 0xb8c1, 0x1dba, 0xab80, 0x0, 0x0);
        gbc.writeMem(0x1c34, { 0x6a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x58cb, gbc.sp());
        EXPECT(0x1c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0286
        gbc.setState(0x668f, 0xc17, 0x6420, 0x320f, 0x59f, 0xf83b, 0x0, 0x1);
        gbc.writeMem(0x668f, { 0x6a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc17, gbc.sp());
        EXPECT(0x6690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0287
        gbc.setState(0x1b97, 0xa01e, 0x72e0, 0x1d13, 0x153e, 0xbfdc, 0x0, 0x1);
        gbc.writeMem(0x1b97, { 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa01e, gbc.sp());
        EXPECT(0x1b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0288
        gbc.setState(0x9ce6, 0xc6a2, 0xaed0, 0x84a9, 0xf6cd, 0x960a, 0x0, 0x1);
        gbc.writeMem(0x9ce6, { 0x6a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc6a2, gbc.sp());
        EXPECT(0x9ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9ce6));
        // 6A 0289
        gbc.setState(0x3fe2, 0xb42e, 0x9880, 0x5bd9, 0xb17f, 0x4516, 0x0, 0x0);
        gbc.writeMem(0x3fe2, { 0x6a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb42e, gbc.sp());
        EXPECT(0x3fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 028A
        gbc.setState(0x2d9a, 0xe96d, 0x8560, 0xa309, 0xfb5c, 0xa970, 0x0, 0x0);
        gbc.writeMem(0x2d9a, { 0x6a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe96d, gbc.sp());
        EXPECT(0x2d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 028B
        gbc.setState(0xcd77, 0x6a56, 0x8510, 0xefe0, 0xb3a2, 0xe0bd, 0x0, 0x0);
        gbc.writeMem(0xcd77, { 0x6a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6a56, gbc.sp());
        EXPECT(0xcd78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcd77));
        // 6A 028C
        gbc.setState(0x2ab4, 0x2f98, 0xf260, 0xa502, 0x47e9, 0x53a1, 0x1, 0x0);
        gbc.writeMem(0x2ab4, { 0x6a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2f98, gbc.sp());
        EXPECT(0x2ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 028D
        gbc.setState(0xa2da, 0xcef3, 0x3630, 0x632d, 0xc4ba, 0x265e, 0x1, 0x1);
        gbc.writeMem(0xa2da, { 0x6a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcef3, gbc.sp());
        EXPECT(0xa2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa2da));
        // 6A 028E
        gbc.setState(0x643d, 0xa38d, 0x2de0, 0x61bd, 0x71e9, 0x8e7d, 0x1, 0x1);
        gbc.writeMem(0x643d, { 0x6a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa38d, gbc.sp());
        EXPECT(0x643e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 028F
        gbc.setState(0x4656, 0x7e89, 0x9b70, 0x6e94, 0x3d25, 0x75d7, 0x0, 0x1);
        gbc.writeMem(0x4656, { 0x6a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7e89, gbc.sp());
        EXPECT(0x4657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0290
        gbc.setState(0x665a, 0x49d7, 0xa810, 0x1c5a, 0x53d7, 0x382c, 0x1, 0x1);
        gbc.writeMem(0x665a, { 0x6a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x49d7, gbc.sp());
        EXPECT(0x665b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0291
        gbc.setState(0xef4c, 0x4bc2, 0x7c50, 0xc292, 0x33d8, 0xdb31, 0x1, 0x1);
        gbc.writeMem(0xef4c, { 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4bc2, gbc.sp());
        EXPECT(0xef4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xef4c));
        // 6A 0292
        gbc.setState(0xc475, 0x9fd4, 0xd7e0, 0xa1b, 0x6ba4, 0xf3, 0x0, 0x0);
        gbc.writeMem(0xc475, { 0x6a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9fd4, gbc.sp());
        EXPECT(0xc476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc475));
        // 6A 0293
        gbc.setState(0xcc84, 0x7541, 0xc140, 0xdb33, 0x9da4, 0x6744, 0x0, 0x1);
        gbc.writeMem(0xcc84, { 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7541, gbc.sp());
        EXPECT(0xcc85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcc84));
        // 6A 0294
        gbc.setState(0x41a8, 0x5a7a, 0x8b20, 0x4bb6, 0xeb4, 0xef62, 0x0, 0x1);
        gbc.writeMem(0x41a8, { 0x6a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5a7a, gbc.sp());
        EXPECT(0x41a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0295
        gbc.setState(0xe417, 0xfe8d, 0x4c0, 0xc84c, 0x5d1f, 0x8c71, 0x1, 0x0);
        gbc.writeMem(0xe417, { 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfe8d, gbc.sp());
        EXPECT(0xe418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe417));
        // 6A 0296
        gbc.setState(0x9655, 0xdf6a, 0xa950, 0xd154, 0x3a9e, 0xda5c, 0x1, 0x1);
        gbc.writeMem(0x9655, { 0x6a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdf6a, gbc.sp());
        EXPECT(0x9656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9655));
        // 6A 0297
        gbc.setState(0xae06, 0x3069, 0xf730, 0x2265, 0x993f, 0x7a, 0x1, 0x0);
        gbc.writeMem(0xae06, { 0x6a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3069, gbc.sp());
        EXPECT(0xae07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xae06));
        // 6A 0298
        gbc.setState(0x7677, 0xcd56, 0x63f0, 0x8f1a, 0xf381, 0x4094, 0x0, 0x0);
        gbc.writeMem(0x7677, { 0x6a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcd56, gbc.sp());
        EXPECT(0x7678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0299
        gbc.setState(0xb52e, 0x548f, 0xd4a0, 0xcb2a, 0x5cbe, 0x3b4b, 0x1, 0x0);
        gbc.writeMem(0xb52e, { 0x6a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x548f, gbc.sp());
        EXPECT(0xb52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb52e));
        // 6A 029A
        gbc.setState(0x4747, 0xe50e, 0x6210, 0x4c47, 0xc66c, 0x1195, 0x1, 0x0);
        gbc.writeMem(0x4747, { 0x6a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe50e, gbc.sp());
        EXPECT(0x4748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 029B
        gbc.setState(0xc0ba, 0x3224, 0xcb80, 0x2f0b, 0xf6cc, 0x433c, 0x0, 0x0);
        gbc.writeMem(0xc0ba, { 0x6a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3224, gbc.sp());
        EXPECT(0xc0bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc0ba));
        // 6A 029C
        gbc.setState(0x3cfd, 0xa340, 0xb70, 0xef1e, 0xe14, 0x55c, 0x0, 0x0);
        gbc.writeMem(0x3cfd, { 0x6a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa340, gbc.sp());
        EXPECT(0x3cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 029D
        gbc.setState(0x3cf, 0xabea, 0x450, 0x18cf, 0x928, 0x384, 0x1, 0x1);
        gbc.writeMem(0x3cf, { 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xabea, gbc.sp());
        EXPECT(0x3d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 029E
        gbc.setState(0x8a6a, 0xa776, 0x8b10, 0xfe4, 0xdeb0, 0xf80d, 0x0, 0x0);
        gbc.writeMem(0x8a6a, { 0x6a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa776, gbc.sp());
        EXPECT(0x8a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8a6a));
        // 6A 029F
        gbc.setState(0xc112, 0x931b, 0xfcd0, 0x32ca, 0x750d, 0xcd10, 0x0, 0x0);
        gbc.writeMem(0xc112, { 0x6a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x931b, gbc.sp());
        EXPECT(0xc113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc112));
        // 6A 02A0
        gbc.setState(0x5d02, 0xd6e4, 0x1080, 0x87e0, 0xaebd, 0x7d87, 0x1, 0x0);
        gbc.writeMem(0x5d02, { 0x6a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd6e4, gbc.sp());
        EXPECT(0x5d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02A1
        gbc.setState(0x9c5b, 0x482f, 0x810, 0x3263, 0x8d91, 0x6cc9, 0x0, 0x1);
        gbc.writeMem(0x9c5b, { 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x482f, gbc.sp());
        EXPECT(0x9c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9c5b));
        // 6A 02A2
        gbc.setState(0xc056, 0xcbd9, 0x1e00, 0x465, 0x8664, 0x8db8, 0x0, 0x1);
        gbc.writeMem(0xc056, { 0x6a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcbd9, gbc.sp());
        EXPECT(0xc057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc056));
        // 6A 02A3
        gbc.setState(0x6b1b, 0x86f7, 0xbc70, 0x8640, 0xb121, 0x3f96, 0x1, 0x1);
        gbc.writeMem(0x6b1b, { 0x6a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x86f7, gbc.sp());
        EXPECT(0x6b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02A4
        gbc.setState(0xbe0, 0x324f, 0x90c0, 0x2c58, 0xddc0, 0x1f3a, 0x0, 0x0);
        gbc.writeMem(0xbe0, { 0x6a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x324f, gbc.sp());
        EXPECT(0xbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02A5
        gbc.setState(0x9d49, 0xdf57, 0x960, 0xe189, 0x9152, 0xe54a, 0x0, 0x0);
        gbc.writeMem(0x9d49, { 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdf57, gbc.sp());
        EXPECT(0x9d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9d49));
        // 6A 02A6
        gbc.setState(0xe585, 0x88fc, 0x73d0, 0x6ee0, 0xfdcd, 0xa598, 0x1, 0x1);
        gbc.writeMem(0xe585, { 0x6a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x88fc, gbc.sp());
        EXPECT(0xe586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe585));
        // 6A 02A7
        gbc.setState(0xadb1, 0xc668, 0x21e0, 0x5c7b, 0x974b, 0x7a8f, 0x1, 0x1);
        gbc.writeMem(0xadb1, { 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc668, gbc.sp());
        EXPECT(0xadb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xadb1));
        // 6A 02A8
        gbc.setState(0x39e2, 0x2292, 0x6610, 0x436f, 0x8753, 0x5bb9, 0x1, 0x1);
        gbc.writeMem(0x39e2, { 0x6a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2292, gbc.sp());
        EXPECT(0x39e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02A9
        gbc.setState(0x57ca, 0x8c86, 0xfd10, 0x21b4, 0x3d68, 0x87ea, 0x0, 0x1);
        gbc.writeMem(0x57ca, { 0x6a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8c86, gbc.sp());
        EXPECT(0x57cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02AA
        gbc.setState(0x55c5, 0x32da, 0xbac0, 0xdbcc, 0x8129, 0x4f53, 0x0, 0x1);
        gbc.writeMem(0x55c5, { 0x6a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x32da, gbc.sp());
        EXPECT(0x55c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02AB
        gbc.setState(0x54a9, 0x3a54, 0xee90, 0x173f, 0x3ee0, 0x98f6, 0x0, 0x1);
        gbc.writeMem(0x54a9, { 0x6a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3a54, gbc.sp());
        EXPECT(0x54aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02AC
        gbc.setState(0xe8d4, 0xeca9, 0xb1a0, 0x8cf5, 0x35dc, 0xec74, 0x1, 0x1);
        gbc.writeMem(0xe8d4, { 0x6a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xeca9, gbc.sp());
        EXPECT(0xe8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe8d4));
        // 6A 02AD
        gbc.setState(0x6b99, 0xad2a, 0xa2f0, 0x13f1, 0xdb2, 0x2ee0, 0x1, 0x1);
        gbc.writeMem(0x6b99, { 0x6a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xad2a, gbc.sp());
        EXPECT(0x6b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02AE
        gbc.setState(0x34f, 0x9b0a, 0x9600, 0x519a, 0x8871, 0xa7e2, 0x1, 0x0);
        gbc.writeMem(0x34f, { 0x6a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9b0a, gbc.sp());
        EXPECT(0x350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02B1
        gbc.setState(0x5b83, 0xbcd4, 0xe6d0, 0x59e4, 0x4d00, 0xb8fb, 0x0, 0x0);
        gbc.writeMem(0x5b83, { 0x6a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbcd4, gbc.sp());
        EXPECT(0x5b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02B2
        gbc.setState(0x95db, 0x36b1, 0x17c0, 0x16b6, 0x4823, 0x2a9a, 0x0, 0x0);
        gbc.writeMem(0x95db, { 0x6a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x36b1, gbc.sp());
        EXPECT(0x95dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x95db));
        // 6A 02B3
        gbc.setState(0x4502, 0x4bf7, 0x8ca0, 0x944e, 0x5cc0, 0xe11, 0x0, 0x0);
        gbc.writeMem(0x4502, { 0x6a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4bf7, gbc.sp());
        EXPECT(0x4503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02B4
        gbc.setState(0x17b6, 0xd913, 0x4fd0, 0x9b8c, 0xc5db, 0xdc93, 0x1, 0x0);
        gbc.writeMem(0x17b6, { 0x6a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd913, gbc.sp());
        EXPECT(0x17b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02B5
        gbc.setState(0xe84d, 0x243e, 0xc500, 0xcc5a, 0x9a88, 0xa7be, 0x1, 0x0);
        gbc.writeMem(0xe84d, { 0x6a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x243e, gbc.sp());
        EXPECT(0xe84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe84d));
        // 6A 02B6
        gbc.setState(0xeb99, 0x5a08, 0x7c50, 0xa29c, 0xdad5, 0x3105, 0x1, 0x1);
        gbc.writeMem(0xeb99, { 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5a08, gbc.sp());
        EXPECT(0xeb9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xeb99));
        // 6A 02B7
        gbc.setState(0xe284, 0x3e6f, 0x4000, 0x9dff, 0xd287, 0x8322, 0x0, 0x1);
        gbc.writeMem(0xe284, { 0x6a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3e6f, gbc.sp());
        EXPECT(0xe285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe284));
        // 6A 02B8
        gbc.setState(0xd750, 0x9c7e, 0xc2b0, 0x78b3, 0x7c9f, 0x861d, 0x0, 0x1);
        gbc.writeMem(0xd750, { 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9c7e, gbc.sp());
        EXPECT(0xd751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd750));
        // 6A 02B9
        gbc.setState(0x840b, 0xdc6f, 0xa250, 0xb806, 0xb010, 0x612f, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0x6a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdc6f, gbc.sp());
        EXPECT(0x840c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x840b));
        // 6A 02BA
        gbc.setState(0xed98, 0xb8ca, 0x91d0, 0xebb9, 0xd2c3, 0x76c8, 0x1, 0x0);
        gbc.writeMem(0xed98, { 0x6a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb8ca, gbc.sp());
        EXPECT(0xed99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xed98));
        // 6A 02BB
        gbc.setState(0x24f1, 0x7c43, 0x16a0, 0x88df, 0x53b9, 0xfa13, 0x1, 0x1);
        gbc.writeMem(0x24f1, { 0x6a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7c43, gbc.sp());
        EXPECT(0x24f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02BC
        gbc.setState(0xbece, 0xaf34, 0x3990, 0x90ab, 0xaf5b, 0x3d07, 0x0, 0x1);
        gbc.writeMem(0xbece, { 0x6a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaf34, gbc.sp());
        EXPECT(0xbecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbece));
        // 6A 02BD
        gbc.setState(0x60b, 0x6ed7, 0x520, 0x7d93, 0xacca, 0xa1ef, 0x1, 0x0);
        gbc.writeMem(0x60b, { 0x6a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6ed7, gbc.sp());
        EXPECT(0x60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02BE
        gbc.setState(0x2134, 0xab7e, 0x4950, 0x8e7e, 0x73bb, 0xd8da, 0x1, 0x1);
        gbc.writeMem(0x2134, { 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xab7e, gbc.sp());
        EXPECT(0x2135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02BF
        gbc.setState(0xe1f6, 0xb3fe, 0xf8d0, 0xbda9, 0x2212, 0xc435, 0x1, 0x0);
        gbc.writeMem(0xe1f6, { 0x6a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb3fe, gbc.sp());
        EXPECT(0xe1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe1f6));
        // 6A 02C0
        gbc.setState(0x9471, 0x3350, 0x59f0, 0xb70e, 0xb776, 0x856b, 0x0, 0x1);
        gbc.writeMem(0x9471, { 0x6a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3350, gbc.sp());
        EXPECT(0x9472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9471));
        // 6A 02C1
        gbc.setState(0x7107, 0xd713, 0x6770, 0x1055, 0x1de4, 0xf09c, 0x0, 0x1);
        gbc.writeMem(0x7107, { 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd713, gbc.sp());
        EXPECT(0x7108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02C2
        gbc.setState(0x6f37, 0x2b0b, 0xb890, 0xa68a, 0x7c21, 0xf3c6, 0x0, 0x1);
        gbc.writeMem(0x6f37, { 0x6a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2b0b, gbc.sp());
        EXPECT(0x6f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02C3
        gbc.setState(0x66cd, 0x30c8, 0xd030, 0x9a28, 0x563b, 0x3b64, 0x0, 0x0);
        gbc.writeMem(0x66cd, { 0x6a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x30c8, gbc.sp());
        EXPECT(0x66ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02C4
        gbc.setState(0x3de4, 0xc04, 0x59d0, 0xac54, 0xf1a3, 0x1aa8, 0x1, 0x1);
        gbc.writeMem(0x3de4, { 0x6a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc04, gbc.sp());
        EXPECT(0x3de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02C6
        gbc.setState(0x6d99, 0x9c33, 0x5de0, 0xac89, 0x4f51, 0xa21e, 0x1, 0x0);
        gbc.writeMem(0x6d99, { 0x6a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9c33, gbc.sp());
        EXPECT(0x6d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02C7
        gbc.setState(0xec54, 0xe036, 0x0, 0xaf57, 0xf4fb, 0x9bbd, 0x1, 0x0);
        gbc.writeMem(0xec54, { 0x6a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe036, gbc.sp());
        EXPECT(0xec55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xec54));
        // 6A 02C8
        gbc.setState(0xde48, 0x36bf, 0xeb60, 0x3278, 0xd8e7, 0xfb8b, 0x0, 0x0);
        gbc.writeMem(0xde48, { 0x6a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x36bf, gbc.sp());
        EXPECT(0xde49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xde48));
        // 6A 02C9
        gbc.setState(0xbf98, 0x2f20, 0x2900, 0x540f, 0x9e65, 0xd8d0, 0x1, 0x1);
        gbc.writeMem(0xbf98, { 0x6a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2f20, gbc.sp());
        EXPECT(0xbf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbf98));
        // 6A 02CA
        gbc.setState(0x5b54, 0x5992, 0xfd40, 0xb705, 0x4d23, 0x35c8, 0x0, 0x0);
        gbc.writeMem(0x5b54, { 0x6a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5992, gbc.sp());
        EXPECT(0x5b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02CB
        gbc.setState(0x3757, 0xe6a2, 0x3e20, 0xaa6, 0x196b, 0x6e34, 0x0, 0x1);
        gbc.writeMem(0x3757, { 0x6a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe6a2, gbc.sp());
        EXPECT(0x3758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02CC
        gbc.setState(0x5e41, 0xaf21, 0xbe80, 0x20c4, 0xc2b2, 0x936c, 0x1, 0x0);
        gbc.writeMem(0x5e41, { 0x6a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xaf21, gbc.sp());
        EXPECT(0x5e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02CD
        gbc.setState(0x1a87, 0xc73a, 0xa860, 0x5245, 0x9400, 0xffa4, 0x0, 0x1);
        gbc.writeMem(0x1a87, { 0x6a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc73a, gbc.sp());
        EXPECT(0x1a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02CE
        gbc.setState(0xa2c5, 0xb3bb, 0x17e0, 0xc346, 0x374b, 0x911f, 0x1, 0x1);
        gbc.writeMem(0xa2c5, { 0x6a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb3bb, gbc.sp());
        EXPECT(0xa2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa2c5));
        // 6A 02CF
        gbc.setState(0x36d3, 0x7ed5, 0x6ff0, 0x7f3c, 0xefd1, 0xbd9, 0x0, 0x1);
        gbc.writeMem(0x36d3, { 0x6a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7ed5, gbc.sp());
        EXPECT(0x36d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02D0
        gbc.setState(0x4059, 0x46b8, 0x370, 0xe644, 0xc7d9, 0x2d1d, 0x1, 0x1);
        gbc.writeMem(0x4059, { 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x46b8, gbc.sp());
        EXPECT(0x405a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02D1
        gbc.setState(0xd3d7, 0x64a6, 0x5b50, 0xb67d, 0x936a, 0x9301, 0x1, 0x0);
        gbc.writeMem(0xd3d7, { 0x6a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x64a6, gbc.sp());
        EXPECT(0xd3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd3d7));
        // 6A 02D2
        gbc.setState(0x1769, 0x28d7, 0x15d0, 0x4204, 0x1957, 0x5d75, 0x1, 0x0);
        gbc.writeMem(0x1769, { 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x28d7, gbc.sp());
        EXPECT(0x176a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02D4
        gbc.setState(0xd694, 0xcc91, 0x5ea0, 0x697, 0xf3f0, 0x84fb, 0x1, 0x1);
        gbc.writeMem(0xd694, { 0x6a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcc91, gbc.sp());
        EXPECT(0xd695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd694));
        // 6A 02D5
        gbc.setState(0x99c9, 0xf9bd, 0x89c0, 0x86, 0x8029, 0x8058, 0x0, 0x1);
        gbc.writeMem(0x99c9, { 0x6a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf9bd, gbc.sp());
        EXPECT(0x99ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x99c9));
        // 6A 02D6
        gbc.setState(0x4c53, 0x8b4d, 0xf9e0, 0x124f, 0xb7d6, 0xd4c5, 0x0, 0x0);
        gbc.writeMem(0x4c53, { 0x6a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8b4d, gbc.sp());
        EXPECT(0x4c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02D7
        gbc.setState(0xd6eb, 0x8642, 0xb2d0, 0x5c32, 0xbef4, 0x61f3, 0x1, 0x0);
        gbc.writeMem(0xd6eb, { 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8642, gbc.sp());
        EXPECT(0xd6ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd6eb));
        // 6A 02D8
        gbc.setState(0x7513, 0xc466, 0xfb30, 0xf014, 0x2f82, 0x4781, 0x0, 0x0);
        gbc.writeMem(0x7513, { 0x6a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc466, gbc.sp());
        EXPECT(0x7514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02D9
        gbc.setState(0x93ba, 0x1c23, 0x8600, 0x2840, 0x9d83, 0x4ade, 0x0, 0x0);
        gbc.writeMem(0x93ba, { 0x6a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1c23, gbc.sp());
        EXPECT(0x93bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x93ba));
        // 6A 02DA
        gbc.setState(0x41fa, 0x9204, 0xcf60, 0xe834, 0xcbbc, 0xe308, 0x1, 0x0);
        gbc.writeMem(0x41fa, { 0x6a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9204, gbc.sp());
        EXPECT(0x41fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02DB
        gbc.setState(0xb24b, 0xe0f5, 0xbf00, 0x81d8, 0x3a6d, 0x9a85, 0x0, 0x1);
        gbc.writeMem(0xb24b, { 0x6a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe0f5, gbc.sp());
        EXPECT(0xb24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb24b));
        // 6A 02DC
        gbc.setState(0x5c4f, 0x78ba, 0xaee0, 0xbe2f, 0x5bd6, 0xa044, 0x1, 0x1);
        gbc.writeMem(0x5c4f, { 0x6a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x78ba, gbc.sp());
        EXPECT(0x5c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02DD
        gbc.setState(0x2ee1, 0x52c6, 0x1110, 0x4f27, 0xb419, 0xb1dd, 0x1, 0x1);
        gbc.writeMem(0x2ee1, { 0x6a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x52c6, gbc.sp());
        EXPECT(0x2ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02DE
        gbc.setState(0xe52, 0x8916, 0xbd0, 0x52b, 0x3749, 0xd955, 0x1, 0x0);
        gbc.writeMem(0xe52, { 0x6a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8916, gbc.sp());
        EXPECT(0xe53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02DF
        gbc.setState(0xab9b, 0xa2e5, 0x7cd0, 0x312c, 0x285e, 0x45a2, 0x0, 0x0);
        gbc.writeMem(0xab9b, { 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa2e5, gbc.sp());
        EXPECT(0xab9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xab9b));
        // 6A 02E0
        gbc.setState(0xea53, 0x3823, 0xb0e0, 0x4247, 0x5054, 0x8a9b, 0x1, 0x1);
        gbc.writeMem(0xea53, { 0x6a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3823, gbc.sp());
        EXPECT(0xea54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xea53));
        // 6A 02E1
        gbc.setState(0x5cd7, 0xd7a8, 0x1bd0, 0xdcf9, 0xc847, 0x53d, 0x0, 0x1);
        gbc.writeMem(0x5cd7, { 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd7a8, gbc.sp());
        EXPECT(0x5cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02E3
        gbc.setState(0x869d, 0x72fc, 0x520, 0xb46, 0xeb9a, 0xdd6c, 0x1, 0x0);
        gbc.writeMem(0x869d, { 0x6a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x72fc, gbc.sp());
        EXPECT(0x869e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x869d));
        // 6A 02E4
        gbc.setState(0xb562, 0x1bec, 0x41a0, 0x35a2, 0xcdac, 0xdc22, 0x0, 0x1);
        gbc.writeMem(0xb562, { 0x6a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1bec, gbc.sp());
        EXPECT(0xb563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb562));
        // 6A 02E5
        gbc.setState(0x2e43, 0x6585, 0xea80, 0xf9a, 0x3814, 0x89d, 0x1, 0x0);
        gbc.writeMem(0x2e43, { 0x6a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6585, gbc.sp());
        EXPECT(0x2e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02E6
        gbc.setState(0xc8b5, 0x1c40, 0xc810, 0xbc5b, 0x7945, 0xd001, 0x1, 0x0);
        gbc.writeMem(0xc8b5, { 0x6a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1c40, gbc.sp());
        EXPECT(0xc8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc8b5));
        // 6A 02E7
        gbc.setState(0xc6c6, 0x1a9, 0xaa50, 0xc228, 0x2ebc, 0x436d, 0x0, 0x1);
        gbc.writeMem(0xc6c6, { 0x6a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1a9, gbc.sp());
        EXPECT(0xc6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc6c6));
        // 6A 02E8
        gbc.setState(0x47e5, 0xc739, 0x8de0, 0xed55, 0x3acc, 0x6367, 0x1, 0x1);
        gbc.writeMem(0x47e5, { 0x6a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc739, gbc.sp());
        EXPECT(0x47e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02E9
        gbc.setState(0xc00d, 0xedd3, 0xab70, 0x421e, 0x8912, 0xd296, 0x0, 0x0);
        gbc.writeMem(0xc00d, { 0x6a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xedd3, gbc.sp());
        EXPECT(0xc00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc00d));
        // 6A 02EA
        gbc.setState(0x4ca2, 0x1253, 0x9eb0, 0xf9d1, 0x63eb, 0x6668, 0x1, 0x0);
        gbc.writeMem(0x4ca2, { 0x6a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1253, gbc.sp());
        EXPECT(0x4ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02EC
        gbc.setState(0x9e36, 0x62cf, 0x320, 0xde9b, 0x73bf, 0xc14, 0x0, 0x1);
        gbc.writeMem(0x9e36, { 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x62cf, gbc.sp());
        EXPECT(0x9e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9e36));
        // 6A 02ED
        gbc.setState(0x3990, 0x70b9, 0x2040, 0x5a33, 0xc0a4, 0x22e0, 0x0, 0x1);
        gbc.writeMem(0x3990, { 0x6a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x70b9, gbc.sp());
        EXPECT(0x3991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02EE
        gbc.setState(0x60f2, 0xe249, 0xc250, 0x5e6e, 0x523b, 0xb63a, 0x1, 0x0);
        gbc.writeMem(0x60f2, { 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe249, gbc.sp());
        EXPECT(0x60f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02EF
        gbc.setState(0x9ab9, 0xaab4, 0x14c0, 0x472c, 0xb38e, 0xdfcb, 0x0, 0x0);
        gbc.writeMem(0x9ab9, { 0x6a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xaab4, gbc.sp());
        EXPECT(0x9aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9ab9));
        // 6A 02F0
        gbc.setState(0xdb90, 0x49f9, 0xb3c0, 0x7983, 0x1aaa, 0x99e7, 0x1, 0x1);
        gbc.writeMem(0xdb90, { 0x6a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x49f9, gbc.sp());
        EXPECT(0xdb91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdb90));
        // 6A 02F1
        gbc.setState(0xd20, 0x1d51, 0x72b0, 0x1605, 0xa482, 0xfdd5, 0x0, 0x1);
        gbc.writeMem(0xd20, { 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1d51, gbc.sp());
        EXPECT(0xd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02F2
        gbc.setState(0x600f, 0xbc75, 0x2f70, 0x71cb, 0x59cc, 0xde5c, 0x1, 0x1);
        gbc.writeMem(0x600f, { 0x6a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbc75, gbc.sp());
        EXPECT(0x6010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02F3
        gbc.setState(0xd71, 0x2a18, 0xae0, 0x5323, 0x86cd, 0xe918, 0x1, 0x0);
        gbc.writeMem(0xd71, { 0x6a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2a18, gbc.sp());
        EXPECT(0xd72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02F4
        gbc.setState(0x94a1, 0x379c, 0x9770, 0xefab, 0x10fa, 0x11ac, 0x1, 0x0);
        gbc.writeMem(0x94a1, { 0x6a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x379c, gbc.sp());
        EXPECT(0x94a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x94a1));
        // 6A 02F5
        gbc.setState(0x4124, 0x3a06, 0x2ca0, 0x1af0, 0xd0c, 0x89b7, 0x1, 0x1);
        gbc.writeMem(0x4124, { 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3a06, gbc.sp());
        EXPECT(0x4125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02F6
        gbc.setState(0x7fcc, 0x89f3, 0xdc00, 0xa75e, 0x48f, 0xb196, 0x0, 0x1);
        gbc.writeMem(0x7fcc, { 0x6a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x89f3, gbc.sp());
        EXPECT(0x7fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02F7
        gbc.setState(0x5a05, 0xb515, 0x3530, 0x6460, 0x455, 0x4d22, 0x0, 0x0);
        gbc.writeMem(0x5a05, { 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb515, gbc.sp());
        EXPECT(0x5a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02F8
        gbc.setState(0xfa6, 0x33c5, 0x1240, 0x6d1a, 0xc7f1, 0x54d5, 0x0, 0x0);
        gbc.writeMem(0xfa6, { 0x6a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x33c5, gbc.sp());
        EXPECT(0xfa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02F9
        gbc.setState(0x79e7, 0xc3f8, 0x2120, 0x4a65, 0xb69c, 0x7cb3, 0x0, 0x1);
        gbc.writeMem(0x79e7, { 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc3f8, gbc.sp());
        EXPECT(0x79e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02FB
        gbc.setState(0x8647, 0x95f5, 0x3190, 0xd061, 0xa11c, 0x68ac, 0x1, 0x1);
        gbc.writeMem(0x8647, { 0x6a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x95f5, gbc.sp());
        EXPECT(0x8648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8647));
        // 6A 02FC
        gbc.setState(0x57dd, 0x96a5, 0xc2c0, 0xfa49, 0x7e8e, 0xcab, 0x0, 0x1);
        gbc.writeMem(0x57dd, { 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x96a5, gbc.sp());
        EXPECT(0x57de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 02FD
        gbc.setState(0x6976, 0xf0e2, 0xc470, 0x3746, 0x617f, 0xb53a, 0x1, 0x1);
        gbc.writeMem(0x6976, { 0x6a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf0e2, gbc.sp());
        EXPECT(0x6977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 02FE
        gbc.setState(0x8df9, 0x30d3, 0xbc80, 0x2756, 0x235d, 0xcc6, 0x1, 0x1);
        gbc.writeMem(0x8df9, { 0x6a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x30d3, gbc.sp());
        EXPECT(0x8dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8df9));
        // 6A 02FF
        gbc.setState(0x68e2, 0xfb78, 0x20e0, 0xff4a, 0xd77b, 0x9814, 0x0, 0x0);
        gbc.writeMem(0x68e2, { 0x6a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfb78, gbc.sp());
        EXPECT(0x68e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0300
        gbc.setState(0x7ca8, 0xe910, 0xdd10, 0xdb71, 0x2c50, 0xf871, 0x0, 0x1);
        gbc.writeMem(0x7ca8, { 0x6a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe910, gbc.sp());
        EXPECT(0x7ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0301
        gbc.setState(0x4f51, 0x6618, 0x72b0, 0xaa22, 0xbd3a, 0xb7f3, 0x0, 0x0);
        gbc.writeMem(0x4f51, { 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6618, gbc.sp());
        EXPECT(0x4f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0302
        gbc.setState(0x8fd5, 0x3505, 0x64f0, 0xd59e, 0x245f, 0x3192, 0x1, 0x0);
        gbc.writeMem(0x8fd5, { 0x6a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3505, gbc.sp());
        EXPECT(0x8fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8fd5));
        // 6A 0303
        gbc.setState(0x349f, 0xfb98, 0xbd20, 0x421f, 0xf32f, 0x8ce1, 0x0, 0x1);
        gbc.writeMem(0x349f, { 0x6a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfb98, gbc.sp());
        EXPECT(0x34a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0304
        gbc.setState(0x4ba2, 0xbba2, 0xb930, 0x874e, 0xd33c, 0xb626, 0x1, 0x1);
        gbc.writeMem(0x4ba2, { 0x6a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbba2, gbc.sp());
        EXPECT(0x4ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0305
        gbc.setState(0xd899, 0xd57f, 0x7530, 0x5ce3, 0xc728, 0xf1af, 0x1, 0x0);
        gbc.writeMem(0xd899, { 0x6a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd57f, gbc.sp());
        EXPECT(0xd89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd899));
        // 6A 0306
        gbc.setState(0x84b9, 0xd8a1, 0x8b0, 0x8d31, 0x952e, 0x21a3, 0x1, 0x1);
        gbc.writeMem(0x84b9, { 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd8a1, gbc.sp());
        EXPECT(0x84ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x84b9));
        // 6A 0307
        gbc.setState(0x8d5a, 0x58f5, 0xe840, 0x39bb, 0x28a6, 0x3213, 0x0, 0x1);
        gbc.writeMem(0x8d5a, { 0x6a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x58f5, gbc.sp());
        EXPECT(0x8d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8d5a));
        // 6A 0308
        gbc.setState(0xc2d3, 0x64d2, 0x47f0, 0x844b, 0x64ea, 0x91ff, 0x1, 0x1);
        gbc.writeMem(0xc2d3, { 0x6a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x64d2, gbc.sp());
        EXPECT(0xc2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc2d3));
        // 6A 0309
        gbc.setState(0xe7f2, 0x8b3a, 0xcec0, 0x648d, 0x6a8c, 0xccbb, 0x1, 0x0);
        gbc.writeMem(0xe7f2, { 0x6a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8b3a, gbc.sp());
        EXPECT(0xe7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe7f2));
        // 6A 030A
        gbc.setState(0x3374, 0x4c8, 0x2640, 0x5c57, 0xd52e, 0x1624, 0x1, 0x1);
        gbc.writeMem(0x3374, { 0x6a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4c8, gbc.sp());
        EXPECT(0x3375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 030B
        gbc.setState(0x2ea0, 0x957c, 0x72e0, 0x6bcc, 0x90bb, 0xe341, 0x1, 0x0);
        gbc.writeMem(0x2ea0, { 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x957c, gbc.sp());
        EXPECT(0x2ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 030C
        gbc.setState(0xc212, 0x30c8, 0xf5e0, 0x91ec, 0xfb3, 0xdc8c, 0x1, 0x0);
        gbc.writeMem(0xc212, { 0x6a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x30c8, gbc.sp());
        EXPECT(0xc213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc212));
        // 6A 030D
        gbc.setState(0xb3c5, 0xe1a8, 0x4530, 0x8841, 0x1e80, 0xbb22, 0x0, 0x0);
        gbc.writeMem(0xb3c5, { 0x6a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe1a8, gbc.sp());
        EXPECT(0xb3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb3c5));
        // 6A 030E
        gbc.setState(0x9521, 0x2aca, 0x5f00, 0xc755, 0xcde0, 0xd1c1, 0x1, 0x1);
        gbc.writeMem(0x9521, { 0x6a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2aca, gbc.sp());
        EXPECT(0x9522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9521));
        // 6A 030F
        gbc.setState(0xd26f, 0xb579, 0xa4d0, 0xbd73, 0x8066, 0x43a5, 0x0, 0x0);
        gbc.writeMem(0xd26f, { 0x6a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb579, gbc.sp());
        EXPECT(0xd270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd26f));
        // 6A 0310
        gbc.setState(0xadfb, 0x4718, 0x2450, 0xc9aa, 0x400a, 0x9cdf, 0x1, 0x0);
        gbc.writeMem(0xadfb, { 0x6a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4718, gbc.sp());
        EXPECT(0xadfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xadfb));
        // 6A 0311
        gbc.setState(0x208c, 0x3c8, 0xe8e0, 0x2ddc, 0x86ec, 0xebf7, 0x1, 0x0);
        gbc.writeMem(0x208c, { 0x6a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3c8, gbc.sp());
        EXPECT(0x208d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0312
        gbc.setState(0x9bfc, 0x8947, 0x6f00, 0xb75f, 0x6914, 0xef7f, 0x0, 0x1);
        gbc.writeMem(0x9bfc, { 0x6a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8947, gbc.sp());
        EXPECT(0x9bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9bfc));
        // 6A 0313
        gbc.setState(0x13c4, 0xa1dd, 0x43c0, 0xd99f, 0x9dac, 0xb80b, 0x0, 0x0);
        gbc.writeMem(0x13c4, { 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa1dd, gbc.sp());
        EXPECT(0x13c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0314
        gbc.setState(0x7926, 0x6327, 0xf740, 0xee20, 0x439b, 0x4abf, 0x0, 0x0);
        gbc.writeMem(0x7926, { 0x6a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6327, gbc.sp());
        EXPECT(0x7927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0315
        gbc.setState(0x4f71, 0xdf12, 0x8260, 0xb36c, 0x3b10, 0x5b5f, 0x0, 0x1);
        gbc.writeMem(0x4f71, { 0x6a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdf12, gbc.sp());
        EXPECT(0x4f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0317
        gbc.setState(0xeabd, 0x5f01, 0x8e50, 0x429, 0xda4a, 0x659d, 0x1, 0x1);
        gbc.writeMem(0xeabd, { 0x6a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5f01, gbc.sp());
        EXPECT(0xeabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xeabd));
        // 6A 0318
        gbc.setState(0x1534, 0xd1a2, 0xef90, 0x635f, 0xedc, 0xdf99, 0x1, 0x1);
        gbc.writeMem(0x1534, { 0x6a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd1a2, gbc.sp());
        EXPECT(0x1535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0319
        gbc.setState(0x616, 0xc0bd, 0xeee0, 0xbf9b, 0xa33, 0xb1a, 0x0, 0x0);
        gbc.writeMem(0x616, { 0x6a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc0bd, gbc.sp());
        EXPECT(0x617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 031A
        gbc.setState(0xe38a, 0x6e03, 0x1020, 0xf987, 0x6505, 0xed0c, 0x1, 0x0);
        gbc.writeMem(0xe38a, { 0x6a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6e03, gbc.sp());
        EXPECT(0xe38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe38a));
        // 6A 031B
        gbc.setState(0x4614, 0x6161, 0x5480, 0x9fc7, 0x4214, 0xa499, 0x1, 0x1);
        gbc.writeMem(0x4614, { 0x6a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6161, gbc.sp());
        EXPECT(0x4615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 031C
        gbc.setState(0x6591, 0x2ef3, 0x7590, 0xff80, 0x83a5, 0xee33, 0x0, 0x1);
        gbc.writeMem(0x6591, { 0x6a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2ef3, gbc.sp());
        EXPECT(0x6592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 031D
        gbc.setState(0xbb4c, 0x9210, 0xf2b0, 0x38c1, 0x82b0, 0x8ed0, 0x0, 0x0);
        gbc.writeMem(0xbb4c, { 0x6a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9210, gbc.sp());
        EXPECT(0xbb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbb4c));
        // 6A 031E
        gbc.setState(0xd125, 0xb3dd, 0xb9b0, 0x5b93, 0xc3dd, 0x3652, 0x1, 0x1);
        gbc.writeMem(0xd125, { 0x6a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb3dd, gbc.sp());
        EXPECT(0xd126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd125));
        // 6A 031F
        gbc.setState(0xe24c, 0x1477, 0x9240, 0x9de1, 0x624d, 0x42a2, 0x1, 0x1);
        gbc.writeMem(0xe24c, { 0x6a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1477, gbc.sp());
        EXPECT(0xe24d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe24c));
        // 6A 0320
        gbc.setState(0x96a7, 0x5155, 0x5540, 0xe6c, 0xf8f4, 0xf82c, 0x0, 0x0);
        gbc.writeMem(0x96a7, { 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5155, gbc.sp());
        EXPECT(0x96a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x96a7));
        // 6A 0321
        gbc.setState(0xb755, 0x495a, 0x1730, 0x5518, 0x8d73, 0xff6d, 0x0, 0x1);
        gbc.writeMem(0xb755, { 0x6a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x495a, gbc.sp());
        EXPECT(0xb756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb755));
        // 6A 0322
        gbc.setState(0x29c2, 0x4e7d, 0x5820, 0x2bb3, 0xbe40, 0x91c, 0x0, 0x1);
        gbc.writeMem(0x29c2, { 0x6a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4e7d, gbc.sp());
        EXPECT(0x29c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0323
        gbc.setState(0xb89f, 0x745f, 0x8a20, 0xe509, 0xa8b2, 0x8a26, 0x0, 0x1);
        gbc.writeMem(0xb89f, { 0x6a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x745f, gbc.sp());
        EXPECT(0xb8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb89f));
        // 6A 0324
        gbc.setState(0x547c, 0x5a20, 0x9290, 0xed29, 0x4ec7, 0x7e8c, 0x0, 0x0);
        gbc.writeMem(0x547c, { 0x6a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5a20, gbc.sp());
        EXPECT(0x547d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0325
        gbc.setState(0xe568, 0x2faa, 0x9dc0, 0xf417, 0x1c29, 0x772, 0x0, 0x0);
        gbc.writeMem(0xe568, { 0x6a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2faa, gbc.sp());
        EXPECT(0xe569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe568));
        // 6A 0327
        gbc.setState(0x6bef, 0xdca0, 0xd3d0, 0xeec8, 0x282c, 0xe7d6, 0x1, 0x0);
        gbc.writeMem(0x6bef, { 0x6a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdca0, gbc.sp());
        EXPECT(0x6bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0328
        gbc.setState(0xae2a, 0x62da, 0x1b00, 0x958a, 0x1d65, 0x99a9, 0x1, 0x1);
        gbc.writeMem(0xae2a, { 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x62da, gbc.sp());
        EXPECT(0xae2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xae2a));
        // 6A 032A
        gbc.setState(0x6796, 0x4393, 0xec70, 0xf712, 0x881c, 0xd732, 0x0, 0x1);
        gbc.writeMem(0x6796, { 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4393, gbc.sp());
        EXPECT(0x6797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 032B
        gbc.setState(0xae64, 0xe6cd, 0x5bd0, 0xd4d8, 0x7046, 0xa224, 0x1, 0x1);
        gbc.writeMem(0xae64, { 0x6a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe6cd, gbc.sp());
        EXPECT(0xae65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xae64));
        // 6A 032C
        gbc.setState(0x6460, 0xa755, 0x8f70, 0x2533, 0x4d70, 0x8cb, 0x0, 0x1);
        gbc.writeMem(0x6460, { 0x6a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa755, gbc.sp());
        EXPECT(0x6461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 032D
        gbc.setState(0x56c0, 0x4bdf, 0x85f0, 0xd66f, 0xd6db, 0xbc77, 0x0, 0x1);
        gbc.writeMem(0x56c0, { 0x6a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4bdf, gbc.sp());
        EXPECT(0x56c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 032E
        gbc.setState(0x1ee9, 0x4cf7, 0xb2f0, 0x3cba, 0xc63a, 0x42a0, 0x1, 0x0);
        gbc.writeMem(0x1ee9, { 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4cf7, gbc.sp());
        EXPECT(0x1eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 032F
        gbc.setState(0x115c, 0xb80b, 0xf0e0, 0xe922, 0xfd2c, 0xe748, 0x1, 0x0);
        gbc.writeMem(0x115c, { 0x6a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb80b, gbc.sp());
        EXPECT(0x115d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0330
        gbc.setState(0x4d40, 0x4e9d, 0x8270, 0xe46, 0x473d, 0x43c2, 0x0, 0x1);
        gbc.writeMem(0x4d40, { 0x6a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4e9d, gbc.sp());
        EXPECT(0x4d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0331
        gbc.setState(0x14d8, 0xc26e, 0x9fb0, 0x2cc4, 0x9a9a, 0xef60, 0x0, 0x0);
        gbc.writeMem(0x14d8, { 0x6a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc26e, gbc.sp());
        EXPECT(0x14d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0332
        gbc.setState(0xc018, 0x931, 0xa6d0, 0x6902, 0xda2a, 0xfff9, 0x0, 0x0);
        gbc.writeMem(0xc018, { 0x6a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x931, gbc.sp());
        EXPECT(0xc019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc018));
        // 6A 0333
        gbc.setState(0x5de2, 0x292a, 0x7d20, 0x2b7, 0x9574, 0x54b8, 0x0, 0x0);
        gbc.writeMem(0x5de2, { 0x6a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x292a, gbc.sp());
        EXPECT(0x5de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0334
        gbc.setState(0x6760, 0x4c18, 0x7de0, 0xaca4, 0x8c6c, 0xbf3, 0x0, 0x0);
        gbc.writeMem(0x6760, { 0x6a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4c18, gbc.sp());
        EXPECT(0x6761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0335
        gbc.setState(0x3da3, 0xfdb7, 0x7c00, 0x7ea1, 0xc2f5, 0xaba3, 0x0, 0x1);
        gbc.writeMem(0x3da3, { 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfdb7, gbc.sp());
        EXPECT(0x3da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0336
        gbc.setState(0x7217, 0xec68, 0xa7c0, 0x34ab, 0x1f7c, 0xe4d9, 0x0, 0x0);
        gbc.writeMem(0x7217, { 0x6a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xec68, gbc.sp());
        EXPECT(0x7218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0337
        gbc.setState(0xa563, 0x84d2, 0x6620, 0x5f08, 0x356c, 0x3951, 0x0, 0x0);
        gbc.writeMem(0xa563, { 0x6a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x84d2, gbc.sp());
        EXPECT(0xa564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa563));
        // 6A 0338
        gbc.setState(0x3d9f, 0x266c, 0xa990, 0x46f8, 0xb90a, 0x3b1, 0x0, 0x1);
        gbc.writeMem(0x3d9f, { 0x6a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x266c, gbc.sp());
        EXPECT(0x3da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0339
        gbc.setState(0xb876, 0xc285, 0x4130, 0x610b, 0x6271, 0x75c8, 0x1, 0x0);
        gbc.writeMem(0xb876, { 0x6a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc285, gbc.sp());
        EXPECT(0xb877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb876));
        // 6A 033A
        gbc.setState(0x8b86, 0xd851, 0x7230, 0x5426, 0x1a69, 0xf9c4, 0x1, 0x1);
        gbc.writeMem(0x8b86, { 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd851, gbc.sp());
        EXPECT(0x8b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8b86));
        // 6A 033B
        gbc.setState(0x4f74, 0x8d8e, 0x370, 0xa7db, 0x4c1b, 0x9ad6, 0x1, 0x1);
        gbc.writeMem(0x4f74, { 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8d8e, gbc.sp());
        EXPECT(0x4f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 033C
        gbc.setState(0x9e23, 0x1ddd, 0x1480, 0x3d36, 0xc196, 0xcdd3, 0x0, 0x0);
        gbc.writeMem(0x9e23, { 0x6a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1ddd, gbc.sp());
        EXPECT(0x9e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9e23));
        // 6A 033D
        gbc.setState(0x17e2, 0x6756, 0x2b80, 0xa464, 0xb644, 0x11ae, 0x1, 0x0);
        gbc.writeMem(0x17e2, { 0x6a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6756, gbc.sp());
        EXPECT(0x17e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 033E
        gbc.setState(0xab0c, 0x5191, 0x3af0, 0xcd73, 0xb651, 0x979d, 0x0, 0x1);
        gbc.writeMem(0xab0c, { 0x6a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5191, gbc.sp());
        EXPECT(0xab0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xab0c));
        // 6A 033F
        gbc.setState(0xb62f, 0x1a63, 0x7b50, 0x4120, 0x7d81, 0x1367, 0x1, 0x0);
        gbc.writeMem(0xb62f, { 0x6a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1a63, gbc.sp());
        EXPECT(0xb630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb62f));
        // 6A 0340
        gbc.setState(0x13a9, 0xf7a6, 0xb8c0, 0x43f7, 0xe3cd, 0x10e1, 0x0, 0x0);
        gbc.writeMem(0x13a9, { 0x6a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf7a6, gbc.sp());
        EXPECT(0x13aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0341
        gbc.setState(0xce2f, 0xccc2, 0x2430, 0x2685, 0xb92a, 0x7187, 0x1, 0x0);
        gbc.writeMem(0xce2f, { 0x6a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xccc2, gbc.sp());
        EXPECT(0xce30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xce2f));
        // 6A 0342
        gbc.setState(0xedd2, 0x40dd, 0x1660, 0x318, 0xb93f, 0xa49f, 0x0, 0x0);
        gbc.writeMem(0xedd2, { 0x6a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x40dd, gbc.sp());
        EXPECT(0xedd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xedd2));
        // 6A 0343
        gbc.setState(0x5fce, 0x3309, 0xabe0, 0x954c, 0xd448, 0x193f, 0x1, 0x0);
        gbc.writeMem(0x5fce, { 0x6a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3309, gbc.sp());
        EXPECT(0x5fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0344
        gbc.setState(0x9754, 0xa7be, 0x7d50, 0x811f, 0xd6b1, 0xb550, 0x0, 0x0);
        gbc.writeMem(0x9754, { 0x6a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa7be, gbc.sp());
        EXPECT(0x9755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9754));
        // 6A 0345
        gbc.setState(0x9e74, 0x4104, 0x3c20, 0xd115, 0x64a6, 0x3ac4, 0x1, 0x1);
        gbc.writeMem(0x9e74, { 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4104, gbc.sp());
        EXPECT(0x9e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9e74));
        // 6A 0346
        gbc.setState(0x6cd5, 0x2f81, 0xd590, 0x6e42, 0x31ca, 0xbe51, 0x1, 0x0);
        gbc.writeMem(0x6cd5, { 0x6a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0x6cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0347
        gbc.setState(0xca87, 0xcbac, 0x71a0, 0xc607, 0x4eab, 0x3039, 0x0, 0x1);
        gbc.writeMem(0xca87, { 0x6a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcbac, gbc.sp());
        EXPECT(0xca88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xca87));
        // 6A 0348
        gbc.setState(0x78d6, 0xe741, 0xfad0, 0x7e7f, 0xe370, 0x52f6, 0x0, 0x1);
        gbc.writeMem(0x78d6, { 0x6a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe741, gbc.sp());
        EXPECT(0x78d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0349
        gbc.setState(0x3c26, 0x7fcd, 0xb180, 0x9678, 0xcc1a, 0xf492, 0x1, 0x0);
        gbc.writeMem(0x3c26, { 0x6a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7fcd, gbc.sp());
        EXPECT(0x3c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 034A
        gbc.setState(0x2bc4, 0x89a0, 0xc2c0, 0x45e6, 0xbfe5, 0x64ee, 0x1, 0x1);
        gbc.writeMem(0x2bc4, { 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x89a0, gbc.sp());
        EXPECT(0x2bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 034B
        gbc.setState(0xdc73, 0x635b, 0x2c20, 0x5ec1, 0xa41d, 0x3ff6, 0x0, 0x1);
        gbc.writeMem(0xdc73, { 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x635b, gbc.sp());
        EXPECT(0xdc74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdc73));
        // 6A 034C
        gbc.setState(0x87e7, 0x2205, 0x7cf0, 0xc25c, 0xe1dd, 0x4ab7, 0x0, 0x1);
        gbc.writeMem(0x87e7, { 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2205, gbc.sp());
        EXPECT(0x87e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x87e7));
        // 6A 034D
        gbc.setState(0xbfd2, 0xf17f, 0x1b60, 0xab6e, 0x2e00, 0xb84c, 0x0, 0x1);
        gbc.writeMem(0xbfd2, { 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf17f, gbc.sp());
        EXPECT(0xbfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbfd2));
        // 6A 034E
        gbc.setState(0x9689, 0x3843, 0xae20, 0xf21, 0x4d59, 0x6c2a, 0x1, 0x1);
        gbc.writeMem(0x9689, { 0x6a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3843, gbc.sp());
        EXPECT(0x968a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9689));
        // 6A 034F
        gbc.setState(0xc361, 0xac27, 0x6f20, 0xaeea, 0x5dd1, 0xd3ee, 0x1, 0x0);
        gbc.writeMem(0xc361, { 0x6a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xac27, gbc.sp());
        EXPECT(0xc362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc361));
        // 6A 0350
        gbc.setState(0xe742, 0x1b8b, 0x5a50, 0xa54d, 0x74f5, 0x2d14, 0x1, 0x0);
        gbc.writeMem(0xe742, { 0x6a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1b8b, gbc.sp());
        EXPECT(0xe743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe742));
        // 6A 0351
        gbc.setState(0x5182, 0x906d, 0xb20, 0x7890, 0x8e9b, 0xb223, 0x1, 0x0);
        gbc.writeMem(0x5182, { 0x6a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x906d, gbc.sp());
        EXPECT(0x5183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0352
        gbc.setState(0xb01b, 0x3efe, 0x5680, 0x9343, 0xa01d, 0xac99, 0x1, 0x1);
        gbc.writeMem(0xb01b, { 0x6a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3efe, gbc.sp());
        EXPECT(0xb01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb01b));
        // 6A 0353
        gbc.setState(0xc20d, 0xa6b8, 0x2580, 0xa576, 0x2925, 0xb835, 0x0, 0x1);
        gbc.writeMem(0xc20d, { 0x6a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa6b8, gbc.sp());
        EXPECT(0xc20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc20d));
        // 6A 0354
        gbc.setState(0xd12c, 0xa193, 0xfa70, 0x89e1, 0x2798, 0x8d1c, 0x0, 0x1);
        gbc.writeMem(0xd12c, { 0x6a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa193, gbc.sp());
        EXPECT(0xd12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd12c));
        // 6A 0355
        gbc.setState(0x5b1b, 0xba83, 0xac0, 0x216a, 0x1bd8, 0x2abc, 0x0, 0x1);
        gbc.writeMem(0x5b1b, { 0x6a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xba83, gbc.sp());
        EXPECT(0x5b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0356
        gbc.setState(0x3f06, 0x1751, 0xab90, 0xa3e5, 0x8e96, 0xa8c1, 0x1, 0x0);
        gbc.writeMem(0x3f06, { 0x6a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1751, gbc.sp());
        EXPECT(0x3f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0357
        gbc.setState(0xbac0, 0xc85c, 0xe3f0, 0x23c1, 0x3643, 0xa2d6, 0x1, 0x1);
        gbc.writeMem(0xbac0, { 0x6a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc85c, gbc.sp());
        EXPECT(0xbac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbac0));
        // 6A 0358
        gbc.setState(0x3fd3, 0x9404, 0x650, 0xfd22, 0x3821, 0xb50, 0x0, 0x0);
        gbc.writeMem(0x3fd3, { 0x6a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9404, gbc.sp());
        EXPECT(0x3fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0359
        gbc.setState(0x71f8, 0x67b, 0x35f0, 0x30e8, 0xea94, 0xf4f6, 0x1, 0x1);
        gbc.writeMem(0x71f8, { 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x67b, gbc.sp());
        EXPECT(0x71f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 035A
        gbc.setState(0xb529, 0x9e27, 0x490, 0x9c34, 0x2243, 0xaafb, 0x0, 0x1);
        gbc.writeMem(0xb529, { 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9e27, gbc.sp());
        EXPECT(0xb52a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb529));
        // 6A 035B
        gbc.setState(0x880a, 0x6a96, 0x3500, 0x26f5, 0xbcf3, 0x2ee3, 0x1, 0x0);
        gbc.writeMem(0x880a, { 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6a96, gbc.sp());
        EXPECT(0x880b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x880a));
        // 6A 035C
        gbc.setState(0x6564, 0x6e48, 0xc570, 0x42e3, 0x1cac, 0x9c02, 0x1, 0x0);
        gbc.writeMem(0x6564, { 0x6a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6e48, gbc.sp());
        EXPECT(0x6565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 035D
        gbc.setState(0xab42, 0xe954, 0x4930, 0xbe6, 0x2544, 0xa023, 0x1, 0x0);
        gbc.writeMem(0xab42, { 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe954, gbc.sp());
        EXPECT(0xab43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xab42));
        // 6A 035E
        gbc.setState(0x8b15, 0x4e60, 0x5c0, 0xd2dd, 0x7185, 0xfac4, 0x0, 0x1);
        gbc.writeMem(0x8b15, { 0x6a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4e60, gbc.sp());
        EXPECT(0x8b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8b15));
        // 6A 035F
        gbc.setState(0x503a, 0x5421, 0xcab0, 0x187d, 0x9377, 0xb7b7, 0x1, 0x1);
        gbc.writeMem(0x503a, { 0x6a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5421, gbc.sp());
        EXPECT(0x503b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0360
        gbc.setState(0x8628, 0xd83c, 0x9160, 0x3326, 0x9721, 0xbb91, 0x1, 0x1);
        gbc.writeMem(0x8628, { 0x6a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd83c, gbc.sp());
        EXPECT(0x8629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8628));
        // 6A 0361
        gbc.setState(0x6508, 0x380a, 0xacd0, 0x5447, 0x1cd, 0xd478, 0x1, 0x1);
        gbc.writeMem(0x6508, { 0x6a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x380a, gbc.sp());
        EXPECT(0x6509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0362
        gbc.setState(0xc753, 0xa4ba, 0x1df0, 0x5af4, 0xf53f, 0xeae8, 0x0, 0x0);
        gbc.writeMem(0xc753, { 0x6a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa4ba, gbc.sp());
        EXPECT(0xc754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc753));
        // 6A 0363
        gbc.setState(0x4ab5, 0xad4f, 0x7d0, 0xf965, 0xffad, 0x6cea, 0x1, 0x1);
        gbc.writeMem(0x4ab5, { 0x6a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xad4f, gbc.sp());
        EXPECT(0x4ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0364
        gbc.setState(0x7a3, 0xd623, 0xba10, 0xb96b, 0x3890, 0xa7ff, 0x0, 0x0);
        gbc.writeMem(0x7a3, { 0x6a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd623, gbc.sp());
        EXPECT(0x7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0365
        gbc.setState(0x5bf, 0x54a5, 0xc2f0, 0x516b, 0x792, 0xf2d4, 0x1, 0x0);
        gbc.writeMem(0x5bf, { 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x54a5, gbc.sp());
        EXPECT(0x5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0366
        gbc.setState(0x1853, 0xac5a, 0xa730, 0x3563, 0xf14b, 0xf7c2, 0x1, 0x0);
        gbc.writeMem(0x1853, { 0x6a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xac5a, gbc.sp());
        EXPECT(0x1854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0367
        gbc.setState(0xe9ff, 0x19e0, 0x6e10, 0x8d12, 0x16c5, 0x7, 0x0, 0x1);
        gbc.writeMem(0xe9ff, { 0x6a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x19e0, gbc.sp());
        EXPECT(0xea00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe9ff));
        // 6A 0368
        gbc.setState(0x1f17, 0x136e, 0xaa70, 0x8d17, 0x8180, 0x8cd1, 0x0, 0x0);
        gbc.writeMem(0x1f17, { 0x6a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x136e, gbc.sp());
        EXPECT(0x1f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0369
        gbc.setState(0x15ed, 0x3a20, 0xaf30, 0xdf0e, 0x5fa9, 0x13ab, 0x0, 0x1);
        gbc.writeMem(0x15ed, { 0x6a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3a20, gbc.sp());
        EXPECT(0x15ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 036A
        gbc.setState(0x469e, 0x937c, 0xa1b0, 0xf579, 0xe5c8, 0x7476, 0x0, 0x1);
        gbc.writeMem(0x469e, { 0x6a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x937c, gbc.sp());
        EXPECT(0x469f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 036B
        gbc.setState(0xec57, 0x64f4, 0x490, 0x8dff, 0xc712, 0xb834, 0x0, 0x1);
        gbc.writeMem(0xec57, { 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x64f4, gbc.sp());
        EXPECT(0xec58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xec57));
        // 6A 036C
        gbc.setState(0xe2c3, 0xaf04, 0xf290, 0x4c1a, 0x3792, 0xa124, 0x0, 0x0);
        gbc.writeMem(0xe2c3, { 0x6a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xaf04, gbc.sp());
        EXPECT(0xe2c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe2c3));
        // 6A 036D
        gbc.setState(0x52ee, 0x1a68, 0xaaf0, 0xc1ca, 0x84a7, 0xf3ac, 0x0, 0x0);
        gbc.writeMem(0x52ee, { 0x6a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1a68, gbc.sp());
        EXPECT(0x52ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 036E
        gbc.setState(0xbbcb, 0xb672, 0x5890, 0x5a98, 0x24b5, 0x724f, 0x0, 0x0);
        gbc.writeMem(0xbbcb, { 0x6a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb672, gbc.sp());
        EXPECT(0xbbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbbcb));
        // 6A 0370
        gbc.setState(0x1ee9, 0xb8c7, 0x5dd0, 0xb304, 0x770d, 0x1a00, 0x1, 0x0);
        gbc.writeMem(0x1ee9, { 0x6a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb8c7, gbc.sp());
        EXPECT(0x1eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0371
        gbc.setState(0xc0, 0xaf55, 0xe1d0, 0xebcf, 0xcd87, 0xb31, 0x0, 0x0);
        gbc.writeMem(0xc0, { 0x6a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xaf55, gbc.sp());
        EXPECT(0xc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0372
        gbc.setState(0xd8a0, 0x1e0a, 0x38e0, 0xbde5, 0x3de3, 0x2eb8, 0x0, 0x0);
        gbc.writeMem(0xd8a0, { 0x6a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1e0a, gbc.sp());
        EXPECT(0xd8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd8a0));
        // 6A 0373
        gbc.setState(0x17b7, 0x8e70, 0x4b0, 0xacc0, 0x2209, 0x9ebb, 0x1, 0x0);
        gbc.writeMem(0x17b7, { 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8e70, gbc.sp());
        EXPECT(0x17b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0374
        gbc.setState(0x989d, 0xa4a1, 0x21a0, 0x42a0, 0xfd68, 0xd9ae, 0x1, 0x1);
        gbc.writeMem(0x989d, { 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa4a1, gbc.sp());
        EXPECT(0x989e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x989d));
        // 6A 0375
        gbc.setState(0x2624, 0x8845, 0x400, 0xfaaa, 0x8fda, 0xcb17, 0x1, 0x0);
        gbc.writeMem(0x2624, { 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8845, gbc.sp());
        EXPECT(0x2625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0376
        gbc.setState(0xe7a1, 0xb5b6, 0x7640, 0x4d4d, 0xbe68, 0xb512, 0x1, 0x1);
        gbc.writeMem(0xe7a1, { 0x6a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb5b6, gbc.sp());
        EXPECT(0xe7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe7a1));
        // 6A 0377
        gbc.setState(0xac88, 0x81dd, 0xfe10, 0x60e5, 0x6acb, 0x1cb8, 0x0, 0x1);
        gbc.writeMem(0xac88, { 0x6a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x81dd, gbc.sp());
        EXPECT(0xac89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xac88));
        // 6A 0378
        gbc.setState(0xbc27, 0x82c5, 0x2550, 0xdfee, 0x85ed, 0x552, 0x0, 0x1);
        gbc.writeMem(0xbc27, { 0x6a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x82c5, gbc.sp());
        EXPECT(0xbc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbc27));
        // 6A 0379
        gbc.setState(0xb442, 0xedee, 0xaa80, 0x39be, 0xdb74, 0x516e, 0x0, 0x0);
        gbc.writeMem(0xb442, { 0x6a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xedee, gbc.sp());
        EXPECT(0xb443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb442));
        // 6A 037A
        gbc.setState(0xa878, 0xd84d, 0x6fb0, 0x342c, 0x3f63, 0x1c72, 0x1, 0x1);
        gbc.writeMem(0xa878, { 0x6a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd84d, gbc.sp());
        EXPECT(0xa879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa878));
        // 6A 037B
        gbc.setState(0x52fb, 0x128e, 0xe430, 0x8c18, 0xdf89, 0x2bb7, 0x1, 0x1);
        gbc.writeMem(0x52fb, { 0x6a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x128e, gbc.sp());
        EXPECT(0x52fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 037C
        gbc.setState(0x80b9, 0xf3aa, 0x1640, 0x6652, 0x1ada, 0x9253, 0x0, 0x0);
        gbc.writeMem(0x80b9, { 0x6a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf3aa, gbc.sp());
        EXPECT(0x80ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x80b9));
        // 6A 037E
        gbc.setState(0x3efd, 0xe241, 0x3930, 0x9a95, 0x42f6, 0x1ec4, 0x0, 0x1);
        gbc.writeMem(0x3efd, { 0x6a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe241, gbc.sp());
        EXPECT(0x3efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 037F
        gbc.setState(0x98aa, 0xad98, 0x1f20, 0x5a36, 0x414a, 0x5268, 0x1, 0x0);
        gbc.writeMem(0x98aa, { 0x6a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xad98, gbc.sp());
        EXPECT(0x98ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x98aa));
        // 6A 0380
        gbc.setState(0x47bd, 0x7cf0, 0xdcc0, 0x4515, 0xfb1c, 0x72a1, 0x1, 0x1);
        gbc.writeMem(0x47bd, { 0x6a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7cf0, gbc.sp());
        EXPECT(0x47be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0381
        gbc.setState(0xaf9b, 0xc9aa, 0xc50, 0xe448, 0xe466, 0x6c69, 0x0, 0x1);
        gbc.writeMem(0xaf9b, { 0x6a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc9aa, gbc.sp());
        EXPECT(0xaf9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xaf9b));
        // 6A 0384
        gbc.setState(0x9ff9, 0xd591, 0xeab0, 0xae6c, 0x3a82, 0xf1d3, 0x1, 0x0);
        gbc.writeMem(0x9ff9, { 0x6a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd591, gbc.sp());
        EXPECT(0x9ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9ff9));
        // 6A 0385
        gbc.setState(0x7e32, 0x4546, 0x34f0, 0xe84e, 0x8310, 0x264, 0x0, 0x1);
        gbc.writeMem(0x7e32, { 0x6a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4546, gbc.sp());
        EXPECT(0x7e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0386
        gbc.setState(0x1493, 0x491c, 0xe720, 0x1bf, 0xb006, 0x93a7, 0x1, 0x0);
        gbc.writeMem(0x1493, { 0x6a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x491c, gbc.sp());
        EXPECT(0x1494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0387
        gbc.setState(0x463e, 0x3b01, 0x19c0, 0x2bef, 0x5579, 0xb661, 0x1, 0x1);
        gbc.writeMem(0x463e, { 0x6a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3b01, gbc.sp());
        EXPECT(0x463f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0388
        gbc.setState(0x9606, 0xb638, 0x68f0, 0x13e1, 0xbbc3, 0xf5f3, 0x1, 0x0);
        gbc.writeMem(0x9606, { 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb638, gbc.sp());
        EXPECT(0x9607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9606));
        // 6A 0389
        gbc.setState(0xb9bc, 0x1946, 0x410, 0x9ac5, 0xacc2, 0xfbc0, 0x1, 0x0);
        gbc.writeMem(0xb9bc, { 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1946, gbc.sp());
        EXPECT(0xb9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb9bc));
        // 6A 038A
        gbc.setState(0xbf20, 0x1810, 0x36b0, 0xcc31, 0x1e81, 0xd480, 0x0, 0x1);
        gbc.writeMem(0xbf20, { 0x6a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1810, gbc.sp());
        EXPECT(0xbf21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbf20));
        // 6A 038B
        gbc.setState(0x4418, 0x4ba6, 0x1db0, 0xeec1, 0xa4f8, 0x376c, 0x1, 0x0);
        gbc.writeMem(0x4418, { 0x6a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4ba6, gbc.sp());
        EXPECT(0x4419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 038D
        gbc.setState(0xd7c4, 0x665, 0x1500, 0xe179, 0x3fb1, 0x461a, 0x0, 0x1);
        gbc.writeMem(0xd7c4, { 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x665, gbc.sp());
        EXPECT(0xd7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd7c4));
        // 6A 038E
        gbc.setState(0x153f, 0x131a, 0xcc70, 0x5de, 0xa406, 0x40ec, 0x1, 0x1);
        gbc.writeMem(0x153f, { 0x6a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x131a, gbc.sp());
        EXPECT(0x1540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 038F
        gbc.setState(0x6cb5, 0xc0b, 0x68a0, 0x4c47, 0xc325, 0x1d5a, 0x0, 0x1);
        gbc.writeMem(0x6cb5, { 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc0b, gbc.sp());
        EXPECT(0x6cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0390
        gbc.setState(0x207e, 0x318f, 0x7000, 0xbe08, 0xefd1, 0x7ad8, 0x0, 0x0);
        gbc.writeMem(0x207e, { 0x6a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x318f, gbc.sp());
        EXPECT(0x207f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0391
        gbc.setState(0x7379, 0x9c78, 0x6300, 0xf7, 0xb7cf, 0xc846, 0x1, 0x0);
        gbc.writeMem(0x7379, { 0x6a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9c78, gbc.sp());
        EXPECT(0x737a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0392
        gbc.setState(0x17c, 0x966f, 0xa0b0, 0xb0f7, 0x7b04, 0x9665, 0x0, 0x1);
        gbc.writeMem(0x17c, { 0x6a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x966f, gbc.sp());
        EXPECT(0x17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0393
        gbc.setState(0x1586, 0xbdd8, 0x7140, 0xebf7, 0x94cb, 0xe860, 0x1, 0x1);
        gbc.writeMem(0x1586, { 0x6a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbdd8, gbc.sp());
        EXPECT(0x1587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 0394
        gbc.setState(0x47d3, 0x784, 0x42b0, 0x6bd, 0xc8d9, 0x372d, 0x1, 0x1);
        gbc.writeMem(0x47d3, { 0x6a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x784, gbc.sp());
        EXPECT(0x47d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0395
        gbc.setState(0x7540, 0x9e18, 0xf110, 0xe505, 0xcdf5, 0x4286, 0x0, 0x1);
        gbc.writeMem(0x7540, { 0x6a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9e18, gbc.sp());
        EXPECT(0x7541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0396
        gbc.setState(0xc5bd, 0x7ab6, 0xd170, 0x54ba, 0xad4, 0xe271, 0x1, 0x0);
        gbc.writeMem(0xc5bd, { 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7ab6, gbc.sp());
        EXPECT(0xc5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc5bd));
        // 6A 0397
        gbc.setState(0xb7f4, 0x698f, 0x70a0, 0xe038, 0xefce, 0xb496, 0x1, 0x0);
        gbc.writeMem(0xb7f4, { 0x6a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x698f, gbc.sp());
        EXPECT(0xb7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb7f4));
        // 6A 0398
        gbc.setState(0x7828, 0x5238, 0xa6b0, 0x8260, 0xd570, 0x10ca, 0x0, 0x1);
        gbc.writeMem(0x7828, { 0x6a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5238, gbc.sp());
        EXPECT(0x7829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 0399
        gbc.setState(0x7385, 0x372f, 0xc150, 0xac2c, 0x8ab3, 0x7777, 0x1, 0x0);
        gbc.writeMem(0x7385, { 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x372f, gbc.sp());
        EXPECT(0x7386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 039A
        gbc.setState(0x4e39, 0xc8fa, 0xeca0, 0xe338, 0xd822, 0x8a9a, 0x0, 0x0);
        gbc.writeMem(0x4e39, { 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc8fa, gbc.sp());
        EXPECT(0x4e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 039B
        gbc.setState(0xc6f9, 0xc5d0, 0x8130, 0xa5eb, 0x6d60, 0x45c3, 0x0, 0x0);
        gbc.writeMem(0xc6f9, { 0x6a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc5d0, gbc.sp());
        EXPECT(0xc6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc6f9));
        // 6A 039D
        gbc.setState(0x6e9a, 0xf75d, 0x90a0, 0x9ee6, 0xcb9f, 0x2200, 0x0, 0x0);
        gbc.writeMem(0x6e9a, { 0x6a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf75d, gbc.sp());
        EXPECT(0x6e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 039E
        gbc.setState(0xd2bc, 0x14ef, 0x11c0, 0xc0c9, 0x2da7, 0x9573, 0x1, 0x1);
        gbc.writeMem(0xd2bc, { 0x6a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x14ef, gbc.sp());
        EXPECT(0xd2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd2bc));
        // 6A 039F
        gbc.setState(0x4017, 0xddc7, 0x9f90, 0x1a08, 0x6c8f, 0x7636, 0x0, 0x1);
        gbc.writeMem(0x4017, { 0x6a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xddc7, gbc.sp());
        EXPECT(0x4018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03A0
        gbc.setState(0xb020, 0x7614, 0x5fb0, 0x3a25, 0x48b0, 0x763d, 0x1, 0x1);
        gbc.writeMem(0xb020, { 0x6a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7614, gbc.sp());
        EXPECT(0xb021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb020));
        // 6A 03A1
        gbc.setState(0xe14a, 0x6a59, 0x55f0, 0x2fb2, 0xb68c, 0x9248, 0x1, 0x0);
        gbc.writeMem(0xe14a, { 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6a59, gbc.sp());
        EXPECT(0xe14b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe14a));
        // 6A 03A2
        gbc.setState(0xc4aa, 0x6858, 0x13d0, 0x2ad1, 0x422d, 0x8a1, 0x0, 0x1);
        gbc.writeMem(0xc4aa, { 0x6a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6858, gbc.sp());
        EXPECT(0xc4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc4aa));
        // 6A 03A3
        gbc.setState(0x5141, 0xa0ec, 0xd0f0, 0xf4b0, 0xbb5c, 0x51e, 0x1, 0x1);
        gbc.writeMem(0x5141, { 0x6a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa0ec, gbc.sp());
        EXPECT(0x5142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03A4
        gbc.setState(0x1e06, 0x3ffb, 0x2240, 0xa34f, 0x4adc, 0xbc1a, 0x0, 0x0);
        gbc.writeMem(0x1e06, { 0x6a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3ffb, gbc.sp());
        EXPECT(0x1e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03A5
        gbc.setState(0xa3db, 0x8cbc, 0x29e0, 0x73b5, 0x938b, 0x11a0, 0x0, 0x0);
        gbc.writeMem(0xa3db, { 0x6a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8cbc, gbc.sp());
        EXPECT(0xa3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa3db));
        // 6A 03A6
        gbc.setState(0x6352, 0x2cc6, 0xe1c0, 0x778a, 0x2188, 0x2878, 0x0, 0x1);
        gbc.writeMem(0x6352, { 0x6a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2cc6, gbc.sp());
        EXPECT(0x6353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03A7
        gbc.setState(0x7d5e, 0x45be, 0x6b40, 0xbeba, 0xcb6a, 0xc358, 0x0, 0x0);
        gbc.writeMem(0x7d5e, { 0x6a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x45be, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03A8
        gbc.setState(0xd06c, 0xf928, 0x28e0, 0x2304, 0xc5c6, 0xd133, 0x1, 0x1);
        gbc.writeMem(0xd06c, { 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf928, gbc.sp());
        EXPECT(0xd06d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd06c));
        // 6A 03A9
        gbc.setState(0x5a92, 0x5ed8, 0xed50, 0xa5d6, 0x3eda, 0xaf67, 0x0, 0x1);
        gbc.writeMem(0x5a92, { 0x6a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5ed8, gbc.sp());
        EXPECT(0x5a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03AA
        gbc.setState(0x3d39, 0x7edd, 0xd1b0, 0xf36a, 0x91ac, 0x4f31, 0x1, 0x0);
        gbc.writeMem(0x3d39, { 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7edd, gbc.sp());
        EXPECT(0x3d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03AB
        gbc.setState(0x5565, 0xadb8, 0x3660, 0x6af2, 0x61c7, 0xa4ef, 0x0, 0x1);
        gbc.writeMem(0x5565, { 0x6a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xadb8, gbc.sp());
        EXPECT(0x5566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03AC
        gbc.setState(0x152b, 0xc834, 0x7f00, 0x342a, 0xf967, 0x7396, 0x1, 0x0);
        gbc.writeMem(0x152b, { 0x6a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc834, gbc.sp());
        EXPECT(0x152c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03AD
        gbc.setState(0xcd90, 0xbd94, 0x7200, 0x2795, 0xd7b0, 0xed3c, 0x0, 0x1);
        gbc.writeMem(0xcd90, { 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbd94, gbc.sp());
        EXPECT(0xcd91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcd90));
        // 6A 03AF
        gbc.setState(0xa810, 0x624d, 0x56d0, 0x458a, 0x29a2, 0x9a71, 0x1, 0x1);
        gbc.writeMem(0xa810, { 0x6a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x624d, gbc.sp());
        EXPECT(0xa811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa810));
        // 6A 03B0
        gbc.setState(0xda96, 0x9462, 0xcd70, 0xbed1, 0x8061, 0xc212, 0x1, 0x1);
        gbc.writeMem(0xda96, { 0x6a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9462, gbc.sp());
        EXPECT(0xda97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xda96));
        // 6A 03B1
        gbc.setState(0x648a, 0x8e52, 0x5590, 0x4522, 0xb596, 0x877b, 0x1, 0x1);
        gbc.writeMem(0x648a, { 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8e52, gbc.sp());
        EXPECT(0x648b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03B2
        gbc.setState(0xda56, 0x81ca, 0x4920, 0x1523, 0x11ce, 0x5967, 0x0, 0x1);
        gbc.writeMem(0xda56, { 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x81ca, gbc.sp());
        EXPECT(0xda57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xda56));
        // 6A 03B4
        gbc.setState(0x171a, 0x3ec, 0xac40, 0x60ce, 0xb25a, 0x8034, 0x1, 0x1);
        gbc.writeMem(0x171a, { 0x6a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3ec, gbc.sp());
        EXPECT(0x171b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03B5
        gbc.setState(0x82a5, 0x5387, 0xf220, 0xe2d9, 0x146b, 0x793, 0x0, 0x0);
        gbc.writeMem(0x82a5, { 0x6a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5387, gbc.sp());
        EXPECT(0x82a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x82a5));
        // 6A 03B6
        gbc.setState(0xe741, 0x99ed, 0x7210, 0xa88d, 0xa661, 0xef1c, 0x0, 0x0);
        gbc.writeMem(0xe741, { 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x99ed, gbc.sp());
        EXPECT(0xe742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe741));
        // 6A 03B7
        gbc.setState(0xb278, 0x2a64, 0x41b0, 0x1222, 0xe0ef, 0xdf7a, 0x1, 0x0);
        gbc.writeMem(0xb278, { 0x6a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2a64, gbc.sp());
        EXPECT(0xb279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb278));
        // 6A 03B8
        gbc.setState(0x7fe4, 0x7644, 0x6340, 0x75d, 0xc15b, 0x749f, 0x0, 0x0);
        gbc.writeMem(0x7fe4, { 0x6a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7644, gbc.sp());
        EXPECT(0x7fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03B9
        gbc.setState(0x7934, 0x7989, 0xe5a0, 0xb618, 0x5c14, 0xd472, 0x0, 0x0);
        gbc.writeMem(0x7934, { 0x6a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7989, gbc.sp());
        EXPECT(0x7935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03BA
        gbc.setState(0x5b8b, 0xb28, 0xd120, 0x5d02, 0x704c, 0x73a1, 0x0, 0x1);
        gbc.writeMem(0x5b8b, { 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb28, gbc.sp());
        EXPECT(0x5b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03BB
        gbc.setState(0x2489, 0xedce, 0xc100, 0xe9f2, 0x8650, 0xc850, 0x1, 0x1);
        gbc.writeMem(0x2489, { 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xedce, gbc.sp());
        EXPECT(0x248a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03BC
        gbc.setState(0xe94e, 0xf0ae, 0x5520, 0xd3b6, 0x808f, 0x386, 0x1, 0x0);
        gbc.writeMem(0xe94e, { 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf0ae, gbc.sp());
        EXPECT(0xe94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe94e));
        // 6A 03BD
        gbc.setState(0xd3e1, 0xb2cf, 0xec00, 0xbec8, 0x730e, 0x1c83, 0x1, 0x0);
        gbc.writeMem(0xd3e1, { 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb2cf, gbc.sp());
        EXPECT(0xd3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd3e1));
        // 6A 03BE
        gbc.setState(0xc1a7, 0x78e2, 0xf10, 0xbc4, 0xa14b, 0xb539, 0x0, 0x0);
        gbc.writeMem(0xc1a7, { 0x6a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x78e2, gbc.sp());
        EXPECT(0xc1a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc1a7));
        // 6A 03BF
        gbc.setState(0x1eb, 0xa06c, 0x3000, 0x1c12, 0xe7d0, 0x36f9, 0x1, 0x1);
        gbc.writeMem(0x1eb, { 0x6a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa06c, gbc.sp());
        EXPECT(0x1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03C0
        gbc.setState(0x15f4, 0x8a56, 0xf1b0, 0x6cec, 0x4012, 0x496c, 0x0, 0x0);
        gbc.writeMem(0x15f4, { 0x6a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8a56, gbc.sp());
        EXPECT(0x15f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03C1
        gbc.setState(0x514f, 0x2412, 0x5720, 0x91fd, 0x70c3, 0x6be8, 0x0, 0x1);
        gbc.writeMem(0x514f, { 0x6a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2412, gbc.sp());
        EXPECT(0x5150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03C2
        gbc.setState(0xbcc7, 0xbc0f, 0xb5d0, 0x3766, 0xbf3, 0x6b1e, 0x1, 0x0);
        gbc.writeMem(0xbcc7, { 0x6a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbc0f, gbc.sp());
        EXPECT(0xbcc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbcc7));
        // 6A 03C3
        gbc.setState(0x71f6, 0xc68f, 0xeda0, 0xd244, 0x240a, 0xd60c, 0x0, 0x1);
        gbc.writeMem(0x71f6, { 0x6a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc68f, gbc.sp());
        EXPECT(0x71f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03C4
        gbc.setState(0xec46, 0x485f, 0x4ab0, 0xb998, 0xe540, 0xadce, 0x0, 0x0);
        gbc.writeMem(0xec46, { 0x6a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x485f, gbc.sp());
        EXPECT(0xec47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xec46));
        // 6A 03C5
        gbc.setState(0x7ddc, 0x5a09, 0x49b0, 0xd129, 0x6f49, 0xca27, 0x1, 0x0);
        gbc.writeMem(0x7ddc, { 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5a09, gbc.sp());
        EXPECT(0x7ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03C6
        gbc.setState(0x49a5, 0xd15f, 0x8a80, 0xa901, 0x6d9e, 0xd54c, 0x0, 0x1);
        gbc.writeMem(0x49a5, { 0x6a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd15f, gbc.sp());
        EXPECT(0x49a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03C7
        gbc.setState(0x4344, 0x3f4e, 0xfbb0, 0x9d96, 0xd854, 0x5e0, 0x0, 0x1);
        gbc.writeMem(0x4344, { 0x6a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3f4e, gbc.sp());
        EXPECT(0x4345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03C8
        gbc.setState(0x59cd, 0x97ee, 0x8e60, 0x8237, 0xc1, 0x80a5, 0x0, 0x0);
        gbc.writeMem(0x59cd, { 0x6a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x97ee, gbc.sp());
        EXPECT(0x59ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03C9
        gbc.setState(0xb06a, 0xec10, 0x1a80, 0xa76e, 0xb633, 0xc78a, 0x0, 0x0);
        gbc.writeMem(0xb06a, { 0x6a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xec10, gbc.sp());
        EXPECT(0xb06b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb06a));
        // 6A 03CA
        gbc.setState(0x8c06, 0x41c6, 0x9230, 0x3bca, 0x3a8b, 0x85b1, 0x1, 0x0);
        gbc.writeMem(0x8c06, { 0x6a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x41c6, gbc.sp());
        EXPECT(0x8c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8c06));
        // 6A 03CB
        gbc.setState(0x1344, 0x5f96, 0x3b60, 0x2835, 0x45ac, 0xebef, 0x0, 0x0);
        gbc.writeMem(0x1344, { 0x6a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5f96, gbc.sp());
        EXPECT(0x1345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03CC
        gbc.setState(0xee77, 0x53b4, 0x8b00, 0x948a, 0x680b, 0x34ae, 0x0, 0x0);
        gbc.writeMem(0xee77, { 0x6a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x53b4, gbc.sp());
        EXPECT(0xee78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xee77));
        // 6A 03CD
        gbc.setState(0xabb9, 0x68aa, 0x3aa0, 0xb023, 0x373d, 0xc2b4, 0x1, 0x0);
        gbc.writeMem(0xabb9, { 0x6a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x68aa, gbc.sp());
        EXPECT(0xabba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xabb9));
        // 6A 03CE
        gbc.setState(0xc122, 0x3b3e, 0xa690, 0x611f, 0xabe0, 0xdbe6, 0x0, 0x0);
        gbc.writeMem(0xc122, { 0x6a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3b3e, gbc.sp());
        EXPECT(0xc123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc122));
        // 6A 03CF
        gbc.setState(0x95e1, 0xc63b, 0x1a20, 0x75ed, 0xc143, 0x715b, 0x1, 0x1);
        gbc.writeMem(0x95e1, { 0x6a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc63b, gbc.sp());
        EXPECT(0x95e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x95e1));
        // 6A 03D0
        gbc.setState(0x352, 0x3227, 0x4980, 0xf33e, 0xeeca, 0x232, 0x0, 0x1);
        gbc.writeMem(0x352, { 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3227, gbc.sp());
        EXPECT(0x353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03D1
        gbc.setState(0x26a2, 0x4ddb, 0x2450, 0xf725, 0xe2e5, 0x9cca, 0x1, 0x0);
        gbc.writeMem(0x26a2, { 0x6a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4ddb, gbc.sp());
        EXPECT(0x26a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03D2
        gbc.setState(0x2829, 0xe38f, 0xa980, 0x7d9e, 0xc9a4, 0xb387, 0x0, 0x1);
        gbc.writeMem(0x2829, { 0x6a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe38f, gbc.sp());
        EXPECT(0x282a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03D3
        gbc.setState(0x2172, 0xbdf0, 0x9c0, 0x3e0, 0x4e69, 0x8089, 0x0, 0x0);
        gbc.writeMem(0x2172, { 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbdf0, gbc.sp());
        EXPECT(0x2173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03D4
        gbc.setState(0x29cb, 0xa504, 0xdef0, 0x639e, 0x25d6, 0xa969, 0x1, 0x0);
        gbc.writeMem(0x29cb, { 0x6a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa504, gbc.sp());
        EXPECT(0x29cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03D5
        gbc.setState(0x170e, 0xb9ce, 0xf9e0, 0xa896, 0xa1f3, 0xa2dd, 0x0, 0x0);
        gbc.writeMem(0x170e, { 0x6a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb9ce, gbc.sp());
        EXPECT(0x170f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03D6
        gbc.setState(0x5d10, 0xbb2b, 0xc70, 0x2cba, 0x466b, 0x260c, 0x0, 0x1);
        gbc.writeMem(0x5d10, { 0x6a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbb2b, gbc.sp());
        EXPECT(0x5d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03D7
        gbc.setState(0x70bb, 0xafd3, 0x1ad0, 0x715c, 0x2f26, 0x6d07, 0x0, 0x0);
        gbc.writeMem(0x70bb, { 0x6a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xafd3, gbc.sp());
        EXPECT(0x70bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03D8
        gbc.setState(0x4172, 0xc3c3, 0x7af0, 0x19d7, 0x968b, 0xdb0a, 0x0, 0x1);
        gbc.writeMem(0x4172, { 0x6a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc3c3, gbc.sp());
        EXPECT(0x4173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03D9
        gbc.setState(0xa86f, 0x3e0a, 0x6fc0, 0x90ee, 0xd0c9, 0xc179, 0x1, 0x1);
        gbc.writeMem(0xa86f, { 0x6a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3e0a, gbc.sp());
        EXPECT(0xa870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa86f));
        // 6A 03DA
        gbc.setState(0xb651, 0x9a91, 0x5f0, 0x116e, 0x79b9, 0x3317, 0x1, 0x0);
        gbc.writeMem(0xb651, { 0x6a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9a91, gbc.sp());
        EXPECT(0xb652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb651));
        // 6A 03DB
        gbc.setState(0x995a, 0xadea, 0xb2d0, 0x7f84, 0x8f8, 0x3a77, 0x1, 0x0);
        gbc.writeMem(0x995a, { 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xadea, gbc.sp());
        EXPECT(0x995b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x995a));
        // 6A 03DC
        gbc.setState(0xb25e, 0xade0, 0xd3f0, 0xb903, 0x26a2, 0xb315, 0x0, 0x0);
        gbc.writeMem(0xb25e, { 0x6a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xade0, gbc.sp());
        EXPECT(0xb25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb25e));
        // 6A 03DD
        gbc.setState(0xaec8, 0xb222, 0x7bd0, 0x713b, 0x85e8, 0xfd01, 0x0, 0x0);
        gbc.writeMem(0xaec8, { 0x6a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb222, gbc.sp());
        EXPECT(0xaec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xaec8));
        // 6A 03DE
        gbc.setState(0x69c4, 0x2180, 0x60e0, 0xfc6c, 0xa833, 0x5ad1, 0x1, 0x0);
        gbc.writeMem(0x69c4, { 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2180, gbc.sp());
        EXPECT(0x69c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03DF
        gbc.setState(0x1e10, 0x6a05, 0x6ea0, 0xae7e, 0xeb63, 0xf116, 0x1, 0x0);
        gbc.writeMem(0x1e10, { 0x6a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6a05, gbc.sp());
        EXPECT(0x1e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03E0
        gbc.setState(0x2c1a, 0x20c5, 0xe5a0, 0xfbf2, 0x95a9, 0xc27b, 0x1, 0x0);
        gbc.writeMem(0x2c1a, { 0x6a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x20c5, gbc.sp());
        EXPECT(0x2c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03E1
        gbc.setState(0xa03d, 0xa265, 0xc2d0, 0xbf43, 0x6025, 0x11a4, 0x0, 0x1);
        gbc.writeMem(0xa03d, { 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa265, gbc.sp());
        EXPECT(0xa03e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa03d));
        // 6A 03E2
        gbc.setState(0x7367, 0x4c2c, 0x6840, 0xac71, 0x312d, 0xfb8f, 0x1, 0x0);
        gbc.writeMem(0x7367, { 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4c2c, gbc.sp());
        EXPECT(0x7368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03E4
        gbc.setState(0x29ad, 0x71ff, 0x88f0, 0xbade, 0xed22, 0x4f75, 0x0, 0x1);
        gbc.writeMem(0x29ad, { 0x6a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x71ff, gbc.sp());
        EXPECT(0x29ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6A 03E5
        gbc.setState(0x3b36, 0x4471, 0xb500, 0xa403, 0xc652, 0x1a21, 0x1, 0x0);
        gbc.writeMem(0x3b36, { 0x6a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4471, gbc.sp());
        EXPECT(0x3b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6A 03E6
        gbc.setState(0xb605, 0x7974, 0x7ba0, 0x3988, 0x953c, 0x5682, 0x1, 0x1);
        gbc.writeMem(0xb605, { 0x6a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7974, gbc.sp());
        EXPECT(0xb606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb605));
        // 6A 03E7
        gbc.setState(0x7a1d, 0xd51, 0x480, 0x9604, 0x257c, 0x4809, 0x1, 0x1);
        gbc.writeMem(0x7a1d, { 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd51, gbc.sp());
        EXPECT(0x7a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
