#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_9a)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_9a) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 9A 0000
        gbc.setState(0x86f2, 0x8f0c, 0xac30, 0x5d33, 0x107, 0xe901, 0x0, 0x0);
        gbc.writeMem(0x86f2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8f0c);
        EXPECT(gbc.pc(), 0x86f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f2), 0xcb);
        EXPECT(gbc.readMem(0x86f3), 0x9a);
        // CB 9A 0001
        gbc.setState(0x928f, 0xb685, 0x17b0, 0x53e7, 0xafb, 0xebf8, 0x0, 0x0);
        gbc.writeMem(0x928f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb685);
        EXPECT(gbc.pc(), 0x9291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x928f), 0xcb);
        EXPECT(gbc.readMem(0x9290), 0x9a);
        // CB 9A 0003
        gbc.setState(0x37e6, 0x3b9a, 0xb840, 0x511b, 0x6072, 0x8ee1, 0x1, 0x0);
        gbc.writeMem(0x37e6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3b9a);
        EXPECT(gbc.pc(), 0x37e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0004
        gbc.setState(0xb48a, 0x8a2f, 0xd0c0, 0xa706, 0xb316, 0xea54, 0x0, 0x1);
        gbc.writeMem(0xb48a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8a2f);
        EXPECT(gbc.pc(), 0xb48c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb48a), 0xcb);
        EXPECT(gbc.readMem(0xb48b), 0x9a);
        // CB 9A 0005
        gbc.setState(0x2311, 0xcc36, 0x2e50, 0x4dae, 0x4fff, 0xaed7, 0x1, 0x0);
        gbc.writeMem(0x2311, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xcc36);
        EXPECT(gbc.pc(), 0x2313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0006
        gbc.setState(0x8699, 0x179e, 0x7a20, 0x5d7d, 0xb3e5, 0x9d70, 0x1, 0x0);
        gbc.writeMem(0x8699, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x179e);
        EXPECT(gbc.pc(), 0x869b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8699), 0xcb);
        EXPECT(gbc.readMem(0x869a), 0x9a);
        // CB 9A 0007
        gbc.setState(0x5d95, 0xbf99, 0xabf0, 0x30bf, 0xdbc2, 0x728d, 0x1, 0x1);
        gbc.writeMem(0x5d95, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbf99);
        EXPECT(gbc.pc(), 0x5d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0008
        gbc.setState(0x17ea, 0x59cc, 0x23a0, 0x3dc8, 0xfbf3, 0x1cc3, 0x1, 0x1);
        gbc.writeMem(0x17ea, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x59cc);
        EXPECT(gbc.pc(), 0x17ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0009
        gbc.setState(0x9272, 0x77cc, 0xdd60, 0xa501, 0x35ec, 0x8e09, 0x1, 0x1);
        gbc.writeMem(0x9272, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x77cc);
        EXPECT(gbc.pc(), 0x9274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9272), 0xcb);
        EXPECT(gbc.readMem(0x9273), 0x9a);
        // CB 9A 000A
        gbc.setState(0xc2e7, 0xb8e5, 0x4240, 0xf07a, 0xef8b, 0x76f8, 0x0, 0x0);
        gbc.writeMem(0xc2e7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb8e5);
        EXPECT(gbc.pc(), 0xc2e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e7), 0xcb);
        EXPECT(gbc.readMem(0xc2e8), 0x9a);
        // CB 9A 000B
        gbc.setState(0xb5a5, 0xbe0, 0xd2c0, 0xa6ee, 0x62e8, 0xcccd, 0x1, 0x1);
        gbc.writeMem(0xb5a5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xbe0);
        EXPECT(gbc.pc(), 0xb5a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a5), 0xcb);
        EXPECT(gbc.readMem(0xb5a6), 0x9a);
        // CB 9A 000D
        gbc.setState(0xed72, 0x7c3c, 0x4b50, 0x458c, 0x6462, 0x5a05, 0x0, 0x1);
        gbc.writeMem(0xed72, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7c3c);
        EXPECT(gbc.pc(), 0xed74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed72), 0xcb);
        EXPECT(gbc.readMem(0xed73), 0x9a);
        // CB 9A 000E
        gbc.setState(0x4f11, 0xedfc, 0xb740, 0x64ad, 0x2f3, 0x1376, 0x0, 0x0);
        gbc.writeMem(0x4f11, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xedfc);
        EXPECT(gbc.pc(), 0x4f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 000F
        gbc.setState(0xb59a, 0xbd2b, 0x1270, 0x787c, 0x1577, 0x953d, 0x1, 0x1);
        gbc.writeMem(0xb59a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbd2b);
        EXPECT(gbc.pc(), 0xb59c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59a), 0xcb);
        EXPECT(gbc.readMem(0xb59b), 0x9a);
        // CB 9A 0010
        gbc.setState(0x2161, 0x4c07, 0x7230, 0x2d65, 0x175b, 0x5c8b, 0x1, 0x0);
        gbc.writeMem(0x2161, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4c07);
        EXPECT(gbc.pc(), 0x2163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0011
        gbc.setState(0x5162, 0xf53f, 0x3ab0, 0x2613, 0xf394, 0x6dc7, 0x0, 0x1);
        gbc.writeMem(0x5162, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf53f);
        EXPECT(gbc.pc(), 0x5164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0012
        gbc.setState(0x24f0, 0xc00d, 0x4480, 0x47f9, 0xad89, 0xf319, 0x0, 0x1);
        gbc.writeMem(0x24f0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc00d);
        EXPECT(gbc.pc(), 0x24f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0013
        gbc.setState(0xe9ef, 0xe361, 0xe100, 0x378b, 0xbed7, 0x78dc, 0x1, 0x1);
        gbc.writeMem(0xe9ef, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe361);
        EXPECT(gbc.pc(), 0xe9f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ef), 0xcb);
        EXPECT(gbc.readMem(0xe9f0), 0x9a);
        // CB 9A 0014
        gbc.setState(0x99c8, 0xd04d, 0x9fc0, 0x3b57, 0xfcc2, 0xa127, 0x0, 0x1);
        gbc.writeMem(0x99c8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd04d);
        EXPECT(gbc.pc(), 0x99ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c8), 0xcb);
        EXPECT(gbc.readMem(0x99c9), 0x9a);
        // CB 9A 0015
        gbc.setState(0x1598, 0xf0b2, 0x9380, 0x14c5, 0xf30f, 0x5451, 0x0, 0x1);
        gbc.writeMem(0x1598, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf0b2);
        EXPECT(gbc.pc(), 0x159a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0016
        gbc.setState(0xb9aa, 0x5171, 0xed50, 0x2034, 0xe2e4, 0xbefb, 0x0, 0x1);
        gbc.writeMem(0xb9aa, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5171);
        EXPECT(gbc.pc(), 0xb9ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9aa), 0xcb);
        EXPECT(gbc.readMem(0xb9ab), 0x9a);
        // CB 9A 0017
        gbc.setState(0xe931, 0x19f1, 0x7130, 0xfa09, 0x42a1, 0xbaaa, 0x0, 0x1);
        gbc.writeMem(0xe931, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x19f1);
        EXPECT(gbc.pc(), 0xe933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe931), 0xcb);
        EXPECT(gbc.readMem(0xe932), 0x9a);
        // CB 9A 0018
        gbc.setState(0x9f5, 0xa9ab, 0xf280, 0x4432, 0xd26a, 0x6099, 0x0, 0x1);
        gbc.writeMem(0x9f5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa9ab);
        EXPECT(gbc.pc(), 0x9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0019
        gbc.setState(0x1b1e, 0xb32e, 0x4610, 0x3044, 0x14c1, 0x875a, 0x0, 0x0);
        gbc.writeMem(0x1b1e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb32e);
        EXPECT(gbc.pc(), 0x1b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 001A
        gbc.setState(0x7828, 0x4c96, 0x1800, 0x6287, 0x6a8b, 0x3614, 0x0, 0x0);
        gbc.writeMem(0x7828, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4c96);
        EXPECT(gbc.pc(), 0x782a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 001B
        gbc.setState(0xcfd9, 0xda08, 0x20d0, 0xf68, 0xbff4, 0x88bb, 0x1, 0x0);
        gbc.writeMem(0xcfd9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xda08);
        EXPECT(gbc.pc(), 0xcfdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd9), 0xcb);
        EXPECT(gbc.readMem(0xcfda), 0x9a);
        // CB 9A 001C
        gbc.setState(0xd276, 0x6f53, 0x1c70, 0xc297, 0xfabd, 0xb3aa, 0x1, 0x0);
        gbc.writeMem(0xd276, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6f53);
        EXPECT(gbc.pc(), 0xd278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd276), 0xcb);
        EXPECT(gbc.readMem(0xd277), 0x9a);
        // CB 9A 001E
        gbc.setState(0x336d, 0x47e2, 0x47d0, 0x8755, 0x1be6, 0x8650, 0x1, 0x0);
        gbc.writeMem(0x336d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x47e2);
        EXPECT(gbc.pc(), 0x336f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 001F
        gbc.setState(0x494c, 0x8072, 0xcde0, 0xc1f9, 0x211c, 0x51dc, 0x0, 0x1);
        gbc.writeMem(0x494c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8072);
        EXPECT(gbc.pc(), 0x494e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0020
        gbc.setState(0x1287, 0x922e, 0xab90, 0x1a76, 0x8ac9, 0xbb, 0x0, 0x1);
        gbc.writeMem(0x1287, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x922e);
        EXPECT(gbc.pc(), 0x1289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0021
        gbc.setState(0xe4c, 0x6f32, 0xc350, 0x20be, 0x3938, 0x5a3a, 0x1, 0x0);
        gbc.writeMem(0xe4c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6f32);
        EXPECT(gbc.pc(), 0xe4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0022
        gbc.setState(0x4e46, 0x513d, 0xf370, 0xf34b, 0xc7f4, 0xb8a0, 0x0, 0x1);
        gbc.writeMem(0x4e46, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x513d);
        EXPECT(gbc.pc(), 0x4e48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0023
        gbc.setState(0x4e8f, 0xe459, 0x5c10, 0x1ada, 0xef8a, 0xb84a, 0x1, 0x1);
        gbc.writeMem(0x4e8f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe459);
        EXPECT(gbc.pc(), 0x4e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0024
        gbc.setState(0x9dc9, 0xb1e8, 0xbc50, 0x1247, 0x5f75, 0x12e3, 0x0, 0x0);
        gbc.writeMem(0x9dc9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb1e8);
        EXPECT(gbc.pc(), 0x9dcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc9), 0xcb);
        EXPECT(gbc.readMem(0x9dca), 0x9a);
        // CB 9A 0025
        gbc.setState(0x32b2, 0x8332, 0x66c0, 0x53e4, 0xaa4b, 0x4d6e, 0x0, 0x1);
        gbc.writeMem(0x32b2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8332);
        EXPECT(gbc.pc(), 0x32b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0026
        gbc.setState(0xcd42, 0xa935, 0xaca0, 0xaced, 0xf8f7, 0xf07e, 0x1, 0x1);
        gbc.writeMem(0xcd42, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa935);
        EXPECT(gbc.pc(), 0xcd44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd42), 0xcb);
        EXPECT(gbc.readMem(0xcd43), 0x9a);
        // CB 9A 0027
        gbc.setState(0xcaad, 0xc21a, 0x6dd0, 0xfb3b, 0x8086, 0x56c6, 0x0, 0x1);
        gbc.writeMem(0xcaad, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc21a);
        EXPECT(gbc.pc(), 0xcaaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaad), 0xcb);
        EXPECT(gbc.readMem(0xcaae), 0x9a);
        // CB 9A 0028
        gbc.setState(0xb30b, 0x9455, 0xe6a0, 0x3b91, 0xc18, 0x330c, 0x1, 0x0);
        gbc.writeMem(0xb30b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9455);
        EXPECT(gbc.pc(), 0xb30d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb30b), 0xcb);
        EXPECT(gbc.readMem(0xb30c), 0x9a);
        // CB 9A 0029
        gbc.setState(0xcedb, 0xa5f2, 0xbec0, 0xeb4d, 0xd023, 0x73d3, 0x0, 0x0);
        gbc.writeMem(0xcedb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa5f2);
        EXPECT(gbc.pc(), 0xcedd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcedb), 0xcb);
        EXPECT(gbc.readMem(0xcedc), 0x9a);
        // CB 9A 002A
        gbc.setState(0xd516, 0xe74b, 0x7800, 0x36b6, 0x1f64, 0xc0d6, 0x1, 0x0);
        gbc.writeMem(0xd516, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe74b);
        EXPECT(gbc.pc(), 0xd518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd516), 0xcb);
        EXPECT(gbc.readMem(0xd517), 0x9a);
        // CB 9A 002B
        gbc.setState(0x6be6, 0x6e73, 0x3bd0, 0xcb4a, 0x2a56, 0xcb, 0x1, 0x1);
        gbc.writeMem(0x6be6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6e73);
        EXPECT(gbc.pc(), 0x6be8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 002C
        gbc.setState(0x1111, 0x15ea, 0x15a0, 0xae22, 0x6339, 0xb4cb, 0x0, 0x1);
        gbc.writeMem(0x1111, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x15ea);
        EXPECT(gbc.pc(), 0x1113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 002D
        gbc.setState(0x5648, 0xa886, 0xf3e0, 0x3fc6, 0xb97f, 0x15f0, 0x0, 0x0);
        gbc.writeMem(0x5648, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa886);
        EXPECT(gbc.pc(), 0x564a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 002E
        gbc.setState(0xe988, 0x3038, 0xfc30, 0x88bb, 0x4593, 0x45a9, 0x1, 0x0);
        gbc.writeMem(0xe988, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3038);
        EXPECT(gbc.pc(), 0xe98a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe988), 0xcb);
        EXPECT(gbc.readMem(0xe989), 0x9a);
        // CB 9A 002F
        gbc.setState(0xbba5, 0x1958, 0xbbb0, 0xadae, 0x9f97, 0xdd5, 0x1, 0x1);
        gbc.writeMem(0xbba5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1958);
        EXPECT(gbc.pc(), 0xbba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbba5), 0xcb);
        EXPECT(gbc.readMem(0xbba6), 0x9a);
        // CB 9A 0030
        gbc.setState(0x71d4, 0x46a6, 0x9760, 0xec07, 0xe0b0, 0x2ad7, 0x0, 0x1);
        gbc.writeMem(0x71d4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x46a6);
        EXPECT(gbc.pc(), 0x71d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0031
        gbc.setState(0xdff7, 0xbae6, 0xf720, 0xa9b9, 0xa7ca, 0x5076, 0x1, 0x1);
        gbc.writeMem(0xdff7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbae6);
        EXPECT(gbc.pc(), 0xdff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff7), 0xcb);
        EXPECT(gbc.readMem(0xdff8), 0x9a);
        // CB 9A 0032
        gbc.setState(0xc1b8, 0xa835, 0x1b90, 0xb1d7, 0x857b, 0x5f60, 0x0, 0x1);
        gbc.writeMem(0xc1b8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa835);
        EXPECT(gbc.pc(), 0xc1ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b8), 0xcb);
        EXPECT(gbc.readMem(0xc1b9), 0x9a);
        // CB 9A 0033
        gbc.setState(0xbc88, 0x44c9, 0x61b0, 0x6d8d, 0x9cb6, 0x9b53, 0x0, 0x1);
        gbc.writeMem(0xbc88, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x44c9);
        EXPECT(gbc.pc(), 0xbc8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc88), 0xcb);
        EXPECT(gbc.readMem(0xbc89), 0x9a);
        // CB 9A 0034
        gbc.setState(0x9dc7, 0xf9a5, 0xb460, 0x12d5, 0xbfed, 0x6bc3, 0x0, 0x1);
        gbc.writeMem(0x9dc7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf9a5);
        EXPECT(gbc.pc(), 0x9dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc7), 0xcb);
        EXPECT(gbc.readMem(0x9dc8), 0x9a);
        // CB 9A 0035
        gbc.setState(0x245d, 0x658e, 0x9f90, 0xab59, 0x3622, 0x229, 0x0, 0x0);
        gbc.writeMem(0x245d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x658e);
        EXPECT(gbc.pc(), 0x245f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0036
        gbc.setState(0x9aa1, 0xd0f, 0xab40, 0xd146, 0x129, 0x1008, 0x0, 0x0);
        gbc.writeMem(0x9aa1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd0f);
        EXPECT(gbc.pc(), 0x9aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa1), 0xcb);
        EXPECT(gbc.readMem(0x9aa2), 0x9a);
        // CB 9A 0037
        gbc.setState(0x8ace, 0x1a80, 0x9da0, 0xe49d, 0x39cc, 0xca9f, 0x1, 0x0);
        gbc.writeMem(0x8ace, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1a80);
        EXPECT(gbc.pc(), 0x8ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ace), 0xcb);
        EXPECT(gbc.readMem(0x8acf), 0x9a);
        // CB 9A 0038
        gbc.setState(0xc825, 0xb760, 0xe7f0, 0xd80d, 0xff41, 0xd15f, 0x1, 0x1);
        gbc.writeMem(0xc825, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb760);
        EXPECT(gbc.pc(), 0xc827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc825), 0xcb);
        EXPECT(gbc.readMem(0xc826), 0x9a);
        // CB 9A 0039
        gbc.setState(0x16c0, 0x888f, 0xd1f0, 0x4234, 0xca, 0x84f7, 0x1, 0x1);
        gbc.writeMem(0x16c0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x888f);
        EXPECT(gbc.pc(), 0x16c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 003A
        gbc.setState(0x5ee2, 0x7e99, 0x9190, 0xcb5e, 0x24f0, 0x7329, 0x1, 0x1);
        gbc.writeMem(0x5ee2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7e99);
        EXPECT(gbc.pc(), 0x5ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 003B
        gbc.setState(0x2994, 0x2b24, 0xd310, 0x556a, 0x620, 0x55e, 0x0, 0x0);
        gbc.writeMem(0x2994, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2b24);
        EXPECT(gbc.pc(), 0x2996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 003C
        gbc.setState(0xdd7d, 0x711d, 0xe750, 0xb94d, 0x74c, 0xbecc, 0x1, 0x0);
        gbc.writeMem(0xdd7d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x711d);
        EXPECT(gbc.pc(), 0xdd7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd7d), 0xcb);
        EXPECT(gbc.readMem(0xdd7e), 0x9a);
        // CB 9A 003D
        gbc.setState(0xcbeb, 0x7e62, 0x7510, 0x2b25, 0xb0df, 0x4ec2, 0x1, 0x0);
        gbc.writeMem(0xcbeb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7e62);
        EXPECT(gbc.pc(), 0xcbed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbeb), 0xcb);
        EXPECT(gbc.readMem(0xcbec), 0x9a);
        // CB 9A 003E
        gbc.setState(0xd87e, 0xfea2, 0x9140, 0x1887, 0x83a5, 0xd69f, 0x0, 0x0);
        gbc.writeMem(0xd87e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfea2);
        EXPECT(gbc.pc(), 0xd880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd87e), 0xcb);
        EXPECT(gbc.readMem(0xd87f), 0x9a);
        // CB 9A 003F
        gbc.setState(0xd4f2, 0xed46, 0xcb40, 0x707b, 0x3eca, 0x5798, 0x0, 0x1);
        gbc.writeMem(0xd4f2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xed46);
        EXPECT(gbc.pc(), 0xd4f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f2), 0xcb);
        EXPECT(gbc.readMem(0xd4f3), 0x9a);
        // CB 9A 0040
        gbc.setState(0x1b46, 0xd628, 0xae0, 0x3bb8, 0xb945, 0xf0e, 0x1, 0x0);
        gbc.writeMem(0x1b46, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd628);
        EXPECT(gbc.pc(), 0x1b48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0041
        gbc.setState(0x1b57, 0x527, 0xe490, 0xe2cc, 0x656e, 0xda3e, 0x0, 0x0);
        gbc.writeMem(0x1b57, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x527);
        EXPECT(gbc.pc(), 0x1b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0042
        gbc.setState(0x9287, 0x346e, 0x9a00, 0x7230, 0x5d36, 0xbb7e, 0x1, 0x1);
        gbc.writeMem(0x9287, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x346e);
        EXPECT(gbc.pc(), 0x9289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9287), 0xcb);
        EXPECT(gbc.readMem(0x9288), 0x9a);
        // CB 9A 0043
        gbc.setState(0x1234, 0x4ee7, 0x61c0, 0x8998, 0x495b, 0x21af, 0x0, 0x1);
        gbc.writeMem(0x1234, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4ee7);
        EXPECT(gbc.pc(), 0x1236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0044
        gbc.setState(0x159c, 0xc9c7, 0x8c00, 0x7bc6, 0x9c3, 0x755e, 0x1, 0x0);
        gbc.writeMem(0x159c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc9c7);
        EXPECT(gbc.pc(), 0x159e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0045
        gbc.setState(0xd932, 0x2b8b, 0x42d0, 0x903f, 0x489b, 0x313a, 0x1, 0x1);
        gbc.writeMem(0xd932, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2b8b);
        EXPECT(gbc.pc(), 0xd934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd932), 0xcb);
        EXPECT(gbc.readMem(0xd933), 0x9a);
        // CB 9A 0046
        gbc.setState(0xd6a7, 0x16ac, 0x5f40, 0xdf17, 0xdf00, 0x449a, 0x1, 0x0);
        gbc.writeMem(0xd6a7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x16ac);
        EXPECT(gbc.pc(), 0xd6a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a7), 0xcb);
        EXPECT(gbc.readMem(0xd6a8), 0x9a);
        // CB 9A 0047
        gbc.setState(0x2b15, 0x249a, 0xfc0, 0xd7c0, 0x7bea, 0x54f2, 0x1, 0x1);
        gbc.writeMem(0x2b15, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x249a);
        EXPECT(gbc.pc(), 0x2b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0048
        gbc.setState(0xdc7b, 0x8424, 0xb680, 0x52b9, 0x7a53, 0x3385, 0x0, 0x1);
        gbc.writeMem(0xdc7b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8424);
        EXPECT(gbc.pc(), 0xdc7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc7b), 0xcb);
        EXPECT(gbc.readMem(0xdc7c), 0x9a);
        // CB 9A 0049
        gbc.setState(0xc8d5, 0xf5f6, 0xed70, 0x574f, 0x7fa9, 0xcc3b, 0x1, 0x1);
        gbc.writeMem(0xc8d5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf5f6);
        EXPECT(gbc.pc(), 0xc8d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d5), 0xcb);
        EXPECT(gbc.readMem(0xc8d6), 0x9a);
        // CB 9A 004C
        gbc.setState(0xa766, 0x4147, 0xbe70, 0xe05b, 0x38f4, 0xdff1, 0x1, 0x0);
        gbc.writeMem(0xa766, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x4147);
        EXPECT(gbc.pc(), 0xa768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa766), 0xcb);
        EXPECT(gbc.readMem(0xa767), 0x9a);
        // CB 9A 004D
        gbc.setState(0x127b, 0xbd58, 0x23e0, 0x4909, 0x42af, 0x1533, 0x1, 0x1);
        gbc.writeMem(0x127b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbd58);
        EXPECT(gbc.pc(), 0x127d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 004E
        gbc.setState(0xa802, 0x83b6, 0x4c30, 0xeac1, 0x6096, 0xb0bb, 0x0, 0x1);
        gbc.writeMem(0xa802, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x83b6);
        EXPECT(gbc.pc(), 0xa804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa802), 0xcb);
        EXPECT(gbc.readMem(0xa803), 0x9a);
        // CB 9A 004F
        gbc.setState(0x3314, 0x23bb, 0x9d50, 0x68fc, 0x56ab, 0x1d87, 0x0, 0x0);
        gbc.writeMem(0x3314, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x23bb);
        EXPECT(gbc.pc(), 0x3316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0050
        gbc.setState(0xeff, 0x1b2e, 0xd7b0, 0x6d57, 0x686f, 0xb627, 0x1, 0x0);
        gbc.writeMem(0xeff, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1b2e);
        EXPECT(gbc.pc(), 0xf01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0051
        gbc.setState(0x88b, 0xdf76, 0x4e90, 0x2030, 0x19b4, 0xf4f, 0x0, 0x0);
        gbc.writeMem(0x88b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdf76);
        EXPECT(gbc.pc(), 0x88d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0052
        gbc.setState(0xc11f, 0xb0f0, 0xcaf0, 0xcb42, 0x68b, 0x3e19, 0x1, 0x0);
        gbc.writeMem(0xc11f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb0f0);
        EXPECT(gbc.pc(), 0xc121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc11f), 0xcb);
        EXPECT(gbc.readMem(0xc120), 0x9a);
        // CB 9A 0053
        gbc.setState(0x10f8, 0x3752, 0x66a0, 0x5642, 0xfd44, 0x65a4, 0x0, 0x1);
        gbc.writeMem(0x10f8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3752);
        EXPECT(gbc.pc(), 0x10fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0054
        gbc.setState(0x1b75, 0x2863, 0x8650, 0xe860, 0x1cd, 0xf95e, 0x1, 0x1);
        gbc.writeMem(0x1b75, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2863);
        EXPECT(gbc.pc(), 0x1b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0055
        gbc.setState(0xefa, 0x54f2, 0xfc00, 0x51b9, 0xf013, 0xb0b9, 0x1, 0x0);
        gbc.writeMem(0xefa, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x54f2);
        EXPECT(gbc.pc(), 0xefc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0056
        gbc.setState(0xa4a5, 0xb783, 0xb220, 0xf4e0, 0x896f, 0xc4c3, 0x0, 0x0);
        gbc.writeMem(0xa4a5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb783);
        EXPECT(gbc.pc(), 0xa4a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a5), 0xcb);
        EXPECT(gbc.readMem(0xa4a6), 0x9a);
        // CB 9A 0057
        gbc.setState(0x7554, 0x836b, 0xdfa0, 0x282e, 0xc559, 0x3319, 0x0, 0x0);
        gbc.writeMem(0x7554, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x836b);
        EXPECT(gbc.pc(), 0x7556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0058
        gbc.setState(0xb403, 0x2ca, 0xb7a0, 0x72c0, 0xb80c, 0xe35e, 0x0, 0x0);
        gbc.writeMem(0xb403, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2ca);
        EXPECT(gbc.pc(), 0xb405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb403), 0xcb);
        EXPECT(gbc.readMem(0xb404), 0x9a);
        // CB 9A 0059
        gbc.setState(0xab6d, 0x71b6, 0x91b0, 0xd8e1, 0x2320, 0x438f, 0x0, 0x0);
        gbc.writeMem(0xab6d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x71b6);
        EXPECT(gbc.pc(), 0xab6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab6d), 0xcb);
        EXPECT(gbc.readMem(0xab6e), 0x9a);
        // CB 9A 005B
        gbc.setState(0x6869, 0xd537, 0xff00, 0xf34, 0x2e3f, 0x192e, 0x1, 0x0);
        gbc.writeMem(0x6869, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd537);
        EXPECT(gbc.pc(), 0x686b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 005C
        gbc.setState(0xe545, 0x940c, 0xaae0, 0x72d1, 0x9cb0, 0x4b2, 0x1, 0x0);
        gbc.writeMem(0xe545, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x940c);
        EXPECT(gbc.pc(), 0xe547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe545), 0xcb);
        EXPECT(gbc.readMem(0xe546), 0x9a);
        // CB 9A 005D
        gbc.setState(0x44e7, 0xd79d, 0x5e60, 0xa9af, 0x2d78, 0x7ca0, 0x1, 0x1);
        gbc.writeMem(0x44e7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd79d);
        EXPECT(gbc.pc(), 0x44e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 005E
        gbc.setState(0x1bfc, 0x318c, 0x5a00, 0xacd1, 0xada2, 0xf748, 0x1, 0x1);
        gbc.writeMem(0x1bfc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x318c);
        EXPECT(gbc.pc(), 0x1bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 005F
        gbc.setState(0xb42e, 0xd8a, 0xa5b0, 0xaeca, 0x2a7f, 0xc40c, 0x1, 0x1);
        gbc.writeMem(0xb42e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd8a);
        EXPECT(gbc.pc(), 0xb430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb42e), 0xcb);
        EXPECT(gbc.readMem(0xb42f), 0x9a);
        // CB 9A 0060
        gbc.setState(0xcbc5, 0x82cc, 0x7630, 0x3936, 0x45cc, 0x9820, 0x0, 0x0);
        gbc.writeMem(0xcbc5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x82cc);
        EXPECT(gbc.pc(), 0xcbc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbc5), 0xcb);
        EXPECT(gbc.readMem(0xcbc6), 0x9a);
        // CB 9A 0061
        gbc.setState(0xbecf, 0x7e19, 0xbe70, 0x7ad4, 0xb93c, 0x17f2, 0x1, 0x0);
        gbc.writeMem(0xbecf, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7e19);
        EXPECT(gbc.pc(), 0xbed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbecf), 0xcb);
        EXPECT(gbc.readMem(0xbed0), 0x9a);
        // CB 9A 0062
        gbc.setState(0xbf8d, 0xab82, 0x7160, 0x16dc, 0xfd40, 0x7c30, 0x1, 0x0);
        gbc.writeMem(0xbf8d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xab82);
        EXPECT(gbc.pc(), 0xbf8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf8d), 0xcb);
        EXPECT(gbc.readMem(0xbf8e), 0x9a);
        // CB 9A 0063
        gbc.setState(0xa919, 0x2da3, 0x46c0, 0xa68e, 0xef90, 0xa850, 0x1, 0x1);
        gbc.writeMem(0xa919, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2da3);
        EXPECT(gbc.pc(), 0xa91b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa919), 0xcb);
        EXPECT(gbc.readMem(0xa91a), 0x9a);
        // CB 9A 0064
        gbc.setState(0x7b26, 0x4402, 0x7240, 0x8014, 0xa63c, 0xeb8, 0x0, 0x0);
        gbc.writeMem(0x7b26, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4402);
        EXPECT(gbc.pc(), 0x7b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0065
        gbc.setState(0xa99c, 0x614e, 0xcce0, 0x962b, 0xe8a2, 0xeec3, 0x0, 0x1);
        gbc.writeMem(0xa99c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x614e);
        EXPECT(gbc.pc(), 0xa99e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99c), 0xcb);
        EXPECT(gbc.readMem(0xa99d), 0x9a);
        // CB 9A 0066
        gbc.setState(0x9e04, 0x20ec, 0x3e20, 0xf1e0, 0x9eb9, 0x8fd8, 0x1, 0x0);
        gbc.writeMem(0x9e04, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x20ec);
        EXPECT(gbc.pc(), 0x9e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e04), 0xcb);
        EXPECT(gbc.readMem(0x9e05), 0x9a);
        // CB 9A 0067
        gbc.setState(0x3ee1, 0x8263, 0xe860, 0x8346, 0x552f, 0x3db5, 0x1, 0x0);
        gbc.writeMem(0x3ee1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8263);
        EXPECT(gbc.pc(), 0x3ee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0068
        gbc.setState(0x7311, 0x3b4c, 0x9a80, 0x1362, 0x7c5f, 0xe8cd, 0x0, 0x1);
        gbc.writeMem(0x7311, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3b4c);
        EXPECT(gbc.pc(), 0x7313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0069
        gbc.setState(0x7c83, 0xbba7, 0x9bb0, 0xf045, 0xd66e, 0xf96f, 0x1, 0x0);
        gbc.writeMem(0x7c83, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xbba7);
        EXPECT(gbc.pc(), 0x7c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 006A
        gbc.setState(0x1927, 0x6d97, 0x7910, 0xfd9c, 0x2669, 0x8be7, 0x0, 0x0);
        gbc.writeMem(0x1927, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6d97);
        EXPECT(gbc.pc(), 0x1929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 006B
        gbc.setState(0xa88c, 0x4ec, 0x4e0, 0x10ee, 0x38b6, 0x9cf8, 0x1, 0x0);
        gbc.writeMem(0xa88c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4ec);
        EXPECT(gbc.pc(), 0xa88e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88c), 0xcb);
        EXPECT(gbc.readMem(0xa88d), 0x9a);
        // CB 9A 006D
        gbc.setState(0x8095, 0x4b97, 0x8c80, 0xc63c, 0xca9f, 0x7ab2, 0x1, 0x0);
        gbc.writeMem(0x8095, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4b97);
        EXPECT(gbc.pc(), 0x8097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8095), 0xcb);
        EXPECT(gbc.readMem(0x8096), 0x9a);
        // CB 9A 006E
        gbc.setState(0xdd2a, 0xdc19, 0x3f90, 0x5158, 0x6944, 0x6978, 0x1, 0x1);
        gbc.writeMem(0xdd2a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdc19);
        EXPECT(gbc.pc(), 0xdd2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd2a), 0xcb);
        EXPECT(gbc.readMem(0xdd2b), 0x9a);
        // CB 9A 006F
        gbc.setState(0xcc99, 0x629d, 0xce20, 0xe5f6, 0x395f, 0x9898, 0x1, 0x1);
        gbc.writeMem(0xcc99, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x629d);
        EXPECT(gbc.pc(), 0xcc9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc99), 0xcb);
        EXPECT(gbc.readMem(0xcc9a), 0x9a);
        // CB 9A 0070
        gbc.setState(0xc72e, 0x8565, 0x1920, 0x8640, 0x2463, 0xbfa, 0x1, 0x1);
        gbc.writeMem(0xc72e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8565);
        EXPECT(gbc.pc(), 0xc730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc72e), 0xcb);
        EXPECT(gbc.readMem(0xc72f), 0x9a);
        // CB 9A 0071
        gbc.setState(0xe42f, 0x137, 0x85e0, 0x2ca, 0x4eed, 0x2f4c, 0x0, 0x1);
        gbc.writeMem(0xe42f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x137);
        EXPECT(gbc.pc(), 0xe431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe42f), 0xcb);
        EXPECT(gbc.readMem(0xe430), 0x9a);
        // CB 9A 0072
        gbc.setState(0xb4be, 0xe5f2, 0xeea0, 0x38c7, 0x3022, 0x2677, 0x0, 0x0);
        gbc.writeMem(0xb4be, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe5f2);
        EXPECT(gbc.pc(), 0xb4c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4be), 0xcb);
        EXPECT(gbc.readMem(0xb4bf), 0x9a);
        // CB 9A 0073
        gbc.setState(0x33c8, 0xb27, 0x96b0, 0x5da4, 0x53e2, 0xeae6, 0x0, 0x0);
        gbc.writeMem(0x33c8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb27);
        EXPECT(gbc.pc(), 0x33ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0074
        gbc.setState(0xa43b, 0x7e8d, 0xd790, 0x9fa3, 0x20f8, 0xb086, 0x1, 0x0);
        gbc.writeMem(0xa43b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7e8d);
        EXPECT(gbc.pc(), 0xa43d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa43b), 0xcb);
        EXPECT(gbc.readMem(0xa43c), 0x9a);
        // CB 9A 0075
        gbc.setState(0x7d3b, 0x6cfa, 0xa780, 0x3d6a, 0xcc7d, 0xb566, 0x1, 0x0);
        gbc.writeMem(0x7d3b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6cfa);
        EXPECT(gbc.pc(), 0x7d3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0076
        gbc.setState(0xedb6, 0x1213, 0x9f80, 0xbe9a, 0xa5bd, 0x9e6a, 0x0, 0x0);
        gbc.writeMem(0xedb6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1213);
        EXPECT(gbc.pc(), 0xedb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb6), 0xcb);
        EXPECT(gbc.readMem(0xedb7), 0x9a);
        // CB 9A 0077
        gbc.setState(0x3872, 0x260d, 0x8bb0, 0x8982, 0xc016, 0x9f91, 0x1, 0x1);
        gbc.writeMem(0x3872, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x260d);
        EXPECT(gbc.pc(), 0x3874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0078
        gbc.setState(0x634d, 0xb55d, 0xebf0, 0x6734, 0xf8f9, 0xdb7d, 0x0, 0x1);
        gbc.writeMem(0x634d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb55d);
        EXPECT(gbc.pc(), 0x634f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0079
        gbc.setState(0xebdc, 0x9fb9, 0x85c0, 0x5207, 0xcc2, 0xed9d, 0x1, 0x1);
        gbc.writeMem(0xebdc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9fb9);
        EXPECT(gbc.pc(), 0xebde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebdc), 0xcb);
        EXPECT(gbc.readMem(0xebdd), 0x9a);
        // CB 9A 007B
        gbc.setState(0xa1e, 0xca58, 0xdda0, 0xd03f, 0x3515, 0xdce, 0x0, 0x0);
        gbc.writeMem(0xa1e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xca58);
        EXPECT(gbc.pc(), 0xa20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 007C
        gbc.setState(0x367e, 0xd839, 0x420, 0x9e2d, 0xb642, 0x1bc8, 0x1, 0x1);
        gbc.writeMem(0x367e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd839);
        EXPECT(gbc.pc(), 0x3680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 007D
        gbc.setState(0x1ac6, 0x5b1f, 0x94c0, 0xf9fe, 0xc1b0, 0xc1a1, 0x1, 0x0);
        gbc.writeMem(0x1ac6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5b1f);
        EXPECT(gbc.pc(), 0x1ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 007E
        gbc.setState(0xe31d, 0xefc2, 0x1220, 0x78f7, 0x972f, 0x1ced, 0x0, 0x1);
        gbc.writeMem(0xe31d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xefc2);
        EXPECT(gbc.pc(), 0xe31f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31d), 0xcb);
        EXPECT(gbc.readMem(0xe31e), 0x9a);
        // CB 9A 007F
        gbc.setState(0x14fa, 0xb084, 0xce10, 0x645e, 0x45b6, 0x7c45, 0x1, 0x0);
        gbc.writeMem(0x14fa, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb084);
        EXPECT(gbc.pc(), 0x14fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0080
        gbc.setState(0x9b4e, 0x818b, 0x5af0, 0xd95, 0xe136, 0xb437, 0x0, 0x1);
        gbc.writeMem(0x9b4e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x818b);
        EXPECT(gbc.pc(), 0x9b50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4e), 0xcb);
        EXPECT(gbc.readMem(0x9b4f), 0x9a);
        // CB 9A 0081
        gbc.setState(0x49ec, 0x82b9, 0x5ad0, 0x960a, 0xbcad, 0x63d9, 0x0, 0x0);
        gbc.writeMem(0x49ec, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x82b9);
        EXPECT(gbc.pc(), 0x49ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0082
        gbc.setState(0xabda, 0x418d, 0x9cc0, 0xac37, 0x695c, 0xa749, 0x0, 0x0);
        gbc.writeMem(0xabda, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x418d);
        EXPECT(gbc.pc(), 0xabdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabda), 0xcb);
        EXPECT(gbc.readMem(0xabdb), 0x9a);
        // CB 9A 0083
        gbc.setState(0x289b, 0x1db3, 0x43a0, 0x811c, 0xec0, 0x5c45, 0x0, 0x1);
        gbc.writeMem(0x289b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1db3);
        EXPECT(gbc.pc(), 0x289d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0084
        gbc.setState(0x8854, 0x2a80, 0x10f0, 0x98f0, 0x3b3c, 0x125c, 0x1, 0x1);
        gbc.writeMem(0x8854, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2a80);
        EXPECT(gbc.pc(), 0x8856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8854), 0xcb);
        EXPECT(gbc.readMem(0x8855), 0x9a);
        // CB 9A 0085
        gbc.setState(0xae4e, 0x90db, 0x1280, 0x9cdf, 0x6aa6, 0x627d, 0x0, 0x0);
        gbc.writeMem(0xae4e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x90db);
        EXPECT(gbc.pc(), 0xae50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae4e), 0xcb);
        EXPECT(gbc.readMem(0xae4f), 0x9a);
        // CB 9A 0086
        gbc.setState(0xe793, 0xe441, 0xc1b0, 0xb896, 0xa94f, 0xc10c, 0x0, 0x1);
        gbc.writeMem(0xe793, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe441);
        EXPECT(gbc.pc(), 0xe795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe793), 0xcb);
        EXPECT(gbc.readMem(0xe794), 0x9a);
        // CB 9A 0087
        gbc.setState(0xdb31, 0xee45, 0x5de0, 0xd9fe, 0x8c3a, 0x8e04, 0x1, 0x0);
        gbc.writeMem(0xdb31, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xee45);
        EXPECT(gbc.pc(), 0xdb33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb31), 0xcb);
        EXPECT(gbc.readMem(0xdb32), 0x9a);
        // CB 9A 0088
        gbc.setState(0x890b, 0x903c, 0xb360, 0xae4c, 0x3c0b, 0x1005, 0x1, 0x0);
        gbc.writeMem(0x890b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x903c);
        EXPECT(gbc.pc(), 0x890d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890b), 0xcb);
        EXPECT(gbc.readMem(0x890c), 0x9a);
        // CB 9A 0089
        gbc.setState(0x55f7, 0x2a40, 0xb0f0, 0xd4eb, 0x24e3, 0xe73c, 0x0, 0x0);
        gbc.writeMem(0x55f7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2a40);
        EXPECT(gbc.pc(), 0x55f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 008A
        gbc.setState(0x1dbc, 0xdb30, 0xd6c0, 0x620a, 0x59cb, 0xc765, 0x1, 0x0);
        gbc.writeMem(0x1dbc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdb30);
        EXPECT(gbc.pc(), 0x1dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 008B
        gbc.setState(0x3aac, 0x3bff, 0x1310, 0xc3be, 0x1618, 0x787, 0x1, 0x1);
        gbc.writeMem(0x3aac, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3bff);
        EXPECT(gbc.pc(), 0x3aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 008C
        gbc.setState(0xb38e, 0x636, 0x1c40, 0x5795, 0x1089, 0x6f6, 0x0, 0x0);
        gbc.writeMem(0xb38e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x636);
        EXPECT(gbc.pc(), 0xb390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb38e), 0xcb);
        EXPECT(gbc.readMem(0xb38f), 0x9a);
        // CB 9A 008D
        gbc.setState(0xbbb1, 0x6055, 0xc900, 0x7b0c, 0xc70a, 0xdacf, 0x0, 0x1);
        gbc.writeMem(0xbbb1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6055);
        EXPECT(gbc.pc(), 0xbbb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb1), 0xcb);
        EXPECT(gbc.readMem(0xbbb2), 0x9a);
        // CB 9A 008E
        gbc.setState(0x861b, 0xd78f, 0x3220, 0x272f, 0x1bb5, 0x5a5c, 0x0, 0x1);
        gbc.writeMem(0x861b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd78f);
        EXPECT(gbc.pc(), 0x861d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x861b), 0xcb);
        EXPECT(gbc.readMem(0x861c), 0x9a);
        // CB 9A 008F
        gbc.setState(0x9b4d, 0x5898, 0xe7f0, 0xae84, 0x9dd3, 0x66e9, 0x1, 0x0);
        gbc.writeMem(0x9b4d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5898);
        EXPECT(gbc.pc(), 0x9b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4d), 0xcb);
        EXPECT(gbc.readMem(0x9b4e), 0x9a);
        // CB 9A 0090
        gbc.setState(0x4e3f, 0x987d, 0x3670, 0x8aae, 0x4559, 0x94ff, 0x0, 0x1);
        gbc.writeMem(0x4e3f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x987d);
        EXPECT(gbc.pc(), 0x4e41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0091
        gbc.setState(0x585b, 0x650d, 0x16f0, 0x9431, 0x84ad, 0x57d5, 0x0, 0x0);
        gbc.writeMem(0x585b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x650d);
        EXPECT(gbc.pc(), 0x585d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0092
        gbc.setState(0x6feb, 0x4d81, 0x8990, 0x8998, 0x7958, 0x63c, 0x0, 0x0);
        gbc.writeMem(0x6feb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4d81);
        EXPECT(gbc.pc(), 0x6fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0093
        gbc.setState(0xbdb2, 0x882d, 0xa720, 0x28f7, 0xa5ed, 0xfd03, 0x1, 0x0);
        gbc.writeMem(0xbdb2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x882d);
        EXPECT(gbc.pc(), 0xbdb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb2), 0xcb);
        EXPECT(gbc.readMem(0xbdb3), 0x9a);
        // CB 9A 0094
        gbc.setState(0x1ad1, 0x326d, 0x2a70, 0xe916, 0xd87d, 0xd400, 0x0, 0x0);
        gbc.writeMem(0x1ad1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x326d);
        EXPECT(gbc.pc(), 0x1ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0095
        gbc.setState(0x744a, 0xf914, 0x4730, 0x8cda, 0xeff2, 0x1b29, 0x1, 0x1);
        gbc.writeMem(0x744a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf914);
        EXPECT(gbc.pc(), 0x744c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0096
        gbc.setState(0x5e99, 0x6ba4, 0x8330, 0xf73c, 0xccdc, 0xcf2b, 0x1, 0x1);
        gbc.writeMem(0x5e99, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6ba4);
        EXPECT(gbc.pc(), 0x5e9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0097
        gbc.setState(0x8c3a, 0x4f29, 0x6a20, 0xa1cf, 0xbc6e, 0x8c38, 0x1, 0x1);
        gbc.writeMem(0x8c3a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4f29);
        EXPECT(gbc.pc(), 0x8c3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c3a), 0xcb);
        EXPECT(gbc.readMem(0x8c3b), 0x9a);
        // CB 9A 0098
        gbc.setState(0xa1dd, 0x167b, 0x4bc0, 0xb1c2, 0x5c45, 0xc8f6, 0x1, 0x1);
        gbc.writeMem(0xa1dd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x167b);
        EXPECT(gbc.pc(), 0xa1df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1dd), 0xcb);
        EXPECT(gbc.readMem(0xa1de), 0x9a);
        // CB 9A 009A
        gbc.setState(0xea8f, 0x81c1, 0x1500, 0x8019, 0xfbbd, 0xe41, 0x0, 0x1);
        gbc.writeMem(0xea8f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x81c1);
        EXPECT(gbc.pc(), 0xea91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea8f), 0xcb);
        EXPECT(gbc.readMem(0xea90), 0x9a);
        // CB 9A 009B
        gbc.setState(0x6f62, 0xf76b, 0xfa70, 0xc8bc, 0x18a2, 0x43a9, 0x1, 0x1);
        gbc.writeMem(0x6f62, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf76b);
        EXPECT(gbc.pc(), 0x6f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 009C
        gbc.setState(0xd2cf, 0xa1bc, 0xfcc0, 0x9771, 0x4787, 0x4636, 0x0, 0x1);
        gbc.writeMem(0xd2cf, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa1bc);
        EXPECT(gbc.pc(), 0xd2d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2cf), 0xcb);
        EXPECT(gbc.readMem(0xd2d0), 0x9a);
        // CB 9A 009D
        gbc.setState(0x57e, 0xe47b, 0x8070, 0x7451, 0xce09, 0xcf84, 0x0, 0x1);
        gbc.writeMem(0x57e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe47b);
        EXPECT(gbc.pc(), 0x580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 009E
        gbc.setState(0xa206, 0x3a25, 0x6290, 0x7000, 0x66a8, 0x66a6, 0x1, 0x0);
        gbc.writeMem(0xa206, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3a25);
        EXPECT(gbc.pc(), 0xa208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa206), 0xcb);
        EXPECT(gbc.readMem(0xa207), 0x9a);
        // CB 9A 009F
        gbc.setState(0xc6b0, 0x32e4, 0x6760, 0x7c21, 0x4d57, 0xc7a6, 0x0, 0x0);
        gbc.writeMem(0xc6b0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x32e4);
        EXPECT(gbc.pc(), 0xc6b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6b0), 0xcb);
        EXPECT(gbc.readMem(0xc6b1), 0x9a);
        // CB 9A 00A0
        gbc.setState(0xbd9b, 0xaa0c, 0xffc0, 0x35aa, 0x39d0, 0xed02, 0x0, 0x1);
        gbc.writeMem(0xbd9b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xaa0c);
        EXPECT(gbc.pc(), 0xbd9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd9b), 0xcb);
        EXPECT(gbc.readMem(0xbd9c), 0x9a);
        // CB 9A 00A1
        gbc.setState(0x6e3b, 0xa7ac, 0xd660, 0x9ced, 0x3a63, 0xbee1, 0x0, 0x0);
        gbc.writeMem(0x6e3b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa7ac);
        EXPECT(gbc.pc(), 0x6e3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00A2
        gbc.setState(0xebd4, 0x493, 0xc460, 0x29b5, 0x5381, 0x9a3a, 0x0, 0x0);
        gbc.writeMem(0xebd4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x493);
        EXPECT(gbc.pc(), 0xebd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd4), 0xcb);
        EXPECT(gbc.readMem(0xebd5), 0x9a);
        // CB 9A 00A3
        gbc.setState(0xa756, 0x6349, 0x4a00, 0x1afc, 0xf39e, 0x546, 0x1, 0x0);
        gbc.writeMem(0xa756, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6349);
        EXPECT(gbc.pc(), 0xa758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa756), 0xcb);
        EXPECT(gbc.readMem(0xa757), 0x9a);
        // CB 9A 00A4
        gbc.setState(0x1328, 0x898e, 0x1f40, 0x7b3f, 0x327e, 0xe916, 0x0, 0x0);
        gbc.writeMem(0x1328, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x898e);
        EXPECT(gbc.pc(), 0x132a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00A5
        gbc.setState(0xd8d0, 0xef7c, 0xed50, 0xa792, 0x266f, 0x2028, 0x0, 0x1);
        gbc.writeMem(0xd8d0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xef7c);
        EXPECT(gbc.pc(), 0xd8d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d0), 0xcb);
        EXPECT(gbc.readMem(0xd8d1), 0x9a);
        // CB 9A 00A7
        gbc.setState(0xc2a0, 0x2021, 0x7300, 0xd645, 0x4d77, 0xe15d, 0x0, 0x0);
        gbc.writeMem(0xc2a0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2021);
        EXPECT(gbc.pc(), 0xc2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a0), 0xcb);
        EXPECT(gbc.readMem(0xc2a1), 0x9a);
        // CB 9A 00A8
        gbc.setState(0xb576, 0x4f58, 0x3190, 0x7b55, 0xba4d, 0xfce, 0x0, 0x0);
        gbc.writeMem(0xb576, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4f58);
        EXPECT(gbc.pc(), 0xb578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb576), 0xcb);
        EXPECT(gbc.readMem(0xb577), 0x9a);
        // CB 9A 00A9
        gbc.setState(0x7c6, 0x35c3, 0xa910, 0x5809, 0x6cf3, 0x698f, 0x1, 0x0);
        gbc.writeMem(0x7c6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x35c3);
        EXPECT(gbc.pc(), 0x7c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00AA
        gbc.setState(0x30ee, 0x5eef, 0x34a0, 0x2d70, 0x39e4, 0x72bb, 0x0, 0x0);
        gbc.writeMem(0x30ee, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5eef);
        EXPECT(gbc.pc(), 0x30f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00AB
        gbc.setState(0x9c48, 0x404a, 0x4f60, 0x4fa4, 0x1528, 0x4c07, 0x1, 0x0);
        gbc.writeMem(0x9c48, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x404a);
        EXPECT(gbc.pc(), 0x9c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c48), 0xcb);
        EXPECT(gbc.readMem(0x9c49), 0x9a);
        // CB 9A 00AC
        gbc.setState(0x2da, 0x64e5, 0x9700, 0x7a5b, 0xe27b, 0x674c, 0x1, 0x1);
        gbc.writeMem(0x2da, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x64e5);
        EXPECT(gbc.pc(), 0x2dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00AD
        gbc.setState(0xd6ab, 0x6ba7, 0x3fa0, 0x60db, 0xfe85, 0x9c76, 0x1, 0x0);
        gbc.writeMem(0xd6ab, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6ba7);
        EXPECT(gbc.pc(), 0xd6ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ab), 0xcb);
        EXPECT(gbc.readMem(0xd6ac), 0x9a);
        // CB 9A 00AE
        gbc.setState(0xeb63, 0x4581, 0x5f20, 0x34cd, 0x5a7d, 0xae5a, 0x1, 0x1);
        gbc.writeMem(0xeb63, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4581);
        EXPECT(gbc.pc(), 0xeb65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb63), 0xcb);
        EXPECT(gbc.readMem(0xeb64), 0x9a);
        // CB 9A 00AF
        gbc.setState(0xd8f6, 0x856f, 0x41f0, 0x5ac8, 0xe13b, 0xdeff, 0x0, 0x0);
        gbc.writeMem(0xd8f6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x856f);
        EXPECT(gbc.pc(), 0xd8f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f6), 0xcb);
        EXPECT(gbc.readMem(0xd8f7), 0x9a);
        // CB 9A 00B0
        gbc.setState(0x8f4, 0x6a7b, 0x1770, 0xfa67, 0x4af8, 0x208f, 0x1, 0x1);
        gbc.writeMem(0x8f4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6a7b);
        EXPECT(gbc.pc(), 0x8f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00B1
        gbc.setState(0x734e, 0x2803, 0xd590, 0x57ef, 0x9222, 0x3363, 0x1, 0x0);
        gbc.writeMem(0x734e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2803);
        EXPECT(gbc.pc(), 0x7350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00B2
        gbc.setState(0x867a, 0xb84e, 0xe2b0, 0xe5b5, 0x263f, 0x67e6, 0x0, 0x1);
        gbc.writeMem(0x867a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb84e);
        EXPECT(gbc.pc(), 0x867c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x867a), 0xcb);
        EXPECT(gbc.readMem(0x867b), 0x9a);
        // CB 9A 00B3
        gbc.setState(0x80bf, 0xdb13, 0xd7d0, 0xd72c, 0xe902, 0xecc7, 0x1, 0x0);
        gbc.writeMem(0x80bf, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdb13);
        EXPECT(gbc.pc(), 0x80c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80bf), 0xcb);
        EXPECT(gbc.readMem(0x80c0), 0x9a);
        // CB 9A 00B4
        gbc.setState(0xba64, 0x5236, 0xe360, 0x884e, 0xbe13, 0xc1fa, 0x1, 0x1);
        gbc.writeMem(0xba64, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5236);
        EXPECT(gbc.pc(), 0xba66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba64), 0xcb);
        EXPECT(gbc.readMem(0xba65), 0x9a);
        // CB 9A 00B5
        gbc.setState(0xd418, 0x1ba9, 0x6dd0, 0xc0b1, 0x3876, 0x355d, 0x1, 0x1);
        gbc.writeMem(0xd418, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1ba9);
        EXPECT(gbc.pc(), 0xd41a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd418), 0xcb);
        EXPECT(gbc.readMem(0xd419), 0x9a);
        // CB 9A 00B6
        gbc.setState(0xcac4, 0x6e7f, 0x1290, 0xe560, 0xfc92, 0x628, 0x1, 0x1);
        gbc.writeMem(0xcac4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6e7f);
        EXPECT(gbc.pc(), 0xcac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac4), 0xcb);
        EXPECT(gbc.readMem(0xcac5), 0x9a);
        // CB 9A 00B7
        gbc.setState(0x5583, 0x4e4f, 0xb730, 0x1272, 0x345, 0xd133, 0x0, 0x0);
        gbc.writeMem(0x5583, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4e4f);
        EXPECT(gbc.pc(), 0x5585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00B8
        gbc.setState(0x28dc, 0x2b3d, 0xe750, 0xa1fc, 0xf6c6, 0xc35a, 0x1, 0x1);
        gbc.writeMem(0x28dc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2b3d);
        EXPECT(gbc.pc(), 0x28de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00B9
        gbc.setState(0x1ca1, 0x7ff2, 0x1a40, 0xcc86, 0xaa72, 0x1a4, 0x0, 0x0);
        gbc.writeMem(0x1ca1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7ff2);
        EXPECT(gbc.pc(), 0x1ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00BA
        gbc.setState(0xeb04, 0xd6ea, 0xc0e0, 0x8c4f, 0xf1fe, 0x5bd6, 0x0, 0x0);
        gbc.writeMem(0xeb04, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd6ea);
        EXPECT(gbc.pc(), 0xeb06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb04), 0xcb);
        EXPECT(gbc.readMem(0xeb05), 0x9a);
        // CB 9A 00BB
        gbc.setState(0x62ca, 0xfed9, 0xccf0, 0x2ed1, 0x321, 0xd4e5, 0x0, 0x1);
        gbc.writeMem(0x62ca, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfed9);
        EXPECT(gbc.pc(), 0x62cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00BC
        gbc.setState(0x46e7, 0x6415, 0x58e0, 0xd1ba, 0x2b44, 0xab04, 0x0, 0x0);
        gbc.writeMem(0x46e7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6415);
        EXPECT(gbc.pc(), 0x46e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00BD
        gbc.setState(0x8765, 0x547d, 0xd3c0, 0x1a25, 0x63b, 0x48d5, 0x1, 0x1);
        gbc.writeMem(0x8765, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x547d);
        EXPECT(gbc.pc(), 0x8767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8765), 0xcb);
        EXPECT(gbc.readMem(0x8766), 0x9a);
        // CB 9A 00BE
        gbc.setState(0xb20e, 0x1563, 0x3f50, 0xe41, 0x84e9, 0xf00d, 0x0, 0x1);
        gbc.writeMem(0xb20e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1563);
        EXPECT(gbc.pc(), 0xb210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb20e), 0xcb);
        EXPECT(gbc.readMem(0xb20f), 0x9a);
        // CB 9A 00BF
        gbc.setState(0x35f3, 0x9e18, 0x9e30, 0xe2cc, 0xd45c, 0x5cc2, 0x1, 0x0);
        gbc.writeMem(0x35f3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9e18);
        EXPECT(gbc.pc(), 0x35f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00C0
        gbc.setState(0xc176, 0xd096, 0xf200, 0xefb9, 0x6695, 0xc6a8, 0x0, 0x1);
        gbc.writeMem(0xc176, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd096);
        EXPECT(gbc.pc(), 0xc178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc176), 0xcb);
        EXPECT(gbc.readMem(0xc177), 0x9a);
        // CB 9A 00C1
        gbc.setState(0x3ab2, 0xb7b2, 0x9fe0, 0xe5eb, 0x6c34, 0x51e6, 0x1, 0x0);
        gbc.writeMem(0x3ab2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb7b2);
        EXPECT(gbc.pc(), 0x3ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00C2
        gbc.setState(0x1743, 0x1028, 0xc390, 0x23f8, 0x5b29, 0xda00, 0x1, 0x0);
        gbc.writeMem(0x1743, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1028);
        EXPECT(gbc.pc(), 0x1745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00C3
        gbc.setState(0x5136, 0x94ec, 0xe520, 0x20cd, 0x64fd, 0x1739, 0x0, 0x1);
        gbc.writeMem(0x5136, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x94ec);
        EXPECT(gbc.pc(), 0x5138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00C4
        gbc.setState(0xd15f, 0xa9fb, 0x55e0, 0xc0b, 0x7104, 0xa0f3, 0x1, 0x1);
        gbc.writeMem(0xd15f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa9fb);
        EXPECT(gbc.pc(), 0xd161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15f), 0xcb);
        EXPECT(gbc.readMem(0xd160), 0x9a);
        // CB 9A 00C5
        gbc.setState(0xaa26, 0x58ef, 0x9e20, 0x9fa2, 0x82e0, 0xd754, 0x1, 0x0);
        gbc.writeMem(0xaa26, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x58ef);
        EXPECT(gbc.pc(), 0xaa28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa26), 0xcb);
        EXPECT(gbc.readMem(0xaa27), 0x9a);
        // CB 9A 00C6
        gbc.setState(0x75a2, 0x2c12, 0x36e0, 0xbab5, 0x56a8, 0xe5df, 0x1, 0x0);
        gbc.writeMem(0x75a2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2c12);
        EXPECT(gbc.pc(), 0x75a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00C7
        gbc.setState(0x1041, 0x508d, 0x1960, 0x789c, 0xe26b, 0x36a6, 0x0, 0x0);
        gbc.writeMem(0x1041, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x508d);
        EXPECT(gbc.pc(), 0x1043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00C8
        gbc.setState(0xb32c, 0x399c, 0x4fb0, 0x1b40, 0x70fb, 0x8d55, 0x0, 0x0);
        gbc.writeMem(0xb32c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x399c);
        EXPECT(gbc.pc(), 0xb32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32c), 0xcb);
        EXPECT(gbc.readMem(0xb32d), 0x9a);
        // CB 9A 00C9
        gbc.setState(0x6a3d, 0x146b, 0x3a10, 0x4d6, 0x5c5f, 0x6558, 0x0, 0x1);
        gbc.writeMem(0x6a3d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x146b);
        EXPECT(gbc.pc(), 0x6a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00CA
        gbc.setState(0x5ec4, 0xa7a9, 0x5c0, 0xefa, 0x6a7e, 0x6368, 0x0, 0x1);
        gbc.writeMem(0x5ec4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa7a9);
        EXPECT(gbc.pc(), 0x5ec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00CB
        gbc.setState(0x51d3, 0x4a38, 0xfe0, 0xa8a2, 0x1bb3, 0xc962, 0x0, 0x0);
        gbc.writeMem(0x51d3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4a38);
        EXPECT(gbc.pc(), 0x51d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00CC
        gbc.setState(0x5d2d, 0xc1ce, 0x890, 0x45e0, 0x9ab0, 0xfc47, 0x0, 0x0);
        gbc.writeMem(0x5d2d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc1ce);
        EXPECT(gbc.pc(), 0x5d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00CD
        gbc.setState(0x1ce2, 0xf0a, 0xc150, 0xd5e0, 0x9f2a, 0xe3c4, 0x1, 0x1);
        gbc.writeMem(0x1ce2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf0a);
        EXPECT(gbc.pc(), 0x1ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00CE
        gbc.setState(0xe7e8, 0xe99, 0x7ca0, 0x665, 0xf3ee, 0xc1e0, 0x0, 0x0);
        gbc.writeMem(0xe7e8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe99);
        EXPECT(gbc.pc(), 0xe7ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e8), 0xcb);
        EXPECT(gbc.readMem(0xe7e9), 0x9a);
        // CB 9A 00CF
        gbc.setState(0xb26d, 0x8fc, 0x1830, 0x4c13, 0x7be0, 0x7181, 0x0, 0x0);
        gbc.writeMem(0xb26d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8fc);
        EXPECT(gbc.pc(), 0xb26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb26d), 0xcb);
        EXPECT(gbc.readMem(0xb26e), 0x9a);
        // CB 9A 00D0
        gbc.setState(0x1f2d, 0x501e, 0xa440, 0x654c, 0x63b6, 0xce78, 0x0, 0x0);
        gbc.writeMem(0x1f2d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x501e);
        EXPECT(gbc.pc(), 0x1f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00D1
        gbc.setState(0x2f2b, 0xf83c, 0x9190, 0x861f, 0xe0ab, 0x9ae6, 0x1, 0x1);
        gbc.writeMem(0x2f2b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf83c);
        EXPECT(gbc.pc(), 0x2f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00D2
        gbc.setState(0x9082, 0x838d, 0x2a70, 0xd771, 0x7ed5, 0x214d, 0x1, 0x1);
        gbc.writeMem(0x9082, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x838d);
        EXPECT(gbc.pc(), 0x9084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9082), 0xcb);
        EXPECT(gbc.readMem(0x9083), 0x9a);
        // CB 9A 00D3
        gbc.setState(0xb78a, 0x771b, 0x6040, 0x1991, 0x5391, 0x2680, 0x0, 0x0);
        gbc.writeMem(0xb78a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x771b);
        EXPECT(gbc.pc(), 0xb78c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb78a), 0xcb);
        EXPECT(gbc.readMem(0xb78b), 0x9a);
        // CB 9A 00D4
        gbc.setState(0xa049, 0xee5a, 0x7300, 0x1c6d, 0x9758, 0xbe9c, 0x1, 0x1);
        gbc.writeMem(0xa049, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xee5a);
        EXPECT(gbc.pc(), 0xa04b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa049), 0xcb);
        EXPECT(gbc.readMem(0xa04a), 0x9a);
        // CB 9A 00D5
        gbc.setState(0xce29, 0x95f4, 0xdc0, 0x2f63, 0xe5dd, 0xcfb7, 0x0, 0x1);
        gbc.writeMem(0xce29, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x95f4);
        EXPECT(gbc.pc(), 0xce2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce29), 0xcb);
        EXPECT(gbc.readMem(0xce2a), 0x9a);
        // CB 9A 00D6
        gbc.setState(0x1bf3, 0xfd5c, 0x5bb0, 0x7a4d, 0x7387, 0x7b20, 0x0, 0x1);
        gbc.writeMem(0x1bf3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfd5c);
        EXPECT(gbc.pc(), 0x1bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00D7
        gbc.setState(0x31c1, 0xaf93, 0xeaa0, 0x6fc6, 0x3c1d, 0x75bf, 0x0, 0x1);
        gbc.writeMem(0x31c1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xaf93);
        EXPECT(gbc.pc(), 0x31c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00D8
        gbc.setState(0x71ac, 0xa658, 0x9a30, 0x89b8, 0xa7e2, 0x682e, 0x0, 0x1);
        gbc.writeMem(0x71ac, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa658);
        EXPECT(gbc.pc(), 0x71ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00D9
        gbc.setState(0xaebc, 0xdab3, 0xa840, 0xb50e, 0x67ca, 0xdbf0, 0x1, 0x1);
        gbc.writeMem(0xaebc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xdab3);
        EXPECT(gbc.pc(), 0xaebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaebc), 0xcb);
        EXPECT(gbc.readMem(0xaebd), 0x9a);
        // CB 9A 00DA
        gbc.setState(0xa6f9, 0xe77d, 0xc7c0, 0xeb7f, 0x7a23, 0xb0ec, 0x0, 0x0);
        gbc.writeMem(0xa6f9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe77d);
        EXPECT(gbc.pc(), 0xa6fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f9), 0xcb);
        EXPECT(gbc.readMem(0xa6fa), 0x9a);
        // CB 9A 00DB
        gbc.setState(0x67e8, 0x1feb, 0x2070, 0xb048, 0xed58, 0xb098, 0x1, 0x0);
        gbc.writeMem(0x67e8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1feb);
        EXPECT(gbc.pc(), 0x67ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00DD
        gbc.setState(0x3316, 0xecc2, 0x2500, 0x4722, 0x3de1, 0x1537, 0x1, 0x1);
        gbc.writeMem(0x3316, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xecc2);
        EXPECT(gbc.pc(), 0x3318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00DE
        gbc.setState(0x1b3f, 0xbcda, 0xee0, 0xf38e, 0xe835, 0x4aa2, 0x1, 0x1);
        gbc.writeMem(0x1b3f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbcda);
        EXPECT(gbc.pc(), 0x1b41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00DF
        gbc.setState(0x20ff, 0x1508, 0xdef0, 0x65bd, 0xde8a, 0xc968, 0x0, 0x1);
        gbc.writeMem(0x20ff, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1508);
        EXPECT(gbc.pc(), 0x2101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00E0
        gbc.setState(0xe4a, 0xe2da, 0x49b0, 0xc6e1, 0x8028, 0xabbe, 0x0, 0x0);
        gbc.writeMem(0xe4a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe2da);
        EXPECT(gbc.pc(), 0xe4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00E1
        gbc.setState(0xa882, 0x9251, 0xa8c0, 0xc6a5, 0xcef4, 0x6982, 0x0, 0x1);
        gbc.writeMem(0xa882, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9251);
        EXPECT(gbc.pc(), 0xa884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa882), 0xcb);
        EXPECT(gbc.readMem(0xa883), 0x9a);
        // CB 9A 00E2
        gbc.setState(0x5322, 0xae64, 0xca10, 0xa5b5, 0xf7ba, 0x619d, 0x0, 0x1);
        gbc.writeMem(0x5322, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xae64);
        EXPECT(gbc.pc(), 0x5324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00E3
        gbc.setState(0xcd66, 0x8beb, 0xd670, 0x98c5, 0x5db2, 0xe21a, 0x1, 0x0);
        gbc.writeMem(0xcd66, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8beb);
        EXPECT(gbc.pc(), 0xcd68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd66), 0xcb);
        EXPECT(gbc.readMem(0xcd67), 0x9a);
        // CB 9A 00E4
        gbc.setState(0xa311, 0x1058, 0x40b0, 0x60c, 0x58de, 0x86ff, 0x1, 0x1);
        gbc.writeMem(0xa311, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1058);
        EXPECT(gbc.pc(), 0xa313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa311), 0xcb);
        EXPECT(gbc.readMem(0xa312), 0x9a);
        // CB 9A 00E5
        gbc.setState(0x3826, 0xbb4d, 0xfd70, 0xd36, 0x4d9a, 0x9d3f, 0x1, 0x0);
        gbc.writeMem(0x3826, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbb4d);
        EXPECT(gbc.pc(), 0x3828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00E6
        gbc.setState(0x1296, 0xd2aa, 0xd010, 0xd954, 0xa517, 0xbef5, 0x1, 0x1);
        gbc.writeMem(0x1296, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd2aa);
        EXPECT(gbc.pc(), 0x1298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00E7
        gbc.setState(0xbe6c, 0xed87, 0x2000, 0xbf5d, 0x3135, 0x64db, 0x0, 0x1);
        gbc.writeMem(0xbe6c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xed87);
        EXPECT(gbc.pc(), 0xbe6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe6c), 0xcb);
        EXPECT(gbc.readMem(0xbe6d), 0x9a);
        // CB 9A 00E8
        gbc.setState(0x22c0, 0xac6c, 0x37c0, 0xa403, 0xc47e, 0x8f72, 0x0, 0x0);
        gbc.writeMem(0x22c0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xac6c);
        EXPECT(gbc.pc(), 0x22c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00E9
        gbc.setState(0xa245, 0xe2e, 0x2ca0, 0xb279, 0x91d6, 0x6c14, 0x1, 0x1);
        gbc.writeMem(0xa245, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe2e);
        EXPECT(gbc.pc(), 0xa247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa245), 0xcb);
        EXPECT(gbc.readMem(0xa246), 0x9a);
        // CB 9A 00EA
        gbc.setState(0x7f47, 0xa4fe, 0xb3d0, 0xc5b1, 0x8432, 0x33e6, 0x1, 0x1);
        gbc.writeMem(0x7f47, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa4fe);
        EXPECT(gbc.pc(), 0x7f49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00EB
        gbc.setState(0x4467, 0x8121, 0x4f0, 0xb748, 0x86b, 0x726b, 0x0, 0x1);
        gbc.writeMem(0x4467, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8121);
        EXPECT(gbc.pc(), 0x4469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00EC
        gbc.setState(0xae48, 0x2df5, 0xc780, 0xa160, 0x8848, 0xa9b7, 0x0, 0x1);
        gbc.writeMem(0xae48, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2df5);
        EXPECT(gbc.pc(), 0xae4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae48), 0xcb);
        EXPECT(gbc.readMem(0xae49), 0x9a);
        // CB 9A 00ED
        gbc.setState(0xbb20, 0x51c4, 0x8500, 0x413a, 0x7622, 0xa73c, 0x1, 0x1);
        gbc.writeMem(0xbb20, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x51c4);
        EXPECT(gbc.pc(), 0xbb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb20), 0xcb);
        EXPECT(gbc.readMem(0xbb21), 0x9a);
        // CB 9A 00EE
        gbc.setState(0x70c6, 0x9f8a, 0x2520, 0x4e00, 0x9765, 0x6817, 0x1, 0x1);
        gbc.writeMem(0x70c6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9f8a);
        EXPECT(gbc.pc(), 0x70c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00EF
        gbc.setState(0xafe0, 0x14c5, 0x2060, 0x6958, 0x7366, 0x872f, 0x1, 0x1);
        gbc.writeMem(0xafe0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x14c5);
        EXPECT(gbc.pc(), 0xafe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe0), 0xcb);
        EXPECT(gbc.readMem(0xafe1), 0x9a);
        // CB 9A 00F0
        gbc.setState(0x3835, 0x733e, 0xf370, 0x810, 0x28e6, 0x44c8, 0x0, 0x0);
        gbc.writeMem(0x3835, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x733e);
        EXPECT(gbc.pc(), 0x3837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00F1
        gbc.setState(0xc798, 0x60b1, 0x2930, 0xc3b0, 0x3974, 0xb948, 0x0, 0x0);
        gbc.writeMem(0xc798, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x60b1);
        EXPECT(gbc.pc(), 0xc79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc798), 0xcb);
        EXPECT(gbc.readMem(0xc799), 0x9a);
        // CB 9A 00F2
        gbc.setState(0x3443, 0xe288, 0xcac0, 0x5a63, 0x7353, 0xbe3b, 0x1, 0x1);
        gbc.writeMem(0x3443, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe288);
        EXPECT(gbc.pc(), 0x3445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00F3
        gbc.setState(0x7025, 0x4387, 0x78e0, 0x4948, 0xfde1, 0x5ae8, 0x1, 0x0);
        gbc.writeMem(0x7025, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4387);
        EXPECT(gbc.pc(), 0x7027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00F4
        gbc.setState(0x1450, 0x3250, 0x1a60, 0x973c, 0x7303, 0x1317, 0x1, 0x1);
        gbc.writeMem(0x1450, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3250);
        EXPECT(gbc.pc(), 0x1452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00F5
        gbc.setState(0x6f05, 0xb036, 0xc540, 0xeea4, 0x4439, 0x8b6c, 0x0, 0x0);
        gbc.writeMem(0x6f05, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb036);
        EXPECT(gbc.pc(), 0x6f07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00F6
        gbc.setState(0x6871, 0xd39c, 0x9180, 0xee4c, 0x55c1, 0xfa25, 0x0, 0x0);
        gbc.writeMem(0x6871, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd39c);
        EXPECT(gbc.pc(), 0x6873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00F7
        gbc.setState(0x65b, 0xe38b, 0x3b60, 0x3963, 0xfd30, 0x8f8f, 0x1, 0x0);
        gbc.writeMem(0x65b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe38b);
        EXPECT(gbc.pc(), 0x65d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00F8
        gbc.setState(0x1a0a, 0x3dde, 0xe880, 0x781e, 0x21f4, 0xfb8e, 0x1, 0x0);
        gbc.writeMem(0x1a0a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3dde);
        EXPECT(gbc.pc(), 0x1a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00F9
        gbc.setState(0xdb24, 0x741a, 0x1140, 0x1cbd, 0x5ee9, 0x4db4, 0x1, 0x0);
        gbc.writeMem(0xdb24, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x741a);
        EXPECT(gbc.pc(), 0xdb26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb24), 0xcb);
        EXPECT(gbc.readMem(0xdb25), 0x9a);
        // CB 9A 00FA
        gbc.setState(0xda8a, 0xebee, 0xbce0, 0x85c8, 0x6741, 0x5d0c, 0x0, 0x1);
        gbc.writeMem(0xda8a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xebee);
        EXPECT(gbc.pc(), 0xda8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8a), 0xcb);
        EXPECT(gbc.readMem(0xda8b), 0x9a);
        // CB 9A 00FB
        gbc.setState(0x5029, 0xb538, 0xd360, 0x932f, 0x541d, 0x1a52, 0x1, 0x0);
        gbc.writeMem(0x5029, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb538);
        EXPECT(gbc.pc(), 0x502b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 00FC
        gbc.setState(0x8334, 0xc7d4, 0xfa20, 0xce8, 0x8049, 0x3418, 0x0, 0x0);
        gbc.writeMem(0x8334, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc7d4);
        EXPECT(gbc.pc(), 0x8336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8334), 0xcb);
        EXPECT(gbc.readMem(0x8335), 0x9a);
        // CB 9A 00FD
        gbc.setState(0x66eb, 0x841, 0xca90, 0x1893, 0x8686, 0x6445, 0x1, 0x1);
        gbc.writeMem(0x66eb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x841);
        EXPECT(gbc.pc(), 0x66ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 00FE
        gbc.setState(0x9874, 0xd3e3, 0x9840, 0xfdf5, 0x181a, 0x1a75, 0x1, 0x0);
        gbc.writeMem(0x9874, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd3e3);
        EXPECT(gbc.pc(), 0x9876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9874), 0xcb);
        EXPECT(gbc.readMem(0x9875), 0x9a);
        // CB 9A 00FF
        gbc.setState(0x65cc, 0x2f7c, 0x5550, 0x8610, 0xea, 0xc6d2, 0x0, 0x0);
        gbc.writeMem(0x65cc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2f7c);
        EXPECT(gbc.pc(), 0x65ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0100
        gbc.setState(0x8535, 0x7a08, 0xb90, 0xa995, 0xdcca, 0xb6ac, 0x1, 0x0);
        gbc.writeMem(0x8535, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7a08);
        EXPECT(gbc.pc(), 0x8537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8535), 0xcb);
        EXPECT(gbc.readMem(0x8536), 0x9a);
        // CB 9A 0101
        gbc.setState(0xbb45, 0x6cba, 0x26a0, 0x6ad8, 0xf9f9, 0x1745, 0x1, 0x1);
        gbc.writeMem(0xbb45, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6cba);
        EXPECT(gbc.pc(), 0xbb47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb45), 0xcb);
        EXPECT(gbc.readMem(0xbb46), 0x9a);
        // CB 9A 0102
        gbc.setState(0x59f6, 0xf305, 0xb8d0, 0x4ef2, 0x3f88, 0x2e15, 0x1, 0x0);
        gbc.writeMem(0x59f6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf305);
        EXPECT(gbc.pc(), 0x59f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0103
        gbc.setState(0x8065, 0xd86f, 0x52e0, 0x32fd, 0xb795, 0x7be8, 0x1, 0x1);
        gbc.writeMem(0x8065, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd86f);
        EXPECT(gbc.pc(), 0x8067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8065), 0xcb);
        EXPECT(gbc.readMem(0x8066), 0x9a);
        // CB 9A 0104
        gbc.setState(0xbcd3, 0x1300, 0x2e20, 0x7aa0, 0xdf0c, 0x59af, 0x1, 0x1);
        gbc.writeMem(0xbcd3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1300);
        EXPECT(gbc.pc(), 0xbcd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd3), 0xcb);
        EXPECT(gbc.readMem(0xbcd4), 0x9a);
        // CB 9A 0105
        gbc.setState(0xb810, 0x8df8, 0xb0, 0x927c, 0x4233, 0x428e, 0x0, 0x1);
        gbc.writeMem(0xb810, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8df8);
        EXPECT(gbc.pc(), 0xb812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb810), 0xcb);
        EXPECT(gbc.readMem(0xb811), 0x9a);
        // CB 9A 0106
        gbc.setState(0x6ede, 0xb283, 0x26f0, 0x6289, 0x3912, 0x2e07, 0x0, 0x0);
        gbc.writeMem(0x6ede, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb283);
        EXPECT(gbc.pc(), 0x6ee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0107
        gbc.setState(0xdef2, 0x2d62, 0x7ef0, 0xe644, 0xb745, 0xe6f, 0x0, 0x1);
        gbc.writeMem(0xdef2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2d62);
        EXPECT(gbc.pc(), 0xdef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef2), 0xcb);
        EXPECT(gbc.readMem(0xdef3), 0x9a);
        // CB 9A 0108
        gbc.setState(0xddee, 0x3f36, 0x6000, 0xf342, 0xd685, 0x9253, 0x0, 0x1);
        gbc.writeMem(0xddee, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3f36);
        EXPECT(gbc.pc(), 0xddf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddee), 0xcb);
        EXPECT(gbc.readMem(0xddef), 0x9a);
        // CB 9A 0109
        gbc.setState(0xa6c0, 0x132e, 0x7680, 0x7cef, 0x3649, 0x3d25, 0x1, 0x1);
        gbc.writeMem(0xa6c0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x132e);
        EXPECT(gbc.pc(), 0xa6c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c0), 0xcb);
        EXPECT(gbc.readMem(0xa6c1), 0x9a);
        // CB 9A 010A
        gbc.setState(0x4845, 0x5bcf, 0x9bb0, 0x1f2e, 0xc39c, 0xf3c7, 0x1, 0x0);
        gbc.writeMem(0x4845, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5bcf);
        EXPECT(gbc.pc(), 0x4847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 010B
        gbc.setState(0xa235, 0xfea0, 0x46b0, 0x5c42, 0xdd67, 0xb2d, 0x1, 0x1);
        gbc.writeMem(0xa235, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfea0);
        EXPECT(gbc.pc(), 0xa237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa235), 0xcb);
        EXPECT(gbc.readMem(0xa236), 0x9a);
        // CB 9A 010C
        gbc.setState(0x5781, 0x5e13, 0x8480, 0x2c00, 0x6cd2, 0xce8b, 0x1, 0x0);
        gbc.writeMem(0x5781, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5e13);
        EXPECT(gbc.pc(), 0x5783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 010D
        gbc.setState(0x1124, 0xeebe, 0xdfa0, 0x4131, 0x79c0, 0xb8fc, 0x1, 0x1);
        gbc.writeMem(0x1124, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xeebe);
        EXPECT(gbc.pc(), 0x1126);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 010E
        gbc.setState(0xaa28, 0xb805, 0xf740, 0x425b, 0xd16a, 0x8265, 0x0, 0x0);
        gbc.writeMem(0xaa28, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb805);
        EXPECT(gbc.pc(), 0xaa2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa28), 0xcb);
        EXPECT(gbc.readMem(0xaa29), 0x9a);
        // CB 9A 010F
        gbc.setState(0x1323, 0x619f, 0xece0, 0x6d7d, 0x164a, 0x673e, 0x0, 0x0);
        gbc.writeMem(0x1323, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x619f);
        EXPECT(gbc.pc(), 0x1325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0110
        gbc.setState(0xba1d, 0x1a12, 0x7170, 0x17a, 0xcf3e, 0xd4d8, 0x1, 0x1);
        gbc.writeMem(0xba1d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1a12);
        EXPECT(gbc.pc(), 0xba1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1d), 0xcb);
        EXPECT(gbc.readMem(0xba1e), 0x9a);
        // CB 9A 0111
        gbc.setState(0x6f0c, 0x8354, 0xb740, 0x25d9, 0xb81b, 0x6faf, 0x1, 0x1);
        gbc.writeMem(0x6f0c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8354);
        EXPECT(gbc.pc(), 0x6f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0112
        gbc.setState(0xe72b, 0x8ac1, 0xd400, 0x8752, 0x84d, 0xf6e6, 0x1, 0x0);
        gbc.writeMem(0xe72b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8ac1);
        EXPECT(gbc.pc(), 0xe72d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe72b), 0xcb);
        EXPECT(gbc.readMem(0xe72c), 0x9a);
        // CB 9A 0113
        gbc.setState(0xe768, 0xf3ff, 0xf950, 0x7cd1, 0x6d5d, 0xde57, 0x0, 0x1);
        gbc.writeMem(0xe768, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf3ff);
        EXPECT(gbc.pc(), 0xe76a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe768), 0xcb);
        EXPECT(gbc.readMem(0xe769), 0x9a);
        // CB 9A 0114
        gbc.setState(0x4f97, 0xe0aa, 0xfdc0, 0x3fd7, 0x107e, 0x7f1f, 0x1, 0x1);
        gbc.writeMem(0x4f97, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe0aa);
        EXPECT(gbc.pc(), 0x4f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0115
        gbc.setState(0xa683, 0xba4d, 0xabc0, 0xaeb0, 0x99ba, 0x98f9, 0x1, 0x1);
        gbc.writeMem(0xa683, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xba4d);
        EXPECT(gbc.pc(), 0xa685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa683), 0xcb);
        EXPECT(gbc.readMem(0xa684), 0x9a);
        // CB 9A 0116
        gbc.setState(0xddff, 0xe40b, 0x7ea0, 0x7953, 0xda5a, 0xd65a, 0x0, 0x0);
        gbc.writeMem(0xddff, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe40b);
        EXPECT(gbc.pc(), 0xde01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddff), 0xcb);
        EXPECT(gbc.readMem(0xde00), 0x9a);
        // CB 9A 0117
        gbc.setState(0x9f4d, 0xe00, 0x1fd0, 0xd028, 0x12a7, 0x7297, 0x0, 0x1);
        gbc.writeMem(0x9f4d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe00);
        EXPECT(gbc.pc(), 0x9f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f4d), 0xcb);
        EXPECT(gbc.readMem(0x9f4e), 0x9a);
        // CB 9A 0118
        gbc.setState(0x504c, 0x3cdb, 0x9280, 0x5688, 0x561c, 0x705, 0x0, 0x0);
        gbc.writeMem(0x504c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3cdb);
        EXPECT(gbc.pc(), 0x504e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0119
        gbc.setState(0xe52a, 0xfa83, 0xb650, 0xce0, 0x7ea, 0x9a86, 0x0, 0x1);
        gbc.writeMem(0xe52a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xfa83);
        EXPECT(gbc.pc(), 0xe52c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe52a), 0xcb);
        EXPECT(gbc.readMem(0xe52b), 0x9a);
        // CB 9A 011A
        gbc.setState(0xecde, 0xe1aa, 0xf430, 0x92fd, 0xd121, 0x3972, 0x1, 0x1);
        gbc.writeMem(0xecde, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe1aa);
        EXPECT(gbc.pc(), 0xece0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecde), 0xcb);
        EXPECT(gbc.readMem(0xecdf), 0x9a);
        // CB 9A 011B
        gbc.setState(0xe316, 0x9e5b, 0x10d0, 0x9197, 0x80c9, 0x4a9a, 0x0, 0x1);
        gbc.writeMem(0xe316, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9e5b);
        EXPECT(gbc.pc(), 0xe318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe316), 0xcb);
        EXPECT(gbc.readMem(0xe317), 0x9a);
        // CB 9A 011C
        gbc.setState(0x9d8e, 0x3329, 0x3ea0, 0xa6c7, 0x298b, 0xdbd3, 0x0, 0x0);
        gbc.writeMem(0x9d8e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3329);
        EXPECT(gbc.pc(), 0x9d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d8e), 0xcb);
        EXPECT(gbc.readMem(0x9d8f), 0x9a);
        // CB 9A 011D
        gbc.setState(0xd69a, 0x620c, 0xffc0, 0xe972, 0x91b1, 0xea27, 0x0, 0x1);
        gbc.writeMem(0xd69a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x620c);
        EXPECT(gbc.pc(), 0xd69c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd69a), 0xcb);
        EXPECT(gbc.readMem(0xd69b), 0x9a);
        // CB 9A 011E
        gbc.setState(0x5b31, 0x44cd, 0x1470, 0xc819, 0xfd47, 0xf344, 0x1, 0x1);
        gbc.writeMem(0x5b31, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x44cd);
        EXPECT(gbc.pc(), 0x5b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 011F
        gbc.setState(0xc48b, 0xebe6, 0x2f80, 0x5d5d, 0x4a51, 0xda09, 0x1, 0x1);
        gbc.writeMem(0xc48b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xebe6);
        EXPECT(gbc.pc(), 0xc48d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48b), 0xcb);
        EXPECT(gbc.readMem(0xc48c), 0x9a);
        // CB 9A 0120
        gbc.setState(0x8900, 0x4285, 0xbb0, 0x5c81, 0x303c, 0xfbdc, 0x0, 0x1);
        gbc.writeMem(0x8900, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4285);
        EXPECT(gbc.pc(), 0x8902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8900), 0xcb);
        EXPECT(gbc.readMem(0x8901), 0x9a);
        // CB 9A 0121
        gbc.setState(0xe3fa, 0xb0a5, 0xb1d0, 0xe490, 0xc721, 0x4594, 0x1, 0x0);
        gbc.writeMem(0xe3fa, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb0a5);
        EXPECT(gbc.pc(), 0xe3fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fa), 0xcb);
        EXPECT(gbc.readMem(0xe3fb), 0x9a);
        // CB 9A 0122
        gbc.setState(0xc3cb, 0x5b8e, 0x86f0, 0x65ad, 0x659c, 0xe185, 0x0, 0x1);
        gbc.writeMem(0xc3cb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5b8e);
        EXPECT(gbc.pc(), 0xc3cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3cb), 0xcb);
        EXPECT(gbc.readMem(0xc3cc), 0x9a);
        // CB 9A 0123
        gbc.setState(0xa6ec, 0x431, 0x42d0, 0x978e, 0x9e1, 0x5c19, 0x0, 0x0);
        gbc.writeMem(0xa6ec, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x431);
        EXPECT(gbc.pc(), 0xa6ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ec), 0xcb);
        EXPECT(gbc.readMem(0xa6ed), 0x9a);
        // CB 9A 0124
        gbc.setState(0xceab, 0x822b, 0x72c0, 0x39dd, 0x27ad, 0x66e5, 0x1, 0x0);
        gbc.writeMem(0xceab, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x822b);
        EXPECT(gbc.pc(), 0xcead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceab), 0xcb);
        EXPECT(gbc.readMem(0xceac), 0x9a);
        // CB 9A 0125
        gbc.setState(0x5edf, 0x9034, 0xfb00, 0x62d, 0x8658, 0x202c, 0x1, 0x0);
        gbc.writeMem(0x5edf, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9034);
        EXPECT(gbc.pc(), 0x5ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0126
        gbc.setState(0x3f6d, 0x4ddb, 0x71d0, 0xf861, 0x9c37, 0xeda7, 0x1, 0x0);
        gbc.writeMem(0x3f6d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4ddb);
        EXPECT(gbc.pc(), 0x3f6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0127
        gbc.setState(0x21e5, 0x8b60, 0x9150, 0x68ac, 0xca6d, 0x5e7, 0x0, 0x1);
        gbc.writeMem(0x21e5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8b60);
        EXPECT(gbc.pc(), 0x21e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0128
        gbc.setState(0x25cc, 0x2e10, 0x9f20, 0x7a7e, 0x6cea, 0xb85a, 0x1, 0x0);
        gbc.writeMem(0x25cc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2e10);
        EXPECT(gbc.pc(), 0x25ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0129
        gbc.setState(0x2742, 0x3f77, 0xd750, 0xc7ad, 0x323f, 0xdaba, 0x1, 0x1);
        gbc.writeMem(0x2742, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3f77);
        EXPECT(gbc.pc(), 0x2744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 012A
        gbc.setState(0x8113, 0xb6e7, 0xcf0, 0x787e, 0x266e, 0x8aa8, 0x0, 0x0);
        gbc.writeMem(0x8113, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb6e7);
        EXPECT(gbc.pc(), 0x8115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8113), 0xcb);
        EXPECT(gbc.readMem(0x8114), 0x9a);
        // CB 9A 012B
        gbc.setState(0x429d, 0xc103, 0x19e0, 0x7cb, 0x3174, 0x3ea4, 0x1, 0x1);
        gbc.writeMem(0x429d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc103);
        EXPECT(gbc.pc(), 0x429f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 012C
        gbc.setState(0x6f9c, 0xe8dc, 0xd210, 0x2d6c, 0x5e07, 0xfd99, 0x1, 0x0);
        gbc.writeMem(0x6f9c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe8dc);
        EXPECT(gbc.pc(), 0x6f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 012D
        gbc.setState(0x124, 0xd925, 0xe280, 0x22e, 0x163f, 0x73f7, 0x1, 0x0);
        gbc.writeMem(0x124, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd925);
        EXPECT(gbc.pc(), 0x126);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 012E
        gbc.setState(0x7954, 0xc7a3, 0x2c00, 0xa11b, 0xca4a, 0x1379, 0x1, 0x0);
        gbc.writeMem(0x7954, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc7a3);
        EXPECT(gbc.pc(), 0x7956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 012F
        gbc.setState(0xe59b, 0x3170, 0xf5b0, 0x11d, 0x58c6, 0xfe50, 0x0, 0x0);
        gbc.writeMem(0xe59b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3170);
        EXPECT(gbc.pc(), 0xe59d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe59b), 0xcb);
        EXPECT(gbc.readMem(0xe59c), 0x9a);
        // CB 9A 0130
        gbc.setState(0x1442, 0xa766, 0x30c0, 0xbe7b, 0xcfb3, 0x8069, 0x1, 0x0);
        gbc.writeMem(0x1442, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa766);
        EXPECT(gbc.pc(), 0x1444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0131
        gbc.setState(0xccb6, 0xf357, 0x5300, 0xeb6a, 0x8223, 0x6c77, 0x0, 0x1);
        gbc.writeMem(0xccb6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf357);
        EXPECT(gbc.pc(), 0xccb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb6), 0xcb);
        EXPECT(gbc.readMem(0xccb7), 0x9a);
        // CB 9A 0132
        gbc.setState(0xad0d, 0x93e2, 0x1bd0, 0x4f47, 0x207c, 0xc2c3, 0x1, 0x0);
        gbc.writeMem(0xad0d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x93e2);
        EXPECT(gbc.pc(), 0xad0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad0d), 0xcb);
        EXPECT(gbc.readMem(0xad0e), 0x9a);
        // CB 9A 0133
        gbc.setState(0xd729, 0x103c, 0x3200, 0xde0d, 0x215f, 0x2041, 0x1, 0x1);
        gbc.writeMem(0xd729, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x103c);
        EXPECT(gbc.pc(), 0xd72b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd729), 0xcb);
        EXPECT(gbc.readMem(0xd72a), 0x9a);
        // CB 9A 0134
        gbc.setState(0x9547, 0xb18f, 0x4020, 0x209e, 0x8218, 0x8862, 0x1, 0x0);
        gbc.writeMem(0x9547, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb18f);
        EXPECT(gbc.pc(), 0x9549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9547), 0xcb);
        EXPECT(gbc.readMem(0x9548), 0x9a);
        // CB 9A 0135
        gbc.setState(0x13b0, 0x519a, 0x2c30, 0xed0c, 0xba96, 0x6767, 0x1, 0x1);
        gbc.writeMem(0x13b0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x519a);
        EXPECT(gbc.pc(), 0x13b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0136
        gbc.setState(0x15f1, 0x8f25, 0xff40, 0xc301, 0x7eae, 0x5986, 0x0, 0x1);
        gbc.writeMem(0x15f1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8f25);
        EXPECT(gbc.pc(), 0x15f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0137
        gbc.setState(0x4ba2, 0x9a0, 0x8090, 0xc5e2, 0xfe4c, 0x55ba, 0x0, 0x0);
        gbc.writeMem(0x4ba2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9a0);
        EXPECT(gbc.pc(), 0x4ba4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0138
        gbc.setState(0xd7bd, 0x3ae9, 0xd400, 0x4fd7, 0x2e4e, 0xbb3b, 0x1, 0x1);
        gbc.writeMem(0xd7bd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3ae9);
        EXPECT(gbc.pc(), 0xd7bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7bd), 0xcb);
        EXPECT(gbc.readMem(0xd7be), 0x9a);
        // CB 9A 0139
        gbc.setState(0x1fee, 0x75e0, 0xca40, 0x7acb, 0x45af, 0x658e, 0x0, 0x0);
        gbc.writeMem(0x1fee, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x75e0);
        EXPECT(gbc.pc(), 0x1ff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 013A
        gbc.setState(0x741d, 0x6a76, 0x8070, 0x47d4, 0xdaf5, 0xbddd, 0x0, 0x0);
        gbc.writeMem(0x741d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6a76);
        EXPECT(gbc.pc(), 0x741f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 013B
        gbc.setState(0xba8b, 0xd01c, 0x67d0, 0xf271, 0x7b63, 0x8a2, 0x1, 0x0);
        gbc.writeMem(0xba8b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd01c);
        EXPECT(gbc.pc(), 0xba8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8b), 0xcb);
        EXPECT(gbc.readMem(0xba8c), 0x9a);
        // CB 9A 013C
        gbc.setState(0xb8f3, 0xf046, 0x4f90, 0xb728, 0xb2ed, 0x42c6, 0x1, 0x0);
        gbc.writeMem(0xb8f3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf046);
        EXPECT(gbc.pc(), 0xb8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f3), 0xcb);
        EXPECT(gbc.readMem(0xb8f4), 0x9a);
        // CB 9A 013D
        gbc.setState(0xb8e8, 0xc74b, 0xf190, 0x999a, 0xa8cc, 0xbcb6, 0x1, 0x0);
        gbc.writeMem(0xb8e8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc74b);
        EXPECT(gbc.pc(), 0xb8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8e8), 0xcb);
        EXPECT(gbc.readMem(0xb8e9), 0x9a);
        // CB 9A 013E
        gbc.setState(0xe00d, 0x862c, 0x620, 0x10e9, 0xcf9f, 0x3150, 0x1, 0x1);
        gbc.writeMem(0xe00d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x862c);
        EXPECT(gbc.pc(), 0xe00f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe00d), 0xcb);
        EXPECT(gbc.readMem(0xe00e), 0x9a);
        // CB 9A 013F
        gbc.setState(0x60be, 0x606e, 0xc930, 0xccf4, 0x8738, 0xe577, 0x0, 0x0);
        gbc.writeMem(0x60be, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x606e);
        EXPECT(gbc.pc(), 0x60c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0140
        gbc.setState(0x3832, 0x4e0a, 0xa4c0, 0x6d50, 0x36e8, 0x53dc, 0x1, 0x1);
        gbc.writeMem(0x3832, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4e0a);
        EXPECT(gbc.pc(), 0x3834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0141
        gbc.setState(0x3f70, 0x9074, 0x4260, 0x8dfa, 0xa5b0, 0x947d, 0x1, 0x1);
        gbc.writeMem(0x3f70, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9074);
        EXPECT(gbc.pc(), 0x3f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0142
        gbc.setState(0xeab9, 0xcd13, 0x13b0, 0xf96a, 0x9aa7, 0x132, 0x0, 0x1);
        gbc.writeMem(0xeab9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcd13);
        EXPECT(gbc.pc(), 0xeabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab9), 0xcb);
        EXPECT(gbc.readMem(0xeaba), 0x9a);
        // CB 9A 0143
        gbc.setState(0xd875, 0xe419, 0xa80, 0xa3ab, 0x4aea, 0xf8a2, 0x0, 0x1);
        gbc.writeMem(0xd875, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe419);
        EXPECT(gbc.pc(), 0xd877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd875), 0xcb);
        EXPECT(gbc.readMem(0xd876), 0x9a);
        // CB 9A 0144
        gbc.setState(0x4810, 0x9b5e, 0xf300, 0xc4ce, 0xa644, 0x2041, 0x1, 0x1);
        gbc.writeMem(0x4810, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9b5e);
        EXPECT(gbc.pc(), 0x4812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0145
        gbc.setState(0x1de4, 0x5a7f, 0xf710, 0xc7d8, 0x395e, 0x97e, 0x0, 0x0);
        gbc.writeMem(0x1de4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5a7f);
        EXPECT(gbc.pc(), 0x1de6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0146
        gbc.setState(0xd0d, 0x9f21, 0x29a0, 0x2672, 0x16f1, 0x5570, 0x0, 0x1);
        gbc.writeMem(0xd0d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9f21);
        EXPECT(gbc.pc(), 0xd0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0147
        gbc.setState(0x2fc5, 0x102f, 0xd890, 0xbb4c, 0x2dd1, 0x5a96, 0x1, 0x1);
        gbc.writeMem(0x2fc5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x102f);
        EXPECT(gbc.pc(), 0x2fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0148
        gbc.setState(0x6289, 0xc8, 0xc1b0, 0x6f9f, 0xc9da, 0x950d, 0x1, 0x0);
        gbc.writeMem(0x6289, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc8);
        EXPECT(gbc.pc(), 0x628b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0149
        gbc.setState(0x4947, 0x854d, 0x2fb0, 0x77a5, 0x31cc, 0xe4a3, 0x1, 0x0);
        gbc.writeMem(0x4947, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x854d);
        EXPECT(gbc.pc(), 0x4949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 014A
        gbc.setState(0xcd5b, 0x4578, 0xdf80, 0xb1ad, 0xfe39, 0x6c7c, 0x0, 0x1);
        gbc.writeMem(0xcd5b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4578);
        EXPECT(gbc.pc(), 0xcd5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5b), 0xcb);
        EXPECT(gbc.readMem(0xcd5c), 0x9a);
        // CB 9A 014B
        gbc.setState(0xd3b8, 0xde9e, 0x9030, 0xd412, 0xa2d9, 0x22fc, 0x0, 0x0);
        gbc.writeMem(0xd3b8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xde9e);
        EXPECT(gbc.pc(), 0xd3ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b8), 0xcb);
        EXPECT(gbc.readMem(0xd3b9), 0x9a);
        // CB 9A 014C
        gbc.setState(0x7c5e, 0x2aa8, 0x3be0, 0x1627, 0xc515, 0x6e89, 0x0, 0x1);
        gbc.writeMem(0x7c5e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2aa8);
        EXPECT(gbc.pc(), 0x7c60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 014E
        gbc.setState(0x8363, 0xad36, 0xc480, 0xad51, 0xf9b0, 0x4c83, 0x1, 0x0);
        gbc.writeMem(0x8363, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xad36);
        EXPECT(gbc.pc(), 0x8365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8363), 0xcb);
        EXPECT(gbc.readMem(0x8364), 0x9a);
        // CB 9A 0150
        gbc.setState(0x2459, 0x44d7, 0x3cb0, 0x5c30, 0x4f19, 0xd08d, 0x0, 0x1);
        gbc.writeMem(0x2459, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x44d7);
        EXPECT(gbc.pc(), 0x245b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0151
        gbc.setState(0x1b71, 0xdb4d, 0x8740, 0x1562, 0xa8, 0x20f9, 0x1, 0x0);
        gbc.writeMem(0x1b71, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdb4d);
        EXPECT(gbc.pc(), 0x1b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0152
        gbc.setState(0x12d1, 0xb352, 0xe430, 0x5825, 0xc553, 0x3597, 0x0, 0x0);
        gbc.writeMem(0x12d1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb352);
        EXPECT(gbc.pc(), 0x12d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0153
        gbc.setState(0x77f7, 0x432, 0x5f40, 0x678f, 0x2152, 0x7318, 0x0, 0x1);
        gbc.writeMem(0x77f7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x432);
        EXPECT(gbc.pc(), 0x77f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0154
        gbc.setState(0xc45a, 0xdb82, 0x1d60, 0x81d0, 0xee65, 0xfd22, 0x0, 0x1);
        gbc.writeMem(0xc45a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xdb82);
        EXPECT(gbc.pc(), 0xc45c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45a), 0xcb);
        EXPECT(gbc.readMem(0xc45b), 0x9a);
        // CB 9A 0155
        gbc.setState(0xcb3e, 0x9a5c, 0x5a80, 0xb37b, 0x3300, 0xfa59, 0x0, 0x1);
        gbc.writeMem(0xcb3e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9a5c);
        EXPECT(gbc.pc(), 0xcb40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3e), 0xcb);
        EXPECT(gbc.readMem(0xcb3f), 0x9a);
        // CB 9A 0156
        gbc.setState(0xa04b, 0x10fc, 0x5b30, 0x879f, 0x1541, 0xfc66, 0x0, 0x1);
        gbc.writeMem(0xa04b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x10fc);
        EXPECT(gbc.pc(), 0xa04d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa04b), 0xcb);
        EXPECT(gbc.readMem(0xa04c), 0x9a);
        // CB 9A 0157
        gbc.setState(0xd35c, 0xa3e, 0x1c50, 0x8388, 0x9dae, 0x11b, 0x1, 0x1);
        gbc.writeMem(0xd35c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa3e);
        EXPECT(gbc.pc(), 0xd35e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd35c), 0xcb);
        EXPECT(gbc.readMem(0xd35d), 0x9a);
        // CB 9A 0158
        gbc.setState(0x129d, 0xbdcb, 0xfc70, 0x6995, 0xe17d, 0x9033, 0x0, 0x0);
        gbc.writeMem(0x129d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbdcb);
        EXPECT(gbc.pc(), 0x129f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0159
        gbc.setState(0xa01a, 0x4d1f, 0x2d80, 0x20a5, 0xc48e, 0xf76c, 0x1, 0x0);
        gbc.writeMem(0xa01a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4d1f);
        EXPECT(gbc.pc(), 0xa01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa01a), 0xcb);
        EXPECT(gbc.readMem(0xa01b), 0x9a);
        // CB 9A 015A
        gbc.setState(0xef48, 0x89b3, 0x6730, 0xbf69, 0xd9f1, 0x2857, 0x1, 0x1);
        gbc.writeMem(0xef48, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x89b3);
        EXPECT(gbc.pc(), 0xef4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef48), 0xcb);
        EXPECT(gbc.readMem(0xef49), 0x9a);
        // CB 9A 015B
        gbc.setState(0x2e47, 0x9f37, 0x1d40, 0x22a6, 0x2beb, 0x22e, 0x1, 0x1);
        gbc.writeMem(0x2e47, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9f37);
        EXPECT(gbc.pc(), 0x2e49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 015C
        gbc.setState(0x45e0, 0x7d5a, 0xd300, 0x3fd5, 0xbca, 0xd1a0, 0x1, 0x1);
        gbc.writeMem(0x45e0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7d5a);
        EXPECT(gbc.pc(), 0x45e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 015D
        gbc.setState(0xcade, 0x44a7, 0x2ce0, 0xbc7d, 0x5630, 0x9057, 0x0, 0x1);
        gbc.writeMem(0xcade, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x44a7);
        EXPECT(gbc.pc(), 0xcae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcade), 0xcb);
        EXPECT(gbc.readMem(0xcadf), 0x9a);
        // CB 9A 015E
        gbc.setState(0x9453, 0xeb82, 0xc3d0, 0x88b9, 0x6c3b, 0xd91d, 0x1, 0x0);
        gbc.writeMem(0x9453, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xeb82);
        EXPECT(gbc.pc(), 0x9455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9453), 0xcb);
        EXPECT(gbc.readMem(0x9454), 0x9a);
        // CB 9A 015F
        gbc.setState(0x3b2c, 0x7724, 0x38b0, 0x964a, 0x30ce, 0x72c3, 0x1, 0x0);
        gbc.writeMem(0x3b2c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7724);
        EXPECT(gbc.pc(), 0x3b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0160
        gbc.setState(0xc2da, 0xdea0, 0x7140, 0xb1e3, 0x443a, 0xbec4, 0x0, 0x0);
        gbc.writeMem(0xc2da, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdea0);
        EXPECT(gbc.pc(), 0xc2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2da), 0xcb);
        EXPECT(gbc.readMem(0xc2db), 0x9a);
        // CB 9A 0162
        gbc.setState(0x3eb5, 0xdce8, 0xc0f0, 0xb6e, 0x3193, 0xf89, 0x1, 0x1);
        gbc.writeMem(0x3eb5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdce8);
        EXPECT(gbc.pc(), 0x3eb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0163
        gbc.setState(0xaef9, 0x614f, 0xd220, 0xfb1b, 0x69e6, 0xefe9, 0x1, 0x1);
        gbc.writeMem(0xaef9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x614f);
        EXPECT(gbc.pc(), 0xaefb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef9), 0xcb);
        EXPECT(gbc.readMem(0xaefa), 0x9a);
        // CB 9A 0164
        gbc.setState(0xc631, 0xce75, 0x5a80, 0xbc8f, 0x56b6, 0x62c9, 0x0, 0x1);
        gbc.writeMem(0xc631, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xce75);
        EXPECT(gbc.pc(), 0xc633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc631), 0xcb);
        EXPECT(gbc.readMem(0xc632), 0x9a);
        // CB 9A 0165
        gbc.setState(0x5f8d, 0xe4cb, 0x5890, 0x8b3d, 0xf268, 0x1e84, 0x1, 0x0);
        gbc.writeMem(0x5f8d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe4cb);
        EXPECT(gbc.pc(), 0x5f8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0166
        gbc.setState(0xe172, 0xb38e, 0xa990, 0x9cbf, 0x3328, 0x3990, 0x1, 0x0);
        gbc.writeMem(0xe172, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb38e);
        EXPECT(gbc.pc(), 0xe174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe172), 0xcb);
        EXPECT(gbc.readMem(0xe173), 0x9a);
        // CB 9A 0167
        gbc.setState(0xe676, 0x6b54, 0x4930, 0xba6b, 0xaac3, 0x9145, 0x0, 0x1);
        gbc.writeMem(0xe676, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6b54);
        EXPECT(gbc.pc(), 0xe678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe676), 0xcb);
        EXPECT(gbc.readMem(0xe677), 0x9a);
        // CB 9A 0168
        gbc.setState(0x244f, 0xc717, 0xd180, 0xf266, 0x5473, 0x5e3d, 0x1, 0x0);
        gbc.writeMem(0x244f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc717);
        EXPECT(gbc.pc(), 0x2451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0169
        gbc.setState(0xc0ac, 0x45ed, 0xee10, 0x66db, 0xc78e, 0xc5ea, 0x1, 0x0);
        gbc.writeMem(0xc0ac, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x45ed);
        EXPECT(gbc.pc(), 0xc0ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ac), 0xcb);
        EXPECT(gbc.readMem(0xc0ad), 0x9a);
        // CB 9A 016A
        gbc.setState(0xcecf, 0xdda9, 0xe0b0, 0x67f6, 0xd813, 0x261d, 0x1, 0x1);
        gbc.writeMem(0xcecf, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdda9);
        EXPECT(gbc.pc(), 0xced1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcecf), 0xcb);
        EXPECT(gbc.readMem(0xced0), 0x9a);
        // CB 9A 016B
        gbc.setState(0xecac, 0x709f, 0xfe20, 0x73c2, 0xdac6, 0x3cb1, 0x1, 0x1);
        gbc.writeMem(0xecac, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x709f);
        EXPECT(gbc.pc(), 0xecae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecac), 0xcb);
        EXPECT(gbc.readMem(0xecad), 0x9a);
        // CB 9A 016C
        gbc.setState(0x319f, 0x674e, 0xe360, 0xfa22, 0xbdb7, 0x18ba, 0x0, 0x1);
        gbc.writeMem(0x319f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x674e);
        EXPECT(gbc.pc(), 0x31a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 016D
        gbc.setState(0x9390, 0x8e8b, 0x6ed0, 0xf714, 0x2ebe, 0x1bb, 0x1, 0x0);
        gbc.writeMem(0x9390, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8e8b);
        EXPECT(gbc.pc(), 0x9392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9390), 0xcb);
        EXPECT(gbc.readMem(0x9391), 0x9a);
        // CB 9A 016E
        gbc.setState(0xb1a, 0x2690, 0x6920, 0x6394, 0xe28e, 0x5dcb, 0x0, 0x1);
        gbc.writeMem(0xb1a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2690);
        EXPECT(gbc.pc(), 0xb1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 016F
        gbc.setState(0x89ba, 0xe91b, 0xb1f0, 0x61eb, 0x57d6, 0x2d52, 0x1, 0x0);
        gbc.writeMem(0x89ba, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe91b);
        EXPECT(gbc.pc(), 0x89bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ba), 0xcb);
        EXPECT(gbc.readMem(0x89bb), 0x9a);
        // CB 9A 0171
        gbc.setState(0x74c0, 0x8209, 0x86d0, 0x5d71, 0xcf75, 0xb179, 0x1, 0x0);
        gbc.writeMem(0x74c0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8209);
        EXPECT(gbc.pc(), 0x74c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0172
        gbc.setState(0xd348, 0x2b8a, 0x77f0, 0x85cc, 0x7a3c, 0xf992, 0x1, 0x0);
        gbc.writeMem(0xd348, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2b8a);
        EXPECT(gbc.pc(), 0xd34a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd348), 0xcb);
        EXPECT(gbc.readMem(0xd349), 0x9a);
        // CB 9A 0173
        gbc.setState(0x688c, 0x674a, 0x1150, 0x8319, 0xf0de, 0xfa38, 0x0, 0x0);
        gbc.writeMem(0x688c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x674a);
        EXPECT(gbc.pc(), 0x688e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0174
        gbc.setState(0x65a3, 0x9768, 0xdb30, 0xc8b6, 0x9466, 0x9ced, 0x0, 0x1);
        gbc.writeMem(0x65a3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9768);
        EXPECT(gbc.pc(), 0x65a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0175
        gbc.setState(0x361d, 0xc721, 0xff50, 0x8559, 0xae07, 0x7920, 0x1, 0x0);
        gbc.writeMem(0x361d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc721);
        EXPECT(gbc.pc(), 0x361f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0176
        gbc.setState(0xdf19, 0x3ef7, 0xd0b0, 0x773, 0x177, 0x6c96, 0x1, 0x1);
        gbc.writeMem(0xdf19, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3ef7);
        EXPECT(gbc.pc(), 0xdf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf19), 0xcb);
        EXPECT(gbc.readMem(0xdf1a), 0x9a);
        // CB 9A 0177
        gbc.setState(0x7ada, 0xab8c, 0x3e00, 0x7ac5, 0x3e17, 0xa15e, 0x0, 0x0);
        gbc.writeMem(0x7ada, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xab8c);
        EXPECT(gbc.pc(), 0x7adc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0178
        gbc.setState(0x332c, 0xfa09, 0xacc0, 0xcbb7, 0xc671, 0x83ac, 0x1, 0x0);
        gbc.writeMem(0x332c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfa09);
        EXPECT(gbc.pc(), 0x332e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0179
        gbc.setState(0xd8a, 0x9a1d, 0x35b0, 0xe5c, 0x822d, 0xe8db, 0x0, 0x1);
        gbc.writeMem(0xd8a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9a1d);
        EXPECT(gbc.pc(), 0xd8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 017A
        gbc.setState(0x4d00, 0x8d5d, 0x58a0, 0xdd90, 0xf6c0, 0x33be, 0x0, 0x1);
        gbc.writeMem(0x4d00, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8d5d);
        EXPECT(gbc.pc(), 0x4d02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 017B
        gbc.setState(0x2ed4, 0x75a7, 0x24b0, 0xa5aa, 0x8d10, 0xed1, 0x1, 0x0);
        gbc.writeMem(0x2ed4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x75a7);
        EXPECT(gbc.pc(), 0x2ed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 017D
        gbc.setState(0x383f, 0x7376, 0x4700, 0x70bf, 0x2937, 0x116, 0x0, 0x0);
        gbc.writeMem(0x383f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7376);
        EXPECT(gbc.pc(), 0x3841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 017E
        gbc.setState(0x1d43, 0x7ca7, 0x79a0, 0xaea1, 0xa5ca, 0xc4a9, 0x1, 0x1);
        gbc.writeMem(0x1d43, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7ca7);
        EXPECT(gbc.pc(), 0x1d45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 017F
        gbc.setState(0x4c49, 0x7ba1, 0xc130, 0xe085, 0x1573, 0xe8cf, 0x0, 0x1);
        gbc.writeMem(0x4c49, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7ba1);
        EXPECT(gbc.pc(), 0x4c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0180
        gbc.setState(0x8da4, 0xd991, 0x62f0, 0x454c, 0x2916, 0x9df7, 0x0, 0x0);
        gbc.writeMem(0x8da4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd991);
        EXPECT(gbc.pc(), 0x8da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da4), 0xcb);
        EXPECT(gbc.readMem(0x8da5), 0x9a);
        // CB 9A 0181
        gbc.setState(0xd1dd, 0x9f14, 0xe280, 0xd45, 0x6dd6, 0x420d, 0x0, 0x1);
        gbc.writeMem(0xd1dd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9f14);
        EXPECT(gbc.pc(), 0xd1df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1dd), 0xcb);
        EXPECT(gbc.readMem(0xd1de), 0x9a);
        // CB 9A 0182
        gbc.setState(0x111c, 0x8d42, 0xb340, 0xf209, 0x6e36, 0xec35, 0x0, 0x1);
        gbc.writeMem(0x111c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8d42);
        EXPECT(gbc.pc(), 0x111e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0183
        gbc.setState(0x724b, 0x3cdb, 0xd9b0, 0x6693, 0xbf78, 0x47c6, 0x1, 0x0);
        gbc.writeMem(0x724b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3cdb);
        EXPECT(gbc.pc(), 0x724d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0184
        gbc.setState(0x6153, 0x27f3, 0xd3d0, 0x2023, 0x28e2, 0x12f3, 0x0, 0x0);
        gbc.writeMem(0x6153, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x27f3);
        EXPECT(gbc.pc(), 0x6155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0186
        gbc.setState(0xb163, 0x50bf, 0x9460, 0x2f26, 0x6b1a, 0x288b, 0x0, 0x1);
        gbc.writeMem(0xb163, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x50bf);
        EXPECT(gbc.pc(), 0xb165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb163), 0xcb);
        EXPECT(gbc.readMem(0xb164), 0x9a);
        // CB 9A 0187
        gbc.setState(0xd9e6, 0x3f71, 0xef20, 0xcdee, 0x2894, 0xfc95, 0x0, 0x1);
        gbc.writeMem(0xd9e6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3f71);
        EXPECT(gbc.pc(), 0xd9e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e6), 0xcb);
        EXPECT(gbc.readMem(0xd9e7), 0x9a);
        // CB 9A 0188
        gbc.setState(0x1676, 0x6baf, 0x7fc0, 0x5487, 0xf107, 0x3d6c, 0x0, 0x1);
        gbc.writeMem(0x1676, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6baf);
        EXPECT(gbc.pc(), 0x1678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 018A
        gbc.setState(0xab4f, 0x52bb, 0x7ea0, 0xee36, 0x4db9, 0x5f70, 0x0, 0x1);
        gbc.writeMem(0xab4f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x52bb);
        EXPECT(gbc.pc(), 0xab51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab4f), 0xcb);
        EXPECT(gbc.readMem(0xab50), 0x9a);
        // CB 9A 018B
        gbc.setState(0x2176, 0xddf8, 0xa800, 0x3b, 0x651d, 0x1b95, 0x0, 0x1);
        gbc.writeMem(0x2176, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xddf8);
        EXPECT(gbc.pc(), 0x2178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 018C
        gbc.setState(0xb2c4, 0xf14b, 0x3150, 0xa3ba, 0x1144, 0x7ed8, 0x1, 0x0);
        gbc.writeMem(0xb2c4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf14b);
        EXPECT(gbc.pc(), 0xb2c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c4), 0xcb);
        EXPECT(gbc.readMem(0xb2c5), 0x9a);
        // CB 9A 018D
        gbc.setState(0xecbf, 0x9c, 0x1500, 0x5357, 0x7a39, 0x17c8, 0x0, 0x1);
        gbc.writeMem(0xecbf, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9c);
        EXPECT(gbc.pc(), 0xecc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbf), 0xcb);
        EXPECT(gbc.readMem(0xecc0), 0x9a);
        // CB 9A 018E
        gbc.setState(0x9ad2, 0x173d, 0xa800, 0x299f, 0x2f89, 0xa9b4, 0x0, 0x0);
        gbc.writeMem(0x9ad2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x173d);
        EXPECT(gbc.pc(), 0x9ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad2), 0xcb);
        EXPECT(gbc.readMem(0x9ad3), 0x9a);
        // CB 9A 018F
        gbc.setState(0x46f6, 0x5564, 0x7a20, 0xa039, 0x3cb2, 0xdc54, 0x0, 0x1);
        gbc.writeMem(0x46f6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5564);
        EXPECT(gbc.pc(), 0x46f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0190
        gbc.setState(0x3725, 0xf15d, 0xb790, 0x24b7, 0xd037, 0xd7b0, 0x0, 0x1);
        gbc.writeMem(0x3725, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf15d);
        EXPECT(gbc.pc(), 0x3727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0191
        gbc.setState(0x4bd, 0x6ee7, 0xd300, 0x95e2, 0xa3f3, 0x373c, 0x0, 0x1);
        gbc.writeMem(0x4bd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6ee7);
        EXPECT(gbc.pc(), 0x4bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0192
        gbc.setState(0x2092, 0x8348, 0xb4e0, 0xe436, 0x5f28, 0x57cd, 0x0, 0x0);
        gbc.writeMem(0x2092, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8348);
        EXPECT(gbc.pc(), 0x2094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0193
        gbc.setState(0x73d3, 0xc936, 0x3ec0, 0xa7b3, 0x5ff1, 0x1f43, 0x1, 0x0);
        gbc.writeMem(0x73d3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc936);
        EXPECT(gbc.pc(), 0x73d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0194
        gbc.setState(0xad83, 0x6ccc, 0x12c0, 0xe8e, 0x8318, 0xea1a, 0x0, 0x1);
        gbc.writeMem(0xad83, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6ccc);
        EXPECT(gbc.pc(), 0xad85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad83), 0xcb);
        EXPECT(gbc.readMem(0xad84), 0x9a);
        // CB 9A 0196
        gbc.setState(0x85d6, 0x2b0, 0xbf40, 0xa95c, 0x71f1, 0xa2af, 0x1, 0x1);
        gbc.writeMem(0x85d6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2b0);
        EXPECT(gbc.pc(), 0x85d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d6), 0xcb);
        EXPECT(gbc.readMem(0x85d7), 0x9a);
        // CB 9A 0197
        gbc.setState(0xbadd, 0x3d20, 0x5fd0, 0xfd38, 0xcf0b, 0xac62, 0x0, 0x1);
        gbc.writeMem(0xbadd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3d20);
        EXPECT(gbc.pc(), 0xbadf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbadd), 0xcb);
        EXPECT(gbc.readMem(0xbade), 0x9a);
        // CB 9A 0198
        gbc.setState(0x4a7b, 0x5f50, 0x9b0, 0xdfad, 0xc9dd, 0xdb90, 0x0, 0x1);
        gbc.writeMem(0x4a7b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5f50);
        EXPECT(gbc.pc(), 0x4a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0199
        gbc.setState(0x9fba, 0x1689, 0xbcd0, 0xc26a, 0xebb8, 0xe692, 0x1, 0x0);
        gbc.writeMem(0x9fba, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1689);
        EXPECT(gbc.pc(), 0x9fbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fba), 0xcb);
        EXPECT(gbc.readMem(0x9fbb), 0x9a);
        // CB 9A 019A
        gbc.setState(0xe3ee, 0x9cea, 0xc720, 0x8967, 0xa7d9, 0x7e66, 0x1, 0x1);
        gbc.writeMem(0xe3ee, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9cea);
        EXPECT(gbc.pc(), 0xe3f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ee), 0xcb);
        EXPECT(gbc.readMem(0xe3ef), 0x9a);
        // CB 9A 019B
        gbc.setState(0x29ad, 0x393b, 0x7b30, 0x3d0e, 0x2e86, 0x6d32, 0x1, 0x1);
        gbc.writeMem(0x29ad, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x393b);
        EXPECT(gbc.pc(), 0x29af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 019C
        gbc.setState(0xe596, 0xd2eb, 0xe7a0, 0xd420, 0xec82, 0xcce5, 0x0, 0x0);
        gbc.writeMem(0xe596, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd2eb);
        EXPECT(gbc.pc(), 0xe598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe596), 0xcb);
        EXPECT(gbc.readMem(0xe597), 0x9a);
        // CB 9A 019D
        gbc.setState(0xced3, 0xf3d4, 0x3420, 0xfe05, 0x64c0, 0xd845, 0x0, 0x0);
        gbc.writeMem(0xced3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf3d4);
        EXPECT(gbc.pc(), 0xced5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced3), 0xcb);
        EXPECT(gbc.readMem(0xced4), 0x9a);
        // CB 9A 019E
        gbc.setState(0xe874, 0x5a18, 0xc0f0, 0xe9d6, 0x8db, 0x23c0, 0x1, 0x0);
        gbc.writeMem(0xe874, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5a18);
        EXPECT(gbc.pc(), 0xe876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe874), 0xcb);
        EXPECT(gbc.readMem(0xe875), 0x9a);
        // CB 9A 019F
        gbc.setState(0x102d, 0x6173, 0x1b40, 0xc6ab, 0x1f8b, 0x93d5, 0x0, 0x1);
        gbc.writeMem(0x102d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6173);
        EXPECT(gbc.pc(), 0x102f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01A0
        gbc.setState(0xbfb8, 0xe1e9, 0xf290, 0x2eb9, 0x81d3, 0xa5f3, 0x0, 0x1);
        gbc.writeMem(0xbfb8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe1e9);
        EXPECT(gbc.pc(), 0xbfba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb8), 0xcb);
        EXPECT(gbc.readMem(0xbfb9), 0x9a);
        // CB 9A 01A1
        gbc.setState(0x5cd7, 0x8a25, 0x86e0, 0x4146, 0x2248, 0xcb02, 0x0, 0x0);
        gbc.writeMem(0x5cd7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8a25);
        EXPECT(gbc.pc(), 0x5cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01A2
        gbc.setState(0x1c8a, 0xc9b9, 0xfe90, 0x627b, 0xade4, 0x49d7, 0x0, 0x0);
        gbc.writeMem(0x1c8a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc9b9);
        EXPECT(gbc.pc(), 0x1c8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01A3
        gbc.setState(0x5d0, 0x7630, 0x7620, 0xe8c3, 0x9069, 0x5441, 0x0, 0x1);
        gbc.writeMem(0x5d0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7630);
        EXPECT(gbc.pc(), 0x5d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01A4
        gbc.setState(0xe003, 0x2b2b, 0x5150, 0x7b5d, 0x9908, 0xd602, 0x1, 0x1);
        gbc.writeMem(0xe003, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2b2b);
        EXPECT(gbc.pc(), 0xe005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe003), 0xcb);
        EXPECT(gbc.readMem(0xe004), 0x9a);
        // CB 9A 01A5
        gbc.setState(0x3e59, 0xef92, 0xe980, 0xa754, 0x265b, 0x9368, 0x0, 0x1);
        gbc.writeMem(0x3e59, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xef92);
        EXPECT(gbc.pc(), 0x3e5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01A6
        gbc.setState(0x2a5c, 0x6f1a, 0x55f0, 0x51a5, 0x6f6a, 0x7998, 0x1, 0x1);
        gbc.writeMem(0x2a5c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6f1a);
        EXPECT(gbc.pc(), 0x2a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01A7
        gbc.setState(0xba8c, 0x74f7, 0x21a0, 0xbcc2, 0x44b7, 0x71a2, 0x0, 0x0);
        gbc.writeMem(0xba8c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x74f7);
        EXPECT(gbc.pc(), 0xba8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba8c), 0xcb);
        EXPECT(gbc.readMem(0xba8d), 0x9a);
        // CB 9A 01A8
        gbc.setState(0x5d0, 0xa7fc, 0xebd0, 0x413c, 0x854, 0x609, 0x1, 0x1);
        gbc.writeMem(0x5d0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa7fc);
        EXPECT(gbc.pc(), 0x5d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01A9
        gbc.setState(0xd387, 0xc8e1, 0x6310, 0xacb3, 0xe80c, 0xd2e6, 0x1, 0x1);
        gbc.writeMem(0xd387, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc8e1);
        EXPECT(gbc.pc(), 0xd389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd387), 0xcb);
        EXPECT(gbc.readMem(0xd388), 0x9a);
        // CB 9A 01AA
        gbc.setState(0xca05, 0x205a, 0xf460, 0x589f, 0x9640, 0xacd3, 0x1, 0x1);
        gbc.writeMem(0xca05, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x205a);
        EXPECT(gbc.pc(), 0xca07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca05), 0xcb);
        EXPECT(gbc.readMem(0xca06), 0x9a);
        // CB 9A 01AB
        gbc.setState(0x9617, 0xdd74, 0x2480, 0x739d, 0x6ee, 0xd763, 0x0, 0x0);
        gbc.writeMem(0x9617, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xdd74);
        EXPECT(gbc.pc(), 0x9619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9617), 0xcb);
        EXPECT(gbc.readMem(0x9618), 0x9a);
        // CB 9A 01AC
        gbc.setState(0xc9bf, 0xf3a6, 0x7060, 0x62fa, 0x7065, 0xdae, 0x0, 0x1);
        gbc.writeMem(0xc9bf, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf3a6);
        EXPECT(gbc.pc(), 0xc9c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9bf), 0xcb);
        EXPECT(gbc.readMem(0xc9c0), 0x9a);
        // CB 9A 01AD
        gbc.setState(0xd5ef, 0x963e, 0x4ba0, 0x783f, 0xf8d3, 0xacf, 0x1, 0x0);
        gbc.writeMem(0xd5ef, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x963e);
        EXPECT(gbc.pc(), 0xd5f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ef), 0xcb);
        EXPECT(gbc.readMem(0xd5f0), 0x9a);
        // CB 9A 01AE
        gbc.setState(0x75df, 0x3d08, 0xb680, 0x38be, 0xa2fc, 0x91f3, 0x1, 0x1);
        gbc.writeMem(0x75df, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3d08);
        EXPECT(gbc.pc(), 0x75e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01AF
        gbc.setState(0x1556, 0x6922, 0x6130, 0x3d73, 0x8603, 0x5208, 0x1, 0x0);
        gbc.writeMem(0x1556, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6922);
        EXPECT(gbc.pc(), 0x1558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01B0
        gbc.setState(0x8059, 0x5b57, 0xf630, 0xb773, 0xcbe6, 0x5ec9, 0x1, 0x0);
        gbc.writeMem(0x8059, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5b57);
        EXPECT(gbc.pc(), 0x805b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8059), 0xcb);
        EXPECT(gbc.readMem(0x805a), 0x9a);
        // CB 9A 01B1
        gbc.setState(0x1d3, 0xd013, 0x29a0, 0x99d6, 0x114e, 0x8d6d, 0x1, 0x0);
        gbc.writeMem(0x1d3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd013);
        EXPECT(gbc.pc(), 0x1d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01B2
        gbc.setState(0x920a, 0x42ab, 0x5350, 0xa690, 0x4205, 0xed79, 0x0, 0x1);
        gbc.writeMem(0x920a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x42ab);
        EXPECT(gbc.pc(), 0x920c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x920a), 0xcb);
        EXPECT(gbc.readMem(0x920b), 0x9a);
        // CB 9A 01B4
        gbc.setState(0x1ffd, 0x5cc5, 0x5550, 0xce16, 0x5e94, 0x9c29, 0x0, 0x1);
        gbc.writeMem(0x1ffd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5cc5);
        EXPECT(gbc.pc(), 0x1fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01B5
        gbc.setState(0x68f4, 0xbbb, 0xb140, 0x575d, 0x2e6b, 0xd9fe, 0x0, 0x0);
        gbc.writeMem(0x68f4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbbb);
        EXPECT(gbc.pc(), 0x68f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01B6
        gbc.setState(0xafd3, 0x452f, 0xf2b0, 0x89ca, 0xf4c6, 0xbcf6, 0x1, 0x1);
        gbc.writeMem(0xafd3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x452f);
        EXPECT(gbc.pc(), 0xafd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd3), 0xcb);
        EXPECT(gbc.readMem(0xafd4), 0x9a);
        // CB 9A 01B7
        gbc.setState(0x254e, 0xb06f, 0xfb00, 0x54c2, 0x7e6b, 0xbe48, 0x0, 0x0);
        gbc.writeMem(0x254e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb06f);
        EXPECT(gbc.pc(), 0x2550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01B8
        gbc.setState(0x7d6b, 0xe959, 0x4310, 0x77c1, 0x29de, 0xd06b, 0x1, 0x0);
        gbc.writeMem(0x7d6b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe959);
        EXPECT(gbc.pc(), 0x7d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01B9
        gbc.setState(0xcc25, 0xf4d1, 0x7080, 0xd55d, 0x4891, 0xb0f3, 0x1, 0x0);
        gbc.writeMem(0xcc25, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf4d1);
        EXPECT(gbc.pc(), 0xcc27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc25), 0xcb);
        EXPECT(gbc.readMem(0xcc26), 0x9a);
        // CB 9A 01BA
        gbc.setState(0x2573, 0x5412, 0x25d0, 0x8a86, 0x2b0b, 0xb483, 0x0, 0x1);
        gbc.writeMem(0x2573, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5412);
        EXPECT(gbc.pc(), 0x2575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01BB
        gbc.setState(0x5b56, 0xf873, 0x4a60, 0x42b4, 0xbc5f, 0x5159, 0x1, 0x1);
        gbc.writeMem(0x5b56, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf873);
        EXPECT(gbc.pc(), 0x5b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01BC
        gbc.setState(0x1d9, 0xe405, 0x190, 0x368b, 0xa439, 0x5429, 0x0, 0x0);
        gbc.writeMem(0x1d9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe405);
        EXPECT(gbc.pc(), 0x1db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01BE
        gbc.setState(0xb9b0, 0xe782, 0xda00, 0xa93, 0x9942, 0x50fc, 0x0, 0x0);
        gbc.writeMem(0xb9b0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe782);
        EXPECT(gbc.pc(), 0xb9b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b0), 0xcb);
        EXPECT(gbc.readMem(0xb9b1), 0x9a);
        // CB 9A 01BF
        gbc.setState(0xc420, 0x5518, 0x60b0, 0x8c3f, 0x1479, 0x3d2a, 0x0, 0x1);
        gbc.writeMem(0xc420, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5518);
        EXPECT(gbc.pc(), 0xc422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc420), 0xcb);
        EXPECT(gbc.readMem(0xc421), 0x9a);
        // CB 9A 01C0
        gbc.setState(0x27f7, 0x84f2, 0x4b70, 0x7286, 0xf6d3, 0x1ddc, 0x1, 0x0);
        gbc.writeMem(0x27f7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x84f2);
        EXPECT(gbc.pc(), 0x27f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01C1
        gbc.setState(0xe730, 0xf915, 0x2830, 0x72aa, 0x1d5, 0x89a5, 0x1, 0x0);
        gbc.writeMem(0xe730, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf915);
        EXPECT(gbc.pc(), 0xe732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe730), 0xcb);
        EXPECT(gbc.readMem(0xe731), 0x9a);
        // CB 9A 01C2
        gbc.setState(0xee82, 0xf83b, 0xe4b0, 0x7cd5, 0xc737, 0x6afb, 0x0, 0x1);
        gbc.writeMem(0xee82, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf83b);
        EXPECT(gbc.pc(), 0xee84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee82), 0xcb);
        EXPECT(gbc.readMem(0xee83), 0x9a);
        // CB 9A 01C3
        gbc.setState(0xf89, 0xf02b, 0xb510, 0x1691, 0xb12b, 0x62e8, 0x0, 0x1);
        gbc.writeMem(0xf89, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf02b);
        EXPECT(gbc.pc(), 0xf8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01C4
        gbc.setState(0x63d7, 0x56b3, 0xd280, 0xa91c, 0xa871, 0x41e1, 0x0, 0x0);
        gbc.writeMem(0x63d7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x56b3);
        EXPECT(gbc.pc(), 0x63d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01C5
        gbc.setState(0x14b7, 0x417e, 0xee80, 0xa511, 0xfa79, 0xfb75, 0x0, 0x1);
        gbc.writeMem(0x14b7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x417e);
        EXPECT(gbc.pc(), 0x14b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01C6
        gbc.setState(0xc284, 0x5520, 0xf30, 0xd7c2, 0x3c2e, 0x71f1, 0x0, 0x1);
        gbc.writeMem(0xc284, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5520);
        EXPECT(gbc.pc(), 0xc286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc284), 0xcb);
        EXPECT(gbc.readMem(0xc285), 0x9a);
        // CB 9A 01C7
        gbc.setState(0x96b7, 0xf714, 0xcb10, 0xc90d, 0x23a4, 0x823a, 0x1, 0x0);
        gbc.writeMem(0x96b7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf714);
        EXPECT(gbc.pc(), 0x96b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b7), 0xcb);
        EXPECT(gbc.readMem(0x96b8), 0x9a);
        // CB 9A 01C8
        gbc.setState(0x227c, 0x44e3, 0xe920, 0x2ad4, 0x4220, 0xa48, 0x1, 0x0);
        gbc.writeMem(0x227c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x44e3);
        EXPECT(gbc.pc(), 0x227e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01C9
        gbc.setState(0x7468, 0x7332, 0x6850, 0xd5f1, 0xf423, 0xe905, 0x0, 0x0);
        gbc.writeMem(0x7468, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7332);
        EXPECT(gbc.pc(), 0x746a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01CA
        gbc.setState(0x7c44, 0x806c, 0x37e0, 0xc58f, 0x54e8, 0x83d7, 0x0, 0x1);
        gbc.writeMem(0x7c44, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x806c);
        EXPECT(gbc.pc(), 0x7c46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01CB
        gbc.setState(0x10a3, 0x8416, 0x66e0, 0xb8d0, 0x4bea, 0x9d29, 0x0, 0x0);
        gbc.writeMem(0x10a3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8416);
        EXPECT(gbc.pc(), 0x10a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01CC
        gbc.setState(0x3bba, 0x4fc3, 0x8680, 0x49a8, 0x1085, 0x2684, 0x1, 0x1);
        gbc.writeMem(0x3bba, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4fc3);
        EXPECT(gbc.pc(), 0x3bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01CD
        gbc.setState(0x34ab, 0xff65, 0x40f0, 0xa489, 0x2c42, 0xa7c3, 0x1, 0x1);
        gbc.writeMem(0x34ab, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xff65);
        EXPECT(gbc.pc(), 0x34ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01CE
        gbc.setState(0x9571, 0xdf01, 0xfdd0, 0x2fad, 0x11a4, 0x1797, 0x1, 0x0);
        gbc.writeMem(0x9571, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdf01);
        EXPECT(gbc.pc(), 0x9573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9571), 0xcb);
        EXPECT(gbc.readMem(0x9572), 0x9a);
        // CB 9A 01CF
        gbc.setState(0x1b28, 0x23da, 0xf9b0, 0x4fad, 0x603, 0x44a4, 0x1, 0x1);
        gbc.writeMem(0x1b28, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x23da);
        EXPECT(gbc.pc(), 0x1b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01D0
        gbc.setState(0xd6ce, 0xce, 0x3ed0, 0x2b5e, 0xd871, 0x2d2b, 0x1, 0x0);
        gbc.writeMem(0xd6ce, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xce);
        EXPECT(gbc.pc(), 0xd6d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ce), 0xcb);
        EXPECT(gbc.readMem(0xd6cf), 0x9a);
        // CB 9A 01D1
        gbc.setState(0xa1f6, 0xca09, 0xc850, 0xec92, 0x95e0, 0xa300, 0x1, 0x0);
        gbc.writeMem(0xa1f6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xca09);
        EXPECT(gbc.pc(), 0xa1f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f6), 0xcb);
        EXPECT(gbc.readMem(0xa1f7), 0x9a);
        // CB 9A 01D2
        gbc.setState(0xd9ba, 0x406e, 0x4510, 0x82bc, 0x8aa7, 0x52b7, 0x1, 0x0);
        gbc.writeMem(0xd9ba, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x406e);
        EXPECT(gbc.pc(), 0xd9bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ba), 0xcb);
        EXPECT(gbc.readMem(0xd9bb), 0x9a);
        // CB 9A 01D3
        gbc.setState(0xcadb, 0x90fc, 0x6d00, 0xd489, 0xcbca, 0x9f58, 0x0, 0x1);
        gbc.writeMem(0xcadb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x90fc);
        EXPECT(gbc.pc(), 0xcadd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcadb), 0xcb);
        EXPECT(gbc.readMem(0xcadc), 0x9a);
        // CB 9A 01D4
        gbc.setState(0xb110, 0x69b2, 0x7d10, 0x1ac0, 0x8b4a, 0x329c, 0x0, 0x1);
        gbc.writeMem(0xb110, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x69b2);
        EXPECT(gbc.pc(), 0xb112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb110), 0xcb);
        EXPECT(gbc.readMem(0xb111), 0x9a);
        // CB 9A 01D5
        gbc.setState(0xac95, 0x5330, 0xd1f0, 0x6f85, 0x76a3, 0x1e0e, 0x1, 0x0);
        gbc.writeMem(0xac95, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5330);
        EXPECT(gbc.pc(), 0xac97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac95), 0xcb);
        EXPECT(gbc.readMem(0xac96), 0x9a);
        // CB 9A 01D6
        gbc.setState(0x51cd, 0x61b3, 0x12d0, 0x1d0f, 0x5dd3, 0xfc61, 0x1, 0x0);
        gbc.writeMem(0x51cd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x61b3);
        EXPECT(gbc.pc(), 0x51cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01D7
        gbc.setState(0xc3bb, 0x90f8, 0x9350, 0x9dc7, 0x396, 0x4c71, 0x1, 0x0);
        gbc.writeMem(0xc3bb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x90f8);
        EXPECT(gbc.pc(), 0xc3bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3bb), 0xcb);
        EXPECT(gbc.readMem(0xc3bc), 0x9a);
        // CB 9A 01D8
        gbc.setState(0x4b15, 0x2604, 0x6760, 0x2896, 0x620f, 0x1e92, 0x1, 0x1);
        gbc.writeMem(0x4b15, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2604);
        EXPECT(gbc.pc(), 0x4b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01D9
        gbc.setState(0x22e9, 0x98ec, 0xa40, 0xe275, 0xa60c, 0x7f42, 0x0, 0x1);
        gbc.writeMem(0x22e9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x98ec);
        EXPECT(gbc.pc(), 0x22eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01DA
        gbc.setState(0x5e2b, 0x698a, 0xfa00, 0x9fe7, 0x5622, 0x1165, 0x0, 0x0);
        gbc.writeMem(0x5e2b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x698a);
        EXPECT(gbc.pc(), 0x5e2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01DB
        gbc.setState(0xa0f6, 0x7a7d, 0x7410, 0x3ae3, 0xdd42, 0x825, 0x1, 0x0);
        gbc.writeMem(0xa0f6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7a7d);
        EXPECT(gbc.pc(), 0xa0f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f6), 0xcb);
        EXPECT(gbc.readMem(0xa0f7), 0x9a);
        // CB 9A 01DC
        gbc.setState(0x7f33, 0xd78e, 0x7ac0, 0xee93, 0x4db4, 0x7ea1, 0x1, 0x0);
        gbc.writeMem(0x7f33, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd78e);
        EXPECT(gbc.pc(), 0x7f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01DD
        gbc.setState(0x9aae, 0x9863, 0xf240, 0x7510, 0x9bec, 0xa5f9, 0x0, 0x0);
        gbc.writeMem(0x9aae, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9863);
        EXPECT(gbc.pc(), 0x9ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aae), 0xcb);
        EXPECT(gbc.readMem(0x9aaf), 0x9a);
        // CB 9A 01DE
        gbc.setState(0xdeca, 0xdaa2, 0x6c80, 0x2f24, 0x474b, 0xbf29, 0x1, 0x1);
        gbc.writeMem(0xdeca, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdaa2);
        EXPECT(gbc.pc(), 0xdecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeca), 0xcb);
        EXPECT(gbc.readMem(0xdecb), 0x9a);
        // CB 9A 01DF
        gbc.setState(0xa508, 0xc195, 0xf180, 0x475, 0x5b6c, 0x300e, 0x0, 0x1);
        gbc.writeMem(0xa508, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc195);
        EXPECT(gbc.pc(), 0xa50a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa508), 0xcb);
        EXPECT(gbc.readMem(0xa509), 0x9a);
        // CB 9A 01E0
        gbc.setState(0x86ba, 0x51c7, 0xa6a0, 0xfcd2, 0x452f, 0x9c26, 0x0, 0x1);
        gbc.writeMem(0x86ba, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x51c7);
        EXPECT(gbc.pc(), 0x86bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ba), 0xcb);
        EXPECT(gbc.readMem(0x86bb), 0x9a);
        // CB 9A 01E1
        gbc.setState(0xd933, 0xd359, 0x7000, 0xb251, 0x2814, 0x35cb, 0x0, 0x0);
        gbc.writeMem(0xd933, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd359);
        EXPECT(gbc.pc(), 0xd935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd933), 0xcb);
        EXPECT(gbc.readMem(0xd934), 0x9a);
        // CB 9A 01E2
        gbc.setState(0xe51b, 0xed23, 0xdba0, 0x206a, 0x4986, 0xb085, 0x1, 0x0);
        gbc.writeMem(0xe51b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xed23);
        EXPECT(gbc.pc(), 0xe51d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe51b), 0xcb);
        EXPECT(gbc.readMem(0xe51c), 0x9a);
        // CB 9A 01E3
        gbc.setState(0x6ad4, 0xe6dc, 0x6e10, 0x5cc2, 0x5160, 0x2321, 0x0, 0x0);
        gbc.writeMem(0x6ad4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe6dc);
        EXPECT(gbc.pc(), 0x6ad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01E4
        gbc.setState(0xc79, 0x4c2b, 0xf0f0, 0x4b7d, 0x20d0, 0xc038, 0x1, 0x1);
        gbc.writeMem(0xc79, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4c2b);
        EXPECT(gbc.pc(), 0xc7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01E5
        gbc.setState(0x18e8, 0x9d71, 0x7a70, 0xc0c8, 0xddd9, 0x4992, 0x0, 0x0);
        gbc.writeMem(0x18e8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9d71);
        EXPECT(gbc.pc(), 0x18ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01E6
        gbc.setState(0x8e0e, 0xcd3e, 0x850, 0xa79a, 0x6f7f, 0xc4c3, 0x0, 0x0);
        gbc.writeMem(0x8e0e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xcd3e);
        EXPECT(gbc.pc(), 0x8e10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e0e), 0xcb);
        EXPECT(gbc.readMem(0x8e0f), 0x9a);
        // CB 9A 01E7
        gbc.setState(0xea80, 0xdd9a, 0xa2b0, 0x2c0f, 0x3789, 0x640d, 0x1, 0x1);
        gbc.writeMem(0xea80, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdd9a);
        EXPECT(gbc.pc(), 0xea82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea80), 0xcb);
        EXPECT(gbc.readMem(0xea81), 0x9a);
        // CB 9A 01E8
        gbc.setState(0x4b0b, 0x49d7, 0xfab0, 0xb9e7, 0x3a91, 0x6bde, 0x0, 0x1);
        gbc.writeMem(0x4b0b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x49d7);
        EXPECT(gbc.pc(), 0x4b0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01E9
        gbc.setState(0xc1ee, 0x55f6, 0x8c80, 0x6a9a, 0x1da5, 0xabea, 0x0, 0x0);
        gbc.writeMem(0xc1ee, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x55f6);
        EXPECT(gbc.pc(), 0xc1f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ee), 0xcb);
        EXPECT(gbc.readMem(0xc1ef), 0x9a);
        // CB 9A 01EA
        gbc.setState(0x19dc, 0xb24b, 0xe230, 0x9a86, 0xbfdd, 0x4b1c, 0x0, 0x0);
        gbc.writeMem(0x19dc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb24b);
        EXPECT(gbc.pc(), 0x19de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01ED
        gbc.setState(0x40cc, 0xe77c, 0xd560, 0x1151, 0xf5f6, 0xce76, 0x1, 0x0);
        gbc.writeMem(0x40cc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe77c);
        EXPECT(gbc.pc(), 0x40ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01EE
        gbc.setState(0xd156, 0xeb74, 0x7b0, 0x6d2f, 0x2c01, 0x3ab2, 0x0, 0x0);
        gbc.writeMem(0xd156, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xeb74);
        EXPECT(gbc.pc(), 0xd158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd156), 0xcb);
        EXPECT(gbc.readMem(0xd157), 0x9a);
        // CB 9A 01EF
        gbc.setState(0xb0d7, 0xc7bf, 0xcc40, 0xeb2, 0xc1d5, 0x21d8, 0x0, 0x1);
        gbc.writeMem(0xb0d7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc7bf);
        EXPECT(gbc.pc(), 0xb0d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d7), 0xcb);
        EXPECT(gbc.readMem(0xb0d8), 0x9a);
        // CB 9A 01F0
        gbc.setState(0x17cb, 0xc28f, 0xfb40, 0x274, 0x9461, 0xf207, 0x1, 0x0);
        gbc.writeMem(0x17cb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc28f);
        EXPECT(gbc.pc(), 0x17cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01F1
        gbc.setState(0xe721, 0xd1ea, 0x2010, 0x2600, 0x9b68, 0xab5d, 0x1, 0x0);
        gbc.writeMem(0xe721, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd1ea);
        EXPECT(gbc.pc(), 0xe723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe721), 0xcb);
        EXPECT(gbc.readMem(0xe722), 0x9a);
        // CB 9A 01F2
        gbc.setState(0xb4c, 0x5c91, 0x98f0, 0xa517, 0x7546, 0xcdd, 0x1, 0x1);
        gbc.writeMem(0xb4c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5c91);
        EXPECT(gbc.pc(), 0xb4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01F3
        gbc.setState(0xb42d, 0x718b, 0xc230, 0xbfff, 0x1948, 0x8d5c, 0x1, 0x1);
        gbc.writeMem(0xb42d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x718b);
        EXPECT(gbc.pc(), 0xb42f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb42d), 0xcb);
        EXPECT(gbc.readMem(0xb42e), 0x9a);
        // CB 9A 01F4
        gbc.setState(0x2a55, 0x32c0, 0x4cb0, 0x7244, 0xe1b7, 0x71d6, 0x1, 0x1);
        gbc.writeMem(0x2a55, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x32c0);
        EXPECT(gbc.pc(), 0x2a57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01F5
        gbc.setState(0xe6d7, 0x8e8f, 0x8150, 0xaec1, 0xac62, 0x4cf8, 0x1, 0x1);
        gbc.writeMem(0xe6d7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8e8f);
        EXPECT(gbc.pc(), 0xe6d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d7), 0xcb);
        EXPECT(gbc.readMem(0xe6d8), 0x9a);
        // CB 9A 01F6
        gbc.setState(0x77b1, 0x840e, 0xfdc0, 0xc270, 0x63b4, 0x1bc6, 0x1, 0x0);
        gbc.writeMem(0x77b1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x840e);
        EXPECT(gbc.pc(), 0x77b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01F7
        gbc.setState(0xdbec, 0x1134, 0x4060, 0x5958, 0x2529, 0x5259, 0x0, 0x1);
        gbc.writeMem(0xdbec, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1134);
        EXPECT(gbc.pc(), 0xdbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbec), 0xcb);
        EXPECT(gbc.readMem(0xdbed), 0x9a);
        // CB 9A 01F8
        gbc.setState(0x100d, 0xceca, 0x3a70, 0x1ea1, 0x9445, 0xd7e4, 0x0, 0x0);
        gbc.writeMem(0x100d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xceca);
        EXPECT(gbc.pc(), 0x100f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01F9
        gbc.setState(0xaf5, 0x887a, 0xa960, 0xe4d, 0xa1e1, 0x3a7b, 0x0, 0x0);
        gbc.writeMem(0xaf5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x887a);
        EXPECT(gbc.pc(), 0xaf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01FA
        gbc.setState(0xc1e2, 0x8369, 0xe790, 0xbeba, 0x445, 0xb8aa, 0x1, 0x0);
        gbc.writeMem(0xc1e2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8369);
        EXPECT(gbc.pc(), 0xc1e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e2), 0xcb);
        EXPECT(gbc.readMem(0xc1e3), 0x9a);
        // CB 9A 01FB
        gbc.setState(0x2423, 0x594f, 0x8960, 0xd5c, 0x2355, 0x435f, 0x1, 0x0);
        gbc.writeMem(0x2423, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x594f);
        EXPECT(gbc.pc(), 0x2425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 01FC
        gbc.setState(0x4bec, 0xc33e, 0x2f30, 0x92d3, 0x3278, 0x111e, 0x1, 0x1);
        gbc.writeMem(0x4bec, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc33e);
        EXPECT(gbc.pc(), 0x4bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 01FD
        gbc.setState(0xc2b9, 0xe449, 0x7110, 0x13f3, 0x5d3f, 0x62c7, 0x0, 0x1);
        gbc.writeMem(0xc2b9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe449);
        EXPECT(gbc.pc(), 0xc2bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b9), 0xcb);
        EXPECT(gbc.readMem(0xc2ba), 0x9a);
        // CB 9A 01FE
        gbc.setState(0xbe2f, 0xacd7, 0x9190, 0x8e1e, 0xb2a2, 0x8628, 0x0, 0x0);
        gbc.writeMem(0xbe2f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xacd7);
        EXPECT(gbc.pc(), 0xbe31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe2f), 0xcb);
        EXPECT(gbc.readMem(0xbe30), 0x9a);
        // CB 9A 01FF
        gbc.setState(0x7b0a, 0xbdc8, 0x5ee0, 0xde1f, 0xe8a2, 0xb674, 0x0, 0x0);
        gbc.writeMem(0x7b0a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbdc8);
        EXPECT(gbc.pc(), 0x7b0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0200
        gbc.setState(0x3b58, 0x71ab, 0x99d0, 0xde34, 0x8e89, 0x739, 0x0, 0x0);
        gbc.writeMem(0x3b58, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x71ab);
        EXPECT(gbc.pc(), 0x3b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0201
        gbc.setState(0xea25, 0xa302, 0x9e20, 0x50e4, 0xfa4d, 0x602e, 0x1, 0x1);
        gbc.writeMem(0xea25, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa302);
        EXPECT(gbc.pc(), 0xea27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea25), 0xcb);
        EXPECT(gbc.readMem(0xea26), 0x9a);
        // CB 9A 0202
        gbc.setState(0x9ccc, 0xfcc8, 0x2a00, 0x3f41, 0x26c5, 0x7d2a, 0x0, 0x1);
        gbc.writeMem(0x9ccc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfcc8);
        EXPECT(gbc.pc(), 0x9cce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ccc), 0xcb);
        EXPECT(gbc.readMem(0x9ccd), 0x9a);
        // CB 9A 0203
        gbc.setState(0x8424, 0x47, 0x8770, 0x1f21, 0xcad, 0x2bcf, 0x0, 0x1);
        gbc.writeMem(0x8424, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x47);
        EXPECT(gbc.pc(), 0x8426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8424), 0xcb);
        EXPECT(gbc.readMem(0x8425), 0x9a);
        // CB 9A 0204
        gbc.setState(0x9b4e, 0xcb7d, 0xa2f0, 0xe53e, 0x295c, 0xc1f6, 0x1, 0x1);
        gbc.writeMem(0x9b4e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xcb7d);
        EXPECT(gbc.pc(), 0x9b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4e), 0xcb);
        EXPECT(gbc.readMem(0x9b4f), 0x9a);
        // CB 9A 0205
        gbc.setState(0x1171, 0x15d5, 0xa510, 0xafd6, 0xda73, 0xbdc9, 0x1, 0x0);
        gbc.writeMem(0x1171, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x15d5);
        EXPECT(gbc.pc(), 0x1173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0206
        gbc.setState(0x6866, 0x20a3, 0x2900, 0xc49b, 0x1bba, 0x14d8, 0x1, 0x1);
        gbc.writeMem(0x6866, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x20a3);
        EXPECT(gbc.pc(), 0x6868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0207
        gbc.setState(0x7c98, 0x6c1, 0xe030, 0x127c, 0x4de1, 0xc22a, 0x0, 0x0);
        gbc.writeMem(0x7c98, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6c1);
        EXPECT(gbc.pc(), 0x7c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0208
        gbc.setState(0x33a, 0xdcf2, 0x6ca0, 0x681a, 0xa6ea, 0xce86, 0x1, 0x0);
        gbc.writeMem(0x33a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xdcf2);
        EXPECT(gbc.pc(), 0x33c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0209
        gbc.setState(0x2d45, 0xe353, 0xa720, 0x6c28, 0x74a8, 0xaace, 0x0, 0x1);
        gbc.writeMem(0x2d45, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe353);
        EXPECT(gbc.pc(), 0x2d47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 020A
        gbc.setState(0x9c57, 0x35da, 0x9b30, 0x4c94, 0x7135, 0x6791, 0x1, 0x1);
        gbc.writeMem(0x9c57, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x35da);
        EXPECT(gbc.pc(), 0x9c59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c57), 0xcb);
        EXPECT(gbc.readMem(0x9c58), 0x9a);
        // CB 9A 020C
        gbc.setState(0xccd8, 0xb2c6, 0x49f0, 0xe8fd, 0xc9f4, 0x7143, 0x0, 0x1);
        gbc.writeMem(0xccd8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb2c6);
        EXPECT(gbc.pc(), 0xccda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd8), 0xcb);
        EXPECT(gbc.readMem(0xccd9), 0x9a);
        // CB 9A 020D
        gbc.setState(0x1a1a, 0x1993, 0x2c90, 0x2621, 0x9d17, 0x4c21, 0x1, 0x0);
        gbc.writeMem(0x1a1a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1993);
        EXPECT(gbc.pc(), 0x1a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 020E
        gbc.setState(0x12e7, 0x13a3, 0x4880, 0x8ae8, 0x6158, 0xa11b, 0x0, 0x0);
        gbc.writeMem(0x12e7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x13a3);
        EXPECT(gbc.pc(), 0x12e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 020F
        gbc.setState(0x207d, 0x6120, 0x5da0, 0xd5ff, 0x850b, 0x7acd, 0x1, 0x1);
        gbc.writeMem(0x207d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6120);
        EXPECT(gbc.pc(), 0x207f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0210
        gbc.setState(0x49fb, 0x4eea, 0xfa0, 0xaf2f, 0xaf54, 0xd9e7, 0x1, 0x1);
        gbc.writeMem(0x49fb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4eea);
        EXPECT(gbc.pc(), 0x49fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0211
        gbc.setState(0xeb28, 0xa196, 0xdc30, 0xe823, 0xc55e, 0x7752, 0x0, 0x1);
        gbc.writeMem(0xeb28, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa196);
        EXPECT(gbc.pc(), 0xeb2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb28), 0xcb);
        EXPECT(gbc.readMem(0xeb29), 0x9a);
        // CB 9A 0212
        gbc.setState(0x3dcc, 0xe68f, 0xb130, 0x54a3, 0x2255, 0x101f, 0x0, 0x1);
        gbc.writeMem(0x3dcc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe68f);
        EXPECT(gbc.pc(), 0x3dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0213
        gbc.setState(0x2701, 0xb351, 0x5e50, 0xb7c5, 0x9757, 0xee0, 0x1, 0x1);
        gbc.writeMem(0x2701, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb351);
        EXPECT(gbc.pc(), 0x2703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0214
        gbc.setState(0xe4e2, 0x3a91, 0x5040, 0x488b, 0xf090, 0xc025, 0x0, 0x0);
        gbc.writeMem(0xe4e2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3a91);
        EXPECT(gbc.pc(), 0xe4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e2), 0xcb);
        EXPECT(gbc.readMem(0xe4e3), 0x9a);
        // CB 9A 0215
        gbc.setState(0x180a, 0xc5af, 0x1ac0, 0xbbbf, 0xe3d8, 0xd418, 0x0, 0x0);
        gbc.writeMem(0x180a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc5af);
        EXPECT(gbc.pc(), 0x180c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0216
        gbc.setState(0xc94d, 0x5be, 0x15a0, 0x196f, 0xab41, 0x5fbe, 0x1, 0x0);
        gbc.writeMem(0xc94d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5be);
        EXPECT(gbc.pc(), 0xc94f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc94d), 0xcb);
        EXPECT(gbc.readMem(0xc94e), 0x9a);
        // CB 9A 0218
        gbc.setState(0xcd60, 0x3e0f, 0xeab0, 0x380, 0x9f89, 0x7799, 0x0, 0x1);
        gbc.writeMem(0xcd60, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3e0f);
        EXPECT(gbc.pc(), 0xcd62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd60), 0xcb);
        EXPECT(gbc.readMem(0xcd61), 0x9a);
        // CB 9A 0219
        gbc.setState(0xefcb, 0x3566, 0x2020, 0x2af8, 0x3619, 0x42fe, 0x0, 0x1);
        gbc.writeMem(0xefcb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3566);
        EXPECT(gbc.pc(), 0xefcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefcb), 0xcb);
        EXPECT(gbc.readMem(0xefcc), 0x9a);
        // CB 9A 021A
        gbc.setState(0x30b3, 0xa126, 0x2a0, 0xb7f4, 0x770b, 0x2619, 0x0, 0x1);
        gbc.writeMem(0x30b3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa126);
        EXPECT(gbc.pc(), 0x30b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 021B
        gbc.setState(0x955f, 0x5bd7, 0xc580, 0xe4ea, 0xe560, 0xab82, 0x0, 0x0);
        gbc.writeMem(0x955f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5bd7);
        EXPECT(gbc.pc(), 0x9561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x955f), 0xcb);
        EXPECT(gbc.readMem(0x9560), 0x9a);
        // CB 9A 021C
        gbc.setState(0x1fd3, 0x2aee, 0x7660, 0xe85b, 0x6aac, 0xb664, 0x0, 0x1);
        gbc.writeMem(0x1fd3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2aee);
        EXPECT(gbc.pc(), 0x1fd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 021E
        gbc.setState(0x4844, 0xd506, 0x9e70, 0xa1c9, 0xd111, 0x5c4d, 0x1, 0x0);
        gbc.writeMem(0x4844, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd506);
        EXPECT(gbc.pc(), 0x4846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 021F
        gbc.setState(0xee3d, 0xcaf8, 0x2170, 0x6f2f, 0x14af, 0xf75f, 0x0, 0x0);
        gbc.writeMem(0xee3d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xcaf8);
        EXPECT(gbc.pc(), 0xee3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3d), 0xcb);
        EXPECT(gbc.readMem(0xee3e), 0x9a);
        // CB 9A 0220
        gbc.setState(0xc2cb, 0x3dce, 0xabf0, 0xbb35, 0xe554, 0x38fe, 0x1, 0x0);
        gbc.writeMem(0xc2cb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3dce);
        EXPECT(gbc.pc(), 0xc2cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2cb), 0xcb);
        EXPECT(gbc.readMem(0xc2cc), 0x9a);
        // CB 9A 0222
        gbc.setState(0xe2c6, 0xaf58, 0xdad0, 0xffff, 0xeeb9, 0xe6cc, 0x1, 0x0);
        gbc.writeMem(0xe2c6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xaf58);
        EXPECT(gbc.pc(), 0xe2c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c6), 0xcb);
        EXPECT(gbc.readMem(0xe2c7), 0x9a);
        // CB 9A 0223
        gbc.setState(0x2994, 0x17ba, 0x7e0, 0x62f4, 0xd63d, 0xc1fe, 0x0, 0x1);
        gbc.writeMem(0x2994, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x17ba);
        EXPECT(gbc.pc(), 0x2996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0224
        gbc.setState(0xac74, 0x1890, 0xcf80, 0x122f, 0x65c6, 0xc0aa, 0x1, 0x0);
        gbc.writeMem(0xac74, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1890);
        EXPECT(gbc.pc(), 0xac76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac74), 0xcb);
        EXPECT(gbc.readMem(0xac75), 0x9a);
        // CB 9A 0225
        gbc.setState(0xbc2e, 0x8268, 0xc760, 0x6f50, 0x2fd1, 0xe3a1, 0x1, 0x1);
        gbc.writeMem(0xbc2e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8268);
        EXPECT(gbc.pc(), 0xbc30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2e), 0xcb);
        EXPECT(gbc.readMem(0xbc2f), 0x9a);
        // CB 9A 0226
        gbc.setState(0x4128, 0x95f3, 0x3e90, 0xb82, 0x2b3d, 0x39f3, 0x0, 0x0);
        gbc.writeMem(0x4128, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x95f3);
        EXPECT(gbc.pc(), 0x412a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0227
        gbc.setState(0x950d, 0x8fc3, 0x6600, 0xfadb, 0xb1b9, 0xc808, 0x1, 0x1);
        gbc.writeMem(0x950d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8fc3);
        EXPECT(gbc.pc(), 0x950f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950d), 0xcb);
        EXPECT(gbc.readMem(0x950e), 0x9a);
        // CB 9A 0228
        gbc.setState(0x543e, 0x501d, 0x70f0, 0x22ef, 0xc7c2, 0xadde, 0x0, 0x1);
        gbc.writeMem(0x543e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x501d);
        EXPECT(gbc.pc(), 0x5440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0229
        gbc.setState(0xbd9c, 0x6b3b, 0x75c0, 0xf77d, 0xfd7f, 0x4a8b, 0x1, 0x0);
        gbc.writeMem(0xbd9c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6b3b);
        EXPECT(gbc.pc(), 0xbd9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd9c), 0xcb);
        EXPECT(gbc.readMem(0xbd9d), 0x9a);
        // CB 9A 022A
        gbc.setState(0x5499, 0x276f, 0xbd40, 0xe5fd, 0x3458, 0xe4c6, 0x1, 0x1);
        gbc.writeMem(0x5499, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x276f);
        EXPECT(gbc.pc(), 0x549b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 022B
        gbc.setState(0xc540, 0x3c05, 0xc670, 0xad32, 0x8f30, 0x9ac2, 0x1, 0x1);
        gbc.writeMem(0xc540, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3c05);
        EXPECT(gbc.pc(), 0xc542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc540), 0xcb);
        EXPECT(gbc.readMem(0xc541), 0x9a);
        // CB 9A 022C
        gbc.setState(0x9bae, 0xb454, 0x6120, 0xeb62, 0xffd4, 0xd8e7, 0x0, 0x1);
        gbc.writeMem(0x9bae, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb454);
        EXPECT(gbc.pc(), 0x9bb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bae), 0xcb);
        EXPECT(gbc.readMem(0x9baf), 0x9a);
        // CB 9A 022D
        gbc.setState(0xcf12, 0xfc13, 0xf200, 0xdd5c, 0x76cc, 0x4b40, 0x0, 0x0);
        gbc.writeMem(0xcf12, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xfc13);
        EXPECT(gbc.pc(), 0xcf14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf12), 0xcb);
        EXPECT(gbc.readMem(0xcf13), 0x9a);
        // CB 9A 022E
        gbc.setState(0xa5f1, 0xd0c3, 0x5db0, 0x8bc3, 0xd05a, 0xdffd, 0x1, 0x0);
        gbc.writeMem(0xa5f1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd0c3);
        EXPECT(gbc.pc(), 0xa5f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f1), 0xcb);
        EXPECT(gbc.readMem(0xa5f2), 0x9a);
        // CB 9A 022F
        gbc.setState(0x97aa, 0x6487, 0x3b40, 0x9588, 0xf15a, 0x1885, 0x1, 0x1);
        gbc.writeMem(0x97aa, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6487);
        EXPECT(gbc.pc(), 0x97ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97aa), 0xcb);
        EXPECT(gbc.readMem(0x97ab), 0x9a);
        // CB 9A 0230
        gbc.setState(0xabc5, 0xc3bd, 0x9110, 0x99fb, 0xbb05, 0x4250, 0x1, 0x0);
        gbc.writeMem(0xabc5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc3bd);
        EXPECT(gbc.pc(), 0xabc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc5), 0xcb);
        EXPECT(gbc.readMem(0xabc6), 0x9a);
        // CB 9A 0231
        gbc.setState(0x1e7c, 0xf373, 0x29d0, 0x9f01, 0x7d63, 0x1d74, 0x1, 0x0);
        gbc.writeMem(0x1e7c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf373);
        EXPECT(gbc.pc(), 0x1e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0232
        gbc.setState(0xc450, 0xfc46, 0x4e80, 0x9dc2, 0x696e, 0x227d, 0x0, 0x1);
        gbc.writeMem(0xc450, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfc46);
        EXPECT(gbc.pc(), 0xc452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc450), 0xcb);
        EXPECT(gbc.readMem(0xc451), 0x9a);
        // CB 9A 0233
        gbc.setState(0x7d5a, 0x16bf, 0xb1d0, 0x9527, 0x7342, 0x1a24, 0x1, 0x1);
        gbc.writeMem(0x7d5a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x16bf);
        EXPECT(gbc.pc(), 0x7d5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0234
        gbc.setState(0x3958, 0x5f98, 0x7970, 0xcdd, 0x7927, 0xaadd, 0x0, 0x1);
        gbc.writeMem(0x3958, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5f98);
        EXPECT(gbc.pc(), 0x395a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0235
        gbc.setState(0x3237, 0x6dc, 0x6d70, 0x87c5, 0x9614, 0xc9ff, 0x0, 0x1);
        gbc.writeMem(0x3237, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6dc);
        EXPECT(gbc.pc(), 0x3239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0236
        gbc.setState(0x8cb6, 0x78cd, 0xb4d0, 0xd06d, 0x3075, 0x31d4, 0x1, 0x1);
        gbc.writeMem(0x8cb6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x78cd);
        EXPECT(gbc.pc(), 0x8cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb6), 0xcb);
        EXPECT(gbc.readMem(0x8cb7), 0x9a);
        // CB 9A 0237
        gbc.setState(0xc603, 0x117, 0xa520, 0x8ce3, 0x4034, 0x1edb, 0x0, 0x1);
        gbc.writeMem(0xc603, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x117);
        EXPECT(gbc.pc(), 0xc605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc603), 0xcb);
        EXPECT(gbc.readMem(0xc604), 0x9a);
        // CB 9A 0239
        gbc.setState(0xda4, 0xf453, 0x7880, 0xb2ae, 0x42df, 0x5a33, 0x0, 0x1);
        gbc.writeMem(0xda4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf453);
        EXPECT(gbc.pc(), 0xda6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 023A
        gbc.setState(0x9494, 0xcf95, 0x830, 0x8b2e, 0xc993, 0x4175, 0x1, 0x0);
        gbc.writeMem(0x9494, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcf95);
        EXPECT(gbc.pc(), 0x9496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9494), 0xcb);
        EXPECT(gbc.readMem(0x9495), 0x9a);
        // CB 9A 023B
        gbc.setState(0xb71e, 0x4897, 0x41f0, 0x13f5, 0x6433, 0xd239, 0x0, 0x0);
        gbc.writeMem(0xb71e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4897);
        EXPECT(gbc.pc(), 0xb720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb71e), 0xcb);
        EXPECT(gbc.readMem(0xb71f), 0x9a);
        // CB 9A 023C
        gbc.setState(0x9ed7, 0x5e0c, 0x1050, 0x1677, 0x37dc, 0xa1bd, 0x0, 0x1);
        gbc.writeMem(0x9ed7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5e0c);
        EXPECT(gbc.pc(), 0x9ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ed7), 0xcb);
        EXPECT(gbc.readMem(0x9ed8), 0x9a);
        // CB 9A 023D
        gbc.setState(0x304f, 0xa6ba, 0x9260, 0x5e45, 0x5e4, 0x73dd, 0x0, 0x0);
        gbc.writeMem(0x304f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa6ba);
        EXPECT(gbc.pc(), 0x3051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 023E
        gbc.setState(0x7a03, 0xee08, 0xae10, 0x79b9, 0xbfc5, 0x1d74, 0x0, 0x0);
        gbc.writeMem(0x7a03, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xee08);
        EXPECT(gbc.pc(), 0x7a05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 023F
        gbc.setState(0xebb7, 0xc7c8, 0x1910, 0x400d, 0x66c4, 0x171a, 0x1, 0x1);
        gbc.writeMem(0xebb7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc7c8);
        EXPECT(gbc.pc(), 0xebb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb7), 0xcb);
        EXPECT(gbc.readMem(0xebb8), 0x9a);
        // CB 9A 0240
        gbc.setState(0xdb19, 0xf730, 0x9f10, 0x5413, 0x25ed, 0xd765, 0x0, 0x0);
        gbc.writeMem(0xdb19, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf730);
        EXPECT(gbc.pc(), 0xdb1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb19), 0xcb);
        EXPECT(gbc.readMem(0xdb1a), 0x9a);
        // CB 9A 0241
        gbc.setState(0x71cb, 0xb82b, 0x7520, 0xe80b, 0x291, 0x4094, 0x1, 0x0);
        gbc.writeMem(0x71cb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb82b);
        EXPECT(gbc.pc(), 0x71cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0242
        gbc.setState(0x7933, 0xd524, 0xb950, 0xc6b4, 0xa29d, 0x388a, 0x1, 0x1);
        gbc.writeMem(0x7933, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd524);
        EXPECT(gbc.pc(), 0x7935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0245
        gbc.setState(0xa016, 0x9b07, 0x1f10, 0xf960, 0x9d1b, 0x5593, 0x0, 0x1);
        gbc.writeMem(0xa016, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9b07);
        EXPECT(gbc.pc(), 0xa018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa016), 0xcb);
        EXPECT(gbc.readMem(0xa017), 0x9a);
        // CB 9A 0246
        gbc.setState(0x188b, 0x3976, 0xd1c0, 0x4db1, 0xd2fb, 0xc948, 0x1, 0x1);
        gbc.writeMem(0x188b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3976);
        EXPECT(gbc.pc(), 0x188d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0247
        gbc.setState(0x6080, 0x478e, 0x6f90, 0x75c0, 0x2121, 0x6532, 0x1, 0x0);
        gbc.writeMem(0x6080, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x478e);
        EXPECT(gbc.pc(), 0x6082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0248
        gbc.setState(0xb8fa, 0x89e1, 0x3920, 0xe1ce, 0x8541, 0xc359, 0x1, 0x0);
        gbc.writeMem(0xb8fa, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x89e1);
        EXPECT(gbc.pc(), 0xb8fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8fa), 0xcb);
        EXPECT(gbc.readMem(0xb8fb), 0x9a);
        // CB 9A 0249
        gbc.setState(0xc964, 0x69ea, 0xe5c0, 0x9ec4, 0x62cd, 0x597b, 0x0, 0x1);
        gbc.writeMem(0xc964, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x69ea);
        EXPECT(gbc.pc(), 0xc966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc964), 0xcb);
        EXPECT(gbc.readMem(0xc965), 0x9a);
        // CB 9A 024A
        gbc.setState(0xebcc, 0x487a, 0x9400, 0x5bbf, 0x6dbe, 0xea49, 0x0, 0x1);
        gbc.writeMem(0xebcc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x487a);
        EXPECT(gbc.pc(), 0xebce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebcc), 0xcb);
        EXPECT(gbc.readMem(0xebcd), 0x9a);
        // CB 9A 024C
        gbc.setState(0xa64f, 0x4abe, 0x9ac0, 0x9152, 0xa760, 0xc33b, 0x0, 0x1);
        gbc.writeMem(0xa64f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4abe);
        EXPECT(gbc.pc(), 0xa651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa64f), 0xcb);
        EXPECT(gbc.readMem(0xa650), 0x9a);
        // CB 9A 024D
        gbc.setState(0xe37, 0x174, 0x9600, 0x9d23, 0x1616, 0xaff8, 0x1, 0x1);
        gbc.writeMem(0xe37, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x174);
        EXPECT(gbc.pc(), 0xe39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 024E
        gbc.setState(0x1d73, 0xdf1a, 0xc390, 0x862e, 0x1241, 0xc0, 0x1, 0x0);
        gbc.writeMem(0x1d73, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xdf1a);
        EXPECT(gbc.pc(), 0x1d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 024F
        gbc.setState(0x9206, 0x43f3, 0xb4a0, 0xca, 0x53bf, 0xf99b, 0x1, 0x0);
        gbc.writeMem(0x9206, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x43f3);
        EXPECT(gbc.pc(), 0x9208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9206), 0xcb);
        EXPECT(gbc.readMem(0x9207), 0x9a);
        // CB 9A 0250
        gbc.setState(0x3f46, 0xe60f, 0x3600, 0xe058, 0x2025, 0x4251, 0x1, 0x0);
        gbc.writeMem(0x3f46, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe60f);
        EXPECT(gbc.pc(), 0x3f48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0252
        gbc.setState(0xcefc, 0x2f6d, 0x28e0, 0x2bd6, 0xae61, 0xd650, 0x1, 0x0);
        gbc.writeMem(0xcefc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2f6d);
        EXPECT(gbc.pc(), 0xcefe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefc), 0xcb);
        EXPECT(gbc.readMem(0xcefd), 0x9a);
        // CB 9A 0253
        gbc.setState(0xdc21, 0x65be, 0x48a0, 0xace5, 0xb025, 0xc303, 0x0, 0x1);
        gbc.writeMem(0xdc21, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x65be);
        EXPECT(gbc.pc(), 0xdc23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc21), 0xcb);
        EXPECT(gbc.readMem(0xdc22), 0x9a);
        // CB 9A 0254
        gbc.setState(0xdc13, 0xa38f, 0xf8d0, 0xea3d, 0xff0d, 0x60ce, 0x0, 0x1);
        gbc.writeMem(0xdc13, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa38f);
        EXPECT(gbc.pc(), 0xdc15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc13), 0xcb);
        EXPECT(gbc.readMem(0xdc14), 0x9a);
        // CB 9A 0255
        gbc.setState(0x86f8, 0xaa90, 0xe270, 0xdf6e, 0xc441, 0x9606, 0x1, 0x0);
        gbc.writeMem(0x86f8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xaa90);
        EXPECT(gbc.pc(), 0x86fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f8), 0xcb);
        EXPECT(gbc.readMem(0x86f9), 0x9a);
        // CB 9A 0256
        gbc.setState(0xddc5, 0x1074, 0x23a0, 0x749b, 0xd6d1, 0x711c, 0x0, 0x0);
        gbc.writeMem(0xddc5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1074);
        EXPECT(gbc.pc(), 0xddc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc5), 0xcb);
        EXPECT(gbc.readMem(0xddc6), 0x9a);
        // CB 9A 0257
        gbc.setState(0xaf4, 0x7d9a, 0x6460, 0x2c52, 0x9883, 0xece4, 0x1, 0x1);
        gbc.writeMem(0xaf4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7d9a);
        EXPECT(gbc.pc(), 0xaf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0258
        gbc.setState(0x6485, 0x5ebd, 0x6a50, 0x1c37, 0x354e, 0xa253, 0x1, 0x1);
        gbc.writeMem(0x6485, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5ebd);
        EXPECT(gbc.pc(), 0x6487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0259
        gbc.setState(0x1bd3, 0xd9ad, 0xa9c0, 0x8d15, 0x6dff, 0x9719, 0x1, 0x1);
        gbc.writeMem(0x1bd3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd9ad);
        EXPECT(gbc.pc(), 0x1bd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 025A
        gbc.setState(0xbaab, 0xb34f, 0x5da0, 0xea61, 0x786e, 0x3150, 0x1, 0x0);
        gbc.writeMem(0xbaab, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb34f);
        EXPECT(gbc.pc(), 0xbaad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaab), 0xcb);
        EXPECT(gbc.readMem(0xbaac), 0x9a);
        // CB 9A 025B
        gbc.setState(0xbbfa, 0x730e, 0x6f20, 0x569a, 0x4c92, 0x1352, 0x0, 0x0);
        gbc.writeMem(0xbbfa, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x730e);
        EXPECT(gbc.pc(), 0xbbfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbfa), 0xcb);
        EXPECT(gbc.readMem(0xbbfb), 0x9a);
        // CB 9A 025C
        gbc.setState(0xefac, 0x13d5, 0x7520, 0xa86f, 0x210, 0x6c26, 0x1, 0x0);
        gbc.writeMem(0xefac, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x13d5);
        EXPECT(gbc.pc(), 0xefae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefac), 0xcb);
        EXPECT(gbc.readMem(0xefad), 0x9a);
        // CB 9A 025D
        gbc.setState(0xa901, 0x435f, 0x1c20, 0x3571, 0x6230, 0x8b4c, 0x1, 0x1);
        gbc.writeMem(0xa901, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x435f);
        EXPECT(gbc.pc(), 0xa903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa901), 0xcb);
        EXPECT(gbc.readMem(0xa902), 0x9a);
        // CB 9A 025E
        gbc.setState(0xbf4, 0x6917, 0xbbe0, 0xefe, 0x9612, 0x3ec2, 0x0, 0x0);
        gbc.writeMem(0xbf4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6917);
        EXPECT(gbc.pc(), 0xbf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 025F
        gbc.setState(0x545f, 0x64e7, 0x7750, 0x43e1, 0x19f, 0x6c1e, 0x0, 0x0);
        gbc.writeMem(0x545f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x64e7);
        EXPECT(gbc.pc(), 0x5461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0260
        gbc.setState(0x13b8, 0x76ca, 0x1560, 0x7cea, 0x61ee, 0xaae, 0x1, 0x1);
        gbc.writeMem(0x13b8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x76ca);
        EXPECT(gbc.pc(), 0x13ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0261
        gbc.setState(0xefe8, 0x3d00, 0xf9a0, 0x3150, 0x376b, 0xd390, 0x0, 0x0);
        gbc.writeMem(0xefe8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3d00);
        EXPECT(gbc.pc(), 0xefea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe8), 0xcb);
        EXPECT(gbc.readMem(0xefe9), 0x9a);
        // CB 9A 0262
        gbc.setState(0x8649, 0xc5a5, 0xe1b0, 0xf3cb, 0x664b, 0xc61d, 0x0, 0x1);
        gbc.writeMem(0x8649, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc5a5);
        EXPECT(gbc.pc(), 0x864b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8649), 0xcb);
        EXPECT(gbc.readMem(0x864a), 0x9a);
        // CB 9A 0263
        gbc.setState(0x983, 0x8e7b, 0x2e20, 0x4f65, 0x395e, 0xbaa3, 0x0, 0x1);
        gbc.writeMem(0x983, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8e7b);
        EXPECT(gbc.pc(), 0x985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0264
        gbc.setState(0xc590, 0xd93c, 0x97b0, 0x316f, 0x674a, 0xee17, 0x0, 0x0);
        gbc.writeMem(0xc590, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd93c);
        EXPECT(gbc.pc(), 0xc592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc590), 0xcb);
        EXPECT(gbc.readMem(0xc591), 0x9a);
        // CB 9A 0265
        gbc.setState(0x91a3, 0xbb7b, 0x7570, 0x8b5a, 0xd2f2, 0x93b, 0x0, 0x1);
        gbc.writeMem(0x91a3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbb7b);
        EXPECT(gbc.pc(), 0x91a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a3), 0xcb);
        EXPECT(gbc.readMem(0x91a4), 0x9a);
        // CB 9A 0266
        gbc.setState(0x20ba, 0xc95d, 0x40e0, 0xc6f1, 0x74d1, 0xd487, 0x0, 0x0);
        gbc.writeMem(0x20ba, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc95d);
        EXPECT(gbc.pc(), 0x20bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0267
        gbc.setState(0x31fb, 0x2c68, 0x35f0, 0x1903, 0xaac6, 0xf71d, 0x0, 0x0);
        gbc.writeMem(0x31fb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2c68);
        EXPECT(gbc.pc(), 0x31fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0268
        gbc.setState(0xb4a4, 0xf370, 0x66f0, 0x73b4, 0xd843, 0xb4dc, 0x0, 0x1);
        gbc.writeMem(0xb4a4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf370);
        EXPECT(gbc.pc(), 0xb4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a4), 0xcb);
        EXPECT(gbc.readMem(0xb4a5), 0x9a);
        // CB 9A 0269
        gbc.setState(0x4b91, 0x7a7, 0xfb30, 0x3a17, 0xbb74, 0xe65a, 0x0, 0x0);
        gbc.writeMem(0x4b91, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7a7);
        EXPECT(gbc.pc(), 0x4b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 026A
        gbc.setState(0x61e9, 0x4969, 0x71d0, 0x883c, 0x2aad, 0x76ca, 0x0, 0x1);
        gbc.writeMem(0x61e9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4969);
        EXPECT(gbc.pc(), 0x61eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 026B
        gbc.setState(0x32c8, 0xabe1, 0x5c10, 0x6762, 0x5279, 0x2ae7, 0x0, 0x1);
        gbc.writeMem(0x32c8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xabe1);
        EXPECT(gbc.pc(), 0x32ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 026C
        gbc.setState(0x4f19, 0x3024, 0xc0e0, 0x9b48, 0xdef5, 0x53c, 0x1, 0x1);
        gbc.writeMem(0x4f19, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3024);
        EXPECT(gbc.pc(), 0x4f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 026D
        gbc.setState(0x886d, 0xd773, 0x56b0, 0x9c55, 0x20dc, 0xdfd0, 0x0, 0x0);
        gbc.writeMem(0x886d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd773);
        EXPECT(gbc.pc(), 0x886f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x886d), 0xcb);
        EXPECT(gbc.readMem(0x886e), 0x9a);
        // CB 9A 026E
        gbc.setState(0xeb25, 0xd339, 0xd8e0, 0x35a6, 0xa18a, 0x20c8, 0x1, 0x0);
        gbc.writeMem(0xeb25, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd339);
        EXPECT(gbc.pc(), 0xeb27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb25), 0xcb);
        EXPECT(gbc.readMem(0xeb26), 0x9a);
        // CB 9A 026F
        gbc.setState(0x377a, 0xc70d, 0xd70, 0x3232, 0x5ba1, 0x5d77, 0x1, 0x1);
        gbc.writeMem(0x377a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc70d);
        EXPECT(gbc.pc(), 0x377c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0270
        gbc.setState(0x2de2, 0x1fa2, 0x5060, 0x81ed, 0x6d0f, 0x3154, 0x1, 0x1);
        gbc.writeMem(0x2de2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1fa2);
        EXPECT(gbc.pc(), 0x2de4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0271
        gbc.setState(0x9747, 0x9e4f, 0x2d90, 0x226f, 0x85b, 0xd801, 0x0, 0x0);
        gbc.writeMem(0x9747, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9e4f);
        EXPECT(gbc.pc(), 0x9749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9747), 0xcb);
        EXPECT(gbc.readMem(0x9748), 0x9a);
        // CB 9A 0272
        gbc.setState(0x54e2, 0x5234, 0xf500, 0x7163, 0xd3fd, 0x6f3d, 0x0, 0x0);
        gbc.writeMem(0x54e2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5234);
        EXPECT(gbc.pc(), 0x54e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0273
        gbc.setState(0xb3f9, 0x28e0, 0x5970, 0x2988, 0x8b9e, 0xd96d, 0x0, 0x1);
        gbc.writeMem(0xb3f9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x28e0);
        EXPECT(gbc.pc(), 0xb3fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f9), 0xcb);
        EXPECT(gbc.readMem(0xb3fa), 0x9a);
        // CB 9A 0274
        gbc.setState(0xa72e, 0x6342, 0xcbb0, 0x6896, 0x6af4, 0xa736, 0x1, 0x0);
        gbc.writeMem(0xa72e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6342);
        EXPECT(gbc.pc(), 0xa730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa72e), 0xcb);
        EXPECT(gbc.readMem(0xa72f), 0x9a);
        // CB 9A 0275
        gbc.setState(0x2902, 0xb654, 0x8f00, 0x421e, 0xdc50, 0xb493, 0x0, 0x0);
        gbc.writeMem(0x2902, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb654);
        EXPECT(gbc.pc(), 0x2904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0276
        gbc.setState(0xca2, 0xb55e, 0x7170, 0xa408, 0xab81, 0x8ad7, 0x1, 0x0);
        gbc.writeMem(0xca2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb55e);
        EXPECT(gbc.pc(), 0xca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0278
        gbc.setState(0x650, 0x6ae3, 0x4700, 0xfc94, 0x97ec, 0x95a2, 0x1, 0x1);
        gbc.writeMem(0x650, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6ae3);
        EXPECT(gbc.pc(), 0x652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0279
        gbc.setState(0xb244, 0x8f0f, 0xa500, 0x42f4, 0xfa11, 0xd7ac, 0x0, 0x0);
        gbc.writeMem(0xb244, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8f0f);
        EXPECT(gbc.pc(), 0xb246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb244), 0xcb);
        EXPECT(gbc.readMem(0xb245), 0x9a);
        // CB 9A 027A
        gbc.setState(0x6ac0, 0xfde3, 0xf1e0, 0x305f, 0xff6a, 0x3453, 0x1, 0x1);
        gbc.writeMem(0x6ac0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xfde3);
        EXPECT(gbc.pc(), 0x6ac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 027B
        gbc.setState(0x8fe2, 0x78ae, 0x79a0, 0xb255, 0x651a, 0xbd7e, 0x1, 0x1);
        gbc.writeMem(0x8fe2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x78ae);
        EXPECT(gbc.pc(), 0x8fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe2), 0xcb);
        EXPECT(gbc.readMem(0x8fe3), 0x9a);
        // CB 9A 027C
        gbc.setState(0x2459, 0x1f54, 0xd230, 0xd2ea, 0xfe0c, 0x3f67, 0x1, 0x1);
        gbc.writeMem(0x2459, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1f54);
        EXPECT(gbc.pc(), 0x245b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 027D
        gbc.setState(0x3310, 0x13bf, 0x19d0, 0x8cc4, 0xdfee, 0xbc, 0x1, 0x0);
        gbc.writeMem(0x3310, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x13bf);
        EXPECT(gbc.pc(), 0x3312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 027E
        gbc.setState(0x389, 0xdbe3, 0x1ba0, 0x5572, 0xee68, 0xc8bc, 0x0, 0x1);
        gbc.writeMem(0x389, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdbe3);
        EXPECT(gbc.pc(), 0x38b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 027F
        gbc.setState(0x3a8f, 0xd7ad, 0x7250, 0x1d19, 0x3b10, 0xb63f, 0x1, 0x0);
        gbc.writeMem(0x3a8f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd7ad);
        EXPECT(gbc.pc(), 0x3a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0280
        gbc.setState(0x9e95, 0x768e, 0xfeb0, 0xa9d1, 0xc0e2, 0xc65e, 0x1, 0x1);
        gbc.writeMem(0x9e95, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x768e);
        EXPECT(gbc.pc(), 0x9e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e95), 0xcb);
        EXPECT(gbc.readMem(0x9e96), 0x9a);
        // CB 9A 0281
        gbc.setState(0x864e, 0xb012, 0x79d0, 0x177a, 0x221a, 0x26f8, 0x1, 0x1);
        gbc.writeMem(0x864e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb012);
        EXPECT(gbc.pc(), 0x8650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x864e), 0xcb);
        EXPECT(gbc.readMem(0x864f), 0x9a);
        // CB 9A 0282
        gbc.setState(0x877f, 0x2095, 0xf8e0, 0x6ef2, 0x7bdf, 0xc78c, 0x1, 0x0);
        gbc.writeMem(0x877f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2095);
        EXPECT(gbc.pc(), 0x8781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877f), 0xcb);
        EXPECT(gbc.readMem(0x8780), 0x9a);
        // CB 9A 0283
        gbc.setState(0xda78, 0x6b25, 0x7660, 0xa3f5, 0x5ff9, 0x3bd5, 0x1, 0x1);
        gbc.writeMem(0xda78, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6b25);
        EXPECT(gbc.pc(), 0xda7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda78), 0xcb);
        EXPECT(gbc.readMem(0xda79), 0x9a);
        // CB 9A 0284
        gbc.setState(0x57ab, 0x641e, 0x77e0, 0x702c, 0xb231, 0x81a2, 0x0, 0x0);
        gbc.writeMem(0x57ab, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x641e);
        EXPECT(gbc.pc(), 0x57ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0286
        gbc.setState(0xbd3d, 0xc304, 0x6050, 0xa27a, 0xb6ff, 0x6325, 0x0, 0x0);
        gbc.writeMem(0xbd3d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc304);
        EXPECT(gbc.pc(), 0xbd3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd3d), 0xcb);
        EXPECT(gbc.readMem(0xbd3e), 0x9a);
        // CB 9A 0287
        gbc.setState(0xa9c6, 0x5ee0, 0xa5d0, 0x6840, 0xbe4c, 0x4b30, 0x1, 0x0);
        gbc.writeMem(0xa9c6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5ee0);
        EXPECT(gbc.pc(), 0xa9c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c6), 0xcb);
        EXPECT(gbc.readMem(0xa9c7), 0x9a);
        // CB 9A 0288
        gbc.setState(0x4e05, 0xece8, 0x62b0, 0xbabb, 0xbca, 0xdd31, 0x1, 0x1);
        gbc.writeMem(0x4e05, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xece8);
        EXPECT(gbc.pc(), 0x4e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0289
        gbc.setState(0x5c14, 0x6d68, 0xc340, 0xd4f2, 0x7553, 0x6562, 0x0, 0x1);
        gbc.writeMem(0x5c14, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6d68);
        EXPECT(gbc.pc(), 0x5c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 028A
        gbc.setState(0x1cf4, 0x48a8, 0xa120, 0x2043, 0x2692, 0xaec0, 0x0, 0x1);
        gbc.writeMem(0x1cf4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x48a8);
        EXPECT(gbc.pc(), 0x1cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 028B
        gbc.setState(0x7fd, 0x4964, 0x4300, 0x55f3, 0xbf7a, 0x33b0, 0x0, 0x0);
        gbc.writeMem(0x7fd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4964);
        EXPECT(gbc.pc(), 0x7ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 028C
        gbc.setState(0xb83e, 0xbc48, 0xa990, 0x6f7d, 0x4b33, 0x4dc6, 0x1, 0x1);
        gbc.writeMem(0xb83e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbc48);
        EXPECT(gbc.pc(), 0xb840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb83e), 0xcb);
        EXPECT(gbc.readMem(0xb83f), 0x9a);
        // CB 9A 028D
        gbc.setState(0xdda6, 0x1c48, 0x75c0, 0x5dcf, 0xa4de, 0x386a, 0x1, 0x0);
        gbc.writeMem(0xdda6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1c48);
        EXPECT(gbc.pc(), 0xdda8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda6), 0xcb);
        EXPECT(gbc.readMem(0xdda7), 0x9a);
        // CB 9A 028E
        gbc.setState(0x2dda, 0x2c06, 0x91a0, 0xe940, 0x5139, 0xbfc3, 0x0, 0x0);
        gbc.writeMem(0x2dda, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2c06);
        EXPECT(gbc.pc(), 0x2ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 028F
        gbc.setState(0x7779, 0xf8f7, 0xd9d0, 0x4e7, 0xfa70, 0x91f5, 0x1, 0x1);
        gbc.writeMem(0x7779, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf8f7);
        EXPECT(gbc.pc(), 0x777b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0290
        gbc.setState(0xc734, 0xe407, 0x70a0, 0x37cb, 0x8b62, 0x8327, 0x1, 0x1);
        gbc.writeMem(0xc734, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe407);
        EXPECT(gbc.pc(), 0xc736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc734), 0xcb);
        EXPECT(gbc.readMem(0xc735), 0x9a);
        // CB 9A 0291
        gbc.setState(0x1371, 0xe4cd, 0xf220, 0x4957, 0x3f17, 0x580b, 0x0, 0x1);
        gbc.writeMem(0x1371, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe4cd);
        EXPECT(gbc.pc(), 0x1373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0292
        gbc.setState(0xd172, 0x511a, 0x5f30, 0x1230, 0x56b0, 0xf12b, 0x0, 0x0);
        gbc.writeMem(0xd172, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x511a);
        EXPECT(gbc.pc(), 0xd174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd172), 0xcb);
        EXPECT(gbc.readMem(0xd173), 0x9a);
        // CB 9A 0293
        gbc.setState(0xd1b8, 0x385e, 0x1080, 0xff36, 0x9478, 0x8143, 0x1, 0x1);
        gbc.writeMem(0xd1b8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x385e);
        EXPECT(gbc.pc(), 0xd1ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b8), 0xcb);
        EXPECT(gbc.readMem(0xd1b9), 0x9a);
        // CB 9A 0294
        gbc.setState(0x3220, 0x17ba, 0x9a40, 0xd0d7, 0xb3a7, 0x4cdf, 0x0, 0x1);
        gbc.writeMem(0x3220, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x17ba);
        EXPECT(gbc.pc(), 0x3222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0295
        gbc.setState(0x3a88, 0xd7cf, 0x47b0, 0xf4f9, 0x36cf, 0xbb8d, 0x1, 0x0);
        gbc.writeMem(0x3a88, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd7cf);
        EXPECT(gbc.pc(), 0x3a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0297
        gbc.setState(0xd9cf, 0x551e, 0xaaf0, 0xbb85, 0x30eb, 0x6c53, 0x0, 0x0);
        gbc.writeMem(0xd9cf, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x551e);
        EXPECT(gbc.pc(), 0xd9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9cf), 0xcb);
        EXPECT(gbc.readMem(0xd9d0), 0x9a);
        // CB 9A 0298
        gbc.setState(0x5bcd, 0x89b8, 0xc2c0, 0x1cf1, 0x51ac, 0xdb45, 0x0, 0x1);
        gbc.writeMem(0x5bcd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x89b8);
        EXPECT(gbc.pc(), 0x5bcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0299
        gbc.setState(0x996f, 0x8703, 0x1ea0, 0x25b4, 0x87d1, 0x447d, 0x0, 0x0);
        gbc.writeMem(0x996f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8703);
        EXPECT(gbc.pc(), 0x9971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996f), 0xcb);
        EXPECT(gbc.readMem(0x9970), 0x9a);
        // CB 9A 029A
        gbc.setState(0x16aa, 0xd5ce, 0x97e0, 0x349e, 0xf804, 0x3a24, 0x1, 0x0);
        gbc.writeMem(0x16aa, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd5ce);
        EXPECT(gbc.pc(), 0x16ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 029B
        gbc.setState(0xbe32, 0x73b2, 0x4ef0, 0xef44, 0xdf6c, 0x577a, 0x1, 0x0);
        gbc.writeMem(0xbe32, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x73b2);
        EXPECT(gbc.pc(), 0xbe34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe32), 0xcb);
        EXPECT(gbc.readMem(0xbe33), 0x9a);
        // CB 9A 029C
        gbc.setState(0x5d35, 0x7720, 0xf720, 0x4bf3, 0xa159, 0x6d33, 0x1, 0x0);
        gbc.writeMem(0x5d35, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7720);
        EXPECT(gbc.pc(), 0x5d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 029D
        gbc.setState(0x6de, 0x90a7, 0xd550, 0x6530, 0x17c6, 0xcb4c, 0x1, 0x1);
        gbc.writeMem(0x6de, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x90a7);
        EXPECT(gbc.pc(), 0x6e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 029E
        gbc.setState(0xcf1d, 0x6155, 0x1140, 0x8cc2, 0x9566, 0xe91, 0x0, 0x1);
        gbc.writeMem(0xcf1d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6155);
        EXPECT(gbc.pc(), 0xcf1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf1d), 0xcb);
        EXPECT(gbc.readMem(0xcf1e), 0x9a);
        // CB 9A 029F
        gbc.setState(0x8d02, 0xc88b, 0xc50, 0x979a, 0xdfa8, 0xd051, 0x0, 0x0);
        gbc.writeMem(0x8d02, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc88b);
        EXPECT(gbc.pc(), 0x8d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d02), 0xcb);
        EXPECT(gbc.readMem(0x8d03), 0x9a);
        // CB 9A 02A0
        gbc.setState(0xe80e, 0xa0c, 0x7d30, 0xe74, 0x344d, 0x88bb, 0x0, 0x0);
        gbc.writeMem(0xe80e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa0c);
        EXPECT(gbc.pc(), 0xe810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe80e), 0xcb);
        EXPECT(gbc.readMem(0xe80f), 0x9a);
        // CB 9A 02A1
        gbc.setState(0x66f1, 0x1993, 0xdfa0, 0x235d, 0x325a, 0xb765, 0x0, 0x0);
        gbc.writeMem(0x66f1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1993);
        EXPECT(gbc.pc(), 0x66f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02A2
        gbc.setState(0x6042, 0x6146, 0xcb90, 0x45b2, 0x6d79, 0xf72c, 0x1, 0x0);
        gbc.writeMem(0x6042, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6146);
        EXPECT(gbc.pc(), 0x6044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02A3
        gbc.setState(0x86e6, 0x29b8, 0x37a0, 0x2d7f, 0x94d2, 0xa319, 0x0, 0x0);
        gbc.writeMem(0x86e6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x29b8);
        EXPECT(gbc.pc(), 0x86e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86e6), 0xcb);
        EXPECT(gbc.readMem(0x86e7), 0x9a);
        // CB 9A 02A4
        gbc.setState(0x44ea, 0x8ccd, 0x38b0, 0xb3b7, 0xaa31, 0x573c, 0x0, 0x0);
        gbc.writeMem(0x44ea, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8ccd);
        EXPECT(gbc.pc(), 0x44ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02A5
        gbc.setState(0xccf1, 0xce47, 0x160, 0xf51a, 0x35d8, 0x5ad6, 0x1, 0x0);
        gbc.writeMem(0xccf1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xce47);
        EXPECT(gbc.pc(), 0xccf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf1), 0xcb);
        EXPECT(gbc.readMem(0xccf2), 0x9a);
        // CB 9A 02A6
        gbc.setState(0x5ee9, 0x5d36, 0xefd0, 0x2e4, 0x3284, 0x99ee, 0x1, 0x1);
        gbc.writeMem(0x5ee9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5d36);
        EXPECT(gbc.pc(), 0x5eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02A7
        gbc.setState(0x2835, 0x82a2, 0xdcf0, 0x9dd5, 0xa528, 0x3b72, 0x0, 0x0);
        gbc.writeMem(0x2835, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x82a2);
        EXPECT(gbc.pc(), 0x2837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02A8
        gbc.setState(0xc162, 0x8d29, 0x5ab0, 0x9752, 0x33e7, 0x6856, 0x1, 0x1);
        gbc.writeMem(0xc162, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8d29);
        EXPECT(gbc.pc(), 0xc164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc162), 0xcb);
        EXPECT(gbc.readMem(0xc163), 0x9a);
        // CB 9A 02A9
        gbc.setState(0xdf76, 0xf873, 0x2060, 0x3a8c, 0xcdd5, 0x9ea9, 0x1, 0x0);
        gbc.writeMem(0xdf76, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf873);
        EXPECT(gbc.pc(), 0xdf78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf76), 0xcb);
        EXPECT(gbc.readMem(0xdf77), 0x9a);
        // CB 9A 02AA
        gbc.setState(0x9da8, 0x233e, 0xdfd0, 0x221f, 0x419f, 0x5d5e, 0x0, 0x0);
        gbc.writeMem(0x9da8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x233e);
        EXPECT(gbc.pc(), 0x9daa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da8), 0xcb);
        EXPECT(gbc.readMem(0x9da9), 0x9a);
        // CB 9A 02AB
        gbc.setState(0x306d, 0xcba6, 0x95b0, 0x9f31, 0x3934, 0xdffe, 0x0, 0x1);
        gbc.writeMem(0x306d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xcba6);
        EXPECT(gbc.pc(), 0x306f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02AC
        gbc.setState(0xd7b8, 0x6b4f, 0xca50, 0x23dc, 0xd88d, 0xdbd2, 0x1, 0x1);
        gbc.writeMem(0xd7b8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6b4f);
        EXPECT(gbc.pc(), 0xd7ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b8), 0xcb);
        EXPECT(gbc.readMem(0xd7b9), 0x9a);
        // CB 9A 02AD
        gbc.setState(0xe729, 0x3338, 0x8e10, 0xc7a, 0x430d, 0x98ad, 0x0, 0x0);
        gbc.writeMem(0xe729, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3338);
        EXPECT(gbc.pc(), 0xe72b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe729), 0xcb);
        EXPECT(gbc.readMem(0xe72a), 0x9a);
        // CB 9A 02AE
        gbc.setState(0xa5f4, 0xa7f6, 0x29c0, 0x8117, 0x5035, 0xaf0d, 0x1, 0x0);
        gbc.writeMem(0xa5f4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa7f6);
        EXPECT(gbc.pc(), 0xa5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f4), 0xcb);
        EXPECT(gbc.readMem(0xa5f5), 0x9a);
        // CB 9A 02AF
        gbc.setState(0x6e20, 0x3b24, 0xb4e0, 0xf11, 0xad40, 0x8d48, 0x0, 0x0);
        gbc.writeMem(0x6e20, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3b24);
        EXPECT(gbc.pc(), 0x6e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02B0
        gbc.setState(0xd71d, 0x20d2, 0xeb10, 0xadf7, 0xb182, 0x4c97, 0x1, 0x1);
        gbc.writeMem(0xd71d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x20d2);
        EXPECT(gbc.pc(), 0xd71f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd71d), 0xcb);
        EXPECT(gbc.readMem(0xd71e), 0x9a);
        // CB 9A 02B1
        gbc.setState(0x3605, 0x9598, 0xae70, 0x7092, 0x3c72, 0x74eb, 0x1, 0x1);
        gbc.writeMem(0x3605, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9598);
        EXPECT(gbc.pc(), 0x3607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02B2
        gbc.setState(0xb2fe, 0xcc22, 0x5770, 0xbf14, 0x823f, 0x6c52, 0x1, 0x1);
        gbc.writeMem(0xb2fe, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcc22);
        EXPECT(gbc.pc(), 0xb300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2fe), 0xcb);
        EXPECT(gbc.readMem(0xb2ff), 0x9a);
        // CB 9A 02B3
        gbc.setState(0x2c19, 0x7a9b, 0x5110, 0x57a2, 0x7608, 0x34a4, 0x0, 0x0);
        gbc.writeMem(0x2c19, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7a9b);
        EXPECT(gbc.pc(), 0x2c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02B4
        gbc.setState(0xee6, 0xdb8c, 0xaee0, 0x1d63, 0x5dea, 0x2bac, 0x0, 0x1);
        gbc.writeMem(0xee6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdb8c);
        EXPECT(gbc.pc(), 0xee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02B5
        gbc.setState(0xcdef, 0xcbf3, 0x8370, 0x3dbb, 0xbc83, 0xa009, 0x0, 0x1);
        gbc.writeMem(0xcdef, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xcbf3);
        EXPECT(gbc.pc(), 0xcdf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdef), 0xcb);
        EXPECT(gbc.readMem(0xcdf0), 0x9a);
        // CB 9A 02B6
        gbc.setState(0xd326, 0x6165, 0x5390, 0xb21a, 0x85a4, 0x2a31, 0x0, 0x0);
        gbc.writeMem(0xd326, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6165);
        EXPECT(gbc.pc(), 0xd328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd326), 0xcb);
        EXPECT(gbc.readMem(0xd327), 0x9a);
        // CB 9A 02B7
        gbc.setState(0x524, 0x4b4f, 0xa4a0, 0x2a11, 0xa1ff, 0x9c76, 0x0, 0x1);
        gbc.writeMem(0x524, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4b4f);
        EXPECT(gbc.pc(), 0x526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02B8
        gbc.setState(0xe640, 0x6762, 0xb7b0, 0x382e, 0xcda7, 0x2dd3, 0x1, 0x0);
        gbc.writeMem(0xe640, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6762);
        EXPECT(gbc.pc(), 0xe642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe640), 0xcb);
        EXPECT(gbc.readMem(0xe641), 0x9a);
        // CB 9A 02B9
        gbc.setState(0xdc75, 0x6ff3, 0x87b0, 0x46a9, 0x95b9, 0xa464, 0x1, 0x0);
        gbc.writeMem(0xdc75, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6ff3);
        EXPECT(gbc.pc(), 0xdc77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc75), 0xcb);
        EXPECT(gbc.readMem(0xdc76), 0x9a);
        // CB 9A 02BA
        gbc.setState(0x704, 0x3040, 0x19e0, 0xcb80, 0x745b, 0xf636, 0x1, 0x1);
        gbc.writeMem(0x704, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3040);
        EXPECT(gbc.pc(), 0x706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02BB
        gbc.setState(0x8d94, 0xc188, 0x6c70, 0xd0e9, 0xcdef, 0x76fa, 0x0, 0x0);
        gbc.writeMem(0x8d94, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc188);
        EXPECT(gbc.pc(), 0x8d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d94), 0xcb);
        EXPECT(gbc.readMem(0x8d95), 0x9a);
        // CB 9A 02BC
        gbc.setState(0x1589, 0x18fd, 0xcc40, 0xb363, 0x69e7, 0xf366, 0x0, 0x1);
        gbc.writeMem(0x1589, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x18fd);
        EXPECT(gbc.pc(), 0x158b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02BD
        gbc.setState(0x137, 0x2f3d, 0xbdd0, 0x6d62, 0x905d, 0x1317, 0x1, 0x0);
        gbc.writeMem(0x137, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2f3d);
        EXPECT(gbc.pc(), 0x139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02BE
        gbc.setState(0xd432, 0xe923, 0xe1e0, 0x8497, 0xc6ca, 0xe7e, 0x0, 0x1);
        gbc.writeMem(0xd432, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe923);
        EXPECT(gbc.pc(), 0xd434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd432), 0xcb);
        EXPECT(gbc.readMem(0xd433), 0x9a);
        // CB 9A 02BF
        gbc.setState(0x227c, 0x1fc9, 0x1c20, 0x5891, 0x987b, 0xa7, 0x1, 0x1);
        gbc.writeMem(0x227c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1fc9);
        EXPECT(gbc.pc(), 0x227e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02C0
        gbc.setState(0x9bf5, 0x2103, 0xee40, 0xd3b8, 0x22f3, 0xdf02, 0x0, 0x0);
        gbc.writeMem(0x9bf5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2103);
        EXPECT(gbc.pc(), 0x9bf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf5), 0xcb);
        EXPECT(gbc.readMem(0x9bf6), 0x9a);
        // CB 9A 02C1
        gbc.setState(0x4a06, 0x931e, 0xea10, 0x79fb, 0x7dda, 0x3e50, 0x0, 0x1);
        gbc.writeMem(0x4a06, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x931e);
        EXPECT(gbc.pc(), 0x4a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02C2
        gbc.setState(0x3aa7, 0x752c, 0x52a0, 0x1ca0, 0xc836, 0x8873, 0x1, 0x0);
        gbc.writeMem(0x3aa7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x752c);
        EXPECT(gbc.pc(), 0x3aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02C3
        gbc.setState(0xbd6e, 0xa054, 0x87a0, 0x5fe8, 0x36eb, 0xf338, 0x1, 0x0);
        gbc.writeMem(0xbd6e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa054);
        EXPECT(gbc.pc(), 0xbd70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd6e), 0xcb);
        EXPECT(gbc.readMem(0xbd6f), 0x9a);
        // CB 9A 02C4
        gbc.setState(0x4a7a, 0x63f7, 0xcff0, 0xd223, 0x2df7, 0x3a22, 0x0, 0x0);
        gbc.writeMem(0x4a7a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x63f7);
        EXPECT(gbc.pc(), 0x4a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02C5
        gbc.setState(0x6950, 0x9d3, 0xb3f0, 0x8e21, 0xb56b, 0x6093, 0x1, 0x1);
        gbc.writeMem(0x6950, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9d3);
        EXPECT(gbc.pc(), 0x6952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02C6
        gbc.setState(0x34b5, 0x3e6e, 0x2550, 0x1697, 0x5638, 0x6e90, 0x1, 0x0);
        gbc.writeMem(0x34b5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3e6e);
        EXPECT(gbc.pc(), 0x34b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02C7
        gbc.setState(0x5100, 0x5839, 0x4f60, 0x2ddc, 0x2d0e, 0xdb92, 0x1, 0x1);
        gbc.writeMem(0x5100, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5839);
        EXPECT(gbc.pc(), 0x5102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02C8
        gbc.setState(0x3bde, 0xb959, 0xdff0, 0xdb51, 0x3cd4, 0x965d, 0x0, 0x0);
        gbc.writeMem(0x3bde, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb959);
        EXPECT(gbc.pc(), 0x3be0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02C9
        gbc.setState(0x3778, 0xe566, 0x35f0, 0xfb2d, 0xf63f, 0x28a3, 0x0, 0x0);
        gbc.writeMem(0x3778, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe566);
        EXPECT(gbc.pc(), 0x377a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02CA
        gbc.setState(0xc614, 0x758, 0xf9f0, 0x92fa, 0xb91, 0xacf1, 0x1, 0x0);
        gbc.writeMem(0xc614, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x758);
        EXPECT(gbc.pc(), 0xc616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc614), 0xcb);
        EXPECT(gbc.readMem(0xc615), 0x9a);
        // CB 9A 02CB
        gbc.setState(0x5343, 0x2daa, 0xd6b0, 0x42b9, 0x323, 0xbd94, 0x0, 0x1);
        gbc.writeMem(0x5343, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2daa);
        EXPECT(gbc.pc(), 0x5345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02CC
        gbc.setState(0xc91a, 0x2d18, 0x9da0, 0xfc38, 0x97e8, 0x1e71, 0x1, 0x1);
        gbc.writeMem(0xc91a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2d18);
        EXPECT(gbc.pc(), 0xc91c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91a), 0xcb);
        EXPECT(gbc.readMem(0xc91b), 0x9a);
        // CB 9A 02CD
        gbc.setState(0x33e6, 0x194d, 0x4430, 0xed17, 0xf86a, 0xd76a, 0x1, 0x0);
        gbc.writeMem(0x33e6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x194d);
        EXPECT(gbc.pc(), 0x33e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02CF
        gbc.setState(0x4f66, 0x80a2, 0x7230, 0xe1b3, 0xa925, 0xa724, 0x1, 0x0);
        gbc.writeMem(0x4f66, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x80a2);
        EXPECT(gbc.pc(), 0x4f68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02D0
        gbc.setState(0x71d8, 0xf524, 0x4070, 0x2064, 0xe3a4, 0x5f0, 0x0, 0x0);
        gbc.writeMem(0x71d8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf524);
        EXPECT(gbc.pc(), 0x71da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02D1
        gbc.setState(0xcd2a, 0x5f47, 0xe4b0, 0xcc40, 0xac38, 0x3d6, 0x0, 0x1);
        gbc.writeMem(0xcd2a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5f47);
        EXPECT(gbc.pc(), 0xcd2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2a), 0xcb);
        EXPECT(gbc.readMem(0xcd2b), 0x9a);
        // CB 9A 02D2
        gbc.setState(0xab7f, 0x74a0, 0x6010, 0xd52b, 0xad84, 0x70a8, 0x0, 0x0);
        gbc.writeMem(0xab7f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x74a0);
        EXPECT(gbc.pc(), 0xab81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab7f), 0xcb);
        EXPECT(gbc.readMem(0xab80), 0x9a);
        // CB 9A 02D3
        gbc.setState(0x1f5e, 0xc1f6, 0xf900, 0x4e79, 0x2466, 0xfa60, 0x1, 0x0);
        gbc.writeMem(0x1f5e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc1f6);
        EXPECT(gbc.pc(), 0x1f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02D4
        gbc.setState(0xc59f, 0x6e59, 0x4ba0, 0xfdce, 0x282, 0xce1, 0x0, 0x0);
        gbc.writeMem(0xc59f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6e59);
        EXPECT(gbc.pc(), 0xc5a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc59f), 0xcb);
        EXPECT(gbc.readMem(0xc5a0), 0x9a);
        // CB 9A 02D5
        gbc.setState(0xef5d, 0x7b88, 0x1ac0, 0x980f, 0x5d4e, 0x23cf, 0x1, 0x1);
        gbc.writeMem(0xef5d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7b88);
        EXPECT(gbc.pc(), 0xef5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef5d), 0xcb);
        EXPECT(gbc.readMem(0xef5e), 0x9a);
        // CB 9A 02D6
        gbc.setState(0x9ab7, 0xf379, 0xc1d0, 0x8649, 0x7b4c, 0x5055, 0x1, 0x1);
        gbc.writeMem(0x9ab7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf379);
        EXPECT(gbc.pc(), 0x9ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab7), 0xcb);
        EXPECT(gbc.readMem(0x9ab8), 0x9a);
        // CB 9A 02D7
        gbc.setState(0xd4de, 0xf334, 0xd920, 0xbdd4, 0x5455, 0xa267, 0x1, 0x0);
        gbc.writeMem(0xd4de, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf334);
        EXPECT(gbc.pc(), 0xd4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4de), 0xcb);
        EXPECT(gbc.readMem(0xd4df), 0x9a);
        // CB 9A 02D8
        gbc.setState(0x4de0, 0x5006, 0x2b70, 0x2d96, 0x5566, 0xaa01, 0x0, 0x0);
        gbc.writeMem(0x4de0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5006);
        EXPECT(gbc.pc(), 0x4de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02D9
        gbc.setState(0x7f67, 0xa105, 0x38f0, 0x652, 0xff31, 0xdf56, 0x1, 0x0);
        gbc.writeMem(0x7f67, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa105);
        EXPECT(gbc.pc(), 0x7f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02DA
        gbc.setState(0x9269, 0x38b3, 0xdfd0, 0x4475, 0x62af, 0xbb65, 0x0, 0x1);
        gbc.writeMem(0x9269, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x38b3);
        EXPECT(gbc.pc(), 0x926b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9269), 0xcb);
        EXPECT(gbc.readMem(0x926a), 0x9a);
        // CB 9A 02DB
        gbc.setState(0x705e, 0x304c, 0x54d0, 0x79, 0x7954, 0xec5, 0x0, 0x0);
        gbc.writeMem(0x705e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x304c);
        EXPECT(gbc.pc(), 0x7060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02DC
        gbc.setState(0xed34, 0xc484, 0x8820, 0x6144, 0x7b21, 0x5f03, 0x0, 0x0);
        gbc.writeMem(0xed34, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc484);
        EXPECT(gbc.pc(), 0xed36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed34), 0xcb);
        EXPECT(gbc.readMem(0xed35), 0x9a);
        // CB 9A 02DD
        gbc.setState(0x76fb, 0xd767, 0xa570, 0xd9b4, 0x1a1, 0x1312, 0x1, 0x1);
        gbc.writeMem(0x76fb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd767);
        EXPECT(gbc.pc(), 0x76fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02DE
        gbc.setState(0x770e, 0x771a, 0xf6f0, 0xafdf, 0x94ee, 0x3125, 0x1, 0x1);
        gbc.writeMem(0x770e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x771a);
        EXPECT(gbc.pc(), 0x7710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02DF
        gbc.setState(0x49e2, 0xcd0c, 0x310, 0xf6da, 0xc61a, 0xfa63, 0x0, 0x0);
        gbc.writeMem(0x49e2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcd0c);
        EXPECT(gbc.pc(), 0x49e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02E0
        gbc.setState(0xdd0d, 0x6730, 0x23a0, 0xae82, 0xf8a, 0xbb21, 0x1, 0x0);
        gbc.writeMem(0xdd0d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6730);
        EXPECT(gbc.pc(), 0xdd0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd0d), 0xcb);
        EXPECT(gbc.readMem(0xdd0e), 0x9a);
        // CB 9A 02E1
        gbc.setState(0x7e3d, 0x4e4b, 0xc730, 0x5cf5, 0xee30, 0x7267, 0x0, 0x0);
        gbc.writeMem(0x7e3d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4e4b);
        EXPECT(gbc.pc(), 0x7e3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02E2
        gbc.setState(0xbe70, 0xa380, 0x3c00, 0x7562, 0x799d, 0x9e1e, 0x1, 0x1);
        gbc.writeMem(0xbe70, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa380);
        EXPECT(gbc.pc(), 0xbe72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe70), 0xcb);
        EXPECT(gbc.readMem(0xbe71), 0x9a);
        // CB 9A 02E4
        gbc.setState(0x135b, 0xd64f, 0x23a0, 0xdc30, 0xf6e0, 0xd674, 0x0, 0x1);
        gbc.writeMem(0x135b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd64f);
        EXPECT(gbc.pc(), 0x135d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02E5
        gbc.setState(0xbcd9, 0x5ab9, 0xc280, 0x986b, 0x72f3, 0x883c, 0x0, 0x0);
        gbc.writeMem(0xbcd9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5ab9);
        EXPECT(gbc.pc(), 0xbcdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd9), 0xcb);
        EXPECT(gbc.readMem(0xbcda), 0x9a);
        // CB 9A 02E6
        gbc.setState(0x7dfd, 0xf62c, 0xf140, 0xf448, 0xf591, 0xe4b7, 0x0, 0x0);
        gbc.writeMem(0x7dfd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf62c);
        EXPECT(gbc.pc(), 0x7dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02E7
        gbc.setState(0x9881, 0x7a83, 0xc4a0, 0xa090, 0x4b7f, 0xf20d, 0x0, 0x1);
        gbc.writeMem(0x9881, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7a83);
        EXPECT(gbc.pc(), 0x9883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9881), 0xcb);
        EXPECT(gbc.readMem(0x9882), 0x9a);
        // CB 9A 02E8
        gbc.setState(0x2862, 0xc918, 0xf000, 0xdd9d, 0xf61b, 0xaced, 0x1, 0x1);
        gbc.writeMem(0x2862, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc918);
        EXPECT(gbc.pc(), 0x2864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02E9
        gbc.setState(0x5d55, 0xbfa5, 0x4ac0, 0xc6e5, 0x5bda, 0xe356, 0x1, 0x0);
        gbc.writeMem(0x5d55, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xbfa5);
        EXPECT(gbc.pc(), 0x5d57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02EB
        gbc.setState(0xe898, 0xc9ac, 0x4ef0, 0xbd23, 0xd8b7, 0xa641, 0x1, 0x0);
        gbc.writeMem(0xe898, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc9ac);
        EXPECT(gbc.pc(), 0xe89a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe898), 0xcb);
        EXPECT(gbc.readMem(0xe899), 0x9a);
        // CB 9A 02EC
        gbc.setState(0x8e78, 0xa12f, 0x4270, 0xb7e5, 0x321a, 0x3250, 0x0, 0x0);
        gbc.writeMem(0x8e78, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa12f);
        EXPECT(gbc.pc(), 0x8e7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e78), 0xcb);
        EXPECT(gbc.readMem(0x8e79), 0x9a);
        // CB 9A 02ED
        gbc.setState(0xda07, 0x82f4, 0x5710, 0xf6c8, 0x1445, 0xc8eb, 0x1, 0x0);
        gbc.writeMem(0xda07, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x82f4);
        EXPECT(gbc.pc(), 0xda09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda07), 0xcb);
        EXPECT(gbc.readMem(0xda08), 0x9a);
        // CB 9A 02EE
        gbc.setState(0x5808, 0x8ab1, 0x2a30, 0x68c7, 0x9ba4, 0xe228, 0x1, 0x0);
        gbc.writeMem(0x5808, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8ab1);
        EXPECT(gbc.pc(), 0x580a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02EF
        gbc.setState(0x1c78, 0x6501, 0xe50, 0xe755, 0xc448, 0x737, 0x0, 0x0);
        gbc.writeMem(0x1c78, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6501);
        EXPECT(gbc.pc(), 0x1c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02F0
        gbc.setState(0x669f, 0xf9e8, 0x6b0, 0x886a, 0x937b, 0xb578, 0x0, 0x1);
        gbc.writeMem(0x669f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf9e8);
        EXPECT(gbc.pc(), 0x66a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02F1
        gbc.setState(0xcc52, 0xf1b8, 0xf780, 0xe06c, 0x7d58, 0x11a2, 0x0, 0x1);
        gbc.writeMem(0xcc52, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf1b8);
        EXPECT(gbc.pc(), 0xcc54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc52), 0xcb);
        EXPECT(gbc.readMem(0xcc53), 0x9a);
        // CB 9A 02F2
        gbc.setState(0x9fd9, 0xaecc, 0x4ef0, 0x7f66, 0xd86e, 0x8d0, 0x0, 0x0);
        gbc.writeMem(0x9fd9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xaecc);
        EXPECT(gbc.pc(), 0x9fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fd9), 0xcb);
        EXPECT(gbc.readMem(0x9fda), 0x9a);
        // CB 9A 02F3
        gbc.setState(0xd756, 0x5e3, 0x26e0, 0x237, 0xac13, 0x76c, 0x0, 0x0);
        gbc.writeMem(0xd756, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5e3);
        EXPECT(gbc.pc(), 0xd758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd756), 0xcb);
        EXPECT(gbc.readMem(0xd757), 0x9a);
        // CB 9A 02F4
        gbc.setState(0x9164, 0xf85e, 0x5190, 0xcdf6, 0xedf8, 0xb40d, 0x1, 0x1);
        gbc.writeMem(0x9164, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf85e);
        EXPECT(gbc.pc(), 0x9166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9164), 0xcb);
        EXPECT(gbc.readMem(0x9165), 0x9a);
        // CB 9A 02F5
        gbc.setState(0x6846, 0x89dd, 0xc3b0, 0x5aaf, 0x89c2, 0xfc21, 0x1, 0x1);
        gbc.writeMem(0x6846, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x89dd);
        EXPECT(gbc.pc(), 0x6848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02F6
        gbc.setState(0xd55b, 0x4c0d, 0xf0a0, 0xe709, 0xb3a5, 0x3f36, 0x0, 0x1);
        gbc.writeMem(0xd55b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4c0d);
        EXPECT(gbc.pc(), 0xd55d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd55b), 0xcb);
        EXPECT(gbc.readMem(0xd55c), 0x9a);
        // CB 9A 02F7
        gbc.setState(0x4d9b, 0x4892, 0xa4d0, 0x6419, 0x6461, 0x6eed, 0x1, 0x0);
        gbc.writeMem(0x4d9b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4892);
        EXPECT(gbc.pc(), 0x4d9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02F8
        gbc.setState(0x96dd, 0xaf1a, 0xb8e0, 0x5609, 0x1837, 0xcf0c, 0x1, 0x0);
        gbc.writeMem(0x96dd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xaf1a);
        EXPECT(gbc.pc(), 0x96df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96dd), 0xcb);
        EXPECT(gbc.readMem(0x96de), 0x9a);
        // CB 9A 02F9
        gbc.setState(0xa8ea, 0x220b, 0x2750, 0x9766, 0x15e9, 0x303b, 0x0, 0x1);
        gbc.writeMem(0xa8ea, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x220b);
        EXPECT(gbc.pc(), 0xa8ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ea), 0xcb);
        EXPECT(gbc.readMem(0xa8eb), 0x9a);
        // CB 9A 02FA
        gbc.setState(0xd892, 0x41f1, 0xb630, 0x556b, 0x7cb3, 0x5087, 0x1, 0x0);
        gbc.writeMem(0xd892, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x41f1);
        EXPECT(gbc.pc(), 0xd894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd892), 0xcb);
        EXPECT(gbc.readMem(0xd893), 0x9a);
        // CB 9A 02FB
        gbc.setState(0x1cf7, 0x734c, 0x7c10, 0x82be, 0xa18e, 0xe0c1, 0x0, 0x0);
        gbc.writeMem(0x1cf7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x734c);
        EXPECT(gbc.pc(), 0x1cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 02FC
        gbc.setState(0x3b47, 0x3e30, 0xf7c0, 0x5537, 0xe6a2, 0xdb56, 0x1, 0x0);
        gbc.writeMem(0x3b47, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3e30);
        EXPECT(gbc.pc(), 0x3b49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02FD
        gbc.setState(0xca7, 0x9373, 0x6280, 0xae78, 0xa9ec, 0xcd8, 0x1, 0x0);
        gbc.writeMem(0xca7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9373);
        EXPECT(gbc.pc(), 0xca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 02FE
        gbc.setState(0xbc14, 0x9185, 0xff80, 0xf0c0, 0xe6bf, 0x1bef, 0x1, 0x1);
        gbc.writeMem(0xbc14, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9185);
        EXPECT(gbc.pc(), 0xbc16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc14), 0xcb);
        EXPECT(gbc.readMem(0xbc15), 0x9a);
        // CB 9A 02FF
        gbc.setState(0x4c18, 0xfcee, 0xb050, 0x2e1d, 0x9dd6, 0xbc7d, 0x0, 0x1);
        gbc.writeMem(0x4c18, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfcee);
        EXPECT(gbc.pc(), 0x4c1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0300
        gbc.setState(0x8178, 0x5b6, 0x6230, 0x8db7, 0x7655, 0x1ee, 0x1, 0x0);
        gbc.writeMem(0x8178, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5b6);
        EXPECT(gbc.pc(), 0x817a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8178), 0xcb);
        EXPECT(gbc.readMem(0x8179), 0x9a);
        // CB 9A 0301
        gbc.setState(0x11da, 0xc55, 0xd370, 0xc2e6, 0x5408, 0x1f55, 0x1, 0x0);
        gbc.writeMem(0x11da, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc55);
        EXPECT(gbc.pc(), 0x11dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0304
        gbc.setState(0x37e0, 0x37c9, 0x28b0, 0x73a8, 0x5776, 0x9571, 0x1, 0x1);
        gbc.writeMem(0x37e0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x37c9);
        EXPECT(gbc.pc(), 0x37e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0305
        gbc.setState(0x9ce5, 0x4449, 0xc900, 0x115, 0xb406, 0x9918, 0x1, 0x0);
        gbc.writeMem(0x9ce5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4449);
        EXPECT(gbc.pc(), 0x9ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ce5), 0xcb);
        EXPECT(gbc.readMem(0x9ce6), 0x9a);
        // CB 9A 0306
        gbc.setState(0xb4bd, 0xa40e, 0x3590, 0x3ce1, 0x143c, 0x199f, 0x1, 0x1);
        gbc.writeMem(0xb4bd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa40e);
        EXPECT(gbc.pc(), 0xb4bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4bd), 0xcb);
        EXPECT(gbc.readMem(0xb4be), 0x9a);
        // CB 9A 0307
        gbc.setState(0x1d4d, 0x9631, 0xeb10, 0x2e0e, 0x7d46, 0x24f4, 0x1, 0x0);
        gbc.writeMem(0x1d4d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9631);
        EXPECT(gbc.pc(), 0x1d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0308
        gbc.setState(0x1a79, 0x4afe, 0x9060, 0x1862, 0x4a0d, 0xa0a6, 0x1, 0x0);
        gbc.writeMem(0x1a79, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4afe);
        EXPECT(gbc.pc(), 0x1a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0309
        gbc.setState(0xe313, 0x51da, 0xda00, 0xd08e, 0x71eb, 0xfb2e, 0x0, 0x0);
        gbc.writeMem(0xe313, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x51da);
        EXPECT(gbc.pc(), 0xe315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe313), 0xcb);
        EXPECT(gbc.readMem(0xe314), 0x9a);
        // CB 9A 030A
        gbc.setState(0xc0f, 0x99bd, 0x3320, 0x2e30, 0xa98e, 0x59fa, 0x0, 0x0);
        gbc.writeMem(0xc0f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x99bd);
        EXPECT(gbc.pc(), 0xc11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 030C
        gbc.setState(0x3239, 0xd5a0, 0xc0f0, 0xa59a, 0xcfa9, 0x8fe2, 0x0, 0x0);
        gbc.writeMem(0x3239, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd5a0);
        EXPECT(gbc.pc(), 0x323b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 030D
        gbc.setState(0x7139, 0xc2ac, 0xc330, 0x7006, 0x5e3c, 0xf4d6, 0x0, 0x1);
        gbc.writeMem(0x7139, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc2ac);
        EXPECT(gbc.pc(), 0x713b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 030E
        gbc.setState(0x696f, 0x766, 0xbab0, 0x4b2b, 0x266f, 0x7d6a, 0x1, 0x1);
        gbc.writeMem(0x696f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x766);
        EXPECT(gbc.pc(), 0x6971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 030F
        gbc.setState(0x22e0, 0x7c20, 0xffd0, 0xb9e, 0x5ef6, 0x9ec1, 0x1, 0x0);
        gbc.writeMem(0x22e0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7c20);
        EXPECT(gbc.pc(), 0x22e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0310
        gbc.setState(0x6425, 0x80c9, 0x6d60, 0xa37a, 0x933b, 0x346f, 0x1, 0x0);
        gbc.writeMem(0x6425, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x80c9);
        EXPECT(gbc.pc(), 0x6427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0311
        gbc.setState(0x1e60, 0x6fdb, 0xdad0, 0xa2b3, 0x7d90, 0x442b, 0x0, 0x0);
        gbc.writeMem(0x1e60, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6fdb);
        EXPECT(gbc.pc(), 0x1e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0312
        gbc.setState(0xdc0e, 0x2038, 0xf6a0, 0x5a1e, 0x9b7b, 0xdee8, 0x1, 0x1);
        gbc.writeMem(0xdc0e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2038);
        EXPECT(gbc.pc(), 0xdc10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc0e), 0xcb);
        EXPECT(gbc.readMem(0xdc0f), 0x9a);
        // CB 9A 0313
        gbc.setState(0x39a7, 0xcaa2, 0x9320, 0x4be1, 0xf927, 0xe2f3, 0x1, 0x1);
        gbc.writeMem(0x39a7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcaa2);
        EXPECT(gbc.pc(), 0x39a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0314
        gbc.setState(0x8afd, 0x2632, 0x6a90, 0x9fe8, 0x85e4, 0x96ca, 0x0, 0x0);
        gbc.writeMem(0x8afd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2632);
        EXPECT(gbc.pc(), 0x8aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8afd), 0xcb);
        EXPECT(gbc.readMem(0x8afe), 0x9a);
        // CB 9A 0315
        gbc.setState(0xc624, 0x5712, 0x9f70, 0xb300, 0x3493, 0xf517, 0x0, 0x0);
        gbc.writeMem(0xc624, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5712);
        EXPECT(gbc.pc(), 0xc626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc624), 0xcb);
        EXPECT(gbc.readMem(0xc625), 0x9a);
        // CB 9A 0316
        gbc.setState(0x9772, 0xdc24, 0xb230, 0xd826, 0xd1ce, 0xd69f, 0x1, 0x1);
        gbc.writeMem(0x9772, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xdc24);
        EXPECT(gbc.pc(), 0x9774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9772), 0xcb);
        EXPECT(gbc.readMem(0x9773), 0x9a);
        // CB 9A 0317
        gbc.setState(0xdfd6, 0xb118, 0xf80, 0x7596, 0x45eb, 0xd694, 0x0, 0x1);
        gbc.writeMem(0xdfd6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb118);
        EXPECT(gbc.pc(), 0xdfd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfd6), 0xcb);
        EXPECT(gbc.readMem(0xdfd7), 0x9a);
        // CB 9A 0318
        gbc.setState(0x5b0b, 0xa205, 0x1b70, 0xfc2e, 0xcd66, 0x673b, 0x1, 0x1);
        gbc.writeMem(0x5b0b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa205);
        EXPECT(gbc.pc(), 0x5b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 031A
        gbc.setState(0xcfe8, 0xf306, 0x28d0, 0x254e, 0x3961, 0x8d75, 0x0, 0x0);
        gbc.writeMem(0xcfe8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf306);
        EXPECT(gbc.pc(), 0xcfea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe8), 0xcb);
        EXPECT(gbc.readMem(0xcfe9), 0x9a);
        // CB 9A 031B
        gbc.setState(0xbdf, 0x5dd3, 0x8370, 0xc615, 0x8e19, 0x6cd2, 0x0, 0x0);
        gbc.writeMem(0xbdf, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5dd3);
        EXPECT(gbc.pc(), 0xbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 031C
        gbc.setState(0x8767, 0xf390, 0xd290, 0x61f4, 0x591, 0xf67f, 0x0, 0x0);
        gbc.writeMem(0x8767, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf390);
        EXPECT(gbc.pc(), 0x8769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8767), 0xcb);
        EXPECT(gbc.readMem(0x8768), 0x9a);
        // CB 9A 031D
        gbc.setState(0xc282, 0xcd4e, 0xfeb0, 0x2703, 0xe02c, 0x801d, 0x0, 0x0);
        gbc.writeMem(0xc282, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xcd4e);
        EXPECT(gbc.pc(), 0xc284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc282), 0xcb);
        EXPECT(gbc.readMem(0xc283), 0x9a);
        // CB 9A 031F
        gbc.setState(0x4523, 0x73ab, 0x8f50, 0x335b, 0x644a, 0x6cf3, 0x0, 0x1);
        gbc.writeMem(0x4523, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x73ab);
        EXPECT(gbc.pc(), 0x4525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0320
        gbc.setState(0x77b6, 0x57e5, 0x7360, 0xcb7c, 0xd7df, 0xb318, 0x1, 0x1);
        gbc.writeMem(0x77b6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x57e5);
        EXPECT(gbc.pc(), 0x77b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0321
        gbc.setState(0x53d1, 0x3c0f, 0xe8a0, 0x6e22, 0x2275, 0x3f3, 0x0, 0x1);
        gbc.writeMem(0x53d1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3c0f);
        EXPECT(gbc.pc(), 0x53d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0322
        gbc.setState(0x2e71, 0x3eba, 0x6350, 0x9fc5, 0x240a, 0xb251, 0x1, 0x1);
        gbc.writeMem(0x2e71, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3eba);
        EXPECT(gbc.pc(), 0x2e73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0323
        gbc.setState(0x75c5, 0xe15, 0xa8b0, 0x7773, 0x9efd, 0x7d73, 0x0, 0x1);
        gbc.writeMem(0x75c5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe15);
        EXPECT(gbc.pc(), 0x75c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0324
        gbc.setState(0x6f7, 0x49e4, 0x3ae0, 0xad87, 0x377e, 0x7cf1, 0x1, 0x0);
        gbc.writeMem(0x6f7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x49e4);
        EXPECT(gbc.pc(), 0x6f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0325
        gbc.setState(0x742, 0x24, 0xd0b0, 0x8c1, 0x5265, 0x6ab2, 0x0, 0x1);
        gbc.writeMem(0x742, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x24);
        EXPECT(gbc.pc(), 0x744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0326
        gbc.setState(0xac5f, 0x164e, 0xde70, 0x2a31, 0x1cda, 0xb3e0, 0x0, 0x0);
        gbc.writeMem(0xac5f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x164e);
        EXPECT(gbc.pc(), 0xac61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac5f), 0xcb);
        EXPECT(gbc.readMem(0xac60), 0x9a);
        // CB 9A 0327
        gbc.setState(0xedb2, 0x36ca, 0x48c0, 0x6b99, 0x3c68, 0xba73, 0x1, 0x1);
        gbc.writeMem(0xedb2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x36ca);
        EXPECT(gbc.pc(), 0xedb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb2), 0xcb);
        EXPECT(gbc.readMem(0xedb3), 0x9a);
        // CB 9A 0328
        gbc.setState(0x922c, 0x1359, 0x1d00, 0xccbd, 0xbac7, 0x2dd1, 0x0, 0x0);
        gbc.writeMem(0x922c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1359);
        EXPECT(gbc.pc(), 0x922e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x922c), 0xcb);
        EXPECT(gbc.readMem(0x922d), 0x9a);
        // CB 9A 0329
        gbc.setState(0xdd5c, 0x4dd1, 0x36f0, 0xaf02, 0xdb24, 0x1c68, 0x0, 0x1);
        gbc.writeMem(0xdd5c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4dd1);
        EXPECT(gbc.pc(), 0xdd5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd5c), 0xcb);
        EXPECT(gbc.readMem(0xdd5d), 0x9a);
        // CB 9A 032A
        gbc.setState(0x5afe, 0x16f3, 0xfe30, 0x7029, 0x676e, 0xa20c, 0x1, 0x1);
        gbc.writeMem(0x5afe, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x16f3);
        EXPECT(gbc.pc(), 0x5b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 032B
        gbc.setState(0xca2d, 0xb5a0, 0xe0b0, 0x95d0, 0x4341, 0xe6f4, 0x1, 0x1);
        gbc.writeMem(0xca2d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb5a0);
        EXPECT(gbc.pc(), 0xca2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca2d), 0xcb);
        EXPECT(gbc.readMem(0xca2e), 0x9a);
        // CB 9A 032C
        gbc.setState(0xa7cb, 0x88ca, 0xa350, 0x53d2, 0x7b8a, 0x1c8f, 0x1, 0x1);
        gbc.writeMem(0xa7cb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x88ca);
        EXPECT(gbc.pc(), 0xa7cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7cb), 0xcb);
        EXPECT(gbc.readMem(0xa7cc), 0x9a);
        // CB 9A 032D
        gbc.setState(0x72bd, 0x4997, 0x390, 0x618c, 0x711a, 0xa453, 0x1, 0x1);
        gbc.writeMem(0x72bd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4997);
        EXPECT(gbc.pc(), 0x72bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 032E
        gbc.setState(0xdeeb, 0xd219, 0xab20, 0x2b06, 0xe7fa, 0xfb91, 0x1, 0x1);
        gbc.writeMem(0xdeeb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd219);
        EXPECT(gbc.pc(), 0xdeed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeeb), 0xcb);
        EXPECT(gbc.readMem(0xdeec), 0x9a);
        // CB 9A 032F
        gbc.setState(0x9b10, 0xbefd, 0x4020, 0xd627, 0x2345, 0xccfb, 0x1, 0x1);
        gbc.writeMem(0x9b10, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbefd);
        EXPECT(gbc.pc(), 0x9b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b10), 0xcb);
        EXPECT(gbc.readMem(0x9b11), 0x9a);
        // CB 9A 0330
        gbc.setState(0xe07, 0x439, 0x6650, 0x9bb8, 0x551c, 0xeac6, 0x0, 0x1);
        gbc.writeMem(0xe07, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x439);
        EXPECT(gbc.pc(), 0xe09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0331
        gbc.setState(0x7da3, 0x6175, 0x8d80, 0xad5c, 0xf681, 0xe53d, 0x0, 0x1);
        gbc.writeMem(0x7da3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6175);
        EXPECT(gbc.pc(), 0x7da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0334
        gbc.setState(0x205, 0x4777, 0x7b60, 0xd93d, 0x9c48, 0x5874, 0x0, 0x1);
        gbc.writeMem(0x205, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4777);
        EXPECT(gbc.pc(), 0x207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0335
        gbc.setState(0x530a, 0x874b, 0xed70, 0x2089, 0xe84b, 0xfcfa, 0x0, 0x1);
        gbc.writeMem(0x530a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x874b);
        EXPECT(gbc.pc(), 0x530c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0336
        gbc.setState(0xb26, 0x3dae, 0x2650, 0xd7a7, 0x7c87, 0x5872, 0x0, 0x1);
        gbc.writeMem(0xb26, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3dae);
        EXPECT(gbc.pc(), 0xb28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0337
        gbc.setState(0x1a25, 0x805f, 0xc8a0, 0x37ee, 0x3bde, 0x3b42, 0x1, 0x1);
        gbc.writeMem(0x1a25, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x805f);
        EXPECT(gbc.pc(), 0x1a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0338
        gbc.setState(0x8686, 0x650b, 0x3b70, 0x6237, 0xad1b, 0x2894, 0x1, 0x0);
        gbc.writeMem(0x8686, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x650b);
        EXPECT(gbc.pc(), 0x8688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8686), 0xcb);
        EXPECT(gbc.readMem(0x8687), 0x9a);
        // CB 9A 0339
        gbc.setState(0x6bff, 0x4fec, 0xbc60, 0x4528, 0xbdab, 0x4fbe, 0x1, 0x1);
        gbc.writeMem(0x6bff, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4fec);
        EXPECT(gbc.pc(), 0x6c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 033A
        gbc.setState(0x851d, 0x21b6, 0xf4f0, 0x947a, 0x3c82, 0x6fdb, 0x1, 0x0);
        gbc.writeMem(0x851d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x21b6);
        EXPECT(gbc.pc(), 0x851f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x851d), 0xcb);
        EXPECT(gbc.readMem(0x851e), 0x9a);
        // CB 9A 033B
        gbc.setState(0xbae5, 0x196, 0x9630, 0x3b25, 0xf34e, 0x4824, 0x0, 0x0);
        gbc.writeMem(0xbae5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x196);
        EXPECT(gbc.pc(), 0xbae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbae5), 0xcb);
        EXPECT(gbc.readMem(0xbae6), 0x9a);
        // CB 9A 033C
        gbc.setState(0xab8d, 0xe6a, 0xb140, 0x4c73, 0x7e5e, 0x6f47, 0x1, 0x1);
        gbc.writeMem(0xab8d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe6a);
        EXPECT(gbc.pc(), 0xab8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab8d), 0xcb);
        EXPECT(gbc.readMem(0xab8e), 0x9a);
        // CB 9A 033D
        gbc.setState(0x6687, 0x47ef, 0x3650, 0x526f, 0x13e6, 0x44a2, 0x1, 0x0);
        gbc.writeMem(0x6687, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x47ef);
        EXPECT(gbc.pc(), 0x6689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 033E
        gbc.setState(0x96ec, 0x683, 0x9c90, 0x9f7a, 0xa83f, 0x9c1a, 0x1, 0x0);
        gbc.writeMem(0x96ec, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x683);
        EXPECT(gbc.pc(), 0x96ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ec), 0xcb);
        EXPECT(gbc.readMem(0x96ed), 0x9a);
        // CB 9A 033F
        gbc.setState(0xbab4, 0x402d, 0xfb60, 0xfc88, 0xd74c, 0xece6, 0x1, 0x1);
        gbc.writeMem(0xbab4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x402d);
        EXPECT(gbc.pc(), 0xbab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab4), 0xcb);
        EXPECT(gbc.readMem(0xbab5), 0x9a);
        // CB 9A 0340
        gbc.setState(0x2180, 0xb9e4, 0x70e0, 0x17c3, 0x3d4f, 0x4a38, 0x0, 0x0);
        gbc.writeMem(0x2180, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb9e4);
        EXPECT(gbc.pc(), 0x2182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0341
        gbc.setState(0x97ba, 0x6441, 0x4f50, 0x5443, 0xfa05, 0xf21d, 0x0, 0x1);
        gbc.writeMem(0x97ba, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6441);
        EXPECT(gbc.pc(), 0x97bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ba), 0xcb);
        EXPECT(gbc.readMem(0x97bb), 0x9a);
        // CB 9A 0342
        gbc.setState(0xb545, 0xbdf4, 0xe570, 0xda20, 0xf80d, 0xd5a5, 0x1, 0x1);
        gbc.writeMem(0xb545, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbdf4);
        EXPECT(gbc.pc(), 0xb547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb545), 0xcb);
        EXPECT(gbc.readMem(0xb546), 0x9a);
        // CB 9A 0343
        gbc.setState(0x7c1b, 0xa097, 0x9770, 0x96da, 0xb03e, 0x8fc, 0x0, 0x1);
        gbc.writeMem(0x7c1b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa097);
        EXPECT(gbc.pc(), 0x7c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0344
        gbc.setState(0x79c5, 0x3128, 0x9590, 0xd731, 0x2a22, 0x5fc2, 0x0, 0x0);
        gbc.writeMem(0x79c5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3128);
        EXPECT(gbc.pc(), 0x79c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0345
        gbc.setState(0xcbc7, 0x2aaa, 0x3b70, 0xe985, 0x7e6, 0xfd3, 0x1, 0x1);
        gbc.writeMem(0xcbc7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2aaa);
        EXPECT(gbc.pc(), 0xcbc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbc7), 0xcb);
        EXPECT(gbc.readMem(0xcbc8), 0x9a);
        // CB 9A 0346
        gbc.setState(0x8acd, 0x4aee, 0xd6f0, 0xd3b8, 0x73e3, 0x5499, 0x0, 0x0);
        gbc.writeMem(0x8acd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4aee);
        EXPECT(gbc.pc(), 0x8acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8acd), 0xcb);
        EXPECT(gbc.readMem(0x8ace), 0x9a);
        // CB 9A 0347
        gbc.setState(0x7ce7, 0x8d06, 0x96d0, 0x8399, 0xf894, 0xc47b, 0x0, 0x1);
        gbc.writeMem(0x7ce7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8d06);
        EXPECT(gbc.pc(), 0x7ce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0348
        gbc.setState(0xe322, 0xf3a6, 0x23f0, 0x3894, 0xd85b, 0xea1a, 0x0, 0x0);
        gbc.writeMem(0xe322, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf3a6);
        EXPECT(gbc.pc(), 0xe324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe322), 0xcb);
        EXPECT(gbc.readMem(0xe323), 0x9a);
        // CB 9A 0349
        gbc.setState(0xdada, 0x66c6, 0xe7e0, 0x82ea, 0x2230, 0x1fd2, 0x1, 0x1);
        gbc.writeMem(0xdada, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x66c6);
        EXPECT(gbc.pc(), 0xdadc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdada), 0xcb);
        EXPECT(gbc.readMem(0xdadb), 0x9a);
        // CB 9A 034A
        gbc.setState(0x4a2b, 0x5d83, 0x82b0, 0xf1f1, 0x8328, 0x9b88, 0x1, 0x0);
        gbc.writeMem(0x4a2b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5d83);
        EXPECT(gbc.pc(), 0x4a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 034B
        gbc.setState(0xe526, 0xbb79, 0xa0, 0x8bd2, 0x76c9, 0x5902, 0x1, 0x0);
        gbc.writeMem(0xe526, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbb79);
        EXPECT(gbc.pc(), 0xe528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe526), 0xcb);
        EXPECT(gbc.readMem(0xe527), 0x9a);
        // CB 9A 034C
        gbc.setState(0x1c33, 0x6008, 0x3070, 0xb26, 0x9ce2, 0x3594, 0x1, 0x0);
        gbc.writeMem(0x1c33, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6008);
        EXPECT(gbc.pc(), 0x1c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 034D
        gbc.setState(0x934b, 0xe913, 0x5e70, 0x3092, 0x7280, 0x77a2, 0x1, 0x0);
        gbc.writeMem(0x934b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe913);
        EXPECT(gbc.pc(), 0x934d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x934b), 0xcb);
        EXPECT(gbc.readMem(0x934c), 0x9a);
        // CB 9A 034E
        gbc.setState(0xadf2, 0x2e0e, 0x8ed0, 0xaffb, 0xd91c, 0xcd68, 0x0, 0x0);
        gbc.writeMem(0xadf2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2e0e);
        EXPECT(gbc.pc(), 0xadf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf2), 0xcb);
        EXPECT(gbc.readMem(0xadf3), 0x9a);
        // CB 9A 034F
        gbc.setState(0xb093, 0x5aa6, 0x3fd0, 0x7175, 0x9561, 0x2c74, 0x0, 0x1);
        gbc.writeMem(0xb093, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5aa6);
        EXPECT(gbc.pc(), 0xb095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb093), 0xcb);
        EXPECT(gbc.readMem(0xb094), 0x9a);
        // CB 9A 0350
        gbc.setState(0xb6d, 0x7690, 0x59f0, 0x1b3d, 0x7b27, 0xaa51, 0x0, 0x0);
        gbc.writeMem(0xb6d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7690);
        EXPECT(gbc.pc(), 0xb6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0351
        gbc.setState(0xb6dd, 0x706d, 0xfba0, 0xebfe, 0x1da7, 0x2dfa, 0x0, 0x0);
        gbc.writeMem(0xb6dd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x706d);
        EXPECT(gbc.pc(), 0xb6df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6dd), 0xcb);
        EXPECT(gbc.readMem(0xb6de), 0x9a);
        // CB 9A 0352
        gbc.setState(0x1682, 0x87c1, 0x2350, 0x6e93, 0xca61, 0x3f35, 0x0, 0x0);
        gbc.writeMem(0x1682, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x87c1);
        EXPECT(gbc.pc(), 0x1684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0353
        gbc.setState(0x7d32, 0x3b48, 0x2d90, 0x618f, 0x2439, 0x2c26, 0x1, 0x1);
        gbc.writeMem(0x7d32, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3b48);
        EXPECT(gbc.pc(), 0x7d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0354
        gbc.setState(0x8cd7, 0xd45e, 0x4f50, 0xf72b, 0x20e1, 0x3d39, 0x0, 0x0);
        gbc.writeMem(0x8cd7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd45e);
        EXPECT(gbc.pc(), 0x8cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd7), 0xcb);
        EXPECT(gbc.readMem(0x8cd8), 0x9a);
        // CB 9A 0355
        gbc.setState(0x7314, 0x8971, 0x2d40, 0xcf8c, 0xaaee, 0x7dd9, 0x0, 0x0);
        gbc.writeMem(0x7314, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8971);
        EXPECT(gbc.pc(), 0x7316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0356
        gbc.setState(0x6500, 0x21b, 0x810, 0xbc7e, 0xeea5, 0x4aa3, 0x1, 0x0);
        gbc.writeMem(0x6500, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x21b);
        EXPECT(gbc.pc(), 0x6502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0357
        gbc.setState(0xc887, 0xd808, 0x7f00, 0x8a9b, 0xf676, 0xe977, 0x0, 0x0);
        gbc.writeMem(0xc887, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd808);
        EXPECT(gbc.pc(), 0xc889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc887), 0xcb);
        EXPECT(gbc.readMem(0xc888), 0x9a);
        // CB 9A 0358
        gbc.setState(0x8bd2, 0x88c9, 0xf550, 0x7872, 0xfa80, 0xa73, 0x1, 0x1);
        gbc.writeMem(0x8bd2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x88c9);
        EXPECT(gbc.pc(), 0x8bd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd2), 0xcb);
        EXPECT(gbc.readMem(0x8bd3), 0x9a);
        // CB 9A 0359
        gbc.setState(0x987e, 0x92e0, 0x2ca0, 0xa86b, 0xb73d, 0xf12c, 0x1, 0x0);
        gbc.writeMem(0x987e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x92e0);
        EXPECT(gbc.pc(), 0x9880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x987e), 0xcb);
        EXPECT(gbc.readMem(0x987f), 0x9a);
        // CB 9A 035A
        gbc.setState(0x4e4d, 0x496d, 0x80f0, 0x5c1c, 0x893e, 0xb548, 0x1, 0x1);
        gbc.writeMem(0x4e4d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x496d);
        EXPECT(gbc.pc(), 0x4e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 035B
        gbc.setState(0xce13, 0x17ee, 0x2660, 0xa2a5, 0x14d8, 0x1b55, 0x1, 0x0);
        gbc.writeMem(0xce13, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x17ee);
        EXPECT(gbc.pc(), 0xce15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce13), 0xcb);
        EXPECT(gbc.readMem(0xce14), 0x9a);
        // CB 9A 035C
        gbc.setState(0xd9e0, 0x2433, 0xb000, 0x448a, 0x630b, 0xcfd9, 0x0, 0x1);
        gbc.writeMem(0xd9e0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2433);
        EXPECT(gbc.pc(), 0xd9e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e0), 0xcb);
        EXPECT(gbc.readMem(0xd9e1), 0x9a);
        // CB 9A 035D
        gbc.setState(0x884, 0x4203, 0xfa10, 0xee26, 0x996e, 0x618d, 0x0, 0x1);
        gbc.writeMem(0x884, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4203);
        EXPECT(gbc.pc(), 0x886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 035E
        gbc.setState(0x89f0, 0x6e81, 0x7b10, 0x4f27, 0x881, 0xf9df, 0x0, 0x0);
        gbc.writeMem(0x89f0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6e81);
        EXPECT(gbc.pc(), 0x89f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89f0), 0xcb);
        EXPECT(gbc.readMem(0x89f1), 0x9a);
        // CB 9A 0360
        gbc.setState(0xc514, 0x55ef, 0x98b0, 0x8a5f, 0xe7b, 0x43ad, 0x0, 0x0);
        gbc.writeMem(0xc514, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x55ef);
        EXPECT(gbc.pc(), 0xc516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc514), 0xcb);
        EXPECT(gbc.readMem(0xc515), 0x9a);
        // CB 9A 0361
        gbc.setState(0xb868, 0x34c5, 0x76e0, 0x75d1, 0xba80, 0x7565, 0x0, 0x0);
        gbc.writeMem(0xb868, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x34c5);
        EXPECT(gbc.pc(), 0xb86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb868), 0xcb);
        EXPECT(gbc.readMem(0xb869), 0x9a);
        // CB 9A 0362
        gbc.setState(0x1663, 0x6a08, 0x8430, 0xd225, 0xdb3d, 0xf72b, 0x1, 0x1);
        gbc.writeMem(0x1663, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6a08);
        EXPECT(gbc.pc(), 0x1665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0363
        gbc.setState(0x44b0, 0x390e, 0x3670, 0x6c75, 0xe453, 0xfdf1, 0x1, 0x1);
        gbc.writeMem(0x44b0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x390e);
        EXPECT(gbc.pc(), 0x44b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0364
        gbc.setState(0xbc35, 0x7044, 0x3a80, 0x4e42, 0xec08, 0xaa7d, 0x0, 0x1);
        gbc.writeMem(0xbc35, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7044);
        EXPECT(gbc.pc(), 0xbc37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc35), 0xcb);
        EXPECT(gbc.readMem(0xbc36), 0x9a);
        // CB 9A 0365
        gbc.setState(0xdf61, 0x77b6, 0xf20, 0x5235, 0x8001, 0x1925, 0x0, 0x0);
        gbc.writeMem(0xdf61, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x77b6);
        EXPECT(gbc.pc(), 0xdf63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf61), 0xcb);
        EXPECT(gbc.readMem(0xdf62), 0x9a);
        // CB 9A 0366
        gbc.setState(0x71ca, 0xe5cc, 0xaf50, 0x84ef, 0x74a9, 0xf5cd, 0x1, 0x1);
        gbc.writeMem(0x71ca, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe5cc);
        EXPECT(gbc.pc(), 0x71cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0367
        gbc.setState(0x708, 0xf483, 0xbbc0, 0xaabf, 0x2764, 0x8e4c, 0x0, 0x1);
        gbc.writeMem(0x708, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf483);
        EXPECT(gbc.pc(), 0x70a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0368
        gbc.setState(0xd7e4, 0xd1dc, 0x4640, 0x7bdb, 0xe162, 0xb1e6, 0x1, 0x0);
        gbc.writeMem(0xd7e4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd1dc);
        EXPECT(gbc.pc(), 0xd7e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e4), 0xcb);
        EXPECT(gbc.readMem(0xd7e5), 0x9a);
        // CB 9A 0369
        gbc.setState(0x4b9d, 0xae7a, 0xa210, 0xb6d0, 0xc670, 0x8511, 0x1, 0x0);
        gbc.writeMem(0x4b9d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xae7a);
        EXPECT(gbc.pc(), 0x4b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 036A
        gbc.setState(0x6d59, 0x455d, 0x3780, 0x34ee, 0x3cdf, 0xbc26, 0x0, 0x1);
        gbc.writeMem(0x6d59, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x455d);
        EXPECT(gbc.pc(), 0x6d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 036B
        gbc.setState(0xada5, 0xc118, 0x47c0, 0x2179, 0x717a, 0x6d7a, 0x1, 0x1);
        gbc.writeMem(0xada5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc118);
        EXPECT(gbc.pc(), 0xada7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada5), 0xcb);
        EXPECT(gbc.readMem(0xada6), 0x9a);
        // CB 9A 036C
        gbc.setState(0x1887, 0x416d, 0xa580, 0x23fc, 0x90ec, 0x9ae7, 0x1, 0x1);
        gbc.writeMem(0x1887, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x416d);
        EXPECT(gbc.pc(), 0x1889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 036D
        gbc.setState(0xaf8e, 0x18, 0x8150, 0xc0e1, 0xee44, 0xf533, 0x1, 0x1);
        gbc.writeMem(0xaf8e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x18);
        EXPECT(gbc.pc(), 0xaf90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf8e), 0xcb);
        EXPECT(gbc.readMem(0xaf8f), 0x9a);
        // CB 9A 036F
        gbc.setState(0x8e3a, 0xeae3, 0xf300, 0x8221, 0x3d92, 0xbbe9, 0x0, 0x0);
        gbc.writeMem(0x8e3a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xeae3);
        EXPECT(gbc.pc(), 0x8e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3a), 0xcb);
        EXPECT(gbc.readMem(0x8e3b), 0x9a);
        // CB 9A 0370
        gbc.setState(0x44d5, 0xd57c, 0x5590, 0x9c50, 0x104d, 0x6be3, 0x0, 0x0);
        gbc.writeMem(0x44d5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd57c);
        EXPECT(gbc.pc(), 0x44d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0371
        gbc.setState(0x7c92, 0x129, 0x8290, 0x83be, 0xdff7, 0x54a9, 0x1, 0x1);
        gbc.writeMem(0x7c92, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x129);
        EXPECT(gbc.pc(), 0x7c94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0372
        gbc.setState(0x6a3b, 0x720b, 0x9090, 0xdf27, 0x9a46, 0xab78, 0x1, 0x0);
        gbc.writeMem(0x6a3b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x720b);
        EXPECT(gbc.pc(), 0x6a3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0373
        gbc.setState(0x69e5, 0x9578, 0x5500, 0x3d00, 0xcc57, 0xe8de, 0x1, 0x1);
        gbc.writeMem(0x69e5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9578);
        EXPECT(gbc.pc(), 0x69e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0374
        gbc.setState(0x1810, 0x8f38, 0xb530, 0x7206, 0x1138, 0xd8d6, 0x1, 0x0);
        gbc.writeMem(0x1810, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8f38);
        EXPECT(gbc.pc(), 0x1812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0375
        gbc.setState(0x5c6d, 0x8e87, 0xd0b0, 0x9f98, 0x278c, 0x806a, 0x0, 0x1);
        gbc.writeMem(0x5c6d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8e87);
        EXPECT(gbc.pc(), 0x5c6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0376
        gbc.setState(0x9f0e, 0x852c, 0xaf20, 0x45ba, 0xb1f8, 0x3bfe, 0x0, 0x0);
        gbc.writeMem(0x9f0e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x852c);
        EXPECT(gbc.pc(), 0x9f10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f0e), 0xcb);
        EXPECT(gbc.readMem(0x9f0f), 0x9a);
        // CB 9A 0377
        gbc.setState(0x2758, 0xa7ff, 0x2110, 0x9cf2, 0x9ee, 0x1993, 0x1, 0x0);
        gbc.writeMem(0x2758, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa7ff);
        EXPECT(gbc.pc(), 0x275a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0378
        gbc.setState(0x51c3, 0x11e6, 0x200, 0x5e8, 0xe22e, 0xd0fc, 0x1, 0x1);
        gbc.writeMem(0x51c3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x11e6);
        EXPECT(gbc.pc(), 0x51c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 037A
        gbc.setState(0x3fbf, 0xe431, 0x1710, 0x9b14, 0xcf4b, 0x5767, 0x0, 0x1);
        gbc.writeMem(0x3fbf, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe431);
        EXPECT(gbc.pc(), 0x3fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 037B
        gbc.setState(0xa1e8, 0xdfe, 0x1b70, 0x7436, 0x18b2, 0xc3ee, 0x0, 0x1);
        gbc.writeMem(0xa1e8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdfe);
        EXPECT(gbc.pc(), 0xa1ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1e8), 0xcb);
        EXPECT(gbc.readMem(0xa1e9), 0x9a);
        // CB 9A 037C
        gbc.setState(0xd2f1, 0xc27c, 0xa9e0, 0x12fb, 0xaa9a, 0x6137, 0x1, 0x0);
        gbc.writeMem(0xd2f1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc27c);
        EXPECT(gbc.pc(), 0xd2f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2f1), 0xcb);
        EXPECT(gbc.readMem(0xd2f2), 0x9a);
        // CB 9A 037D
        gbc.setState(0xa812, 0x15ef, 0xb570, 0x21aa, 0x4489, 0xdbdc, 0x1, 0x1);
        gbc.writeMem(0xa812, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x15ef);
        EXPECT(gbc.pc(), 0xa814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa812), 0xcb);
        EXPECT(gbc.readMem(0xa813), 0x9a);
        // CB 9A 037E
        gbc.setState(0x538, 0xdbf4, 0xdd70, 0x3002, 0x7149, 0x735e, 0x0, 0x0);
        gbc.writeMem(0x538, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xdbf4);
        EXPECT(gbc.pc(), 0x53a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 037F
        gbc.setState(0xa1e5, 0x2d82, 0x5c40, 0x6ec4, 0xff49, 0x8990, 0x0, 0x0);
        gbc.writeMem(0xa1e5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2d82);
        EXPECT(gbc.pc(), 0xa1e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e5), 0xcb);
        EXPECT(gbc.readMem(0xa1e6), 0x9a);
        // CB 9A 0380
        gbc.setState(0x25b4, 0xcfa7, 0x6c30, 0x72c1, 0x69b6, 0xa426, 0x1, 0x1);
        gbc.writeMem(0x25b4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcfa7);
        EXPECT(gbc.pc(), 0x25b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0381
        gbc.setState(0xc666, 0xd20f, 0xadc0, 0xb723, 0x3f5e, 0xc4bf, 0x1, 0x1);
        gbc.writeMem(0xc666, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd20f);
        EXPECT(gbc.pc(), 0xc668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc666), 0xcb);
        EXPECT(gbc.readMem(0xc667), 0x9a);
        // CB 9A 0382
        gbc.setState(0xdf4a, 0x8fa9, 0x87a0, 0xfd64, 0x59a0, 0xe9f2, 0x0, 0x1);
        gbc.writeMem(0xdf4a, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8fa9);
        EXPECT(gbc.pc(), 0xdf4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf4a), 0xcb);
        EXPECT(gbc.readMem(0xdf4b), 0x9a);
        // CB 9A 0383
        gbc.setState(0x1b9c, 0x173d, 0xd110, 0xb3bc, 0x4eaf, 0xd1e6, 0x0, 0x1);
        gbc.writeMem(0x1b9c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x173d);
        EXPECT(gbc.pc(), 0x1b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0384
        gbc.setState(0xb9d0, 0x9bcc, 0xd460, 0x293f, 0x6920, 0x8819, 0x0, 0x0);
        gbc.writeMem(0xb9d0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9bcc);
        EXPECT(gbc.pc(), 0xb9d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d0), 0xcb);
        EXPECT(gbc.readMem(0xb9d1), 0x9a);
        // CB 9A 0385
        gbc.setState(0x7467, 0x6215, 0xeaa0, 0x9a2, 0xcc54, 0xb8ce, 0x0, 0x1);
        gbc.writeMem(0x7467, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6215);
        EXPECT(gbc.pc(), 0x7469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0386
        gbc.setState(0x64dc, 0xad34, 0xf3c0, 0xfe9c, 0xf6ae, 0x192f, 0x1, 0x1);
        gbc.writeMem(0x64dc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xad34);
        EXPECT(gbc.pc(), 0x64de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0387
        gbc.setState(0x6a6f, 0xf5fc, 0xfa10, 0x37e1, 0x4928, 0x14aa, 0x1, 0x1);
        gbc.writeMem(0x6a6f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf5fc);
        EXPECT(gbc.pc(), 0x6a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0388
        gbc.setState(0x9cde, 0x8f64, 0xc8d0, 0x320e, 0xed7e, 0xc395, 0x0, 0x0);
        gbc.writeMem(0x9cde, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8f64);
        EXPECT(gbc.pc(), 0x9ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cde), 0xcb);
        EXPECT(gbc.readMem(0x9cdf), 0x9a);
        // CB 9A 0389
        gbc.setState(0x8ed3, 0x8f97, 0xd2c0, 0x4406, 0x8270, 0x96d9, 0x1, 0x0);
        gbc.writeMem(0x8ed3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8f97);
        EXPECT(gbc.pc(), 0x8ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed3), 0xcb);
        EXPECT(gbc.readMem(0x8ed4), 0x9a);
        // CB 9A 038A
        gbc.setState(0x820f, 0x8ce1, 0xb8d0, 0x586b, 0x753a, 0x2718, 0x0, 0x1);
        gbc.writeMem(0x820f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8ce1);
        EXPECT(gbc.pc(), 0x8211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x820f), 0xcb);
        EXPECT(gbc.readMem(0x8210), 0x9a);
        // CB 9A 038B
        gbc.setState(0x5ac1, 0x3e10, 0x2e50, 0x741, 0x310a, 0xad02, 0x1, 0x0);
        gbc.writeMem(0x5ac1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3e10);
        EXPECT(gbc.pc(), 0x5ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 038C
        gbc.setState(0xe1c, 0x22d1, 0x7d50, 0xa912, 0xaa03, 0xcbbb, 0x1, 0x1);
        gbc.writeMem(0xe1c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x22d1);
        EXPECT(gbc.pc(), 0xe1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 038D
        gbc.setState(0x76f, 0x7468, 0xe40, 0x1dd2, 0xcbce, 0x38ff, 0x1, 0x0);
        gbc.writeMem(0x76f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7468);
        EXPECT(gbc.pc(), 0x771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 038F
        gbc.setState(0x7825, 0xb1c3, 0x61a0, 0x1ee6, 0x91b3, 0x32e9, 0x0, 0x1);
        gbc.writeMem(0x7825, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb1c3);
        EXPECT(gbc.pc(), 0x7827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0390
        gbc.setState(0xbe9, 0xf1a6, 0x9210, 0x50a7, 0xaa74, 0xa14, 0x1, 0x0);
        gbc.writeMem(0xbe9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf1a6);
        EXPECT(gbc.pc(), 0xbeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0391
        gbc.setState(0xaf41, 0x66fc, 0x96f0, 0x27a8, 0x160a, 0x960e, 0x1, 0x1);
        gbc.writeMem(0xaf41, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x66fc);
        EXPECT(gbc.pc(), 0xaf43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf41), 0xcb);
        EXPECT(gbc.readMem(0xaf42), 0x9a);
        // CB 9A 0392
        gbc.setState(0x41cc, 0x84de, 0x3f40, 0x57d2, 0xf217, 0xf35d, 0x1, 0x1);
        gbc.writeMem(0x41cc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x84de);
        EXPECT(gbc.pc(), 0x41ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 0393
        gbc.setState(0x51b9, 0xc3ba, 0x1ed0, 0x2675, 0x7cf0, 0xbfd8, 0x1, 0x0);
        gbc.writeMem(0x51b9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc3ba);
        EXPECT(gbc.pc(), 0x51bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0394
        gbc.setState(0xa3c5, 0x5cf6, 0xba50, 0x9b18, 0x7ab2, 0x922b, 0x1, 0x0);
        gbc.writeMem(0xa3c5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5cf6);
        EXPECT(gbc.pc(), 0xa3c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c5), 0xcb);
        EXPECT(gbc.readMem(0xa3c6), 0x9a);
        // CB 9A 0395
        gbc.setState(0x89a9, 0x4b8d, 0x770, 0xcffe, 0xffe8, 0xf019, 0x1, 0x1);
        gbc.writeMem(0x89a9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4b8d);
        EXPECT(gbc.pc(), 0x89ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a9), 0xcb);
        EXPECT(gbc.readMem(0x89aa), 0x9a);
        // CB 9A 0396
        gbc.setState(0x5afa, 0xbd4f, 0x33f0, 0xd938, 0x72e0, 0xf935, 0x0, 0x0);
        gbc.writeMem(0x5afa, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbd4f);
        EXPECT(gbc.pc(), 0x5afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0397
        gbc.setState(0xa886, 0x9506, 0x8c90, 0x9e66, 0x2889, 0x4d99, 0x0, 0x1);
        gbc.writeMem(0xa886, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9506);
        EXPECT(gbc.pc(), 0xa888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa886), 0xcb);
        EXPECT(gbc.readMem(0xa887), 0x9a);
        // CB 9A 0398
        gbc.setState(0xbd5, 0xaa4e, 0xc1d0, 0x8e21, 0x9e22, 0x412d, 0x0, 0x0);
        gbc.writeMem(0xbd5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xaa4e);
        EXPECT(gbc.pc(), 0xbd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 0399
        gbc.setState(0xab1e, 0xad0, 0xf4d0, 0xd6b, 0x20e3, 0x50a0, 0x0, 0x0);
        gbc.writeMem(0xab1e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xad0);
        EXPECT(gbc.pc(), 0xab20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1e), 0xcb);
        EXPECT(gbc.readMem(0xab1f), 0x9a);
        // CB 9A 039A
        gbc.setState(0xc276, 0xd52c, 0xf150, 0x567d, 0x53f6, 0x67d, 0x0, 0x1);
        gbc.writeMem(0xc276, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd52c);
        EXPECT(gbc.pc(), 0xc278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc276), 0xcb);
        EXPECT(gbc.readMem(0xc277), 0x9a);
        // CB 9A 039B
        gbc.setState(0x219e, 0x5ee, 0xd470, 0x3bca, 0x1e7c, 0xcfb2, 0x0, 0x0);
        gbc.writeMem(0x219e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5ee);
        EXPECT(gbc.pc(), 0x21a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 039C
        gbc.setState(0x849e, 0x6060, 0xfc10, 0xa8f, 0xfbfd, 0x340a, 0x1, 0x1);
        gbc.writeMem(0x849e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6060);
        EXPECT(gbc.pc(), 0x84a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849e), 0xcb);
        EXPECT(gbc.readMem(0x849f), 0x9a);
        // CB 9A 039D
        gbc.setState(0x6670, 0x7810, 0xd8b0, 0x859d, 0x2e9f, 0xb049, 0x1, 0x0);
        gbc.writeMem(0x6670, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7810);
        EXPECT(gbc.pc(), 0x6672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 039E
        gbc.setState(0xe16d, 0xc17c, 0xe810, 0xb534, 0x3145, 0xfa7f, 0x0, 0x1);
        gbc.writeMem(0xe16d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc17c);
        EXPECT(gbc.pc(), 0xe16f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe16d), 0xcb);
        EXPECT(gbc.readMem(0xe16e), 0x9a);
        // CB 9A 039F
        gbc.setState(0x98c0, 0xbfe3, 0x9550, 0xc981, 0x695f, 0x1949, 0x0, 0x1);
        gbc.writeMem(0x98c0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbfe3);
        EXPECT(gbc.pc(), 0x98c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c0), 0xcb);
        EXPECT(gbc.readMem(0x98c1), 0x9a);
        // CB 9A 03A0
        gbc.setState(0x1097, 0x2d5a, 0x7360, 0xf580, 0xf139, 0x4d96, 0x1, 0x0);
        gbc.writeMem(0x1097, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2d5a);
        EXPECT(gbc.pc(), 0x1099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03A1
        gbc.setState(0x2fa4, 0x71f, 0xa2f0, 0x5f77, 0xb753, 0x370b, 0x0, 0x1);
        gbc.writeMem(0x2fa4, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x71f);
        EXPECT(gbc.pc(), 0x2fa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03A2
        gbc.setState(0x5143, 0x5835, 0x9c00, 0xfd85, 0x3653, 0xf911, 0x0, 0x0);
        gbc.writeMem(0x5143, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5835);
        EXPECT(gbc.pc(), 0x5145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03A3
        gbc.setState(0x4d78, 0x81dc, 0x2190, 0xe4d4, 0xbf57, 0xe92a, 0x1, 0x1);
        gbc.writeMem(0x4d78, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x81dc);
        EXPECT(gbc.pc(), 0x4d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03A4
        gbc.setState(0xae5f, 0x8584, 0xa120, 0x5193, 0x9ebc, 0xe04e, 0x1, 0x0);
        gbc.writeMem(0xae5f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8584);
        EXPECT(gbc.pc(), 0xae61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5f), 0xcb);
        EXPECT(gbc.readMem(0xae60), 0x9a);
        // CB 9A 03A5
        gbc.setState(0x6449, 0x8b7e, 0x460, 0x897a, 0x6188, 0x4f5, 0x1, 0x0);
        gbc.writeMem(0x6449, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8b7e);
        EXPECT(gbc.pc(), 0x644b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03A6
        gbc.setState(0x954f, 0xb80a, 0x3e90, 0x3cb3, 0x406d, 0x63a4, 0x1, 0x1);
        gbc.writeMem(0x954f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb80a);
        EXPECT(gbc.pc(), 0x9551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x954f), 0xcb);
        EXPECT(gbc.readMem(0x9550), 0x9a);
        // CB 9A 03A7
        gbc.setState(0x13fb, 0x5686, 0x2a30, 0xc0f6, 0x8fc4, 0x2874, 0x0, 0x0);
        gbc.writeMem(0x13fb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5686);
        EXPECT(gbc.pc(), 0x13fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03A8
        gbc.setState(0x90a8, 0xab8b, 0x5f30, 0xed2e, 0xd3ef, 0x4588, 0x0, 0x0);
        gbc.writeMem(0x90a8, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xab8b);
        EXPECT(gbc.pc(), 0x90aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a8), 0xcb);
        EXPECT(gbc.readMem(0x90a9), 0x9a);
        // CB 9A 03A9
        gbc.setState(0xc4a5, 0x82b, 0xa800, 0x9786, 0x7649, 0x8dfe, 0x1, 0x1);
        gbc.writeMem(0xc4a5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x82b);
        EXPECT(gbc.pc(), 0xc4a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a5), 0xcb);
        EXPECT(gbc.readMem(0xc4a6), 0x9a);
        // CB 9A 03AA
        gbc.setState(0xb46e, 0xc1e5, 0x1e50, 0xbb1e, 0xb3c2, 0xd9ea, 0x0, 0x1);
        gbc.writeMem(0xb46e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc1e5);
        EXPECT(gbc.pc(), 0xb470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb46e), 0xcb);
        EXPECT(gbc.readMem(0xb46f), 0x9a);
        // CB 9A 03AC
        gbc.setState(0xbe5c, 0xc0ac, 0xf90, 0x731e, 0x8301, 0x24dd, 0x1, 0x1);
        gbc.writeMem(0xbe5c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc0ac);
        EXPECT(gbc.pc(), 0xbe5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe5c), 0xcb);
        EXPECT(gbc.readMem(0xbe5d), 0x9a);
        // CB 9A 03AD
        gbc.setState(0x7c35, 0x65a, 0x170, 0xf75, 0x33d2, 0xca29, 0x0, 0x0);
        gbc.writeMem(0x7c35, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x65a);
        EXPECT(gbc.pc(), 0x7c37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03AE
        gbc.setState(0x642d, 0xc778, 0x550, 0x54ab, 0x1283, 0x96f0, 0x0, 0x1);
        gbc.writeMem(0x642d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc778);
        EXPECT(gbc.pc(), 0x642f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03AF
        gbc.setState(0x36e1, 0xd37b, 0x1a20, 0x9582, 0x7ae0, 0x1ebe, 0x1, 0x0);
        gbc.writeMem(0x36e1, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd37b);
        EXPECT(gbc.pc(), 0x36e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03B0
        gbc.setState(0xee78, 0x7be2, 0x70b0, 0x2edd, 0xd20c, 0x5534, 0x1, 0x1);
        gbc.writeMem(0xee78, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7be2);
        EXPECT(gbc.pc(), 0xee7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee78), 0xcb);
        EXPECT(gbc.readMem(0xee79), 0x9a);
        // CB 9A 03B1
        gbc.setState(0xe351, 0x3d5d, 0x3ff0, 0x4066, 0xa28c, 0x959e, 0x1, 0x1);
        gbc.writeMem(0xe351, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3d5d);
        EXPECT(gbc.pc(), 0xe353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe351), 0xcb);
        EXPECT(gbc.readMem(0xe352), 0x9a);
        // CB 9A 03B3
        gbc.setState(0xc9e, 0xc9a2, 0xb0c0, 0xb932, 0x446f, 0xc679, 0x1, 0x0);
        gbc.writeMem(0xc9e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc9a2);
        EXPECT(gbc.pc(), 0xca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03B4
        gbc.setState(0xe8b, 0xa6fb, 0xf4b0, 0x20c7, 0xc243, 0x950a, 0x1, 0x1);
        gbc.writeMem(0xe8b, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa6fb);
        EXPECT(gbc.pc(), 0xe8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03B5
        gbc.setState(0x5c78, 0x3563, 0x61d0, 0x4dde, 0xae4e, 0x171e, 0x0, 0x0);
        gbc.writeMem(0x5c78, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3563);
        EXPECT(gbc.pc(), 0x5c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03B6
        gbc.setState(0x6997, 0x66a7, 0x8e30, 0xd9bb, 0x7272, 0x9f5f, 0x0, 0x0);
        gbc.writeMem(0x6997, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x66a7);
        EXPECT(gbc.pc(), 0x6999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03B7
        gbc.setState(0x8f73, 0xc285, 0x5f70, 0xc364, 0x6f3, 0xe36b, 0x1, 0x0);
        gbc.writeMem(0x8f73, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc285);
        EXPECT(gbc.pc(), 0x8f75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f73), 0xcb);
        EXPECT(gbc.readMem(0x8f74), 0x9a);
        // CB 9A 03B8
        gbc.setState(0x5fbd, 0x6037, 0xa0d0, 0x91b8, 0x3de8, 0xfc18, 0x0, 0x1);
        gbc.writeMem(0x5fbd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6037);
        EXPECT(gbc.pc(), 0x5fbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03B9
        gbc.setState(0x7a7f, 0xae22, 0x51b0, 0x276, 0x24ec, 0x5f1d, 0x0, 0x0);
        gbc.writeMem(0x7a7f, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xae22);
        EXPECT(gbc.pc(), 0x7a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03BA
        gbc.setState(0x66e5, 0xa85d, 0x5200, 0x48c5, 0xbd4d, 0x8b7f, 0x0, 0x0);
        gbc.writeMem(0x66e5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa85d);
        EXPECT(gbc.pc(), 0x66e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03BB
        gbc.setState(0xe6d6, 0xc773, 0xd0e0, 0x40eb, 0x3dfd, 0x1e7d, 0x1, 0x0);
        gbc.writeMem(0xe6d6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc773);
        EXPECT(gbc.pc(), 0xe6d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d6), 0xcb);
        EXPECT(gbc.readMem(0xe6d7), 0x9a);
        // CB 9A 03BC
        gbc.setState(0x4302, 0xfc34, 0xdb90, 0x6a82, 0x2df6, 0x6ecb, 0x1, 0x1);
        gbc.writeMem(0x4302, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfc34);
        EXPECT(gbc.pc(), 0x4304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03BD
        gbc.setState(0x2f5, 0x36b2, 0x7120, 0x24fb, 0x5578, 0xf012, 0x1, 0x1);
        gbc.writeMem(0x2f5, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x36b2);
        EXPECT(gbc.pc(), 0x2f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03BE
        gbc.setState(0x663, 0xf532, 0x35c0, 0xcfe5, 0xcd41, 0x4b9, 0x0, 0x1);
        gbc.writeMem(0x663, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf532);
        EXPECT(gbc.pc(), 0x665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03BF
        gbc.setState(0xdb13, 0x1f4f, 0xd050, 0xe164, 0x39d3, 0x85c9, 0x1, 0x1);
        gbc.writeMem(0xdb13, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1f4f);
        EXPECT(gbc.pc(), 0xdb15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb13), 0xcb);
        EXPECT(gbc.readMem(0xdb14), 0x9a);
        // CB 9A 03C0
        gbc.setState(0xce2d, 0x457, 0x4020, 0x4cf2, 0xe7f, 0x8a81, 0x0, 0x0);
        gbc.writeMem(0xce2d, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x457);
        EXPECT(gbc.pc(), 0xce2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce2d), 0xcb);
        EXPECT(gbc.readMem(0xce2e), 0x9a);
        // CB 9A 03C1
        gbc.setState(0xd1fd, 0xa55, 0xf420, 0x2d72, 0xa021, 0x25ab, 0x1, 0x1);
        gbc.writeMem(0xd1fd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa55);
        EXPECT(gbc.pc(), 0xd1ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1fd), 0xcb);
        EXPECT(gbc.readMem(0xd1fe), 0x9a);
        // CB 9A 03C4
        gbc.setState(0x7752, 0xef0, 0xeb70, 0xeac0, 0x511b, 0xf7, 0x0, 0x1);
        gbc.writeMem(0x7752, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xef0);
        EXPECT(gbc.pc(), 0x7754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03C5
        gbc.setState(0xc498, 0xe1c0, 0xa760, 0x3bf4, 0xfdfe, 0xf134, 0x1, 0x0);
        gbc.writeMem(0xc498, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe1c0);
        EXPECT(gbc.pc(), 0xc49a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc498), 0xcb);
        EXPECT(gbc.readMem(0xc499), 0x9a);
        // CB 9A 03C6
        gbc.setState(0x55d9, 0x161a, 0x6700, 0xf9af, 0xb1d7, 0x1a2f, 0x0, 0x0);
        gbc.writeMem(0x55d9, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x161a);
        EXPECT(gbc.pc(), 0x55db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03C7
        gbc.setState(0xb29e, 0x8d5c, 0x3ef0, 0x74dc, 0xde80, 0x3c3, 0x0, 0x1);
        gbc.writeMem(0xb29e, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8d5c);
        EXPECT(gbc.pc(), 0xb2a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb29e), 0xcb);
        EXPECT(gbc.readMem(0xb29f), 0x9a);
        // CB 9A 03C8
        gbc.setState(0x5583, 0xec70, 0xad60, 0xb07, 0xf865, 0xc3d4, 0x0, 0x1);
        gbc.writeMem(0x5583, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xec70);
        EXPECT(gbc.pc(), 0x5585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03C9
        gbc.setState(0x34bd, 0x8f41, 0x4050, 0xc270, 0xf20b, 0x7827, 0x1, 0x1);
        gbc.writeMem(0x34bd, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8f41);
        EXPECT(gbc.pc(), 0x34bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03CB
        gbc.setState(0x9cf7, 0xd8c0, 0xa3e0, 0xb5d2, 0xc865, 0x31bb, 0x0, 0x0);
        gbc.writeMem(0x9cf7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd8c0);
        EXPECT(gbc.pc(), 0x9cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf7), 0xcb);
        EXPECT(gbc.readMem(0x9cf8), 0x9a);
        // CB 9A 03CC
        gbc.setState(0x9c1c, 0x3649, 0xf90, 0xb227, 0x3b89, 0xcfab, 0x0, 0x1);
        gbc.writeMem(0x9c1c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3649);
        EXPECT(gbc.pc(), 0x9c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c1c), 0xcb);
        EXPECT(gbc.readMem(0x9c1d), 0x9a);
        // CB 9A 03CD
        gbc.setState(0x9bc6, 0xb901, 0xc9f0, 0xa967, 0x4b98, 0x4458, 0x1, 0x1);
        gbc.writeMem(0x9bc6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb901);
        EXPECT(gbc.pc(), 0x9bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc6), 0xcb);
        EXPECT(gbc.readMem(0x9bc7), 0x9a);
        // CB 9A 03CE
        gbc.setState(0x8826, 0x9513, 0x1a30, 0xd7e, 0x46a9, 0x1fee, 0x0, 0x0);
        gbc.writeMem(0x8826, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x9513);
        EXPECT(gbc.pc(), 0x8828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8826), 0xcb);
        EXPECT(gbc.readMem(0x8827), 0x9a);
        // CB 9A 03CF
        gbc.setState(0x29f3, 0x5c0c, 0x3c90, 0x652b, 0xed0a, 0xca89, 0x0, 0x0);
        gbc.writeMem(0x29f3, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5c0c);
        EXPECT(gbc.pc(), 0x29f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03D0
        gbc.setState(0x2af7, 0x7850, 0x8ef0, 0x89c6, 0x1ab9, 0xf6f9, 0x1, 0x0);
        gbc.writeMem(0x2af7, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7850);
        EXPECT(gbc.pc(), 0x2af9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03D1
        gbc.setState(0x5c95, 0x4a4c, 0x250, 0x989a, 0xd3a9, 0x6744, 0x0, 0x1);
        gbc.writeMem(0x5c95, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4a4c);
        EXPECT(gbc.pc(), 0x5c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03D2
        gbc.setState(0x78bc, 0x3e18, 0xe120, 0xb4d5, 0x1e22, 0x7345, 0x1, 0x0);
        gbc.writeMem(0x78bc, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3e18);
        EXPECT(gbc.pc(), 0x78be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03D4
        gbc.setState(0x8327, 0x4cf9, 0x2f0, 0x6fa2, 0xfb6e, 0x39f0, 0x1, 0x0);
        gbc.writeMem(0x8327, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4cf9);
        EXPECT(gbc.pc(), 0x8329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8327), 0xcb);
        EXPECT(gbc.readMem(0x8328), 0x9a);
        // CB 9A 03D5
        gbc.setState(0xb859, 0x956e, 0x180, 0x85d0, 0x953b, 0x6fe, 0x0, 0x0);
        gbc.writeMem(0xb859, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x956e);
        EXPECT(gbc.pc(), 0xb85b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb859), 0xcb);
        EXPECT(gbc.readMem(0xb85a), 0x9a);
        // CB 9A 03D6
        gbc.setState(0xc4f6, 0xc987, 0xd3e0, 0xd1f7, 0x1b42, 0x62d0, 0x1, 0x0);
        gbc.writeMem(0xc4f6, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc987);
        EXPECT(gbc.pc(), 0xc4f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4f6), 0xcb);
        EXPECT(gbc.readMem(0xc4f7), 0x9a);
        // CB 9A 03D7
        gbc.setState(0x45eb, 0xa04e, 0x9c70, 0xe0a0, 0x8915, 0x3db0, 0x0, 0x1);
        gbc.writeMem(0x45eb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa04e);
        EXPECT(gbc.pc(), 0x45ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03D8
        gbc.setState(0xf64, 0xad93, 0x9740, 0x21ee, 0x5201, 0x7cfd, 0x0, 0x1);
        gbc.writeMem(0xf64, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xad93);
        EXPECT(gbc.pc(), 0xf66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03DA
        gbc.setState(0x8613, 0x4978, 0xf2e0, 0xa4bf, 0x29ff, 0x2108, 0x0, 0x0);
        gbc.writeMem(0x8613, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4978);
        EXPECT(gbc.pc(), 0x8615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8613), 0xcb);
        EXPECT(gbc.readMem(0x8614), 0x9a);
        // CB 9A 03DB
        gbc.setState(0x3316, 0xa866, 0xaa10, 0x16e3, 0xa045, 0x686c, 0x0, 0x1);
        gbc.writeMem(0x3316, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa866);
        EXPECT(gbc.pc(), 0x3318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03DC
        gbc.setState(0x3a2c, 0xb362, 0xf260, 0x2bd1, 0x1290, 0xceb5, 0x1, 0x0);
        gbc.writeMem(0x3a2c, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb362);
        EXPECT(gbc.pc(), 0x3a2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03DD
        gbc.setState(0x11eb, 0x10b2, 0x49e0, 0xdd4f, 0x7f79, 0x7b2b, 0x1, 0x0);
        gbc.writeMem(0x11eb, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x10b2);
        EXPECT(gbc.pc(), 0x11ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9A 03DE
        gbc.setState(0xaef2, 0xf449, 0x39f0, 0xed20, 0x5e5, 0xadf5, 0x1, 0x1);
        gbc.writeMem(0xaef2, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf449);
        EXPECT(gbc.pc(), 0xaef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef2), 0xcb);
        EXPECT(gbc.readMem(0xaef3), 0x9a);
        // CB 9A 03DF
        gbc.setState(0xb886, 0x2356, 0xbcf0, 0x1e2e, 0x61f7, 0x94a2, 0x0, 0x1);
        gbc.writeMem(0xb886, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2356);
        EXPECT(gbc.pc(), 0xb888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb886), 0xcb);
        EXPECT(gbc.readMem(0xb887), 0x9a);
        // CB 9A 03E0
        gbc.setState(0xba48, 0x32d, 0xa260, 0xd93b, 0x694b, 0x86f9, 0x0, 0x1);
        gbc.writeMem(0xba48, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x32d);
        EXPECT(gbc.pc(), 0xba4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba48), 0xcb);
        EXPECT(gbc.readMem(0xba49), 0x9a);
        // CB 9A 03E1
        gbc.setState(0x75ae, 0x4312, 0x6730, 0x6601, 0x94f5, 0xeddb, 0x0, 0x0);
        gbc.writeMem(0x75ae, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4312);
        EXPECT(gbc.pc(), 0x75b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03E2
        gbc.setState(0x6269, 0x9813, 0x7c30, 0x8916, 0x6449, 0x1f41, 0x1, 0x1);
        gbc.writeMem(0x6269, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9813);
        EXPECT(gbc.pc(), 0x626b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03E3
        gbc.setState(0x91d0, 0x4e94, 0xd340, 0x32a1, 0xd79, 0xc4dc, 0x1, 0x0);
        gbc.writeMem(0x91d0, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4e94);
        EXPECT(gbc.pc(), 0x91d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d0), 0xcb);
        EXPECT(gbc.readMem(0x91d1), 0x9a);
        // CB 9A 03E4
        gbc.setState(0x5203, 0x6fe8, 0x15f0, 0xaa0b, 0x30f5, 0x7a58, 0x1, 0x0);
        gbc.writeMem(0x5203, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6fe8);
        EXPECT(gbc.pc(), 0x5205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03E5
        gbc.setState(0xaa69, 0x1132, 0x4c50, 0xcc66, 0x62ec, 0xe9a6, 0x1, 0x0);
        gbc.writeMem(0xaa69, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1132);
        EXPECT(gbc.pc(), 0xaa6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa69), 0xcb);
        EXPECT(gbc.readMem(0xaa6a), 0x9a);
        // CB 9A 03E6
        gbc.setState(0x1726, 0xb1dd, 0xd6f0, 0x5d2c, 0xdc4a, 0xd328, 0x0, 0x1);
        gbc.writeMem(0x1726, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb1dd);
        EXPECT(gbc.pc(), 0x1728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9A 03E7
        gbc.setState(0x7088, 0xc6b3, 0x2d60, 0x2da8, 0x3376, 0xa6bd, 0x1, 0x1);
        gbc.writeMem(0x7088, { 0xcb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc6b3);
        EXPECT(gbc.pc(), 0x708a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
