    TEST(gbcemu, opcode_d1) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // D1 0000
        gbc.setState(0x5cdf, 0x497e, 0x4250, 0xfd21, 0xf3fa, 0x6a41, 0x0, 0x1);
        gbc.writeMem(0x497e, { 0x47, 0x77 });
        gbc.writeMem(0x5cdf, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4980);
        EXPECT(gbc.pc(), 0x5ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0001
        gbc.setState(0x45ce, 0x3b46, 0x7de0, 0xa12a, 0xd4ea, 0x3b7c, 0x1, 0x1);
        gbc.writeMem(0x3b46, { 0x14, 0xd5 });
        gbc.writeMem(0x45ce, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3b48);
        EXPECT(gbc.pc(), 0x45cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0002
        gbc.setState(0x9b38, 0x3cf4, 0x4ff0, 0x9211, 0xb14e, 0xa89b, 0x0, 0x0);
        gbc.writeMem(0x3cf4, { 0xc8, 0x84 });
        gbc.writeMem(0x9b38, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3cf6);
        EXPECT(gbc.pc(), 0x9b39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b38), 0xd1);
        // D1 0003
        gbc.setState(0x270f, 0x7092, 0xfe50, 0x7116, 0x7233, 0x131a, 0x1, 0x1);
        gbc.writeMem(0x270f, { 0xd1 });
        gbc.writeMem(0x7092, { 0xb6, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7094);
        EXPECT(gbc.pc(), 0x2710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0004
        gbc.setState(0x6250, 0x3291, 0x95f0, 0xb8f3, 0x6a64, 0xa980, 0x0, 0x0);
        gbc.writeMem(0x3291, { 0xe6, 0xc3 });
        gbc.writeMem(0x6250, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3293);
        EXPECT(gbc.pc(), 0x6251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0006
        gbc.setState(0x1352, 0xb143, 0x33a0, 0x672c, 0x8053, 0x8785, 0x0, 0x1);
        gbc.writeMem(0x1352, { 0xd1 });
        gbc.writeMem(0xb143, { 0xd7, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb145);
        EXPECT(gbc.pc(), 0x1353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb143), 0xd7);
        EXPECT(gbc.readMem(0xb144), 0x90);
        // D1 0007
        gbc.setState(0x842c, 0xda3a, 0x9fd0, 0x7aa, 0xf254, 0x2e0, 0x1, 0x0);
        gbc.writeMem(0x842c, { 0xd1 });
        gbc.writeMem(0xda3a, { 0x68, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xda3c);
        EXPECT(gbc.pc(), 0x842d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x842c), 0xd1);
        EXPECT(gbc.readMem(0xda3a), 0x68);
        EXPECT(gbc.readMem(0xda3b), 0x10);
        // D1 0008
        gbc.setState(0x2327, 0xff7d, 0x1620, 0x58b4, 0x906d, 0x1d80, 0x1, 0x1);
        gbc.writeMem(0x2327, { 0xd1 });
        gbc.writeMem(0xff7d, { 0xed, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xff7f);
        EXPECT(gbc.pc(), 0x2328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff7d), 0xed);
        EXPECT(gbc.readMem(0xff7e), 0x28);
        // D1 0009
        gbc.setState(0xcd60, 0xb045, 0xc7a0, 0xec1f, 0x67f, 0x2558, 0x1, 0x0);
        gbc.writeMem(0xb045, { 0x5f, 0x2a });
        gbc.writeMem(0xcd60, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb047);
        EXPECT(gbc.pc(), 0xcd61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb045), 0x5f);
        EXPECT(gbc.readMem(0xb046), 0x2a);
        EXPECT(gbc.readMem(0xcd60), 0xd1);
        // D1 000A
        gbc.setState(0x74e, 0x9838, 0x5220, 0x86fe, 0x1da, 0x5b3e, 0x1, 0x1);
        gbc.writeMem(0x74e, { 0xd1 });
        gbc.writeMem(0x9838, { 0x95, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x983a);
        EXPECT(gbc.pc(), 0x74f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9838), 0x95);
        EXPECT(gbc.readMem(0x9839), 0xcd);
        // D1 000B
        gbc.setState(0x19bc, 0x83a3, 0x2df0, 0x1f3c, 0xcc, 0x59e6, 0x0, 0x0);
        gbc.writeMem(0x19bc, { 0xd1 });
        gbc.writeMem(0x83a3, { 0x31, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x83a5);
        EXPECT(gbc.pc(), 0x19bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a3), 0x31);
        EXPECT(gbc.readMem(0x83a4), 0x98);
        // D1 000C
        gbc.setState(0x1298, 0x8abf, 0xbc30, 0xbe9f, 0x5075, 0xc43e, 0x1, 0x1);
        gbc.writeMem(0x1298, { 0xd1 });
        gbc.writeMem(0x8abf, { 0x2e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8ac1);
        EXPECT(gbc.pc(), 0x1299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8abf), 0x2e);
        EXPECT(gbc.readMem(0x8ac0), 0x8);
        // D1 000D
        gbc.setState(0x2846, 0xd1b, 0x6490, 0xa4e8, 0x1fac, 0x4780, 0x0, 0x1);
        gbc.writeMem(0xd1b, { 0xa0, 0x88 });
        gbc.writeMem(0x2846, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd1d);
        EXPECT(gbc.pc(), 0x2847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 000E
        gbc.setState(0x3fb, 0xfd19, 0x3f90, 0xc85b, 0x8a62, 0xb5dd, 0x0, 0x0);
        gbc.writeMem(0x3fb, { 0xd1 });
        gbc.writeMem(0xfd19, { 0x8a, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfd1b);
        EXPECT(gbc.pc(), 0x3fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd19), 0x8a);
        EXPECT(gbc.readMem(0xfd1a), 0xe8);
        // D1 000F
        gbc.setState(0xb654, 0x3236, 0xd2d0, 0xfafa, 0xfae8, 0xf0d2, 0x0, 0x1);
        gbc.writeMem(0x3236, { 0xdb, 0x36 });
        gbc.writeMem(0xb654, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3238);
        EXPECT(gbc.pc(), 0xb655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb654), 0xd1);
        // D1 0010
        gbc.setState(0x4162, 0x8e4f, 0x7ee0, 0xa7e7, 0x5014, 0xab6d, 0x0, 0x0);
        gbc.writeMem(0x4162, { 0xd1 });
        gbc.writeMem(0x8e4f, { 0x8e, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8e51);
        EXPECT(gbc.pc(), 0x4163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e4f), 0x8e);
        EXPECT(gbc.readMem(0x8e50), 0x29);
        // D1 0011
        gbc.setState(0x15bd, 0xe64b, 0x100, 0xc5a6, 0x4831, 0x64b9, 0x1, 0x0);
        gbc.writeMem(0x15bd, { 0xd1 });
        gbc.writeMem(0xe64b, { 0x6d, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe64d);
        EXPECT(gbc.pc(), 0x15be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64b), 0x6d);
        EXPECT(gbc.readMem(0xe64c), 0x18);
        // D1 0013
        gbc.setState(0x8fb6, 0x2edc, 0xfce0, 0x7e9b, 0x1e62, 0x36ff, 0x0, 0x1);
        gbc.writeMem(0x2edc, { 0xc0, 0x6c });
        gbc.writeMem(0x8fb6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2ede);
        EXPECT(gbc.pc(), 0x8fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb6), 0xd1);
        // D1 0014
        gbc.setState(0x1d66, 0xd62e, 0x39b0, 0xba23, 0x4ff4, 0xdc90, 0x0, 0x1);
        gbc.writeMem(0x1d66, { 0xd1 });
        gbc.writeMem(0xd62e, { 0x51, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd630);
        EXPECT(gbc.pc(), 0x1d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd62e), 0x51);
        EXPECT(gbc.readMem(0xd62f), 0x67);
        // D1 0015
        gbc.setState(0x67fb, 0x5919, 0x1890, 0xeb70, 0xa48d, 0xbcf1, 0x0, 0x1);
        gbc.writeMem(0x5919, { 0xc8, 0x22 });
        gbc.writeMem(0x67fb, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x591b);
        EXPECT(gbc.pc(), 0x67fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0016
        gbc.setState(0x33ee, 0x9715, 0x9280, 0x325e, 0xae18, 0x373, 0x1, 0x0);
        gbc.writeMem(0x33ee, { 0xd1 });
        gbc.writeMem(0x9715, { 0x84, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9717);
        EXPECT(gbc.pc(), 0x33ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9715), 0x84);
        EXPECT(gbc.readMem(0x9716), 0xdd);
        // D1 0017
        gbc.setState(0x3f7b, 0x5b73, 0xba10, 0x28ec, 0x1471, 0x4d67, 0x0, 0x0);
        gbc.writeMem(0x3f7b, { 0xd1 });
        gbc.writeMem(0x5b73, { 0xd4, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5b75);
        EXPECT(gbc.pc(), 0x3f7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0018
        gbc.setState(0xcb88, 0x9af0, 0x190, 0x8a08, 0x9d39, 0xcf0f, 0x0, 0x0);
        gbc.writeMem(0x9af0, { 0xb6, 0x33 });
        gbc.writeMem(0xcb88, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9af2);
        EXPECT(gbc.pc(), 0xcb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af0), 0xb6);
        EXPECT(gbc.readMem(0x9af1), 0x33);
        EXPECT(gbc.readMem(0xcb88), 0xd1);
        // D1 0019
        gbc.setState(0x5aca, 0x9991, 0x1e50, 0x7a5d, 0xc00d, 0x1b78, 0x1, 0x1);
        gbc.writeMem(0x5aca, { 0xd1 });
        gbc.writeMem(0x9991, { 0x23, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9993);
        EXPECT(gbc.pc(), 0x5acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9991), 0x23);
        EXPECT(gbc.readMem(0x9992), 0xc6);
        // D1 001A
        gbc.setState(0xba31, 0xe4df, 0x21c0, 0xad74, 0x7f38, 0x651, 0x0, 0x1);
        gbc.writeMem(0xba31, { 0xd1 });
        gbc.writeMem(0xe4df, { 0xf4, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe4e1);
        EXPECT(gbc.pc(), 0xba32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba31), 0xd1);
        EXPECT(gbc.readMem(0xe4df), 0xf4);
        EXPECT(gbc.readMem(0xe4e0), 0xf8);
        // D1 001B
        gbc.setState(0xb67e, 0xb00, 0xd8a0, 0xcd5d, 0x7485, 0x269a, 0x0, 0x0);
        gbc.writeMem(0xb00, { 0x61, 0xb5 });
        gbc.writeMem(0xb67e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb02);
        EXPECT(gbc.pc(), 0xb67f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb67e), 0xd1);
        // D1 001C
        gbc.setState(0x3146, 0x60be, 0xf7b0, 0x8c91, 0xb909, 0xbcb8, 0x0, 0x0);
        gbc.writeMem(0x3146, { 0xd1 });
        gbc.writeMem(0x60be, { 0x6c, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x60c0);
        EXPECT(gbc.pc(), 0x3147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 001D
        gbc.setState(0x1c53, 0x2cd3, 0x930, 0xeac2, 0x450e, 0x1865, 0x0, 0x1);
        gbc.writeMem(0x1c53, { 0xd1 });
        gbc.writeMem(0x2cd3, { 0x74, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2cd5);
        EXPECT(gbc.pc(), 0x1c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 001E
        gbc.setState(0xd01b, 0xebf6, 0xd9d0, 0x2cba, 0xc783, 0xb5a9, 0x0, 0x0);
        gbc.writeMem(0xd01b, { 0xd1 });
        gbc.writeMem(0xebf6, { 0x13, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xebf8);
        EXPECT(gbc.pc(), 0xd01c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd01b), 0xd1);
        EXPECT(gbc.readMem(0xebf6), 0x13);
        EXPECT(gbc.readMem(0xebf7), 0xe5);
        // D1 001F
        gbc.setState(0x32df, 0xcf24, 0xe560, 0x97aa, 0x430d, 0xe874, 0x1, 0x1);
        gbc.writeMem(0x32df, { 0xd1 });
        gbc.writeMem(0xcf24, { 0xde, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xcf26);
        EXPECT(gbc.pc(), 0x32e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf24), 0xde);
        EXPECT(gbc.readMem(0xcf25), 0x26);
        // D1 0020
        gbc.setState(0xad15, 0x5ddc, 0xb670, 0x9a98, 0xba0d, 0x3c03, 0x0, 0x0);
        gbc.writeMem(0x5ddc, { 0xf0, 0xd0 });
        gbc.writeMem(0xad15, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5dde);
        EXPECT(gbc.pc(), 0xad16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad15), 0xd1);
        // D1 0021
        gbc.setState(0x3fac, 0x7b4, 0x14a0, 0xf1a1, 0x4296, 0x9818, 0x1, 0x1);
        gbc.writeMem(0x7b4, { 0x9f, 0x1c });
        gbc.writeMem(0x3fac, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7b6);
        EXPECT(gbc.pc(), 0x3fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0022
        gbc.setState(0xbabf, 0x4a5a, 0x5340, 0xb4ce, 0x21c7, 0x50be, 0x0, 0x0);
        gbc.writeMem(0x4a5a, { 0xc9, 0x18 });
        gbc.writeMem(0xbabf, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4a5c);
        EXPECT(gbc.pc(), 0xbac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbabf), 0xd1);
        // D1 0023
        gbc.setState(0x6ff0, 0x4d3b, 0xe650, 0xbec5, 0x5493, 0xfa3d, 0x0, 0x1);
        gbc.writeMem(0x4d3b, { 0xfa, 0xdf });
        gbc.writeMem(0x6ff0, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4d3d);
        EXPECT(gbc.pc(), 0x6ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0024
        gbc.setState(0x4dac, 0x82a2, 0x6270, 0xedec, 0xde72, 0x95d3, 0x1, 0x0);
        gbc.writeMem(0x4dac, { 0xd1 });
        gbc.writeMem(0x82a2, { 0xe7, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x82a4);
        EXPECT(gbc.pc(), 0x4dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a2), 0xe7);
        EXPECT(gbc.readMem(0x82a3), 0xa8);
        // D1 0025
        gbc.setState(0x3420, 0xf169, 0x67b0, 0x7ba5, 0x36ba, 0x4088, 0x1, 0x0);
        gbc.writeMem(0x3420, { 0xd1 });
        gbc.writeMem(0xf169, { 0xbd, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf16b);
        EXPECT(gbc.pc(), 0x3421);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf169), 0xbd);
        EXPECT(gbc.readMem(0xf16a), 0x77);
        // D1 0026
        gbc.setState(0xbd4f, 0x4e13, 0x1b00, 0x7e10, 0x1f8c, 0xc2b, 0x0, 0x1);
        gbc.writeMem(0x4e13, { 0xc1, 0xad });
        gbc.writeMem(0xbd4f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4e15);
        EXPECT(gbc.pc(), 0xbd50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4f), 0xd1);
        // D1 0027
        gbc.setState(0x73e3, 0x4b80, 0x7c40, 0x1cbc, 0x21d0, 0xb747, 0x1, 0x1);
        gbc.writeMem(0x4b80, { 0xb, 0x75 });
        gbc.writeMem(0x73e3, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4b82);
        EXPECT(gbc.pc(), 0x73e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0028
        gbc.setState(0x6e2b, 0xf244, 0xe680, 0xd284, 0xcc0c, 0xf137, 0x1, 0x1);
        gbc.writeMem(0x6e2b, { 0xd1 });
        gbc.writeMem(0xf244, { 0x43, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf246);
        EXPECT(gbc.pc(), 0x6e2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf244), 0x43);
        EXPECT(gbc.readMem(0xf245), 0xc2);
        // D1 002A
        gbc.setState(0xc33a, 0x6968, 0x1150, 0xc7bd, 0x1b2a, 0xcf2f, 0x0, 0x1);
        gbc.writeMem(0x6968, { 0xb3, 0x4e });
        gbc.writeMem(0xc33a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x696a);
        EXPECT(gbc.pc(), 0xc33b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc33a), 0xd1);
        // D1 002B
        gbc.setState(0x7092, 0xf26, 0xd20, 0x9c81, 0x665, 0xff68, 0x1, 0x0);
        gbc.writeMem(0xf26, { 0x0, 0x2a });
        gbc.writeMem(0x7092, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf28);
        EXPECT(gbc.pc(), 0x7093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 002C
        gbc.setState(0x7129, 0x442e, 0x2920, 0x37d8, 0xa38a, 0x6d60, 0x0, 0x0);
        gbc.writeMem(0x442e, { 0xa2, 0x64 });
        gbc.writeMem(0x7129, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4430);
        EXPECT(gbc.pc(), 0x712a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 002D
        gbc.setState(0x9217, 0xd480, 0xcc80, 0x8a06, 0x86b8, 0x520e, 0x0, 0x0);
        gbc.writeMem(0x9217, { 0xd1 });
        gbc.writeMem(0xd480, { 0xbd, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd482);
        EXPECT(gbc.pc(), 0x9218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9217), 0xd1);
        EXPECT(gbc.readMem(0xd480), 0xbd);
        EXPECT(gbc.readMem(0xd481), 0x1b);
        // D1 002E
        gbc.setState(0xa61, 0xcc2d, 0x19e0, 0xe084, 0x5b8, 0xc8e8, 0x0, 0x0);
        gbc.writeMem(0xa61, { 0xd1 });
        gbc.writeMem(0xcc2d, { 0xbc, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xcc2f);
        EXPECT(gbc.pc(), 0xa62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc2d), 0xbc);
        EXPECT(gbc.readMem(0xcc2e), 0x84);
        // D1 002F
        gbc.setState(0x6599, 0x20cc, 0xf430, 0x1142, 0xb487, 0xa4ed, 0x0, 0x0);
        gbc.writeMem(0x20cc, { 0xb0, 0x48 });
        gbc.writeMem(0x6599, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x20ce);
        EXPECT(gbc.pc(), 0x659a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0030
        gbc.setState(0xf2c, 0x0, 0x8140, 0x130f, 0xe8f1, 0xae21, 0x0, 0x0);
        gbc.writeMem(0x0, { 0xa6, 0x1f });
        gbc.writeMem(0xf2c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2);
        EXPECT(gbc.pc(), 0xf2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0031
        gbc.setState(0x3b05, 0xf46d, 0x6b10, 0x2323, 0xbe65, 0x3993, 0x1, 0x1);
        gbc.writeMem(0x3b05, { 0xd1 });
        gbc.writeMem(0xf46d, { 0x4d, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf46f);
        EXPECT(gbc.pc(), 0x3b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf46d), 0x4d);
        EXPECT(gbc.readMem(0xf46e), 0x6d);
        // D1 0032
        gbc.setState(0x4239, 0x47be, 0x9bf0, 0xb627, 0x7dc4, 0x32a2, 0x1, 0x1);
        gbc.writeMem(0x4239, { 0xd1 });
        gbc.writeMem(0x47be, { 0x2d, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x47c0);
        EXPECT(gbc.pc(), 0x423a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0033
        gbc.setState(0x2414, 0xfdb4, 0x1dc0, 0x64b7, 0xcdf1, 0xacfc, 0x1, 0x1);
        gbc.writeMem(0x2414, { 0xd1 });
        gbc.writeMem(0xfdb4, { 0xd1, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xfdb6);
        EXPECT(gbc.pc(), 0x2415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfdb4), 0xd1);
        EXPECT(gbc.readMem(0xfdb5), 0x2);
        // D1 0034
        gbc.setState(0x619a, 0xd4a8, 0x52e0, 0x2d88, 0x8d8e, 0x9950, 0x0, 0x1);
        gbc.writeMem(0x619a, { 0xd1 });
        gbc.writeMem(0xd4a8, { 0xea, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd4aa);
        EXPECT(gbc.pc(), 0x619b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a8), 0xea);
        EXPECT(gbc.readMem(0xd4a9), 0x73);
        // D1 0036
        gbc.setState(0x4404, 0x6558, 0x2410, 0x599d, 0x9859, 0x91c4, 0x0, 0x0);
        gbc.writeMem(0x4404, { 0xd1 });
        gbc.writeMem(0x6558, { 0x6b, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x655a);
        EXPECT(gbc.pc(), 0x4405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0037
        gbc.setState(0xd487, 0xf312, 0x6a60, 0x5045, 0x3695, 0x709a, 0x1, 0x0);
        gbc.writeMem(0xd487, { 0xd1 });
        gbc.writeMem(0xf312, { 0x66, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf314);
        EXPECT(gbc.pc(), 0xd488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd487), 0xd1);
        EXPECT(gbc.readMem(0xf312), 0x66);
        EXPECT(gbc.readMem(0xf313), 0x7d);
        // D1 0038
        gbc.setState(0xbb50, 0xd8d2, 0x69b0, 0x4bf7, 0x39d3, 0xfe60, 0x0, 0x1);
        gbc.writeMem(0xbb50, { 0xd1 });
        gbc.writeMem(0xd8d2, { 0xe3, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd8d4);
        EXPECT(gbc.pc(), 0xbb51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb50), 0xd1);
        EXPECT(gbc.readMem(0xd8d2), 0xe3);
        EXPECT(gbc.readMem(0xd8d3), 0x3e);
        // D1 0039
        gbc.setState(0x6d4c, 0x650b, 0x6310, 0xc83e, 0x19be, 0xc5ce, 0x0, 0x1);
        gbc.writeMem(0x650b, { 0x3a, 0x48 });
        gbc.writeMem(0x6d4c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x650d);
        EXPECT(gbc.pc(), 0x6d4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 003A
        gbc.setState(0xbad5, 0x38ee, 0x75b0, 0x77cc, 0x9ded, 0x80f6, 0x1, 0x0);
        gbc.writeMem(0x38ee, { 0xd0, 0xa6 });
        gbc.writeMem(0xbad5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x38f0);
        EXPECT(gbc.pc(), 0xbad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad5), 0xd1);
        // D1 003B
        gbc.setState(0xa888, 0xe39e, 0x2290, 0xa99c, 0x24c3, 0xa686, 0x1, 0x0);
        gbc.writeMem(0xa888, { 0xd1 });
        gbc.writeMem(0xe39e, { 0x6e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe3a0);
        EXPECT(gbc.pc(), 0xa889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa888), 0xd1);
        EXPECT(gbc.readMem(0xe39e), 0x6e);
        EXPECT(gbc.readMem(0xe39f), 0xf8);
        // D1 003C
        gbc.setState(0x35e2, 0x8fd5, 0x9800, 0x5bd3, 0xfb71, 0xe452, 0x1, 0x0);
        gbc.writeMem(0x35e2, { 0xd1 });
        gbc.writeMem(0x8fd5, { 0x4d, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8fd7);
        EXPECT(gbc.pc(), 0x35e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd5), 0x4d);
        EXPECT(gbc.readMem(0x8fd6), 0x70);
        // D1 003D
        gbc.setState(0x3a0d, 0xc25b, 0xe410, 0x6bb8, 0x6fe7, 0x35f8, 0x1, 0x0);
        gbc.writeMem(0x3a0d, { 0xd1 });
        gbc.writeMem(0xc25b, { 0x88, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc25d);
        EXPECT(gbc.pc(), 0x3a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc25b), 0x88);
        EXPECT(gbc.readMem(0xc25c), 0xf5);
        // D1 003E
        gbc.setState(0xa94b, 0x828, 0x7500, 0x74bf, 0xbd08, 0xe6b6, 0x1, 0x0);
        gbc.writeMem(0x828, { 0x83, 0xff });
        gbc.writeMem(0xa94b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x82a);
        EXPECT(gbc.pc(), 0xa94c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa94b), 0xd1);
        // D1 003F
        gbc.setState(0xe93e, 0x5824, 0xed10, 0x1089, 0xb2f0, 0xe404, 0x1, 0x1);
        gbc.writeMem(0x5824, { 0xd, 0x4a });
        gbc.writeMem(0xe93e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5826);
        EXPECT(gbc.pc(), 0xe93f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe93e), 0xd1);
        // D1 0040
        gbc.setState(0xd257, 0x45cd, 0xb990, 0xc8f8, 0x6e80, 0xe5de, 0x0, 0x0);
        gbc.writeMem(0x45cd, { 0x2f, 0xc2 });
        gbc.writeMem(0xd257, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x45cf);
        EXPECT(gbc.pc(), 0xd258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd257), 0xd1);
        // D1 0042
        gbc.setState(0x7126, 0x3367, 0x8ea0, 0x26c6, 0xc2c6, 0x6b5e, 0x1, 0x0);
        gbc.writeMem(0x3367, { 0x77, 0x91 });
        gbc.writeMem(0x7126, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3369);
        EXPECT(gbc.pc(), 0x7127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0043
        gbc.setState(0xe8c8, 0x329f, 0xbe50, 0xec98, 0x158e, 0x3ee2, 0x1, 0x1);
        gbc.writeMem(0x329f, { 0xdc, 0xf9 });
        gbc.writeMem(0xe8c8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x32a1);
        EXPECT(gbc.pc(), 0xe8c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c8), 0xd1);
        // D1 0044
        gbc.setState(0x447a, 0x5fae, 0x9700, 0xb820, 0x51e5, 0xb7d3, 0x1, 0x1);
        gbc.writeMem(0x447a, { 0xd1 });
        gbc.writeMem(0x5fae, { 0xd, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5fb0);
        EXPECT(gbc.pc(), 0x447b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0045
        gbc.setState(0xccf0, 0xfadb, 0x380, 0x17a2, 0xa592, 0xb396, 0x1, 0x0);
        gbc.writeMem(0xccf0, { 0xd1 });
        gbc.writeMem(0xfadb, { 0xe3, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfadd);
        EXPECT(gbc.pc(), 0xccf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf0), 0xd1);
        EXPECT(gbc.readMem(0xfadb), 0xe3);
        EXPECT(gbc.readMem(0xfadc), 0xe8);
        // D1 0046
        gbc.setState(0x3c8d, 0x1dc8, 0x9bc0, 0x38e3, 0x6fdc, 0xd935, 0x0, 0x1);
        gbc.writeMem(0x1dc8, { 0x73, 0x9b });
        gbc.writeMem(0x3c8d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1dca);
        EXPECT(gbc.pc(), 0x3c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0047
        gbc.setState(0x588c, 0x1541, 0xeb70, 0x114a, 0x15dc, 0x57cb, 0x1, 0x0);
        gbc.writeMem(0x1541, { 0xb0, 0x4a });
        gbc.writeMem(0x588c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1543);
        EXPECT(gbc.pc(), 0x588d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0048
        gbc.setState(0x977a, 0x5284, 0x1e50, 0x7192, 0xc578, 0xa903, 0x0, 0x1);
        gbc.writeMem(0x5284, { 0x1a, 0xb4 });
        gbc.writeMem(0x977a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5286);
        EXPECT(gbc.pc(), 0x977b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x977a), 0xd1);
        // D1 0049
        gbc.setState(0xa4d, 0xc5e8, 0x54b0, 0xa5d9, 0xebe, 0x90ab, 0x0, 0x0);
        gbc.writeMem(0xa4d, { 0xd1 });
        gbc.writeMem(0xc5e8, { 0xcc, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc5ea);
        EXPECT(gbc.pc(), 0xa4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e8), 0xcc);
        EXPECT(gbc.readMem(0xc5e9), 0xe2);
        // D1 004A
        gbc.setState(0x751, 0x18b3, 0x3aa0, 0xa266, 0xc7c2, 0xbb1f, 0x1, 0x1);
        gbc.writeMem(0x751, { 0xd1 });
        gbc.writeMem(0x18b3, { 0xbd, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x18b5);
        EXPECT(gbc.pc(), 0x752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 004B
        gbc.setState(0x5a93, 0xfc0f, 0xbb70, 0x22af, 0x18e7, 0x42ae, 0x1, 0x1);
        gbc.writeMem(0x5a93, { 0xd1 });
        gbc.writeMem(0xfc0f, { 0x34, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfc11);
        EXPECT(gbc.pc(), 0x5a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc0f), 0x34);
        EXPECT(gbc.readMem(0xfc10), 0xf1);
        // D1 004C
        gbc.setState(0xcd48, 0xf031, 0xed70, 0x84fe, 0xa38d, 0xece8, 0x0, 0x0);
        gbc.writeMem(0xcd48, { 0xd1 });
        gbc.writeMem(0xf031, { 0x44, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf033);
        EXPECT(gbc.pc(), 0xcd49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd48), 0xd1);
        EXPECT(gbc.readMem(0xf031), 0x44);
        EXPECT(gbc.readMem(0xf032), 0xe8);
        // D1 004D
        gbc.setState(0x117a, 0xf24e, 0x9920, 0x9df3, 0xf210, 0x7045, 0x0, 0x1);
        gbc.writeMem(0x117a, { 0xd1 });
        gbc.writeMem(0xf24e, { 0xea, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf250);
        EXPECT(gbc.pc(), 0x117b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf24e), 0xea);
        EXPECT(gbc.readMem(0xf24f), 0x80);
        // D1 004E
        gbc.setState(0xdcd4, 0xd1ef, 0xa6b0, 0xf3fc, 0x7086, 0x7b27, 0x0, 0x0);
        gbc.writeMem(0xd1ef, { 0x86, 0x23 });
        gbc.writeMem(0xdcd4, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd1f1);
        EXPECT(gbc.pc(), 0xdcd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ef), 0x86);
        EXPECT(gbc.readMem(0xd1f0), 0x23);
        EXPECT(gbc.readMem(0xdcd4), 0xd1);
        // D1 0050
        gbc.setState(0xd234, 0xc5b4, 0x180, 0xd7b3, 0x404b, 0xced8, 0x0, 0x0);
        gbc.writeMem(0xc5b4, { 0xc5, 0x13 });
        gbc.writeMem(0xd234, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc5b6);
        EXPECT(gbc.pc(), 0xd235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b4), 0xc5);
        EXPECT(gbc.readMem(0xc5b5), 0x13);
        EXPECT(gbc.readMem(0xd234), 0xd1);
        // D1 0051
        gbc.setState(0x4440, 0x9814, 0xafa0, 0xd222, 0x9a33, 0xa7f3, 0x0, 0x1);
        gbc.writeMem(0x4440, { 0xd1 });
        gbc.writeMem(0x9814, { 0x93, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9816);
        EXPECT(gbc.pc(), 0x4441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9814), 0x93);
        EXPECT(gbc.readMem(0x9815), 0xf5);
        // D1 0052
        gbc.setState(0x75cf, 0x48a4, 0xa30, 0x6099, 0xd9ce, 0x69d4, 0x1, 0x1);
        gbc.writeMem(0x48a4, { 0xd0, 0xac });
        gbc.writeMem(0x75cf, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x48a6);
        EXPECT(gbc.pc(), 0x75d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0053
        gbc.setState(0xd1b2, 0x9d29, 0xaf70, 0x5688, 0x5053, 0xe736, 0x1, 0x1);
        gbc.writeMem(0x9d29, { 0xc0, 0x9f });
        gbc.writeMem(0xd1b2, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9d2b);
        EXPECT(gbc.pc(), 0xd1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d29), 0xc0);
        EXPECT(gbc.readMem(0x9d2a), 0x9f);
        EXPECT(gbc.readMem(0xd1b2), 0xd1);
        // D1 0054
        gbc.setState(0x4132, 0x8b9e, 0x9d60, 0x156a, 0xde52, 0x4d22, 0x1, 0x1);
        gbc.writeMem(0x4132, { 0xd1 });
        gbc.writeMem(0x8b9e, { 0x76, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8ba0);
        EXPECT(gbc.pc(), 0x4133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9e), 0x76);
        EXPECT(gbc.readMem(0x8b9f), 0x65);
        // D1 0055
        gbc.setState(0xc41, 0xa172, 0x29a0, 0x2fa, 0xb54a, 0x8048, 0x0, 0x1);
        gbc.writeMem(0xc41, { 0xd1 });
        gbc.writeMem(0xa172, { 0x3a, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa174);
        EXPECT(gbc.pc(), 0xc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa172), 0x3a);
        EXPECT(gbc.readMem(0xa173), 0x92);
        // D1 0056
        gbc.setState(0xfe5, 0xe19d, 0x49b0, 0xe23a, 0xa6e0, 0xd10a, 0x0, 0x0);
        gbc.writeMem(0xfe5, { 0xd1 });
        gbc.writeMem(0xe19d, { 0x31, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe19f);
        EXPECT(gbc.pc(), 0xfe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19d), 0x31);
        EXPECT(gbc.readMem(0xe19e), 0xc1);
        // D1 0057
        gbc.setState(0x6c67, 0x471, 0x4a0, 0x2dc1, 0xad54, 0x335d, 0x1, 0x0);
        gbc.writeMem(0x471, { 0xfd, 0x3a });
        gbc.writeMem(0x6c67, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x473);
        EXPECT(gbc.pc(), 0x6c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0058
        gbc.setState(0x6c95, 0xda3, 0x1640, 0x58a7, 0x1904, 0xf6bb, 0x0, 0x0);
        gbc.writeMem(0xda3, { 0x6a, 0xd2 });
        gbc.writeMem(0x6c95, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xda5);
        EXPECT(gbc.pc(), 0x6c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0059
        gbc.setState(0xc9ff, 0x7b4a, 0xe330, 0xd593, 0x440f, 0xc0a1, 0x1, 0x0);
        gbc.writeMem(0x7b4a, { 0xe4, 0xd3 });
        gbc.writeMem(0xc9ff, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7b4c);
        EXPECT(gbc.pc(), 0xca00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ff), 0xd1);
        // D1 005A
        gbc.setState(0xc7de, 0xdbde, 0x45d0, 0x55db, 0xf92d, 0xca0b, 0x1, 0x1);
        gbc.writeMem(0xc7de, { 0xd1 });
        gbc.writeMem(0xdbde, { 0x4e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdbe0);
        EXPECT(gbc.pc(), 0xc7df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7de), 0xd1);
        EXPECT(gbc.readMem(0xdbde), 0x4e);
        EXPECT(gbc.readMem(0xdbdf), 0xd6);
        // D1 005B
        gbc.setState(0x61e, 0xa9eb, 0x27d0, 0x4bf1, 0x4f7, 0x2648, 0x1, 0x1);
        gbc.writeMem(0x61e, { 0xd1 });
        gbc.writeMem(0xa9eb, { 0xd1, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa9ed);
        EXPECT(gbc.pc(), 0x61f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9eb), 0xd1);
        EXPECT(gbc.readMem(0xa9ec), 0x4f);
        // D1 005D
        gbc.setState(0x851a, 0x3dbf, 0x1c00, 0x4210, 0xf556, 0xd2a7, 0x0, 0x1);
        gbc.writeMem(0x3dbf, { 0xa6, 0x2d });
        gbc.writeMem(0x851a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3dc1);
        EXPECT(gbc.pc(), 0x851b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851a), 0xd1);
        // D1 005E
        gbc.setState(0xb4a7, 0x4d10, 0x5a10, 0xd499, 0x2531, 0x5884, 0x0, 0x1);
        gbc.writeMem(0x4d10, { 0x9d, 0x2f });
        gbc.writeMem(0xb4a7, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4d12);
        EXPECT(gbc.pc(), 0xb4a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a7), 0xd1);
        // D1 005F
        gbc.setState(0x301b, 0xab4, 0xea50, 0xe782, 0x8d82, 0xdaae, 0x1, 0x0);
        gbc.writeMem(0xab4, { 0x5c, 0x99 });
        gbc.writeMem(0x301b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xab6);
        EXPECT(gbc.pc(), 0x301c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0060
        gbc.setState(0xef47, 0xee99, 0x15f0, 0xdde0, 0x2c28, 0xc298, 0x1, 0x1);
        gbc.writeMem(0xee99, { 0x58, 0xed });
        gbc.writeMem(0xef47, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xee9b);
        EXPECT(gbc.pc(), 0xef48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee99), 0x58);
        EXPECT(gbc.readMem(0xee9a), 0xed);
        EXPECT(gbc.readMem(0xef47), 0xd1);
        // D1 0061
        gbc.setState(0xb758, 0x6166, 0x4190, 0x697b, 0x7038, 0xdef6, 0x1, 0x0);
        gbc.writeMem(0x6166, { 0xf7, 0x27 });
        gbc.writeMem(0xb758, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6168);
        EXPECT(gbc.pc(), 0xb759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb758), 0xd1);
        // D1 0062
        gbc.setState(0x1ff3, 0x9325, 0xfed0, 0x813b, 0xb864, 0xd79e, 0x1, 0x0);
        gbc.writeMem(0x1ff3, { 0xd1 });
        gbc.writeMem(0x9325, { 0x6c, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9327);
        EXPECT(gbc.pc(), 0x1ff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9325), 0x6c);
        EXPECT(gbc.readMem(0x9326), 0x37);
        // D1 0063
        gbc.setState(0x396c, 0xa230, 0x2b10, 0x2ad1, 0x14d3, 0xb31e, 0x1, 0x0);
        gbc.writeMem(0x396c, { 0xd1 });
        gbc.writeMem(0xa230, { 0xa7, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa232);
        EXPECT(gbc.pc(), 0x396d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa230), 0xa7);
        EXPECT(gbc.readMem(0xa231), 0x76);
        // D1 0064
        gbc.setState(0x5635, 0x63f7, 0x2c60, 0xebcd, 0x4e85, 0x8d14, 0x1, 0x0);
        gbc.writeMem(0x5635, { 0xd1 });
        gbc.writeMem(0x63f7, { 0xaa, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x63f9);
        EXPECT(gbc.pc(), 0x5636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0065
        gbc.setState(0xb012, 0x33a4, 0xbdd0, 0xc8e8, 0x215d, 0x7c97, 0x1, 0x1);
        gbc.writeMem(0x33a4, { 0x81, 0xba });
        gbc.writeMem(0xb012, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x33a6);
        EXPECT(gbc.pc(), 0xb013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb012), 0xd1);
        // D1 0067
        gbc.setState(0xa57e, 0xac48, 0x70e0, 0xe217, 0xb348, 0xe610, 0x1, 0x1);
        gbc.writeMem(0xa57e, { 0xd1 });
        gbc.writeMem(0xac48, { 0x9a, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xac4a);
        EXPECT(gbc.pc(), 0xa57f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa57e), 0xd1);
        EXPECT(gbc.readMem(0xac48), 0x9a);
        EXPECT(gbc.readMem(0xac49), 0x8f);
        // D1 0068
        gbc.setState(0x4ff7, 0x560d, 0xe1a0, 0x4eb1, 0x4d1a, 0xa1e0, 0x0, 0x1);
        gbc.writeMem(0x4ff7, { 0xd1 });
        gbc.writeMem(0x560d, { 0x62, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x560f);
        EXPECT(gbc.pc(), 0x4ff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0069
        gbc.setState(0x7cfd, 0xfc2e, 0x5020, 0x4b91, 0x30bc, 0x9c2f, 0x0, 0x0);
        gbc.writeMem(0x7cfd, { 0xd1 });
        gbc.writeMem(0xfc2e, { 0x83, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfc30);
        EXPECT(gbc.pc(), 0x7cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc2e), 0x83);
        EXPECT(gbc.readMem(0xfc2f), 0x5b);
        // D1 006A
        gbc.setState(0x1b5d, 0x2182, 0x4720, 0x20ad, 0x992d, 0x9013, 0x1, 0x1);
        gbc.writeMem(0x1b5d, { 0xd1 });
        gbc.writeMem(0x2182, { 0x8, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2184);
        EXPECT(gbc.pc(), 0x1b5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 006B
        gbc.setState(0x792a, 0xfc81, 0x9630, 0x8dd2, 0xa6f1, 0xbad1, 0x0, 0x0);
        gbc.writeMem(0x792a, { 0xd1 });
        gbc.writeMem(0xfc81, { 0x4e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xfc83);
        EXPECT(gbc.pc(), 0x792b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc81), 0x4e);
        EXPECT(gbc.readMem(0xfc82), 0xe5);
        // D1 006C
        gbc.setState(0xb464, 0x27dd, 0x4fb0, 0xe149, 0x1c82, 0x132f, 0x1, 0x0);
        gbc.writeMem(0x27dd, { 0x95, 0xdb });
        gbc.writeMem(0xb464, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x27df);
        EXPECT(gbc.pc(), 0xb465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb464), 0xd1);
        // D1 006D
        gbc.setState(0xabec, 0xca08, 0x3c20, 0xc13f, 0x9eaa, 0xff79, 0x1, 0x1);
        gbc.writeMem(0xabec, { 0xd1 });
        gbc.writeMem(0xca08, { 0x8c, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xca0a);
        EXPECT(gbc.pc(), 0xabed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabec), 0xd1);
        EXPECT(gbc.readMem(0xca08), 0x8c);
        EXPECT(gbc.readMem(0xca09), 0xb0);
        // D1 006E
        gbc.setState(0x4177, 0x74a6, 0xe110, 0x171f, 0x113c, 0xd76f, 0x1, 0x1);
        gbc.writeMem(0x4177, { 0xd1 });
        gbc.writeMem(0x74a6, { 0x65, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x74a8);
        EXPECT(gbc.pc(), 0x4178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 006F
        gbc.setState(0x8604, 0x69da, 0x3fa0, 0x717a, 0xf47e, 0x9a4, 0x0, 0x0);
        gbc.writeMem(0x69da, { 0xc7, 0xba });
        gbc.writeMem(0x8604, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x69dc);
        EXPECT(gbc.pc(), 0x8605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8604), 0xd1);
        // D1 0070
        gbc.setState(0x426f, 0x56fa, 0xb1f0, 0xf82e, 0xca6e, 0xf4fd, 0x1, 0x0);
        gbc.writeMem(0x426f, { 0xd1 });
        gbc.writeMem(0x56fa, { 0xc2, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x56fc);
        EXPECT(gbc.pc(), 0x4270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0071
        gbc.setState(0x6768, 0xbe0d, 0x4df0, 0x7dcf, 0xc1e0, 0x79c, 0x1, 0x0);
        gbc.writeMem(0x6768, { 0xd1 });
        gbc.writeMem(0xbe0d, { 0x8d, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbe0f);
        EXPECT(gbc.pc(), 0x6769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe0d), 0x8d);
        EXPECT(gbc.readMem(0xbe0e), 0xca);
        // D1 0072
        gbc.setState(0x7730, 0xa50d, 0x5600, 0x4c67, 0x83c1, 0xacff, 0x1, 0x0);
        gbc.writeMem(0x7730, { 0xd1 });
        gbc.writeMem(0xa50d, { 0x83, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa50f);
        EXPECT(gbc.pc(), 0x7731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa50d), 0x83);
        EXPECT(gbc.readMem(0xa50e), 0x12);
        // D1 0074
        gbc.setState(0x268f, 0xb954, 0x7fa0, 0x3a2a, 0x64b9, 0x73ee, 0x1, 0x0);
        gbc.writeMem(0x268f, { 0xd1 });
        gbc.writeMem(0xb954, { 0xc1, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb956);
        EXPECT(gbc.pc(), 0x2690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb954), 0xc1);
        EXPECT(gbc.readMem(0xb955), 0xf6);
        // D1 0075
        gbc.setState(0x64ec, 0x4614, 0x70, 0xd71d, 0x7133, 0x2744, 0x1, 0x1);
        gbc.writeMem(0x4614, { 0x0, 0x33 });
        gbc.writeMem(0x64ec, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4616);
        EXPECT(gbc.pc(), 0x64ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0076
        gbc.setState(0x24eb, 0xdc29, 0x64f0, 0x48fe, 0xec, 0xff02, 0x1, 0x1);
        gbc.writeMem(0x24eb, { 0xd1 });
        gbc.writeMem(0xdc29, { 0x88, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdc2b);
        EXPECT(gbc.pc(), 0x24ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc29), 0x88);
        EXPECT(gbc.readMem(0xdc2a), 0x88);
        // D1 0077
        gbc.setState(0x559a, 0xc291, 0x3990, 0x53cf, 0x8820, 0xd5c3, 0x0, 0x0);
        gbc.writeMem(0x559a, { 0xd1 });
        gbc.writeMem(0xc291, { 0xc5, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc293);
        EXPECT(gbc.pc(), 0x559b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc291), 0xc5);
        EXPECT(gbc.readMem(0xc292), 0x71);
        // D1 0078
        gbc.setState(0x6e13, 0xf747, 0x2880, 0x57e8, 0x567d, 0x6d4c, 0x0, 0x0);
        gbc.writeMem(0x6e13, { 0xd1 });
        gbc.writeMem(0xf747, { 0xf, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf749);
        EXPECT(gbc.pc(), 0x6e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf747), 0xf);
        EXPECT(gbc.readMem(0xf748), 0xb1);
        // D1 0079
        gbc.setState(0x9f98, 0x7c0c, 0x1550, 0xba85, 0xfc64, 0xee16, 0x1, 0x1);
        gbc.writeMem(0x7c0c, { 0x74, 0xdd });
        gbc.writeMem(0x9f98, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7c0e);
        EXPECT(gbc.pc(), 0x9f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f98), 0xd1);
        // D1 007A
        gbc.setState(0xef62, 0x9ac7, 0x9040, 0x3e23, 0x42c1, 0xe3ec, 0x0, 0x1);
        gbc.writeMem(0x9ac7, { 0xb8, 0x7b });
        gbc.writeMem(0xef62, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9ac9);
        EXPECT(gbc.pc(), 0xef63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac7), 0xb8);
        EXPECT(gbc.readMem(0x9ac8), 0x7b);
        EXPECT(gbc.readMem(0xef62), 0xd1);
        // D1 007B
        gbc.setState(0xb16e, 0xe6c6, 0x8b80, 0x422c, 0x13e8, 0x8dc0, 0x1, 0x1);
        gbc.writeMem(0xb16e, { 0xd1 });
        gbc.writeMem(0xe6c6, { 0x5, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe6c8);
        EXPECT(gbc.pc(), 0xb16f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16e), 0xd1);
        EXPECT(gbc.readMem(0xe6c6), 0x5);
        EXPECT(gbc.readMem(0xe6c7), 0xaa);
        // D1 007C
        gbc.setState(0x280f, 0xc07, 0x6a0, 0xd372, 0xe002, 0xbe82, 0x0, 0x0);
        gbc.writeMem(0xc07, { 0x31, 0x43 });
        gbc.writeMem(0x280f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc09);
        EXPECT(gbc.pc(), 0x2810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 007D
        gbc.setState(0x8683, 0xb6f5, 0xbf50, 0xae78, 0xa3a7, 0xd1f, 0x1, 0x0);
        gbc.writeMem(0x8683, { 0xd1 });
        gbc.writeMem(0xb6f5, { 0xd, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb6f7);
        EXPECT(gbc.pc(), 0x8684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8683), 0xd1);
        EXPECT(gbc.readMem(0xb6f5), 0xd);
        EXPECT(gbc.readMem(0xb6f6), 0x68);
        // D1 007E
        gbc.setState(0x32ba, 0xae6, 0xd0c0, 0x579c, 0xbaf5, 0x9c2e, 0x1, 0x1);
        gbc.writeMem(0xae6, { 0x68, 0x2b });
        gbc.writeMem(0x32ba, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xae8);
        EXPECT(gbc.pc(), 0x32bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 007F
        gbc.setState(0xe1d5, 0x18ed, 0xf7b0, 0xfe16, 0x4898, 0x704, 0x1, 0x0);
        gbc.writeMem(0x18ed, { 0x1b, 0x1 });
        gbc.writeMem(0xe1d5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x18ef);
        EXPECT(gbc.pc(), 0xe1d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d5), 0xd1);
        // D1 0080
        gbc.setState(0xb37d, 0x325f, 0x1c10, 0x8ba4, 0x1450, 0xcaa7, 0x1, 0x1);
        gbc.writeMem(0x325f, { 0xc, 0xbd });
        gbc.writeMem(0xb37d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3261);
        EXPECT(gbc.pc(), 0xb37e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb37d), 0xd1);
        // D1 0081
        gbc.setState(0x7e4b, 0xb861, 0xc270, 0xbc4e, 0xa0a7, 0x57f7, 0x0, 0x0);
        gbc.writeMem(0x7e4b, { 0xd1 });
        gbc.writeMem(0xb861, { 0x36, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb863);
        EXPECT(gbc.pc(), 0x7e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb861), 0x36);
        EXPECT(gbc.readMem(0xb862), 0xc);
        // D1 0082
        gbc.setState(0x1d17, 0xc826, 0xe330, 0xffbe, 0xd496, 0x74c5, 0x0, 0x1);
        gbc.writeMem(0x1d17, { 0xd1 });
        gbc.writeMem(0xc826, { 0x7e, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc828);
        EXPECT(gbc.pc(), 0x1d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc826), 0x7e);
        EXPECT(gbc.readMem(0xc827), 0xd0);
        // D1 0083
        gbc.setState(0x9ff1, 0xe6b4, 0x7170, 0x2bfa, 0x55ca, 0x720f, 0x0, 0x1);
        gbc.writeMem(0x9ff1, { 0xd1 });
        gbc.writeMem(0xe6b4, { 0xb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe6b6);
        EXPECT(gbc.pc(), 0x9ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff1), 0xd1);
        EXPECT(gbc.readMem(0xe6b4), 0xb);
        EXPECT(gbc.readMem(0xe6b5), 0xe1);
        // D1 0084
        gbc.setState(0x85d6, 0x5846, 0x98c0, 0x1d08, 0x66ed, 0xbaee, 0x0, 0x1);
        gbc.writeMem(0x5846, { 0xd2, 0xcb });
        gbc.writeMem(0x85d6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5848);
        EXPECT(gbc.pc(), 0x85d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d6), 0xd1);
        // D1 0085
        gbc.setState(0xb4d6, 0x5f45, 0x700, 0xa61e, 0xf830, 0xf2c8, 0x0, 0x0);
        gbc.writeMem(0x5f45, { 0x2e, 0xbb });
        gbc.writeMem(0xb4d6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5f47);
        EXPECT(gbc.pc(), 0xb4d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4d6), 0xd1);
        // D1 0086
        gbc.setState(0x6c03, 0x579b, 0xaf80, 0xbf1c, 0x8fea, 0xc7b7, 0x0, 0x1);
        gbc.writeMem(0x579b, { 0x34, 0xd9 });
        gbc.writeMem(0x6c03, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x579d);
        EXPECT(gbc.pc(), 0x6c04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0087
        gbc.setState(0xa361, 0x9576, 0x4e70, 0x24d1, 0x5c82, 0x941c, 0x1, 0x1);
        gbc.writeMem(0x9576, { 0x17, 0xca });
        gbc.writeMem(0xa361, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9578);
        EXPECT(gbc.pc(), 0xa362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9576), 0x17);
        EXPECT(gbc.readMem(0x9577), 0xca);
        EXPECT(gbc.readMem(0xa361), 0xd1);
        // D1 0089
        gbc.setState(0xde4b, 0xcafd, 0xeb80, 0xadb2, 0xf17f, 0x89a2, 0x0, 0x0);
        gbc.writeMem(0xcafd, { 0x5a, 0xdf });
        gbc.writeMem(0xde4b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcaff);
        EXPECT(gbc.pc(), 0xde4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafd), 0x5a);
        EXPECT(gbc.readMem(0xcafe), 0xdf);
        EXPECT(gbc.readMem(0xde4b), 0xd1);
        // D1 008A
        gbc.setState(0xd493, 0xbf0d, 0x10c0, 0xdd76, 0x4ce, 0x9418, 0x0, 0x1);
        gbc.writeMem(0xbf0d, { 0xc4, 0xea });
        gbc.writeMem(0xd493, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbf0f);
        EXPECT(gbc.pc(), 0xd494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf0d), 0xc4);
        EXPECT(gbc.readMem(0xbf0e), 0xea);
        EXPECT(gbc.readMem(0xd493), 0xd1);
        // D1 008B
        gbc.setState(0x357c, 0x633c, 0xb9d0, 0xcf61, 0x7b0f, 0xae77, 0x0, 0x0);
        gbc.writeMem(0x357c, { 0xd1 });
        gbc.writeMem(0x633c, { 0xc, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x633e);
        EXPECT(gbc.pc(), 0x357d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 008C
        gbc.setState(0x78eb, 0x6fc8, 0xba50, 0x499f, 0x2fee, 0xe927, 0x0, 0x1);
        gbc.writeMem(0x6fc8, { 0xbe, 0xbe });
        gbc.writeMem(0x78eb, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6fca);
        EXPECT(gbc.pc(), 0x78ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 008D
        gbc.setState(0x799, 0x15fa, 0x3360, 0x7305, 0x66cb, 0x4dc6, 0x0, 0x1);
        gbc.writeMem(0x799, { 0xd1 });
        gbc.writeMem(0x15fa, { 0x9c, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x15fc);
        EXPECT(gbc.pc(), 0x79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 008E
        gbc.setState(0xef, 0x8ad6, 0xacc0, 0x1c2d, 0x1d5b, 0x47e6, 0x1, 0x0);
        gbc.writeMem(0xef, { 0xd1 });
        gbc.writeMem(0x8ad6, { 0xd1, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8ad8);
        EXPECT(gbc.pc(), 0xf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad6), 0xd1);
        EXPECT(gbc.readMem(0x8ad7), 0x8c);
        // D1 008F
        gbc.setState(0xc8df, 0xdb8c, 0x5160, 0x6213, 0x461f, 0x4c0b, 0x0, 0x0);
        gbc.writeMem(0xc8df, { 0xd1 });
        gbc.writeMem(0xdb8c, { 0x42, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdb8e);
        EXPECT(gbc.pc(), 0xc8e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8df), 0xd1);
        EXPECT(gbc.readMem(0xdb8c), 0x42);
        EXPECT(gbc.readMem(0xdb8d), 0x3f);
        // D1 0090
        gbc.setState(0xd84b, 0x3ebc, 0xe490, 0xa32, 0x9223, 0x39a4, 0x0, 0x1);
        gbc.writeMem(0x3ebc, { 0x6e, 0xeb });
        gbc.writeMem(0xd84b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3ebe);
        EXPECT(gbc.pc(), 0xd84c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84b), 0xd1);
        // D1 0091
        gbc.setState(0x75ca, 0x2fb0, 0x5900, 0x88c2, 0xd604, 0x3004, 0x1, 0x1);
        gbc.writeMem(0x2fb0, { 0x74, 0xad });
        gbc.writeMem(0x75ca, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2fb2);
        EXPECT(gbc.pc(), 0x75cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0092
        gbc.setState(0x51dd, 0xa6a9, 0x5130, 0xac79, 0x4c9, 0xc378, 0x0, 0x1);
        gbc.writeMem(0x51dd, { 0xd1 });
        gbc.writeMem(0xa6a9, { 0xcc, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa6ab);
        EXPECT(gbc.pc(), 0x51de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a9), 0xcc);
        EXPECT(gbc.readMem(0xa6aa), 0xcd);
        // D1 0094
        gbc.setState(0xd2c, 0xd40, 0x69b0, 0xdc3, 0xb32f, 0xb6e9, 0x0, 0x0);
        gbc.writeMem(0xd2c, { 0xd1 });
        gbc.writeMem(0xd40, { 0xfa, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd42);
        EXPECT(gbc.pc(), 0xd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0095
        gbc.setState(0xd123, 0x51da, 0x67c0, 0x8155, 0x6090, 0xfe86, 0x1, 0x0);
        gbc.writeMem(0x51da, { 0x1d, 0xa3 });
        gbc.writeMem(0xd123, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x51dc);
        EXPECT(gbc.pc(), 0xd124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd123), 0xd1);
        // D1 0096
        gbc.setState(0x6302, 0xc32b, 0x3c0, 0x46f5, 0xe583, 0xa5f4, 0x0, 0x1);
        gbc.writeMem(0x6302, { 0xd1 });
        gbc.writeMem(0xc32b, { 0x81, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc32d);
        EXPECT(gbc.pc(), 0x6303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc32b), 0x81);
        EXPECT(gbc.readMem(0xc32c), 0x57);
        // D1 0097
        gbc.setState(0xe6b8, 0xa08e, 0x5850, 0x8d24, 0x5196, 0xc8bc, 0x0, 0x1);
        gbc.writeMem(0xa08e, { 0x8e, 0xc6 });
        gbc.writeMem(0xe6b8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa090);
        EXPECT(gbc.pc(), 0xe6b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa08e), 0x8e);
        EXPECT(gbc.readMem(0xa08f), 0xc6);
        EXPECT(gbc.readMem(0xe6b8), 0xd1);
        // D1 0098
        gbc.setState(0x5f26, 0x1f64, 0x3140, 0x5def, 0x4db1, 0xbbaf, 0x0, 0x0);
        gbc.writeMem(0x1f64, { 0xd9, 0xe8 });
        gbc.writeMem(0x5f26, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1f66);
        EXPECT(gbc.pc(), 0x5f27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0099
        gbc.setState(0xe321, 0x14dd, 0x13b0, 0xb49f, 0x1cb0, 0x2169, 0x0, 0x1);
        gbc.writeMem(0x14dd, { 0xcd, 0xe3 });
        gbc.writeMem(0xe321, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x14df);
        EXPECT(gbc.pc(), 0xe322);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe321), 0xd1);
        // D1 009A
        gbc.setState(0x1555, 0xea1d, 0x2de0, 0x6a0f, 0xc488, 0xacdc, 0x0, 0x1);
        gbc.writeMem(0x1555, { 0xd1 });
        gbc.writeMem(0xea1d, { 0xc8, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xea1f);
        EXPECT(gbc.pc(), 0x1556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea1d), 0xc8);
        EXPECT(gbc.readMem(0xea1e), 0x9a);
        // D1 009B
        gbc.setState(0x13a4, 0x93f9, 0xa4b0, 0x1361, 0x3d4d, 0x2e9f, 0x0, 0x1);
        gbc.writeMem(0x13a4, { 0xd1 });
        gbc.writeMem(0x93f9, { 0xdf, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x93fb);
        EXPECT(gbc.pc(), 0x13a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f9), 0xdf);
        EXPECT(gbc.readMem(0x93fa), 0xfe);
        // D1 009C
        gbc.setState(0x5f62, 0x9cc7, 0x4b30, 0x15b2, 0xeeeb, 0x45e8, 0x0, 0x0);
        gbc.writeMem(0x5f62, { 0xd1 });
        gbc.writeMem(0x9cc7, { 0xe0, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9cc9);
        EXPECT(gbc.pc(), 0x5f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cc7), 0xe0);
        EXPECT(gbc.readMem(0x9cc8), 0xa7);
        // D1 009D
        gbc.setState(0xb68e, 0xd16c, 0xd260, 0x62f4, 0xd503, 0xc7fe, 0x1, 0x0);
        gbc.writeMem(0xb68e, { 0xd1 });
        gbc.writeMem(0xd16c, { 0x3f, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd16e);
        EXPECT(gbc.pc(), 0xb68f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb68e), 0xd1);
        EXPECT(gbc.readMem(0xd16c), 0x3f);
        EXPECT(gbc.readMem(0xd16d), 0xa1);
        // D1 009E
        gbc.setState(0x533e, 0xc69b, 0x4950, 0xcd5, 0x6590, 0xc618, 0x0, 0x1);
        gbc.writeMem(0x533e, { 0xd1 });
        gbc.writeMem(0xc69b, { 0x16, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc69d);
        EXPECT(gbc.pc(), 0x533f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc69b), 0x16);
        EXPECT(gbc.readMem(0xc69c), 0x41);
        // D1 009F
        gbc.setState(0xe5eb, 0xf87a, 0xe5f0, 0xccf, 0x4bf9, 0x3111, 0x0, 0x0);
        gbc.writeMem(0xe5eb, { 0xd1 });
        gbc.writeMem(0xf87a, { 0x5c, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf87c);
        EXPECT(gbc.pc(), 0xe5ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5eb), 0xd1);
        EXPECT(gbc.readMem(0xf87a), 0x5c);
        EXPECT(gbc.readMem(0xf87b), 0x4d);
        // D1 00A0
        gbc.setState(0xe4d9, 0xbe03, 0xe140, 0x26a1, 0x5351, 0xe905, 0x1, 0x0);
        gbc.writeMem(0xbe03, { 0x4d, 0xd });
        gbc.writeMem(0xe4d9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbe05);
        EXPECT(gbc.pc(), 0xe4da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe03), 0x4d);
        EXPECT(gbc.readMem(0xbe04), 0xd);
        EXPECT(gbc.readMem(0xe4d9), 0xd1);
        // D1 00A1
        gbc.setState(0x2e32, 0x559, 0x4a00, 0xa392, 0xb386, 0x5cd7, 0x1, 0x1);
        gbc.writeMem(0x559, { 0xc2, 0x4a });
        gbc.writeMem(0x2e32, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x55b);
        EXPECT(gbc.pc(), 0x2e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 00A2
        gbc.setState(0xccae, 0x2d10, 0xcd50, 0xd60e, 0x1fba, 0x35c3, 0x1, 0x0);
        gbc.writeMem(0x2d10, { 0xf0, 0xc0 });
        gbc.writeMem(0xccae, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2d12);
        EXPECT(gbc.pc(), 0xccaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccae), 0xd1);
        // D1 00A3
        gbc.setState(0x55ce, 0xc761, 0x5450, 0x955d, 0x87aa, 0xf5c6, 0x1, 0x0);
        gbc.writeMem(0x55ce, { 0xd1 });
        gbc.writeMem(0xc761, { 0xbf, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc763);
        EXPECT(gbc.pc(), 0x55cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc761), 0xbf);
        EXPECT(gbc.readMem(0xc762), 0x3b);
        // D1 00A4
        gbc.setState(0xae6f, 0x529e, 0x7fc0, 0xadf3, 0x73ae, 0x97d4, 0x0, 0x1);
        gbc.writeMem(0x529e, { 0x28, 0x81 });
        gbc.writeMem(0xae6f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x52a0);
        EXPECT(gbc.pc(), 0xae70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae6f), 0xd1);
        // D1 00A5
        gbc.setState(0x2718, 0x9bd0, 0x24b0, 0x2cf, 0x8514, 0x7066, 0x1, 0x0);
        gbc.writeMem(0x2718, { 0xd1 });
        gbc.writeMem(0x9bd0, { 0x52, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9bd2);
        EXPECT(gbc.pc(), 0x2719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd0), 0x52);
        EXPECT(gbc.readMem(0x9bd1), 0x33);
        // D1 00A6
        gbc.setState(0x13f6, 0xdbe8, 0x3910, 0x7f14, 0x2095, 0xec41, 0x0, 0x0);
        gbc.writeMem(0x13f6, { 0xd1 });
        gbc.writeMem(0xdbe8, { 0x8f, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdbea);
        EXPECT(gbc.pc(), 0x13f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe8), 0x8f);
        EXPECT(gbc.readMem(0xdbe9), 0x6c);
        // D1 00A7
        gbc.setState(0xb9e8, 0xc8e1, 0x7920, 0xc872, 0x7e5e, 0x858e, 0x1, 0x1);
        gbc.writeMem(0xb9e8, { 0xd1 });
        gbc.writeMem(0xc8e1, { 0xb4, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc8e3);
        EXPECT(gbc.pc(), 0xb9e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e8), 0xd1);
        EXPECT(gbc.readMem(0xc8e1), 0xb4);
        EXPECT(gbc.readMem(0xc8e2), 0x5c);
        // D1 00A8
        gbc.setState(0x3c36, 0x51c, 0xcda0, 0xeed8, 0x33be, 0xe7ea, 0x0, 0x1);
        gbc.writeMem(0x51c, { 0xef, 0xb8 });
        gbc.writeMem(0x3c36, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x51e);
        EXPECT(gbc.pc(), 0x3c37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 00A9
        gbc.setState(0xdb86, 0x3cc0, 0xd0b0, 0xf2ac, 0xcf59, 0xc45d, 0x1, 0x1);
        gbc.writeMem(0x3cc0, { 0x3e, 0xc0 });
        gbc.writeMem(0xdb86, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3cc2);
        EXPECT(gbc.pc(), 0xdb87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb86), 0xd1);
        // D1 00AA
        gbc.setState(0x4e27, 0x1928, 0x8fe0, 0x4c03, 0x6aa3, 0x47b6, 0x1, 0x1);
        gbc.writeMem(0x1928, { 0xb9, 0x51 });
        gbc.writeMem(0x4e27, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x192a);
        EXPECT(gbc.pc(), 0x4e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 00AB
        gbc.setState(0x5551, 0xe9d8, 0x6740, 0x48cd, 0xbc59, 0xf568, 0x1, 0x0);
        gbc.writeMem(0x5551, { 0xd1 });
        gbc.writeMem(0xe9d8, { 0x7e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe9da);
        EXPECT(gbc.pc(), 0x5552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9d8), 0x7e);
        EXPECT(gbc.readMem(0xe9d9), 0x2c);
        // D1 00AC
        gbc.setState(0x22cf, 0xda85, 0xb140, 0x465f, 0x3841, 0xb45b, 0x0, 0x1);
        gbc.writeMem(0x22cf, { 0xd1 });
        gbc.writeMem(0xda85, { 0xcc, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xda87);
        EXPECT(gbc.pc(), 0x22d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda85), 0xcc);
        EXPECT(gbc.readMem(0xda86), 0x77);
        // D1 00AD
        gbc.setState(0xcea6, 0xc19f, 0x35b0, 0xdb58, 0xe0f9, 0x8267, 0x1, 0x0);
        gbc.writeMem(0xc19f, { 0xa8, 0xb });
        gbc.writeMem(0xcea6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc1a1);
        EXPECT(gbc.pc(), 0xcea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc19f), 0xa8);
        EXPECT(gbc.readMem(0xc1a0), 0xb);
        EXPECT(gbc.readMem(0xcea6), 0xd1);
        // D1 00AE
        gbc.setState(0x34ca, 0xf103, 0xf160, 0xe3f1, 0xce5f, 0x5f75, 0x0, 0x0);
        gbc.writeMem(0x34ca, { 0xd1 });
        gbc.writeMem(0xf103, { 0x76, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf105);
        EXPECT(gbc.pc(), 0x34cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf103), 0x76);
        EXPECT(gbc.readMem(0xf104), 0x8c);
        // D1 00AF
        gbc.setState(0x3f6a, 0xc954, 0xcfd0, 0x9b7c, 0xc3d1, 0x623c, 0x0, 0x1);
        gbc.writeMem(0x3f6a, { 0xd1 });
        gbc.writeMem(0xc954, { 0x18, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc956);
        EXPECT(gbc.pc(), 0x3f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc954), 0x18);
        EXPECT(gbc.readMem(0xc955), 0x56);
        // D1 00B0
        gbc.setState(0x4474, 0x1b60, 0x3f20, 0x5f86, 0xfa2c, 0x7d7d, 0x0, 0x1);
        gbc.writeMem(0x1b60, { 0x84, 0x13 });
        gbc.writeMem(0x4474, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1b62);
        EXPECT(gbc.pc(), 0x4475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 00B1
        gbc.setState(0x4db7, 0x169a, 0xcef0, 0x39af, 0x77f6, 0xc1bf, 0x1, 0x0);
        gbc.writeMem(0x169a, { 0x5, 0xd9 });
        gbc.writeMem(0x4db7, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x169c);
        EXPECT(gbc.pc(), 0x4db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 00B3
        gbc.setState(0x95aa, 0x52ab, 0x51a0, 0xef8a, 0xcc93, 0xb4e, 0x0, 0x0);
        gbc.writeMem(0x52ab, { 0x11, 0x47 });
        gbc.writeMem(0x95aa, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x52ad);
        EXPECT(gbc.pc(), 0x95ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95aa), 0xd1);
        // D1 00B5
        gbc.setState(0x143b, 0x5263, 0x4350, 0xc7f, 0x2aed, 0xced5, 0x0, 0x1);
        gbc.writeMem(0x143b, { 0xd1 });
        gbc.writeMem(0x5263, { 0xc3, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5265);
        EXPECT(gbc.pc(), 0x143c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 00B6
        gbc.setState(0x9add, 0x295, 0x2460, 0x5531, 0xe3b3, 0xda3e, 0x0, 0x0);
        gbc.writeMem(0x295, { 0x1, 0x23 });
        gbc.writeMem(0x9add, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x297);
        EXPECT(gbc.pc(), 0x9ade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9add), 0xd1);
        // D1 00B7
        gbc.setState(0x656b, 0xf2c4, 0x630, 0x22f, 0x3af7, 0xed86, 0x0, 0x1);
        gbc.writeMem(0x656b, { 0xd1 });
        gbc.writeMem(0xf2c4, { 0x2f, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf2c6);
        EXPECT(gbc.pc(), 0x656c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf2c4), 0x2f);
        EXPECT(gbc.readMem(0xf2c5), 0x73);
        // D1 00B8
        gbc.setState(0x4067, 0xe7dd, 0x6b50, 0x98cc, 0x8fd, 0x7944, 0x1, 0x0);
        gbc.writeMem(0x4067, { 0xd1 });
        gbc.writeMem(0xe7dd, { 0x6, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe7df);
        EXPECT(gbc.pc(), 0x4068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7dd), 0x6);
        EXPECT(gbc.readMem(0xe7de), 0x5c);
        // D1 00B9
        gbc.setState(0x2c4d, 0xc67e, 0x5c0, 0xd6d0, 0x2b74, 0x32fe, 0x1, 0x0);
        gbc.writeMem(0x2c4d, { 0xd1 });
        gbc.writeMem(0xc67e, { 0x38, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc680);
        EXPECT(gbc.pc(), 0x2c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67e), 0x38);
        EXPECT(gbc.readMem(0xc67f), 0x53);
        // D1 00BB
        gbc.setState(0xa3a1, 0x2791, 0xe450, 0xa780, 0xace0, 0x8db3, 0x1, 0x0);
        gbc.writeMem(0x2791, { 0x59, 0xad });
        gbc.writeMem(0xa3a1, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2793);
        EXPECT(gbc.pc(), 0xa3a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3a1), 0xd1);
        // D1 00BC
        gbc.setState(0x1e0a, 0xdaad, 0xfd20, 0xb0fb, 0x1a57, 0xc9b6, 0x1, 0x1);
        gbc.writeMem(0x1e0a, { 0xd1 });
        gbc.writeMem(0xdaad, { 0xbf, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdaaf);
        EXPECT(gbc.pc(), 0x1e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaad), 0xbf);
        EXPECT(gbc.readMem(0xdaae), 0x66);
        // D1 00BD
        gbc.setState(0x336b, 0xb87b, 0x6ca0, 0xca07, 0x9935, 0x9ec9, 0x0, 0x0);
        gbc.writeMem(0x336b, { 0xd1 });
        gbc.writeMem(0xb87b, { 0x67, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb87d);
        EXPECT(gbc.pc(), 0x336c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb87b), 0x67);
        EXPECT(gbc.readMem(0xb87c), 0x3d);
        // D1 00BE
        gbc.setState(0xe9ed, 0x7f8a, 0x40e0, 0x5eed, 0xb5db, 0x83a3, 0x1, 0x1);
        gbc.writeMem(0x7f8a, { 0x9c, 0x7c });
        gbc.writeMem(0xe9ed, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7f8c);
        EXPECT(gbc.pc(), 0xe9ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ed), 0xd1);
        // D1 00BF
        gbc.setState(0xdefb, 0xf31d, 0xd6b0, 0x4af0, 0x15ea, 0x134, 0x0, 0x1);
        gbc.writeMem(0xdefb, { 0xd1 });
        gbc.writeMem(0xf31d, { 0x38, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf31f);
        EXPECT(gbc.pc(), 0xdefc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdefb), 0xd1);
        EXPECT(gbc.readMem(0xf31d), 0x38);
        EXPECT(gbc.readMem(0xf31e), 0xe7);
        // D1 00C0
        gbc.setState(0x6495, 0xe4a8, 0xe2f0, 0xef72, 0x4780, 0x1f81, 0x0, 0x1);
        gbc.writeMem(0x6495, { 0xd1 });
        gbc.writeMem(0xe4a8, { 0x55, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe4aa);
        EXPECT(gbc.pc(), 0x6496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a8), 0x55);
        EXPECT(gbc.readMem(0xe4a9), 0x9f);
        // D1 00C2
        gbc.setState(0x3497, 0x82a0, 0x2900, 0x6e43, 0xd399, 0xcf21, 0x1, 0x1);
        gbc.writeMem(0x3497, { 0xd1 });
        gbc.writeMem(0x82a0, { 0xd3, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x82a2);
        EXPECT(gbc.pc(), 0x3498);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a0), 0xd3);
        EXPECT(gbc.readMem(0x82a1), 0x7c);
        // D1 00C3
        gbc.setState(0xc9cd, 0xa899, 0xbd60, 0xb453, 0xded9, 0x2f23, 0x1, 0x0);
        gbc.writeMem(0xa899, { 0x25, 0x66 });
        gbc.writeMem(0xc9cd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa89b);
        EXPECT(gbc.pc(), 0xc9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa899), 0x25);
        EXPECT(gbc.readMem(0xa89a), 0x66);
        EXPECT(gbc.readMem(0xc9cd), 0xd1);
        // D1 00C4
        gbc.setState(0xdae2, 0x7277, 0xd6f0, 0x193e, 0x9852, 0x6b27, 0x0, 0x1);
        gbc.writeMem(0x7277, { 0x37, 0x66 });
        gbc.writeMem(0xdae2, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7279);
        EXPECT(gbc.pc(), 0xdae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae2), 0xd1);
        // D1 00C5
        gbc.setState(0x94ea, 0x35c3, 0x44b0, 0xa625, 0x25d0, 0xd5cb, 0x1, 0x0);
        gbc.writeMem(0x35c3, { 0x57, 0x7b });
        gbc.writeMem(0x94ea, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x35c5);
        EXPECT(gbc.pc(), 0x94eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ea), 0xd1);
        // D1 00C6
        gbc.setState(0xa30d, 0xe612, 0xdac0, 0x23f5, 0x8e86, 0xc8ae, 0x0, 0x1);
        gbc.writeMem(0xa30d, { 0xd1 });
        gbc.writeMem(0xe612, { 0x5a, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe614);
        EXPECT(gbc.pc(), 0xa30e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa30d), 0xd1);
        EXPECT(gbc.readMem(0xe612), 0x5a);
        EXPECT(gbc.readMem(0xe613), 0x76);
        // D1 00C7
        gbc.setState(0x5de7, 0xe164, 0x3430, 0xf9e3, 0x2401, 0x8e51, 0x1, 0x1);
        gbc.writeMem(0x5de7, { 0xd1 });
        gbc.writeMem(0xe164, { 0xed, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe166);
        EXPECT(gbc.pc(), 0x5de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe164), 0xed);
        EXPECT(gbc.readMem(0xe165), 0xb7);
        // D1 00C8
        gbc.setState(0x9130, 0x2ae0, 0x4f30, 0xe6a4, 0x2f41, 0xdfdc, 0x1, 0x1);
        gbc.writeMem(0x2ae0, { 0xfc, 0x95 });
        gbc.writeMem(0x9130, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2ae2);
        EXPECT(gbc.pc(), 0x9131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9130), 0xd1);
        // D1 00C9
        gbc.setState(0x2157, 0xc892, 0xcfd0, 0x73d9, 0xf42, 0x24a0, 0x0, 0x1);
        gbc.writeMem(0x2157, { 0xd1 });
        gbc.writeMem(0xc892, { 0x38, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc894);
        EXPECT(gbc.pc(), 0x2158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc892), 0x38);
        EXPECT(gbc.readMem(0xc893), 0x4a);
        // D1 00CA
        gbc.setState(0x9c49, 0x1a9, 0x7850, 0xbfa, 0xcbdb, 0xdf30, 0x1, 0x1);
        gbc.writeMem(0x1a9, { 0xe2, 0x2b });
        gbc.writeMem(0x9c49, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1ab);
        EXPECT(gbc.pc(), 0x9c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c49), 0xd1);
        // D1 00CB
        gbc.setState(0x1fea, 0x9cf3, 0xa1a0, 0xe272, 0x493e, 0xa470, 0x0, 0x0);
        gbc.writeMem(0x1fea, { 0xd1 });
        gbc.writeMem(0x9cf3, { 0xf0, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9cf5);
        EXPECT(gbc.pc(), 0x1feb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf3), 0xf0);
        EXPECT(gbc.readMem(0x9cf4), 0x51);
        // D1 00CC
        gbc.setState(0xe2f9, 0x805b, 0xb2a0, 0xc370, 0xfd07, 0x3051, 0x1, 0x0);
        gbc.writeMem(0x805b, { 0xbe, 0xa });
        gbc.writeMem(0xe2f9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x805d);
        EXPECT(gbc.pc(), 0xe2fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x805b), 0xbe);
        EXPECT(gbc.readMem(0x805c), 0xa);
        EXPECT(gbc.readMem(0xe2f9), 0xd1);
        // D1 00CD
        gbc.setState(0x56d7, 0xe427, 0xaa00, 0x100a, 0xfec6, 0x6eb5, 0x1, 0x0);
        gbc.writeMem(0x56d7, { 0xd1 });
        gbc.writeMem(0xe427, { 0xe4, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe429);
        EXPECT(gbc.pc(), 0x56d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe427), 0xe4);
        EXPECT(gbc.readMem(0xe428), 0x4c);
        // D1 00CE
        gbc.setState(0xe32d, 0x6871, 0x2480, 0xe525, 0x5d65, 0xc7be, 0x1, 0x1);
        gbc.writeMem(0x6871, { 0x21, 0x86 });
        gbc.writeMem(0xe32d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6873);
        EXPECT(gbc.pc(), 0xe32e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe32d), 0xd1);
        // D1 00CF
        gbc.setState(0x78c5, 0x43a5, 0x72d0, 0xe362, 0xf9a6, 0xd2e3, 0x0, 0x1);
        gbc.writeMem(0x43a5, { 0x1a, 0xc5 });
        gbc.writeMem(0x78c5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x43a7);
        EXPECT(gbc.pc(), 0x78c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 00D0
        gbc.setState(0xdbe1, 0x5da2, 0x3620, 0x7841, 0xa348, 0xf661, 0x0, 0x1);
        gbc.writeMem(0x5da2, { 0xb1, 0xee });
        gbc.writeMem(0xdbe1, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5da4);
        EXPECT(gbc.pc(), 0xdbe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe1), 0xd1);
        // D1 00D1
        gbc.setState(0xa4e9, 0x8af, 0x6c0, 0x5283, 0x1a7b, 0x4446, 0x1, 0x0);
        gbc.writeMem(0x8af, { 0xf1, 0xba });
        gbc.writeMem(0xa4e9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8b1);
        EXPECT(gbc.pc(), 0xa4ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e9), 0xd1);
        // D1 00D2
        gbc.setState(0x59d, 0x2435, 0xa130, 0xdbab, 0x7d17, 0xb798, 0x1, 0x0);
        gbc.writeMem(0x59d, { 0xd1 });
        gbc.writeMem(0x2435, { 0xc9, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2437);
        EXPECT(gbc.pc(), 0x59e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 00D3
        gbc.setState(0x5737, 0x5379, 0xdd80, 0xeee7, 0x3015, 0x84a0, 0x1, 0x0);
        gbc.writeMem(0x5379, { 0x5, 0xad });
        gbc.writeMem(0x5737, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x537b);
        EXPECT(gbc.pc(), 0x5738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 00D4
        gbc.setState(0xd46, 0x1cf6, 0xf910, 0x766b, 0xacdc, 0x668c, 0x1, 0x1);
        gbc.writeMem(0xd46, { 0xd1 });
        gbc.writeMem(0x1cf6, { 0xd3, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1cf8);
        EXPECT(gbc.pc(), 0xd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 00D5
        gbc.setState(0x6be4, 0x626c, 0xa2a0, 0x85e2, 0x430c, 0x5b5d, 0x0, 0x0);
        gbc.writeMem(0x626c, { 0x23, 0x45 });
        gbc.writeMem(0x6be4, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x626e);
        EXPECT(gbc.pc(), 0x6be5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 00D6
        gbc.setState(0x707d, 0xbe01, 0xc9e0, 0xe18e, 0xdcac, 0xc2b1, 0x0, 0x1);
        gbc.writeMem(0x707d, { 0xd1 });
        gbc.writeMem(0xbe01, { 0xda, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbe03);
        EXPECT(gbc.pc(), 0x707e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe01), 0xda);
        EXPECT(gbc.readMem(0xbe02), 0xb3);
        // D1 00D7
        gbc.setState(0x3e7f, 0x3ac7, 0x4ed0, 0xe17c, 0x29d3, 0x5f56, 0x1, 0x1);
        gbc.writeMem(0x3ac7, { 0x70, 0x3 });
        gbc.writeMem(0x3e7f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3ac9);
        EXPECT(gbc.pc(), 0x3e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 00D8
        gbc.setState(0xb2e, 0xa1ba, 0x21d0, 0x648f, 0x2a61, 0x5865, 0x1, 0x0);
        gbc.writeMem(0xb2e, { 0xd1 });
        gbc.writeMem(0xa1ba, { 0x1c, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa1bc);
        EXPECT(gbc.pc(), 0xb2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ba), 0x1c);
        EXPECT(gbc.readMem(0xa1bb), 0x9);
        // D1 00D9
        gbc.setState(0xb98e, 0x9522, 0x18e0, 0x250a, 0x83cb, 0x320a, 0x1, 0x1);
        gbc.writeMem(0x9522, { 0x1d, 0xac });
        gbc.writeMem(0xb98e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9524);
        EXPECT(gbc.pc(), 0xb98f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9522), 0x1d);
        EXPECT(gbc.readMem(0x9523), 0xac);
        EXPECT(gbc.readMem(0xb98e), 0xd1);
        // D1 00DA
        gbc.setState(0x6d1b, 0xb43b, 0x96a0, 0x1cde, 0xa2dc, 0xa3ea, 0x0, 0x1);
        gbc.writeMem(0x6d1b, { 0xd1 });
        gbc.writeMem(0xb43b, { 0x39, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb43d);
        EXPECT(gbc.pc(), 0x6d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb43b), 0x39);
        EXPECT(gbc.readMem(0xb43c), 0x75);
        // D1 00DB
        gbc.setState(0xd6bd, 0x1f84, 0x5f20, 0x9b5a, 0x2197, 0xb0ee, 0x0, 0x0);
        gbc.writeMem(0x1f84, { 0x3a, 0xf9 });
        gbc.writeMem(0xd6bd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1f86);
        EXPECT(gbc.pc(), 0xd6be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6bd), 0xd1);
        // D1 00DC
        gbc.setState(0x3777, 0x1d94, 0x60f0, 0xe2e, 0x2e2a, 0xc3ea, 0x1, 0x0);
        gbc.writeMem(0x1d94, { 0x3b, 0x28 });
        gbc.writeMem(0x3777, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1d96);
        EXPECT(gbc.pc(), 0x3778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 00DD
        gbc.setState(0x2418, 0x238b, 0x7240, 0x431a, 0x365a, 0x3eec, 0x1, 0x1);
        gbc.writeMem(0x238b, { 0x6b, 0xff });
        gbc.writeMem(0x2418, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x238d);
        EXPECT(gbc.pc(), 0x2419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 00DE
        gbc.setState(0x604e, 0xb55e, 0x1180, 0xebe7, 0x92a5, 0xa2bb, 0x1, 0x1);
        gbc.writeMem(0x604e, { 0xd1 });
        gbc.writeMem(0xb55e, { 0xfc, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb560);
        EXPECT(gbc.pc(), 0x604f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb55e), 0xfc);
        EXPECT(gbc.readMem(0xb55f), 0x2);
        // D1 00DF
        gbc.setState(0x6883, 0x6462, 0x76b0, 0xf28e, 0xe7b0, 0x8a3c, 0x0, 0x1);
        gbc.writeMem(0x6462, { 0xc7, 0xf0 });
        gbc.writeMem(0x6883, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6464);
        EXPECT(gbc.pc(), 0x6884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 00E0
        gbc.setState(0x6095, 0xea81, 0x74e0, 0xa87d, 0x5bd4, 0x75c7, 0x1, 0x0);
        gbc.writeMem(0x6095, { 0xd1 });
        gbc.writeMem(0xea81, { 0xd7, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xea83);
        EXPECT(gbc.pc(), 0x6096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea81), 0xd7);
        EXPECT(gbc.readMem(0xea82), 0x32);
        // D1 00E1
        gbc.setState(0x572c, 0xf96, 0xbe80, 0x82ba, 0xd8ff, 0xb011, 0x0, 0x0);
        gbc.writeMem(0xf96, { 0xab, 0xdf });
        gbc.writeMem(0x572c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf98);
        EXPECT(gbc.pc(), 0x572d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 00E2
        gbc.setState(0xc6e9, 0x2d56, 0xcf40, 0xbc09, 0xf087, 0xe539, 0x0, 0x1);
        gbc.writeMem(0x2d56, { 0xd4, 0xc0 });
        gbc.writeMem(0xc6e9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2d58);
        EXPECT(gbc.pc(), 0xc6ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e9), 0xd1);
        // D1 00E3
        gbc.setState(0x7867, 0x1c3a, 0x4b70, 0xca08, 0x74bc, 0xf37, 0x0, 0x1);
        gbc.writeMem(0x1c3a, { 0x1, 0x24 });
        gbc.writeMem(0x7867, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1c3c);
        EXPECT(gbc.pc(), 0x7868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 00E4
        gbc.setState(0x26e, 0x382e, 0xbbf0, 0xdf1d, 0x15c7, 0xd22c, 0x0, 0x0);
        gbc.writeMem(0x26e, { 0xd1 });
        gbc.writeMem(0x382e, { 0x93, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3830);
        EXPECT(gbc.pc(), 0x26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 00E5
        gbc.setState(0x7886, 0x822a, 0x5e20, 0xf973, 0xf8b2, 0x70d0, 0x0, 0x0);
        gbc.writeMem(0x7886, { 0xd1 });
        gbc.writeMem(0x822a, { 0xc4, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x822c);
        EXPECT(gbc.pc(), 0x7887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822a), 0xc4);
        EXPECT(gbc.readMem(0x822b), 0x10);
        // D1 00E6
        gbc.setState(0x860a, 0x8f21, 0xa100, 0xd1f1, 0xe0f6, 0xc7fa, 0x1, 0x1);
        gbc.writeMem(0x860a, { 0xd1 });
        gbc.writeMem(0x8f21, { 0x6e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8f23);
        EXPECT(gbc.pc(), 0x860b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860a), 0xd1);
        EXPECT(gbc.readMem(0x8f21), 0x6e);
        EXPECT(gbc.readMem(0x8f22), 0x94);
        // D1 00E7
        gbc.setState(0x851d, 0xeea5, 0xd390, 0x891c, 0xad66, 0x9a71, 0x1, 0x1);
        gbc.writeMem(0x851d, { 0xd1 });
        gbc.writeMem(0xeea5, { 0x5, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xeea7);
        EXPECT(gbc.pc(), 0x851e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x851d), 0xd1);
        EXPECT(gbc.readMem(0xeea5), 0x5);
        EXPECT(gbc.readMem(0xeea6), 0x4e);
        // D1 00E8
        gbc.setState(0xcce6, 0xb8f2, 0xd250, 0xa4f0, 0x7d80, 0xa7cc, 0x1, 0x0);
        gbc.writeMem(0xb8f2, { 0x4d, 0x6d });
        gbc.writeMem(0xcce6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb8f4);
        EXPECT(gbc.pc(), 0xcce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f2), 0x4d);
        EXPECT(gbc.readMem(0xb8f3), 0x6d);
        EXPECT(gbc.readMem(0xcce6), 0xd1);
        // D1 00E9
        gbc.setState(0x25f3, 0x2b16, 0x3dd0, 0x1cd7, 0x6703, 0x2ef5, 0x0, 0x1);
        gbc.writeMem(0x25f3, { 0xd1 });
        gbc.writeMem(0x2b16, { 0x6b, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2b18);
        EXPECT(gbc.pc(), 0x25f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 00EA
        gbc.setState(0xa3c7, 0x406a, 0x4110, 0x4dd6, 0xd163, 0x5fd1, 0x0, 0x1);
        gbc.writeMem(0x406a, { 0x41, 0xd2 });
        gbc.writeMem(0xa3c7, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x406c);
        EXPECT(gbc.pc(), 0xa3c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c7), 0xd1);
        // D1 00EB
        gbc.setState(0xa00d, 0x2325, 0x8dd0, 0x172, 0xf57b, 0xbb5d, 0x1, 0x0);
        gbc.writeMem(0x2325, { 0x61, 0xc2 });
        gbc.writeMem(0xa00d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2327);
        EXPECT(gbc.pc(), 0xa00e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa00d), 0xd1);
        // D1 00EC
        gbc.setState(0x4353, 0x3eb9, 0xf270, 0x6fb2, 0xf7b4, 0xe8b4, 0x1, 0x1);
        gbc.writeMem(0x3eb9, { 0xab, 0xb2 });
        gbc.writeMem(0x4353, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3ebb);
        EXPECT(gbc.pc(), 0x4354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 00ED
        gbc.setState(0xe8af, 0x6c81, 0xcce0, 0x382d, 0x29fa, 0x8fe1, 0x0, 0x0);
        gbc.writeMem(0x6c81, { 0xf9, 0x2d });
        gbc.writeMem(0xe8af, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6c83);
        EXPECT(gbc.pc(), 0xe8b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8af), 0xd1);
        // D1 00EE
        gbc.setState(0xe9de, 0x45f3, 0x4d0, 0x7323, 0x7474, 0xd230, 0x0, 0x0);
        gbc.writeMem(0x45f3, { 0x52, 0x3c });
        gbc.writeMem(0xe9de, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x45f5);
        EXPECT(gbc.pc(), 0xe9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9de), 0xd1);
        // D1 00EF
        gbc.setState(0xc452, 0x34bd, 0x25f0, 0xbfe6, 0xe8d0, 0xfa02, 0x0, 0x1);
        gbc.writeMem(0x34bd, { 0xba, 0xc });
        gbc.writeMem(0xc452, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x34bf);
        EXPECT(gbc.pc(), 0xc453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc452), 0xd1);
        // D1 00F0
        gbc.setState(0x5e85, 0x6271, 0xc700, 0x7f06, 0x2b92, 0x71ad, 0x1, 0x0);
        gbc.writeMem(0x5e85, { 0xd1 });
        gbc.writeMem(0x6271, { 0x60, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6273);
        EXPECT(gbc.pc(), 0x5e86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 00F1
        gbc.setState(0xabcd, 0x650f, 0x5240, 0x50b5, 0xa7fc, 0x3c, 0x0, 0x0);
        gbc.writeMem(0x650f, { 0x7, 0x3 });
        gbc.writeMem(0xabcd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6511);
        EXPECT(gbc.pc(), 0xabce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabcd), 0xd1);
        // D1 00F2
        gbc.setState(0x7f20, 0xe337, 0xfd30, 0xc789, 0xfe54, 0x155d, 0x1, 0x0);
        gbc.writeMem(0x7f20, { 0xd1 });
        gbc.writeMem(0xe337, { 0xbe, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe339);
        EXPECT(gbc.pc(), 0x7f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe337), 0xbe);
        EXPECT(gbc.readMem(0xe338), 0xd1);
        // D1 00F4
        gbc.setState(0x8b3b, 0x68f3, 0xe970, 0xa105, 0xa5c2, 0xb276, 0x0, 0x0);
        gbc.writeMem(0x68f3, { 0xdf, 0x42 });
        gbc.writeMem(0x8b3b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x68f5);
        EXPECT(gbc.pc(), 0x8b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b3b), 0xd1);
        // D1 00F5
        gbc.setState(0x6818, 0x2c86, 0x7050, 0x3abb, 0x7aee, 0x4c8e, 0x0, 0x0);
        gbc.writeMem(0x2c86, { 0x41, 0x57 });
        gbc.writeMem(0x6818, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2c88);
        EXPECT(gbc.pc(), 0x6819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 00F6
        gbc.setState(0x97f2, 0x9720, 0xad0, 0x748a, 0x353e, 0x18b6, 0x0, 0x0);
        gbc.writeMem(0x9720, { 0xbc, 0x11 });
        gbc.writeMem(0x97f2, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9722);
        EXPECT(gbc.pc(), 0x97f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9720), 0xbc);
        EXPECT(gbc.readMem(0x9721), 0x11);
        EXPECT(gbc.readMem(0x97f2), 0xd1);
        // D1 00F7
        gbc.setState(0x5867, 0xe8dd, 0xcb20, 0xee6c, 0x763d, 0xf24f, 0x0, 0x1);
        gbc.writeMem(0x5867, { 0xd1 });
        gbc.writeMem(0xe8dd, { 0x96, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe8df);
        EXPECT(gbc.pc(), 0x5868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8dd), 0x96);
        EXPECT(gbc.readMem(0xe8de), 0x5a);
        // D1 00F8
        gbc.setState(0x2d06, 0xa97, 0x5770, 0xb4bf, 0xf53c, 0x4716, 0x0, 0x1);
        gbc.writeMem(0xa97, { 0xe, 0x17 });
        gbc.writeMem(0x2d06, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa99);
        EXPECT(gbc.pc(), 0x2d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 00F9
        gbc.setState(0x5fe5, 0xba02, 0x6f00, 0x62ed, 0xfd1, 0x592d, 0x0, 0x1);
        gbc.writeMem(0x5fe5, { 0xd1 });
        gbc.writeMem(0xba02, { 0x33, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xba04);
        EXPECT(gbc.pc(), 0x5fe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba02), 0x33);
        EXPECT(gbc.readMem(0xba03), 0x6d);
        // D1 00FA
        gbc.setState(0x12ed, 0x63cc, 0x87b0, 0xd757, 0xcb8, 0xde45, 0x1, 0x1);
        gbc.writeMem(0x12ed, { 0xd1 });
        gbc.writeMem(0x63cc, { 0x1b, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x63ce);
        EXPECT(gbc.pc(), 0x12ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 00FB
        gbc.setState(0xd22e, 0xd53, 0x3c50, 0x9a9d, 0xcd09, 0x866d, 0x1, 0x0);
        gbc.writeMem(0xd53, { 0xc3, 0x3 });
        gbc.writeMem(0xd22e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd55);
        EXPECT(gbc.pc(), 0xd22f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd22e), 0xd1);
        // D1 00FC
        gbc.setState(0xedb8, 0xa133, 0x8890, 0xc2f6, 0x821b, 0x2cc3, 0x1, 0x1);
        gbc.writeMem(0xa133, { 0xa2, 0x81 });
        gbc.writeMem(0xedb8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa135);
        EXPECT(gbc.pc(), 0xedb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa133), 0xa2);
        EXPECT(gbc.readMem(0xa134), 0x81);
        EXPECT(gbc.readMem(0xedb8), 0xd1);
        // D1 00FD
        gbc.setState(0xabc7, 0xf099, 0x1a50, 0x1a9e, 0x59fa, 0x152b, 0x0, 0x1);
        gbc.writeMem(0xabc7, { 0xd1 });
        gbc.writeMem(0xf099, { 0x87, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf09b);
        EXPECT(gbc.pc(), 0xabc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc7), 0xd1);
        EXPECT(gbc.readMem(0xf099), 0x87);
        EXPECT(gbc.readMem(0xf09a), 0x89);
        // D1 00FE
        gbc.setState(0x29cf, 0xa245, 0xf7f0, 0x43b9, 0xb4e5, 0x2842, 0x0, 0x1);
        gbc.writeMem(0x29cf, { 0xd1 });
        gbc.writeMem(0xa245, { 0x7c, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa247);
        EXPECT(gbc.pc(), 0x29d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa245), 0x7c);
        EXPECT(gbc.readMem(0xa246), 0xe3);
        // D1 00FF
        gbc.setState(0x1551, 0x5cb5, 0x4b60, 0x2157, 0x8f1e, 0x1756, 0x1, 0x1);
        gbc.writeMem(0x1551, { 0xd1 });
        gbc.writeMem(0x5cb5, { 0xce, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5cb7);
        EXPECT(gbc.pc(), 0x1552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0100
        gbc.setState(0xeef, 0x5283, 0x7a20, 0xf254, 0x1f04, 0xc50c, 0x0, 0x1);
        gbc.writeMem(0xeef, { 0xd1 });
        gbc.writeMem(0x5283, { 0xac, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5285);
        EXPECT(gbc.pc(), 0xef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0101
        gbc.setState(0xb5e6, 0xadd0, 0xbf90, 0xf7bc, 0x64dd, 0x346c, 0x0, 0x0);
        gbc.writeMem(0xadd0, { 0x36, 0xca });
        gbc.writeMem(0xb5e6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xadd2);
        EXPECT(gbc.pc(), 0xb5e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadd0), 0x36);
        EXPECT(gbc.readMem(0xadd1), 0xca);
        EXPECT(gbc.readMem(0xb5e6), 0xd1);
        // D1 0102
        gbc.setState(0xef95, 0x22e5, 0x9ec0, 0x3394, 0x8893, 0xa99e, 0x1, 0x1);
        gbc.writeMem(0x22e5, { 0xfb, 0x40 });
        gbc.writeMem(0xef95, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x22e7);
        EXPECT(gbc.pc(), 0xef96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef95), 0xd1);
        // D1 0103
        gbc.setState(0xc3f0, 0xb8c5, 0x8ee0, 0x545a, 0x46f1, 0xe050, 0x0, 0x0);
        gbc.writeMem(0xb8c5, { 0x7d, 0x6a });
        gbc.writeMem(0xc3f0, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb8c7);
        EXPECT(gbc.pc(), 0xc3f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c5), 0x7d);
        EXPECT(gbc.readMem(0xb8c6), 0x6a);
        EXPECT(gbc.readMem(0xc3f0), 0xd1);
        // D1 0104
        gbc.setState(0x7ac5, 0x89e6, 0xc840, 0xfc19, 0x4008, 0x542f, 0x1, 0x1);
        gbc.writeMem(0x7ac5, { 0xd1 });
        gbc.writeMem(0x89e6, { 0x8, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x89e8);
        EXPECT(gbc.pc(), 0x7ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e6), 0x8);
        EXPECT(gbc.readMem(0x89e7), 0x10);
        // D1 0105
        gbc.setState(0xe8f6, 0x9c1f, 0x5b60, 0xf349, 0x78aa, 0xf7c, 0x0, 0x0);
        gbc.writeMem(0x9c1f, { 0x5b, 0x6b });
        gbc.writeMem(0xe8f6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9c21);
        EXPECT(gbc.pc(), 0xe8f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1f), 0x5b);
        EXPECT(gbc.readMem(0x9c20), 0x6b);
        EXPECT(gbc.readMem(0xe8f6), 0xd1);
        // D1 0106
        gbc.setState(0xc18e, 0x3879, 0x97c0, 0x71a0, 0xfe71, 0x59ad, 0x1, 0x0);
        gbc.writeMem(0x3879, { 0x48, 0x1 });
        gbc.writeMem(0xc18e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x387b);
        EXPECT(gbc.pc(), 0xc18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc18e), 0xd1);
        // D1 0107
        gbc.setState(0xb50c, 0x235b, 0x5400, 0x5db3, 0x53eb, 0xad61, 0x0, 0x0);
        gbc.writeMem(0x235b, { 0x81, 0xfa });
        gbc.writeMem(0xb50c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x235d);
        EXPECT(gbc.pc(), 0xb50d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb50c), 0xd1);
        // D1 0108
        gbc.setState(0x7683, 0xa0ad, 0x8d40, 0x1eb0, 0x5f81, 0x3fe9, 0x0, 0x0);
        gbc.writeMem(0x7683, { 0xd1 });
        gbc.writeMem(0xa0ad, { 0x19, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa0af);
        EXPECT(gbc.pc(), 0x7684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ad), 0x19);
        EXPECT(gbc.readMem(0xa0ae), 0x3c);
        // D1 0109
        gbc.setState(0xae39, 0x63c, 0x8830, 0xe264, 0x6d60, 0xc569, 0x0, 0x1);
        gbc.writeMem(0x63c, { 0xc4, 0x77 });
        gbc.writeMem(0xae39, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x63e);
        EXPECT(gbc.pc(), 0xae3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae39), 0xd1);
        // D1 010A
        gbc.setState(0xc5b6, 0x4679, 0xff90, 0x7517, 0x2529, 0xba12, 0x0, 0x0);
        gbc.writeMem(0x4679, { 0x48, 0x59 });
        gbc.writeMem(0xc5b6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x467b);
        EXPECT(gbc.pc(), 0xc5b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b6), 0xd1);
        // D1 010B
        gbc.setState(0x403c, 0x6bd5, 0xfeb0, 0xea6c, 0xe0e6, 0x71a1, 0x1, 0x1);
        gbc.writeMem(0x403c, { 0xd1 });
        gbc.writeMem(0x6bd5, { 0xf4, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6bd7);
        EXPECT(gbc.pc(), 0x403d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 010C
        gbc.setState(0xb8eb, 0xe6a, 0xbab0, 0x1070, 0x782a, 0x9c3d, 0x0, 0x0);
        gbc.writeMem(0xe6a, { 0xde, 0x1b });
        gbc.writeMem(0xb8eb, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe6c);
        EXPECT(gbc.pc(), 0xb8ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8eb), 0xd1);
        // D1 010D
        gbc.setState(0x7182, 0xbbb9, 0x8440, 0x53f, 0x66ff, 0x4309, 0x1, 0x0);
        gbc.writeMem(0x7182, { 0xd1 });
        gbc.writeMem(0xbbb9, { 0xbb, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbbbb);
        EXPECT(gbc.pc(), 0x7183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb9), 0xbb);
        EXPECT(gbc.readMem(0xbbba), 0xaf);
        // D1 010E
        gbc.setState(0xcc92, 0x36a7, 0x3230, 0x4bee, 0x420c, 0x9094, 0x0, 0x0);
        gbc.writeMem(0x36a7, { 0x72, 0xc1 });
        gbc.writeMem(0xcc92, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x36a9);
        EXPECT(gbc.pc(), 0xcc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc92), 0xd1);
        // D1 010F
        gbc.setState(0xb5b9, 0x264c, 0xdf70, 0xb9ae, 0xd695, 0x9b24, 0x0, 0x0);
        gbc.writeMem(0x264c, { 0x7d, 0xc0 });
        gbc.writeMem(0xb5b9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x264e);
        EXPECT(gbc.pc(), 0xb5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5b9), 0xd1);
        // D1 0110
        gbc.setState(0x41c3, 0x4532, 0xf480, 0xb43c, 0xedbd, 0x47b9, 0x0, 0x1);
        gbc.writeMem(0x41c3, { 0xd1 });
        gbc.writeMem(0x4532, { 0xaf, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4534);
        EXPECT(gbc.pc(), 0x41c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0111
        gbc.setState(0x44d1, 0xc138, 0x1910, 0x3916, 0xbd86, 0xb97f, 0x1, 0x1);
        gbc.writeMem(0x44d1, { 0xd1 });
        gbc.writeMem(0xc138, { 0x71, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc13a);
        EXPECT(gbc.pc(), 0x44d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc138), 0x71);
        EXPECT(gbc.readMem(0xc139), 0xa4);
        // D1 0112
        gbc.setState(0x109e, 0x66da, 0x71c0, 0x220, 0x4612, 0x2c92, 0x0, 0x0);
        gbc.writeMem(0x109e, { 0xd1 });
        gbc.writeMem(0x66da, { 0x74, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x66dc);
        EXPECT(gbc.pc(), 0x109f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0113
        gbc.setState(0x29d4, 0x348b, 0x2a00, 0xed45, 0x4329, 0x2015, 0x1, 0x1);
        gbc.writeMem(0x29d4, { 0xd1 });
        gbc.writeMem(0x348b, { 0x26, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x348d);
        EXPECT(gbc.pc(), 0x29d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0114
        gbc.setState(0xdb17, 0xcf2b, 0xd690, 0xc6f7, 0xc2da, 0x83fc, 0x0, 0x1);
        gbc.writeMem(0xcf2b, { 0xb6, 0x49 });
        gbc.writeMem(0xdb17, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcf2d);
        EXPECT(gbc.pc(), 0xdb18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf2b), 0xb6);
        EXPECT(gbc.readMem(0xcf2c), 0x49);
        EXPECT(gbc.readMem(0xdb17), 0xd1);
        // D1 0115
        gbc.setState(0x5f3a, 0x15d3, 0x59a0, 0x4488, 0x8e3e, 0xf67b, 0x0, 0x0);
        gbc.writeMem(0x15d3, { 0xfc, 0x61 });
        gbc.writeMem(0x5f3a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x15d5);
        EXPECT(gbc.pc(), 0x5f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0116
        gbc.setState(0xc489, 0xf46b, 0x4660, 0x45f8, 0x67e7, 0x7d5d, 0x0, 0x1);
        gbc.writeMem(0xc489, { 0xd1 });
        gbc.writeMem(0xf46b, { 0x8b, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf46d);
        EXPECT(gbc.pc(), 0xc48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc489), 0xd1);
        EXPECT(gbc.readMem(0xf46b), 0x8b);
        EXPECT(gbc.readMem(0xf46c), 0x5d);
        // D1 0117
        gbc.setState(0x5b91, 0xd1a2, 0x7d10, 0xce9c, 0x2048, 0xea24, 0x1, 0x1);
        gbc.writeMem(0x5b91, { 0xd1 });
        gbc.writeMem(0xd1a2, { 0x4b, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd1a4);
        EXPECT(gbc.pc(), 0x5b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a2), 0x4b);
        EXPECT(gbc.readMem(0xd1a3), 0x78);
        // D1 0118
        gbc.setState(0x8745, 0xf7de, 0xca60, 0x5ede, 0xd7, 0x8d31, 0x0, 0x1);
        gbc.writeMem(0x8745, { 0xd1 });
        gbc.writeMem(0xf7de, { 0x3, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf7e0);
        EXPECT(gbc.pc(), 0x8746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8745), 0xd1);
        EXPECT(gbc.readMem(0xf7de), 0x3);
        EXPECT(gbc.readMem(0xf7df), 0xfb);
        // D1 0119
        gbc.setState(0x5380, 0x5b69, 0xc190, 0x6db5, 0x22c7, 0xf988, 0x1, 0x1);
        gbc.writeMem(0x5380, { 0xd1 });
        gbc.writeMem(0x5b69, { 0x67, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5b6b);
        EXPECT(gbc.pc(), 0x5381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 011A
        gbc.setState(0x15c9, 0x4e32, 0xe540, 0xedbf, 0xf9d1, 0xca9d, 0x0, 0x0);
        gbc.writeMem(0x15c9, { 0xd1 });
        gbc.writeMem(0x4e32, { 0xe4, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4e34);
        EXPECT(gbc.pc(), 0x15ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 011B
        gbc.setState(0x92ba, 0xff1, 0xd1e0, 0x50a7, 0xed83, 0x65d4, 0x1, 0x0);
        gbc.writeMem(0xff1, { 0xfa, 0xf });
        gbc.writeMem(0x92ba, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xff3);
        EXPECT(gbc.pc(), 0x92bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ba), 0xd1);
        // D1 011C
        gbc.setState(0x285d, 0x37e8, 0xe390, 0x34ae, 0x15ce, 0x2700, 0x0, 0x0);
        gbc.writeMem(0x285d, { 0xd1 });
        gbc.writeMem(0x37e8, { 0xf0, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x37ea);
        EXPECT(gbc.pc(), 0x285e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 011D
        gbc.setState(0xeeae, 0x473a, 0x49f0, 0x2c8b, 0xdd5c, 0xa4fb, 0x1, 0x0);
        gbc.writeMem(0x473a, { 0xfa, 0x2 });
        gbc.writeMem(0xeeae, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x473c);
        EXPECT(gbc.pc(), 0xeeaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeae), 0xd1);
        // D1 011E
        gbc.setState(0x2cf4, 0xe322, 0x27c0, 0xeccd, 0x9e74, 0x6358, 0x1, 0x1);
        gbc.writeMem(0x2cf4, { 0xd1 });
        gbc.writeMem(0xe322, { 0x4a, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe324);
        EXPECT(gbc.pc(), 0x2cf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe322), 0x4a);
        EXPECT(gbc.readMem(0xe323), 0x3d);
        // D1 011F
        gbc.setState(0xa894, 0x740e, 0xc810, 0xb11a, 0xfe74, 0xaded, 0x1, 0x1);
        gbc.writeMem(0x740e, { 0x63, 0x92 });
        gbc.writeMem(0xa894, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7410);
        EXPECT(gbc.pc(), 0xa895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa894), 0xd1);
        // D1 0120
        gbc.setState(0x9743, 0x1c15, 0xa860, 0x2776, 0x7316, 0xa4cb, 0x0, 0x0);
        gbc.writeMem(0x1c15, { 0xe3, 0x74 });
        gbc.writeMem(0x9743, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1c17);
        EXPECT(gbc.pc(), 0x9744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9743), 0xd1);
        // D1 0121
        gbc.setState(0x389, 0xa433, 0x49b0, 0x4b8a, 0x2401, 0x97b1, 0x0, 0x0);
        gbc.writeMem(0x389, { 0xd1 });
        gbc.writeMem(0xa433, { 0xe8, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa435);
        EXPECT(gbc.pc(), 0x38a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa433), 0xe8);
        EXPECT(gbc.readMem(0xa434), 0x9c);
        // D1 0122
        gbc.setState(0x691f, 0x13e7, 0xf000, 0x1fa5, 0xf6f0, 0xbb5d, 0x1, 0x1);
        gbc.writeMem(0x13e7, { 0xce, 0x40 });
        gbc.writeMem(0x691f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x13e9);
        EXPECT(gbc.pc(), 0x6920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0123
        gbc.setState(0x1a5b, 0x2a8d, 0x3a30, 0x7994, 0xafb1, 0x2aef, 0x1, 0x0);
        gbc.writeMem(0x1a5b, { 0xd1 });
        gbc.writeMem(0x2a8d, { 0xce, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2a8f);
        EXPECT(gbc.pc(), 0x1a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0125
        gbc.setState(0x7f6f, 0x5d08, 0x6600, 0xa3e, 0x4526, 0x3e80, 0x0, 0x0);
        gbc.writeMem(0x5d08, { 0x52, 0x60 });
        gbc.writeMem(0x7f6f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5d0a);
        EXPECT(gbc.pc(), 0x7f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0127
        gbc.setState(0x7011, 0xf139, 0x1e40, 0x5a83, 0x612d, 0xae0a, 0x1, 0x1);
        gbc.writeMem(0x7011, { 0xd1 });
        gbc.writeMem(0xf139, { 0xf9, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf13b);
        EXPECT(gbc.pc(), 0x7012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf139), 0xf9);
        EXPECT(gbc.readMem(0xf13a), 0xc3);
        // D1 0128
        gbc.setState(0xbe30, 0x6f34, 0x16f0, 0xc842, 0xcc16, 0xfcbf, 0x0, 0x0);
        gbc.writeMem(0x6f34, { 0x15, 0x98 });
        gbc.writeMem(0xbe30, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6f36);
        EXPECT(gbc.pc(), 0xbe31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe30), 0xd1);
        // D1 0129
        gbc.setState(0x835d, 0xbfca, 0x1c20, 0x8317, 0x5dc4, 0xc45a, 0x0, 0x1);
        gbc.writeMem(0x835d, { 0xd1 });
        gbc.writeMem(0xbfca, { 0x8f, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbfcc);
        EXPECT(gbc.pc(), 0x835e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x835d), 0xd1);
        EXPECT(gbc.readMem(0xbfca), 0x8f);
        EXPECT(gbc.readMem(0xbfcb), 0x14);
        // D1 012B
        gbc.setState(0x2418, 0x6444, 0x1840, 0x2e4, 0xcbd7, 0x2589, 0x1, 0x1);
        gbc.writeMem(0x2418, { 0xd1 });
        gbc.writeMem(0x6444, { 0xca, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6446);
        EXPECT(gbc.pc(), 0x2419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 012D
        gbc.setState(0x6fe6, 0xb583, 0x19d0, 0xe62c, 0x5047, 0x9fca, 0x1, 0x1);
        gbc.writeMem(0x6fe6, { 0xd1 });
        gbc.writeMem(0xb583, { 0x50, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb585);
        EXPECT(gbc.pc(), 0x6fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb583), 0x50);
        EXPECT(gbc.readMem(0xb584), 0x36);
        // D1 012E
        gbc.setState(0xa8e0, 0xb43, 0xf460, 0x995c, 0x3d19, 0xd80c, 0x0, 0x0);
        gbc.writeMem(0xb43, { 0x6, 0xe7 });
        gbc.writeMem(0xa8e0, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb45);
        EXPECT(gbc.pc(), 0xa8e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e0), 0xd1);
        // D1 012F
        gbc.setState(0x8a29, 0x5b30, 0x1880, 0x3db3, 0x9968, 0x9cdc, 0x0, 0x1);
        gbc.writeMem(0x5b30, { 0x47, 0xb8 });
        gbc.writeMem(0x8a29, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5b32);
        EXPECT(gbc.pc(), 0x8a2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a29), 0xd1);
        // D1 0130
        gbc.setState(0xefb4, 0xbdcd, 0xe40, 0xa5d1, 0x6c59, 0x2609, 0x1, 0x1);
        gbc.writeMem(0xbdcd, { 0x96, 0xab });
        gbc.writeMem(0xefb4, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbdcf);
        EXPECT(gbc.pc(), 0xefb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdcd), 0x96);
        EXPECT(gbc.readMem(0xbdce), 0xab);
        EXPECT(gbc.readMem(0xefb4), 0xd1);
        // D1 0131
        gbc.setState(0xb9de, 0x7e99, 0x9910, 0x691c, 0x9b87, 0xa9af, 0x0, 0x0);
        gbc.writeMem(0x7e99, { 0x46, 0xc3 });
        gbc.writeMem(0xb9de, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7e9b);
        EXPECT(gbc.pc(), 0xb9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9de), 0xd1);
        // D1 0132
        gbc.setState(0x2c46, 0xa86e, 0x7490, 0x202, 0x2f20, 0xacd4, 0x1, 0x1);
        gbc.writeMem(0x2c46, { 0xd1 });
        gbc.writeMem(0xa86e, { 0xdd, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa870);
        EXPECT(gbc.pc(), 0x2c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa86e), 0xdd);
        EXPECT(gbc.readMem(0xa86f), 0xda);
        // D1 0134
        gbc.setState(0x3114, 0xc848, 0x73f0, 0x182f, 0x2d7e, 0x5257, 0x1, 0x1);
        gbc.writeMem(0x3114, { 0xd1 });
        gbc.writeMem(0xc848, { 0x20, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc84a);
        EXPECT(gbc.pc(), 0x3115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc848), 0x20);
        EXPECT(gbc.readMem(0xc849), 0xfb);
        // D1 0135
        gbc.setState(0xaeb8, 0xf88b, 0x63e0, 0x56b3, 0xf9b1, 0xf411, 0x1, 0x1);
        gbc.writeMem(0xaeb8, { 0xd1 });
        gbc.writeMem(0xf88b, { 0xa5, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf88d);
        EXPECT(gbc.pc(), 0xaeb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb8), 0xd1);
        EXPECT(gbc.readMem(0xf88b), 0xa5);
        EXPECT(gbc.readMem(0xf88c), 0x84);
        // D1 0136
        gbc.setState(0x72d6, 0x343a, 0xd9a0, 0xd7ac, 0xd930, 0x8f38, 0x1, 0x1);
        gbc.writeMem(0x343a, { 0x9a, 0x67 });
        gbc.writeMem(0x72d6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x343c);
        EXPECT(gbc.pc(), 0x72d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0137
        gbc.setState(0xa443, 0xaadd, 0x92d0, 0xfa35, 0x4045, 0xfb4b, 0x0, 0x1);
        gbc.writeMem(0xa443, { 0xd1 });
        gbc.writeMem(0xaadd, { 0x7f, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xaadf);
        EXPECT(gbc.pc(), 0xa444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa443), 0xd1);
        EXPECT(gbc.readMem(0xaadd), 0x7f);
        EXPECT(gbc.readMem(0xaade), 0xca);
        // D1 0138
        gbc.setState(0x9785, 0x6e5d, 0xd670, 0x5ba6, 0xeb4d, 0xb8d7, 0x1, 0x1);
        gbc.writeMem(0x6e5d, { 0x7e, 0xb2 });
        gbc.writeMem(0x9785, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6e5f);
        EXPECT(gbc.pc(), 0x9786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9785), 0xd1);
        // D1 013A
        gbc.setState(0x3de, 0x41e3, 0x2b40, 0x41ee, 0xd48d, 0x2ae3, 0x0, 0x0);
        gbc.writeMem(0x3de, { 0xd1 });
        gbc.writeMem(0x41e3, { 0x73, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x41e5);
        EXPECT(gbc.pc(), 0x3df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 013B
        gbc.setState(0x71c8, 0xa100, 0xaa0, 0xbb62, 0x8ee4, 0xd5f9, 0x0, 0x0);
        gbc.writeMem(0x71c8, { 0xd1 });
        gbc.writeMem(0xa100, { 0x94, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa102);
        EXPECT(gbc.pc(), 0x71c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa100), 0x94);
        EXPECT(gbc.readMem(0xa101), 0x8c);
        // D1 013C
        gbc.setState(0xbcf2, 0x2820, 0xfa80, 0x1561, 0xf6ff, 0xed69, 0x0, 0x1);
        gbc.writeMem(0x2820, { 0xf7, 0x64 });
        gbc.writeMem(0xbcf2, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2822);
        EXPECT(gbc.pc(), 0xbcf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf2), 0xd1);
        // D1 013D
        gbc.setState(0x3077, 0xb490, 0x8d50, 0xecdd, 0xae4e, 0x6ea3, 0x1, 0x1);
        gbc.writeMem(0x3077, { 0xd1 });
        gbc.writeMem(0xb490, { 0x8d, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb492);
        EXPECT(gbc.pc(), 0x3078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb490), 0x8d);
        EXPECT(gbc.readMem(0xb491), 0xec);
        // D1 013E
        gbc.setState(0xa143, 0x24b6, 0xd1b0, 0x63e7, 0x1c7b, 0x4518, 0x1, 0x0);
        gbc.writeMem(0x24b6, { 0xf, 0xd1 });
        gbc.writeMem(0xa143, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x24b8);
        EXPECT(gbc.pc(), 0xa144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa143), 0xd1);
        // D1 013F
        gbc.setState(0x691e, 0xc4bf, 0x7840, 0x7038, 0x158f, 0xeede, 0x1, 0x0);
        gbc.writeMem(0x691e, { 0xd1 });
        gbc.writeMem(0xc4bf, { 0xb1, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc4c1);
        EXPECT(gbc.pc(), 0x691f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4bf), 0xb1);
        EXPECT(gbc.readMem(0xc4c0), 0x89);
        // D1 0140
        gbc.setState(0x5365, 0xf3b9, 0xa700, 0x6e9f, 0x95e5, 0x8260, 0x1, 0x1);
        gbc.writeMem(0x5365, { 0xd1 });
        gbc.writeMem(0xf3b9, { 0xbf, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf3bb);
        EXPECT(gbc.pc(), 0x5366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf3b9), 0xbf);
        EXPECT(gbc.readMem(0xf3ba), 0x0);
        // D1 0141
        gbc.setState(0xa615, 0xaa2e, 0x65c0, 0x3b0c, 0x6820, 0xe52, 0x0, 0x1);
        gbc.writeMem(0xa615, { 0xd1 });
        gbc.writeMem(0xaa2e, { 0xd0, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xaa30);
        EXPECT(gbc.pc(), 0xa616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa615), 0xd1);
        EXPECT(gbc.readMem(0xaa2e), 0xd0);
        EXPECT(gbc.readMem(0xaa2f), 0xdb);
        // D1 0142
        gbc.setState(0xafd, 0x1fb, 0xc250, 0x50df, 0x60e7, 0xdb66, 0x0, 0x0);
        gbc.writeMem(0x1fb, { 0x7b, 0x87 });
        gbc.writeMem(0xafd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1fd);
        EXPECT(gbc.pc(), 0xafe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0143
        gbc.setState(0x4058, 0x4fc, 0xe690, 0x1a96, 0xc8c7, 0xe86b, 0x0, 0x1);
        gbc.writeMem(0x4fc, { 0xad, 0xf9 });
        gbc.writeMem(0x4058, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4fe);
        EXPECT(gbc.pc(), 0x4059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0144
        gbc.setState(0x2fc6, 0x75f0, 0xae30, 0xdd90, 0x3119, 0xf877, 0x0, 0x1);
        gbc.writeMem(0x2fc6, { 0xd1 });
        gbc.writeMem(0x75f0, { 0x2, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x75f2);
        EXPECT(gbc.pc(), 0x2fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0145
        gbc.setState(0xe028, 0xa066, 0x75f0, 0x3be0, 0xe0a9, 0xc09c, 0x1, 0x1);
        gbc.writeMem(0xa066, { 0x62, 0x1e });
        gbc.writeMem(0xe028, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa068);
        EXPECT(gbc.pc(), 0xe029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa066), 0x62);
        EXPECT(gbc.readMem(0xa067), 0x1e);
        EXPECT(gbc.readMem(0xe028), 0xd1);
        // D1 0146
        gbc.setState(0x9514, 0x9243, 0x8fb0, 0x572a, 0x7ddc, 0x318b, 0x1, 0x0);
        gbc.writeMem(0x9243, { 0xd2, 0x7 });
        gbc.writeMem(0x9514, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9245);
        EXPECT(gbc.pc(), 0x9515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9243), 0xd2);
        EXPECT(gbc.readMem(0x9244), 0x7);
        EXPECT(gbc.readMem(0x9514), 0xd1);
        // D1 0147
        gbc.setState(0x7c3e, 0xbbc2, 0x3300, 0x3ded, 0xdce3, 0xf4ba, 0x1, 0x0);
        gbc.writeMem(0x7c3e, { 0xd1 });
        gbc.writeMem(0xbbc2, { 0x47, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbbc4);
        EXPECT(gbc.pc(), 0x7c3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc2), 0x47);
        EXPECT(gbc.readMem(0xbbc3), 0xfe);
        // D1 0148
        gbc.setState(0x799f, 0x1dbe, 0xd8a0, 0x4e91, 0x7255, 0x5c5d, 0x0, 0x1);
        gbc.writeMem(0x1dbe, { 0xb9, 0x3e });
        gbc.writeMem(0x799f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1dc0);
        EXPECT(gbc.pc(), 0x79a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0149
        gbc.setState(0xe387, 0x8a73, 0x5d60, 0xf21b, 0x5946, 0x3ebe, 0x0, 0x0);
        gbc.writeMem(0x8a73, { 0x5, 0xf5 });
        gbc.writeMem(0xe387, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8a75);
        EXPECT(gbc.pc(), 0xe388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a73), 0x5);
        EXPECT(gbc.readMem(0x8a74), 0xf5);
        EXPECT(gbc.readMem(0xe387), 0xd1);
        // D1 014B
        gbc.setState(0x8853, 0x9cba, 0x600, 0x4d40, 0xef7e, 0xd698, 0x1, 0x1);
        gbc.writeMem(0x8853, { 0xd1 });
        gbc.writeMem(0x9cba, { 0xf5, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9cbc);
        EXPECT(gbc.pc(), 0x8854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8853), 0xd1);
        EXPECT(gbc.readMem(0x9cba), 0xf5);
        EXPECT(gbc.readMem(0x9cbb), 0x3e);
        // D1 014C
        gbc.setState(0xa406, 0xc6b5, 0x8d40, 0xc2fb, 0x73a5, 0xd580, 0x0, 0x1);
        gbc.writeMem(0xa406, { 0xd1 });
        gbc.writeMem(0xc6b5, { 0x6f, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc6b7);
        EXPECT(gbc.pc(), 0xa407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa406), 0xd1);
        EXPECT(gbc.readMem(0xc6b5), 0x6f);
        EXPECT(gbc.readMem(0xc6b6), 0x8a);
        // D1 014D
        gbc.setState(0xb8fd, 0x3ad3, 0x360, 0xeb3c, 0x95a8, 0x21b8, 0x1, 0x0);
        gbc.writeMem(0x3ad3, { 0x98, 0xe2 });
        gbc.writeMem(0xb8fd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3ad5);
        EXPECT(gbc.pc(), 0xb8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8fd), 0xd1);
        // D1 014E
        gbc.setState(0x9444, 0xe0b3, 0xe30, 0x6975, 0xda53, 0xf528, 0x0, 0x1);
        gbc.writeMem(0x9444, { 0xd1 });
        gbc.writeMem(0xe0b3, { 0xb4, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe0b5);
        EXPECT(gbc.pc(), 0x9445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9444), 0xd1);
        EXPECT(gbc.readMem(0xe0b3), 0xb4);
        EXPECT(gbc.readMem(0xe0b4), 0xf4);
        // D1 0150
        gbc.setState(0x8942, 0xca2a, 0x3a70, 0x4efe, 0x3dfb, 0xd5ff, 0x0, 0x1);
        gbc.writeMem(0x8942, { 0xd1 });
        gbc.writeMem(0xca2a, { 0xad, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xca2c);
        EXPECT(gbc.pc(), 0x8943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8942), 0xd1);
        EXPECT(gbc.readMem(0xca2a), 0xad);
        EXPECT(gbc.readMem(0xca2b), 0xd6);
        // D1 0151
        gbc.setState(0x8180, 0xff9d, 0xe80, 0x696a, 0x9f6e, 0xfa7b, 0x0, 0x1);
        gbc.writeMem(0x8180, { 0xd1 });
        gbc.writeMem(0xff9d, { 0xc, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xff9f);
        EXPECT(gbc.pc(), 0x8181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8180), 0xd1);
        EXPECT(gbc.readMem(0xff9d), 0xc);
        EXPECT(gbc.readMem(0xff9e), 0xde);
        // D1 0152
        gbc.setState(0x1f8a, 0x3bd7, 0x2990, 0x1ed7, 0xb0a3, 0xe907, 0x1, 0x0);
        gbc.writeMem(0x1f8a, { 0xd1 });
        gbc.writeMem(0x3bd7, { 0x8a, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3bd9);
        EXPECT(gbc.pc(), 0x1f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0153
        gbc.setState(0x84c0, 0x360b, 0xf5c0, 0x70a0, 0xf560, 0x19d2, 0x0, 0x1);
        gbc.writeMem(0x360b, { 0xca, 0xef });
        gbc.writeMem(0x84c0, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x360d);
        EXPECT(gbc.pc(), 0x84c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c0), 0xd1);
        // D1 0154
        gbc.setState(0xabc9, 0x1d43, 0x27b0, 0x1f7e, 0xc559, 0xf65d, 0x0, 0x0);
        gbc.writeMem(0x1d43, { 0x2f, 0x62 });
        gbc.writeMem(0xabc9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1d45);
        EXPECT(gbc.pc(), 0xabca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc9), 0xd1);
        // D1 0155
        gbc.setState(0xce6c, 0x5f64, 0x1a50, 0x88a5, 0x401e, 0xb122, 0x1, 0x1);
        gbc.writeMem(0x5f64, { 0x5, 0x94 });
        gbc.writeMem(0xce6c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5f66);
        EXPECT(gbc.pc(), 0xce6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce6c), 0xd1);
        // D1 0156
        gbc.setState(0xb211, 0x399c, 0xd120, 0x8b64, 0x20ab, 0x4ca, 0x0, 0x0);
        gbc.writeMem(0x399c, { 0x88, 0x9e });
        gbc.writeMem(0xb211, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x399e);
        EXPECT(gbc.pc(), 0xb212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb211), 0xd1);
        // D1 0157
        gbc.setState(0xbbb6, 0xff62, 0xca10, 0xae, 0x5701, 0x5d05, 0x1, 0x1);
        gbc.writeMem(0xbbb6, { 0xd1 });
        gbc.writeMem(0xff62, { 0x1a, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xff64);
        EXPECT(gbc.pc(), 0xbbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb6), 0xd1);
        EXPECT(gbc.readMem(0xff62), 0x1a);
        EXPECT(gbc.readMem(0xff63), 0x30);
        // D1 0158
        gbc.setState(0xd5b0, 0x7f4f, 0xc9b0, 0x13cf, 0x7ce8, 0xa518, 0x1, 0x1);
        gbc.writeMem(0x7f4f, { 0xd2, 0x30 });
        gbc.writeMem(0xd5b0, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7f51);
        EXPECT(gbc.pc(), 0xd5b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b0), 0xd1);
        // D1 0159
        gbc.setState(0x5988, 0x1225, 0x6010, 0xbf42, 0x8f5f, 0xeadd, 0x1, 0x0);
        gbc.writeMem(0x1225, { 0xd1, 0x1c });
        gbc.writeMem(0x5988, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1227);
        EXPECT(gbc.pc(), 0x5989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 015A
        gbc.setState(0x6b32, 0xa4d1, 0x3ab0, 0x3e3b, 0x76e7, 0x37e1, 0x0, 0x0);
        gbc.writeMem(0x6b32, { 0xd1 });
        gbc.writeMem(0xa4d1, { 0xbc, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa4d3);
        EXPECT(gbc.pc(), 0x6b33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d1), 0xbc);
        EXPECT(gbc.readMem(0xa4d2), 0xea);
        // D1 015B
        gbc.setState(0x4462, 0x425e, 0x1c20, 0xaea0, 0x60d, 0xb697, 0x0, 0x0);
        gbc.writeMem(0x425e, { 0x4e, 0x1a });
        gbc.writeMem(0x4462, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4260);
        EXPECT(gbc.pc(), 0x4463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 015C
        gbc.setState(0xbd79, 0xa040, 0x37d0, 0xc581, 0x27b6, 0x3d9f, 0x0, 0x1);
        gbc.writeMem(0xa040, { 0x44, 0x1d });
        gbc.writeMem(0xbd79, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa042);
        EXPECT(gbc.pc(), 0xbd7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa040), 0x44);
        EXPECT(gbc.readMem(0xa041), 0x1d);
        EXPECT(gbc.readMem(0xbd79), 0xd1);
        // D1 015D
        gbc.setState(0x801a, 0xa63f, 0x27f0, 0x2785, 0xfb27, 0x5e8b, 0x0, 0x1);
        gbc.writeMem(0x801a, { 0xd1 });
        gbc.writeMem(0xa63f, { 0x13, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa641);
        EXPECT(gbc.pc(), 0x801b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801a), 0xd1);
        EXPECT(gbc.readMem(0xa63f), 0x13);
        EXPECT(gbc.readMem(0xa640), 0x5d);
        // D1 015E
        gbc.setState(0xcd7d, 0x1553, 0x5de0, 0x742d, 0x4cb0, 0xc67c, 0x1, 0x0);
        gbc.writeMem(0x1553, { 0xec, 0x52 });
        gbc.writeMem(0xcd7d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1555);
        EXPECT(gbc.pc(), 0xcd7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd7d), 0xd1);
        // D1 015F
        gbc.setState(0x6331, 0x258d, 0xc4e0, 0xbcb1, 0xc451, 0x4689, 0x0, 0x1);
        gbc.writeMem(0x258d, { 0xa1, 0xa1 });
        gbc.writeMem(0x6331, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x258f);
        EXPECT(gbc.pc(), 0x6332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0160
        gbc.setState(0x6e0c, 0x9734, 0x70e0, 0x8560, 0xa356, 0x14e4, 0x0, 0x1);
        gbc.writeMem(0x6e0c, { 0xd1 });
        gbc.writeMem(0x9734, { 0x99, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9736);
        EXPECT(gbc.pc(), 0x6e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9734), 0x99);
        EXPECT(gbc.readMem(0x9735), 0x25);
        // D1 0161
        gbc.setState(0x7cb2, 0x7f03, 0x5360, 0x572a, 0xa01e, 0xdd33, 0x0, 0x1);
        gbc.writeMem(0x7cb2, { 0xd1 });
        gbc.writeMem(0x7f03, { 0x9a, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7f05);
        EXPECT(gbc.pc(), 0x7cb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0162
        gbc.setState(0x7044, 0x2b46, 0x1e0, 0xe621, 0xb3a2, 0x7ab5, 0x0, 0x1);
        gbc.writeMem(0x2b46, { 0x3c, 0x6c });
        gbc.writeMem(0x7044, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2b48);
        EXPECT(gbc.pc(), 0x7045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0163
        gbc.setState(0x9c4, 0xf9db, 0x8fa0, 0x8516, 0x2141, 0x9e75, 0x1, 0x0);
        gbc.writeMem(0x9c4, { 0xd1 });
        gbc.writeMem(0xf9db, { 0x30, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf9dd);
        EXPECT(gbc.pc(), 0x9c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf9db), 0x30);
        EXPECT(gbc.readMem(0xf9dc), 0xa0);
        // D1 0164
        gbc.setState(0x425d, 0x91fc, 0x7990, 0x339c, 0x3fe0, 0xc1fb, 0x1, 0x1);
        gbc.writeMem(0x425d, { 0xd1 });
        gbc.writeMem(0x91fc, { 0x9b, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x91fe);
        EXPECT(gbc.pc(), 0x425e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91fc), 0x9b);
        EXPECT(gbc.readMem(0x91fd), 0x9f);
        // D1 0165
        gbc.setState(0x5fc5, 0x3203, 0xcd60, 0x3f9d, 0xc076, 0x1a6c, 0x1, 0x1);
        gbc.writeMem(0x3203, { 0xc4, 0xb0 });
        gbc.writeMem(0x5fc5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3205);
        EXPECT(gbc.pc(), 0x5fc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0167
        gbc.setState(0xd962, 0xe4a8, 0xd180, 0xfa6c, 0x80d2, 0x8590, 0x0, 0x0);
        gbc.writeMem(0xd962, { 0xd1 });
        gbc.writeMem(0xe4a8, { 0x55, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe4aa);
        EXPECT(gbc.pc(), 0xd963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd962), 0xd1);
        EXPECT(gbc.readMem(0xe4a8), 0x55);
        EXPECT(gbc.readMem(0xe4a9), 0x9f);
        // D1 0168
        gbc.setState(0x64a6, 0x76f8, 0xa920, 0xc37b, 0xba25, 0x675f, 0x1, 0x1);
        gbc.writeMem(0x64a6, { 0xd1 });
        gbc.writeMem(0x76f8, { 0x9b, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x76fa);
        EXPECT(gbc.pc(), 0x64a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0169
        gbc.setState(0x80a, 0xe3ce, 0x1c30, 0xdf93, 0x6b18, 0xe0f7, 0x1, 0x1);
        gbc.writeMem(0x80a, { 0xd1 });
        gbc.writeMem(0xe3ce, { 0x3c, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe3d0);
        EXPECT(gbc.pc(), 0x80b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ce), 0x3c);
        EXPECT(gbc.readMem(0xe3cf), 0xa4);
        // D1 016A
        gbc.setState(0x374f, 0xa580, 0x9fc0, 0xd786, 0xe641, 0x7439, 0x1, 0x0);
        gbc.writeMem(0x374f, { 0xd1 });
        gbc.writeMem(0xa580, { 0xc1, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa582);
        EXPECT(gbc.pc(), 0x3750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa580), 0xc1);
        EXPECT(gbc.readMem(0xa581), 0xa7);
        // D1 016B
        gbc.setState(0x5cb8, 0xe794, 0xdd60, 0x8a0d, 0xe6cf, 0x8fcd, 0x0, 0x1);
        gbc.writeMem(0x5cb8, { 0xd1 });
        gbc.writeMem(0xe794, { 0x2c, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe796);
        EXPECT(gbc.pc(), 0x5cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe794), 0x2c);
        EXPECT(gbc.readMem(0xe795), 0x80);
        // D1 016C
        gbc.setState(0x3a9e, 0x5a13, 0x7300, 0x35ad, 0x5126, 0xc3ef, 0x0, 0x0);
        gbc.writeMem(0x3a9e, { 0xd1 });
        gbc.writeMem(0x5a13, { 0x25, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5a15);
        EXPECT(gbc.pc(), 0x3a9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 016D
        gbc.setState(0x944e, 0x5686, 0x7f0, 0xfc8f, 0x28bc, 0xcd43, 0x0, 0x0);
        gbc.writeMem(0x5686, { 0xf1, 0x93 });
        gbc.writeMem(0x944e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5688);
        EXPECT(gbc.pc(), 0x944f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x944e), 0xd1);
        // D1 016E
        gbc.setState(0x8951, 0xcd61, 0xddc0, 0xd548, 0xe9d2, 0x5a24, 0x1, 0x1);
        gbc.writeMem(0x8951, { 0xd1 });
        gbc.writeMem(0xcd61, { 0x7e, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcd63);
        EXPECT(gbc.pc(), 0x8952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8951), 0xd1);
        EXPECT(gbc.readMem(0xcd61), 0x7e);
        EXPECT(gbc.readMem(0xcd62), 0xa0);
        // D1 016F
        gbc.setState(0x8007, 0xdd25, 0x3140, 0x2bba, 0xeed9, 0x5a7c, 0x0, 0x1);
        gbc.writeMem(0x8007, { 0xd1 });
        gbc.writeMem(0xdd25, { 0x4d, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdd27);
        EXPECT(gbc.pc(), 0x8008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8007), 0xd1);
        EXPECT(gbc.readMem(0xdd25), 0x4d);
        EXPECT(gbc.readMem(0xdd26), 0x62);
        // D1 0170
        gbc.setState(0xbf65, 0x844a, 0xd120, 0xd6d1, 0x6815, 0xc5bf, 0x1, 0x1);
        gbc.writeMem(0x844a, { 0xc4, 0xbb });
        gbc.writeMem(0xbf65, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x844c);
        EXPECT(gbc.pc(), 0xbf66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x844a), 0xc4);
        EXPECT(gbc.readMem(0x844b), 0xbb);
        EXPECT(gbc.readMem(0xbf65), 0xd1);
        // D1 0171
        gbc.setState(0xbdf2, 0xa19c, 0x3ec0, 0x3405, 0x7947, 0x852b, 0x0, 0x1);
        gbc.writeMem(0xa19c, { 0xa6, 0xc3 });
        gbc.writeMem(0xbdf2, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa19e);
        EXPECT(gbc.pc(), 0xbdf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19c), 0xa6);
        EXPECT(gbc.readMem(0xa19d), 0xc3);
        EXPECT(gbc.readMem(0xbdf2), 0xd1);
        // D1 0172
        gbc.setState(0xa9a5, 0xd2ca, 0x4160, 0x941a, 0x66ad, 0xbad0, 0x1, 0x1);
        gbc.writeMem(0xa9a5, { 0xd1 });
        gbc.writeMem(0xd2ca, { 0xfe, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd2cc);
        EXPECT(gbc.pc(), 0xa9a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a5), 0xd1);
        EXPECT(gbc.readMem(0xd2ca), 0xfe);
        EXPECT(gbc.readMem(0xd2cb), 0x3c);
        // D1 0173
        gbc.setState(0x6752, 0xcfe4, 0x7740, 0x8d33, 0x95da, 0x8e24, 0x1, 0x0);
        gbc.writeMem(0x6752, { 0xd1 });
        gbc.writeMem(0xcfe4, { 0xe5, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcfe6);
        EXPECT(gbc.pc(), 0x6753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe4), 0xe5);
        EXPECT(gbc.readMem(0xcfe5), 0xf7);
        // D1 0174
        gbc.setState(0x8019, 0xd1cd, 0x5d40, 0x6db5, 0x33c6, 0xb286, 0x0, 0x1);
        gbc.writeMem(0x8019, { 0xd1 });
        gbc.writeMem(0xd1cd, { 0xec, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd1cf);
        EXPECT(gbc.pc(), 0x801a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8019), 0xd1);
        EXPECT(gbc.readMem(0xd1cd), 0xec);
        EXPECT(gbc.readMem(0xd1ce), 0xd5);
        // D1 0175
        gbc.setState(0x7419, 0x69cd, 0x4940, 0x102, 0x58b3, 0xfa7a, 0x0, 0x0);
        gbc.writeMem(0x69cd, { 0xe6, 0xed });
        gbc.writeMem(0x7419, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x69cf);
        EXPECT(gbc.pc(), 0x741a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0176
        gbc.setState(0xc751, 0xc6b5, 0xb1d0, 0x2f63, 0x5077, 0xb7e, 0x0, 0x0);
        gbc.writeMem(0xc6b5, { 0x6f, 0x8a });
        gbc.writeMem(0xc751, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc6b7);
        EXPECT(gbc.pc(), 0xc752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b5), 0x6f);
        EXPECT(gbc.readMem(0xc6b6), 0x8a);
        EXPECT(gbc.readMem(0xc751), 0xd1);
        // D1 0177
        gbc.setState(0x46b5, 0xc3b2, 0x42e0, 0xd22a, 0xae1a, 0xc13e, 0x1, 0x0);
        gbc.writeMem(0x46b5, { 0xd1 });
        gbc.writeMem(0xc3b2, { 0x72, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc3b4);
        EXPECT(gbc.pc(), 0x46b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b2), 0x72);
        EXPECT(gbc.readMem(0xc3b3), 0x55);
        // D1 0178
        gbc.setState(0x9aa9, 0x6736, 0x3930, 0x78e1, 0xf7f7, 0xe537, 0x0, 0x1);
        gbc.writeMem(0x6736, { 0x2d, 0x2e });
        gbc.writeMem(0x9aa9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6738);
        EXPECT(gbc.pc(), 0x9aaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa9), 0xd1);
        // D1 0179
        gbc.setState(0x4513, 0x86bc, 0xd0e0, 0xd9f6, 0xa63e, 0x11e8, 0x0, 0x0);
        gbc.writeMem(0x4513, { 0xd1 });
        gbc.writeMem(0x86bc, { 0xc, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x86be);
        EXPECT(gbc.pc(), 0x4514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86bc), 0xc);
        EXPECT(gbc.readMem(0x86bd), 0x47);
        // D1 017A
        gbc.setState(0xd340, 0xbefa, 0xffc0, 0xabe, 0x543c, 0xbda0, 0x0, 0x1);
        gbc.writeMem(0xbefa, { 0x24, 0x8b });
        gbc.writeMem(0xd340, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xbefc);
        EXPECT(gbc.pc(), 0xd341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbefa), 0x24);
        EXPECT(gbc.readMem(0xbefb), 0x8b);
        EXPECT(gbc.readMem(0xd340), 0xd1);
        // D1 017B
        gbc.setState(0x29f3, 0xc24d, 0xd3d0, 0xe86a, 0xb259, 0x55ac, 0x0, 0x1);
        gbc.writeMem(0x29f3, { 0xd1 });
        gbc.writeMem(0xc24d, { 0x57, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc24f);
        EXPECT(gbc.pc(), 0x29f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc24d), 0x57);
        EXPECT(gbc.readMem(0xc24e), 0x12);
        // D1 017C
        gbc.setState(0xdb57, 0x5a50, 0xb6c0, 0x9c01, 0x943e, 0x66b1, 0x1, 0x1);
        gbc.writeMem(0x5a50, { 0xb3, 0x35 });
        gbc.writeMem(0xdb57, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5a52);
        EXPECT(gbc.pc(), 0xdb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb57), 0xd1);
        // D1 017D
        gbc.setState(0x1b70, 0xb81c, 0x52b0, 0x95eb, 0xeff7, 0xf15c, 0x0, 0x1);
        gbc.writeMem(0x1b70, { 0xd1 });
        gbc.writeMem(0xb81c, { 0x12, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb81e);
        EXPECT(gbc.pc(), 0x1b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb81c), 0x12);
        EXPECT(gbc.readMem(0xb81d), 0x3e);
        // D1 017F
        gbc.setState(0x9638, 0xff0, 0x88c0, 0x7b79, 0x9d8c, 0x9f72, 0x1, 0x1);
        gbc.writeMem(0xff0, { 0x3, 0xfa });
        gbc.writeMem(0x9638, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xff2);
        EXPECT(gbc.pc(), 0x9639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9638), 0xd1);
        // D1 0180
        gbc.setState(0x104b, 0x9565, 0xd1e0, 0xfea7, 0xb164, 0x8ef, 0x1, 0x0);
        gbc.writeMem(0x104b, { 0xd1 });
        gbc.writeMem(0x9565, { 0x3b, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9567);
        EXPECT(gbc.pc(), 0x104c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9565), 0x3b);
        EXPECT(gbc.readMem(0x9566), 0xdd);
        // D1 0181
        gbc.setState(0x8a85, 0x3bcd, 0x93b0, 0x6ddb, 0x20a0, 0x3ac0, 0x0, 0x1);
        gbc.writeMem(0x3bcd, { 0xc1, 0xbf });
        gbc.writeMem(0x8a85, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3bcf);
        EXPECT(gbc.pc(), 0x8a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a85), 0xd1);
        // D1 0182
        gbc.setState(0xeb88, 0x56e8, 0x8e50, 0xea4f, 0x9d74, 0x6921, 0x0, 0x1);
        gbc.writeMem(0x56e8, { 0xd6, 0xee });
        gbc.writeMem(0xeb88, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x56ea);
        EXPECT(gbc.pc(), 0xeb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb88), 0xd1);
        // D1 0183
        gbc.setState(0x5d9d, 0xe27a, 0xcf00, 0x57ca, 0x37c1, 0xa107, 0x0, 0x1);
        gbc.writeMem(0x5d9d, { 0xd1 });
        gbc.writeMem(0xe27a, { 0x6b, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe27c);
        EXPECT(gbc.pc(), 0x5d9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe27a), 0x6b);
        EXPECT(gbc.readMem(0xe27b), 0x9c);
        // D1 0184
        gbc.setState(0x973a, 0xaf52, 0xe550, 0x277f, 0x56da, 0xa89b, 0x1, 0x1);
        gbc.writeMem(0x973a, { 0xd1 });
        gbc.writeMem(0xaf52, { 0x3e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xaf54);
        EXPECT(gbc.pc(), 0x973b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973a), 0xd1);
        EXPECT(gbc.readMem(0xaf52), 0x3e);
        EXPECT(gbc.readMem(0xaf53), 0x2e);
        // D1 0185
        gbc.setState(0x6f77, 0x960f, 0x58b0, 0xce0d, 0xbf53, 0x3e72, 0x1, 0x1);
        gbc.writeMem(0x6f77, { 0xd1 });
        gbc.writeMem(0x960f, { 0x58, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9611);
        EXPECT(gbc.pc(), 0x6f78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x960f), 0x58);
        EXPECT(gbc.readMem(0x9610), 0x37);
        // D1 0186
        gbc.setState(0x9b50, 0x6bd6, 0xf930, 0xbe05, 0x8820, 0xe233, 0x0, 0x1);
        gbc.writeMem(0x6bd6, { 0xe7, 0x7a });
        gbc.writeMem(0x9b50, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6bd8);
        EXPECT(gbc.pc(), 0x9b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b50), 0xd1);
        // D1 0187
        gbc.setState(0x10ae, 0xfb1a, 0x8310, 0x6e8d, 0x12fa, 0x1fa3, 0x1, 0x0);
        gbc.writeMem(0x10ae, { 0xd1 });
        gbc.writeMem(0xfb1a, { 0x2d, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfb1c);
        EXPECT(gbc.pc(), 0x10af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb1a), 0x2d);
        EXPECT(gbc.readMem(0xfb1b), 0x75);
        // D1 0188
        gbc.setState(0x761a, 0x5195, 0x5170, 0x8cd4, 0xc544, 0x7cee, 0x1, 0x0);
        gbc.writeMem(0x5195, { 0xef, 0x50 });
        gbc.writeMem(0x761a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5197);
        EXPECT(gbc.pc(), 0x761b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0189
        gbc.setState(0xa80f, 0x6ab7, 0x6b70, 0x807, 0x6ec1, 0x92a4, 0x1, 0x0);
        gbc.writeMem(0x6ab7, { 0x17, 0xd7 });
        gbc.writeMem(0xa80f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6ab9);
        EXPECT(gbc.pc(), 0xa810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa80f), 0xd1);
        // D1 018A
        gbc.setState(0x2a54, 0x72fd, 0x6940, 0xa78, 0x5289, 0x9a41, 0x0, 0x0);
        gbc.writeMem(0x2a54, { 0xd1 });
        gbc.writeMem(0x72fd, { 0x47, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x72ff);
        EXPECT(gbc.pc(), 0x2a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 018B
        gbc.setState(0xbcbd, 0x2e16, 0x4e70, 0x37b4, 0x1787, 0xe38a, 0x0, 0x0);
        gbc.writeMem(0x2e16, { 0xb0, 0xfd });
        gbc.writeMem(0xbcbd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2e18);
        EXPECT(gbc.pc(), 0xbcbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcbd), 0xd1);
        // D1 018C
        gbc.setState(0x9431, 0xc057, 0xd000, 0xd139, 0x8f72, 0x91fe, 0x1, 0x0);
        gbc.writeMem(0x9431, { 0xd1 });
        gbc.writeMem(0xc057, { 0x50, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc059);
        EXPECT(gbc.pc(), 0x9432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9431), 0xd1);
        EXPECT(gbc.readMem(0xc057), 0x50);
        EXPECT(gbc.readMem(0xc058), 0x98);
        // D1 018D
        gbc.setState(0x5437, 0xa809, 0x5990, 0xe4f4, 0xcadf, 0x4905, 0x1, 0x1);
        gbc.writeMem(0x5437, { 0xd1 });
        gbc.writeMem(0xa809, { 0xe8, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa80b);
        EXPECT(gbc.pc(), 0x5438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa809), 0xe8);
        EXPECT(gbc.readMem(0xa80a), 0x3b);
        // D1 018E
        gbc.setState(0x2e60, 0xe1ba, 0x2ff0, 0x3f41, 0xbfa4, 0x444e, 0x1, 0x1);
        gbc.writeMem(0x2e60, { 0xd1 });
        gbc.writeMem(0xe1ba, { 0x9c, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe1bc);
        EXPECT(gbc.pc(), 0x2e61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ba), 0x9c);
        EXPECT(gbc.readMem(0xe1bb), 0x5f);
        // D1 018F
        gbc.setState(0x9469, 0xf17c, 0x9a0, 0xd098, 0x6330, 0x2337, 0x0, 0x1);
        gbc.writeMem(0x9469, { 0xd1 });
        gbc.writeMem(0xf17c, { 0x3, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf17e);
        EXPECT(gbc.pc(), 0x946a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9469), 0xd1);
        EXPECT(gbc.readMem(0xf17c), 0x3);
        EXPECT(gbc.readMem(0xf17d), 0x8b);
        // D1 0190
        gbc.setState(0xd749, 0x49e0, 0x6a30, 0xb650, 0x6f2f, 0x732c, 0x1, 0x1);
        gbc.writeMem(0x49e0, { 0x26, 0xb9 });
        gbc.writeMem(0xd749, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x49e2);
        EXPECT(gbc.pc(), 0xd74a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd749), 0xd1);
        // D1 0191
        gbc.setState(0x6dba, 0x642f, 0x5700, 0x821, 0x6620, 0xda08, 0x0, 0x1);
        gbc.writeMem(0x642f, { 0xa4, 0x2b });
        gbc.writeMem(0x6dba, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6431);
        EXPECT(gbc.pc(), 0x6dbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0192
        gbc.setState(0x6738, 0xa810, 0x7ef0, 0x454d, 0xab3f, 0x57f, 0x1, 0x1);
        gbc.writeMem(0x6738, { 0xd1 });
        gbc.writeMem(0xa810, { 0xaa, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa812);
        EXPECT(gbc.pc(), 0x6739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa810), 0xaa);
        EXPECT(gbc.readMem(0xa811), 0xcd);
        // D1 0193
        gbc.setState(0x8206, 0x7430, 0xf1d0, 0x55d8, 0x6dc1, 0x27d6, 0x0, 0x1);
        gbc.writeMem(0x7430, { 0x16, 0xec });
        gbc.writeMem(0x8206, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7432);
        EXPECT(gbc.pc(), 0x8207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8206), 0xd1);
        // D1 0194
        gbc.setState(0x76b9, 0x98e8, 0x3260, 0xaef2, 0x7607, 0x58ff, 0x1, 0x1);
        gbc.writeMem(0x76b9, { 0xd1 });
        gbc.writeMem(0x98e8, { 0xb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x98ea);
        EXPECT(gbc.pc(), 0x76ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e8), 0xb);
        EXPECT(gbc.readMem(0x98e9), 0xe);
        // D1 0195
        gbc.setState(0x4909, 0xc915, 0xa460, 0x3d08, 0x11d9, 0xc72, 0x1, 0x1);
        gbc.writeMem(0x4909, { 0xd1 });
        gbc.writeMem(0xc915, { 0x8a, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc917);
        EXPECT(gbc.pc(), 0x490a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc915), 0x8a);
        EXPECT(gbc.readMem(0xc916), 0x8f);
        // D1 0196
        gbc.setState(0xb56a, 0x7430, 0x57b0, 0x3698, 0xfa52, 0x99de, 0x1, 0x0);
        gbc.writeMem(0x7430, { 0x16, 0xec });
        gbc.writeMem(0xb56a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7432);
        EXPECT(gbc.pc(), 0xb56b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56a), 0xd1);
        // D1 0198
        gbc.setState(0x8ea4, 0x8da, 0x3130, 0xc8fc, 0x8f93, 0x93d4, 0x1, 0x1);
        gbc.writeMem(0x8da, { 0x53, 0x1a });
        gbc.writeMem(0x8ea4, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8dc);
        EXPECT(gbc.pc(), 0x8ea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea4), 0xd1);
        // D1 0199
        gbc.setState(0xb705, 0x3496, 0xc1f0, 0xee2a, 0xc9a2, 0x386e, 0x1, 0x0);
        gbc.writeMem(0x3496, { 0xb0, 0x5b });
        gbc.writeMem(0xb705, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3498);
        EXPECT(gbc.pc(), 0xb706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb705), 0xd1);
        // D1 019A
        gbc.setState(0x63dd, 0xbd8e, 0x3bf0, 0xc23c, 0xde4c, 0x4b93, 0x0, 0x0);
        gbc.writeMem(0x63dd, { 0xd1 });
        gbc.writeMem(0xbd8e, { 0x83, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbd90);
        EXPECT(gbc.pc(), 0x63de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd8e), 0x83);
        EXPECT(gbc.readMem(0xbd8f), 0x18);
        // D1 019B
        gbc.setState(0x9d39, 0x5fb8, 0x44f0, 0x6763, 0xc695, 0xfd50, 0x1, 0x1);
        gbc.writeMem(0x5fb8, { 0xac, 0x6b });
        gbc.writeMem(0x9d39, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5fba);
        EXPECT(gbc.pc(), 0x9d3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d39), 0xd1);
        // D1 019C
        gbc.setState(0xaf1d, 0xe645, 0x390, 0x2d38, 0x97d2, 0x8186, 0x0, 0x1);
        gbc.writeMem(0xaf1d, { 0xd1 });
        gbc.writeMem(0xe645, { 0xa0, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe647);
        EXPECT(gbc.pc(), 0xaf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1d), 0xd1);
        EXPECT(gbc.readMem(0xe645), 0xa0);
        EXPECT(gbc.readMem(0xe646), 0x43);
        // D1 019D
        gbc.setState(0x332f, 0xa998, 0x32a0, 0xef1b, 0x4833, 0x4cdc, 0x1, 0x1);
        gbc.writeMem(0x332f, { 0xd1 });
        gbc.writeMem(0xa998, { 0x5e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa99a);
        EXPECT(gbc.pc(), 0x3330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa998), 0x5e);
        EXPECT(gbc.readMem(0xa999), 0xb7);
        // D1 019E
        gbc.setState(0xef47, 0x3f76, 0xf820, 0x1f1d, 0xd05d, 0x21b7, 0x0, 0x0);
        gbc.writeMem(0x3f76, { 0x7f, 0x96 });
        gbc.writeMem(0xef47, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3f78);
        EXPECT(gbc.pc(), 0xef48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef47), 0xd1);
        // D1 019F
        gbc.setState(0x1548, 0x7fa8, 0xbd00, 0x22cb, 0xcc5, 0x747f, 0x1, 0x1);
        gbc.writeMem(0x1548, { 0xd1 });
        gbc.writeMem(0x7fa8, { 0xcc, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7faa);
        EXPECT(gbc.pc(), 0x1549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 01A0
        gbc.setState(0xd934, 0xe344, 0xbb0, 0xa6be, 0x67a, 0x7baf, 0x0, 0x1);
        gbc.writeMem(0xd934, { 0xd1 });
        gbc.writeMem(0xe344, { 0xc3, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe346);
        EXPECT(gbc.pc(), 0xd935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd934), 0xd1);
        EXPECT(gbc.readMem(0xe344), 0xc3);
        EXPECT(gbc.readMem(0xe345), 0x1a);
        // D1 01A2
        gbc.setState(0xcb00, 0x750, 0x8f0, 0x8963, 0xacc8, 0x63bc, 0x0, 0x1);
        gbc.writeMem(0x750, { 0xa9, 0x50 });
        gbc.writeMem(0xcb00, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x752);
        EXPECT(gbc.pc(), 0xcb01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb00), 0xd1);
        // D1 01A3
        gbc.setState(0x54cd, 0x4438, 0x99f0, 0x2f73, 0xe97a, 0xe565, 0x0, 0x1);
        gbc.writeMem(0x4438, { 0x6a, 0x88 });
        gbc.writeMem(0x54cd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x443a);
        EXPECT(gbc.pc(), 0x54ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01A5
        gbc.setState(0xa911, 0x6ce2, 0xd0c0, 0x9aa4, 0xada4, 0x526a, 0x0, 0x1);
        gbc.writeMem(0x6ce2, { 0xa9, 0x1f });
        gbc.writeMem(0xa911, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6ce4);
        EXPECT(gbc.pc(), 0xa912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa911), 0xd1);
        // D1 01A7
        gbc.setState(0xdc46, 0x827c, 0x1fe0, 0x63d2, 0xf2f5, 0xd6c3, 0x0, 0x1);
        gbc.writeMem(0x827c, { 0x1d, 0x98 });
        gbc.writeMem(0xdc46, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x827e);
        EXPECT(gbc.pc(), 0xdc47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x827c), 0x1d);
        EXPECT(gbc.readMem(0x827d), 0x98);
        EXPECT(gbc.readMem(0xdc46), 0xd1);
        // D1 01A8
        gbc.setState(0xc7fe, 0x6c96, 0x33a0, 0x8e51, 0x7f93, 0xe68a, 0x1, 0x1);
        gbc.writeMem(0x6c96, { 0xf6, 0x62 });
        gbc.writeMem(0xc7fe, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6c98);
        EXPECT(gbc.pc(), 0xc7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7fe), 0xd1);
        // D1 01A9
        gbc.setState(0x287, 0x9ab, 0x2760, 0xbab7, 0xf001, 0x49bf, 0x1, 0x1);
        gbc.writeMem(0x287, { 0xd1 });
        gbc.writeMem(0x9ab, { 0x23, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9ad);
        EXPECT(gbc.pc(), 0x288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 01AA
        gbc.setState(0x6a6d, 0x66d4, 0x8fa0, 0xa385, 0xad10, 0x61b, 0x1, 0x0);
        gbc.writeMem(0x66d4, { 0xae, 0x5f });
        gbc.writeMem(0x6a6d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x66d6);
        EXPECT(gbc.pc(), 0x6a6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 01AB
        gbc.setState(0x3bd9, 0x5d0d, 0xbe10, 0xb296, 0x4f2b, 0x6c57, 0x0, 0x1);
        gbc.writeMem(0x3bd9, { 0xd1 });
        gbc.writeMem(0x5d0d, { 0x87, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5d0f);
        EXPECT(gbc.pc(), 0x3bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 01AC
        gbc.setState(0x4053, 0xefc5, 0x74a0, 0xc5d, 0xe665, 0x9959, 0x0, 0x1);
        gbc.writeMem(0x4053, { 0xd1 });
        gbc.writeMem(0xefc5, { 0x3a, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xefc7);
        EXPECT(gbc.pc(), 0x4054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc5), 0x3a);
        EXPECT(gbc.readMem(0xefc6), 0xe6);
        // D1 01AD
        gbc.setState(0x5567, 0x3603, 0x3900, 0x40ce, 0x67b2, 0xa555, 0x0, 0x1);
        gbc.writeMem(0x3603, { 0xc8, 0xe1 });
        gbc.writeMem(0x5567, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3605);
        EXPECT(gbc.pc(), 0x5568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 01AE
        gbc.setState(0xd4d5, 0xb776, 0x3b0, 0x5f5b, 0xd679, 0xcf12, 0x1, 0x0);
        gbc.writeMem(0xb776, { 0x53, 0x5a });
        gbc.writeMem(0xd4d5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb778);
        EXPECT(gbc.pc(), 0xd4d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb776), 0x53);
        EXPECT(gbc.readMem(0xb777), 0x5a);
        EXPECT(gbc.readMem(0xd4d5), 0xd1);
        // D1 01AF
        gbc.setState(0xafc6, 0x7bb9, 0x3220, 0x1599, 0x31fb, 0x5e39, 0x1, 0x1);
        gbc.writeMem(0x7bb9, { 0xa6, 0x7e });
        gbc.writeMem(0xafc6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7bbb);
        EXPECT(gbc.pc(), 0xafc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc6), 0xd1);
        // D1 01B0
        gbc.setState(0x6b19, 0x6434, 0x34a0, 0x5737, 0x8eca, 0xd2bb, 0x0, 0x1);
        gbc.writeMem(0x6434, { 0xf4, 0x2a });
        gbc.writeMem(0x6b19, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6436);
        EXPECT(gbc.pc(), 0x6b1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 01B1
        gbc.setState(0x3739, 0x886f, 0x44c0, 0xa433, 0x7a8c, 0x3125, 0x1, 0x1);
        gbc.writeMem(0x3739, { 0xd1 });
        gbc.writeMem(0x886f, { 0x96, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8871);
        EXPECT(gbc.pc(), 0x373a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886f), 0x96);
        EXPECT(gbc.readMem(0x8870), 0xb3);
        // D1 01B2
        gbc.setState(0xe9af, 0x73dd, 0x66c0, 0x8fb5, 0x53b5, 0x61b4, 0x0, 0x1);
        gbc.writeMem(0x73dd, { 0xd4, 0xee });
        gbc.writeMem(0xe9af, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x73df);
        EXPECT(gbc.pc(), 0xe9b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9af), 0xd1);
        // D1 01B3
        gbc.setState(0x2f68, 0x5d2, 0x4b0, 0xf7dc, 0xb64d, 0xdf13, 0x0, 0x1);
        gbc.writeMem(0x5d2, { 0x81, 0x14 });
        gbc.writeMem(0x2f68, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5d4);
        EXPECT(gbc.pc(), 0x2f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01B4
        gbc.setState(0x7ff5, 0xe741, 0xbd00, 0x9f75, 0xe28b, 0xf512, 0x0, 0x0);
        gbc.writeMem(0x7ff5, { 0xd1 });
        gbc.writeMem(0xe741, { 0x6e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe743);
        EXPECT(gbc.pc(), 0x7ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe741), 0x6e);
        EXPECT(gbc.readMem(0xe742), 0xf9);
        // D1 01B5
        gbc.setState(0x15f6, 0x6efa, 0x2030, 0x9580, 0xc5b2, 0xc2da, 0x0, 0x0);
        gbc.writeMem(0x15f6, { 0xd1 });
        gbc.writeMem(0x6efa, { 0xe9, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6efc);
        EXPECT(gbc.pc(), 0x15f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01B6
        gbc.setState(0x1bdc, 0xb046, 0x43a0, 0x1018, 0xeebe, 0x422f, 0x0, 0x0);
        gbc.writeMem(0x1bdc, { 0xd1 });
        gbc.writeMem(0xb046, { 0x2a, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb048);
        EXPECT(gbc.pc(), 0x1bdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb046), 0x2a);
        EXPECT(gbc.readMem(0xb047), 0xb);
        // D1 01B7
        gbc.setState(0xc9e5, 0x7414, 0xf6c0, 0xb865, 0xe174, 0x47d4, 0x1, 0x0);
        gbc.writeMem(0x7414, { 0xc2, 0x50 });
        gbc.writeMem(0xc9e5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7416);
        EXPECT(gbc.pc(), 0xc9e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e5), 0xd1);
        // D1 01B9
        gbc.setState(0xb8b6, 0xbf6, 0x14f0, 0xaeec, 0xa5fb, 0x72a8, 0x0, 0x0);
        gbc.writeMem(0xbf6, { 0x77, 0x4d });
        gbc.writeMem(0xb8b6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbf8);
        EXPECT(gbc.pc(), 0xb8b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b6), 0xd1);
        // D1 01BA
        gbc.setState(0x1365, 0x4fc3, 0xc1d0, 0xd77f, 0xc23e, 0x6112, 0x0, 0x1);
        gbc.writeMem(0x1365, { 0xd1 });
        gbc.writeMem(0x4fc3, { 0xd4, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4fc5);
        EXPECT(gbc.pc(), 0x1366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 01BB
        gbc.setState(0x39b2, 0x8230, 0xc750, 0xd171, 0x570f, 0xe666, 0x0, 0x0);
        gbc.writeMem(0x39b2, { 0xd1 });
        gbc.writeMem(0x8230, { 0xe2, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8232);
        EXPECT(gbc.pc(), 0x39b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8230), 0xe2);
        EXPECT(gbc.readMem(0x8231), 0x5a);
        // D1 01BC
        gbc.setState(0x6119, 0x2e24, 0x1ca0, 0xd995, 0x2d0e, 0xe803, 0x1, 0x0);
        gbc.writeMem(0x2e24, { 0xd8, 0xce });
        gbc.writeMem(0x6119, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2e26);
        EXPECT(gbc.pc(), 0x611a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 01BD
        gbc.setState(0xd9b6, 0xab08, 0xbaf0, 0x5af8, 0x7ef1, 0xf418, 0x1, 0x0);
        gbc.writeMem(0xab08, { 0x65, 0xe1 });
        gbc.writeMem(0xd9b6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xab0a);
        EXPECT(gbc.pc(), 0xd9b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab08), 0x65);
        EXPECT(gbc.readMem(0xab09), 0xe1);
        EXPECT(gbc.readMem(0xd9b6), 0xd1);
        // D1 01BE
        gbc.setState(0x9756, 0x8efc, 0x18e0, 0x8c0c, 0x3bfc, 0xe855, 0x0, 0x0);
        gbc.writeMem(0x8efc, { 0x27, 0x50 });
        gbc.writeMem(0x9756, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8efe);
        EXPECT(gbc.pc(), 0x9757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8efc), 0x27);
        EXPECT(gbc.readMem(0x8efd), 0x50);
        EXPECT(gbc.readMem(0x9756), 0xd1);
        // D1 01BF
        gbc.setState(0xd326, 0x56cb, 0xc780, 0x63b2, 0xbd1, 0xc6fb, 0x1, 0x1);
        gbc.writeMem(0x56cb, { 0x8c, 0x4b });
        gbc.writeMem(0xd326, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x56cd);
        EXPECT(gbc.pc(), 0xd327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd326), 0xd1);
        // D1 01C0
        gbc.setState(0xd645, 0xccbe, 0x79e0, 0xbe14, 0x28f8, 0x9e7e, 0x1, 0x1);
        gbc.writeMem(0xccbe, { 0xe8, 0xf5 });
        gbc.writeMem(0xd645, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xccc0);
        EXPECT(gbc.pc(), 0xd646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccbe), 0xe8);
        EXPECT(gbc.readMem(0xccbf), 0xf5);
        EXPECT(gbc.readMem(0xd645), 0xd1);
        // D1 01C2
        gbc.setState(0x6ad9, 0xea5b, 0x61e0, 0xf320, 0xce61, 0xfe56, 0x1, 0x1);
        gbc.writeMem(0x6ad9, { 0xd1 });
        gbc.writeMem(0xea5b, { 0xa9, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xea5d);
        EXPECT(gbc.pc(), 0x6ada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea5b), 0xa9);
        EXPECT(gbc.readMem(0xea5c), 0xe6);
        // D1 01C3
        gbc.setState(0xc806, 0x1b6f, 0x2220, 0x60e8, 0x5e48, 0x4531, 0x0, 0x0);
        gbc.writeMem(0x1b6f, { 0x36, 0x4 });
        gbc.writeMem(0xc806, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1b71);
        EXPECT(gbc.pc(), 0xc807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc806), 0xd1);
        // D1 01C4
        gbc.setState(0x2f3d, 0x322c, 0xebb0, 0x662c, 0xdd0b, 0xefe1, 0x0, 0x0);
        gbc.writeMem(0x2f3d, { 0xd1 });
        gbc.writeMem(0x322c, { 0x29, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x322e);
        EXPECT(gbc.pc(), 0x2f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01C5
        gbc.setState(0x8a0b, 0x3239, 0x7c70, 0x45e3, 0xf428, 0xc6d8, 0x0, 0x1);
        gbc.writeMem(0x3239, { 0xe1, 0xd1 });
        gbc.writeMem(0x8a0b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x323b);
        EXPECT(gbc.pc(), 0x8a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a0b), 0xd1);
        // D1 01C6
        gbc.setState(0x8183, 0x4613, 0xf5a0, 0x8510, 0x5751, 0xe739, 0x0, 0x1);
        gbc.writeMem(0x4613, { 0xc6, 0x0 });
        gbc.writeMem(0x8183, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4615);
        EXPECT(gbc.pc(), 0x8184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8183), 0xd1);
        // D1 01C7
        gbc.setState(0x3a12, 0x401d, 0xdc30, 0xac49, 0x2113, 0xec21, 0x1, 0x0);
        gbc.writeMem(0x3a12, { 0xd1 });
        gbc.writeMem(0x401d, { 0x7a, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x401f);
        EXPECT(gbc.pc(), 0x3a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01C8
        gbc.setState(0x5f20, 0x7fbc, 0xfdb0, 0x620c, 0xec66, 0xc67a, 0x1, 0x0);
        gbc.writeMem(0x5f20, { 0xd1 });
        gbc.writeMem(0x7fbc, { 0xf2, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7fbe);
        EXPECT(gbc.pc(), 0x5f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01C9
        gbc.setState(0xe5d, 0x1a43, 0xef80, 0x8308, 0x5ba3, 0x823d, 0x1, 0x1);
        gbc.writeMem(0xe5d, { 0xd1 });
        gbc.writeMem(0x1a43, { 0xb1, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1a45);
        EXPECT(gbc.pc(), 0xe5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 01CA
        gbc.setState(0x17bb, 0x5165, 0x7950, 0xfe40, 0xe843, 0xeefe, 0x1, 0x0);
        gbc.writeMem(0x17bb, { 0xd1 });
        gbc.writeMem(0x5165, { 0xcc, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5167);
        EXPECT(gbc.pc(), 0x17bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 01CC
        gbc.setState(0x9eca, 0xa38a, 0x7c60, 0xf0ca, 0x9dfe, 0x45a2, 0x0, 0x0);
        gbc.writeMem(0x9eca, { 0xd1 });
        gbc.writeMem(0xa38a, { 0xe9, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa38c);
        EXPECT(gbc.pc(), 0x9ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eca), 0xd1);
        EXPECT(gbc.readMem(0xa38a), 0xe9);
        EXPECT(gbc.readMem(0xa38b), 0xdc);
        // D1 01CD
        gbc.setState(0x160d, 0x592c, 0xdca0, 0xea38, 0xe5e2, 0x292a, 0x0, 0x0);
        gbc.writeMem(0x160d, { 0xd1 });
        gbc.writeMem(0x592c, { 0xa2, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x592e);
        EXPECT(gbc.pc(), 0x160e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 01CE
        gbc.setState(0xf0c, 0x648b, 0xf30, 0xdb2f, 0x8de1, 0x5c50, 0x0, 0x1);
        gbc.writeMem(0xf0c, { 0xd1 });
        gbc.writeMem(0x648b, { 0x4e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x648d);
        EXPECT(gbc.pc(), 0xf0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01CF
        gbc.setState(0x4c6b, 0x1eef, 0xc0b0, 0xd862, 0xabfb, 0xc99e, 0x1, 0x1);
        gbc.writeMem(0x1eef, { 0x58, 0x4c });
        gbc.writeMem(0x4c6b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1ef1);
        EXPECT(gbc.pc(), 0x4c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01D0
        gbc.setState(0xb879, 0x5866, 0xe670, 0x2c7, 0x5338, 0x7ef8, 0x0, 0x1);
        gbc.writeMem(0x5866, { 0xfd, 0xb2 });
        gbc.writeMem(0xb879, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5868);
        EXPECT(gbc.pc(), 0xb87a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb879), 0xd1);
        // D1 01D2
        gbc.setState(0x9cfd, 0xe06, 0xf5a0, 0x95bd, 0x7f7f, 0xb7dc, 0x1, 0x0);
        gbc.writeMem(0xe06, { 0xed, 0x82 });
        gbc.writeMem(0x9cfd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe08);
        EXPECT(gbc.pc(), 0x9cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cfd), 0xd1);
        // D1 01D3
        gbc.setState(0x6785, 0x5855, 0x490, 0x4cf7, 0xe146, 0x2881, 0x1, 0x1);
        gbc.writeMem(0x5855, { 0xc, 0xbe });
        gbc.writeMem(0x6785, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5857);
        EXPECT(gbc.pc(), 0x6786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 01D4
        gbc.setState(0x2b8e, 0x97f1, 0x64f0, 0x1714, 0x9dd7, 0xc2bb, 0x1, 0x1);
        gbc.writeMem(0x2b8e, { 0xd1 });
        gbc.writeMem(0x97f1, { 0x1a, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x97f3);
        EXPECT(gbc.pc(), 0x2b8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f1), 0x1a);
        EXPECT(gbc.readMem(0x97f2), 0xc6);
        // D1 01D5
        gbc.setState(0x107b, 0xe9e1, 0xe800, 0xd501, 0x92e7, 0x7290, 0x0, 0x1);
        gbc.writeMem(0x107b, { 0xd1 });
        gbc.writeMem(0xe9e1, { 0xff, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe9e3);
        EXPECT(gbc.pc(), 0x107c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e1), 0xff);
        EXPECT(gbc.readMem(0xe9e2), 0xe4);
        // D1 01D6
        gbc.setState(0x29bc, 0x7f62, 0xf680, 0x5e96, 0xfd7, 0x5050, 0x1, 0x0);
        gbc.writeMem(0x29bc, { 0xd1 });
        gbc.writeMem(0x7f62, { 0x2d, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7f64);
        EXPECT(gbc.pc(), 0x29bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 01D7
        gbc.setState(0xc31c, 0x7dfb, 0xf900, 0xcb81, 0x1319, 0xf748, 0x1, 0x0);
        gbc.writeMem(0x7dfb, { 0x7b, 0x6 });
        gbc.writeMem(0xc31c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7dfd);
        EXPECT(gbc.pc(), 0xc31d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31c), 0xd1);
        // D1 01D8
        gbc.setState(0xa88e, 0xab92, 0xc150, 0x5218, 0xf903, 0xfad1, 0x0, 0x0);
        gbc.writeMem(0xa88e, { 0xd1 });
        gbc.writeMem(0xab92, { 0x82, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xab94);
        EXPECT(gbc.pc(), 0xa88f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88e), 0xd1);
        EXPECT(gbc.readMem(0xab92), 0x82);
        EXPECT(gbc.readMem(0xab93), 0x2);
        // D1 01D9
        gbc.setState(0xc0e3, 0x8ed9, 0xb600, 0x5e8c, 0x74de, 0xbe0b, 0x1, 0x0);
        gbc.writeMem(0x8ed9, { 0x35, 0xf2 });
        gbc.writeMem(0xc0e3, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8edb);
        EXPECT(gbc.pc(), 0xc0e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed9), 0x35);
        EXPECT(gbc.readMem(0x8eda), 0xf2);
        EXPECT(gbc.readMem(0xc0e3), 0xd1);
        // D1 01DA
        gbc.setState(0x9a56, 0x6179, 0xb9e0, 0xe893, 0xe30a, 0xa2ef, 0x0, 0x1);
        gbc.writeMem(0x6179, { 0x23, 0x4b });
        gbc.writeMem(0x9a56, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x617b);
        EXPECT(gbc.pc(), 0x9a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a56), 0xd1);
        // D1 01DB
        gbc.setState(0x1a4b, 0xef9f, 0x9730, 0x83ff, 0x6e7b, 0x3272, 0x1, 0x1);
        gbc.writeMem(0x1a4b, { 0xd1 });
        gbc.writeMem(0xef9f, { 0x4f, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xefa1);
        EXPECT(gbc.pc(), 0x1a4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef9f), 0x4f);
        EXPECT(gbc.readMem(0xefa0), 0x98);
        // D1 01DC
        gbc.setState(0x28d, 0x3a73, 0x3cf0, 0xa7e, 0x99b0, 0xdb1d, 0x0, 0x1);
        gbc.writeMem(0x28d, { 0xd1 });
        gbc.writeMem(0x3a73, { 0xd1, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3a75);
        EXPECT(gbc.pc(), 0x28e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01DD
        gbc.setState(0xcdbf, 0x807e, 0x4180, 0x4d37, 0x12b, 0x3899, 0x1, 0x1);
        gbc.writeMem(0x807e, { 0x31, 0x6 });
        gbc.writeMem(0xcdbf, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8080);
        EXPECT(gbc.pc(), 0xcdc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807e), 0x31);
        EXPECT(gbc.readMem(0x807f), 0x6);
        EXPECT(gbc.readMem(0xcdbf), 0xd1);
        // D1 01DE
        gbc.setState(0xcf32, 0xea45, 0xdee0, 0x8d0f, 0x6435, 0xd9ed, 0x0, 0x1);
        gbc.writeMem(0xcf32, { 0xd1 });
        gbc.writeMem(0xea45, { 0x84, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xea47);
        EXPECT(gbc.pc(), 0xcf33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf32), 0xd1);
        EXPECT(gbc.readMem(0xea45), 0x84);
        EXPECT(gbc.readMem(0xea46), 0x1e);
        // D1 01DF
        gbc.setState(0x3f0a, 0x2e59, 0xb690, 0xbc75, 0x60f5, 0x4b2b, 0x0, 0x1);
        gbc.writeMem(0x2e59, { 0xbd, 0xfb });
        gbc.writeMem(0x3f0a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2e5b);
        EXPECT(gbc.pc(), 0x3f0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 01E0
        gbc.setState(0x1b48, 0xe18c, 0xae60, 0x959, 0x5a30, 0x5c37, 0x0, 0x0);
        gbc.writeMem(0x1b48, { 0xd1 });
        gbc.writeMem(0xe18c, { 0x27, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe18e);
        EXPECT(gbc.pc(), 0x1b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe18c), 0x27);
        EXPECT(gbc.readMem(0xe18d), 0xc3);
        // D1 01E1
        gbc.setState(0xbc99, 0xafe5, 0x6540, 0x6efe, 0x4fc, 0x6004, 0x1, 0x1);
        gbc.writeMem(0xafe5, { 0x12, 0xbf });
        gbc.writeMem(0xbc99, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xafe7);
        EXPECT(gbc.pc(), 0xbc9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe5), 0x12);
        EXPECT(gbc.readMem(0xafe6), 0xbf);
        EXPECT(gbc.readMem(0xbc99), 0xd1);
        // D1 01E2
        gbc.setState(0xc58a, 0x5e2e, 0x2a30, 0x67e6, 0x9a60, 0xd80, 0x0, 0x0);
        gbc.writeMem(0x5e2e, { 0x8d, 0xee });
        gbc.writeMem(0xc58a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5e30);
        EXPECT(gbc.pc(), 0xc58b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc58a), 0xd1);
        // D1 01E3
        gbc.setState(0xedc1, 0x81c8, 0x5310, 0x9309, 0xaf2c, 0x2842, 0x0, 0x1);
        gbc.writeMem(0x81c8, { 0xb4, 0x5f });
        gbc.writeMem(0xedc1, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x81ca);
        EXPECT(gbc.pc(), 0xedc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c8), 0xb4);
        EXPECT(gbc.readMem(0x81c9), 0x5f);
        EXPECT(gbc.readMem(0xedc1), 0xd1);
        // D1 01E4
        gbc.setState(0x3dc5, 0x38d9, 0x8360, 0x3654, 0xeed7, 0x8238, 0x0, 0x0);
        gbc.writeMem(0x38d9, { 0x3a, 0xe2 });
        gbc.writeMem(0x3dc5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x38db);
        EXPECT(gbc.pc(), 0x3dc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 01E5
        gbc.setState(0xdaaa, 0xc229, 0xe3f0, 0x1732, 0x5092, 0x3365, 0x1, 0x0);
        gbc.writeMem(0xc229, { 0x19, 0xc5 });
        gbc.writeMem(0xdaaa, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc22b);
        EXPECT(gbc.pc(), 0xdaab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc229), 0x19);
        EXPECT(gbc.readMem(0xc22a), 0xc5);
        EXPECT(gbc.readMem(0xdaaa), 0xd1);
        // D1 01E6
        gbc.setState(0xd401, 0x3f7e, 0xbbc0, 0xa120, 0xafdd, 0xc67, 0x1, 0x1);
        gbc.writeMem(0x3f7e, { 0x34, 0x63 });
        gbc.writeMem(0xd401, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3f80);
        EXPECT(gbc.pc(), 0xd402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd401), 0xd1);
        // D1 01E7
        gbc.setState(0xcd8b, 0x1d93, 0xdcf0, 0xa2bc, 0x2c2b, 0x19b6, 0x0, 0x0);
        gbc.writeMem(0x1d93, { 0x18, 0x3b });
        gbc.writeMem(0xcd8b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1d95);
        EXPECT(gbc.pc(), 0xcd8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd8b), 0xd1);
        // D1 01E8
        gbc.setState(0x450d, 0x51b1, 0xd530, 0x64a8, 0x26c6, 0xf53a, 0x1, 0x0);
        gbc.writeMem(0x450d, { 0xd1 });
        gbc.writeMem(0x51b1, { 0xb7, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x51b3);
        EXPECT(gbc.pc(), 0x450e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01E9
        gbc.setState(0xc651, 0x793e, 0xa220, 0x5f88, 0xb669, 0x461f, 0x0, 0x0);
        gbc.writeMem(0x793e, { 0x78, 0xae });
        gbc.writeMem(0xc651, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7940);
        EXPECT(gbc.pc(), 0xc652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc651), 0xd1);
        // D1 01EA
        gbc.setState(0x553a, 0x5c32, 0xb7d0, 0xc7a2, 0x807, 0xddf, 0x0, 0x0);
        gbc.writeMem(0x553a, { 0xd1 });
        gbc.writeMem(0x5c32, { 0xa9, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5c34);
        EXPECT(gbc.pc(), 0x553b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 01EB
        gbc.setState(0xa79a, 0xc848, 0x32d0, 0xa1cd, 0x6c63, 0x89b7, 0x1, 0x1);
        gbc.writeMem(0xa79a, { 0xd1 });
        gbc.writeMem(0xc848, { 0x20, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc84a);
        EXPECT(gbc.pc(), 0xa79b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa79a), 0xd1);
        EXPECT(gbc.readMem(0xc848), 0x20);
        EXPECT(gbc.readMem(0xc849), 0xfb);
        // D1 01EC
        gbc.setState(0x42f8, 0x460e, 0x13f0, 0xe6c, 0xa3c0, 0xcbd1, 0x0, 0x1);
        gbc.writeMem(0x42f8, { 0xd1 });
        gbc.writeMem(0x460e, { 0x3a, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4610);
        EXPECT(gbc.pc(), 0x42f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01ED
        gbc.setState(0x7cfb, 0x347c, 0x9d10, 0xcff9, 0x69f8, 0x671a, 0x0, 0x1);
        gbc.writeMem(0x347c, { 0xcc, 0x2b });
        gbc.writeMem(0x7cfb, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x347e);
        EXPECT(gbc.pc(), 0x7cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 01EE
        gbc.setState(0xd49e, 0xe0f6, 0x3390, 0xa92e, 0x6db3, 0x43ea, 0x1, 0x0);
        gbc.writeMem(0xd49e, { 0xd1 });
        gbc.writeMem(0xe0f6, { 0xed, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe0f8);
        EXPECT(gbc.pc(), 0xd49f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49e), 0xd1);
        EXPECT(gbc.readMem(0xe0f6), 0xed);
        EXPECT(gbc.readMem(0xe0f7), 0x4);
        // D1 01EF
        gbc.setState(0xe815, 0xdff0, 0xd60, 0x4bd5, 0x1f83, 0x33e2, 0x0, 0x1);
        gbc.writeMem(0xdff0, { 0x5f, 0xd9 });
        gbc.writeMem(0xe815, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xdff2);
        EXPECT(gbc.pc(), 0xe816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff0), 0x5f);
        EXPECT(gbc.readMem(0xdff1), 0xd9);
        EXPECT(gbc.readMem(0xe815), 0xd1);
        // D1 01F0
        gbc.setState(0x708f, 0x85c3, 0xbb70, 0x199c, 0x71be, 0x9405, 0x1, 0x0);
        gbc.writeMem(0x708f, { 0xd1 });
        gbc.writeMem(0x85c3, { 0x6, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x85c5);
        EXPECT(gbc.pc(), 0x7090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c3), 0x6);
        EXPECT(gbc.readMem(0x85c4), 0x72);
        // D1 01F1
        gbc.setState(0x9bdc, 0xec2e, 0xee30, 0xdd2f, 0xf5b9, 0xe840, 0x0, 0x0);
        gbc.writeMem(0x9bdc, { 0xd1 });
        gbc.writeMem(0xec2e, { 0xd4, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xec30);
        EXPECT(gbc.pc(), 0x9bdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bdc), 0xd1);
        EXPECT(gbc.readMem(0xec2e), 0xd4);
        EXPECT(gbc.readMem(0xec2f), 0x28);
        // D1 01F2
        gbc.setState(0xdb0c, 0x69d4, 0x830, 0xb96e, 0xafb3, 0x89dd, 0x1, 0x0);
        gbc.writeMem(0x69d4, { 0x92, 0x2f });
        gbc.writeMem(0xdb0c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x69d6);
        EXPECT(gbc.pc(), 0xdb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb0c), 0xd1);
        // D1 01F3
        gbc.setState(0x3c06, 0xb3a9, 0x5fc0, 0xbb75, 0xbdc5, 0x10cd, 0x0, 0x0);
        gbc.writeMem(0x3c06, { 0xd1 });
        gbc.writeMem(0xb3a9, { 0xad, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb3ab);
        EXPECT(gbc.pc(), 0x3c07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a9), 0xad);
        EXPECT(gbc.readMem(0xb3aa), 0xdd);
        // D1 01F4
        gbc.setState(0x38c2, 0x840f, 0xcfe0, 0xec5a, 0xbe22, 0xd61, 0x0, 0x1);
        gbc.writeMem(0x38c2, { 0xd1 });
        gbc.writeMem(0x840f, { 0x33, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8411);
        EXPECT(gbc.pc(), 0x38c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840f), 0x33);
        EXPECT(gbc.readMem(0x8410), 0xca);
        // D1 01F5
        gbc.setState(0xd87c, 0x4e39, 0x2f90, 0x384, 0x2259, 0x8850, 0x1, 0x1);
        gbc.writeMem(0x4e39, { 0xdd, 0xf1 });
        gbc.writeMem(0xd87c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4e3b);
        EXPECT(gbc.pc(), 0xd87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd87c), 0xd1);
        // D1 01F6
        gbc.setState(0xd47d, 0x36cb, 0xe050, 0x2507, 0xb85e, 0xabb1, 0x0, 0x0);
        gbc.writeMem(0x36cb, { 0xe3, 0xc5 });
        gbc.writeMem(0xd47d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x36cd);
        EXPECT(gbc.pc(), 0xd47e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47d), 0xd1);
        // D1 01F7
        gbc.setState(0xead7, 0xb43e, 0xd980, 0x4695, 0x2783, 0xc3e6, 0x0, 0x1);
        gbc.writeMem(0xb43e, { 0xd7, 0x44 });
        gbc.writeMem(0xead7, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb440);
        EXPECT(gbc.pc(), 0xead8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb43e), 0xd7);
        EXPECT(gbc.readMem(0xb43f), 0x44);
        EXPECT(gbc.readMem(0xead7), 0xd1);
        // D1 01F8
        gbc.setState(0xc5e6, 0xc0e9, 0x6e0, 0x857c, 0x73fc, 0xd7be, 0x1, 0x0);
        gbc.writeMem(0xc0e9, { 0x8d, 0xbe });
        gbc.writeMem(0xc5e6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc0eb);
        EXPECT(gbc.pc(), 0xc5e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e9), 0x8d);
        EXPECT(gbc.readMem(0xc0ea), 0xbe);
        EXPECT(gbc.readMem(0xc5e6), 0xd1);
        // D1 01F9
        gbc.setState(0xc7d1, 0x9cff, 0x1340, 0x7f05, 0x59b5, 0xffc3, 0x0, 0x0);
        gbc.writeMem(0x9cff, { 0xee, 0xab });
        gbc.writeMem(0xc7d1, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9d01);
        EXPECT(gbc.pc(), 0xc7d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cff), 0xee);
        EXPECT(gbc.readMem(0x9d00), 0xab);
        EXPECT(gbc.readMem(0xc7d1), 0xd1);
        // D1 01FA
        gbc.setState(0x1b32, 0xfa86, 0xb180, 0x6253, 0xab85, 0xc9a6, 0x1, 0x0);
        gbc.writeMem(0x1b32, { 0xd1 });
        gbc.writeMem(0xfa86, { 0x14, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfa88);
        EXPECT(gbc.pc(), 0x1b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa86), 0x14);
        EXPECT(gbc.readMem(0xfa87), 0x59);
        // D1 01FB
        gbc.setState(0x5638, 0x2adc, 0x49b0, 0xd7c3, 0x4da4, 0xe14a, 0x0, 0x0);
        gbc.writeMem(0x2adc, { 0x94, 0x5c });
        gbc.writeMem(0x5638, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2ade);
        EXPECT(gbc.pc(), 0x5639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 01FC
        gbc.setState(0xdd63, 0x6901, 0x58e0, 0xf359, 0x40ae, 0x414e, 0x1, 0x0);
        gbc.writeMem(0x6901, { 0x94, 0xf4 });
        gbc.writeMem(0xdd63, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6903);
        EXPECT(gbc.pc(), 0xdd64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd63), 0xd1);
        // D1 01FD
        gbc.setState(0xcdb7, 0x948b, 0xa2f0, 0x9672, 0x9b43, 0x9800, 0x0, 0x0);
        gbc.writeMem(0x948b, { 0x7a, 0xd1 });
        gbc.writeMem(0xcdb7, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x948d);
        EXPECT(gbc.pc(), 0xcdb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x948b), 0x7a);
        EXPECT(gbc.readMem(0x948c), 0xd1);
        EXPECT(gbc.readMem(0xcdb7), 0xd1);
        // D1 01FE
        gbc.setState(0x4152, 0x2fa, 0x40d0, 0xe1f5, 0xcff5, 0x3a20, 0x1, 0x0);
        gbc.writeMem(0x2fa, { 0x4d, 0xe5 });
        gbc.writeMem(0x4152, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2fc);
        EXPECT(gbc.pc(), 0x4153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 01FF
        gbc.setState(0x9f9e, 0x554a, 0x2f20, 0xb366, 0xc874, 0xf743, 0x0, 0x0);
        gbc.writeMem(0x554a, { 0xa1, 0x54 });
        gbc.writeMem(0x9f9e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x554c);
        EXPECT(gbc.pc(), 0x9f9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f9e), 0xd1);
        // D1 0200
        gbc.setState(0xd96, 0x201b, 0xb2d0, 0xbd37, 0x9c96, 0xe2b8, 0x0, 0x0);
        gbc.writeMem(0xd96, { 0xd1 });
        gbc.writeMem(0x201b, { 0x25, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x201d);
        EXPECT(gbc.pc(), 0xd97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0201
        gbc.setState(0x8dac, 0xd55c, 0xbd70, 0x7d04, 0x13d0, 0xe3a2, 0x1, 0x0);
        gbc.writeMem(0x8dac, { 0xd1 });
        gbc.writeMem(0xd55c, { 0x84, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd55e);
        EXPECT(gbc.pc(), 0x8dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dac), 0xd1);
        EXPECT(gbc.readMem(0xd55c), 0x84);
        EXPECT(gbc.readMem(0xd55d), 0x52);
        // D1 0202
        gbc.setState(0x9d1e, 0x2742, 0x1340, 0xbfb0, 0x225f, 0x414e, 0x0, 0x1);
        gbc.writeMem(0x2742, { 0x4e, 0xef });
        gbc.writeMem(0x9d1e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2744);
        EXPECT(gbc.pc(), 0x9d1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d1e), 0xd1);
        // D1 0203
        gbc.setState(0x1323, 0x78c4, 0xa840, 0xa89e, 0x5dee, 0xb78, 0x0, 0x1);
        gbc.writeMem(0x1323, { 0xd1 });
        gbc.writeMem(0x78c4, { 0x9a, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x78c6);
        EXPECT(gbc.pc(), 0x1324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0204
        gbc.setState(0xf9, 0x93ce, 0x1ff0, 0x21f, 0x6129, 0x1056, 0x1, 0x0);
        gbc.writeMem(0xf9, { 0xd1 });
        gbc.writeMem(0x93ce, { 0x2e, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x93d0);
        EXPECT(gbc.pc(), 0xfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ce), 0x2e);
        EXPECT(gbc.readMem(0x93cf), 0x88);
        // D1 0206
        gbc.setState(0xbb4b, 0x1a1d, 0xd850, 0x1509, 0xdfa1, 0x39d3, 0x0, 0x1);
        gbc.writeMem(0x1a1d, { 0x7e, 0xc3 });
        gbc.writeMem(0xbb4b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1a1f);
        EXPECT(gbc.pc(), 0xbb4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4b), 0xd1);
        // D1 0208
        gbc.setState(0xd6c8, 0xcd5e, 0x8f80, 0xf120, 0x2389, 0xca2b, 0x1, 0x0);
        gbc.writeMem(0xcd5e, { 0xeb, 0x12 });
        gbc.writeMem(0xd6c8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcd60);
        EXPECT(gbc.pc(), 0xd6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5e), 0xeb);
        EXPECT(gbc.readMem(0xcd5f), 0x12);
        EXPECT(gbc.readMem(0xd6c8), 0xd1);
        // D1 0209
        gbc.setState(0x37c2, 0xe181, 0xa540, 0xbe1b, 0x7b35, 0x9b4d, 0x0, 0x1);
        gbc.writeMem(0x37c2, { 0xd1 });
        gbc.writeMem(0xe181, { 0xdb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe183);
        EXPECT(gbc.pc(), 0x37c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe181), 0xdb);
        EXPECT(gbc.readMem(0xe182), 0x55);
        // D1 020A
        gbc.setState(0x664a, 0x4447, 0xa20, 0xbbb0, 0x391d, 0x30f8, 0x1, 0x0);
        gbc.writeMem(0x4447, { 0xae, 0x88 });
        gbc.writeMem(0x664a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4449);
        EXPECT(gbc.pc(), 0x664b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 020B
        gbc.setState(0xb5ad, 0x37cd, 0xda10, 0x65c1, 0x90dd, 0x1e6, 0x0, 0x0);
        gbc.writeMem(0x37cd, { 0x8e, 0x43 });
        gbc.writeMem(0xb5ad, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x37cf);
        EXPECT(gbc.pc(), 0xb5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ad), 0xd1);
        // D1 020C
        gbc.setState(0x95a6, 0x2225, 0x5670, 0xae79, 0x94e8, 0x45db, 0x1, 0x1);
        gbc.writeMem(0x2225, { 0x84, 0x48 });
        gbc.writeMem(0x95a6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2227);
        EXPECT(gbc.pc(), 0x95a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95a6), 0xd1);
        // D1 020D
        gbc.setState(0x87f5, 0x5cb4, 0x23d0, 0x4281, 0xdee5, 0x61a1, 0x0, 0x1);
        gbc.writeMem(0x5cb4, { 0xc4, 0xce });
        gbc.writeMem(0x87f5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5cb6);
        EXPECT(gbc.pc(), 0x87f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f5), 0xd1);
        // D1 020E
        gbc.setState(0xa6a8, 0xb7a8, 0x9ce0, 0xee28, 0xf008, 0xaf15, 0x1, 0x1);
        gbc.writeMem(0xa6a8, { 0xd1 });
        gbc.writeMem(0xb7a8, { 0xee, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb7aa);
        EXPECT(gbc.pc(), 0xa6a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a8), 0xd1);
        EXPECT(gbc.readMem(0xb7a8), 0xee);
        EXPECT(gbc.readMem(0xb7a9), 0x54);
        // D1 020F
        gbc.setState(0x7c1, 0x84df, 0x5b10, 0x188d, 0x471c, 0xd9f4, 0x1, 0x0);
        gbc.writeMem(0x7c1, { 0xd1 });
        gbc.writeMem(0x84df, { 0x47, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x84e1);
        EXPECT(gbc.pc(), 0x7c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84df), 0x47);
        EXPECT(gbc.readMem(0x84e0), 0x35);
        // D1 0210
        gbc.setState(0xedd3, 0x9b87, 0x83f0, 0x1533, 0x4c61, 0x5ba, 0x1, 0x0);
        gbc.writeMem(0x9b87, { 0x1f, 0x1 });
        gbc.writeMem(0xedd3, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9b89);
        EXPECT(gbc.pc(), 0xedd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b87), 0x1f);
        EXPECT(gbc.readMem(0x9b88), 0x1);
        EXPECT(gbc.readMem(0xedd3), 0xd1);
        // D1 0211
        gbc.setState(0x96e8, 0x24cb, 0x76f0, 0xf90d, 0xf76, 0x7c68, 0x1, 0x0);
        gbc.writeMem(0x24cb, { 0xfe, 0x6 });
        gbc.writeMem(0x96e8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x24cd);
        EXPECT(gbc.pc(), 0x96e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e8), 0xd1);
        // D1 0212
        gbc.setState(0x2bd6, 0x2610, 0x4bd0, 0x575a, 0xcaf8, 0x2047, 0x0, 0x1);
        gbc.writeMem(0x2610, { 0x57, 0x9a });
        gbc.writeMem(0x2bd6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2612);
        EXPECT(gbc.pc(), 0x2bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0213
        gbc.setState(0x9d4a, 0x75d8, 0xa8b0, 0xacec, 0xb49c, 0xd368, 0x0, 0x0);
        gbc.writeMem(0x75d8, { 0x3d, 0xd5 });
        gbc.writeMem(0x9d4a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x75da);
        EXPECT(gbc.pc(), 0x9d4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d4a), 0xd1);
        // D1 0214
        gbc.setState(0xb1b2, 0xa424, 0x3250, 0xf3e4, 0x4c9e, 0xa388, 0x1, 0x0);
        gbc.writeMem(0xa424, { 0xd1, 0xa7 });
        gbc.writeMem(0xb1b2, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa426);
        EXPECT(gbc.pc(), 0xb1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa424), 0xd1);
        EXPECT(gbc.readMem(0xa425), 0xa7);
        EXPECT(gbc.readMem(0xb1b2), 0xd1);
        // D1 0215
        gbc.setState(0xf30, 0x9ee6, 0xfca0, 0x481, 0x4dae, 0xc47, 0x0, 0x0);
        gbc.writeMem(0xf30, { 0xd1 });
        gbc.writeMem(0x9ee6, { 0x74, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9ee8);
        EXPECT(gbc.pc(), 0xf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee6), 0x74);
        EXPECT(gbc.readMem(0x9ee7), 0xa7);
        // D1 0216
        gbc.setState(0xc33, 0x8ded, 0x8050, 0xc352, 0xd3a1, 0x3cd4, 0x1, 0x0);
        gbc.writeMem(0xc33, { 0xd1 });
        gbc.writeMem(0x8ded, { 0xa0, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8def);
        EXPECT(gbc.pc(), 0xc34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ded), 0xa0);
        EXPECT(gbc.readMem(0x8dee), 0x63);
        // D1 0217
        gbc.setState(0x9e96, 0xeb95, 0x9e40, 0x7c5c, 0x5fc1, 0xe8c8, 0x1, 0x0);
        gbc.writeMem(0x9e96, { 0xd1 });
        gbc.writeMem(0xeb95, { 0xd2, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xeb97);
        EXPECT(gbc.pc(), 0x9e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e96), 0xd1);
        EXPECT(gbc.readMem(0xeb95), 0xd2);
        EXPECT(gbc.readMem(0xeb96), 0xd2);
        // D1 0218
        gbc.setState(0x4f4c, 0xafb5, 0x98c0, 0x54df, 0xa042, 0x3779, 0x1, 0x1);
        gbc.writeMem(0x4f4c, { 0xd1 });
        gbc.writeMem(0xafb5, { 0xb, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xafb7);
        EXPECT(gbc.pc(), 0x4f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb5), 0xb);
        EXPECT(gbc.readMem(0xafb6), 0x6d);
        // D1 0219
        gbc.setState(0x35f0, 0x1820, 0xd3b0, 0x1d11, 0x5f65, 0xd201, 0x1, 0x0);
        gbc.writeMem(0x1820, { 0xba, 0xae });
        gbc.writeMem(0x35f0, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1822);
        EXPECT(gbc.pc(), 0x35f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 021A
        gbc.setState(0xe794, 0x8e9d, 0x9510, 0x9bc3, 0x95c9, 0x7c63, 0x1, 0x1);
        gbc.writeMem(0x8e9d, { 0xd8, 0x6a });
        gbc.writeMem(0xe794, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8e9f);
        EXPECT(gbc.pc(), 0xe795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e9d), 0xd8);
        EXPECT(gbc.readMem(0x8e9e), 0x6a);
        EXPECT(gbc.readMem(0xe794), 0xd1);
        // D1 021B
        gbc.setState(0x24f5, 0x70a5, 0x55e0, 0xc67a, 0x84ee, 0x778a, 0x0, 0x0);
        gbc.writeMem(0x24f5, { 0xd1 });
        gbc.writeMem(0x70a5, { 0xff, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x70a7);
        EXPECT(gbc.pc(), 0x24f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 021C
        gbc.setState(0xd0e8, 0x5a65, 0x6270, 0x5cc5, 0x6925, 0xc301, 0x0, 0x0);
        gbc.writeMem(0x5a65, { 0xd1, 0x21 });
        gbc.writeMem(0xd0e8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5a67);
        EXPECT(gbc.pc(), 0xd0e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e8), 0xd1);
        // D1 021D
        gbc.setState(0x16f7, 0xfe4b, 0xe0f0, 0xeea3, 0x26d5, 0x4392, 0x1, 0x0);
        gbc.writeMem(0x16f7, { 0xd1 });
        gbc.writeMem(0xfe4b, { 0x46, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfe4d);
        EXPECT(gbc.pc(), 0x16f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe4b), 0x46);
        EXPECT(gbc.readMem(0xfe4c), 0xf3);
        // D1 021E
        gbc.setState(0x13d1, 0x97ce, 0x3eb0, 0xe40e, 0x4342, 0x2a49, 0x0, 0x1);
        gbc.writeMem(0x13d1, { 0xd1 });
        gbc.writeMem(0x97ce, { 0xa2, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x97d0);
        EXPECT(gbc.pc(), 0x13d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ce), 0xa2);
        EXPECT(gbc.readMem(0x97cf), 0xbc);
        // D1 021F
        gbc.setState(0xc758, 0xcb7d, 0xbb10, 0xa139, 0x4f79, 0xf8fb, 0x1, 0x1);
        gbc.writeMem(0xc758, { 0xd1 });
        gbc.writeMem(0xcb7d, { 0x16, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xcb7f);
        EXPECT(gbc.pc(), 0xc759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc758), 0xd1);
        EXPECT(gbc.readMem(0xcb7d), 0x16);
        EXPECT(gbc.readMem(0xcb7e), 0x57);
        // D1 0220
        gbc.setState(0xbacc, 0x765c, 0xe600, 0x39aa, 0x6e8b, 0x142b, 0x0, 0x0);
        gbc.writeMem(0x765c, { 0x93, 0x5f });
        gbc.writeMem(0xbacc, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x765e);
        EXPECT(gbc.pc(), 0xbacd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbacc), 0xd1);
        // D1 0221
        gbc.setState(0xd9f, 0x5c0e, 0xf720, 0x9227, 0xb5f1, 0x6e96, 0x1, 0x0);
        gbc.writeMem(0xd9f, { 0xd1 });
        gbc.writeMem(0x5c0e, { 0x7b, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5c10);
        EXPECT(gbc.pc(), 0xda0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0222
        gbc.setState(0x1ca2, 0xe1d, 0xb660, 0x88bc, 0x32ed, 0x94a1, 0x1, 0x1);
        gbc.writeMem(0xe1d, { 0xa5, 0x9d });
        gbc.writeMem(0x1ca2, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe1f);
        EXPECT(gbc.pc(), 0x1ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0223
        gbc.setState(0x29a8, 0xfa3a, 0x41c0, 0x1697, 0x6ac5, 0xb537, 0x1, 0x0);
        gbc.writeMem(0x29a8, { 0xd1 });
        gbc.writeMem(0xfa3a, { 0xf8, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfa3c);
        EXPECT(gbc.pc(), 0x29a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa3a), 0xf8);
        EXPECT(gbc.readMem(0xfa3b), 0x4b);
        // D1 0224
        gbc.setState(0x6fd6, 0xe5a4, 0x8700, 0x6136, 0x3012, 0xf64f, 0x1, 0x0);
        gbc.writeMem(0x6fd6, { 0xd1 });
        gbc.writeMem(0xe5a4, { 0x13, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe5a6);
        EXPECT(gbc.pc(), 0x6fd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a4), 0x13);
        EXPECT(gbc.readMem(0xe5a5), 0x68);
        // D1 0225
        gbc.setState(0xa5b5, 0x2446, 0x6580, 0x8350, 0x203e, 0x21eb, 0x1, 0x0);
        gbc.writeMem(0x2446, { 0x5, 0xf5 });
        gbc.writeMem(0xa5b5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2448);
        EXPECT(gbc.pc(), 0xa5b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5b5), 0xd1);
        // D1 0226
        gbc.setState(0x5440, 0xc3b7, 0x1340, 0x820, 0xe630, 0xe85d, 0x1, 0x0);
        gbc.writeMem(0x5440, { 0xd1 });
        gbc.writeMem(0xc3b7, { 0xa8, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc3b9);
        EXPECT(gbc.pc(), 0x5441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b7), 0xa8);
        EXPECT(gbc.readMem(0xc3b8), 0x1d);
        // D1 0227
        gbc.setState(0x4473, 0x6f33, 0x3480, 0x7632, 0xcfec, 0x76db, 0x1, 0x1);
        gbc.writeMem(0x4473, { 0xd1 });
        gbc.writeMem(0x6f33, { 0xba, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6f35);
        EXPECT(gbc.pc(), 0x4474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0228
        gbc.setState(0x91f7, 0xf38e, 0x5690, 0xeffc, 0x9606, 0xb48f, 0x0, 0x1);
        gbc.writeMem(0x91f7, { 0xd1 });
        gbc.writeMem(0xf38e, { 0xdc, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf390);
        EXPECT(gbc.pc(), 0x91f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f7), 0xd1);
        EXPECT(gbc.readMem(0xf38e), 0xdc);
        EXPECT(gbc.readMem(0xf38f), 0x95);
        // D1 0229
        gbc.setState(0xe868, 0x7a20, 0xf3a0, 0x1522, 0x5846, 0x1c10, 0x0, 0x1);
        gbc.writeMem(0x7a20, { 0xa, 0xa });
        gbc.writeMem(0xe868, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7a22);
        EXPECT(gbc.pc(), 0xe869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe868), 0xd1);
        // D1 022A
        gbc.setState(0x1224, 0xf8ae, 0x9ad0, 0x6977, 0xaa5, 0xb0d6, 0x1, 0x0);
        gbc.writeMem(0x1224, { 0xd1 });
        gbc.writeMem(0xf8ae, { 0xc0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf8b0);
        EXPECT(gbc.pc(), 0x1225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf8ae), 0xc0);
        EXPECT(gbc.readMem(0xf8af), 0x0);
        // D1 022B
        gbc.setState(0x4e09, 0xd87f, 0x75d0, 0xb121, 0x6d32, 0xe1bd, 0x0, 0x1);
        gbc.writeMem(0x4e09, { 0xd1 });
        gbc.writeMem(0xd87f, { 0xa6, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd881);
        EXPECT(gbc.pc(), 0x4e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd87f), 0xa6);
        EXPECT(gbc.readMem(0xd880), 0x3f);
        // D1 022C
        gbc.setState(0x7219, 0xfe6b, 0x1390, 0xb95c, 0x9210, 0x735d, 0x0, 0x1);
        gbc.writeMem(0x7219, { 0xd1 });
        gbc.writeMem(0xfe6b, { 0xbe, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfe6d);
        EXPECT(gbc.pc(), 0x721a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe6b), 0xbe);
        EXPECT(gbc.readMem(0xfe6c), 0x60);
        // D1 022D
        gbc.setState(0xb659, 0xa158, 0xc760, 0x8bb0, 0x3d2, 0xccf4, 0x0, 0x1);
        gbc.writeMem(0xa158, { 0xaa, 0xce });
        gbc.writeMem(0xb659, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa15a);
        EXPECT(gbc.pc(), 0xb65a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa158), 0xaa);
        EXPECT(gbc.readMem(0xa159), 0xce);
        EXPECT(gbc.readMem(0xb659), 0xd1);
        // D1 022E
        gbc.setState(0x6ea0, 0x6e21, 0x6bb0, 0x709, 0xd7b, 0x6f77, 0x1, 0x1);
        gbc.writeMem(0x6e21, { 0x65, 0x11 });
        gbc.writeMem(0x6ea0, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6e23);
        EXPECT(gbc.pc(), 0x6ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 022F
        gbc.setState(0xc78b, 0x3c63, 0x36b0, 0xc09, 0x86b, 0x3ba0, 0x0, 0x1);
        gbc.writeMem(0x3c63, { 0xe0, 0x7d });
        gbc.writeMem(0xc78b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3c65);
        EXPECT(gbc.pc(), 0xc78c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc78b), 0xd1);
        // D1 0230
        gbc.setState(0xfda, 0x394a, 0x40a0, 0xcdf0, 0x5ae8, 0x9b96, 0x0, 0x0);
        gbc.writeMem(0xfda, { 0xd1 });
        gbc.writeMem(0x394a, { 0x2a, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x394c);
        EXPECT(gbc.pc(), 0xfdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0231
        gbc.setState(0x18b2, 0xa8e8, 0xc100, 0x41c4, 0xcaee, 0x88c9, 0x0, 0x1);
        gbc.writeMem(0x18b2, { 0xd1 });
        gbc.writeMem(0xa8e8, { 0x7, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa8ea);
        EXPECT(gbc.pc(), 0x18b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e8), 0x7);
        EXPECT(gbc.readMem(0xa8e9), 0x75);
        // D1 0232
        gbc.setState(0x6d7, 0x1f30, 0x2d80, 0xb45f, 0x4c07, 0x914d, 0x0, 0x1);
        gbc.writeMem(0x6d7, { 0xd1 });
        gbc.writeMem(0x1f30, { 0x82, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1f32);
        EXPECT(gbc.pc(), 0x6d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0233
        gbc.setState(0x103f, 0x3003, 0xb30, 0x5780, 0xefcb, 0x6927, 0x1, 0x1);
        gbc.writeMem(0x103f, { 0xd1 });
        gbc.writeMem(0x3003, { 0x2d, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3005);
        EXPECT(gbc.pc(), 0x1040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0234
        gbc.setState(0xaca5, 0xfa5f, 0x7130, 0xd23a, 0x7692, 0xbe16, 0x1, 0x1);
        gbc.writeMem(0xaca5, { 0xd1 });
        gbc.writeMem(0xfa5f, { 0x4e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfa61);
        EXPECT(gbc.pc(), 0xaca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaca5), 0xd1);
        EXPECT(gbc.readMem(0xfa5f), 0x4e);
        EXPECT(gbc.readMem(0xfa60), 0xaa);
        // D1 0235
        gbc.setState(0x4ac8, 0xf560, 0xa330, 0x4fd3, 0x40bf, 0xb3cd, 0x1, 0x0);
        gbc.writeMem(0x4ac8, { 0xd1 });
        gbc.writeMem(0xf560, { 0x22, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf562);
        EXPECT(gbc.pc(), 0x4ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf560), 0x22);
        EXPECT(gbc.readMem(0xf561), 0x1c);
        // D1 0236
        gbc.setState(0x7218, 0xaca8, 0x3a40, 0x1c80, 0xa61d, 0xebaf, 0x1, 0x1);
        gbc.writeMem(0x7218, { 0xd1 });
        gbc.writeMem(0xaca8, { 0x27, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xacaa);
        EXPECT(gbc.pc(), 0x7219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca8), 0x27);
        EXPECT(gbc.readMem(0xaca9), 0xaf);
        // D1 0237
        gbc.setState(0xdce8, 0x229a, 0x9790, 0x5ad1, 0xbfda, 0x5dc0, 0x0, 0x1);
        gbc.writeMem(0x229a, { 0x5a, 0x19 });
        gbc.writeMem(0xdce8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x229c);
        EXPECT(gbc.pc(), 0xdce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce8), 0xd1);
        // D1 0238
        gbc.setState(0x2ecf, 0x9027, 0xc170, 0xc76, 0x6a79, 0x59e2, 0x1, 0x1);
        gbc.writeMem(0x2ecf, { 0xd1 });
        gbc.writeMem(0x9027, { 0xb6, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9029);
        EXPECT(gbc.pc(), 0x2ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9027), 0xb6);
        EXPECT(gbc.readMem(0x9028), 0x97);
        // D1 0239
        gbc.setState(0x549b, 0x5c83, 0x91f0, 0x55e3, 0xd7c5, 0xfc70, 0x1, 0x0);
        gbc.writeMem(0x549b, { 0xd1 });
        gbc.writeMem(0x5c83, { 0xdd, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5c85);
        EXPECT(gbc.pc(), 0x549c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 023A
        gbc.setState(0xf97, 0x6896, 0x930, 0x2583, 0x9b46, 0x3e60, 0x1, 0x1);
        gbc.writeMem(0xf97, { 0xd1 });
        gbc.writeMem(0x6896, { 0xd8, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6898);
        EXPECT(gbc.pc(), 0xf98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 023B
        gbc.setState(0x1396, 0x7c24, 0x38d0, 0xa11e, 0xc2a9, 0x90cd, 0x1, 0x1);
        gbc.writeMem(0x1396, { 0xd1 });
        gbc.writeMem(0x7c24, { 0x63, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7c26);
        EXPECT(gbc.pc(), 0x1397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 023C
        gbc.setState(0xb21c, 0xe2a2, 0xfa10, 0xcfaa, 0xce65, 0x5900, 0x0, 0x1);
        gbc.writeMem(0xb21c, { 0xd1 });
        gbc.writeMem(0xe2a2, { 0x11, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe2a4);
        EXPECT(gbc.pc(), 0xb21d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb21c), 0xd1);
        EXPECT(gbc.readMem(0xe2a2), 0x11);
        EXPECT(gbc.readMem(0xe2a3), 0x5b);
        // D1 023D
        gbc.setState(0xcc49, 0x1e3b, 0x72e0, 0xeea2, 0x6a2d, 0x1158, 0x1, 0x0);
        gbc.writeMem(0x1e3b, { 0x55, 0xea });
        gbc.writeMem(0xcc49, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1e3d);
        EXPECT(gbc.pc(), 0xcc4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc49), 0xd1);
        // D1 023E
        gbc.setState(0x51a2, 0x23d, 0x8d40, 0xcb6e, 0xf382, 0x75ee, 0x0, 0x1);
        gbc.writeMem(0x23d, { 0xab, 0x86 });
        gbc.writeMem(0x51a2, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x23f);
        EXPECT(gbc.pc(), 0x51a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 023F
        gbc.setState(0xd386, 0x8d91, 0x6b70, 0x313, 0xc68e, 0x9832, 0x0, 0x0);
        gbc.writeMem(0x8d91, { 0x21, 0x92 });
        gbc.writeMem(0xd386, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8d93);
        EXPECT(gbc.pc(), 0xd387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d91), 0x21);
        EXPECT(gbc.readMem(0x8d92), 0x92);
        EXPECT(gbc.readMem(0xd386), 0xd1);
        // D1 0240
        gbc.setState(0xa5f5, 0x1046, 0x9ae0, 0xbf6, 0xe181, 0x4e94, 0x0, 0x0);
        gbc.writeMem(0x1046, { 0x2b, 0x8c });
        gbc.writeMem(0xa5f5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1048);
        EXPECT(gbc.pc(), 0xa5f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f5), 0xd1);
        // D1 0241
        gbc.setState(0x66b6, 0xa414, 0x2680, 0xeefe, 0xe587, 0xacaa, 0x0, 0x1);
        gbc.writeMem(0x66b6, { 0xd1 });
        gbc.writeMem(0xa414, { 0x69, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa416);
        EXPECT(gbc.pc(), 0x66b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa414), 0x69);
        EXPECT(gbc.readMem(0xa415), 0x4d);
        // D1 0242
        gbc.setState(0x8496, 0xd039, 0xe220, 0xfe01, 0xe25d, 0xd966, 0x0, 0x1);
        gbc.writeMem(0x8496, { 0xd1 });
        gbc.writeMem(0xd039, { 0x3e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd03b);
        EXPECT(gbc.pc(), 0x8497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8496), 0xd1);
        EXPECT(gbc.readMem(0xd039), 0x3e);
        EXPECT(gbc.readMem(0xd03a), 0xc9);
        // D1 0243
        gbc.setState(0x4f4d, 0x30db, 0x71a0, 0xb6de, 0xac9d, 0xecaa, 0x1, 0x0);
        gbc.writeMem(0x30db, { 0xf7, 0x47 });
        gbc.writeMem(0x4f4d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x30dd);
        EXPECT(gbc.pc(), 0x4f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0244
        gbc.setState(0x13db, 0x196b, 0xf190, 0xfed1, 0xc96b, 0x34b3, 0x1, 0x0);
        gbc.writeMem(0x13db, { 0xd1 });
        gbc.writeMem(0x196b, { 0x4f, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x196d);
        EXPECT(gbc.pc(), 0x13dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0245
        gbc.setState(0x4628, 0x3c15, 0x8590, 0x883b, 0x7b2d, 0xd80f, 0x1, 0x0);
        gbc.writeMem(0x3c15, { 0xe0, 0x6d });
        gbc.writeMem(0x4628, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3c17);
        EXPECT(gbc.pc(), 0x4629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0246
        gbc.setState(0xa1bf, 0x1b32, 0x8f40, 0xb8d4, 0x549c, 0x4f0d, 0x1, 0x1);
        gbc.writeMem(0x1b32, { 0xb7, 0x24 });
        gbc.writeMem(0xa1bf, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1b34);
        EXPECT(gbc.pc(), 0xa1c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1bf), 0xd1);
        // D1 0247
        gbc.setState(0xdfac, 0xf182, 0x5aa0, 0x4e75, 0x1286, 0xd6b5, 0x1, 0x0);
        gbc.writeMem(0xdfac, { 0xd1 });
        gbc.writeMem(0xf182, { 0xf8, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf184);
        EXPECT(gbc.pc(), 0xdfad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfac), 0xd1);
        EXPECT(gbc.readMem(0xf182), 0xf8);
        EXPECT(gbc.readMem(0xf183), 0x2d);
        // D1 0248
        gbc.setState(0x427c, 0xe358, 0x69c0, 0xa3b2, 0x8969, 0x550f, 0x1, 0x1);
        gbc.writeMem(0x427c, { 0xd1 });
        gbc.writeMem(0xe358, { 0x1b, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe35a);
        EXPECT(gbc.pc(), 0x427d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe358), 0x1b);
        EXPECT(gbc.readMem(0xe359), 0x68);
        // D1 0249
        gbc.setState(0xb070, 0xa620, 0xac00, 0x683, 0x2bd5, 0x60da, 0x0, 0x1);
        gbc.writeMem(0xa620, { 0xf4, 0xc });
        gbc.writeMem(0xb070, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa622);
        EXPECT(gbc.pc(), 0xb071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa620), 0xf4);
        EXPECT(gbc.readMem(0xa621), 0xc);
        EXPECT(gbc.readMem(0xb070), 0xd1);
        // D1 024A
        gbc.setState(0x4d6f, 0xcd12, 0xbe10, 0x27dc, 0x4c5b, 0x998f, 0x0, 0x1);
        gbc.writeMem(0x4d6f, { 0xd1 });
        gbc.writeMem(0xcd12, { 0x0, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xcd14);
        EXPECT(gbc.pc(), 0x4d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd12), 0x0);
        EXPECT(gbc.readMem(0xcd13), 0x7a);
        // D1 024B
        gbc.setState(0x767b, 0x55b8, 0x9690, 0xe88c, 0x6e0, 0x49de, 0x1, 0x0);
        gbc.writeMem(0x55b8, { 0xaa, 0x4b });
        gbc.writeMem(0x767b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x55ba);
        EXPECT(gbc.pc(), 0x767c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 024C
        gbc.setState(0xaaeb, 0xe794, 0xf570, 0xdb88, 0x8f5e, 0xc0ec, 0x1, 0x1);
        gbc.writeMem(0xaaeb, { 0xd1 });
        gbc.writeMem(0xe794, { 0x2c, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe796);
        EXPECT(gbc.pc(), 0xaaec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaeb), 0xd1);
        EXPECT(gbc.readMem(0xe794), 0x2c);
        EXPECT(gbc.readMem(0xe795), 0x80);
        // D1 024D
        gbc.setState(0x5e64, 0xe2a4, 0xf260, 0xd1d8, 0x849b, 0xf28c, 0x1, 0x0);
        gbc.writeMem(0x5e64, { 0xd1 });
        gbc.writeMem(0xe2a4, { 0xf9, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe2a6);
        EXPECT(gbc.pc(), 0x5e65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a4), 0xf9);
        EXPECT(gbc.readMem(0xe2a5), 0xc0);
        // D1 024E
        gbc.setState(0x1d00, 0x2770, 0x5370, 0x5b04, 0x89c0, 0xc4fe, 0x0, 0x0);
        gbc.writeMem(0x1d00, { 0xd1 });
        gbc.writeMem(0x2770, { 0x15, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2772);
        EXPECT(gbc.pc(), 0x1d01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 024F
        gbc.setState(0xb471, 0x41c6, 0x6ff0, 0xe8c9, 0xa704, 0xb0fc, 0x1, 0x1);
        gbc.writeMem(0x41c6, { 0x86, 0x3e });
        gbc.writeMem(0xb471, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x41c8);
        EXPECT(gbc.pc(), 0xb472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb471), 0xd1);
        // D1 0250
        gbc.setState(0xef4a, 0x8938, 0xe40, 0x68ab, 0xa8ea, 0x18d2, 0x1, 0x0);
        gbc.writeMem(0x8938, { 0xa6, 0xae });
        gbc.writeMem(0xef4a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x893a);
        EXPECT(gbc.pc(), 0xef4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8938), 0xa6);
        EXPECT(gbc.readMem(0x8939), 0xae);
        EXPECT(gbc.readMem(0xef4a), 0xd1);
        // D1 0251
        gbc.setState(0x3b33, 0xc6ad, 0xc420, 0x6527, 0x4bbb, 0x46c2, 0x1, 0x0);
        gbc.writeMem(0x3b33, { 0xd1 });
        gbc.writeMem(0xc6ad, { 0xc8, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc6af);
        EXPECT(gbc.pc(), 0x3b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ad), 0xc8);
        EXPECT(gbc.readMem(0xc6ae), 0x8f);
        // D1 0252
        gbc.setState(0xa960, 0xcbfe, 0xe830, 0xbbd3, 0x472f, 0xa86c, 0x1, 0x1);
        gbc.writeMem(0xa960, { 0xd1 });
        gbc.writeMem(0xcbfe, { 0x20, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcc00);
        EXPECT(gbc.pc(), 0xa961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa960), 0xd1);
        EXPECT(gbc.readMem(0xcbfe), 0x20);
        EXPECT(gbc.readMem(0xcbff), 0x65);
        // D1 0254
        gbc.setState(0x8568, 0xe36, 0x8710, 0x6b6c, 0x4258, 0x212a, 0x1, 0x0);
        gbc.writeMem(0xe36, { 0x5d, 0xc });
        gbc.writeMem(0x8568, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe38);
        EXPECT(gbc.pc(), 0x8569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8568), 0xd1);
        // D1 0255
        gbc.setState(0xea6f, 0xb2c4, 0x22e0, 0xbed9, 0xff39, 0xd21e, 0x0, 0x0);
        gbc.writeMem(0xb2c4, { 0xd6, 0x86 });
        gbc.writeMem(0xea6f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb2c6);
        EXPECT(gbc.pc(), 0xea70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c4), 0xd6);
        EXPECT(gbc.readMem(0xb2c5), 0x86);
        EXPECT(gbc.readMem(0xea6f), 0xd1);
        // D1 0256
        gbc.setState(0x1d6a, 0x643, 0xf290, 0xbe59, 0xc549, 0xa4be, 0x1, 0x0);
        gbc.writeMem(0x643, { 0x23, 0x9f });
        gbc.writeMem(0x1d6a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x645);
        EXPECT(gbc.pc(), 0x1d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0257
        gbc.setState(0xdb76, 0x93ec, 0x61f0, 0xfea2, 0x27fa, 0x4462, 0x0, 0x0);
        gbc.writeMem(0x93ec, { 0x7d, 0x69 });
        gbc.writeMem(0xdb76, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x93ee);
        EXPECT(gbc.pc(), 0xdb77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ec), 0x7d);
        EXPECT(gbc.readMem(0x93ed), 0x69);
        EXPECT(gbc.readMem(0xdb76), 0xd1);
        // D1 0258
        gbc.setState(0x6d7f, 0x6c7, 0x91c0, 0x7f7f, 0x985e, 0x2cfd, 0x1, 0x1);
        gbc.writeMem(0x6c7, { 0x73, 0x9 });
        gbc.writeMem(0x6d7f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6c9);
        EXPECT(gbc.pc(), 0x6d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0259
        gbc.setState(0x1d1b, 0xa4b, 0x6030, 0x2daf, 0x4afc, 0x379a, 0x0, 0x0);
        gbc.writeMem(0xa4b, { 0xe3, 0x55 });
        gbc.writeMem(0x1d1b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa4d);
        EXPECT(gbc.pc(), 0x1d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 025A
        gbc.setState(0xbd93, 0x106e, 0xfe60, 0x6509, 0x9505, 0xf313, 0x0, 0x0);
        gbc.writeMem(0x106e, { 0x3c, 0x8f });
        gbc.writeMem(0xbd93, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1070);
        EXPECT(gbc.pc(), 0xbd94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd93), 0xd1);
        // D1 025B
        gbc.setState(0xe70f, 0xbac5, 0x1900, 0x4e1f, 0x2412, 0x142f, 0x0, 0x0);
        gbc.writeMem(0xbac5, { 0x32, 0x86 });
        gbc.writeMem(0xe70f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xbac7);
        EXPECT(gbc.pc(), 0xe710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac5), 0x32);
        EXPECT(gbc.readMem(0xbac6), 0x86);
        EXPECT(gbc.readMem(0xe70f), 0xd1);
        // D1 025C
        gbc.setState(0xe9a1, 0xa680, 0x13c0, 0x1522, 0x1f45, 0x1edc, 0x1, 0x0);
        gbc.writeMem(0xa680, { 0x61, 0xa9 });
        gbc.writeMem(0xe9a1, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa682);
        EXPECT(gbc.pc(), 0xe9a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa680), 0x61);
        EXPECT(gbc.readMem(0xa681), 0xa9);
        EXPECT(gbc.readMem(0xe9a1), 0xd1);
        // D1 025D
        gbc.setState(0x1173, 0x53b8, 0xd050, 0xda4, 0xe81d, 0x6177, 0x0, 0x0);
        gbc.writeMem(0x1173, { 0xd1 });
        gbc.writeMem(0x53b8, { 0x66, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x53ba);
        EXPECT(gbc.pc(), 0x1174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 025F
        gbc.setState(0x3c4a, 0x1339, 0x15e0, 0x61, 0xa2de, 0xe89e, 0x0, 0x0);
        gbc.writeMem(0x1339, { 0x18, 0x41 });
        gbc.writeMem(0x3c4a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x133b);
        EXPECT(gbc.pc(), 0x3c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0260
        gbc.setState(0x2771, 0x15b6, 0xba80, 0x366e, 0xdf25, 0xbe3e, 0x1, 0x1);
        gbc.writeMem(0x15b6, { 0xf2, 0x2 });
        gbc.writeMem(0x2771, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x15b8);
        EXPECT(gbc.pc(), 0x2772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0261
        gbc.setState(0x6f9a, 0x7a4b, 0x62b0, 0x842d, 0x9234, 0x8fcf, 0x0, 0x1);
        gbc.writeMem(0x6f9a, { 0xd1 });
        gbc.writeMem(0x7a4b, { 0xd3, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7a4d);
        EXPECT(gbc.pc(), 0x6f9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0262
        gbc.setState(0x11eb, 0x5f5b, 0xcef0, 0x485f, 0x9e68, 0xa2d4, 0x1, 0x1);
        gbc.writeMem(0x11eb, { 0xd1 });
        gbc.writeMem(0x5f5b, { 0x5, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5f5d);
        EXPECT(gbc.pc(), 0x11ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0263
        gbc.setState(0x7e4, 0x7330, 0xc7b0, 0xf584, 0x7691, 0xc1b2, 0x1, 0x0);
        gbc.writeMem(0x7e4, { 0xd1 });
        gbc.writeMem(0x7330, { 0xa5, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7332);
        EXPECT(gbc.pc(), 0x7e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0264
        gbc.setState(0xc6ec, 0x578b, 0x1ae0, 0x5d82, 0xd1ca, 0x5221, 0x1, 0x0);
        gbc.writeMem(0x578b, { 0x15, 0xe1 });
        gbc.writeMem(0xc6ec, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x578d);
        EXPECT(gbc.pc(), 0xc6ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ec), 0xd1);
        // D1 0265
        gbc.setState(0xa336, 0x2b92, 0xe120, 0xc2d2, 0x5ddb, 0x30de, 0x1, 0x0);
        gbc.writeMem(0x2b92, { 0x4a, 0x0 });
        gbc.writeMem(0xa336, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2b94);
        EXPECT(gbc.pc(), 0xa337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa336), 0xd1);
        // D1 0266
        gbc.setState(0x3f4d, 0x6b74, 0x5940, 0xe931, 0x1a4d, 0x5def, 0x0, 0x0);
        gbc.writeMem(0x3f4d, { 0xd1 });
        gbc.writeMem(0x6b74, { 0x72, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6b76);
        EXPECT(gbc.pc(), 0x3f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0267
        gbc.setState(0xdbde, 0x9191, 0xc870, 0xbc08, 0xeb0e, 0x92fb, 0x0, 0x1);
        gbc.writeMem(0x9191, { 0x79, 0x95 });
        gbc.writeMem(0xdbde, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9193);
        EXPECT(gbc.pc(), 0xdbdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9191), 0x79);
        EXPECT(gbc.readMem(0x9192), 0x95);
        EXPECT(gbc.readMem(0xdbde), 0xd1);
        // D1 0268
        gbc.setState(0xd0cc, 0x9311, 0x58e0, 0x1b6b, 0x9aa6, 0xfdd5, 0x0, 0x0);
        gbc.writeMem(0x9311, { 0x66, 0x9c });
        gbc.writeMem(0xd0cc, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9313);
        EXPECT(gbc.pc(), 0xd0cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9311), 0x66);
        EXPECT(gbc.readMem(0x9312), 0x9c);
        EXPECT(gbc.readMem(0xd0cc), 0xd1);
        // D1 0269
        gbc.setState(0x2e4, 0x5754, 0xaa20, 0x82e7, 0x6872, 0xc2fc, 0x1, 0x1);
        gbc.writeMem(0x2e4, { 0xd1 });
        gbc.writeMem(0x5754, { 0x73, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5756);
        EXPECT(gbc.pc(), 0x2e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 026A
        gbc.setState(0x3898, 0x5d88, 0xbd80, 0x4883, 0xfa68, 0xcfd5, 0x1, 0x1);
        gbc.writeMem(0x3898, { 0xd1 });
        gbc.writeMem(0x5d88, { 0x97, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5d8a);
        EXPECT(gbc.pc(), 0x3899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 026B
        gbc.setState(0xe2, 0xe6e9, 0x7830, 0xc41d, 0xeecd, 0xe9b2, 0x1, 0x0);
        gbc.writeMem(0xe2, { 0xd1 });
        gbc.writeMem(0xe6e9, { 0x80, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe6eb);
        EXPECT(gbc.pc(), 0xe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6e9), 0x80);
        EXPECT(gbc.readMem(0xe6ea), 0x66);
        // D1 026C
        gbc.setState(0x858e, 0xd82b, 0xc5e0, 0xb2c8, 0x3136, 0x6a81, 0x1, 0x1);
        gbc.writeMem(0x858e, { 0xd1 });
        gbc.writeMem(0xd82b, { 0xe2, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd82d);
        EXPECT(gbc.pc(), 0x858f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x858e), 0xd1);
        EXPECT(gbc.readMem(0xd82b), 0xe2);
        EXPECT(gbc.readMem(0xd82c), 0x13);
        // D1 026D
        gbc.setState(0x31eb, 0xc304, 0x43c0, 0x80f, 0x7e91, 0x445b, 0x0, 0x1);
        gbc.writeMem(0x31eb, { 0xd1 });
        gbc.writeMem(0xc304, { 0xd1, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc306);
        EXPECT(gbc.pc(), 0x31ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc304), 0xd1);
        EXPECT(gbc.readMem(0xc305), 0x8);
        // D1 026E
        gbc.setState(0xb0ed, 0xcfc5, 0x31a0, 0xe34b, 0xeebe, 0x1af1, 0x0, 0x1);
        gbc.writeMem(0xb0ed, { 0xd1 });
        gbc.writeMem(0xcfc5, { 0x3d, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcfc7);
        EXPECT(gbc.pc(), 0xb0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ed), 0xd1);
        EXPECT(gbc.readMem(0xcfc5), 0x3d);
        EXPECT(gbc.readMem(0xcfc6), 0xaf);
        // D1 026F
        gbc.setState(0x6d3d, 0x2447, 0x5780, 0xdf1e, 0xceb6, 0x3e08, 0x1, 0x1);
        gbc.writeMem(0x2447, { 0xf5, 0x21 });
        gbc.writeMem(0x6d3d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2449);
        EXPECT(gbc.pc(), 0x6d3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0270
        gbc.setState(0x6c82, 0xc9c1, 0x4490, 0xb064, 0xadec, 0x647f, 0x0, 0x1);
        gbc.writeMem(0x6c82, { 0xd1 });
        gbc.writeMem(0xc9c1, { 0xdd, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc9c3);
        EXPECT(gbc.pc(), 0x6c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c1), 0xdd);
        EXPECT(gbc.readMem(0xc9c2), 0xda);
        // D1 0271
        gbc.setState(0x976, 0x4126, 0xad00, 0x5fa3, 0x403a, 0x4dbc, 0x1, 0x1);
        gbc.writeMem(0x976, { 0xd1 });
        gbc.writeMem(0x4126, { 0x6, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4128);
        EXPECT(gbc.pc(), 0x977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0272
        gbc.setState(0x708d, 0x5dcc, 0x50c0, 0x7521, 0x806f, 0xef26, 0x1, 0x0);
        gbc.writeMem(0x5dcc, { 0xe6, 0x3a });
        gbc.writeMem(0x708d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5dce);
        EXPECT(gbc.pc(), 0x708e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0273
        gbc.setState(0x273e, 0x5c07, 0x4900, 0x2fce, 0x83b4, 0x7d36, 0x1, 0x0);
        gbc.writeMem(0x273e, { 0xd1 });
        gbc.writeMem(0x5c07, { 0xc2, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5c09);
        EXPECT(gbc.pc(), 0x273f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0274
        gbc.setState(0x754, 0xf115, 0x5730, 0xf775, 0x2ed5, 0xc35b, 0x0, 0x1);
        gbc.writeMem(0x754, { 0xd1 });
        gbc.writeMem(0xf115, { 0x7c, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf117);
        EXPECT(gbc.pc(), 0x755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf115), 0x7c);
        EXPECT(gbc.readMem(0xf116), 0x65);
        // D1 0275
        gbc.setState(0x3350, 0x9eb0, 0xa3a0, 0xb9c2, 0x6aea, 0x698b, 0x0, 0x1);
        gbc.writeMem(0x3350, { 0xd1 });
        gbc.writeMem(0x9eb0, { 0xd3, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9eb2);
        EXPECT(gbc.pc(), 0x3351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eb0), 0xd3);
        EXPECT(gbc.readMem(0x9eb1), 0xee);
        // D1 0276
        gbc.setState(0xbf92, 0xf6e7, 0x620, 0xc839, 0x25f2, 0xd643, 0x1, 0x1);
        gbc.writeMem(0xbf92, { 0xd1 });
        gbc.writeMem(0xf6e7, { 0x8a, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf6e9);
        EXPECT(gbc.pc(), 0xbf93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf92), 0xd1);
        EXPECT(gbc.readMem(0xf6e7), 0x8a);
        EXPECT(gbc.readMem(0xf6e8), 0xa6);
        // D1 0277
        gbc.setState(0x31b, 0x7d55, 0x7150, 0x2d9d, 0xd27a, 0x3687, 0x0, 0x0);
        gbc.writeMem(0x31b, { 0xd1 });
        gbc.writeMem(0x7d55, { 0xda, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7d57);
        EXPECT(gbc.pc(), 0x31c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0278
        gbc.setState(0xc6b4, 0x12e1, 0x2ad0, 0x712c, 0x8efc, 0xef79, 0x0, 0x0);
        gbc.writeMem(0x12e1, { 0x95, 0x69 });
        gbc.writeMem(0xc6b4, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x12e3);
        EXPECT(gbc.pc(), 0xc6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b4), 0xd1);
        // D1 0279
        gbc.setState(0xae92, 0x5b3b, 0x3410, 0xbcae, 0x2576, 0xc600, 0x0, 0x1);
        gbc.writeMem(0x5b3b, { 0xc9, 0x13 });
        gbc.writeMem(0xae92, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5b3d);
        EXPECT(gbc.pc(), 0xae93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae92), 0xd1);
        // D1 027A
        gbc.setState(0x1bfe, 0x94f7, 0x1cd0, 0xa421, 0x7c84, 0xd7a9, 0x0, 0x1);
        gbc.writeMem(0x1bfe, { 0xd1 });
        gbc.writeMem(0x94f7, { 0xd1, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x94f9);
        EXPECT(gbc.pc(), 0x1bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f7), 0xd1);
        EXPECT(gbc.readMem(0x94f8), 0x81);
        // D1 027B
        gbc.setState(0x4bf0, 0xe4e6, 0x4fe0, 0x6162, 0x1dca, 0x4359, 0x0, 0x0);
        gbc.writeMem(0x4bf0, { 0xd1 });
        gbc.writeMem(0xe4e6, { 0xf2, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe4e8);
        EXPECT(gbc.pc(), 0x4bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e6), 0xf2);
        EXPECT(gbc.readMem(0xe4e7), 0x90);
        // D1 027C
        gbc.setState(0xaebc, 0x6ec0, 0xa2d0, 0x33e8, 0x30c8, 0x8e6d, 0x1, 0x0);
        gbc.writeMem(0x6ec0, { 0xa, 0x3a });
        gbc.writeMem(0xaebc, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6ec2);
        EXPECT(gbc.pc(), 0xaebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaebc), 0xd1);
        // D1 027D
        gbc.setState(0xdf0f, 0x4328, 0x4430, 0xa637, 0xa909, 0x83ef, 0x1, 0x1);
        gbc.writeMem(0x4328, { 0x76, 0x8b });
        gbc.writeMem(0xdf0f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x432a);
        EXPECT(gbc.pc(), 0xdf10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0f), 0xd1);
        // D1 027E
        gbc.setState(0xcf94, 0x2c0, 0x5f50, 0x3d35, 0x2295, 0xd045, 0x1, 0x0);
        gbc.writeMem(0x2c0, { 0x36, 0x9 });
        gbc.writeMem(0xcf94, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2c2);
        EXPECT(gbc.pc(), 0xcf95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf94), 0xd1);
        // D1 027F
        gbc.setState(0x60cc, 0xe480, 0x3e10, 0x2ab2, 0x72d9, 0xc604, 0x1, 0x0);
        gbc.writeMem(0x60cc, { 0xd1 });
        gbc.writeMem(0xe480, { 0xfa, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe482);
        EXPECT(gbc.pc(), 0x60cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe480), 0xfa);
        EXPECT(gbc.readMem(0xe481), 0xab);
        // D1 0280
        gbc.setState(0xbe8d, 0xfd39, 0x28a0, 0x9347, 0x812c, 0xecd9, 0x1, 0x1);
        gbc.writeMem(0xbe8d, { 0xd1 });
        gbc.writeMem(0xfd39, { 0x64, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfd3b);
        EXPECT(gbc.pc(), 0xbe8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8d), 0xd1);
        EXPECT(gbc.readMem(0xfd39), 0x64);
        EXPECT(gbc.readMem(0xfd3a), 0x9);
        // D1 0281
        gbc.setState(0x8ac3, 0x47ff, 0x17d0, 0x8615, 0x9cb6, 0xdecf, 0x0, 0x0);
        gbc.writeMem(0x47ff, { 0x72, 0x78 });
        gbc.writeMem(0x8ac3, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4801);
        EXPECT(gbc.pc(), 0x8ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac3), 0xd1);
        // D1 0282
        gbc.setState(0x7822, 0x9263, 0xdfa0, 0x98e5, 0x7ea4, 0xb37a, 0x0, 0x1);
        gbc.writeMem(0x7822, { 0xd1 });
        gbc.writeMem(0x9263, { 0x2a, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9265);
        EXPECT(gbc.pc(), 0x7823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9263), 0x2a);
        EXPECT(gbc.readMem(0x9264), 0x3b);
        // D1 0283
        gbc.setState(0x20f0, 0xc460, 0x9a80, 0x6718, 0x1734, 0xa72d, 0x1, 0x0);
        gbc.writeMem(0x20f0, { 0xd1 });
        gbc.writeMem(0xc460, { 0xed, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc462);
        EXPECT(gbc.pc(), 0x20f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc460), 0xed);
        EXPECT(gbc.readMem(0xc461), 0x1c);
        // D1 0284
        gbc.setState(0x4938, 0xb986, 0x5db0, 0x700e, 0xbc71, 0x5e52, 0x0, 0x1);
        gbc.writeMem(0x4938, { 0xd1 });
        gbc.writeMem(0xb986, { 0x96, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb988);
        EXPECT(gbc.pc(), 0x4939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb986), 0x96);
        EXPECT(gbc.readMem(0xb987), 0x2);
        // D1 0285
        gbc.setState(0xefa, 0x54bd, 0xd1c0, 0xad8e, 0xdb4c, 0xc7cb, 0x1, 0x0);
        gbc.writeMem(0xefa, { 0xd1 });
        gbc.writeMem(0x54bd, { 0x62, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x54bf);
        EXPECT(gbc.pc(), 0xefb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0286
        gbc.setState(0x460c, 0x1c92, 0xb210, 0xf4b, 0x4de, 0x3205, 0x0, 0x0);
        gbc.writeMem(0x1c92, { 0x35, 0xaf });
        gbc.writeMem(0x460c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1c94);
        EXPECT(gbc.pc(), 0x460d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0287
        gbc.setState(0xd0f9, 0x1433, 0x4bd0, 0x5cf0, 0x3afa, 0x9d61, 0x1, 0x0);
        gbc.writeMem(0x1433, { 0x3, 0xc8 });
        gbc.writeMem(0xd0f9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1435);
        EXPECT(gbc.pc(), 0xd0fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f9), 0xd1);
        // D1 0288
        gbc.setState(0x9375, 0x306e, 0xc140, 0xb0a2, 0xc563, 0x9ded, 0x0, 0x1);
        gbc.writeMem(0x306e, { 0x91, 0x16 });
        gbc.writeMem(0x9375, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3070);
        EXPECT(gbc.pc(), 0x9376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9375), 0xd1);
        // D1 0289
        gbc.setState(0x8449, 0x3903, 0x2be0, 0xb644, 0x3073, 0x51e2, 0x1, 0x1);
        gbc.writeMem(0x3903, { 0x32, 0x18 });
        gbc.writeMem(0x8449, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3905);
        EXPECT(gbc.pc(), 0x844a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8449), 0xd1);
        // D1 028A
        gbc.setState(0xde21, 0xbab7, 0x5610, 0x92d9, 0xb7ce, 0xaef9, 0x1, 0x0);
        gbc.writeMem(0xbab7, { 0xb0, 0x77 });
        gbc.writeMem(0xde21, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbab9);
        EXPECT(gbc.pc(), 0xde22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab7), 0xb0);
        EXPECT(gbc.readMem(0xbab8), 0x77);
        EXPECT(gbc.readMem(0xde21), 0xd1);
        // D1 028B
        gbc.setState(0x1505, 0x3025, 0x28f0, 0x727d, 0x3a37, 0x554, 0x1, 0x0);
        gbc.writeMem(0x1505, { 0xd1 });
        gbc.writeMem(0x3025, { 0x68, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3027);
        EXPECT(gbc.pc(), 0x1506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 028C
        gbc.setState(0xbe9, 0xfb6b, 0x9b40, 0x8309, 0xa944, 0x35d4, 0x0, 0x0);
        gbc.writeMem(0xbe9, { 0xd1 });
        gbc.writeMem(0xfb6b, { 0xc3, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfb6d);
        EXPECT(gbc.pc(), 0xbea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb6b), 0xc3);
        EXPECT(gbc.readMem(0xfb6c), 0x11);
        // D1 028E
        gbc.setState(0x150d, 0x4da9, 0x6290, 0x7d00, 0xb4c0, 0xcfa0, 0x0, 0x0);
        gbc.writeMem(0x150d, { 0xd1 });
        gbc.writeMem(0x4da9, { 0xa6, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4dab);
        EXPECT(gbc.pc(), 0x150e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 028F
        gbc.setState(0xcd3e, 0x4f8, 0xc220, 0x4bd5, 0xfb07, 0x58de, 0x0, 0x0);
        gbc.writeMem(0x4f8, { 0xc0, 0x50 });
        gbc.writeMem(0xcd3e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4fa);
        EXPECT(gbc.pc(), 0xcd3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3e), 0xd1);
        // D1 0290
        gbc.setState(0x1f5a, 0x5b32, 0xee50, 0x4834, 0xb684, 0x4e90, 0x1, 0x1);
        gbc.writeMem(0x1f5a, { 0xd1 });
        gbc.writeMem(0x5b32, { 0xa8, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5b34);
        EXPECT(gbc.pc(), 0x1f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0291
        gbc.setState(0x5122, 0xc9bb, 0x2820, 0xedd5, 0xdb68, 0xbad4, 0x0, 0x1);
        gbc.writeMem(0x5122, { 0xd1 });
        gbc.writeMem(0xc9bb, { 0x33, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc9bd);
        EXPECT(gbc.pc(), 0x5123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9bb), 0x33);
        EXPECT(gbc.readMem(0xc9bc), 0xe6);
        // D1 0292
        gbc.setState(0xbbf8, 0x8650, 0x7a50, 0x8189, 0x1b8f, 0x90b, 0x1, 0x0);
        gbc.writeMem(0x8650, { 0x92, 0x55 });
        gbc.writeMem(0xbbf8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8652);
        EXPECT(gbc.pc(), 0xbbf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8650), 0x92);
        EXPECT(gbc.readMem(0x8651), 0x55);
        EXPECT(gbc.readMem(0xbbf8), 0xd1);
        // D1 0293
        gbc.setState(0x24a2, 0x3e16, 0xd2d0, 0x9cd0, 0x8de1, 0x8a63, 0x1, 0x0);
        gbc.writeMem(0x24a2, { 0xd1 });
        gbc.writeMem(0x3e16, { 0x57, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3e18);
        EXPECT(gbc.pc(), 0x24a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0294
        gbc.setState(0xc623, 0x6982, 0x3ee0, 0x9962, 0xa810, 0x7fc0, 0x0, 0x1);
        gbc.writeMem(0x6982, { 0x10, 0xaf });
        gbc.writeMem(0xc623, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6984);
        EXPECT(gbc.pc(), 0xc624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc623), 0xd1);
        // D1 0295
        gbc.setState(0xd37c, 0xfd8f, 0xfc30, 0x9c70, 0x57ba, 0xa7af, 0x1, 0x1);
        gbc.writeMem(0xd37c, { 0xd1 });
        gbc.writeMem(0xfd8f, { 0xe2, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfd91);
        EXPECT(gbc.pc(), 0xd37d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd37c), 0xd1);
        EXPECT(gbc.readMem(0xfd8f), 0xe2);
        EXPECT(gbc.readMem(0xfd90), 0xbc);
        // D1 0296
        gbc.setState(0x5fb8, 0xd6d6, 0x4220, 0xa406, 0xf6c2, 0xcad2, 0x0, 0x1);
        gbc.writeMem(0x5fb8, { 0xd1 });
        gbc.writeMem(0xd6d6, { 0x73, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd6d8);
        EXPECT(gbc.pc(), 0x5fb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d6), 0x73);
        EXPECT(gbc.readMem(0xd6d7), 0xf5);
        // D1 0297
        gbc.setState(0x7bde, 0xb7f7, 0xc2d0, 0x52af, 0xcadd, 0xf971, 0x1, 0x1);
        gbc.writeMem(0x7bde, { 0xd1 });
        gbc.writeMem(0xb7f7, { 0x96, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb7f9);
        EXPECT(gbc.pc(), 0x7bdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f7), 0x96);
        EXPECT(gbc.readMem(0xb7f8), 0xa0);
        // D1 0298
        gbc.setState(0x8d34, 0x376b, 0x4e80, 0x7c9e, 0xc0c3, 0x659f, 0x0, 0x1);
        gbc.writeMem(0x376b, { 0xa8, 0xd0 });
        gbc.writeMem(0x8d34, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x376d);
        EXPECT(gbc.pc(), 0x8d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d34), 0xd1);
        // D1 0299
        gbc.setState(0xb2d2, 0x1830, 0x97e0, 0xe788, 0xf617, 0x5db7, 0x1, 0x0);
        gbc.writeMem(0x1830, { 0xad, 0x52 });
        gbc.writeMem(0xb2d2, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1832);
        EXPECT(gbc.pc(), 0xb2d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2d2), 0xd1);
        // D1 029A
        gbc.setState(0x2931, 0x7bbd, 0xbbe0, 0x404d, 0x88ab, 0xa0e7, 0x0, 0x0);
        gbc.writeMem(0x2931, { 0xd1 });
        gbc.writeMem(0x7bbd, { 0x96, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7bbf);
        EXPECT(gbc.pc(), 0x2932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 029B
        gbc.setState(0xed9d, 0x155e, 0x6a40, 0xff14, 0xfd6, 0xefca, 0x0, 0x0);
        gbc.writeMem(0x155e, { 0xc, 0x39 });
        gbc.writeMem(0xed9d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1560);
        EXPECT(gbc.pc(), 0xed9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed9d), 0xd1);
        // D1 029C
        gbc.setState(0x864d, 0x4930, 0xcca0, 0x4f93, 0xc757, 0x3370, 0x1, 0x0);
        gbc.writeMem(0x4930, { 0x90, 0xfb });
        gbc.writeMem(0x864d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4932);
        EXPECT(gbc.pc(), 0x864e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x864d), 0xd1);
        // D1 029D
        gbc.setState(0x5922, 0x791e, 0xee50, 0xedff, 0xec2, 0xd07, 0x0, 0x0);
        gbc.writeMem(0x5922, { 0xd1 });
        gbc.writeMem(0x791e, { 0xe6, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7920);
        EXPECT(gbc.pc(), 0x5923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 029E
        gbc.setState(0x5083, 0xb0ca, 0xbac0, 0x368f, 0x1c19, 0x509d, 0x1, 0x1);
        gbc.writeMem(0x5083, { 0xd1 });
        gbc.writeMem(0xb0ca, { 0xd0, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb0cc);
        EXPECT(gbc.pc(), 0x5084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ca), 0xd0);
        EXPECT(gbc.readMem(0xb0cb), 0x38);
        // D1 029F
        gbc.setState(0xbeef, 0x6433, 0x2070, 0xf1a8, 0x94ff, 0x5e1c, 0x1, 0x0);
        gbc.writeMem(0x6433, { 0xad, 0xf4 });
        gbc.writeMem(0xbeef, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6435);
        EXPECT(gbc.pc(), 0xbef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeef), 0xd1);
        // D1 02A0
        gbc.setState(0xadaf, 0x4b98, 0xfef0, 0x3e9e, 0x4d56, 0xf56d, 0x0, 0x1);
        gbc.writeMem(0x4b98, { 0x92, 0xc6 });
        gbc.writeMem(0xadaf, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4b9a);
        EXPECT(gbc.pc(), 0xadb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadaf), 0xd1);
        // D1 02A1
        gbc.setState(0xa8a3, 0x23f1, 0xad60, 0x78a8, 0x7ff1, 0x5a9f, 0x1, 0x1);
        gbc.writeMem(0x23f1, { 0x32, 0x8 });
        gbc.writeMem(0xa8a3, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x23f3);
        EXPECT(gbc.pc(), 0xa8a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a3), 0xd1);
        // D1 02A2
        gbc.setState(0x9be7, 0xa291, 0xea70, 0xf18d, 0xcc4a, 0x71dc, 0x0, 0x0);
        gbc.writeMem(0x9be7, { 0xd1 });
        gbc.writeMem(0xa291, { 0xd, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa293);
        EXPECT(gbc.pc(), 0x9be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9be7), 0xd1);
        EXPECT(gbc.readMem(0xa291), 0xd);
        EXPECT(gbc.readMem(0xa292), 0x3a);
        // D1 02A3
        gbc.setState(0xafcf, 0x8694, 0xd950, 0xe8f3, 0xe0cf, 0x8c72, 0x1, 0x1);
        gbc.writeMem(0x8694, { 0xd, 0x51 });
        gbc.writeMem(0xafcf, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8696);
        EXPECT(gbc.pc(), 0xafd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8694), 0xd);
        EXPECT(gbc.readMem(0x8695), 0x51);
        EXPECT(gbc.readMem(0xafcf), 0xd1);
        // D1 02A4
        gbc.setState(0x88fc, 0x2513, 0x6f50, 0xa52a, 0xcbc9, 0x2d94, 0x0, 0x1);
        gbc.writeMem(0x2513, { 0x7d, 0x37 });
        gbc.writeMem(0x88fc, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2515);
        EXPECT(gbc.pc(), 0x88fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88fc), 0xd1);
        // D1 02A5
        gbc.setState(0x70b0, 0xecac, 0x7990, 0xae4e, 0x255, 0xec29, 0x1, 0x0);
        gbc.writeMem(0x70b0, { 0xd1 });
        gbc.writeMem(0xecac, { 0x82, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xecae);
        EXPECT(gbc.pc(), 0x70b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecac), 0x82);
        EXPECT(gbc.readMem(0xecad), 0x2b);
        // D1 02A6
        gbc.setState(0xa80d, 0x2875, 0x7080, 0x45a4, 0xe4c8, 0xa9f4, 0x0, 0x0);
        gbc.writeMem(0x2875, { 0xd9, 0x24 });
        gbc.writeMem(0xa80d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2877);
        EXPECT(gbc.pc(), 0xa80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa80d), 0xd1);
        // D1 02A8
        gbc.setState(0x3446, 0x5d35, 0x7020, 0x6b76, 0x2b6f, 0xe0b9, 0x1, 0x1);
        gbc.writeMem(0x3446, { 0xd1 });
        gbc.writeMem(0x5d35, { 0x20, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5d37);
        EXPECT(gbc.pc(), 0x3447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 02A9
        gbc.setState(0xcbcf, 0x6de4, 0x2e20, 0xf844, 0x55c, 0xfa8f, 0x1, 0x0);
        gbc.writeMem(0x6de4, { 0x6c, 0x42 });
        gbc.writeMem(0xcbcf, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6de6);
        EXPECT(gbc.pc(), 0xcbd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbcf), 0xd1);
        // D1 02AB
        gbc.setState(0x8d02, 0x36f0, 0x42f0, 0x787f, 0x58d8, 0x6f, 0x1, 0x1);
        gbc.writeMem(0x36f0, { 0xc9, 0xc6 });
        gbc.writeMem(0x8d02, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x36f2);
        EXPECT(gbc.pc(), 0x8d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d02), 0xd1);
        // D1 02AC
        gbc.setState(0x322e, 0x4471, 0xa1d0, 0xdaa0, 0x860c, 0x16b, 0x0, 0x1);
        gbc.writeMem(0x322e, { 0xd1 });
        gbc.writeMem(0x4471, { 0xa0, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4473);
        EXPECT(gbc.pc(), 0x322f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 02AD
        gbc.setState(0xcd46, 0x37a, 0x1260, 0xfdae, 0xa452, 0xe508, 0x1, 0x0);
        gbc.writeMem(0x37a, { 0x56, 0x16 });
        gbc.writeMem(0xcd46, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x37c);
        EXPECT(gbc.pc(), 0xcd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd46), 0xd1);
        // D1 02AE
        gbc.setState(0xb04, 0x935d, 0xfa10, 0xbe30, 0x31c9, 0x992e, 0x0, 0x0);
        gbc.writeMem(0xb04, { 0xd1 });
        gbc.writeMem(0x935d, { 0xa7, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x935f);
        EXPECT(gbc.pc(), 0xb05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x935d), 0xa7);
        EXPECT(gbc.readMem(0x935e), 0x6e);
        // D1 02AF
        gbc.setState(0xa61, 0x9ff7, 0x8c40, 0xe2ea, 0xd064, 0x9ac5, 0x1, 0x1);
        gbc.writeMem(0xa61, { 0xd1 });
        gbc.writeMem(0x9ff7, { 0xdf, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9ff9);
        EXPECT(gbc.pc(), 0xa62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ff7), 0xdf);
        EXPECT(gbc.readMem(0x9ff8), 0x9);
        // D1 02B1
        gbc.setState(0x8232, 0x3b58, 0xf2c0, 0x59de, 0x9b18, 0xba68, 0x1, 0x1);
        gbc.writeMem(0x3b58, { 0x73, 0xc7 });
        gbc.writeMem(0x8232, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3b5a);
        EXPECT(gbc.pc(), 0x8233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8232), 0xd1);
        // D1 02B2
        gbc.setState(0x910b, 0x346a, 0xbcc0, 0x44d1, 0x54a7, 0xa4a9, 0x1, 0x0);
        gbc.writeMem(0x346a, { 0xa8, 0x62 });
        gbc.writeMem(0x910b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x346c);
        EXPECT(gbc.pc(), 0x910c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x910b), 0xd1);
        // D1 02B3
        gbc.setState(0x66bc, 0x62ae, 0xcd40, 0xeed6, 0x8bd9, 0xf098, 0x0, 0x1);
        gbc.writeMem(0x62ae, { 0x68, 0xf5 });
        gbc.writeMem(0x66bc, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x62b0);
        EXPECT(gbc.pc(), 0x66bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 02B4
        gbc.setState(0x5500, 0x98ca, 0x2b50, 0x70cc, 0x6934, 0xc77b, 0x0, 0x0);
        gbc.writeMem(0x5500, { 0xd1 });
        gbc.writeMem(0x98ca, { 0x45, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x98cc);
        EXPECT(gbc.pc(), 0x5501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ca), 0x45);
        EXPECT(gbc.readMem(0x98cb), 0xb5);
        // D1 02B5
        gbc.setState(0x8c1f, 0xb9e6, 0xc2b0, 0xe820, 0xbf86, 0x920, 0x1, 0x0);
        gbc.writeMem(0x8c1f, { 0xd1 });
        gbc.writeMem(0xb9e6, { 0x19, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb9e8);
        EXPECT(gbc.pc(), 0x8c20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1f), 0xd1);
        EXPECT(gbc.readMem(0xb9e6), 0x19);
        EXPECT(gbc.readMem(0xb9e7), 0xb6);
        // D1 02B6
        gbc.setState(0x4dd6, 0xfb86, 0xfcb0, 0x88d1, 0x701f, 0xf5de, 0x0, 0x0);
        gbc.writeMem(0x4dd6, { 0xd1 });
        gbc.writeMem(0xfb86, { 0xdf, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfb88);
        EXPECT(gbc.pc(), 0x4dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb86), 0xdf);
        EXPECT(gbc.readMem(0xfb87), 0x17);
        // D1 02B7
        gbc.setState(0xae05, 0xfd05, 0x2b0, 0x7c5, 0x9f74, 0x2d6b, 0x1, 0x0);
        gbc.writeMem(0xae05, { 0xd1 });
        gbc.writeMem(0xfd05, { 0x25, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfd07);
        EXPECT(gbc.pc(), 0xae06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae05), 0xd1);
        EXPECT(gbc.readMem(0xfd05), 0x25);
        EXPECT(gbc.readMem(0xfd06), 0xeb);
        // D1 02B8
        gbc.setState(0x185c, 0x3977, 0xd610, 0xec25, 0x76fc, 0x2a9e, 0x0, 0x1);
        gbc.writeMem(0x185c, { 0xd1 });
        gbc.writeMem(0x3977, { 0x6a, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3979);
        EXPECT(gbc.pc(), 0x185d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 02B9
        gbc.setState(0x46bf, 0x1e7f, 0x2150, 0x935b, 0x9a72, 0x4305, 0x0, 0x1);
        gbc.writeMem(0x1e7f, { 0x7b, 0x12 });
        gbc.writeMem(0x46bf, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1e81);
        EXPECT(gbc.pc(), 0x46c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 02BA
        gbc.setState(0xaee3, 0xe2d, 0x57a0, 0xc14b, 0xd251, 0xcc57, 0x1, 0x0);
        gbc.writeMem(0xe2d, { 0x49, 0x6a });
        gbc.writeMem(0xaee3, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe2f);
        EXPECT(gbc.pc(), 0xaee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee3), 0xd1);
        // D1 02BB
        gbc.setState(0x2ba, 0x3ca4, 0xdaf0, 0x8e00, 0x97bd, 0x4e12, 0x0, 0x0);
        gbc.writeMem(0x2ba, { 0xd1 });
        gbc.writeMem(0x3ca4, { 0x74, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3ca6);
        EXPECT(gbc.pc(), 0x2bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 02BC
        gbc.setState(0x55a6, 0xd4b5, 0x95d0, 0x9dec, 0x4743, 0xe683, 0x0, 0x1);
        gbc.writeMem(0x55a6, { 0xd1 });
        gbc.writeMem(0xd4b5, { 0x57, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd4b7);
        EXPECT(gbc.pc(), 0x55a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4b5), 0x57);
        EXPECT(gbc.readMem(0xd4b6), 0x77);
        // D1 02BD
        gbc.setState(0xb1de, 0x6f6, 0x5cb0, 0x2c70, 0xbd87, 0xe955, 0x0, 0x0);
        gbc.writeMem(0x6f6, { 0xf, 0x54 });
        gbc.writeMem(0xb1de, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6f8);
        EXPECT(gbc.pc(), 0xb1df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1de), 0xd1);
        // D1 02BE
        gbc.setState(0xbffe, 0x7e6d, 0x8a90, 0xa682, 0xae40, 0xe6ea, 0x0, 0x1);
        gbc.writeMem(0x7e6d, { 0xbb, 0xa });
        gbc.writeMem(0xbffe, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7e6f);
        EXPECT(gbc.pc(), 0xbfff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbffe), 0xd1);
        // D1 02BF
        gbc.setState(0x3888, 0xc661, 0x3b40, 0xb5b9, 0x1827, 0x72ee, 0x1, 0x1);
        gbc.writeMem(0x3888, { 0xd1 });
        gbc.writeMem(0xc661, { 0x12, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc663);
        EXPECT(gbc.pc(), 0x3889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc661), 0x12);
        EXPECT(gbc.readMem(0xc662), 0xb3);
        // D1 02C0
        gbc.setState(0xd994, 0xbdd0, 0x41b0, 0x239c, 0x95d2, 0x9879, 0x0, 0x0);
        gbc.writeMem(0xbdd0, { 0x73, 0x5 });
        gbc.writeMem(0xd994, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbdd2);
        EXPECT(gbc.pc(), 0xd995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd0), 0x73);
        EXPECT(gbc.readMem(0xbdd1), 0x5);
        EXPECT(gbc.readMem(0xd994), 0xd1);
        // D1 02C1
        gbc.setState(0xc9a6, 0x5336, 0x10e0, 0xaa3f, 0x9ea0, 0xdac1, 0x1, 0x0);
        gbc.writeMem(0x5336, { 0x3f, 0x72 });
        gbc.writeMem(0xc9a6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5338);
        EXPECT(gbc.pc(), 0xc9a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a6), 0xd1);
        // D1 02C2
        gbc.setState(0xda20, 0x11f7, 0xe010, 0x49fc, 0xef55, 0xb7a3, 0x1, 0x1);
        gbc.writeMem(0x11f7, { 0x9c, 0x23 });
        gbc.writeMem(0xda20, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x11f9);
        EXPECT(gbc.pc(), 0xda21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda20), 0xd1);
        // D1 02C3
        gbc.setState(0x7a0b, 0x6f1b, 0xa470, 0x49fb, 0xb16f, 0x3b63, 0x0, 0x1);
        gbc.writeMem(0x6f1b, { 0xb6, 0x90 });
        gbc.writeMem(0x7a0b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6f1d);
        EXPECT(gbc.pc(), 0x7a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 02C4
        gbc.setState(0xb6be, 0x8dd8, 0x3050, 0xce5b, 0xec38, 0x4969, 0x0, 0x0);
        gbc.writeMem(0x8dd8, { 0x55, 0xe0 });
        gbc.writeMem(0xb6be, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8dda);
        EXPECT(gbc.pc(), 0xb6bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dd8), 0x55);
        EXPECT(gbc.readMem(0x8dd9), 0xe0);
        EXPECT(gbc.readMem(0xb6be), 0xd1);
        // D1 02C5
        gbc.setState(0xa95f, 0x9779, 0xe780, 0xfe0a, 0xdbfb, 0xf9fc, 0x0, 0x1);
        gbc.writeMem(0x9779, { 0xf2, 0x24 });
        gbc.writeMem(0xa95f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x977b);
        EXPECT(gbc.pc(), 0xa960);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9779), 0xf2);
        EXPECT(gbc.readMem(0x977a), 0x24);
        EXPECT(gbc.readMem(0xa95f), 0xd1);
        // D1 02C6
        gbc.setState(0x9e46, 0xd6c, 0x2770, 0x5f98, 0xece7, 0xfc49, 0x0, 0x0);
        gbc.writeMem(0xd6c, { 0xec, 0xe7 });
        gbc.writeMem(0x9e46, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd6e);
        EXPECT(gbc.pc(), 0x9e47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e46), 0xd1);
        // D1 02C7
        gbc.setState(0x843a, 0x3d10, 0xbde0, 0x614, 0xc615, 0x3bb0, 0x1, 0x1);
        gbc.writeMem(0x3d10, { 0x37, 0xd });
        gbc.writeMem(0x843a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3d12);
        EXPECT(gbc.pc(), 0x843b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x843a), 0xd1);
        // D1 02C8
        gbc.setState(0xf30, 0xd4b2, 0x26d0, 0xa9b5, 0xa8f7, 0x7101, 0x0, 0x1);
        gbc.writeMem(0xf30, { 0xd1 });
        gbc.writeMem(0xd4b2, { 0xc5, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd4b4);
        EXPECT(gbc.pc(), 0xf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4b2), 0xc5);
        EXPECT(gbc.readMem(0xd4b3), 0x33);
        // D1 02C9
        gbc.setState(0xad02, 0xb681, 0x7b0, 0x837b, 0x8c07, 0xdb97, 0x0, 0x1);
        gbc.writeMem(0xad02, { 0xd1 });
        gbc.writeMem(0xb681, { 0xc3, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb683);
        EXPECT(gbc.pc(), 0xad03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad02), 0xd1);
        EXPECT(gbc.readMem(0xb681), 0xc3);
        EXPECT(gbc.readMem(0xb682), 0x31);
        // D1 02CA
        gbc.setState(0x69fe, 0xb00, 0x4c70, 0x21d6, 0x2db, 0x1f10, 0x1, 0x0);
        gbc.writeMem(0xb00, { 0x61, 0xb5 });
        gbc.writeMem(0x69fe, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb02);
        EXPECT(gbc.pc(), 0x69ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 02CB
        gbc.setState(0x5456, 0xdb09, 0xe810, 0x9700, 0x8889, 0xcb4c, 0x1, 0x1);
        gbc.writeMem(0x5456, { 0xd1 });
        gbc.writeMem(0xdb09, { 0x4, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdb0b);
        EXPECT(gbc.pc(), 0x5457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb09), 0x4);
        EXPECT(gbc.readMem(0xdb0a), 0x81);
        // D1 02CC
        gbc.setState(0x1dee, 0x5679, 0xfbb0, 0x3a93, 0xd52a, 0x41c6, 0x1, 0x0);
        gbc.writeMem(0x1dee, { 0xd1 });
        gbc.writeMem(0x5679, { 0x93, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x567b);
        EXPECT(gbc.pc(), 0x1def);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 02CD
        gbc.setState(0x515e, 0x4c7, 0x7100, 0x5782, 0x3b68, 0x7cde, 0x0, 0x1);
        gbc.writeMem(0x4c7, { 0xf0, 0xb1 });
        gbc.writeMem(0x515e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4c9);
        EXPECT(gbc.pc(), 0x515f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 02CE
        gbc.setState(0x56aa, 0xc7f9, 0xf8f0, 0x499d, 0x5198, 0x1669, 0x1, 0x0);
        gbc.writeMem(0x56aa, { 0xd1 });
        gbc.writeMem(0xc7f9, { 0xbd, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc7fb);
        EXPECT(gbc.pc(), 0x56ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7f9), 0xbd);
        EXPECT(gbc.readMem(0xc7fa), 0x2);
        // D1 02CF
        gbc.setState(0x4632, 0xd086, 0xf8e0, 0x4aed, 0x3ae9, 0xc821, 0x1, 0x0);
        gbc.writeMem(0x4632, { 0xd1 });
        gbc.writeMem(0xd086, { 0x4d, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd088);
        EXPECT(gbc.pc(), 0x4633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd086), 0x4d);
        EXPECT(gbc.readMem(0xd087), 0xf4);
        // D1 02D1
        gbc.setState(0xa2ee, 0x69c1, 0xfb80, 0xf69c, 0x21a1, 0x71b1, 0x0, 0x0);
        gbc.writeMem(0x69c1, { 0xe0, 0x4f });
        gbc.writeMem(0xa2ee, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x69c3);
        EXPECT(gbc.pc(), 0xa2ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ee), 0xd1);
        // D1 02D2
        gbc.setState(0xc45d, 0xfe5a, 0x7fb0, 0xc4f2, 0xc0bc, 0xbfd7, 0x0, 0x0);
        gbc.writeMem(0xc45d, { 0xd1 });
        gbc.writeMem(0xfe5a, { 0xfd, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xfe5c);
        EXPECT(gbc.pc(), 0xc45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45d), 0xd1);
        EXPECT(gbc.readMem(0xfe5a), 0xfd);
        EXPECT(gbc.readMem(0xfe5b), 0xde);
        // D1 02D4
        gbc.setState(0xee0e, 0x4806, 0xadf0, 0xf5b6, 0x7b3d, 0xe4a2, 0x1, 0x0);
        gbc.writeMem(0x4806, { 0xb0, 0xfd });
        gbc.writeMem(0xee0e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4808);
        EXPECT(gbc.pc(), 0xee0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee0e), 0xd1);
        // D1 02D5
        gbc.setState(0x3ca4, 0x91ee, 0xc710, 0x44bb, 0xa76e, 0xac2a, 0x1, 0x0);
        gbc.writeMem(0x3ca4, { 0xd1 });
        gbc.writeMem(0x91ee, { 0xca, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x91f0);
        EXPECT(gbc.pc(), 0x3ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ee), 0xca);
        EXPECT(gbc.readMem(0x91ef), 0x36);
        // D1 02D6
        gbc.setState(0xaa18, 0x5a77, 0x8f30, 0x6c6c, 0x2a7c, 0x6fff, 0x1, 0x1);
        gbc.writeMem(0x5a77, { 0x8c, 0xee });
        gbc.writeMem(0xaa18, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5a79);
        EXPECT(gbc.pc(), 0xaa19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa18), 0xd1);
        // D1 02D7
        gbc.setState(0x9ed7, 0x7532, 0x8bf0, 0xea88, 0x93be, 0xc11, 0x1, 0x0);
        gbc.writeMem(0x7532, { 0x3b, 0xa });
        gbc.writeMem(0x9ed7, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7534);
        EXPECT(gbc.pc(), 0x9ed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ed7), 0xd1);
        // D1 02D8
        gbc.setState(0xbe77, 0xb3b8, 0x96e0, 0x5bc1, 0xf0f5, 0x18ce, 0x0, 0x0);
        gbc.writeMem(0xb3b8, { 0x2a, 0xb6 });
        gbc.writeMem(0xbe77, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb3ba);
        EXPECT(gbc.pc(), 0xbe78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3b8), 0x2a);
        EXPECT(gbc.readMem(0xb3b9), 0xb6);
        EXPECT(gbc.readMem(0xbe77), 0xd1);
        // D1 02D9
        gbc.setState(0xe954, 0xcac5, 0xfe50, 0xb259, 0x1912, 0xd14b, 0x0, 0x0);
        gbc.writeMem(0xcac5, { 0x9b, 0xd6 });
        gbc.writeMem(0xe954, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xcac7);
        EXPECT(gbc.pc(), 0xe955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac5), 0x9b);
        EXPECT(gbc.readMem(0xcac6), 0xd6);
        EXPECT(gbc.readMem(0xe954), 0xd1);
        // D1 02DA
        gbc.setState(0x6a6c, 0x4f9c, 0x450, 0x108c, 0x5fca, 0x8aad, 0x0, 0x1);
        gbc.writeMem(0x4f9c, { 0xbe, 0x16 });
        gbc.writeMem(0x6a6c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4f9e);
        EXPECT(gbc.pc(), 0x6a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 02DB
        gbc.setState(0xbf41, 0xe4a9, 0x5a90, 0x940c, 0x995f, 0xa71c, 0x1, 0x1);
        gbc.writeMem(0xbf41, { 0xd1 });
        gbc.writeMem(0xe4a9, { 0x9f, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe4ab);
        EXPECT(gbc.pc(), 0xbf42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf41), 0xd1);
        EXPECT(gbc.readMem(0xe4a9), 0x9f);
        EXPECT(gbc.readMem(0xe4aa), 0x9b);
        // D1 02DC
        gbc.setState(0x1c61, 0xec80, 0xf850, 0xab65, 0x17ef, 0xb635, 0x1, 0x1);
        gbc.writeMem(0x1c61, { 0xd1 });
        gbc.writeMem(0xec80, { 0xd0, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xec82);
        EXPECT(gbc.pc(), 0x1c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec80), 0xd0);
        EXPECT(gbc.readMem(0xec81), 0x2c);
        // D1 02DD
        gbc.setState(0xb80a, 0xaef7, 0x8850, 0x3632, 0x178, 0x53f8, 0x0, 0x0);
        gbc.writeMem(0xaef7, { 0x42, 0xd3 });
        gbc.writeMem(0xb80a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xaef9);
        EXPECT(gbc.pc(), 0xb80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef7), 0x42);
        EXPECT(gbc.readMem(0xaef8), 0xd3);
        EXPECT(gbc.readMem(0xb80a), 0xd1);
        // D1 02DE
        gbc.setState(0xfb2, 0x5656, 0x9cd0, 0x452b, 0x9606, 0x59fb, 0x0, 0x1);
        gbc.writeMem(0xfb2, { 0xd1 });
        gbc.writeMem(0x5656, { 0xe5, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5658);
        EXPECT(gbc.pc(), 0xfb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 02DF
        gbc.setState(0xad75, 0x9d26, 0x83a0, 0x8279, 0x8903, 0xf4e6, 0x0, 0x1);
        gbc.writeMem(0x9d26, { 0x3, 0x72 });
        gbc.writeMem(0xad75, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9d28);
        EXPECT(gbc.pc(), 0xad76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d26), 0x3);
        EXPECT(gbc.readMem(0x9d27), 0x72);
        EXPECT(gbc.readMem(0xad75), 0xd1);
        // D1 02E0
        gbc.setState(0xeab2, 0x649f, 0xe670, 0x7668, 0x26b, 0x8df3, 0x1, 0x0);
        gbc.writeMem(0x649f, { 0xe2, 0x98 });
        gbc.writeMem(0xeab2, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x64a1);
        EXPECT(gbc.pc(), 0xeab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab2), 0xd1);
        // D1 02E1
        gbc.setState(0x9887, 0x20a1, 0x20c0, 0x43e, 0x6bf0, 0x33c8, 0x0, 0x0);
        gbc.writeMem(0x20a1, { 0x92, 0x1a });
        gbc.writeMem(0x9887, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x20a3);
        EXPECT(gbc.pc(), 0x9888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9887), 0xd1);
        // D1 02E2
        gbc.setState(0xd5ed, 0xf406, 0x4110, 0x5d20, 0x64e5, 0xa23c, 0x1, 0x0);
        gbc.writeMem(0xd5ed, { 0xd1 });
        gbc.writeMem(0xf406, { 0x71, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf408);
        EXPECT(gbc.pc(), 0xd5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ed), 0xd1);
        EXPECT(gbc.readMem(0xf406), 0x71);
        EXPECT(gbc.readMem(0xf407), 0x90);
        // D1 02E3
        gbc.setState(0x78ee, 0xbfa7, 0x9810, 0xc492, 0x83ce, 0x1453, 0x1, 0x0);
        gbc.writeMem(0x78ee, { 0xd1 });
        gbc.writeMem(0xbfa7, { 0xc3, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbfa9);
        EXPECT(gbc.pc(), 0x78ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa7), 0xc3);
        EXPECT(gbc.readMem(0xbfa8), 0x11);
        // D1 02E5
        gbc.setState(0xa87e, 0x175f, 0x5b30, 0x5298, 0xf2da, 0x8a14, 0x0, 0x0);
        gbc.writeMem(0x175f, { 0x14, 0x10 });
        gbc.writeMem(0xa87e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1761);
        EXPECT(gbc.pc(), 0xa87f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa87e), 0xd1);
        // D1 02E6
        gbc.setState(0xabb, 0xee8, 0x60e0, 0xae17, 0x4319, 0xcb0, 0x1, 0x0);
        gbc.writeMem(0xabb, { 0xd1 });
        gbc.writeMem(0xee8, { 0x1f, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xeea);
        EXPECT(gbc.pc(), 0xabc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 02E7
        gbc.setState(0x4582, 0xdc00, 0xea80, 0x92b4, 0x9956, 0x531a, 0x0, 0x1);
        gbc.writeMem(0x4582, { 0xd1 });
        gbc.writeMem(0xdc00, { 0xc6, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdc02);
        EXPECT(gbc.pc(), 0x4583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc00), 0xc6);
        EXPECT(gbc.readMem(0xdc01), 0xf0);
        // D1 02E8
        gbc.setState(0xe84, 0xd5ac, 0xf830, 0xcd11, 0xac26, 0x852f, 0x1, 0x0);
        gbc.writeMem(0xe84, { 0xd1 });
        gbc.writeMem(0xd5ac, { 0xf1, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd5ae);
        EXPECT(gbc.pc(), 0xe85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ac), 0xf1);
        EXPECT(gbc.readMem(0xd5ad), 0xf8);
        // D1 02E9
        gbc.setState(0x2b6f, 0x8c94, 0xd880, 0x1816, 0xce3, 0x3ceb, 0x0, 0x1);
        gbc.writeMem(0x2b6f, { 0xd1 });
        gbc.writeMem(0x8c94, { 0x99, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8c96);
        EXPECT(gbc.pc(), 0x2b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c94), 0x99);
        EXPECT(gbc.readMem(0x8c95), 0x1d);
        // D1 02EB
        gbc.setState(0x69c1, 0xb68e, 0x270, 0xe1ab, 0xd1ff, 0xab50, 0x0, 0x1);
        gbc.writeMem(0x69c1, { 0xd1 });
        gbc.writeMem(0xb68e, { 0xc1, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb690);
        EXPECT(gbc.pc(), 0x69c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb68e), 0xc1);
        EXPECT(gbc.readMem(0xb68f), 0x68);
        // D1 02EC
        gbc.setState(0x375b, 0x341b, 0xd130, 0x7b9c, 0x3901, 0x5b4e, 0x0, 0x1);
        gbc.writeMem(0x341b, { 0xac, 0x6c });
        gbc.writeMem(0x375b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x341d);
        EXPECT(gbc.pc(), 0x375c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 02ED
        gbc.setState(0x6a79, 0xa012, 0xe790, 0x9f0c, 0x993d, 0xb9ad, 0x1, 0x0);
        gbc.writeMem(0x6a79, { 0xd1 });
        gbc.writeMem(0xa012, { 0x34, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa014);
        EXPECT(gbc.pc(), 0x6a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa012), 0x34);
        EXPECT(gbc.readMem(0xa013), 0x4c);
        // D1 02EE
        gbc.setState(0xafc, 0x71e9, 0x6930, 0x6556, 0x7048, 0x24a6, 0x1, 0x0);
        gbc.writeMem(0xafc, { 0xd1 });
        gbc.writeMem(0x71e9, { 0xd, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x71eb);
        EXPECT(gbc.pc(), 0xafd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 02EF
        gbc.setState(0x5d90, 0xb09, 0xb9b0, 0xa987, 0xd894, 0xce58, 0x1, 0x0);
        gbc.writeMem(0xb09, { 0x13, 0xf });
        gbc.writeMem(0x5d90, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb0b);
        EXPECT(gbc.pc(), 0x5d91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 02F0
        gbc.setState(0x7a82, 0xa49d, 0xba50, 0xa559, 0xe929, 0x8845, 0x0, 0x0);
        gbc.writeMem(0x7a82, { 0xd1 });
        gbc.writeMem(0xa49d, { 0x8f, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa49f);
        EXPECT(gbc.pc(), 0x7a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49d), 0x8f);
        EXPECT(gbc.readMem(0xa49e), 0xc0);
        // D1 02F1
        gbc.setState(0x591c, 0x7f6, 0xebb0, 0xe47, 0xa2df, 0x6bce, 0x0, 0x0);
        gbc.writeMem(0x7f6, { 0x5f, 0x99 });
        gbc.writeMem(0x591c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7f8);
        EXPECT(gbc.pc(), 0x591d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 02F2
        gbc.setState(0x915d, 0x8a8a, 0xb380, 0x7031, 0x1376, 0x9759, 0x0, 0x0);
        gbc.writeMem(0x8a8a, { 0x8f, 0x1e });
        gbc.writeMem(0x915d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8a8c);
        EXPECT(gbc.pc(), 0x915e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a8a), 0x8f);
        EXPECT(gbc.readMem(0x8a8b), 0x1e);
        EXPECT(gbc.readMem(0x915d), 0xd1);
        // D1 02F3
        gbc.setState(0x99b6, 0xd3e2, 0x9b10, 0xe3c8, 0xab0f, 0xf991, 0x1, 0x1);
        gbc.writeMem(0x99b6, { 0xd1 });
        gbc.writeMem(0xd3e2, { 0xf4, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd3e4);
        EXPECT(gbc.pc(), 0x99b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99b6), 0xd1);
        EXPECT(gbc.readMem(0xd3e2), 0xf4);
        EXPECT(gbc.readMem(0xd3e3), 0x7);
        // D1 02F4
        gbc.setState(0x7907, 0xeb98, 0x5d20, 0xb585, 0x915a, 0x7c4c, 0x1, 0x0);
        gbc.writeMem(0x7907, { 0xd1 });
        gbc.writeMem(0xeb98, { 0x16, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xeb9a);
        EXPECT(gbc.pc(), 0x7908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb98), 0x16);
        EXPECT(gbc.readMem(0xeb99), 0x72);
        // D1 02F6
        gbc.setState(0xedb9, 0xd092, 0x2ef0, 0x370b, 0xa4a5, 0x985b, 0x1, 0x0);
        gbc.writeMem(0xd092, { 0x8d, 0x93 });
        gbc.writeMem(0xedb9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd094);
        EXPECT(gbc.pc(), 0xedba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd092), 0x8d);
        EXPECT(gbc.readMem(0xd093), 0x93);
        EXPECT(gbc.readMem(0xedb9), 0xd1);
        // D1 02F7
        gbc.setState(0x23a5, 0xb281, 0xe2b0, 0xbdef, 0x3c8c, 0x5b7f, 0x1, 0x1);
        gbc.writeMem(0x23a5, { 0xd1 });
        gbc.writeMem(0xb281, { 0x7, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb283);
        EXPECT(gbc.pc(), 0x23a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb281), 0x7);
        EXPECT(gbc.readMem(0xb282), 0xaa);
        // D1 02F8
        gbc.setState(0x1adc, 0xccc8, 0x6c50, 0xbeb0, 0x4d2b, 0x6a1b, 0x0, 0x0);
        gbc.writeMem(0x1adc, { 0xd1 });
        gbc.writeMem(0xccc8, { 0x75, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xccca);
        EXPECT(gbc.pc(), 0x1add);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc8), 0x75);
        EXPECT(gbc.readMem(0xccc9), 0x2);
        // D1 02F9
        gbc.setState(0x1f96, 0xf52, 0x2d30, 0xe3a8, 0x49f6, 0xe58b, 0x0, 0x0);
        gbc.writeMem(0xf52, { 0xf6, 0x6f });
        gbc.writeMem(0x1f96, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf54);
        EXPECT(gbc.pc(), 0x1f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 02FA
        gbc.setState(0x4b40, 0x9160, 0xab70, 0x8d1, 0x7578, 0x501a, 0x1, 0x1);
        gbc.writeMem(0x4b40, { 0xd1 });
        gbc.writeMem(0x9160, { 0x54, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9162);
        EXPECT(gbc.pc(), 0x4b41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9160), 0x54);
        EXPECT(gbc.readMem(0x9161), 0xb9);
        // D1 02FB
        gbc.setState(0x1409, 0xb62a, 0xa5e0, 0x8c6a, 0xb1cc, 0xe395, 0x0, 0x0);
        gbc.writeMem(0x1409, { 0xd1 });
        gbc.writeMem(0xb62a, { 0x3e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb62c);
        EXPECT(gbc.pc(), 0x140a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb62a), 0x3e);
        EXPECT(gbc.readMem(0xb62b), 0x7f);
        // D1 02FC
        gbc.setState(0x2e8b, 0x2b79, 0xe820, 0x268e, 0xdbd7, 0xe898, 0x1, 0x1);
        gbc.writeMem(0x2b79, { 0xa6, 0x4f });
        gbc.writeMem(0x2e8b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2b7b);
        EXPECT(gbc.pc(), 0x2e8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 02FD
        gbc.setState(0x501e, 0x4e9, 0xa680, 0x9fae, 0x2256, 0xda13, 0x0, 0x0);
        gbc.writeMem(0x4e9, { 0xbc, 0xfb });
        gbc.writeMem(0x501e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4eb);
        EXPECT(gbc.pc(), 0x501f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 02FE
        gbc.setState(0x5290, 0xad7f, 0x3200, 0x659e, 0x5302, 0x21a3, 0x1, 0x0);
        gbc.writeMem(0x5290, { 0xd1 });
        gbc.writeMem(0xad7f, { 0xa9, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xad81);
        EXPECT(gbc.pc(), 0x5291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad7f), 0xa9);
        EXPECT(gbc.readMem(0xad80), 0x1a);
        // D1 02FF
        gbc.setState(0x1dc9, 0x360, 0x9740, 0x1374, 0x7b74, 0x92d2, 0x0, 0x0);
        gbc.writeMem(0x360, { 0x90, 0xac });
        gbc.writeMem(0x1dc9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x362);
        EXPECT(gbc.pc(), 0x1dca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0300
        gbc.setState(0x1802, 0x288f, 0xf440, 0x8f26, 0x2f89, 0x6da5, 0x0, 0x0);
        gbc.writeMem(0x1802, { 0xd1 });
        gbc.writeMem(0x288f, { 0xb4, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2891);
        EXPECT(gbc.pc(), 0x1803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0301
        gbc.setState(0xea37, 0xd279, 0xdb10, 0x40c3, 0x592, 0x6a9d, 0x0, 0x1);
        gbc.writeMem(0xd279, { 0x9b, 0x48 });
        gbc.writeMem(0xea37, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd27b);
        EXPECT(gbc.pc(), 0xea38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd279), 0x9b);
        EXPECT(gbc.readMem(0xd27a), 0x48);
        EXPECT(gbc.readMem(0xea37), 0xd1);
        // D1 0302
        gbc.setState(0x2efc, 0xd6ea, 0xfe50, 0xdf28, 0x10e9, 0x61ef, 0x1, 0x1);
        gbc.writeMem(0x2efc, { 0xd1 });
        gbc.writeMem(0xd6ea, { 0x9e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd6ec);
        EXPECT(gbc.pc(), 0x2efd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ea), 0x9e);
        EXPECT(gbc.readMem(0xd6eb), 0x95);
        // D1 0303
        gbc.setState(0x1b97, 0x2cb3, 0x730, 0x2300, 0x29b0, 0xdf4a, 0x0, 0x1);
        gbc.writeMem(0x1b97, { 0xd1 });
        gbc.writeMem(0x2cb3, { 0x26, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2cb5);
        EXPECT(gbc.pc(), 0x1b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0304
        gbc.setState(0x7449, 0x2b07, 0x4100, 0x5100, 0x1b9, 0x7321, 0x1, 0x1);
        gbc.writeMem(0x2b07, { 0x40, 0x85 });
        gbc.writeMem(0x7449, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2b09);
        EXPECT(gbc.pc(), 0x744a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0305
        gbc.setState(0x4e72, 0xb946, 0x99b0, 0x2d76, 0xf13a, 0x2667, 0x1, 0x0);
        gbc.writeMem(0x4e72, { 0xd1 });
        gbc.writeMem(0xb946, { 0x33, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb948);
        EXPECT(gbc.pc(), 0x4e73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb946), 0x33);
        EXPECT(gbc.readMem(0xb947), 0x8d);
        // D1 0306
        gbc.setState(0x1694, 0x1da0, 0x9f40, 0x76ce, 0xb612, 0x58ff, 0x1, 0x0);
        gbc.writeMem(0x1694, { 0xd1 });
        gbc.writeMem(0x1da0, { 0x64, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1da2);
        EXPECT(gbc.pc(), 0x1695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0307
        gbc.setState(0x7411, 0xd0e4, 0xc240, 0x1be8, 0x4b31, 0xb18d, 0x0, 0x1);
        gbc.writeMem(0x7411, { 0xd1 });
        gbc.writeMem(0xd0e4, { 0x5a, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd0e6);
        EXPECT(gbc.pc(), 0x7412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0e4), 0x5a);
        EXPECT(gbc.readMem(0xd0e5), 0x50);
        // D1 0308
        gbc.setState(0xabef, 0x4b66, 0x6160, 0x57f4, 0x521e, 0x8c9b, 0x1, 0x1);
        gbc.writeMem(0x4b66, { 0x53, 0x4e });
        gbc.writeMem(0xabef, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4b68);
        EXPECT(gbc.pc(), 0xabf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabef), 0xd1);
        // D1 0309
        gbc.setState(0x6e32, 0x45c3, 0xc190, 0x544f, 0xeaba, 0x7c57, 0x1, 0x1);
        gbc.writeMem(0x45c3, { 0x19, 0x62 });
        gbc.writeMem(0x6e32, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x45c5);
        EXPECT(gbc.pc(), 0x6e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 030A
        gbc.setState(0xd0f3, 0xf764, 0xa70, 0x6413, 0x49d2, 0xc2bf, 0x1, 0x0);
        gbc.writeMem(0xd0f3, { 0xd1 });
        gbc.writeMem(0xf764, { 0x97, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf766);
        EXPECT(gbc.pc(), 0xd0f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f3), 0xd1);
        EXPECT(gbc.readMem(0xf764), 0x97);
        EXPECT(gbc.readMem(0xf765), 0xf5);
        // D1 030B
        gbc.setState(0xd9db, 0xb5c3, 0x70a0, 0xf0cf, 0x1879, 0x1fc6, 0x0, 0x1);
        gbc.writeMem(0xb5c3, { 0x80, 0x72 });
        gbc.writeMem(0xd9db, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb5c5);
        EXPECT(gbc.pc(), 0xd9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c3), 0x80);
        EXPECT(gbc.readMem(0xb5c4), 0x72);
        EXPECT(gbc.readMem(0xd9db), 0xd1);
        // D1 030C
        gbc.setState(0xa3b4, 0xae05, 0x4ae0, 0xe871, 0xe2a8, 0xe6ad, 0x1, 0x1);
        gbc.writeMem(0xa3b4, { 0xd1 });
        gbc.writeMem(0xae05, { 0xfe, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xae07);
        EXPECT(gbc.pc(), 0xa3b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3b4), 0xd1);
        EXPECT(gbc.readMem(0xae05), 0xfe);
        EXPECT(gbc.readMem(0xae06), 0x13);
        // D1 030D
        gbc.setState(0xcd7, 0x7054, 0x4e90, 0x9af7, 0x7362, 0xf8fc, 0x1, 0x1);
        gbc.writeMem(0xcd7, { 0xd1 });
        gbc.writeMem(0x7054, { 0x84, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7056);
        EXPECT(gbc.pc(), 0xcd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 030E
        gbc.setState(0x4b9c, 0xb50a, 0x7730, 0xbe7f, 0xa3, 0x7ae2, 0x0, 0x1);
        gbc.writeMem(0x4b9c, { 0xd1 });
        gbc.writeMem(0xb50a, { 0x0, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb50c);
        EXPECT(gbc.pc(), 0x4b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb50a), 0x0);
        EXPECT(gbc.readMem(0xb50b), 0xd3);
        // D1 030F
        gbc.setState(0xd2bc, 0x19c6, 0x5f70, 0xc2f7, 0x8630, 0xb3d0, 0x1, 0x0);
        gbc.writeMem(0x19c6, { 0xe7, 0x9b });
        gbc.writeMem(0xd2bc, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x19c8);
        EXPECT(gbc.pc(), 0xd2bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2bc), 0xd1);
        // D1 0310
        gbc.setState(0x242e, 0xd5bc, 0xff40, 0x36f0, 0x3365, 0x32fd, 0x0, 0x1);
        gbc.writeMem(0x242e, { 0xd1 });
        gbc.writeMem(0xd5bc, { 0xb5, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd5be);
        EXPECT(gbc.pc(), 0x242f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5bc), 0xb5);
        EXPECT(gbc.readMem(0xd5bd), 0x4f);
        // D1 0311
        gbc.setState(0x74e6, 0x4721, 0x950, 0x9060, 0x1274, 0x5730, 0x1, 0x1);
        gbc.writeMem(0x4721, { 0x5b, 0x9f });
        gbc.writeMem(0x74e6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4723);
        EXPECT(gbc.pc(), 0x74e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0312
        gbc.setState(0x1dea, 0x2848, 0x3210, 0xfeb, 0xe686, 0x38a9, 0x0, 0x1);
        gbc.writeMem(0x1dea, { 0xd1 });
        gbc.writeMem(0x2848, { 0x98, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x284a);
        EXPECT(gbc.pc(), 0x1deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0313
        gbc.setState(0x72f1, 0x5424, 0xf410, 0x90ae, 0xfb0f, 0x42af, 0x1, 0x1);
        gbc.writeMem(0x5424, { 0xd7, 0x78 });
        gbc.writeMem(0x72f1, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5426);
        EXPECT(gbc.pc(), 0x72f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0314
        gbc.setState(0x3e96, 0x2651, 0x4560, 0x343c, 0x11c4, 0x280a, 0x1, 0x1);
        gbc.writeMem(0x2651, { 0x8, 0x81 });
        gbc.writeMem(0x3e96, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2653);
        EXPECT(gbc.pc(), 0x3e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0315
        gbc.setState(0xb4cb, 0xa66f, 0x6550, 0xd76a, 0xebe7, 0x8460, 0x1, 0x1);
        gbc.writeMem(0xa66f, { 0x94, 0xd0 });
        gbc.writeMem(0xb4cb, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa671);
        EXPECT(gbc.pc(), 0xb4cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa66f), 0x94);
        EXPECT(gbc.readMem(0xa670), 0xd0);
        EXPECT(gbc.readMem(0xb4cb), 0xd1);
        // D1 0316
        gbc.setState(0x58f8, 0xac3e, 0xb2b0, 0x60a, 0xc1a9, 0xd2c7, 0x0, 0x0);
        gbc.writeMem(0x58f8, { 0xd1 });
        gbc.writeMem(0xac3e, { 0xa4, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xac40);
        EXPECT(gbc.pc(), 0x58f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac3e), 0xa4);
        EXPECT(gbc.readMem(0xac3f), 0xed);
        // D1 0317
        gbc.setState(0x93c3, 0xd437, 0x7a60, 0xa03e, 0xf528, 0xf298, 0x0, 0x0);
        gbc.writeMem(0x93c3, { 0xd1 });
        gbc.writeMem(0xd437, { 0x2, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd439);
        EXPECT(gbc.pc(), 0x93c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c3), 0xd1);
        EXPECT(gbc.readMem(0xd437), 0x2);
        EXPECT(gbc.readMem(0xd438), 0xdb);
        // D1 0318
        gbc.setState(0x1aa5, 0x868, 0x68c0, 0x2950, 0xa2e5, 0xe515, 0x1, 0x1);
        gbc.writeMem(0x868, { 0xb8, 0x65 });
        gbc.writeMem(0x1aa5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x86a);
        EXPECT(gbc.pc(), 0x1aa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0319
        gbc.setState(0x4837, 0xe8f9, 0xdab0, 0x394e, 0xbff6, 0x5702, 0x1, 0x0);
        gbc.writeMem(0x4837, { 0xd1 });
        gbc.writeMem(0xe8f9, { 0x4b, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe8fb);
        EXPECT(gbc.pc(), 0x4838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8f9), 0x4b);
        EXPECT(gbc.readMem(0xe8fa), 0xe0);
        // D1 031A
        gbc.setState(0x807b, 0x4576, 0x7f60, 0xe752, 0xd687, 0x9fb, 0x1, 0x0);
        gbc.writeMem(0x4576, { 0xfb, 0xf8 });
        gbc.writeMem(0x807b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4578);
        EXPECT(gbc.pc(), 0x807c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807b), 0xd1);
        // D1 031B
        gbc.setState(0x2902, 0xdc43, 0xc440, 0x65d7, 0xb3f7, 0xcb8, 0x0, 0x1);
        gbc.writeMem(0x2902, { 0xd1 });
        gbc.writeMem(0xdc43, { 0xf8, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xdc45);
        EXPECT(gbc.pc(), 0x2903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc43), 0xf8);
        EXPECT(gbc.readMem(0xdc44), 0xc2);
        // D1 031C
        gbc.setState(0xc02a, 0xb03d, 0x4300, 0xb057, 0x232a, 0xb3d7, 0x0, 0x1);
        gbc.writeMem(0xb03d, { 0x4, 0xed });
        gbc.writeMem(0xc02a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb03f);
        EXPECT(gbc.pc(), 0xc02b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb03d), 0x4);
        EXPECT(gbc.readMem(0xb03e), 0xed);
        EXPECT(gbc.readMem(0xc02a), 0xd1);
        // D1 031D
        gbc.setState(0xdba5, 0x2dbd, 0x75d0, 0x94a3, 0x1aa5, 0x201, 0x0, 0x0);
        gbc.writeMem(0x2dbd, { 0xe1, 0x67 });
        gbc.writeMem(0xdba5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2dbf);
        EXPECT(gbc.pc(), 0xdba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba5), 0xd1);
        // D1 031E
        gbc.setState(0x5b51, 0xed3a, 0x83e0, 0x675c, 0x85af, 0x3cb0, 0x1, 0x0);
        gbc.writeMem(0x5b51, { 0xd1 });
        gbc.writeMem(0xed3a, { 0x7c, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xed3c);
        EXPECT(gbc.pc(), 0x5b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3a), 0x7c);
        EXPECT(gbc.readMem(0xed3b), 0x33);
        // D1 031F
        gbc.setState(0x259, 0x1adc, 0xdb0, 0x9313, 0xbdee, 0x66d0, 0x1, 0x0);
        gbc.writeMem(0x259, { 0xd1 });
        gbc.writeMem(0x1adc, { 0xa9, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1ade);
        EXPECT(gbc.pc(), 0x25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0320
        gbc.setState(0xa58b, 0xa121, 0x86a0, 0x9647, 0xcabb, 0x593, 0x1, 0x0);
        gbc.writeMem(0xa121, { 0xde, 0x6f });
        gbc.writeMem(0xa58b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa123);
        EXPECT(gbc.pc(), 0xa58c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa121), 0xde);
        EXPECT(gbc.readMem(0xa122), 0x6f);
        EXPECT(gbc.readMem(0xa58b), 0xd1);
        // D1 0322
        gbc.setState(0xcd70, 0x7da, 0x42d0, 0xeb2e, 0xd5, 0x7478, 0x0, 0x0);
        gbc.writeMem(0x7da, { 0x23, 0x38 });
        gbc.writeMem(0xcd70, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7dc);
        EXPECT(gbc.pc(), 0xcd71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd70), 0xd1);
        // D1 0323
        gbc.setState(0xe23, 0xa1f, 0xc740, 0xb37, 0x6828, 0xe279, 0x0, 0x0);
        gbc.writeMem(0xa1f, { 0xb6, 0xb5 });
        gbc.writeMem(0xe23, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa21);
        EXPECT(gbc.pc(), 0xe24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0324
        gbc.setState(0xb0, 0x3bdd, 0x8170, 0xf8ce, 0xc9c4, 0xb0ac, 0x1, 0x0);
        gbc.writeMem(0xb0, { 0xd1 });
        gbc.writeMem(0x3bdd, { 0x26, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3bdf);
        EXPECT(gbc.pc(), 0xb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0325
        gbc.setState(0x66e4, 0x8321, 0x6330, 0x2ed2, 0x1cd5, 0x4c4b, 0x0, 0x0);
        gbc.writeMem(0x66e4, { 0xd1 });
        gbc.writeMem(0x8321, { 0x16, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8323);
        EXPECT(gbc.pc(), 0x66e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8321), 0x16);
        EXPECT(gbc.readMem(0x8322), 0x75);
        // D1 0326
        gbc.setState(0xd8d8, 0x7ca7, 0x35c0, 0x2861, 0x294a, 0x7855, 0x0, 0x1);
        gbc.writeMem(0x7ca7, { 0xab, 0x2d });
        gbc.writeMem(0xd8d8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7ca9);
        EXPECT(gbc.pc(), 0xd8d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d8), 0xd1);
        // D1 0327
        gbc.setState(0xabce, 0x4217, 0xccd0, 0x88c4, 0x4852, 0xc19, 0x1, 0x0);
        gbc.writeMem(0x4217, { 0x6a, 0x5b });
        gbc.writeMem(0xabce, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4219);
        EXPECT(gbc.pc(), 0xabcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabce), 0xd1);
        // D1 0328
        gbc.setState(0x56fa, 0x3fbd, 0xb430, 0x5249, 0xa424, 0xcba1, 0x1, 0x0);
        gbc.writeMem(0x3fbd, { 0x24, 0x22 });
        gbc.writeMem(0x56fa, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3fbf);
        EXPECT(gbc.pc(), 0x56fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0329
        gbc.setState(0x1ed7, 0xc075, 0x9300, 0x5d85, 0x1eb7, 0x94f7, 0x0, 0x0);
        gbc.writeMem(0x1ed7, { 0xd1 });
        gbc.writeMem(0xc075, { 0x7a, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc077);
        EXPECT(gbc.pc(), 0x1ed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc075), 0x7a);
        EXPECT(gbc.readMem(0xc076), 0xc6);
        // D1 032A
        gbc.setState(0x1835, 0x77a0, 0xf830, 0xdc74, 0xce42, 0x9153, 0x1, 0x1);
        gbc.writeMem(0x1835, { 0xd1 });
        gbc.writeMem(0x77a0, { 0x13, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x77a2);
        EXPECT(gbc.pc(), 0x1836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 032B
        gbc.setState(0xb584, 0x6c66, 0x9300, 0xc302, 0xa857, 0x96fa, 0x1, 0x1);
        gbc.writeMem(0x6c66, { 0xab, 0x94 });
        gbc.writeMem(0xb584, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6c68);
        EXPECT(gbc.pc(), 0xb585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb584), 0xd1);
        // D1 032C
        gbc.setState(0x7aec, 0xbf0e, 0xf0f0, 0xafef, 0xd7c0, 0xf16f, 0x1, 0x0);
        gbc.writeMem(0x7aec, { 0xd1 });
        gbc.writeMem(0xbf0e, { 0xea, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xbf10);
        EXPECT(gbc.pc(), 0x7aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf0e), 0xea);
        EXPECT(gbc.readMem(0xbf0f), 0xb2);
        // D1 032D
        gbc.setState(0x66ff, 0x90f2, 0xab80, 0x56c8, 0x22e9, 0xe656, 0x0, 0x0);
        gbc.writeMem(0x66ff, { 0xd1 });
        gbc.writeMem(0x90f2, { 0x2d, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x90f4);
        EXPECT(gbc.pc(), 0x6700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90f2), 0x2d);
        EXPECT(gbc.readMem(0x90f3), 0xef);
        // D1 032E
        gbc.setState(0x9742, 0xf4cb, 0x1cd0, 0xea50, 0xb6f4, 0x29cc, 0x1, 0x1);
        gbc.writeMem(0x9742, { 0xd1 });
        gbc.writeMem(0xf4cb, { 0x53, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf4cd);
        EXPECT(gbc.pc(), 0x9743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9742), 0xd1);
        EXPECT(gbc.readMem(0xf4cb), 0x53);
        EXPECT(gbc.readMem(0xf4cc), 0x17);
        // D1 0330
        gbc.setState(0xca88, 0xd179, 0x5c40, 0x5d38, 0x6304, 0xe059, 0x0, 0x1);
        gbc.writeMem(0xca88, { 0xd1 });
        gbc.writeMem(0xd179, { 0x3b, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd17b);
        EXPECT(gbc.pc(), 0xca89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca88), 0xd1);
        EXPECT(gbc.readMem(0xd179), 0x3b);
        EXPECT(gbc.readMem(0xd17a), 0xb);
        // D1 0331
        gbc.setState(0x21db, 0x2fca, 0x4a40, 0xc5d1, 0x45dc, 0x1714, 0x0, 0x0);
        gbc.writeMem(0x21db, { 0xd1 });
        gbc.writeMem(0x2fca, { 0xf4, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2fcc);
        EXPECT(gbc.pc(), 0x21dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0332
        gbc.setState(0x76d2, 0xac46, 0x1630, 0x77f0, 0x1ea4, 0x4e75, 0x1, 0x0);
        gbc.writeMem(0x76d2, { 0xd1 });
        gbc.writeMem(0xac46, { 0xca, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xac48);
        EXPECT(gbc.pc(), 0x76d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac46), 0xca);
        EXPECT(gbc.readMem(0xac47), 0xc1);
        // D1 0333
        gbc.setState(0x614b, 0xe96a, 0xebd0, 0x5d08, 0xd3e8, 0xf0b, 0x0, 0x0);
        gbc.writeMem(0x614b, { 0xd1 });
        gbc.writeMem(0xe96a, { 0x9a, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe96c);
        EXPECT(gbc.pc(), 0x614c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe96a), 0x9a);
        EXPECT(gbc.readMem(0xe96b), 0x63);
        // D1 0334
        gbc.setState(0x4a68, 0x51e9, 0x3dd0, 0x4afe, 0xdfd9, 0x1b78, 0x1, 0x1);
        gbc.writeMem(0x4a68, { 0xd1 });
        gbc.writeMem(0x51e9, { 0x2, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x51eb);
        EXPECT(gbc.pc(), 0x4a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0335
        gbc.setState(0x7e8f, 0xfa52, 0xbe50, 0x2d48, 0xd0d0, 0x8a43, 0x0, 0x1);
        gbc.writeMem(0x7e8f, { 0xd1 });
        gbc.writeMem(0xfa52, { 0x3e, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xfa54);
        EXPECT(gbc.pc(), 0x7e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa52), 0x3e);
        EXPECT(gbc.readMem(0xfa53), 0x37);
        // D1 0336
        gbc.setState(0x1996, 0xf251, 0x8680, 0x64c6, 0xb05f, 0x6b17, 0x0, 0x0);
        gbc.writeMem(0x1996, { 0xd1 });
        gbc.writeMem(0xf251, { 0x20, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf253);
        EXPECT(gbc.pc(), 0x1997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf251), 0x20);
        EXPECT(gbc.readMem(0xf252), 0x43);
        // D1 0337
        gbc.setState(0xb14e, 0x145, 0xe320, 0xd73f, 0x5038, 0xacc, 0x0, 0x1);
        gbc.writeMem(0x145, { 0x1e, 0x4 });
        gbc.writeMem(0xb14e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x147);
        EXPECT(gbc.pc(), 0xb14f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb14e), 0xd1);
        // D1 0339
        gbc.setState(0xd4aa, 0xaf, 0xa410, 0xd767, 0xde4c, 0xedfb, 0x0, 0x1);
        gbc.writeMem(0xaf, { 0x54, 0x9 });
        gbc.writeMem(0xd4aa, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb1);
        EXPECT(gbc.pc(), 0xd4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4aa), 0xd1);
        // D1 033A
        gbc.setState(0x5184, 0x5660, 0x4de0, 0x7a89, 0x4c84, 0x538d, 0x0, 0x0);
        gbc.writeMem(0x5184, { 0xd1 });
        gbc.writeMem(0x5660, { 0x3b, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5662);
        EXPECT(gbc.pc(), 0x5185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 033B
        gbc.setState(0x9271, 0xe3e3, 0x8eb0, 0xa212, 0x1eed, 0xbe30, 0x1, 0x0);
        gbc.writeMem(0x9271, { 0xd1 });
        gbc.writeMem(0xe3e3, { 0xbd, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe3e5);
        EXPECT(gbc.pc(), 0x9272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9271), 0xd1);
        EXPECT(gbc.readMem(0xe3e3), 0xbd);
        EXPECT(gbc.readMem(0xe3e4), 0x29);
        // D1 033C
        gbc.setState(0xcef5, 0x1dec, 0x2ae0, 0x7f8f, 0xb245, 0x5433, 0x1, 0x1);
        gbc.writeMem(0x1dec, { 0x3f, 0xa2 });
        gbc.writeMem(0xcef5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1dee);
        EXPECT(gbc.pc(), 0xcef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef5), 0xd1);
        // D1 033D
        gbc.setState(0x4468, 0x1930, 0x7a80, 0x2033, 0x577c, 0x7e1b, 0x0, 0x1);
        gbc.writeMem(0x1930, { 0x6, 0x63 });
        gbc.writeMem(0x4468, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1932);
        EXPECT(gbc.pc(), 0x4469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 033E
        gbc.setState(0x3259, 0xb465, 0x6ef0, 0x6be6, 0x5829, 0x5efa, 0x1, 0x0);
        gbc.writeMem(0x3259, { 0xd1 });
        gbc.writeMem(0xb465, { 0xed, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb467);
        EXPECT(gbc.pc(), 0x325a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb465), 0xed);
        EXPECT(gbc.readMem(0xb466), 0x92);
        // D1 033F
        gbc.setState(0xebb6, 0xfeee, 0x1890, 0x49ce, 0xaa4a, 0xb6a4, 0x1, 0x1);
        gbc.writeMem(0xebb6, { 0xd1 });
        gbc.writeMem(0xfeee, { 0x65, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xfef0);
        EXPECT(gbc.pc(), 0xebb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb6), 0xd1);
        EXPECT(gbc.readMem(0xfeee), 0x65);
        EXPECT(gbc.readMem(0xfeef), 0xda);
        // D1 0340
        gbc.setState(0xadc1, 0xeb04, 0x28d0, 0x5c3d, 0x8be0, 0x11b8, 0x0, 0x1);
        gbc.writeMem(0xadc1, { 0xd1 });
        gbc.writeMem(0xeb04, { 0x88, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xeb06);
        EXPECT(gbc.pc(), 0xadc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc1), 0xd1);
        EXPECT(gbc.readMem(0xeb04), 0x88);
        EXPECT(gbc.readMem(0xeb05), 0xb4);
        // D1 0341
        gbc.setState(0xc65b, 0x1add, 0x9ff0, 0xa94e, 0x5a20, 0x2d83, 0x1, 0x0);
        gbc.writeMem(0x1add, { 0xa3, 0xb3 });
        gbc.writeMem(0xc65b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1adf);
        EXPECT(gbc.pc(), 0xc65c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc65b), 0xd1);
        // D1 0342
        gbc.setState(0x315c, 0x23d5, 0xc0d0, 0x516, 0xe4ea, 0xbcf4, 0x0, 0x0);
        gbc.writeMem(0x23d5, { 0x40, 0xd7 });
        gbc.writeMem(0x315c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x23d7);
        EXPECT(gbc.pc(), 0x315d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0343
        gbc.setState(0x556e, 0x7039, 0x7aa0, 0x2bf7, 0x6cc0, 0x4674, 0x1, 0x0);
        gbc.writeMem(0x556e, { 0xd1 });
        gbc.writeMem(0x7039, { 0xb6, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x703b);
        EXPECT(gbc.pc(), 0x556f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 0345
        gbc.setState(0x12a0, 0x35f, 0xd4d0, 0x48e3, 0xaeb3, 0x593f, 0x1, 0x0);
        gbc.writeMem(0x35f, { 0x57, 0x90 });
        gbc.writeMem(0x12a0, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x361);
        EXPECT(gbc.pc(), 0x12a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0346
        gbc.setState(0x2eb, 0xe886, 0x62f0, 0x252f, 0x194c, 0x9a99, 0x1, 0x0);
        gbc.writeMem(0x2eb, { 0xd1 });
        gbc.writeMem(0xe886, { 0x27, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe888);
        EXPECT(gbc.pc(), 0x2ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe886), 0x27);
        EXPECT(gbc.readMem(0xe887), 0x2a);
        // D1 0347
        gbc.setState(0x72c2, 0xbb91, 0xae50, 0xb203, 0xe851, 0xc3b2, 0x0, 0x0);
        gbc.writeMem(0x72c2, { 0xd1 });
        gbc.writeMem(0xbb91, { 0x61, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbb93);
        EXPECT(gbc.pc(), 0x72c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb91), 0x61);
        EXPECT(gbc.readMem(0xbb92), 0xbf);
        // D1 0348
        gbc.setState(0x6133, 0x2e2c, 0x5150, 0x5cb5, 0x70b6, 0x22f8, 0x1, 0x0);
        gbc.writeMem(0x2e2c, { 0xfd, 0x8d });
        gbc.writeMem(0x6133, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2e2e);
        EXPECT(gbc.pc(), 0x6134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0349
        gbc.setState(0x43df, 0xb2ae, 0xa310, 0xcd7d, 0x5e04, 0xfec7, 0x0, 0x0);
        gbc.writeMem(0x43df, { 0xd1 });
        gbc.writeMem(0xb2ae, { 0xd6, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb2b0);
        EXPECT(gbc.pc(), 0x43e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ae), 0xd6);
        EXPECT(gbc.readMem(0xb2af), 0xd7);
        // D1 034A
        gbc.setState(0x21a0, 0x25ac, 0x4f0, 0x6c2, 0x10f0, 0xdbd6, 0x1, 0x1);
        gbc.writeMem(0x21a0, { 0xd1 });
        gbc.writeMem(0x25ac, { 0x55, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x25ae);
        EXPECT(gbc.pc(), 0x21a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 034B
        gbc.setState(0x74a7, 0xfa73, 0xc7e0, 0x455, 0xc66e, 0x8ef0, 0x0, 0x0);
        gbc.writeMem(0x74a7, { 0xd1 });
        gbc.writeMem(0xfa73, { 0x18, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xfa75);
        EXPECT(gbc.pc(), 0x74a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa73), 0x18);
        EXPECT(gbc.readMem(0xfa74), 0x57);
        // D1 034C
        gbc.setState(0x8bc5, 0xb963, 0x3380, 0xedc7, 0x7f94, 0x3ca0, 0x0, 0x1);
        gbc.writeMem(0x8bc5, { 0xd1 });
        gbc.writeMem(0xb963, { 0x71, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb965);
        EXPECT(gbc.pc(), 0x8bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc5), 0xd1);
        EXPECT(gbc.readMem(0xb963), 0x71);
        EXPECT(gbc.readMem(0xb964), 0x1f);
        // D1 034D
        gbc.setState(0xb709, 0xc5a2, 0xd1e0, 0xa853, 0xdba, 0x5c5e, 0x1, 0x1);
        gbc.writeMem(0xb709, { 0xd1 });
        gbc.writeMem(0xc5a2, { 0x62, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc5a4);
        EXPECT(gbc.pc(), 0xb70a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb709), 0xd1);
        EXPECT(gbc.readMem(0xc5a2), 0x62);
        EXPECT(gbc.readMem(0xc5a3), 0x4);
        // D1 034E
        gbc.setState(0xe4ac, 0x7e77, 0x9e70, 0x5b57, 0xfeab, 0x9b0f, 0x1, 0x1);
        gbc.writeMem(0x7e77, { 0xde, 0x4a });
        gbc.writeMem(0xe4ac, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7e79);
        EXPECT(gbc.pc(), 0xe4ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ac), 0xd1);
        // D1 034F
        gbc.setState(0xae23, 0xd0b7, 0x3f10, 0xb6c3, 0xb6a7, 0xd000, 0x0, 0x0);
        gbc.writeMem(0xae23, { 0xd1 });
        gbc.writeMem(0xd0b7, { 0x53, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd0b9);
        EXPECT(gbc.pc(), 0xae24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae23), 0xd1);
        EXPECT(gbc.readMem(0xd0b7), 0x53);
        EXPECT(gbc.readMem(0xd0b8), 0x8a);
        // D1 0350
        gbc.setState(0xe8e5, 0xe6a4, 0x59f0, 0x1d5f, 0x7f28, 0x61ab, 0x0, 0x0);
        gbc.writeMem(0xe6a4, { 0x9a, 0xff });
        gbc.writeMem(0xe8e5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe6a6);
        EXPECT(gbc.pc(), 0xe8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a4), 0x9a);
        EXPECT(gbc.readMem(0xe6a5), 0xff);
        EXPECT(gbc.readMem(0xe8e5), 0xd1);
        // D1 0351
        gbc.setState(0x28a7, 0xe131, 0x69d0, 0x7f79, 0x8e5d, 0xcd0a, 0x0, 0x1);
        gbc.writeMem(0x28a7, { 0xd1 });
        gbc.writeMem(0xe131, { 0xd8, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe133);
        EXPECT(gbc.pc(), 0x28a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe131), 0xd8);
        EXPECT(gbc.readMem(0xe132), 0x79);
        // D1 0352
        gbc.setState(0xdaa8, 0x76e7, 0xaaf0, 0xc594, 0xc1b0, 0xae2b, 0x1, 0x1);
        gbc.writeMem(0x76e7, { 0xe5, 0x95 });
        gbc.writeMem(0xdaa8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x76e9);
        EXPECT(gbc.pc(), 0xdaa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa8), 0xd1);
        // D1 0353
        gbc.setState(0xd1d0, 0x8e71, 0xae0, 0xa689, 0xa78, 0xd70c, 0x1, 0x1);
        gbc.writeMem(0x8e71, { 0xcd, 0x1f });
        gbc.writeMem(0xd1d0, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8e73);
        EXPECT(gbc.pc(), 0xd1d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e71), 0xcd);
        EXPECT(gbc.readMem(0x8e72), 0x1f);
        EXPECT(gbc.readMem(0xd1d0), 0xd1);
        // D1 0354
        gbc.setState(0x9576, 0xfae2, 0x1b20, 0xf466, 0x67c3, 0x48c3, 0x1, 0x0);
        gbc.writeMem(0x9576, { 0xd1 });
        gbc.writeMem(0xfae2, { 0xd1, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfae4);
        EXPECT(gbc.pc(), 0x9577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9576), 0xd1);
        EXPECT(gbc.readMem(0xfae2), 0xd1);
        EXPECT(gbc.readMem(0xfae3), 0x3d);
        // D1 0356
        gbc.setState(0x1a6, 0xc2e1, 0xec90, 0xee96, 0x1a68, 0x8b4, 0x1, 0x1);
        gbc.writeMem(0x1a6, { 0xd1 });
        gbc.writeMem(0xc2e1, { 0x8, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc2e3);
        EXPECT(gbc.pc(), 0x1a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e1), 0x8);
        EXPECT(gbc.readMem(0xc2e2), 0xa5);
        // D1 0357
        gbc.setState(0x9484, 0x370, 0xbc80, 0x5030, 0x97c9, 0xa4c7, 0x1, 0x0);
        gbc.writeMem(0x370, { 0xdf, 0x8 });
        gbc.writeMem(0x9484, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x372);
        EXPECT(gbc.pc(), 0x9485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9484), 0xd1);
        // D1 0358
        gbc.setState(0x7ed4, 0x7e62, 0x2cb0, 0x8b0d, 0xe374, 0x7407, 0x1, 0x0);
        gbc.writeMem(0x7e62, { 0x96, 0xaf });
        gbc.writeMem(0x7ed4, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7e64);
        EXPECT(gbc.pc(), 0x7ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0359
        gbc.setState(0xb562, 0x43ec, 0x6e90, 0x66db, 0xbeed, 0x463, 0x1, 0x0);
        gbc.writeMem(0x43ec, { 0xab, 0x9c });
        gbc.writeMem(0xb562, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x43ee);
        EXPECT(gbc.pc(), 0xb563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb562), 0xd1);
        // D1 035A
        gbc.setState(0xcf23, 0xc550, 0x5830, 0xc582, 0xbc89, 0x5910, 0x1, 0x1);
        gbc.writeMem(0xc550, { 0x59, 0x7a });
        gbc.writeMem(0xcf23, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc552);
        EXPECT(gbc.pc(), 0xcf24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc550), 0x59);
        EXPECT(gbc.readMem(0xc551), 0x7a);
        EXPECT(gbc.readMem(0xcf23), 0xd1);
        // D1 035B
        gbc.setState(0x14cb, 0x4b84, 0x9b90, 0xc92c, 0x29a3, 0x9be8, 0x0, 0x1);
        gbc.writeMem(0x14cb, { 0xd1 });
        gbc.writeMem(0x4b84, { 0x86, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4b86);
        EXPECT(gbc.pc(), 0x14cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 035C
        gbc.setState(0x3b8d, 0xe600, 0xc400, 0x42d, 0x95e3, 0x812b, 0x0, 0x1);
        gbc.writeMem(0x3b8d, { 0xd1 });
        gbc.writeMem(0xe600, { 0x2d, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe602);
        EXPECT(gbc.pc(), 0x3b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe600), 0x2d);
        EXPECT(gbc.readMem(0xe601), 0xd5);
        // D1 035D
        gbc.setState(0x59b1, 0x6447, 0x1c0, 0x12fa, 0xcec8, 0xdc70, 0x1, 0x0);
        gbc.writeMem(0x59b1, { 0xd1 });
        gbc.writeMem(0x6447, { 0x4, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6449);
        EXPECT(gbc.pc(), 0x59b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 035E
        gbc.setState(0x62ce, 0x1726, 0xf800, 0x8c7d, 0x973f, 0x5d7e, 0x1, 0x0);
        gbc.writeMem(0x1726, { 0x78, 0x6a });
        gbc.writeMem(0x62ce, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1728);
        EXPECT(gbc.pc(), 0x62cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 035F
        gbc.setState(0xc02e, 0x2c6e, 0xbba0, 0x2a34, 0xba59, 0x5728, 0x0, 0x0);
        gbc.writeMem(0x2c6e, { 0x12, 0xaa });
        gbc.writeMem(0xc02e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2c70);
        EXPECT(gbc.pc(), 0xc02f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02e), 0xd1);
        // D1 0360
        gbc.setState(0x9fb, 0xe1e4, 0x9990, 0xa, 0x890f, 0x649a, 0x1, 0x0);
        gbc.writeMem(0x9fb, { 0xd1 });
        gbc.writeMem(0xe1e4, { 0xee, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe1e6);
        EXPECT(gbc.pc(), 0x9fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e4), 0xee);
        EXPECT(gbc.readMem(0xe1e5), 0xfd);
        // D1 0361
        gbc.setState(0x8db9, 0xb26d, 0xff00, 0x6616, 0x9b53, 0x2516, 0x0, 0x1);
        gbc.writeMem(0x8db9, { 0xd1 });
        gbc.writeMem(0xb26d, { 0xe0, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb26f);
        EXPECT(gbc.pc(), 0x8dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db9), 0xd1);
        EXPECT(gbc.readMem(0xb26d), 0xe0);
        EXPECT(gbc.readMem(0xb26e), 0x65);
        // D1 0362
        gbc.setState(0x986b, 0x7530, 0x96c0, 0x7e37, 0x74a0, 0x902c, 0x0, 0x0);
        gbc.writeMem(0x7530, { 0xb5, 0x23 });
        gbc.writeMem(0x986b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7532);
        EXPECT(gbc.pc(), 0x986c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x986b), 0xd1);
        // D1 0363
        gbc.setState(0x7d99, 0xccb6, 0xa690, 0x582e, 0x780, 0xcab7, 0x1, 0x1);
        gbc.writeMem(0x7d99, { 0xd1 });
        gbc.writeMem(0xccb6, { 0xd9, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xccb8);
        EXPECT(gbc.pc(), 0x7d9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccb6), 0xd9);
        EXPECT(gbc.readMem(0xccb7), 0xd8);
        // D1 0364
        gbc.setState(0x44f0, 0x9d65, 0x5870, 0x7e51, 0x3bf4, 0x8ca5, 0x1, 0x1);
        gbc.writeMem(0x44f0, { 0xd1 });
        gbc.writeMem(0x9d65, { 0xf4, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9d67);
        EXPECT(gbc.pc(), 0x44f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d65), 0xf4);
        EXPECT(gbc.readMem(0x9d66), 0x2a);
        // D1 0365
        gbc.setState(0x5475, 0x19cf, 0x7310, 0x7a1c, 0xbe2f, 0x2d6a, 0x1, 0x0);
        gbc.writeMem(0x19cf, { 0xb4, 0xb1 });
        gbc.writeMem(0x5475, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x19d1);
        EXPECT(gbc.pc(), 0x5476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0366
        gbc.setState(0x47f3, 0x2463, 0xad80, 0xe52, 0x7ecf, 0xb295, 0x1, 0x1);
        gbc.writeMem(0x2463, { 0xc, 0x9 });
        gbc.writeMem(0x47f3, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2465);
        EXPECT(gbc.pc(), 0x47f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0367
        gbc.setState(0xd7ef, 0x13f0, 0xd650, 0xce23, 0xa91f, 0xeaf6, 0x1, 0x0);
        gbc.writeMem(0x13f0, { 0x6c, 0x57 });
        gbc.writeMem(0xd7ef, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x13f2);
        EXPECT(gbc.pc(), 0xd7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ef), 0xd1);
        // D1 0368
        gbc.setState(0x427a, 0x555b, 0xbbc0, 0x8924, 0xc48c, 0x211f, 0x0, 0x0);
        gbc.writeMem(0x427a, { 0xd1 });
        gbc.writeMem(0x555b, { 0xc2, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x555d);
        EXPECT(gbc.pc(), 0x427b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0369
        gbc.setState(0x6b79, 0xba83, 0x7f40, 0x5e45, 0xef03, 0xd335, 0x1, 0x0);
        gbc.writeMem(0x6b79, { 0xd1 });
        gbc.writeMem(0xba83, { 0x64, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xba85);
        EXPECT(gbc.pc(), 0x6b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba83), 0x64);
        EXPECT(gbc.readMem(0xba84), 0x9d);
        // D1 036A
        gbc.setState(0x8788, 0xe1e2, 0x6d10, 0x84f8, 0x865e, 0xb693, 0x1, 0x1);
        gbc.writeMem(0x8788, { 0xd1 });
        gbc.writeMem(0xe1e2, { 0xf3, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe1e4);
        EXPECT(gbc.pc(), 0x8789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8788), 0xd1);
        EXPECT(gbc.readMem(0xe1e2), 0xf3);
        EXPECT(gbc.readMem(0xe1e3), 0xe8);
        // D1 036B
        gbc.setState(0x99a3, 0x955d, 0x1f30, 0xd775, 0x76e4, 0x6a10, 0x0, 0x1);
        gbc.writeMem(0x955d, { 0x22, 0xb5 });
        gbc.writeMem(0x99a3, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x955f);
        EXPECT(gbc.pc(), 0x99a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955d), 0x22);
        EXPECT(gbc.readMem(0x955e), 0xb5);
        EXPECT(gbc.readMem(0x99a3), 0xd1);
        // D1 036C
        gbc.setState(0xd441, 0xa569, 0x4ba0, 0x3ab, 0x84b2, 0xf2fd, 0x1, 0x0);
        gbc.writeMem(0xa569, { 0x73, 0x98 });
        gbc.writeMem(0xd441, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa56b);
        EXPECT(gbc.pc(), 0xd442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa569), 0x73);
        EXPECT(gbc.readMem(0xa56a), 0x98);
        EXPECT(gbc.readMem(0xd441), 0xd1);
        // D1 036D
        gbc.setState(0x9e6f, 0x5902, 0x74a0, 0xa01e, 0x9827, 0x42b1, 0x0, 0x0);
        gbc.writeMem(0x5902, { 0xb4, 0x6 });
        gbc.writeMem(0x9e6f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5904);
        EXPECT(gbc.pc(), 0x9e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6f), 0xd1);
        // D1 036E
        gbc.setState(0x2f28, 0x5920, 0x5fc0, 0xf8bc, 0x5053, 0xf47c, 0x0, 0x0);
        gbc.writeMem(0x2f28, { 0xd1 });
        gbc.writeMem(0x5920, { 0x41, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5922);
        EXPECT(gbc.pc(), 0x2f29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 036F
        gbc.setState(0x1fc3, 0xc3e3, 0x8a50, 0xa60, 0xf52f, 0xf65f, 0x0, 0x1);
        gbc.writeMem(0x1fc3, { 0xd1 });
        gbc.writeMem(0xc3e3, { 0x3d, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc3e5);
        EXPECT(gbc.pc(), 0x1fc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e3), 0x3d);
        EXPECT(gbc.readMem(0xc3e4), 0xbb);
        // D1 0370
        gbc.setState(0x9898, 0xe5b2, 0xed40, 0xfdeb, 0x5695, 0x38de, 0x0, 0x1);
        gbc.writeMem(0x9898, { 0xd1 });
        gbc.writeMem(0xe5b2, { 0x16, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe5b4);
        EXPECT(gbc.pc(), 0x9899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9898), 0xd1);
        EXPECT(gbc.readMem(0xe5b2), 0x16);
        EXPECT(gbc.readMem(0xe5b3), 0x95);
        // D1 0371
        gbc.setState(0x2637, 0x6b69, 0x4090, 0x3428, 0x56e4, 0xbf83, 0x0, 0x1);
        gbc.writeMem(0x2637, { 0xd1 });
        gbc.writeMem(0x6b69, { 0xdd, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6b6b);
        EXPECT(gbc.pc(), 0x2638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0372
        gbc.setState(0x8540, 0xd6b6, 0x8ce0, 0xb582, 0x273e, 0x2a7f, 0x0, 0x1);
        gbc.writeMem(0x8540, { 0xd1 });
        gbc.writeMem(0xd6b6, { 0xc3, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd6b8);
        EXPECT(gbc.pc(), 0x8541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8540), 0xd1);
        EXPECT(gbc.readMem(0xd6b6), 0xc3);
        EXPECT(gbc.readMem(0xd6b7), 0x69);
        // D1 0373
        gbc.setState(0x7c32, 0xc705, 0x9d80, 0xc01d, 0x151d, 0x6949, 0x1, 0x1);
        gbc.writeMem(0x7c32, { 0xd1 });
        gbc.writeMem(0xc705, { 0x8e, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc707);
        EXPECT(gbc.pc(), 0x7c33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc705), 0x8e);
        EXPECT(gbc.readMem(0xc706), 0x7);
        // D1 0374
        gbc.setState(0xc370, 0xcb20, 0xc450, 0xa11c, 0x607f, 0xbbcb, 0x1, 0x0);
        gbc.writeMem(0xc370, { 0xd1 });
        gbc.writeMem(0xcb20, { 0x68, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcb22);
        EXPECT(gbc.pc(), 0xc371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc370), 0xd1);
        EXPECT(gbc.readMem(0xcb20), 0x68);
        EXPECT(gbc.readMem(0xcb21), 0xa2);
        // D1 0375
        gbc.setState(0xcd70, 0x1cd, 0x5aa0, 0x365f, 0x2a26, 0x742f, 0x1, 0x1);
        gbc.writeMem(0x1cd, { 0x9d, 0x3c });
        gbc.writeMem(0xcd70, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1cf);
        EXPECT(gbc.pc(), 0xcd71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd70), 0xd1);
        // D1 0377
        gbc.setState(0xdd5c, 0xade6, 0x91a0, 0x41d3, 0x6256, 0x5f6b, 0x1, 0x0);
        gbc.writeMem(0xade6, { 0x88, 0x2a });
        gbc.writeMem(0xdd5c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xade8);
        EXPECT(gbc.pc(), 0xdd5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade6), 0x88);
        EXPECT(gbc.readMem(0xade7), 0x2a);
        EXPECT(gbc.readMem(0xdd5c), 0xd1);
        // D1 0378
        gbc.setState(0x3fe3, 0xa41f, 0xab00, 0xdc1a, 0x1930, 0x2751, 0x0, 0x1);
        gbc.writeMem(0x3fe3, { 0xd1 });
        gbc.writeMem(0xa41f, { 0xee, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa421);
        EXPECT(gbc.pc(), 0x3fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa41f), 0xee);
        EXPECT(gbc.readMem(0xa420), 0xf5);
        // D1 0379
        gbc.setState(0x7918, 0xaa2, 0xeee0, 0xbc09, 0x1b61, 0xc05, 0x0, 0x1);
        gbc.writeMem(0xaa2, { 0xc7, 0x5e });
        gbc.writeMem(0x7918, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xaa4);
        EXPECT(gbc.pc(), 0x7919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 037A
        gbc.setState(0x490, 0x7867, 0x4e30, 0x78c3, 0x3b5e, 0x6990, 0x1, 0x1);
        gbc.writeMem(0x490, { 0xd1 });
        gbc.writeMem(0x7867, { 0x67, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7869);
        EXPECT(gbc.pc(), 0x491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 037B
        gbc.setState(0xe9f6, 0x8f22, 0xa6a0, 0x2fa0, 0xf937, 0x56d9, 0x0, 0x0);
        gbc.writeMem(0x8f22, { 0x94, 0x48 });
        gbc.writeMem(0xe9f6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8f24);
        EXPECT(gbc.pc(), 0xe9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f22), 0x94);
        EXPECT(gbc.readMem(0x8f23), 0x48);
        EXPECT(gbc.readMem(0xe9f6), 0xd1);
        // D1 037C
        gbc.setState(0x573e, 0x6cd3, 0x3250, 0x7411, 0xb957, 0x7dc1, 0x1, 0x0);
        gbc.writeMem(0x573e, { 0xd1 });
        gbc.writeMem(0x6cd3, { 0xf4, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6cd5);
        EXPECT(gbc.pc(), 0x573f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 037D
        gbc.setState(0x21e0, 0x8c4c, 0x8f30, 0xf389, 0x5232, 0x333b, 0x0, 0x0);
        gbc.writeMem(0x21e0, { 0xd1 });
        gbc.writeMem(0x8c4c, { 0x80, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8c4e);
        EXPECT(gbc.pc(), 0x21e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4c), 0x80);
        EXPECT(gbc.readMem(0x8c4d), 0x10);
        // D1 037F
        gbc.setState(0xc695, 0xd43f, 0x4a50, 0x1179, 0x4f19, 0xfbf9, 0x1, 0x1);
        gbc.writeMem(0xc695, { 0xd1 });
        gbc.writeMem(0xd43f, { 0x84, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd441);
        EXPECT(gbc.pc(), 0xc696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc695), 0xd1);
        EXPECT(gbc.readMem(0xd43f), 0x84);
        EXPECT(gbc.readMem(0xd440), 0x27);
        // D1 0380
        gbc.setState(0xd3f5, 0x3b73, 0xe9d0, 0x72b1, 0xd7b4, 0x96f7, 0x0, 0x0);
        gbc.writeMem(0x3b73, { 0xf, 0x6a });
        gbc.writeMem(0xd3f5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3b75);
        EXPECT(gbc.pc(), 0xd3f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f5), 0xd1);
        // D1 0381
        gbc.setState(0x27e8, 0x6ddc, 0x9530, 0x39d1, 0x5c8c, 0xfda6, 0x1, 0x0);
        gbc.writeMem(0x27e8, { 0xd1 });
        gbc.writeMem(0x6ddc, { 0x1b, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6dde);
        EXPECT(gbc.pc(), 0x27e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0382
        gbc.setState(0x51c7, 0xaaf7, 0x5890, 0xad1, 0x74a3, 0xf144, 0x1, 0x0);
        gbc.writeMem(0x51c7, { 0xd1 });
        gbc.writeMem(0xaaf7, { 0xb9, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xaaf9);
        EXPECT(gbc.pc(), 0x51c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf7), 0xb9);
        EXPECT(gbc.readMem(0xaaf8), 0x30);
        // D1 0383
        gbc.setState(0xa074, 0xcde9, 0x460, 0xf6de, 0x5360, 0x3199, 0x1, 0x0);
        gbc.writeMem(0xa074, { 0xd1 });
        gbc.writeMem(0xcde9, { 0x78, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcdeb);
        EXPECT(gbc.pc(), 0xa075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa074), 0xd1);
        EXPECT(gbc.readMem(0xcde9), 0x78);
        EXPECT(gbc.readMem(0xcdea), 0x97);
        // D1 0384
        gbc.setState(0x1c24, 0x4790, 0x8980, 0xb83b, 0xa153, 0x2174, 0x1, 0x0);
        gbc.writeMem(0x1c24, { 0xd1 });
        gbc.writeMem(0x4790, { 0xb8, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4792);
        EXPECT(gbc.pc(), 0x1c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0385
        gbc.setState(0x4b3b, 0x3a14, 0x5c50, 0xb2b5, 0xeced, 0x699, 0x0, 0x0);
        gbc.writeMem(0x3a14, { 0x9d, 0x31 });
        gbc.writeMem(0x4b3b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3a16);
        EXPECT(gbc.pc(), 0x4b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 0386
        gbc.setState(0xb44, 0x25f4, 0xda80, 0xb0fc, 0x1d1e, 0x39d9, 0x0, 0x0);
        gbc.writeMem(0xb44, { 0xd1 });
        gbc.writeMem(0x25f4, { 0x31, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x25f6);
        EXPECT(gbc.pc(), 0xb45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0387
        gbc.setState(0x90ec, 0x45e4, 0x5100, 0x8ac, 0xca7f, 0x59f5, 0x0, 0x0);
        gbc.writeMem(0x45e4, { 0x76, 0xba });
        gbc.writeMem(0x90ec, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x45e6);
        EXPECT(gbc.pc(), 0x90ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ec), 0xd1);
        // D1 0388
        gbc.setState(0x841d, 0xc07a, 0x27f0, 0xf26a, 0x4094, 0x250b, 0x1, 0x0);
        gbc.writeMem(0x841d, { 0xd1 });
        gbc.writeMem(0xc07a, { 0x7, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc07c);
        EXPECT(gbc.pc(), 0x841e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841d), 0xd1);
        EXPECT(gbc.readMem(0xc07a), 0x7);
        EXPECT(gbc.readMem(0xc07b), 0xda);
        // D1 0389
        gbc.setState(0x660b, 0x6b58, 0xbc40, 0x4abb, 0x7ac9, 0x44ad, 0x1, 0x0);
        gbc.writeMem(0x660b, { 0xd1 });
        gbc.writeMem(0x6b58, { 0x25, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6b5a);
        EXPECT(gbc.pc(), 0x660c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 038A
        gbc.setState(0xd8d9, 0x3aa4, 0x8520, 0xaa10, 0xe464, 0xa0cc, 0x1, 0x0);
        gbc.writeMem(0x3aa4, { 0xe8, 0x53 });
        gbc.writeMem(0xd8d9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3aa6);
        EXPECT(gbc.pc(), 0xd8da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d9), 0xd1);
        // D1 038B
        gbc.setState(0xc75f, 0x60bf, 0x6a60, 0x909e, 0x2e3, 0x5c96, 0x0, 0x0);
        gbc.writeMem(0x60bf, { 0x95, 0xfd });
        gbc.writeMem(0xc75f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x60c1);
        EXPECT(gbc.pc(), 0xc760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc75f), 0xd1);
        // D1 038C
        gbc.setState(0x7b97, 0x1dc8, 0xce10, 0x5fd1, 0x3d0c, 0x720f, 0x0, 0x1);
        gbc.writeMem(0x1dc8, { 0x73, 0x9b });
        gbc.writeMem(0x7b97, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1dca);
        EXPECT(gbc.pc(), 0x7b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 038D
        gbc.setState(0x9d44, 0xa957, 0x5d80, 0xe5ff, 0x8d7f, 0x140d, 0x1, 0x1);
        gbc.writeMem(0x9d44, { 0xd1 });
        gbc.writeMem(0xa957, { 0x72, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa959);
        EXPECT(gbc.pc(), 0x9d45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d44), 0xd1);
        EXPECT(gbc.readMem(0xa957), 0x72);
        EXPECT(gbc.readMem(0xa958), 0xc0);
        // D1 038E
        gbc.setState(0x5b1b, 0xbbaf, 0x2b10, 0x6ea9, 0x4dd6, 0x4dae, 0x0, 0x0);
        gbc.writeMem(0x5b1b, { 0xd1 });
        gbc.writeMem(0xbbaf, { 0xa9, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xbbb1);
        EXPECT(gbc.pc(), 0x5b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbaf), 0xa9);
        EXPECT(gbc.readMem(0xbbb0), 0xc9);
        // D1 038F
        gbc.setState(0x22f2, 0x4d20, 0x86c0, 0x302b, 0xfbb7, 0x96f3, 0x1, 0x0);
        gbc.writeMem(0x22f2, { 0xd1 });
        gbc.writeMem(0x4d20, { 0x7, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4d22);
        EXPECT(gbc.pc(), 0x22f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0391
        gbc.setState(0xea64, 0xefe1, 0x6190, 0x749d, 0xff1d, 0xa7b7, 0x0, 0x1);
        gbc.writeMem(0xea64, { 0xd1 });
        gbc.writeMem(0xefe1, { 0x52, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xefe3);
        EXPECT(gbc.pc(), 0xea65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea64), 0xd1);
        EXPECT(gbc.readMem(0xefe1), 0x52);
        EXPECT(gbc.readMem(0xefe2), 0x4a);
        // D1 0392
        gbc.setState(0x31a6, 0x5d7c, 0x7130, 0x8cb3, 0x4fe, 0x7880, 0x0, 0x0);
        gbc.writeMem(0x31a6, { 0xd1 });
        gbc.writeMem(0x5d7c, { 0x10, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5d7e);
        EXPECT(gbc.pc(), 0x31a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0393
        gbc.setState(0x2b3a, 0x83c5, 0x3eb0, 0x6273, 0xd1ba, 0x9955, 0x1, 0x1);
        gbc.writeMem(0x2b3a, { 0xd1 });
        gbc.writeMem(0x83c5, { 0x4, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x83c7);
        EXPECT(gbc.pc(), 0x2b3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c5), 0x4);
        EXPECT(gbc.readMem(0x83c6), 0x20);
        // D1 0394
        gbc.setState(0x2714, 0x1ed7, 0x9880, 0xd69d, 0x9c96, 0x19cb, 0x1, 0x0);
        gbc.writeMem(0x1ed7, { 0x7e, 0x83 });
        gbc.writeMem(0x2714, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1ed9);
        EXPECT(gbc.pc(), 0x2715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 0395
        gbc.setState(0x82e0, 0xd575, 0xa150, 0x1a38, 0x7b37, 0x3c5e, 0x0, 0x0);
        gbc.writeMem(0x82e0, { 0xd1 });
        gbc.writeMem(0xd575, { 0x49, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd577);
        EXPECT(gbc.pc(), 0x82e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e0), 0xd1);
        EXPECT(gbc.readMem(0xd575), 0x49);
        EXPECT(gbc.readMem(0xd576), 0x29);
        // D1 0396
        gbc.setState(0xa266, 0x66c4, 0x71b0, 0x9e44, 0xa2cd, 0x215, 0x0, 0x1);
        gbc.writeMem(0x66c4, { 0xed, 0x21 });
        gbc.writeMem(0xa266, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x66c6);
        EXPECT(gbc.pc(), 0xa267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa266), 0xd1);
        // D1 0397
        gbc.setState(0x3f1b, 0xd8dc, 0x13c0, 0x1f50, 0xd509, 0xd536, 0x1, 0x0);
        gbc.writeMem(0x3f1b, { 0xd1 });
        gbc.writeMem(0xd8dc, { 0x9d, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd8de);
        EXPECT(gbc.pc(), 0x3f1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8dc), 0x9d);
        EXPECT(gbc.readMem(0xd8dd), 0x47);
        // D1 0398
        gbc.setState(0x7a76, 0x7e05, 0x71b0, 0x4d27, 0x2268, 0xd0d0, 0x1, 0x1);
        gbc.writeMem(0x7a76, { 0xd1 });
        gbc.writeMem(0x7e05, { 0xc6, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7e07);
        EXPECT(gbc.pc(), 0x7a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 0399
        gbc.setState(0x82d6, 0xb91a, 0x1640, 0x31ea, 0x96f, 0x828, 0x1, 0x1);
        gbc.writeMem(0x82d6, { 0xd1 });
        gbc.writeMem(0xb91a, { 0x7a, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb91c);
        EXPECT(gbc.pc(), 0x82d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d6), 0xd1);
        EXPECT(gbc.readMem(0xb91a), 0x7a);
        EXPECT(gbc.readMem(0xb91b), 0xc3);
        // D1 039A
        gbc.setState(0x935f, 0xcd82, 0xe8e0, 0x2ee7, 0xf9d7, 0xc49e, 0x1, 0x1);
        gbc.writeMem(0x935f, { 0xd1 });
        gbc.writeMem(0xcd82, { 0x3d, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xcd84);
        EXPECT(gbc.pc(), 0x9360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x935f), 0xd1);
        EXPECT(gbc.readMem(0xcd82), 0x3d);
        EXPECT(gbc.readMem(0xcd83), 0x9a);
        // D1 039B
        gbc.setState(0x6dbd, 0x16bf, 0x7810, 0x8cbb, 0x6134, 0x1d2b, 0x0, 0x1);
        gbc.writeMem(0x16bf, { 0xd7, 0x3 });
        gbc.writeMem(0x6dbd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x16c1);
        EXPECT(gbc.pc(), 0x6dbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 039C
        gbc.setState(0x418c, 0xe574, 0x1540, 0xac9b, 0xeb7, 0xc8ac, 0x1, 0x1);
        gbc.writeMem(0x418c, { 0xd1 });
        gbc.writeMem(0xe574, { 0x80, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe576);
        EXPECT(gbc.pc(), 0x418d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe574), 0x80);
        EXPECT(gbc.readMem(0xe575), 0xf5);
        // D1 039D
        gbc.setState(0x9468, 0xf5c4, 0x9b00, 0x84b5, 0x898, 0xc9b3, 0x1, 0x0);
        gbc.writeMem(0x9468, { 0xd1 });
        gbc.writeMem(0xf5c4, { 0x41, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf5c6);
        EXPECT(gbc.pc(), 0x9469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9468), 0xd1);
        EXPECT(gbc.readMem(0xf5c4), 0x41);
        EXPECT(gbc.readMem(0xf5c5), 0x49);
        // D1 039E
        gbc.setState(0x6c8, 0x6bb1, 0x8c60, 0x944a, 0x77b8, 0x6bf1, 0x1, 0x1);
        gbc.writeMem(0x6c8, { 0xd1 });
        gbc.writeMem(0x6bb1, { 0x95, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6bb3);
        EXPECT(gbc.pc(), 0x6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 039F
        gbc.setState(0xab76, 0xca94, 0xa440, 0x859c, 0x605a, 0x347b, 0x1, 0x1);
        gbc.writeMem(0xab76, { 0xd1 });
        gbc.writeMem(0xca94, { 0x66, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xca96);
        EXPECT(gbc.pc(), 0xab77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab76), 0xd1);
        EXPECT(gbc.readMem(0xca94), 0x66);
        EXPECT(gbc.readMem(0xca95), 0xbb);
        // D1 03A0
        gbc.setState(0x2f90, 0x6cbe, 0xcdb0, 0xafa9, 0x6b95, 0x9082, 0x1, 0x1);
        gbc.writeMem(0x2f90, { 0xd1 });
        gbc.writeMem(0x6cbe, { 0x6a, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6cc0);
        EXPECT(gbc.pc(), 0x2f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 03A1
        gbc.setState(0xeeff, 0x8908, 0x43e0, 0x27c2, 0xd24a, 0x5fea, 0x0, 0x1);
        gbc.writeMem(0x8908, { 0x0, 0xb5 });
        gbc.writeMem(0xeeff, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x890a);
        EXPECT(gbc.pc(), 0xef00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8908), 0x0);
        EXPECT(gbc.readMem(0x8909), 0xb5);
        EXPECT(gbc.readMem(0xeeff), 0xd1);
        // D1 03A2
        gbc.setState(0x4f9c, 0x2f9f, 0xfb70, 0xb38a, 0x6de5, 0x27bf, 0x1, 0x1);
        gbc.writeMem(0x2f9f, { 0x4b, 0x54 });
        gbc.writeMem(0x4f9c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2fa1);
        EXPECT(gbc.pc(), 0x4f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 03A3
        gbc.setState(0xb3c8, 0x1206, 0x9960, 0x39b, 0x3cf, 0x707, 0x0, 0x1);
        gbc.writeMem(0x1206, { 0xfa, 0xf8 });
        gbc.writeMem(0xb3c8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1208);
        EXPECT(gbc.pc(), 0xb3c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c8), 0xd1);
        // D1 03A5
        gbc.setState(0xc051, 0xb3f3, 0x7330, 0xe41b, 0x794c, 0x746a, 0x0, 0x1);
        gbc.writeMem(0xb3f3, { 0xd9, 0x66 });
        gbc.writeMem(0xc051, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb3f5);
        EXPECT(gbc.pc(), 0xc052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f3), 0xd9);
        EXPECT(gbc.readMem(0xb3f4), 0x66);
        EXPECT(gbc.readMem(0xc051), 0xd1);
        // D1 03A6
        gbc.setState(0xa9d9, 0xa11c, 0x6b70, 0x2e27, 0x16a5, 0xb2c5, 0x0, 0x1);
        gbc.writeMem(0xa11c, { 0xfb, 0x69 });
        gbc.writeMem(0xa9d9, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa11e);
        EXPECT(gbc.pc(), 0xa9da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa11c), 0xfb);
        EXPECT(gbc.readMem(0xa11d), 0x69);
        EXPECT(gbc.readMem(0xa9d9), 0xd1);
        // D1 03A7
        gbc.setState(0x36c2, 0xfca4, 0xdaa0, 0x6056, 0xcd75, 0xa7dd, 0x0, 0x1);
        gbc.writeMem(0x36c2, { 0xd1 });
        gbc.writeMem(0xfca4, { 0xa4, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfca6);
        EXPECT(gbc.pc(), 0x36c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfca4), 0xa4);
        EXPECT(gbc.readMem(0xfca5), 0x1);
        // D1 03A8
        gbc.setState(0xbeb6, 0x3635, 0x7ec0, 0x3c7d, 0x459b, 0x511d, 0x1, 0x1);
        gbc.writeMem(0x3635, { 0xdb, 0xb1 });
        gbc.writeMem(0xbeb6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3637);
        EXPECT(gbc.pc(), 0xbeb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb6), 0xd1);
        // D1 03A9
        gbc.setState(0x3931, 0x5278, 0xadf0, 0xa851, 0x38c9, 0xe7db, 0x0, 0x1);
        gbc.writeMem(0x3931, { 0xd1 });
        gbc.writeMem(0x5278, { 0xeb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x527a);
        EXPECT(gbc.pc(), 0x3932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 03AA
        gbc.setState(0x47c1, 0x2136, 0xaeb0, 0xdbb5, 0xd9c4, 0x9ab9, 0x0, 0x0);
        gbc.writeMem(0x2136, { 0x1f, 0xb1 });
        gbc.writeMem(0x47c1, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2138);
        EXPECT(gbc.pc(), 0x47c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 03AB
        gbc.setState(0xa76a, 0x59df, 0xbb70, 0xd25e, 0x724, 0x6189, 0x0, 0x1);
        gbc.writeMem(0x59df, { 0xb3, 0xaf });
        gbc.writeMem(0xa76a, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x59e1);
        EXPECT(gbc.pc(), 0xa76b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa76a), 0xd1);
        // D1 03AD
        gbc.setState(0xdedc, 0x28b0, 0x5880, 0xabd0, 0x6735, 0x72a5, 0x0, 0x1);
        gbc.writeMem(0x28b0, { 0xfb, 0x87 });
        gbc.writeMem(0xdedc, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x28b2);
        EXPECT(gbc.pc(), 0xdedd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdedc), 0xd1);
        // D1 03AE
        gbc.setState(0x14d2, 0xb724, 0xe110, 0x6e2, 0x8d2b, 0xde2f, 0x0, 0x0);
        gbc.writeMem(0x14d2, { 0xd1 });
        gbc.writeMem(0xb724, { 0x5a, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb726);
        EXPECT(gbc.pc(), 0x14d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb724), 0x5a);
        EXPECT(gbc.readMem(0xb725), 0xbe);
        // D1 03AF
        gbc.setState(0x41b7, 0x1e1d, 0x1180, 0x7cf2, 0x421f, 0x2d8c, 0x0, 0x1);
        gbc.writeMem(0x1e1d, { 0x4d, 0xfb });
        gbc.writeMem(0x41b7, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1e1f);
        EXPECT(gbc.pc(), 0x41b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 03B0
        gbc.setState(0xec37, 0x9a6a, 0xa520, 0xe0da, 0xfd58, 0xb73, 0x0, 0x1);
        gbc.writeMem(0x9a6a, { 0x12, 0xa7 });
        gbc.writeMem(0xec37, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9a6c);
        EXPECT(gbc.pc(), 0xec38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a6a), 0x12);
        EXPECT(gbc.readMem(0x9a6b), 0xa7);
        EXPECT(gbc.readMem(0xec37), 0xd1);
        // D1 03B1
        gbc.setState(0xbd47, 0x78c4, 0x72b0, 0x3b4f, 0xd04e, 0x2ff9, 0x0, 0x0);
        gbc.writeMem(0x78c4, { 0x9a, 0xb2 });
        gbc.writeMem(0xbd47, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x78c6);
        EXPECT(gbc.pc(), 0xbd48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd47), 0xd1);
        // D1 03B2
        gbc.setState(0x380c, 0xdd73, 0x9ea0, 0xe01c, 0xff1b, 0x962, 0x0, 0x1);
        gbc.writeMem(0x380c, { 0xd1 });
        gbc.writeMem(0xdd73, { 0x49, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xdd75);
        EXPECT(gbc.pc(), 0x380d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd73), 0x49);
        EXPECT(gbc.readMem(0xdd74), 0x20);
        // D1 03B3
        gbc.setState(0x9c77, 0x8844, 0x30a0, 0x77dd, 0xaed7, 0x80ec, 0x0, 0x1);
        gbc.writeMem(0x8844, { 0x7e, 0x10 });
        gbc.writeMem(0x9c77, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8846);
        EXPECT(gbc.pc(), 0x9c78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8844), 0x7e);
        EXPECT(gbc.readMem(0x8845), 0x10);
        EXPECT(gbc.readMem(0x9c77), 0xd1);
        // D1 03B4
        gbc.setState(0xbfea, 0x5e59, 0x30b0, 0xa86d, 0xcc9f, 0x3972, 0x0, 0x0);
        gbc.writeMem(0x5e59, { 0xe4, 0x2e });
        gbc.writeMem(0xbfea, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5e5b);
        EXPECT(gbc.pc(), 0xbfeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfea), 0xd1);
        // D1 03B5
        gbc.setState(0xc009, 0x6ec3, 0x6360, 0xdf78, 0xf60f, 0xab28, 0x0, 0x1);
        gbc.writeMem(0x6ec3, { 0x92, 0x65 });
        gbc.writeMem(0xc009, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6ec5);
        EXPECT(gbc.pc(), 0xc00a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc009), 0xd1);
        // D1 03B6
        gbc.setState(0xc00c, 0x35b, 0xe790, 0xd5c7, 0x4ec3, 0x925d, 0x1, 0x1);
        gbc.writeMem(0x35b, { 0xd2, 0xef });
        gbc.writeMem(0xc00c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x35d);
        EXPECT(gbc.pc(), 0xc00d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc00c), 0xd1);
        // D1 03B7
        gbc.setState(0xd4ca, 0x6c75, 0x5eb0, 0x2dc8, 0x1884, 0x8ad3, 0x0, 0x1);
        gbc.writeMem(0x6c75, { 0xef, 0xa });
        gbc.writeMem(0xd4ca, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6c77);
        EXPECT(gbc.pc(), 0xd4cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ca), 0xd1);
        // D1 03B8
        gbc.setState(0xd68f, 0x9fc8, 0x9350, 0x6130, 0x24c5, 0xee47, 0x1, 0x0);
        gbc.writeMem(0x9fc8, { 0xc1, 0x17 });
        gbc.writeMem(0xd68f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9fca);
        EXPECT(gbc.pc(), 0xd690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc8), 0xc1);
        EXPECT(gbc.readMem(0x9fc9), 0x17);
        EXPECT(gbc.readMem(0xd68f), 0xd1);
        // D1 03B9
        gbc.setState(0x36b7, 0xd582, 0xc280, 0x817f, 0x65f5, 0x7241, 0x1, 0x0);
        gbc.writeMem(0x36b7, { 0xd1 });
        gbc.writeMem(0xd582, { 0x71, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd584);
        EXPECT(gbc.pc(), 0x36b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd582), 0x71);
        EXPECT(gbc.readMem(0xd583), 0xd0);
        // D1 03BA
        gbc.setState(0x80f6, 0x2439, 0xdbd0, 0xad81, 0xe17, 0xa064, 0x1, 0x1);
        gbc.writeMem(0x2439, { 0x41, 0xb6 });
        gbc.writeMem(0x80f6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x243b);
        EXPECT(gbc.pc(), 0x80f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f6), 0xd1);
        // D1 03BB
        gbc.setState(0xa4ad, 0x9275, 0xbed0, 0x80c6, 0x13df, 0x1b23, 0x0, 0x0);
        gbc.writeMem(0x9275, { 0xc2, 0xcc });
        gbc.writeMem(0xa4ad, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9277);
        EXPECT(gbc.pc(), 0xa4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9275), 0xc2);
        EXPECT(gbc.readMem(0x9276), 0xcc);
        EXPECT(gbc.readMem(0xa4ad), 0xd1);
        // D1 03BC
        gbc.setState(0x6870, 0xbf2b, 0xd4f0, 0x766d, 0x94ee, 0xb6a0, 0x0, 0x0);
        gbc.writeMem(0x6870, { 0xd1 });
        gbc.writeMem(0xbf2b, { 0xe4, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xbf2d);
        EXPECT(gbc.pc(), 0x6871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2b), 0xe4);
        EXPECT(gbc.readMem(0xbf2c), 0x2e);
        // D1 03BD
        gbc.setState(0x31b, 0xdfce, 0x4750, 0xdc24, 0x210, 0xcd45, 0x0, 0x1);
        gbc.writeMem(0x31b, { 0xd1 });
        gbc.writeMem(0xdfce, { 0xe4, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdfd0);
        EXPECT(gbc.pc(), 0x31c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfce), 0xe4);
        EXPECT(gbc.readMem(0xdfcf), 0xb1);
        // D1 03BE
        gbc.setState(0xc780, 0xa3ff, 0x43d0, 0xd2da, 0x2018, 0x2fd0, 0x0, 0x0);
        gbc.writeMem(0xa3ff, { 0x29, 0xed });
        gbc.writeMem(0xc780, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa401);
        EXPECT(gbc.pc(), 0xc781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ff), 0x29);
        EXPECT(gbc.readMem(0xa400), 0xed);
        EXPECT(gbc.readMem(0xc780), 0xd1);
        // D1 03BF
        gbc.setState(0x4798, 0x8776, 0x99a0, 0xd35, 0x3e9c, 0xb00c, 0x0, 0x1);
        gbc.writeMem(0x4798, { 0xd1 });
        gbc.writeMem(0x8776, { 0x99, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8778);
        EXPECT(gbc.pc(), 0x4799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8776), 0x99);
        EXPECT(gbc.readMem(0x8777), 0xf);
        // D1 03C0
        gbc.setState(0xefb, 0xecf8, 0xe990, 0xe288, 0x91fb, 0xfb6f, 0x1, 0x1);
        gbc.writeMem(0xefb, { 0xd1 });
        gbc.writeMem(0xecf8, { 0x76, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xecfa);
        EXPECT(gbc.pc(), 0xefc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf8), 0x76);
        EXPECT(gbc.readMem(0xecf9), 0x14);
        // D1 03C1
        gbc.setState(0xaa0, 0x1b3c, 0xf170, 0xcc81, 0x99d6, 0x77b7, 0x0, 0x0);
        gbc.writeMem(0xaa0, { 0xd1 });
        gbc.writeMem(0x1b3c, { 0xc3, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1b3e);
        EXPECT(gbc.pc(), 0xaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 03C2
        gbc.setState(0x31a0, 0x3074, 0x4b00, 0x77c4, 0x625e, 0x2618, 0x0, 0x0);
        gbc.writeMem(0x3074, { 0x54, 0x0 });
        gbc.writeMem(0x31a0, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3076);
        EXPECT(gbc.pc(), 0x31a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 03C3
        gbc.setState(0x2382, 0x94c3, 0x7de0, 0x7002, 0x5c7, 0x38f9, 0x0, 0x1);
        gbc.writeMem(0x2382, { 0xd1 });
        gbc.writeMem(0x94c3, { 0xb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x94c5);
        EXPECT(gbc.pc(), 0x2383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94c3), 0xb);
        EXPECT(gbc.readMem(0x94c4), 0xfd);
        // D1 03C4
        gbc.setState(0x4abd, 0x116, 0x7060, 0xa6d, 0x2b65, 0x8801, 0x1, 0x1);
        gbc.writeMem(0x116, { 0x58, 0xb1 });
        gbc.writeMem(0x4abd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x118);
        EXPECT(gbc.pc(), 0x4abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 03C5
        gbc.setState(0x7ad7, 0x4e5d, 0x1970, 0xd910, 0xe44c, 0xe9c4, 0x1, 0x1);
        gbc.writeMem(0x4e5d, { 0x42, 0x46 });
        gbc.writeMem(0x7ad7, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4e5f);
        EXPECT(gbc.pc(), 0x7ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 03C6
        gbc.setState(0x976a, 0xbb9a, 0x75d0, 0xe316, 0x737f, 0x1130, 0x0, 0x1);
        gbc.writeMem(0x976a, { 0xd1 });
        gbc.writeMem(0xbb9a, { 0x64, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xbb9c);
        EXPECT(gbc.pc(), 0x976b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x976a), 0xd1);
        EXPECT(gbc.readMem(0xbb9a), 0x64);
        EXPECT(gbc.readMem(0xbb9b), 0x7e);
        // D1 03C7
        gbc.setState(0xcd18, 0xe622, 0x78b0, 0xd968, 0xe041, 0xdad0, 0x1, 0x0);
        gbc.writeMem(0xcd18, { 0xd1 });
        gbc.writeMem(0xe622, { 0x5c, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe624);
        EXPECT(gbc.pc(), 0xcd19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd18), 0xd1);
        EXPECT(gbc.readMem(0xe622), 0x5c);
        EXPECT(gbc.readMem(0xe623), 0xcd);
        // D1 03C8
        gbc.setState(0x928, 0xbb3f, 0x140, 0x721f, 0x1ae8, 0x874, 0x1, 0x0);
        gbc.writeMem(0x928, { 0xd1 });
        gbc.writeMem(0xbb3f, { 0x60, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbb41);
        EXPECT(gbc.pc(), 0x929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb3f), 0x60);
        EXPECT(gbc.readMem(0xbb40), 0xc2);
        // D1 03C9
        gbc.setState(0x62e8, 0xbf6e, 0x3540, 0x9afa, 0x97a7, 0x448c, 0x0, 0x1);
        gbc.writeMem(0x62e8, { 0xd1 });
        gbc.writeMem(0xbf6e, { 0xa0, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbf70);
        EXPECT(gbc.pc(), 0x62e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf6e), 0xa0);
        EXPECT(gbc.readMem(0xbf6f), 0x26);
        // D1 03CA
        gbc.setState(0x6d9f, 0x742, 0x7e0, 0xad67, 0x4740, 0xc2b2, 0x1, 0x0);
        gbc.writeMem(0x742, { 0x95, 0x77 });
        gbc.writeMem(0x6d9f, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x744);
        EXPECT(gbc.pc(), 0x6da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 03CB
        gbc.setState(0xe1f2, 0x1f69, 0xd4d0, 0xd7f5, 0x17f2, 0x112a, 0x0, 0x1);
        gbc.writeMem(0x1f69, { 0xc9, 0x76 });
        gbc.writeMem(0xe1f2, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1f6b);
        EXPECT(gbc.pc(), 0xe1f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f2), 0xd1);
        // D1 03CC
        gbc.setState(0x4f18, 0xe8fe, 0xa970, 0x5f2d, 0xa69a, 0x1287, 0x1, 0x1);
        gbc.writeMem(0x4f18, { 0xd1 });
        gbc.writeMem(0xe8fe, { 0x45, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe900);
        EXPECT(gbc.pc(), 0x4f19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8fe), 0x45);
        EXPECT(gbc.readMem(0xe8ff), 0x3f);
        // D1 03CD
        gbc.setState(0x55ef, 0x5454, 0x2000, 0xc62c, 0xc162, 0x3e, 0x0, 0x0);
        gbc.writeMem(0x5454, { 0xf7, 0xb8 });
        gbc.writeMem(0x55ef, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5456);
        EXPECT(gbc.pc(), 0x55f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 03CE
        gbc.setState(0x11b8, 0x3583, 0x5620, 0xe288, 0x9780, 0xbb14, 0x0, 0x0);
        gbc.writeMem(0x11b8, { 0xd1 });
        gbc.writeMem(0x3583, { 0xea, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3585);
        EXPECT(gbc.pc(), 0x11b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 03CF
        gbc.setState(0xb4eb, 0x4cfc, 0x5c80, 0x3f16, 0xdd5c, 0x219c, 0x0, 0x0);
        gbc.writeMem(0x4cfc, { 0x35, 0x1e });
        gbc.writeMem(0xb4eb, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4cfe);
        EXPECT(gbc.pc(), 0xb4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4eb), 0xd1);
        // D1 03D0
        gbc.setState(0x4b42, 0x166d, 0xe220, 0x5f96, 0xb463, 0x8342, 0x0, 0x1);
        gbc.writeMem(0x166d, { 0xfe, 0x7b });
        gbc.writeMem(0x4b42, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x166f);
        EXPECT(gbc.pc(), 0x4b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 03D2
        gbc.setState(0x6e94, 0xd4a, 0xe950, 0x3b1d, 0xd496, 0x6d9, 0x1, 0x0);
        gbc.writeMem(0xd4a, { 0x52, 0x16 });
        gbc.writeMem(0x6e94, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd4c);
        EXPECT(gbc.pc(), 0x6e95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 03D3
        gbc.setState(0xedfc, 0xc325, 0x5d20, 0xd506, 0x9425, 0x92c1, 0x0, 0x0);
        gbc.writeMem(0xc325, { 0xb1, 0x23 });
        gbc.writeMem(0xedfc, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc327);
        EXPECT(gbc.pc(), 0xedfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc325), 0xb1);
        EXPECT(gbc.readMem(0xc326), 0x23);
        EXPECT(gbc.readMem(0xedfc), 0xd1);
        // D1 03D4
        gbc.setState(0xa692, 0x67c0, 0xcae0, 0x4a9b, 0x7953, 0xc8d6, 0x1, 0x0);
        gbc.writeMem(0x67c0, { 0x1, 0xd1 });
        gbc.writeMem(0xa692, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x67c2);
        EXPECT(gbc.pc(), 0xa693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa692), 0xd1);
        // D1 03D5
        gbc.setState(0x76bf, 0x5e97, 0xb740, 0xee76, 0x6a53, 0x9b10, 0x1, 0x0);
        gbc.writeMem(0x5e97, { 0xa, 0x49 });
        gbc.writeMem(0x76bf, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5e99);
        EXPECT(gbc.pc(), 0x76c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 03D6
        gbc.setState(0x5103, 0x2b0f, 0x58b0, 0x9b56, 0x2f00, 0x4423, 0x1, 0x0);
        gbc.writeMem(0x2b0f, { 0xe2, 0x9a });
        gbc.writeMem(0x5103, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2b11);
        EXPECT(gbc.pc(), 0x5104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 03D7
        gbc.setState(0x77aa, 0xb4ef, 0x86d0, 0x8522, 0xfe41, 0xbb01, 0x1, 0x1);
        gbc.writeMem(0x77aa, { 0xd1 });
        gbc.writeMem(0xb4ef, { 0x9b, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb4f1);
        EXPECT(gbc.pc(), 0x77ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ef), 0x9b);
        EXPECT(gbc.readMem(0xb4f0), 0xb9);
        // D1 03D9
        gbc.setState(0x4ee5, 0x783f, 0xffd0, 0x396a, 0x6a67, 0xa5b7, 0x1, 0x0);
        gbc.writeMem(0x4ee5, { 0xd1 });
        gbc.writeMem(0x783f, { 0x2c, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7841);
        EXPECT(gbc.pc(), 0x4ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D1 03DA
        gbc.setState(0xc7fa, 0x124a, 0x7580, 0x156a, 0x8c8a, 0x5b0e, 0x1, 0x1);
        gbc.writeMem(0x124a, { 0x97, 0x6b });
        gbc.writeMem(0xc7fa, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x124c);
        EXPECT(gbc.pc(), 0xc7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7fa), 0xd1);
        // D1 03DB
        gbc.setState(0x254c, 0x7e36, 0x7770, 0xa92, 0xffe0, 0xc9fb, 0x1, 0x0);
        gbc.writeMem(0x254c, { 0xd1 });
        gbc.writeMem(0x7e36, { 0xb9, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7e38);
        EXPECT(gbc.pc(), 0x254d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 03DC
        gbc.setState(0x2bd5, 0x1a68, 0x9840, 0xf903, 0x1b3, 0x314f, 0x0, 0x1);
        gbc.writeMem(0x1a68, { 0xac, 0x29 });
        gbc.writeMem(0x2bd5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1a6a);
        EXPECT(gbc.pc(), 0x2bd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D1 03DD
        gbc.setState(0x213c, 0x1ef6, 0x64f0, 0xa67f, 0x90b2, 0xd01f, 0x1, 0x1);
        gbc.writeMem(0x1ef6, { 0xe8, 0xc6 });
        gbc.writeMem(0x213c, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1ef8);
        EXPECT(gbc.pc(), 0x213d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 03DE
        gbc.setState(0x444b, 0x9931, 0xf7f0, 0x22a7, 0x2403, 0x48d0, 0x1, 0x1);
        gbc.writeMem(0x444b, { 0xd1 });
        gbc.writeMem(0x9931, { 0xa2, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9933);
        EXPECT(gbc.pc(), 0x444c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9931), 0xa2);
        EXPECT(gbc.readMem(0x9932), 0x3c);
        // D1 03DF
        gbc.setState(0x1ba9, 0xc1bd, 0x2220, 0xdc59, 0xa789, 0x954f, 0x1, 0x1);
        gbc.writeMem(0x1ba9, { 0xd1 });
        gbc.writeMem(0xc1bd, { 0x5f, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc1bf);
        EXPECT(gbc.pc(), 0x1baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1bd), 0x5f);
        EXPECT(gbc.readMem(0xc1be), 0x95);
        // D1 03E0
        gbc.setState(0x1ba5, 0xec3, 0x920, 0x72f, 0xd436, 0x7237, 0x0, 0x0);
        gbc.writeMem(0xec3, { 0x81, 0xb });
        gbc.writeMem(0x1ba5, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xec5);
        EXPECT(gbc.pc(), 0x1ba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 03E1
        gbc.setState(0x6914, 0x3fe6, 0xefe0, 0x2a0f, 0xc168, 0x5d38, 0x0, 0x0);
        gbc.writeMem(0x3fe6, { 0x84, 0x18 });
        gbc.writeMem(0x6914, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3fe8);
        EXPECT(gbc.pc(), 0x6915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 03E2
        gbc.setState(0x2ee3, 0xb988, 0xcc30, 0xb11f, 0x7267, 0xa0d1, 0x0, 0x0);
        gbc.writeMem(0x2ee3, { 0xd1 });
        gbc.writeMem(0xb988, { 0x25, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb98a);
        EXPECT(gbc.pc(), 0x2ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb988), 0x25);
        EXPECT(gbc.readMem(0xb989), 0x70);
        // D1 03E3
        gbc.setState(0x83e7, 0xb782, 0xa1b0, 0x9a07, 0xd61e, 0xdab7, 0x0, 0x1);
        gbc.writeMem(0x83e7, { 0xd1 });
        gbc.writeMem(0xb782, { 0xbd, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb784);
        EXPECT(gbc.pc(), 0x83e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e7), 0xd1);
        EXPECT(gbc.readMem(0xb782), 0xbd);
        EXPECT(gbc.readMem(0xb783), 0xd4);
        // D1 03E4
        gbc.setState(0x6f0d, 0xa90, 0xadb0, 0xe28b, 0xc72e, 0x96da, 0x1, 0x0);
        gbc.writeMem(0xa90, { 0x3e, 0xcf });
        gbc.writeMem(0x6f0d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa92);
        EXPECT(gbc.pc(), 0x6f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D1 03E5
        gbc.setState(0xb0c8, 0x6870, 0x1340, 0x3a87, 0x1c45, 0xf176, 0x0, 0x0);
        gbc.writeMem(0x6870, { 0xf1, 0x21 });
        gbc.writeMem(0xb0c8, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6872);
        EXPECT(gbc.pc(), 0xb0c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c8), 0xd1);
        // D1 03E6
        gbc.setState(0x544b, 0x504b, 0x6f20, 0x2721, 0x834f, 0x1eb6, 0x1, 0x1);
        gbc.writeMem(0x504b, { 0xc4, 0xec });
        gbc.writeMem(0x544b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x504d);
        EXPECT(gbc.pc(), 0x544c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D1 03E7
        gbc.setState(0x2376, 0x4c97, 0x6a30, 0x53d3, 0x74a5, 0xc797, 0x0, 0x0);
        gbc.writeMem(0x2376, { 0xd1 });
        gbc.writeMem(0x4c97, { 0x59, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4c99);
        EXPECT(gbc.pc(), 0x2377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
