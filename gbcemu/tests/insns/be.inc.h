    TEST(gbcemu, opcode_be) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // BE 0000
        gbc.setState(0xad8c, 0x1db3, 0xa6c0, 0x7a27, 0x3479, 0x8b0a, 0x0, 0x1);
        gbc.writeMem(0x8b0a, { 0xe1 });
        gbc.writeMem(0xad8c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1db3);
        EXPECT(gbc.pc(), 0xad8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b0a), 0xe1);
        EXPECT(gbc.readMem(0xad8c), 0xbe);
        // BE 0002
        gbc.setState(0x23ec, 0xf0f8, 0x5760, 0x546b, 0x306, 0xeb0c, 0x0, 0x1);
        gbc.writeMem(0x23ec, { 0xbe });
        gbc.writeMem(0xeb0c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf0f8);
        EXPECT(gbc.pc(), 0x23ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0c), 0x10);
        // BE 0003
        gbc.setState(0x3ee8, 0xb336, 0xdb40, 0x1ee9, 0x68a5, 0x8f1c, 0x0, 0x1);
        gbc.writeMem(0x3ee8, { 0xbe });
        gbc.writeMem(0x8f1c, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb336);
        EXPECT(gbc.pc(), 0x3ee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1c), 0xed);
        // BE 0005
        gbc.setState(0x8380, 0x29ec, 0x49f0, 0xa713, 0xd349, 0xa3a2, 0x1, 0x1);
        gbc.writeMem(0x8380, { 0xbe });
        gbc.writeMem(0xa3a2, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x29ec);
        EXPECT(gbc.pc(), 0x8381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8380), 0xbe);
        EXPECT(gbc.readMem(0xa3a2), 0x33);
        // BE 0006
        gbc.setState(0x9544, 0xf15c, 0x6b80, 0xaf3b, 0xa063, 0xae4c, 0x1, 0x1);
        gbc.writeMem(0x9544, { 0xbe });
        gbc.writeMem(0xae4c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf15c);
        EXPECT(gbc.pc(), 0x9545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9544), 0xbe);
        EXPECT(gbc.readMem(0xae4c), 0x8c);
        // BE 0007
        gbc.setState(0x10e3, 0x2a7, 0x80a0, 0xd329, 0x599, 0x381e, 0x0, 0x1);
        gbc.writeMem(0x10e3, { 0xbe });
        gbc.writeMem(0x381e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2a7);
        EXPECT(gbc.pc(), 0x10e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0008
        gbc.setState(0x222e, 0x5060, 0xf940, 0xaf8d, 0x6ce0, 0x4850, 0x1, 0x1);
        gbc.writeMem(0x222e, { 0xbe });
        gbc.writeMem(0x4850, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5060);
        EXPECT(gbc.pc(), 0x222f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0009
        gbc.setState(0x80de, 0x1463, 0xe150, 0xe8e5, 0xcf3f, 0x6081, 0x0, 0x0);
        gbc.writeMem(0x6081, { 0xb0 });
        gbc.writeMem(0x80de, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1463);
        EXPECT(gbc.pc(), 0x80df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80de), 0xbe);
        // BE 000A
        gbc.setState(0xb5ab, 0x798b, 0x3130, 0x9618, 0x6a4, 0xf9e0, 0x0, 0x0);
        gbc.writeMem(0xb5ab, { 0xbe });
        gbc.writeMem(0xf9e0, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x798b);
        EXPECT(gbc.pc(), 0xb5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ab), 0xbe);
        EXPECT(gbc.readMem(0xf9e0), 0xdd);
        // BE 000B
        gbc.setState(0x1275, 0xe9f, 0x8c10, 0x142c, 0x2958, 0xfc13, 0x1, 0x1);
        gbc.writeMem(0x1275, { 0xbe });
        gbc.writeMem(0xfc13, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe9f);
        EXPECT(gbc.pc(), 0x1276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc13), 0x92);
        // BE 000C
        gbc.setState(0xc7e7, 0x1530, 0x9650, 0x4915, 0x266f, 0x31cd, 0x1, 0x0);
        gbc.writeMem(0x31cd, { 0x83 });
        gbc.writeMem(0xc7e7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1530);
        EXPECT(gbc.pc(), 0xc7e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e7), 0xbe);
        // BE 000D
        gbc.setState(0x8b45, 0xcd4, 0xf480, 0x8474, 0x542c, 0xd6e9, 0x1, 0x1);
        gbc.writeMem(0x8b45, { 0xbe });
        gbc.writeMem(0xd6e9, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcd4);
        EXPECT(gbc.pc(), 0x8b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b45), 0xbe);
        EXPECT(gbc.readMem(0xd6e9), 0x6d);
        // BE 000E
        gbc.setState(0x4c05, 0xeadc, 0xec20, 0xc67b, 0x2940, 0xe73e, 0x0, 0x0);
        gbc.writeMem(0x4c05, { 0xbe });
        gbc.writeMem(0xe73e, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xeadc);
        EXPECT(gbc.pc(), 0x4c06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe73e), 0x6e);
        // BE 000F
        gbc.setState(0xaefe, 0x5f3b, 0xa000, 0xc144, 0xc9f6, 0x5125, 0x1, 0x0);
        gbc.writeMem(0x5125, { 0x1f });
        gbc.writeMem(0xaefe, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5f3b);
        EXPECT(gbc.pc(), 0xaeff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaefe), 0xbe);
        // BE 0010
        gbc.setState(0xcee, 0xf5ec, 0xb2c0, 0x43d, 0xc0af, 0x7227, 0x0, 0x0);
        gbc.writeMem(0xcee, { 0xbe });
        gbc.writeMem(0x7227, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf5ec);
        EXPECT(gbc.pc(), 0xcef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0011
        gbc.setState(0x82e6, 0xb50a, 0x5200, 0xc630, 0x399, 0xe016, 0x0, 0x1);
        gbc.writeMem(0x82e6, { 0xbe });
        gbc.writeMem(0xe016, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb50a);
        EXPECT(gbc.pc(), 0x82e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e6), 0xbe);
        EXPECT(gbc.readMem(0xe016), 0xa0);
        // BE 0012
        gbc.setState(0x946d, 0x8410, 0xf180, 0x899f, 0x8a8e, 0x685b, 0x0, 0x0);
        gbc.writeMem(0x685b, { 0x5 });
        gbc.writeMem(0x946d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8410);
        EXPECT(gbc.pc(), 0x946e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x946d), 0xbe);
        // BE 0013
        gbc.setState(0xed34, 0xbf4e, 0x6010, 0x68e0, 0x78a8, 0x97d, 0x1, 0x0);
        gbc.writeMem(0x97d, { 0x5f });
        gbc.writeMem(0xed34, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbf4e);
        EXPECT(gbc.pc(), 0xed35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed34), 0xbe);
        // BE 0014
        gbc.setState(0xbf6c, 0xaf5, 0x5b50, 0x7067, 0xcf59, 0x6dc4, 0x1, 0x0);
        gbc.writeMem(0x6dc4, { 0x63 });
        gbc.writeMem(0xbf6c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xaf5);
        EXPECT(gbc.pc(), 0xbf6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf6c), 0xbe);
        // BE 0015
        gbc.setState(0x4dcd, 0xa63b, 0x6910, 0x1cfc, 0x3403, 0xda8a, 0x1, 0x1);
        gbc.writeMem(0x4dcd, { 0xbe });
        gbc.writeMem(0xda8a, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa63b);
        EXPECT(gbc.pc(), 0x4dce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8a), 0x1a);
        // BE 0016
        gbc.setState(0xf8d, 0x251f, 0xdf40, 0x77e3, 0x56cf, 0x1fb3, 0x0, 0x1);
        gbc.writeMem(0xf8d, { 0xbe });
        gbc.writeMem(0x1fb3, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x251f);
        EXPECT(gbc.pc(), 0xf8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0017
        gbc.setState(0x81e4, 0xf4ca, 0xdb40, 0x681a, 0x292e, 0x88ab, 0x0, 0x0);
        gbc.writeMem(0x81e4, { 0xbe });
        gbc.writeMem(0x88ab, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf4ca);
        EXPECT(gbc.pc(), 0x81e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e4), 0xbe);
        EXPECT(gbc.readMem(0x88ab), 0x5b);
        // BE 0018
        gbc.setState(0x33b1, 0xff4a, 0xe5c0, 0x48b3, 0x98e4, 0x2237, 0x0, 0x0);
        gbc.writeMem(0x2237, { 0xd5 });
        gbc.writeMem(0x33b1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xff4a);
        EXPECT(gbc.pc(), 0x33b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0019
        gbc.setState(0xeeec, 0x128c, 0x9140, 0xe219, 0x37e0, 0xa846, 0x1, 0x0);
        gbc.writeMem(0xa846, { 0x97 });
        gbc.writeMem(0xeeec, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x128c);
        EXPECT(gbc.pc(), 0xeeed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa846), 0x97);
        EXPECT(gbc.readMem(0xeeec), 0xbe);
        // BE 001A
        gbc.setState(0xdeba, 0x716e, 0x96d0, 0xd576, 0xebb4, 0x5bb2, 0x1, 0x1);
        gbc.writeMem(0x5bb2, { 0x69 });
        gbc.writeMem(0xdeba, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x716e);
        EXPECT(gbc.pc(), 0xdebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeba), 0xbe);
        // BE 001B
        gbc.setState(0x7d5, 0x1ea2, 0x1930, 0x344d, 0x830b, 0x7af6, 0x1, 0x1);
        gbc.writeMem(0x7d5, { 0xbe });
        gbc.writeMem(0x7af6, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1ea2);
        EXPECT(gbc.pc(), 0x7d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 001C
        gbc.setState(0x3ef, 0x51ba, 0xa950, 0xecd, 0x2246, 0xb456, 0x0, 0x0);
        gbc.writeMem(0x3ef, { 0xbe });
        gbc.writeMem(0xb456, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x51ba);
        EXPECT(gbc.pc(), 0x3f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb456), 0xbb);
        // BE 001D
        gbc.setState(0x9f13, 0xc748, 0x8790, 0xf6fd, 0x4f53, 0x81a1, 0x0, 0x0);
        gbc.writeMem(0x81a1, { 0x81 });
        gbc.writeMem(0x9f13, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc748);
        EXPECT(gbc.pc(), 0x9f14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a1), 0x81);
        EXPECT(gbc.readMem(0x9f13), 0xbe);
        // BE 001E
        gbc.setState(0xedba, 0xbdab, 0xff10, 0x600a, 0xbb11, 0xab24, 0x0, 0x1);
        gbc.writeMem(0xab24, { 0x34 });
        gbc.writeMem(0xedba, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbdab);
        EXPECT(gbc.pc(), 0xedbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab24), 0x34);
        EXPECT(gbc.readMem(0xedba), 0xbe);
        // BE 001F
        gbc.setState(0x672f, 0xf2cf, 0x4080, 0x3156, 0x8f92, 0x9a2b, 0x1, 0x1);
        gbc.writeMem(0x672f, { 0xbe });
        gbc.writeMem(0x9a2b, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf2cf);
        EXPECT(gbc.pc(), 0x6730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2b), 0x88);
        // BE 0020
        gbc.setState(0x916c, 0x79eb, 0xfed0, 0x6ea2, 0xa7f6, 0xc5c8, 0x0, 0x0);
        gbc.writeMem(0x916c, { 0xbe });
        gbc.writeMem(0xc5c8, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x79eb);
        EXPECT(gbc.pc(), 0x916d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x916c), 0xbe);
        EXPECT(gbc.readMem(0xc5c8), 0xf);
        // BE 0021
        gbc.setState(0x9425, 0xa82d, 0xe740, 0x36c0, 0xbc6f, 0x24eb, 0x0, 0x0);
        gbc.writeMem(0x24eb, { 0x75 });
        gbc.writeMem(0x9425, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa82d);
        EXPECT(gbc.pc(), 0x9426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9425), 0xbe);
        // BE 0022
        gbc.setState(0xc41, 0x19cb, 0xced0, 0xb72f, 0xa3ea, 0x4ccd, 0x1, 0x1);
        gbc.writeMem(0xc41, { 0xbe });
        gbc.writeMem(0x4ccd, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x19cb);
        EXPECT(gbc.pc(), 0xc42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0023
        gbc.setState(0x4472, 0x7ad7, 0xea20, 0x5065, 0x4a30, 0x2506, 0x0, 0x1);
        gbc.writeMem(0x2506, { 0xb0 });
        gbc.writeMem(0x4472, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7ad7);
        EXPECT(gbc.pc(), 0x4473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0024
        gbc.setState(0x7062, 0xe444, 0xb440, 0x3e9c, 0x92e3, 0x886d, 0x1, 0x1);
        gbc.writeMem(0x7062, { 0xbe });
        gbc.writeMem(0x886d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe444);
        EXPECT(gbc.pc(), 0x7063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886d), 0x29);
        // BE 0025
        gbc.setState(0xefb1, 0x4a52, 0x6ba0, 0x3758, 0x359a, 0x270c, 0x0, 0x0);
        gbc.writeMem(0x270c, { 0xec });
        gbc.writeMem(0xefb1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4a52);
        EXPECT(gbc.pc(), 0xefb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb1), 0xbe);
        // BE 0026
        gbc.setState(0x5f08, 0xa1c2, 0x46c0, 0xc61d, 0x345b, 0xeeb, 0x0, 0x0);
        gbc.writeMem(0xeeb, { 0x7a });
        gbc.writeMem(0x5f08, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa1c2);
        EXPECT(gbc.pc(), 0x5f09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0027
        gbc.setState(0x98e, 0xc984, 0x2730, 0xb683, 0xf40e, 0x9fb, 0x1, 0x1);
        gbc.writeMem(0x98e, { 0xbe });
        gbc.writeMem(0x9fb, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc984);
        EXPECT(gbc.pc(), 0x98f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0028
        gbc.setState(0x29d6, 0xe428, 0x5a0, 0xf8ed, 0x2287, 0x57ca, 0x1, 0x1);
        gbc.writeMem(0x29d6, { 0xbe });
        gbc.writeMem(0x57ca, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe428);
        EXPECT(gbc.pc(), 0x29d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0029
        gbc.setState(0x9169, 0x3ab3, 0xb0e0, 0x5dd1, 0xfc74, 0x9d8c, 0x0, 0x0);
        gbc.writeMem(0x9169, { 0xbe });
        gbc.writeMem(0x9d8c, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3ab3);
        EXPECT(gbc.pc(), 0x916a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9169), 0xbe);
        EXPECT(gbc.readMem(0x9d8c), 0x5b);
        // BE 002B
        gbc.setState(0x46fe, 0x5a3c, 0x2e30, 0x6e0e, 0xc70b, 0x2bf0, 0x0, 0x0);
        gbc.writeMem(0x2bf0, { 0xc5 });
        gbc.writeMem(0x46fe, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5a3c);
        EXPECT(gbc.pc(), 0x46ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 002C
        gbc.setState(0xb8be, 0x168a, 0x1310, 0xbc48, 0x66e1, 0xb147, 0x1, 0x1);
        gbc.writeMem(0xb147, { 0x30 });
        gbc.writeMem(0xb8be, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x168a);
        EXPECT(gbc.pc(), 0xb8bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb147), 0x30);
        EXPECT(gbc.readMem(0xb8be), 0xbe);
        // BE 002D
        gbc.setState(0x8c35, 0xb31e, 0x1500, 0x1e59, 0x5dce, 0x2cd8, 0x0, 0x1);
        gbc.writeMem(0x2cd8, { 0x3b });
        gbc.writeMem(0x8c35, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb31e);
        EXPECT(gbc.pc(), 0x8c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c35), 0xbe);
        // BE 002E
        gbc.setState(0xab12, 0xfcca, 0x6100, 0xdfb5, 0xb84a, 0x3e2c, 0x1, 0x1);
        gbc.writeMem(0x3e2c, { 0xa7 });
        gbc.writeMem(0xab12, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfcca);
        EXPECT(gbc.pc(), 0xab13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab12), 0xbe);
        // BE 002F
        gbc.setState(0xc089, 0xb10d, 0xae40, 0x64e2, 0xf691, 0xa109, 0x0, 0x0);
        gbc.writeMem(0xa109, { 0xf3 });
        gbc.writeMem(0xc089, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb10d);
        EXPECT(gbc.pc(), 0xc08a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa109), 0xf3);
        EXPECT(gbc.readMem(0xc089), 0xbe);
        // BE 0031
        gbc.setState(0x7e75, 0xf145, 0x33d0, 0xe04b, 0xd299, 0xd5cb, 0x0, 0x1);
        gbc.writeMem(0x7e75, { 0xbe });
        gbc.writeMem(0xd5cb, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf145);
        EXPECT(gbc.pc(), 0x7e76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5cb), 0x8d);
        // BE 0032
        gbc.setState(0x2f13, 0x2de8, 0xff10, 0xa2a5, 0xcb73, 0x7c46, 0x0, 0x0);
        gbc.writeMem(0x2f13, { 0xbe });
        gbc.writeMem(0x7c46, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2de8);
        EXPECT(gbc.pc(), 0x2f14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0033
        gbc.setState(0x54f0, 0xc4c6, 0x7310, 0xc86a, 0x91d2, 0x927f, 0x1, 0x1);
        gbc.writeMem(0x54f0, { 0xbe });
        gbc.writeMem(0x927f, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc4c6);
        EXPECT(gbc.pc(), 0x54f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927f), 0xf6);
        // BE 0034
        gbc.setState(0xfbf, 0xd5b7, 0x4c70, 0x92b, 0xb647, 0x50f2, 0x1, 0x1);
        gbc.writeMem(0xfbf, { 0xbe });
        gbc.writeMem(0x50f2, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd5b7);
        EXPECT(gbc.pc(), 0xfc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0035
        gbc.setState(0x24de, 0xed00, 0xff0, 0x2fb9, 0x29d9, 0x8696, 0x0, 0x1);
        gbc.writeMem(0x24de, { 0xbe });
        gbc.writeMem(0x8696, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xed00);
        EXPECT(gbc.pc(), 0x24df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8696), 0x5f);
        // BE 0036
        gbc.setState(0x4640, 0xebf5, 0x3440, 0x7838, 0xc4a3, 0x9a5e, 0x0, 0x0);
        gbc.writeMem(0x4640, { 0xbe });
        gbc.writeMem(0x9a5e, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xebf5);
        EXPECT(gbc.pc(), 0x4641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a5e), 0x9f);
        // BE 0037
        gbc.setState(0x5bf, 0x18a8, 0x2c10, 0x6b20, 0xcf29, 0x9198, 0x0, 0x0);
        gbc.writeMem(0x5bf, { 0xbe });
        gbc.writeMem(0x9198, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x18a8);
        EXPECT(gbc.pc(), 0x5c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9198), 0xa4);
        // BE 0038
        gbc.setState(0x1a5d, 0x237e, 0x33f0, 0x53ee, 0x7fd9, 0x83ac, 0x1, 0x1);
        gbc.writeMem(0x1a5d, { 0xbe });
        gbc.writeMem(0x83ac, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x237e);
        EXPECT(gbc.pc(), 0x1a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ac), 0xb0);
        // BE 0039
        gbc.setState(0x7ee8, 0xcdb2, 0xfeb0, 0xe3f4, 0x8833, 0x7032, 0x1, 0x0);
        gbc.writeMem(0x7032, { 0x29 });
        gbc.writeMem(0x7ee8, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcdb2);
        EXPECT(gbc.pc(), 0x7ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 003A
        gbc.setState(0x5cfe, 0xb00b, 0x8bb0, 0x6341, 0x50d6, 0xa69b, 0x0, 0x0);
        gbc.writeMem(0x5cfe, { 0xbe });
        gbc.writeMem(0xa69b, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb00b);
        EXPECT(gbc.pc(), 0x5cff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa69b), 0x89);
        // BE 003B
        gbc.setState(0x8605, 0x7de2, 0x2590, 0xdf1b, 0x2607, 0x88ac, 0x1, 0x0);
        gbc.writeMem(0x8605, { 0xbe });
        gbc.writeMem(0x88ac, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7de2);
        EXPECT(gbc.pc(), 0x8606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8605), 0xbe);
        EXPECT(gbc.readMem(0x88ac), 0x7b);
        // BE 003D
        gbc.setState(0x4774, 0xa275, 0x1d20, 0xf5e4, 0x1d3a, 0x3498, 0x1, 0x0);
        gbc.writeMem(0x3498, { 0x6c });
        gbc.writeMem(0x4774, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa275);
        EXPECT(gbc.pc(), 0x4775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 003E
        gbc.setState(0x378a, 0x3fe8, 0x97c0, 0x4be2, 0xa285, 0x6327, 0x1, 0x1);
        gbc.writeMem(0x378a, { 0xbe });
        gbc.writeMem(0x6327, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3fe8);
        EXPECT(gbc.pc(), 0x378b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 003F
        gbc.setState(0xb036, 0x9797, 0x5820, 0x70e4, 0xdc4a, 0x5d38, 0x0, 0x1);
        gbc.writeMem(0x5d38, { 0xde });
        gbc.writeMem(0xb036, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9797);
        EXPECT(gbc.pc(), 0xb037);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb036), 0xbe);
        // BE 0040
        gbc.setState(0xdfb6, 0x81bc, 0x1e90, 0x58a6, 0x2b59, 0xce8, 0x0, 0x1);
        gbc.writeMem(0xce8, { 0x1a });
        gbc.writeMem(0xdfb6, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x81bc);
        EXPECT(gbc.pc(), 0xdfb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb6), 0xbe);
        // BE 0041
        gbc.setState(0x2a74, 0x108, 0x60f0, 0x243b, 0x39c8, 0x351f, 0x1, 0x1);
        gbc.writeMem(0x2a74, { 0xbe });
        gbc.writeMem(0x351f, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x108);
        EXPECT(gbc.pc(), 0x2a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0042
        gbc.setState(0x3747, 0xf888, 0xbd90, 0xcc24, 0x1dad, 0x121f, 0x0, 0x1);
        gbc.writeMem(0x121f, { 0x8e });
        gbc.writeMem(0x3747, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf888);
        EXPECT(gbc.pc(), 0x3748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0043
        gbc.setState(0x565e, 0xccee, 0x2960, 0x89c2, 0xf799, 0x4d3f, 0x1, 0x1);
        gbc.writeMem(0x4d3f, { 0x9c });
        gbc.writeMem(0x565e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xccee);
        EXPECT(gbc.pc(), 0x565f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0044
        gbc.setState(0x808c, 0xb22, 0xb1c0, 0x49b1, 0x1d84, 0xb448, 0x0, 0x1);
        gbc.writeMem(0x808c, { 0xbe });
        gbc.writeMem(0xb448, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb22);
        EXPECT(gbc.pc(), 0x808d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808c), 0xbe);
        EXPECT(gbc.readMem(0xb448), 0xeb);
        // BE 0045
        gbc.setState(0xe176, 0x83c7, 0x5070, 0x9fc8, 0x1af5, 0x8058, 0x1, 0x0);
        gbc.writeMem(0x8058, { 0x74 });
        gbc.writeMem(0xe176, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x83c7);
        EXPECT(gbc.pc(), 0xe177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8058), 0x74);
        EXPECT(gbc.readMem(0xe176), 0xbe);
        // BE 0046
        gbc.setState(0x1ca2, 0x81f9, 0x5690, 0x2717, 0x5022, 0x173f, 0x1, 0x1);
        gbc.writeMem(0x173f, { 0x59 });
        gbc.writeMem(0x1ca2, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x81f9);
        EXPECT(gbc.pc(), 0x1ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0047
        gbc.setState(0x4220, 0x164, 0xe9e0, 0x4f6, 0x15b0, 0x6c7c, 0x0, 0x1);
        gbc.writeMem(0x4220, { 0xbe });
        gbc.writeMem(0x6c7c, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x164);
        EXPECT(gbc.pc(), 0x4221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0048
        gbc.setState(0x3101, 0x1d01, 0x2a80, 0x8c9d, 0x7679, 0xc21a, 0x1, 0x1);
        gbc.writeMem(0x3101, { 0xbe });
        gbc.writeMem(0xc21a, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1d01);
        EXPECT(gbc.pc(), 0x3102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc21a), 0x3d);
        // BE 0049
        gbc.setState(0x26ce, 0xeae7, 0x1830, 0x27c7, 0xa592, 0x5ee1, 0x1, 0x1);
        gbc.writeMem(0x26ce, { 0xbe });
        gbc.writeMem(0x5ee1, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xeae7);
        EXPECT(gbc.pc(), 0x26cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 004A
        gbc.setState(0xeb7d, 0x1060, 0xdde0, 0xe00f, 0xd486, 0xcfa4, 0x1, 0x1);
        gbc.writeMem(0xcfa4, { 0xeb });
        gbc.writeMem(0xeb7d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1060);
        EXPECT(gbc.pc(), 0xeb7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa4), 0xeb);
        EXPECT(gbc.readMem(0xeb7d), 0xbe);
        // BE 004B
        gbc.setState(0x6dda, 0x6159, 0xe50, 0xdaef, 0x2dbb, 0x8b07, 0x0, 0x0);
        gbc.writeMem(0x6dda, { 0xbe });
        gbc.writeMem(0x8b07, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6159);
        EXPECT(gbc.pc(), 0x6ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b07), 0x9b);
        // BE 004C
        gbc.setState(0x6621, 0x8c33, 0x2bc0, 0xfc24, 0x849d, 0x9db2, 0x1, 0x0);
        gbc.writeMem(0x6621, { 0xbe });
        gbc.writeMem(0x9db2, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8c33);
        EXPECT(gbc.pc(), 0x6622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9db2), 0xa5);
        // BE 004D
        gbc.setState(0x5772, 0x2002, 0xc920, 0x67ea, 0xee80, 0x3add, 0x1, 0x1);
        gbc.writeMem(0x3add, { 0xf2 });
        gbc.writeMem(0x5772, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2002);
        EXPECT(gbc.pc(), 0x5773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 004E
        gbc.setState(0xb4f7, 0x9d86, 0x38b0, 0xf181, 0xf010, 0x61c, 0x1, 0x1);
        gbc.writeMem(0x61c, { 0xa6 });
        gbc.writeMem(0xb4f7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9d86);
        EXPECT(gbc.pc(), 0xb4f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f7), 0xbe);
        // BE 004F
        gbc.setState(0xdfa, 0xd113, 0xff10, 0x732a, 0xe2cf, 0x9889, 0x0, 0x0);
        gbc.writeMem(0xdfa, { 0xbe });
        gbc.writeMem(0x9889, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd113);
        EXPECT(gbc.pc(), 0xdfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9889), 0xb1);
        // BE 0050
        gbc.setState(0x7692, 0x66ad, 0xafa0, 0xd3d7, 0x2c71, 0xf2d, 0x0, 0x1);
        gbc.writeMem(0xf2d, { 0x40 });
        gbc.writeMem(0x7692, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x66ad);
        EXPECT(gbc.pc(), 0x7693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0051
        gbc.setState(0x7e5b, 0x1037, 0xd7b0, 0x3e00, 0xa106, 0xa614, 0x0, 0x0);
        gbc.writeMem(0x7e5b, { 0xbe });
        gbc.writeMem(0xa614, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1037);
        EXPECT(gbc.pc(), 0x7e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa614), 0x31);
        // BE 0052
        gbc.setState(0xe7cb, 0x33e3, 0xca00, 0xc40c, 0x434, 0xef72, 0x0, 0x0);
        gbc.writeMem(0xe7cb, { 0xbe });
        gbc.writeMem(0xef72, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x33e3);
        EXPECT(gbc.pc(), 0xe7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7cb), 0xbe);
        EXPECT(gbc.readMem(0xef72), 0x8a);
        // BE 0054
        gbc.setState(0x9dc3, 0x3afc, 0x9290, 0x74f5, 0xfcd4, 0x8e15, 0x1, 0x1);
        gbc.writeMem(0x8e15, { 0x84 });
        gbc.writeMem(0x9dc3, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3afc);
        EXPECT(gbc.pc(), 0x9dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e15), 0x84);
        EXPECT(gbc.readMem(0x9dc3), 0xbe);
        // BE 0055
        gbc.setState(0xa0de, 0xc08e, 0x8490, 0x5674, 0x4798, 0xbd7e, 0x1, 0x1);
        gbc.writeMem(0xa0de, { 0xbe });
        gbc.writeMem(0xbd7e, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc08e);
        EXPECT(gbc.pc(), 0xa0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0de), 0xbe);
        EXPECT(gbc.readMem(0xbd7e), 0x89);
        // BE 0056
        gbc.setState(0xc894, 0x969c, 0x2aa0, 0x68d9, 0x85b0, 0x5b1, 0x1, 0x1);
        gbc.writeMem(0x5b1, { 0x3b });
        gbc.writeMem(0xc894, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x969c);
        EXPECT(gbc.pc(), 0xc895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc894), 0xbe);
        // BE 0057
        gbc.setState(0x3a1f, 0xfb6b, 0x8b30, 0xd8c1, 0xd0c6, 0x5c19, 0x1, 0x0);
        gbc.writeMem(0x3a1f, { 0xbe });
        gbc.writeMem(0x5c19, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfb6b);
        EXPECT(gbc.pc(), 0x3a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0058
        gbc.setState(0x9710, 0xcfc6, 0x7980, 0x1f1, 0xcf73, 0xe4b8, 0x1, 0x1);
        gbc.writeMem(0x9710, { 0xbe });
        gbc.writeMem(0xe4b8, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xcfc6);
        EXPECT(gbc.pc(), 0x9711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9710), 0xbe);
        EXPECT(gbc.readMem(0xe4b8), 0xa9);
        // BE 0059
        gbc.setState(0xb411, 0xcc32, 0xb90, 0x4d26, 0xfe5b, 0x62aa, 0x0, 0x1);
        gbc.writeMem(0x62aa, { 0xe6 });
        gbc.writeMem(0xb411, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcc32);
        EXPECT(gbc.pc(), 0xb412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb411), 0xbe);
        // BE 005A
        gbc.setState(0xa8b0, 0x1cea, 0xee80, 0xbcab, 0x658a, 0xd013, 0x0, 0x1);
        gbc.writeMem(0xa8b0, { 0xbe });
        gbc.writeMem(0xd013, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1cea);
        EXPECT(gbc.pc(), 0xa8b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b0), 0xbe);
        EXPECT(gbc.readMem(0xd013), 0x71);
        // BE 005B
        gbc.setState(0x6592, 0xc399, 0xcc80, 0x1cf, 0xcdf0, 0x8c71, 0x0, 0x0);
        gbc.writeMem(0x6592, { 0xbe });
        gbc.writeMem(0x8c71, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc399);
        EXPECT(gbc.pc(), 0x6593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c71), 0x93);
        // BE 005C
        gbc.setState(0x3ac4, 0x64ba, 0xeb10, 0x2fd, 0x854, 0x63da, 0x0, 0x1);
        gbc.writeMem(0x3ac4, { 0xbe });
        gbc.writeMem(0x63da, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x64ba);
        EXPECT(gbc.pc(), 0x3ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 005D
        gbc.setState(0xcb14, 0xcf9f, 0xcd70, 0x8c8b, 0xe927, 0xefb9, 0x0, 0x0);
        gbc.writeMem(0xcb14, { 0xbe });
        gbc.writeMem(0xefb9, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcf9f);
        EXPECT(gbc.pc(), 0xcb15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb14), 0xbe);
        EXPECT(gbc.readMem(0xefb9), 0x2b);
        // BE 005E
        gbc.setState(0x6876, 0x149, 0x4940, 0xc224, 0x45f8, 0xa9cd, 0x1, 0x0);
        gbc.writeMem(0x6876, { 0xbe });
        gbc.writeMem(0xa9cd, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x149);
        EXPECT(gbc.pc(), 0x6877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9cd), 0x15);
        // BE 005F
        gbc.setState(0x3b6d, 0x93e6, 0x4260, 0x98fe, 0xb746, 0xd11a, 0x1, 0x1);
        gbc.writeMem(0x3b6d, { 0xbe });
        gbc.writeMem(0xd11a, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x93e6);
        EXPECT(gbc.pc(), 0x3b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11a), 0xf1);
        // BE 0060
        gbc.setState(0xb6c, 0x751c, 0x4810, 0x728d, 0xb37d, 0x734, 0x1, 0x1);
        gbc.writeMem(0x734, { 0x19 });
        gbc.writeMem(0xb6c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x751c);
        EXPECT(gbc.pc(), 0xb6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0061
        gbc.setState(0xe3e1, 0x2967, 0x6160, 0x94ef, 0x548, 0xab7f, 0x1, 0x1);
        gbc.writeMem(0xab7f, { 0x4c });
        gbc.writeMem(0xe3e1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2967);
        EXPECT(gbc.pc(), 0xe3e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab7f), 0x4c);
        EXPECT(gbc.readMem(0xe3e1), 0xbe);
        // BE 0062
        gbc.setState(0x62e0, 0x7ea4, 0xcbd0, 0xa533, 0xa32f, 0x1512, 0x1, 0x1);
        gbc.writeMem(0x1512, { 0xb1 });
        gbc.writeMem(0x62e0, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7ea4);
        EXPECT(gbc.pc(), 0x62e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0063
        gbc.setState(0xb8ad, 0xfcf, 0xd760, 0x9fb2, 0x3037, 0x73a2, 0x0, 0x1);
        gbc.writeMem(0x73a2, { 0x95 });
        gbc.writeMem(0xb8ad, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfcf);
        EXPECT(gbc.pc(), 0xb8ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ad), 0xbe);
        // BE 0064
        gbc.setState(0xb791, 0x7e5f, 0xa390, 0x6c0, 0x2123, 0xd795, 0x1, 0x1);
        gbc.writeMem(0xb791, { 0xbe });
        gbc.writeMem(0xd795, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7e5f);
        EXPECT(gbc.pc(), 0xb792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb791), 0xbe);
        EXPECT(gbc.readMem(0xd795), 0xa1);
        // BE 0065
        gbc.setState(0x501e, 0xd7bd, 0x6400, 0x4b03, 0xcfef, 0x990e, 0x1, 0x1);
        gbc.writeMem(0x501e, { 0xbe });
        gbc.writeMem(0x990e, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd7bd);
        EXPECT(gbc.pc(), 0x501f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990e), 0xe1);
        // BE 0066
        gbc.setState(0x4dd2, 0x3a8c, 0xcce0, 0x5721, 0xb979, 0x5ef3, 0x0, 0x1);
        gbc.writeMem(0x4dd2, { 0xbe });
        gbc.writeMem(0x5ef3, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3a8c);
        EXPECT(gbc.pc(), 0x4dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0068
        gbc.setState(0x7b3d, 0xe388, 0xe070, 0x7f75, 0x611d, 0xf144, 0x1, 0x0);
        gbc.writeMem(0x7b3d, { 0xbe });
        gbc.writeMem(0xf144, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe388);
        EXPECT(gbc.pc(), 0x7b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf144), 0x38);
        // BE 0069
        gbc.setState(0xd7ea, 0x206d, 0x7340, 0x4276, 0xc9e6, 0x58f4, 0x1, 0x1);
        gbc.writeMem(0x58f4, { 0xf0 });
        gbc.writeMem(0xd7ea, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x206d);
        EXPECT(gbc.pc(), 0xd7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ea), 0xbe);
        // BE 006A
        gbc.setState(0x364f, 0x80f2, 0x9880, 0x2308, 0x4e7, 0x301e, 0x1, 0x1);
        gbc.writeMem(0x301e, { 0x5 });
        gbc.writeMem(0x364f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x80f2);
        EXPECT(gbc.pc(), 0x3650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 006B
        gbc.setState(0x7374, 0xb804, 0x7770, 0x12c0, 0xa81d, 0xa647, 0x1, 0x0);
        gbc.writeMem(0x7374, { 0xbe });
        gbc.writeMem(0xa647, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb804);
        EXPECT(gbc.pc(), 0x7375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa647), 0x40);
        // BE 006D
        gbc.setState(0x6aaf, 0x80f8, 0x7a30, 0xe74e, 0x5425, 0xeb7f, 0x0, 0x1);
        gbc.writeMem(0x6aaf, { 0xbe });
        gbc.writeMem(0xeb7f, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x80f8);
        EXPECT(gbc.pc(), 0x6ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb7f), 0x38);
        // BE 006E
        gbc.setState(0x9495, 0xf87, 0x7620, 0xfae1, 0xcd0c, 0xcc4f, 0x0, 0x1);
        gbc.writeMem(0x9495, { 0xbe });
        gbc.writeMem(0xcc4f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf87);
        EXPECT(gbc.pc(), 0x9496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9495), 0xbe);
        EXPECT(gbc.readMem(0xcc4f), 0xd9);
        // BE 006F
        gbc.setState(0x8280, 0xb45e, 0xbbe0, 0x575e, 0xebe5, 0x58c3, 0x1, 0x0);
        gbc.writeMem(0x58c3, { 0x2c });
        gbc.writeMem(0x8280, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb45e);
        EXPECT(gbc.pc(), 0x8281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8280), 0xbe);
        // BE 0070
        gbc.setState(0x2d08, 0x21f, 0x7b80, 0x1ff1, 0x257, 0xb330, 0x0, 0x0);
        gbc.writeMem(0x2d08, { 0xbe });
        gbc.writeMem(0xb330, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x21f);
        EXPECT(gbc.pc(), 0x2d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb330), 0xca);
        // BE 0071
        gbc.setState(0xc765, 0x5e2c, 0x9f90, 0x99bf, 0x3b63, 0x213f, 0x1, 0x1);
        gbc.writeMem(0x213f, { 0xad });
        gbc.writeMem(0xc765, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5e2c);
        EXPECT(gbc.pc(), 0xc766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc765), 0xbe);
        // BE 0072
        gbc.setState(0x773f, 0x1ecd, 0x1890, 0x6599, 0xae2a, 0xf375, 0x0, 0x0);
        gbc.writeMem(0x773f, { 0xbe });
        gbc.writeMem(0xf375, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1ecd);
        EXPECT(gbc.pc(), 0x7740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf375), 0x79);
        // BE 0073
        gbc.setState(0x25ab, 0xb682, 0x95a0, 0x118, 0x2430, 0x6ab2, 0x0, 0x0);
        gbc.writeMem(0x25ab, { 0xbe });
        gbc.writeMem(0x6ab2, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb682);
        EXPECT(gbc.pc(), 0x25ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0074
        gbc.setState(0xcdd3, 0x6e8, 0xd5c0, 0xbe67, 0x5bd0, 0x9a0b, 0x0, 0x0);
        gbc.writeMem(0x9a0b, { 0x47 });
        gbc.writeMem(0xcdd3, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6e8);
        EXPECT(gbc.pc(), 0xcdd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a0b), 0x47);
        EXPECT(gbc.readMem(0xcdd3), 0xbe);
        // BE 0075
        gbc.setState(0x606f, 0xbe2, 0xa200, 0x2eb4, 0xb63b, 0xcf0c, 0x1, 0x0);
        gbc.writeMem(0x606f, { 0xbe });
        gbc.writeMem(0xcf0c, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbe2);
        EXPECT(gbc.pc(), 0x6070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf0c), 0x2b);
        // BE 0076
        gbc.setState(0x54f0, 0x2e5f, 0x7430, 0x2407, 0x8e48, 0xf5b8, 0x1, 0x1);
        gbc.writeMem(0x54f0, { 0xbe });
        gbc.writeMem(0xf5b8, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2e5f);
        EXPECT(gbc.pc(), 0x54f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5b8), 0xa4);
        // BE 0077
        gbc.setState(0x54fb, 0xd46, 0x1bf0, 0x82b, 0x6310, 0x77eb, 0x0, 0x1);
        gbc.writeMem(0x54fb, { 0xbe });
        gbc.writeMem(0x77eb, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd46);
        EXPECT(gbc.pc(), 0x54fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0078
        gbc.setState(0x8890, 0x6f95, 0xada0, 0xeb6b, 0x862f, 0x68ef, 0x0, 0x1);
        gbc.writeMem(0x68ef, { 0xcb });
        gbc.writeMem(0x8890, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6f95);
        EXPECT(gbc.pc(), 0x8891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8890), 0xbe);
        // BE 0079
        gbc.setState(0x9440, 0x5d48, 0x9470, 0x8520, 0xc7ff, 0x4164, 0x1, 0x1);
        gbc.writeMem(0x4164, { 0xef });
        gbc.writeMem(0x9440, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5d48);
        EXPECT(gbc.pc(), 0x9441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9440), 0xbe);
        // BE 007A
        gbc.setState(0xc6bc, 0x7913, 0xfef0, 0x886b, 0x3b5, 0x4d0a, 0x1, 0x0);
        gbc.writeMem(0x4d0a, { 0x58 });
        gbc.writeMem(0xc6bc, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7913);
        EXPECT(gbc.pc(), 0xc6bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6bc), 0xbe);
        // BE 007B
        gbc.setState(0xb01e, 0x1802, 0xfca0, 0x9e35, 0x8f48, 0xb2e6, 0x0, 0x0);
        gbc.writeMem(0xb01e, { 0xbe });
        gbc.writeMem(0xb2e6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1802);
        EXPECT(gbc.pc(), 0xb01f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01e), 0xbe);
        EXPECT(gbc.readMem(0xb2e6), 0x45);
        // BE 007C
        gbc.setState(0xaeab, 0xe5f3, 0x4a50, 0xfdbe, 0x9704, 0x5e44, 0x1, 0x0);
        gbc.writeMem(0x5e44, { 0x53 });
        gbc.writeMem(0xaeab, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe5f3);
        EXPECT(gbc.pc(), 0xaeac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeab), 0xbe);
        // BE 007D
        gbc.setState(0x700d, 0xd157, 0x48d0, 0x6de7, 0xb92c, 0x8180, 0x0, 0x0);
        gbc.writeMem(0x700d, { 0xbe });
        gbc.writeMem(0x8180, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd157);
        EXPECT(gbc.pc(), 0x700e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8180), 0x23);
        // BE 007F
        gbc.setState(0xaa37, 0x85fc, 0x4ea0, 0x7022, 0xba99, 0xe653, 0x1, 0x0);
        gbc.writeMem(0xaa37, { 0xbe });
        gbc.writeMem(0xe653, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x85fc);
        EXPECT(gbc.pc(), 0xaa38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa37), 0xbe);
        EXPECT(gbc.readMem(0xe653), 0x36);
        // BE 0080
        gbc.setState(0xbfeb, 0x1460, 0x2db0, 0x7486, 0xdf6a, 0x8f4f, 0x0, 0x1);
        gbc.writeMem(0x8f4f, { 0x19 });
        gbc.writeMem(0xbfeb, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1460);
        EXPECT(gbc.pc(), 0xbfec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f4f), 0x19);
        EXPECT(gbc.readMem(0xbfeb), 0xbe);
        // BE 0081
        gbc.setState(0x7a19, 0x30c9, 0xbd70, 0xe3bc, 0xb930, 0xf62d, 0x1, 0x0);
        gbc.writeMem(0x7a19, { 0xbe });
        gbc.writeMem(0xf62d, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x30c9);
        EXPECT(gbc.pc(), 0x7a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf62d), 0x94);
        // BE 0082
        gbc.setState(0x97f, 0xbf03, 0x6860, 0xf5ef, 0xf943, 0x1b37, 0x0, 0x1);
        gbc.writeMem(0x97f, { 0xbe });
        gbc.writeMem(0x1b37, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbf03);
        EXPECT(gbc.pc(), 0x980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0083
        gbc.setState(0xd12e, 0x6740, 0x6d20, 0xec3f, 0xb4b1, 0xa862, 0x1, 0x1);
        gbc.writeMem(0xa862, { 0x16 });
        gbc.writeMem(0xd12e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6740);
        EXPECT(gbc.pc(), 0xd12f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa862), 0x16);
        EXPECT(gbc.readMem(0xd12e), 0xbe);
        // BE 0084
        gbc.setState(0x6506, 0x6b98, 0x8130, 0xe690, 0x1b4, 0xda22, 0x0, 0x1);
        gbc.writeMem(0x6506, { 0xbe });
        gbc.writeMem(0xda22, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6b98);
        EXPECT(gbc.pc(), 0x6507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda22), 0xd);
        // BE 0085
        gbc.setState(0xe7b2, 0x8766, 0xe220, 0x14e2, 0x6de4, 0x79d5, 0x0, 0x0);
        gbc.writeMem(0x79d5, { 0xdc });
        gbc.writeMem(0xe7b2, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8766);
        EXPECT(gbc.pc(), 0xe7b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b2), 0xbe);
        // BE 0087
        gbc.setState(0x2fc2, 0xb2c4, 0x17e0, 0x5bd7, 0x336f, 0x3372, 0x0, 0x0);
        gbc.writeMem(0x2fc2, { 0xbe });
        gbc.writeMem(0x3372, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb2c4);
        EXPECT(gbc.pc(), 0x2fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0089
        gbc.setState(0xbd7f, 0x9a66, 0xb3f0, 0xcf39, 0x8ce4, 0xfac3, 0x0, 0x1);
        gbc.writeMem(0xbd7f, { 0xbe });
        gbc.writeMem(0xfac3, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9a66);
        EXPECT(gbc.pc(), 0xbd80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7f), 0xbe);
        EXPECT(gbc.readMem(0xfac3), 0x24);
        // BE 008A
        gbc.setState(0x8879, 0x9ded, 0x6030, 0xaa4, 0x802d, 0x7cb0, 0x0, 0x0);
        gbc.writeMem(0x7cb0, { 0xd });
        gbc.writeMem(0x8879, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9ded);
        EXPECT(gbc.pc(), 0x887a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8879), 0xbe);
        // BE 008B
        gbc.setState(0x9aea, 0x9b1f, 0x18f0, 0x5c5c, 0x9bea, 0xf9bd, 0x0, 0x0);
        gbc.writeMem(0x9aea, { 0xbe });
        gbc.writeMem(0xf9bd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9b1f);
        EXPECT(gbc.pc(), 0x9aeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aea), 0xbe);
        EXPECT(gbc.readMem(0xf9bd), 0x83);
        // BE 008C
        gbc.setState(0xcbc, 0xccda, 0x4a60, 0xf2d1, 0x51a4, 0xe28d, 0x1, 0x1);
        gbc.writeMem(0xcbc, { 0xbe });
        gbc.writeMem(0xe28d, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xccda);
        EXPECT(gbc.pc(), 0xcbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe28d), 0x6e);
        // BE 008D
        gbc.setState(0x8bb1, 0x1708, 0xeb10, 0x3140, 0x1723, 0xa786, 0x0, 0x0);
        gbc.writeMem(0x8bb1, { 0xbe });
        gbc.writeMem(0xa786, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1708);
        EXPECT(gbc.pc(), 0x8bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb1), 0xbe);
        EXPECT(gbc.readMem(0xa786), 0x23);
        // BE 008E
        gbc.setState(0xb2ce, 0x4ece, 0x6bc0, 0x2629, 0xb42, 0xf4cf, 0x1, 0x1);
        gbc.writeMem(0xb2ce, { 0xbe });
        gbc.writeMem(0xf4cf, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4ece);
        EXPECT(gbc.pc(), 0xb2cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ce), 0xbe);
        EXPECT(gbc.readMem(0xf4cf), 0xf3);
        // BE 008F
        gbc.setState(0x607, 0x9318, 0x1f20, 0x4b85, 0x568e, 0x9e80, 0x0, 0x1);
        gbc.writeMem(0x607, { 0xbe });
        gbc.writeMem(0x9e80, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9318);
        EXPECT(gbc.pc(), 0x608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e80), 0x67);
        // BE 0090
        gbc.setState(0x10cd, 0x73d8, 0x5a40, 0x44c0, 0x20f9, 0x3450, 0x0, 0x0);
        gbc.writeMem(0x10cd, { 0xbe });
        gbc.writeMem(0x3450, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x73d8);
        EXPECT(gbc.pc(), 0x10ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0091
        gbc.setState(0x403a, 0x7c75, 0x3510, 0x76d0, 0x24ad, 0xe42, 0x0, 0x0);
        gbc.writeMem(0xe42, { 0x46 });
        gbc.writeMem(0x403a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7c75);
        EXPECT(gbc.pc(), 0x403b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0092
        gbc.setState(0x1103, 0xdefc, 0xc6d0, 0x7440, 0xd7bc, 0xe4a8, 0x0, 0x1);
        gbc.writeMem(0x1103, { 0xbe });
        gbc.writeMem(0xe4a8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xdefc);
        EXPECT(gbc.pc(), 0x1104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4a8), 0x55);
        // BE 0093
        gbc.setState(0xc60e, 0x883a, 0x9a60, 0x48e3, 0x354e, 0xb60b, 0x0, 0x0);
        gbc.writeMem(0xb60b, { 0x59 });
        gbc.writeMem(0xc60e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x883a);
        EXPECT(gbc.pc(), 0xc60f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb60b), 0x59);
        EXPECT(gbc.readMem(0xc60e), 0xbe);
        // BE 0094
        gbc.setState(0xef8e, 0x5c84, 0xc610, 0x91f6, 0x8517, 0x32ce, 0x1, 0x0);
        gbc.writeMem(0x32ce, { 0x21 });
        gbc.writeMem(0xef8e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5c84);
        EXPECT(gbc.pc(), 0xef8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef8e), 0xbe);
        // BE 0095
        gbc.setState(0x391d, 0x4e17, 0x5d60, 0xe8c0, 0x63a2, 0x6cee, 0x1, 0x1);
        gbc.writeMem(0x391d, { 0xbe });
        gbc.writeMem(0x6cee, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4e17);
        EXPECT(gbc.pc(), 0x391e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0097
        gbc.setState(0x6645, 0xeff8, 0x5c50, 0xcb73, 0xd241, 0xf7da, 0x1, 0x1);
        gbc.writeMem(0x6645, { 0xbe });
        gbc.writeMem(0xf7da, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xeff8);
        EXPECT(gbc.pc(), 0x6646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7da), 0x6d);
        // BE 0098
        gbc.setState(0x85a7, 0x925b, 0x1840, 0xb482, 0x8ea4, 0xd304, 0x1, 0x1);
        gbc.writeMem(0x85a7, { 0xbe });
        gbc.writeMem(0xd304, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x925b);
        EXPECT(gbc.pc(), 0x85a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85a7), 0xbe);
        EXPECT(gbc.readMem(0xd304), 0x97);
        // BE 0099
        gbc.setState(0xa5b8, 0xb8cc, 0x5180, 0x25, 0x56bf, 0xb163, 0x1, 0x1);
        gbc.writeMem(0xa5b8, { 0xbe });
        gbc.writeMem(0xb163, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb8cc);
        EXPECT(gbc.pc(), 0xa5b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b8), 0xbe);
        EXPECT(gbc.readMem(0xb163), 0x58);
        // BE 009A
        gbc.setState(0xd63e, 0x96bf, 0xffd0, 0x9603, 0x513b, 0xfac, 0x1, 0x0);
        gbc.writeMem(0xfac, { 0xdd });
        gbc.writeMem(0xd63e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x96bf);
        EXPECT(gbc.pc(), 0xd63f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd63e), 0xbe);
        // BE 009B
        gbc.setState(0xb7bf, 0xf326, 0x1840, 0x9938, 0x924c, 0xd45c, 0x1, 0x0);
        gbc.writeMem(0xb7bf, { 0xbe });
        gbc.writeMem(0xd45c, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf326);
        EXPECT(gbc.pc(), 0xb7c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7bf), 0xbe);
        EXPECT(gbc.readMem(0xd45c), 0xda);
        // BE 009C
        gbc.setState(0xe152, 0x4202, 0xe0f0, 0xde88, 0xada0, 0x8996, 0x0, 0x0);
        gbc.writeMem(0x8996, { 0xf4 });
        gbc.writeMem(0xe152, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4202);
        EXPECT(gbc.pc(), 0xe153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8996), 0xf4);
        EXPECT(gbc.readMem(0xe152), 0xbe);
        // BE 009D
        gbc.setState(0x1e9c, 0xd1b3, 0x1ba0, 0xba5b, 0xcff6, 0x9282, 0x1, 0x0);
        gbc.writeMem(0x1e9c, { 0xbe });
        gbc.writeMem(0x9282, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd1b3);
        EXPECT(gbc.pc(), 0x1e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9282), 0xe4);
        // BE 009E
        gbc.setState(0x9a03, 0xec78, 0x60, 0xd336, 0xdc8e, 0x974, 0x0, 0x0);
        gbc.writeMem(0x974, { 0x77 });
        gbc.writeMem(0x9a03, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xec78);
        EXPECT(gbc.pc(), 0x9a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a03), 0xbe);
        // BE 009F
        gbc.setState(0xe59e, 0x94da, 0xe2f0, 0x48dd, 0x6aad, 0x2db1, 0x1, 0x1);
        gbc.writeMem(0x2db1, { 0x2b });
        gbc.writeMem(0xe59e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x94da);
        EXPECT(gbc.pc(), 0xe59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59e), 0xbe);
        // BE 00A1
        gbc.setState(0x7af7, 0x4a5f, 0x1750, 0xa902, 0x48ac, 0xf5c2, 0x0, 0x0);
        gbc.writeMem(0x7af7, { 0xbe });
        gbc.writeMem(0xf5c2, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4a5f);
        EXPECT(gbc.pc(), 0x7af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5c2), 0xd3);
        // BE 00A2
        gbc.setState(0xc3ac, 0x211b, 0x92e0, 0x69b3, 0xad41, 0x9607, 0x0, 0x0);
        gbc.writeMem(0x9607, { 0x2a });
        gbc.writeMem(0xc3ac, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x211b);
        EXPECT(gbc.pc(), 0xc3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9607), 0x2a);
        EXPECT(gbc.readMem(0xc3ac), 0xbe);
        // BE 00A3
        gbc.setState(0xdef4, 0x3d24, 0x1970, 0x66ac, 0xd721, 0x36fe, 0x0, 0x1);
        gbc.writeMem(0x36fe, { 0x19 });
        gbc.writeMem(0xdef4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3d24);
        EXPECT(gbc.pc(), 0xdef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef4), 0xbe);
        // BE 00A4
        gbc.setState(0x6d86, 0x32a3, 0x85d0, 0x51af, 0x1b93, 0x2a7b, 0x1, 0x1);
        gbc.writeMem(0x2a7b, { 0xb5 });
        gbc.writeMem(0x6d86, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x32a3);
        EXPECT(gbc.pc(), 0x6d87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 00A5
        gbc.setState(0x841b, 0x2a1d, 0x4030, 0x4f56, 0xb450, 0xe276, 0x0, 0x1);
        gbc.writeMem(0x841b, { 0xbe });
        gbc.writeMem(0xe276, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2a1d);
        EXPECT(gbc.pc(), 0x841c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x841b), 0xbe);
        EXPECT(gbc.readMem(0xe276), 0x1a);
        // BE 00A6
        gbc.setState(0xa5ec, 0x4a86, 0x8310, 0xcf80, 0xa909, 0xf2c5, 0x0, 0x1);
        gbc.writeMem(0xa5ec, { 0xbe });
        gbc.writeMem(0xf2c5, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4a86);
        EXPECT(gbc.pc(), 0xa5ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ec), 0xbe);
        EXPECT(gbc.readMem(0xf2c5), 0x73);
        // BE 00A7
        gbc.setState(0x8fb1, 0x92ff, 0x99b0, 0xf30c, 0xe1f2, 0xfb59, 0x1, 0x1);
        gbc.writeMem(0x8fb1, { 0xbe });
        gbc.writeMem(0xfb59, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x92ff);
        EXPECT(gbc.pc(), 0x8fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb1), 0xbe);
        EXPECT(gbc.readMem(0xfb59), 0xba);
        // BE 00A8
        gbc.setState(0xa398, 0xb368, 0xc560, 0xea07, 0x57c2, 0x3f3f, 0x0, 0x0);
        gbc.writeMem(0x3f3f, { 0x8 });
        gbc.writeMem(0xa398, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb368);
        EXPECT(gbc.pc(), 0xa399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa398), 0xbe);
        // BE 00A9
        gbc.setState(0x618a, 0xf2e2, 0x9af0, 0x52f8, 0x5c92, 0x17b7, 0x1, 0x1);
        gbc.writeMem(0x17b7, { 0xfc });
        gbc.writeMem(0x618a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf2e2);
        EXPECT(gbc.pc(), 0x618b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 00AA
        gbc.setState(0x8248, 0xccc8, 0x7fc0, 0x19c0, 0x1fd1, 0xb359, 0x1, 0x1);
        gbc.writeMem(0x8248, { 0xbe });
        gbc.writeMem(0xb359, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xccc8);
        EXPECT(gbc.pc(), 0x8249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8248), 0xbe);
        EXPECT(gbc.readMem(0xb359), 0x6e);
        // BE 00AB
        gbc.setState(0xe1d9, 0x9eb0, 0xf200, 0x27fa, 0x3a4a, 0x1a2f, 0x0, 0x1);
        gbc.writeMem(0x1a2f, { 0x8c });
        gbc.writeMem(0xe1d9, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9eb0);
        EXPECT(gbc.pc(), 0xe1da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d9), 0xbe);
        // BE 00AC
        gbc.setState(0xbbb9, 0x8455, 0xee50, 0xe7e, 0xd0b8, 0xa1a7, 0x0, 0x0);
        gbc.writeMem(0xa1a7, { 0xc4 });
        gbc.writeMem(0xbbb9, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8455);
        EXPECT(gbc.pc(), 0xbbba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a7), 0xc4);
        EXPECT(gbc.readMem(0xbbb9), 0xbe);
        // BE 00AD
        gbc.setState(0x8dcb, 0xa97c, 0x1230, 0x95bb, 0x6de0, 0xa95a, 0x0, 0x1);
        gbc.writeMem(0x8dcb, { 0xbe });
        gbc.writeMem(0xa95a, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa97c);
        EXPECT(gbc.pc(), 0x8dcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dcb), 0xbe);
        EXPECT(gbc.readMem(0xa95a), 0x2f);
        // BE 00AE
        gbc.setState(0xd37d, 0xcd1d, 0x1a80, 0xb36e, 0xabc, 0xa6c6, 0x0, 0x0);
        gbc.writeMem(0xa6c6, { 0x71 });
        gbc.writeMem(0xd37d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcd1d);
        EXPECT(gbc.pc(), 0xd37e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c6), 0x71);
        EXPECT(gbc.readMem(0xd37d), 0xbe);
        // BE 00AF
        gbc.setState(0x232c, 0x8601, 0x1c50, 0x91ab, 0x120f, 0x560e, 0x0, 0x0);
        gbc.writeMem(0x232c, { 0xbe });
        gbc.writeMem(0x560e, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8601);
        EXPECT(gbc.pc(), 0x232d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 00B0
        gbc.setState(0x86e1, 0xbcd1, 0xc860, 0x926d, 0x1f16, 0x315e, 0x1, 0x0);
        gbc.writeMem(0x315e, { 0x94 });
        gbc.writeMem(0x86e1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbcd1);
        EXPECT(gbc.pc(), 0x86e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86e1), 0xbe);
        // BE 00B1
        gbc.setState(0x1df4, 0xc9f4, 0xb980, 0x1fb1, 0xbbe1, 0x8ee3, 0x1, 0x0);
        gbc.writeMem(0x1df4, { 0xbe });
        gbc.writeMem(0x8ee3, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc9f4);
        EXPECT(gbc.pc(), 0x1df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee3), 0x2f);
        // BE 00B2
        gbc.setState(0x57d6, 0x8b00, 0xc700, 0xb26a, 0xb5e9, 0x8514, 0x1, 0x1);
        gbc.writeMem(0x57d6, { 0xbe });
        gbc.writeMem(0x8514, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8b00);
        EXPECT(gbc.pc(), 0x57d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8514), 0xf7);
        // BE 00B3
        gbc.setState(0x5b2c, 0x208f, 0x60, 0x9969, 0x7b1a, 0xd7f5, 0x1, 0x1);
        gbc.writeMem(0x5b2c, { 0xbe });
        gbc.writeMem(0xd7f5, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x208f);
        EXPECT(gbc.pc(), 0x5b2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f5), 0x22);
        // BE 00B4
        gbc.setState(0x24cd, 0xaec0, 0xfcc0, 0x9fd1, 0x1e72, 0x6a80, 0x1, 0x0);
        gbc.writeMem(0x24cd, { 0xbe });
        gbc.writeMem(0x6a80, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xaec0);
        EXPECT(gbc.pc(), 0x24ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 00B5
        gbc.setState(0x9aba, 0x4294, 0x20b0, 0x4685, 0x2389, 0x6c7a, 0x0, 0x1);
        gbc.writeMem(0x6c7a, { 0x9a });
        gbc.writeMem(0x9aba, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4294);
        EXPECT(gbc.pc(), 0x9abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aba), 0xbe);
        // BE 00B6
        gbc.setState(0x6044, 0x683, 0xd4f0, 0xcce5, 0x54d2, 0x918c, 0x1, 0x1);
        gbc.writeMem(0x6044, { 0xbe });
        gbc.writeMem(0x918c, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x683);
        EXPECT(gbc.pc(), 0x6045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918c), 0xd3);
        // BE 00B7
        gbc.setState(0x935f, 0x4d7c, 0xd3c0, 0xe6d9, 0xddcd, 0x9cbc, 0x1, 0x0);
        gbc.writeMem(0x935f, { 0xbe });
        gbc.writeMem(0x9cbc, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4d7c);
        EXPECT(gbc.pc(), 0x9360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x935f), 0xbe);
        EXPECT(gbc.readMem(0x9cbc), 0xd9);
        // BE 00B8
        gbc.setState(0x64f, 0x831, 0xc0, 0x5cb7, 0xfda5, 0x6a15, 0x1, 0x0);
        gbc.writeMem(0x64f, { 0xbe });
        gbc.writeMem(0x6a15, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x831);
        EXPECT(gbc.pc(), 0x650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 00B9
        gbc.setState(0x7adb, 0x68b9, 0x83f0, 0x9c3d, 0x5406, 0xc94c, 0x1, 0x0);
        gbc.writeMem(0x7adb, { 0xbe });
        gbc.writeMem(0xc94c, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x68b9);
        EXPECT(gbc.pc(), 0x7adc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc94c), 0x92);
        // BE 00BA
        gbc.setState(0x5c2b, 0x35a3, 0x91e0, 0x17c0, 0x8c01, 0xde26, 0x1, 0x1);
        gbc.writeMem(0x5c2b, { 0xbe });
        gbc.writeMem(0xde26, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x35a3);
        EXPECT(gbc.pc(), 0x5c2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde26), 0xc6);
        // BE 00BB
        gbc.setState(0x73fa, 0x669, 0x80d0, 0xecf3, 0xe7f3, 0xae9b, 0x1, 0x1);
        gbc.writeMem(0x73fa, { 0xbe });
        gbc.writeMem(0xae9b, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x669);
        EXPECT(gbc.pc(), 0x73fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae9b), 0xe6);
        // BE 00BC
        gbc.setState(0x2b7b, 0x22d7, 0x9f0, 0x781b, 0x24ec, 0xb79, 0x0, 0x0);
        gbc.writeMem(0xb79, { 0x1f });
        gbc.writeMem(0x2b7b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x22d7);
        EXPECT(gbc.pc(), 0x2b7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 00BD
        gbc.setState(0xb6cc, 0x7dae, 0x10c0, 0x94c8, 0x1bb, 0x669c, 0x0, 0x1);
        gbc.writeMem(0x669c, { 0xe5 });
        gbc.writeMem(0xb6cc, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7dae);
        EXPECT(gbc.pc(), 0xb6cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6cc), 0xbe);
        // BE 00BE
        gbc.setState(0x73b2, 0xc6ba, 0x6d50, 0xb064, 0xdb56, 0x6eb8, 0x0, 0x0);
        gbc.writeMem(0x6eb8, { 0xeb });
        gbc.writeMem(0x73b2, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc6ba);
        EXPECT(gbc.pc(), 0x73b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 00BF
        gbc.setState(0xe536, 0x4a31, 0xc970, 0x6d3, 0x73a6, 0xd092, 0x0, 0x1);
        gbc.writeMem(0xd092, { 0x8d });
        gbc.writeMem(0xe536, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4a31);
        EXPECT(gbc.pc(), 0xe537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd092), 0x8d);
        EXPECT(gbc.readMem(0xe536), 0xbe);
        // BE 00C0
        gbc.setState(0x52b8, 0x4486, 0x6dd0, 0xb143, 0xb684, 0xf588, 0x0, 0x1);
        gbc.writeMem(0x52b8, { 0xbe });
        gbc.writeMem(0xf588, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4486);
        EXPECT(gbc.pc(), 0x52b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf588), 0xe6);
        // BE 00C1
        gbc.setState(0xc66a, 0x3de8, 0x9fa0, 0x19e3, 0xcf48, 0xe5b3, 0x0, 0x1);
        gbc.writeMem(0xc66a, { 0xbe });
        gbc.writeMem(0xe5b3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3de8);
        EXPECT(gbc.pc(), 0xc66b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc66a), 0xbe);
        EXPECT(gbc.readMem(0xe5b3), 0x95);
        // BE 00C2
        gbc.setState(0x54f6, 0xabbc, 0x8250, 0x2a98, 0x38ad, 0x3a9f, 0x0, 0x1);
        gbc.writeMem(0x3a9f, { 0x3f });
        gbc.writeMem(0x54f6, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xabbc);
        EXPECT(gbc.pc(), 0x54f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 00C3
        gbc.setState(0xce57, 0x9228, 0xd6a0, 0x2f9a, 0x4321, 0xa653, 0x1, 0x1);
        gbc.writeMem(0xa653, { 0x28 });
        gbc.writeMem(0xce57, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9228);
        EXPECT(gbc.pc(), 0xce58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa653), 0x28);
        EXPECT(gbc.readMem(0xce57), 0xbe);
        // BE 00C4
        gbc.setState(0xe905, 0x47c5, 0x35d0, 0x998d, 0xc6da, 0x43a7, 0x0, 0x1);
        gbc.writeMem(0x43a7, { 0x26 });
        gbc.writeMem(0xe905, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x47c5);
        EXPECT(gbc.pc(), 0xe906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe905), 0xbe);
        // BE 00C5
        gbc.setState(0x5277, 0x821b, 0x8660, 0xfa73, 0xfa9c, 0xe7ea, 0x0, 0x0);
        gbc.writeMem(0x5277, { 0xbe });
        gbc.writeMem(0xe7ea, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x821b);
        EXPECT(gbc.pc(), 0x5278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ea), 0x6b);
        // BE 00C6
        gbc.setState(0x88ca, 0x39d8, 0x1a40, 0x2351, 0x69a, 0x5cbd, 0x1, 0x1);
        gbc.writeMem(0x5cbd, { 0xf2 });
        gbc.writeMem(0x88ca, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x39d8);
        EXPECT(gbc.pc(), 0x88cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ca), 0xbe);
        // BE 00C7
        gbc.setState(0xb141, 0xc880, 0xcb40, 0xd469, 0x1c7d, 0x7b87, 0x1, 0x0);
        gbc.writeMem(0x7b87, { 0xe4 });
        gbc.writeMem(0xb141, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc880);
        EXPECT(gbc.pc(), 0xb142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb141), 0xbe);
        // BE 00C8
        gbc.setState(0xca3a, 0xd36, 0x4220, 0xdae2, 0x4fd8, 0x8e32, 0x1, 0x1);
        gbc.writeMem(0x8e32, { 0x7e });
        gbc.writeMem(0xca3a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd36);
        EXPECT(gbc.pc(), 0xca3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e32), 0x7e);
        EXPECT(gbc.readMem(0xca3a), 0xbe);
        // BE 00C9
        gbc.setState(0xa846, 0xf210, 0x3b80, 0xf75c, 0x7bf0, 0xc25f, 0x0, 0x1);
        gbc.writeMem(0xa846, { 0xbe });
        gbc.writeMem(0xc25f, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf210);
        EXPECT(gbc.pc(), 0xa847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa846), 0xbe);
        EXPECT(gbc.readMem(0xc25f), 0x7e);
        // BE 00CA
        gbc.setState(0x2c20, 0x533d, 0xcfe0, 0x8529, 0xc102, 0x18fc, 0x1, 0x0);
        gbc.writeMem(0x18fc, { 0x61 });
        gbc.writeMem(0x2c20, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x533d);
        EXPECT(gbc.pc(), 0x2c21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 00CB
        gbc.setState(0x50b2, 0x65d8, 0x1810, 0x570c, 0x9269, 0x3945, 0x1, 0x1);
        gbc.writeMem(0x3945, { 0x9f });
        gbc.writeMem(0x50b2, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x65d8);
        EXPECT(gbc.pc(), 0x50b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 00CC
        gbc.setState(0x5a2b, 0x7ce8, 0xf7b0, 0x5e64, 0xaec1, 0xb118, 0x0, 0x0);
        gbc.writeMem(0x5a2b, { 0xbe });
        gbc.writeMem(0xb118, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7ce8);
        EXPECT(gbc.pc(), 0x5a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb118), 0x9d);
        // BE 00CD
        gbc.setState(0x9ec, 0x4f0e, 0x9ce0, 0x65f1, 0xa32c, 0x5002, 0x1, 0x1);
        gbc.writeMem(0x9ec, { 0xbe });
        gbc.writeMem(0x5002, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4f0e);
        EXPECT(gbc.pc(), 0x9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 00CE
        gbc.setState(0x4891, 0xe4e9, 0xab50, 0x9782, 0x659a, 0x85e4, 0x1, 0x1);
        gbc.writeMem(0x4891, { 0xbe });
        gbc.writeMem(0x85e4, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe4e9);
        EXPECT(gbc.pc(), 0x4892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85e4), 0xcc);
        // BE 00CF
        gbc.setState(0xe04d, 0x34ea, 0x10c0, 0x2fbb, 0x85c8, 0xd0e3, 0x1, 0x1);
        gbc.writeMem(0xd0e3, { 0x4f });
        gbc.writeMem(0xe04d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x34ea);
        EXPECT(gbc.pc(), 0xe04e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e3), 0x4f);
        EXPECT(gbc.readMem(0xe04d), 0xbe);
        // BE 00D0
        gbc.setState(0x3af2, 0xce8d, 0x96f0, 0xe0be, 0x5366, 0x9a1d, 0x0, 0x1);
        gbc.writeMem(0x3af2, { 0xbe });
        gbc.writeMem(0x9a1d, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xce8d);
        EXPECT(gbc.pc(), 0x3af3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1d), 0x16);
        // BE 00D2
        gbc.setState(0x5a61, 0xb8ce, 0x7bc0, 0x80c8, 0xdfb7, 0x7d30, 0x1, 0x1);
        gbc.writeMem(0x5a61, { 0xbe });
        gbc.writeMem(0x7d30, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb8ce);
        EXPECT(gbc.pc(), 0x5a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 00D3
        gbc.setState(0xb930, 0xf81e, 0xa460, 0xd7c7, 0x8866, 0xfce4, 0x0, 0x0);
        gbc.writeMem(0xb930, { 0xbe });
        gbc.writeMem(0xfce4, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf81e);
        EXPECT(gbc.pc(), 0xb931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb930), 0xbe);
        EXPECT(gbc.readMem(0xfce4), 0xa0);
        // BE 00D4
        gbc.setState(0x1b8, 0x53ec, 0xc420, 0x4819, 0xe550, 0xe8f6, 0x1, 0x1);
        gbc.writeMem(0x1b8, { 0xbe });
        gbc.writeMem(0xe8f6, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x53ec);
        EXPECT(gbc.pc(), 0x1b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8f6), 0x3b);
        // BE 00D5
        gbc.setState(0x6903, 0x9fa4, 0xd2f0, 0x1152, 0xaff4, 0x8816, 0x1, 0x0);
        gbc.writeMem(0x6903, { 0xbe });
        gbc.writeMem(0x8816, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9fa4);
        EXPECT(gbc.pc(), 0x6904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8816), 0x4a);
        // BE 00D6
        gbc.setState(0xb706, 0x8a08, 0xe600, 0x5f8d, 0x6902, 0x4969, 0x0, 0x0);
        gbc.writeMem(0x4969, { 0x51 });
        gbc.writeMem(0xb706, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8a08);
        EXPECT(gbc.pc(), 0xb707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb706), 0xbe);
        // BE 00D7
        gbc.setState(0x5d0c, 0x49eb, 0xd0c0, 0xee85, 0xce69, 0x73ea, 0x1, 0x1);
        gbc.writeMem(0x5d0c, { 0xbe });
        gbc.writeMem(0x73ea, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x49eb);
        EXPECT(gbc.pc(), 0x5d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 00D8
        gbc.setState(0x2dd, 0x5416, 0xa360, 0xf329, 0xe477, 0xdbe, 0x1, 0x1);
        gbc.writeMem(0x2dd, { 0xbe });
        gbc.writeMem(0xdbe, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5416);
        EXPECT(gbc.pc(), 0x2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 00D9
        gbc.setState(0x267a, 0xc1d5, 0xf7f0, 0x3366, 0xcc48, 0x3fa7, 0x0, 0x1);
        gbc.writeMem(0x267a, { 0xbe });
        gbc.writeMem(0x3fa7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc1d5);
        EXPECT(gbc.pc(), 0x267b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 00DB
        gbc.setState(0xb765, 0x77d9, 0x86c0, 0xc1fd, 0x8912, 0x4e64, 0x1, 0x1);
        gbc.writeMem(0x4e64, { 0x7 });
        gbc.writeMem(0xb765, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x77d9);
        EXPECT(gbc.pc(), 0xb766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb765), 0xbe);
        // BE 00DC
        gbc.setState(0x6a24, 0x4960, 0xc810, 0x49ad, 0x1205, 0xcd81, 0x1, 0x1);
        gbc.writeMem(0x6a24, { 0xbe });
        gbc.writeMem(0xcd81, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4960);
        EXPECT(gbc.pc(), 0x6a25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd81), 0x15);
        // BE 00DD
        gbc.setState(0xd7f1, 0xc23c, 0x81e0, 0xbb10, 0x7f1e, 0x612c, 0x0, 0x0);
        gbc.writeMem(0x612c, { 0xc5 });
        gbc.writeMem(0xd7f1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc23c);
        EXPECT(gbc.pc(), 0xd7f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f1), 0xbe);
        // BE 00DE
        gbc.setState(0x9aca, 0x3ddc, 0x1a0, 0x3a90, 0xee7f, 0x9890, 0x0, 0x1);
        gbc.writeMem(0x9890, { 0x2c });
        gbc.writeMem(0x9aca, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3ddc);
        EXPECT(gbc.pc(), 0x9acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9890), 0x2c);
        EXPECT(gbc.readMem(0x9aca), 0xbe);
        // BE 00DF
        gbc.setState(0x5acb, 0x74, 0x2a10, 0xacb3, 0xc4b4, 0xf623, 0x0, 0x0);
        gbc.writeMem(0x5acb, { 0xbe });
        gbc.writeMem(0xf623, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x74);
        EXPECT(gbc.pc(), 0x5acc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf623), 0xd7);
        // BE 00E1
        gbc.setState(0x9959, 0xd589, 0x20a0, 0x5850, 0x432c, 0xc430, 0x1, 0x1);
        gbc.writeMem(0x9959, { 0xbe });
        gbc.writeMem(0xc430, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd589);
        EXPECT(gbc.pc(), 0x995a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9959), 0xbe);
        EXPECT(gbc.readMem(0xc430), 0x57);
        // BE 00E2
        gbc.setState(0xa2e9, 0x518e, 0x64e0, 0x8bd8, 0x9933, 0xbebd, 0x0, 0x1);
        gbc.writeMem(0xa2e9, { 0xbe });
        gbc.writeMem(0xbebd, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x518e);
        EXPECT(gbc.pc(), 0xa2ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e9), 0xbe);
        EXPECT(gbc.readMem(0xbebd), 0x54);
        // BE 00E3
        gbc.setState(0x705c, 0xcb67, 0xaf70, 0x951e, 0x50db, 0xc62f, 0x1, 0x0);
        gbc.writeMem(0x705c, { 0xbe });
        gbc.writeMem(0xc62f, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xcb67);
        EXPECT(gbc.pc(), 0x705d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62f), 0x1e);
        // BE 00E4
        gbc.setState(0xefba, 0x8d7c, 0xe90, 0x9c85, 0x43bf, 0xff4c, 0x1, 0x1);
        gbc.writeMem(0xefba, { 0xbe });
        gbc.writeMem(0xff4c, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8d7c);
        EXPECT(gbc.pc(), 0xefbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefba), 0xbe);
        EXPECT(gbc.readMem(0xff4c), 0x5a);
        // BE 00E5
        gbc.setState(0x46fd, 0xc16a, 0x8c40, 0xe648, 0x6e7f, 0xc377, 0x1, 0x0);
        gbc.writeMem(0x46fd, { 0xbe });
        gbc.writeMem(0xc377, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc16a);
        EXPECT(gbc.pc(), 0x46fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc377), 0xc9);
        // BE 00E6
        gbc.setState(0x1f69, 0xcb02, 0x3420, 0xc25, 0x5308, 0xd69f, 0x0, 0x0);
        gbc.writeMem(0x1f69, { 0xbe });
        gbc.writeMem(0xd69f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xcb02);
        EXPECT(gbc.pc(), 0x1f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69f), 0xba);
        // BE 00E7
        gbc.setState(0x6e82, 0x2f1e, 0xb3b0, 0xe583, 0x820e, 0x7cfe, 0x1, 0x0);
        gbc.writeMem(0x6e82, { 0xbe });
        gbc.writeMem(0x7cfe, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2f1e);
        EXPECT(gbc.pc(), 0x6e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 00E8
        gbc.setState(0x3ff7, 0x7195, 0xb590, 0xaf61, 0x6843, 0x3103, 0x0, 0x1);
        gbc.writeMem(0x3103, { 0xd5 });
        gbc.writeMem(0x3ff7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7195);
        EXPECT(gbc.pc(), 0x3ff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 00EA
        gbc.setState(0x2e86, 0x7454, 0xf7b0, 0xdcca, 0xa223, 0x7432, 0x1, 0x0);
        gbc.writeMem(0x2e86, { 0xbe });
        gbc.writeMem(0x7432, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7454);
        EXPECT(gbc.pc(), 0x2e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 00EC
        gbc.setState(0x3b24, 0xb8c2, 0x8550, 0xe69d, 0xfa9e, 0x80ee, 0x1, 0x1);
        gbc.writeMem(0x3b24, { 0xbe });
        gbc.writeMem(0x80ee, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb8c2);
        EXPECT(gbc.pc(), 0x3b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ee), 0x13);
        // BE 00ED
        gbc.setState(0x2805, 0x7af8, 0x9fc0, 0xe0ee, 0x9bae, 0x82af, 0x0, 0x0);
        gbc.writeMem(0x2805, { 0xbe });
        gbc.writeMem(0x82af, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7af8);
        EXPECT(gbc.pc(), 0x2806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82af), 0x3e);
        // BE 00EE
        gbc.setState(0x36c8, 0x2db, 0xab40, 0x4ca3, 0xff3c, 0xfd82, 0x0, 0x1);
        gbc.writeMem(0x36c8, { 0xbe });
        gbc.writeMem(0xfd82, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2db);
        EXPECT(gbc.pc(), 0x36c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd82), 0xf1);
        // BE 00EF
        gbc.setState(0xaf36, 0x5cfc, 0x8d90, 0x2188, 0x2a93, 0x9d1, 0x1, 0x0);
        gbc.writeMem(0x9d1, { 0x9a });
        gbc.writeMem(0xaf36, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5cfc);
        EXPECT(gbc.pc(), 0xaf37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf36), 0xbe);
        // BE 00F0
        gbc.setState(0x830d, 0x75d3, 0x560, 0xaaae, 0x899e, 0x346, 0x0, 0x0);
        gbc.writeMem(0x346, { 0x5c });
        gbc.writeMem(0x830d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x75d3);
        EXPECT(gbc.pc(), 0x830e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x830d), 0xbe);
        // BE 00F1
        gbc.setState(0x4feb, 0x39e4, 0x12c0, 0x70d0, 0x7f01, 0xf1b, 0x0, 0x1);
        gbc.writeMem(0xf1b, { 0xd0 });
        gbc.writeMem(0x4feb, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x39e4);
        EXPECT(gbc.pc(), 0x4fec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 00F2
        gbc.setState(0x185e, 0xf2e5, 0x5a90, 0x94aa, 0x4d0, 0x1444, 0x1, 0x0);
        gbc.writeMem(0x1444, { 0xda });
        gbc.writeMem(0x185e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf2e5);
        EXPECT(gbc.pc(), 0x185f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 00F3
        gbc.setState(0xa481, 0x72f, 0x7cc0, 0xbaae, 0xaebc, 0xec1, 0x0, 0x1);
        gbc.writeMem(0xec1, { 0x75 });
        gbc.writeMem(0xa481, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x72f);
        EXPECT(gbc.pc(), 0xa482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa481), 0xbe);
        // BE 00F5
        gbc.setState(0x196c, 0xa136, 0x5370, 0x7bb4, 0x581a, 0xb379, 0x0, 0x0);
        gbc.writeMem(0x196c, { 0xbe });
        gbc.writeMem(0xb379, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa136);
        EXPECT(gbc.pc(), 0x196d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb379), 0x3f);
        // BE 00F6
        gbc.setState(0x7c57, 0xca38, 0xbbf0, 0xc2a1, 0x2b43, 0x6cb2, 0x0, 0x1);
        gbc.writeMem(0x6cb2, { 0xd6 });
        gbc.writeMem(0x7c57, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xca38);
        EXPECT(gbc.pc(), 0x7c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 00F7
        gbc.setState(0x623b, 0xc809, 0x920, 0x4512, 0xeeb2, 0x43b4, 0x0, 0x0);
        gbc.writeMem(0x43b4, { 0xba });
        gbc.writeMem(0x623b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc809);
        EXPECT(gbc.pc(), 0x623c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 00F8
        gbc.setState(0x8de9, 0xbf90, 0x890, 0xabe6, 0x220c, 0x5992, 0x0, 0x1);
        gbc.writeMem(0x5992, { 0xe1 });
        gbc.writeMem(0x8de9, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbf90);
        EXPECT(gbc.pc(), 0x8dea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de9), 0xbe);
        // BE 00F9
        gbc.setState(0x9754, 0x4c41, 0xb40, 0xd9c9, 0x2605, 0xd53a, 0x0, 0x1);
        gbc.writeMem(0x9754, { 0xbe });
        gbc.writeMem(0xd53a, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4c41);
        EXPECT(gbc.pc(), 0x9755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9754), 0xbe);
        EXPECT(gbc.readMem(0xd53a), 0xc0);
        // BE 00FA
        gbc.setState(0x7db1, 0x24c8, 0x32d0, 0x8b3b, 0x49ac, 0x5f24, 0x0, 0x0);
        gbc.writeMem(0x5f24, { 0x19 });
        gbc.writeMem(0x7db1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x24c8);
        EXPECT(gbc.pc(), 0x7db2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 00FB
        gbc.setState(0x3028, 0x58c9, 0x25d0, 0x4d6c, 0x3132, 0xc3ce, 0x1, 0x0);
        gbc.writeMem(0x3028, { 0xbe });
        gbc.writeMem(0xc3ce, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x58c9);
        EXPECT(gbc.pc(), 0x3029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ce), 0xa0);
        // BE 00FC
        gbc.setState(0x8e23, 0xde4d, 0x72b0, 0x587c, 0x264f, 0xac18, 0x0, 0x1);
        gbc.writeMem(0x8e23, { 0xbe });
        gbc.writeMem(0xac18, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xde4d);
        EXPECT(gbc.pc(), 0x8e24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e23), 0xbe);
        EXPECT(gbc.readMem(0xac18), 0xba);
        // BE 00FD
        gbc.setState(0x4c8c, 0x8b43, 0x5420, 0xbca4, 0x794e, 0x6787, 0x0, 0x0);
        gbc.writeMem(0x4c8c, { 0xbe });
        gbc.writeMem(0x6787, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8b43);
        EXPECT(gbc.pc(), 0x4c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 00FE
        gbc.setState(0xc9d3, 0x8865, 0xab90, 0x9a91, 0x13f, 0xa208, 0x1, 0x0);
        gbc.writeMem(0xa208, { 0x82 });
        gbc.writeMem(0xc9d3, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8865);
        EXPECT(gbc.pc(), 0xc9d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa208), 0x82);
        EXPECT(gbc.readMem(0xc9d3), 0xbe);
        // BE 00FF
        gbc.setState(0x2f9f, 0x86ae, 0x410, 0x8cd4, 0x97d8, 0x3c26, 0x0, 0x0);
        gbc.writeMem(0x2f9f, { 0xbe });
        gbc.writeMem(0x3c26, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x86ae);
        EXPECT(gbc.pc(), 0x2fa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0100
        gbc.setState(0xac0c, 0x9f8d, 0x2040, 0x62da, 0xd19a, 0x4c72, 0x1, 0x1);
        gbc.writeMem(0x4c72, { 0xe4 });
        gbc.writeMem(0xac0c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9f8d);
        EXPECT(gbc.pc(), 0xac0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0c), 0xbe);
        // BE 0102
        gbc.setState(0xe1c7, 0x293, 0xe760, 0x3b1f, 0xeb5a, 0xf689, 0x1, 0x0);
        gbc.writeMem(0xe1c7, { 0xbe });
        gbc.writeMem(0xf689, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x293);
        EXPECT(gbc.pc(), 0xe1c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1c7), 0xbe);
        EXPECT(gbc.readMem(0xf689), 0x91);
        // BE 0103
        gbc.setState(0x7996, 0x57bc, 0x7f20, 0x2897, 0xd217, 0xfbd4, 0x0, 0x1);
        gbc.writeMem(0x7996, { 0xbe });
        gbc.writeMem(0xfbd4, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x57bc);
        EXPECT(gbc.pc(), 0x7997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfbd4), 0x24);
        // BE 0104
        gbc.setState(0x20b6, 0x3308, 0xe8c0, 0x9f6, 0xba7b, 0x9884, 0x1, 0x0);
        gbc.writeMem(0x20b6, { 0xbe });
        gbc.writeMem(0x9884, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3308);
        EXPECT(gbc.pc(), 0x20b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9884), 0xf9);
        // BE 0105
        gbc.setState(0xa7e1, 0x5591, 0xda60, 0x6ce5, 0x5508, 0xa04, 0x0, 0x1);
        gbc.writeMem(0xa04, { 0x75 });
        gbc.writeMem(0xa7e1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5591);
        EXPECT(gbc.pc(), 0xa7e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e1), 0xbe);
        // BE 0106
        gbc.setState(0x9b60, 0x3cc3, 0x3f50, 0x4b5e, 0xb09b, 0x4869, 0x0, 0x1);
        gbc.writeMem(0x4869, { 0x95 });
        gbc.writeMem(0x9b60, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3cc3);
        EXPECT(gbc.pc(), 0x9b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b60), 0xbe);
        // BE 0108
        gbc.setState(0x9437, 0xa48e, 0x880, 0x9bea, 0xdaba, 0x4184, 0x1, 0x1);
        gbc.writeMem(0x4184, { 0x10 });
        gbc.writeMem(0x9437, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa48e);
        EXPECT(gbc.pc(), 0x9438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9437), 0xbe);
        // BE 0109
        gbc.setState(0xd50f, 0x1217, 0xcc60, 0xbdd3, 0x1b2d, 0xb0ba, 0x0, 0x0);
        gbc.writeMem(0xb0ba, { 0xe });
        gbc.writeMem(0xd50f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1217);
        EXPECT(gbc.pc(), 0xd510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ba), 0xe);
        EXPECT(gbc.readMem(0xd50f), 0xbe);
        // BE 010A
        gbc.setState(0xe3fc, 0x355, 0xfca0, 0x697c, 0xdf5b, 0xb34e, 0x1, 0x0);
        gbc.writeMem(0xb34e, { 0x52 });
        gbc.writeMem(0xe3fc, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x355);
        EXPECT(gbc.pc(), 0xe3fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb34e), 0x52);
        EXPECT(gbc.readMem(0xe3fc), 0xbe);
        // BE 010B
        gbc.setState(0xd2b7, 0xb9ac, 0x8b20, 0xf96c, 0xa876, 0x20de, 0x1, 0x0);
        gbc.writeMem(0x20de, { 0x34 });
        gbc.writeMem(0xd2b7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb9ac);
        EXPECT(gbc.pc(), 0xd2b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b7), 0xbe);
        // BE 010C
        gbc.setState(0xe977, 0x358f, 0xbe70, 0x9ba, 0x6484, 0x901b, 0x1, 0x0);
        gbc.writeMem(0x901b, { 0xe8 });
        gbc.writeMem(0xe977, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x358f);
        EXPECT(gbc.pc(), 0xe978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x901b), 0xe8);
        EXPECT(gbc.readMem(0xe977), 0xbe);
        // BE 010D
        gbc.setState(0xb6de, 0x95ef, 0x5d50, 0xa9f2, 0x1fe5, 0x4f1c, 0x1, 0x0);
        gbc.writeMem(0x4f1c, { 0x13 });
        gbc.writeMem(0xb6de, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x95ef);
        EXPECT(gbc.pc(), 0xb6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6de), 0xbe);
        // BE 010E
        gbc.setState(0x94f, 0xb6d3, 0x6140, 0x38a1, 0x1a37, 0xc187, 0x1, 0x1);
        gbc.writeMem(0x94f, { 0xbe });
        gbc.writeMem(0xc187, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb6d3);
        EXPECT(gbc.pc(), 0x950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc187), 0xda);
        // BE 010F
        gbc.setState(0xbc1e, 0x5ec1, 0x1cf0, 0xced, 0xdd65, 0x7aad, 0x0, 0x1);
        gbc.writeMem(0x7aad, { 0xd1 });
        gbc.writeMem(0xbc1e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5ec1);
        EXPECT(gbc.pc(), 0xbc1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc1e), 0xbe);
        // BE 0110
        gbc.setState(0xe838, 0xb9dd, 0x7570, 0xdb87, 0xf78a, 0xef60, 0x1, 0x1);
        gbc.writeMem(0xe838, { 0xbe });
        gbc.writeMem(0xef60, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb9dd);
        EXPECT(gbc.pc(), 0xe839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe838), 0xbe);
        EXPECT(gbc.readMem(0xef60), 0xe5);
        // BE 0111
        gbc.setState(0x7025, 0xb37f, 0xd330, 0x4c45, 0x6919, 0x3d8f, 0x0, 0x1);
        gbc.writeMem(0x3d8f, { 0xa1 });
        gbc.writeMem(0x7025, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb37f);
        EXPECT(gbc.pc(), 0x7026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0112
        gbc.setState(0x3126, 0x9fca, 0xa1b0, 0xa381, 0xa1be, 0x7f8e, 0x0, 0x0);
        gbc.writeMem(0x3126, { 0xbe });
        gbc.writeMem(0x7f8e, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9fca);
        EXPECT(gbc.pc(), 0x3127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0113
        gbc.setState(0x5f0d, 0xb435, 0x93b0, 0x6fee, 0xead6, 0x4ec3, 0x1, 0x0);
        gbc.writeMem(0x4ec3, { 0xb4 });
        gbc.writeMem(0x5f0d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb435);
        EXPECT(gbc.pc(), 0x5f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0114
        gbc.setState(0x82e2, 0xc643, 0x3b00, 0x3341, 0x27ab, 0xa63d, 0x0, 0x0);
        gbc.writeMem(0x82e2, { 0xbe });
        gbc.writeMem(0xa63d, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc643);
        EXPECT(gbc.pc(), 0x82e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e2), 0xbe);
        EXPECT(gbc.readMem(0xa63d), 0xb2);
        // BE 0115
        gbc.setState(0x9137, 0x2f2, 0x3c60, 0x698f, 0x6fa9, 0xc477, 0x1, 0x0);
        gbc.writeMem(0x9137, { 0xbe });
        gbc.writeMem(0xc477, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2f2);
        EXPECT(gbc.pc(), 0x9138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9137), 0xbe);
        EXPECT(gbc.readMem(0xc477), 0xec);
        // BE 0116
        gbc.setState(0x5a9f, 0xb131, 0x5640, 0x50a, 0xaa58, 0xae0b, 0x0, 0x1);
        gbc.writeMem(0x5a9f, { 0xbe });
        gbc.writeMem(0xae0b, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb131);
        EXPECT(gbc.pc(), 0x5aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae0b), 0x5c);
        // BE 0117
        gbc.setState(0x1b59, 0xf9ea, 0x94a0, 0xc892, 0xfcf8, 0x7d76, 0x0, 0x1);
        gbc.writeMem(0x1b59, { 0xbe });
        gbc.writeMem(0x7d76, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf9ea);
        EXPECT(gbc.pc(), 0x1b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0118
        gbc.setState(0xb774, 0x19a8, 0x34a0, 0x8592, 0x36d2, 0x2ba, 0x1, 0x0);
        gbc.writeMem(0x2ba, { 0xe4 });
        gbc.writeMem(0xb774, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x19a8);
        EXPECT(gbc.pc(), 0xb775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb774), 0xbe);
        // BE 0119
        gbc.setState(0x2a43, 0xec0f, 0x1a00, 0x3465, 0x9068, 0xc5e6, 0x0, 0x0);
        gbc.writeMem(0x2a43, { 0xbe });
        gbc.writeMem(0xc5e6, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xec0f);
        EXPECT(gbc.pc(), 0x2a44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e6), 0x66);
        // BE 011A
        gbc.setState(0x12cd, 0x7ed5, 0xc90, 0xf464, 0x4942, 0xb973, 0x0, 0x1);
        gbc.writeMem(0x12cd, { 0xbe });
        gbc.writeMem(0xb973, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7ed5);
        EXPECT(gbc.pc(), 0x12ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb973), 0x46);
        // BE 011B
        gbc.setState(0x8be4, 0x7d13, 0xe9d0, 0x6894, 0x61c5, 0x276f, 0x1, 0x1);
        gbc.writeMem(0x276f, { 0x5c });
        gbc.writeMem(0x8be4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7d13);
        EXPECT(gbc.pc(), 0x8be5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be4), 0xbe);
        // BE 011C
        gbc.setState(0x93ea, 0xdfe7, 0xfe60, 0xadc, 0x630b, 0xe7ff, 0x0, 0x1);
        gbc.writeMem(0x93ea, { 0xbe });
        gbc.writeMem(0xe7ff, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdfe7);
        EXPECT(gbc.pc(), 0x93eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ea), 0xbe);
        EXPECT(gbc.readMem(0xe7ff), 0x7b);
        // BE 011D
        gbc.setState(0xc1a4, 0x6dc8, 0xca0, 0x4ec7, 0x8cf, 0x4346, 0x1, 0x1);
        gbc.writeMem(0x4346, { 0x1d });
        gbc.writeMem(0xc1a4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6dc8);
        EXPECT(gbc.pc(), 0xc1a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a4), 0xbe);
        // BE 011E
        gbc.setState(0x916d, 0x815c, 0xe9d0, 0x7b5a, 0x846, 0xe1af, 0x0, 0x0);
        gbc.writeMem(0x916d, { 0xbe });
        gbc.writeMem(0xe1af, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x815c);
        EXPECT(gbc.pc(), 0x916e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x916d), 0xbe);
        EXPECT(gbc.readMem(0xe1af), 0xde);
        // BE 011F
        gbc.setState(0x2aad, 0xf758, 0x9130, 0xe988, 0x8c92, 0xca45, 0x0, 0x1);
        gbc.writeMem(0x2aad, { 0xbe });
        gbc.writeMem(0xca45, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf758);
        EXPECT(gbc.pc(), 0x2aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca45), 0x7c);
        // BE 0120
        gbc.setState(0x466a, 0xd60c, 0x4ed0, 0x2fc3, 0x1688, 0x5803, 0x0, 0x0);
        gbc.writeMem(0x466a, { 0xbe });
        gbc.writeMem(0x5803, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd60c);
        EXPECT(gbc.pc(), 0x466b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0121
        gbc.setState(0x7323, 0xf71b, 0x5a40, 0x971a, 0x3637, 0xfc78, 0x0, 0x0);
        gbc.writeMem(0x7323, { 0xbe });
        gbc.writeMem(0xfc78, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf71b);
        EXPECT(gbc.pc(), 0x7324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc78), 0xeb);
        // BE 0122
        gbc.setState(0x6eda, 0x9990, 0x10b0, 0x496e, 0xb41e, 0xc560, 0x1, 0x0);
        gbc.writeMem(0x6eda, { 0xbe });
        gbc.writeMem(0xc560, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9990);
        EXPECT(gbc.pc(), 0x6edb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc560), 0x3);
        // BE 0123
        gbc.setState(0x2514, 0xd11b, 0xa530, 0x299e, 0x62d6, 0x704f, 0x1, 0x0);
        gbc.writeMem(0x2514, { 0xbe });
        gbc.writeMem(0x704f, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd11b);
        EXPECT(gbc.pc(), 0x2515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0124
        gbc.setState(0xdc3b, 0x9e32, 0x4ec0, 0xc817, 0xf064, 0x1a39, 0x1, 0x1);
        gbc.writeMem(0x1a39, { 0xd });
        gbc.writeMem(0xdc3b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9e32);
        EXPECT(gbc.pc(), 0xdc3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc3b), 0xbe);
        // BE 0125
        gbc.setState(0x6fb6, 0xda1c, 0xe590, 0x3b25, 0x9f18, 0xdf37, 0x1, 0x1);
        gbc.writeMem(0x6fb6, { 0xbe });
        gbc.writeMem(0xdf37, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xda1c);
        EXPECT(gbc.pc(), 0x6fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf37), 0xb0);
        // BE 0126
        gbc.setState(0x3daf, 0xe90e, 0x66e0, 0xee27, 0xe6c5, 0xd4de, 0x1, 0x0);
        gbc.writeMem(0x3daf, { 0xbe });
        gbc.writeMem(0xd4de, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe90e);
        EXPECT(gbc.pc(), 0x3db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4de), 0xd1);
        // BE 0127
        gbc.setState(0x17a2, 0x747b, 0x3c20, 0xb782, 0x75c1, 0x4670, 0x0, 0x0);
        gbc.writeMem(0x17a2, { 0xbe });
        gbc.writeMem(0x4670, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x747b);
        EXPECT(gbc.pc(), 0x17a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0128
        gbc.setState(0xd4d5, 0xe06d, 0xb320, 0xdb51, 0x47d1, 0x66c0, 0x0, 0x1);
        gbc.writeMem(0x66c0, { 0xa1 });
        gbc.writeMem(0xd4d5, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe06d);
        EXPECT(gbc.pc(), 0xd4d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d5), 0xbe);
        // BE 0129
        gbc.setState(0x6a9f, 0x897f, 0x74e0, 0xba06, 0xb413, 0xe1db, 0x1, 0x0);
        gbc.writeMem(0x6a9f, { 0xbe });
        gbc.writeMem(0xe1db, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x897f);
        EXPECT(gbc.pc(), 0x6aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1db), 0x99);
        // BE 012A
        gbc.setState(0x16ca, 0xa7a2, 0xee70, 0xab0f, 0x2cd9, 0xf060, 0x0, 0x1);
        gbc.writeMem(0x16ca, { 0xbe });
        gbc.writeMem(0xf060, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa7a2);
        EXPECT(gbc.pc(), 0x16cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf060), 0x25);
        // BE 012C
        gbc.setState(0xda76, 0xa4d9, 0x6540, 0x694c, 0xe15a, 0xdd91, 0x1, 0x1);
        gbc.writeMem(0xda76, { 0xbe });
        gbc.writeMem(0xdd91, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa4d9);
        EXPECT(gbc.pc(), 0xda77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda76), 0xbe);
        EXPECT(gbc.readMem(0xdd91), 0x6f);
        // BE 012D
        gbc.setState(0x63c7, 0x16df, 0xe170, 0x73c7, 0x78d6, 0x490d, 0x1, 0x0);
        gbc.writeMem(0x490d, { 0xbb });
        gbc.writeMem(0x63c7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x16df);
        EXPECT(gbc.pc(), 0x63c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 012E
        gbc.setState(0x84e5, 0x10b1, 0x73b0, 0xe4ec, 0x3c0e, 0xdc89, 0x0, 0x1);
        gbc.writeMem(0x84e5, { 0xbe });
        gbc.writeMem(0xdc89, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x10b1);
        EXPECT(gbc.pc(), 0x84e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e5), 0xbe);
        EXPECT(gbc.readMem(0xdc89), 0x26);
        // BE 012F
        gbc.setState(0xc334, 0x5219, 0x6fc0, 0x7405, 0xd5bf, 0x9f73, 0x1, 0x1);
        gbc.writeMem(0x9f73, { 0xc9 });
        gbc.writeMem(0xc334, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5219);
        EXPECT(gbc.pc(), 0xc335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f73), 0xc9);
        EXPECT(gbc.readMem(0xc334), 0xbe);
        // BE 0130
        gbc.setState(0x3bfd, 0x6a65, 0x56c0, 0xe75d, 0x4652, 0xfa0e, 0x1, 0x1);
        gbc.writeMem(0x3bfd, { 0xbe });
        gbc.writeMem(0xfa0e, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6a65);
        EXPECT(gbc.pc(), 0x3bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa0e), 0xcb);
        // BE 0131
        gbc.setState(0x4342, 0x936e, 0x3300, 0x9d0c, 0xe11d, 0x5267, 0x0, 0x0);
        gbc.writeMem(0x4342, { 0xbe });
        gbc.writeMem(0x5267, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x936e);
        EXPECT(gbc.pc(), 0x4343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0133
        gbc.setState(0xe7bf, 0xfef9, 0xd50, 0x17c5, 0x3940, 0x3e1d, 0x0, 0x0);
        gbc.writeMem(0x3e1d, { 0xcc });
        gbc.writeMem(0xe7bf, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfef9);
        EXPECT(gbc.pc(), 0xe7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7bf), 0xbe);
        // BE 0134
        gbc.setState(0x21df, 0xf474, 0x6d10, 0x534a, 0xeb83, 0xa0c3, 0x0, 0x0);
        gbc.writeMem(0x21df, { 0xbe });
        gbc.writeMem(0xa0c3, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf474);
        EXPECT(gbc.pc(), 0x21e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c3), 0x6b);
        // BE 0135
        gbc.setState(0x1c09, 0xc1a, 0x7d00, 0x3ac5, 0xe446, 0x529a, 0x0, 0x0);
        gbc.writeMem(0x1c09, { 0xbe });
        gbc.writeMem(0x529a, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc1a);
        EXPECT(gbc.pc(), 0x1c0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0136
        gbc.setState(0xb746, 0xee58, 0x9d60, 0x23c3, 0xd3fe, 0x2f85, 0x1, 0x0);
        gbc.writeMem(0x2f85, { 0xcd });
        gbc.writeMem(0xb746, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xee58);
        EXPECT(gbc.pc(), 0xb747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb746), 0xbe);
        // BE 0137
        gbc.setState(0x2421, 0x329b, 0xc2e0, 0xda0e, 0x965, 0xd1f6, 0x1, 0x1);
        gbc.writeMem(0x2421, { 0xbe });
        gbc.writeMem(0xd1f6, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x329b);
        EXPECT(gbc.pc(), 0x2422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f6), 0xd);
        // BE 0138
        gbc.setState(0xd95, 0x204, 0xb270, 0x1de5, 0x7d68, 0x7c66, 0x0, 0x0);
        gbc.writeMem(0xd95, { 0xbe });
        gbc.writeMem(0x7c66, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x204);
        EXPECT(gbc.pc(), 0xd96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0139
        gbc.setState(0x7b62, 0x2b93, 0xaa40, 0xfbad, 0xbcf4, 0x8997, 0x1, 0x1);
        gbc.writeMem(0x7b62, { 0xbe });
        gbc.writeMem(0x8997, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2b93);
        EXPECT(gbc.pc(), 0x7b63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8997), 0xda);
        // BE 013A
        gbc.setState(0xb417, 0xea03, 0xe470, 0xbfc3, 0x23e2, 0xe1c4, 0x1, 0x0);
        gbc.writeMem(0xb417, { 0xbe });
        gbc.writeMem(0xe1c4, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xea03);
        EXPECT(gbc.pc(), 0xb418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb417), 0xbe);
        EXPECT(gbc.readMem(0xe1c4), 0xf8);
        // BE 013C
        gbc.setState(0x6884, 0x649e, 0xc4f0, 0x599, 0xd034, 0xbf16, 0x0, 0x0);
        gbc.writeMem(0x6884, { 0xbe });
        gbc.writeMem(0xbf16, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x649e);
        EXPECT(gbc.pc(), 0x6885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf16), 0x43);
        // BE 013D
        gbc.setState(0x2f11, 0x4564, 0xa70, 0x4235, 0x2c7e, 0x57a, 0x0, 0x1);
        gbc.writeMem(0x57a, { 0xa3 });
        gbc.writeMem(0x2f11, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4564);
        EXPECT(gbc.pc(), 0x2f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 013E
        gbc.setState(0xedf7, 0xa0da, 0xca80, 0x31, 0x1343, 0x2620, 0x1, 0x1);
        gbc.writeMem(0x2620, { 0x67 });
        gbc.writeMem(0xedf7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa0da);
        EXPECT(gbc.pc(), 0xedf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf7), 0xbe);
        // BE 013F
        gbc.setState(0x5ef2, 0xbe28, 0xb4b0, 0x5f1c, 0xc1a7, 0x8a4d, 0x1, 0x1);
        gbc.writeMem(0x5ef2, { 0xbe });
        gbc.writeMem(0x8a4d, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbe28);
        EXPECT(gbc.pc(), 0x5ef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a4d), 0x35);
        // BE 0140
        gbc.setState(0x15be, 0xcc99, 0x7550, 0x1547, 0x9d18, 0xf73, 0x0, 0x1);
        gbc.writeMem(0xf73, { 0x4c });
        gbc.writeMem(0x15be, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xcc99);
        EXPECT(gbc.pc(), 0x15bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0141
        gbc.setState(0x11a4, 0x66af, 0x1af0, 0x8daa, 0xa679, 0x638b, 0x1, 0x1);
        gbc.writeMem(0x11a4, { 0xbe });
        gbc.writeMem(0x638b, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x66af);
        EXPECT(gbc.pc(), 0x11a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0142
        gbc.setState(0xc8d8, 0xcf8b, 0xa250, 0xf0c4, 0xba35, 0x7247, 0x1, 0x1);
        gbc.writeMem(0x7247, { 0xc4 });
        gbc.writeMem(0xc8d8, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xcf8b);
        EXPECT(gbc.pc(), 0xc8d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d8), 0xbe);
        // BE 0143
        gbc.setState(0x3cc9, 0x604c, 0xeae0, 0xf4d4, 0x16e9, 0xcc86, 0x1, 0x0);
        gbc.writeMem(0x3cc9, { 0xbe });
        gbc.writeMem(0xcc86, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x604c);
        EXPECT(gbc.pc(), 0x3cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc86), 0x74);
        // BE 0144
        gbc.setState(0xe68f, 0xd113, 0x68d0, 0xe5a5, 0x8c33, 0x742, 0x1, 0x0);
        gbc.writeMem(0x742, { 0x95 });
        gbc.writeMem(0xe68f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd113);
        EXPECT(gbc.pc(), 0xe690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68f), 0xbe);
        // BE 0145
        gbc.setState(0xa5e, 0x7e6, 0xa4d0, 0x7930, 0x4a4, 0x9928, 0x1, 0x0);
        gbc.writeMem(0xa5e, { 0xbe });
        gbc.writeMem(0x9928, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7e6);
        EXPECT(gbc.pc(), 0xa5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9928), 0xc7);
        // BE 0146
        gbc.setState(0xc216, 0x78c4, 0x8650, 0xe394, 0x6344, 0x3e3, 0x0, 0x1);
        gbc.writeMem(0x3e3, { 0x88 });
        gbc.writeMem(0xc216, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x78c4);
        EXPECT(gbc.pc(), 0xc217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc216), 0xbe);
        // BE 0147
        gbc.setState(0xefd2, 0x8b68, 0x2350, 0x7b9c, 0xecbd, 0x7953, 0x0, 0x1);
        gbc.writeMem(0x7953, { 0x90 });
        gbc.writeMem(0xefd2, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8b68);
        EXPECT(gbc.pc(), 0xefd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd2), 0xbe);
        // BE 0148
        gbc.setState(0xc506, 0x1b08, 0x9420, 0x5355, 0x4287, 0xe8f7, 0x0, 0x1);
        gbc.writeMem(0xc506, { 0xbe });
        gbc.writeMem(0xe8f7, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1b08);
        EXPECT(gbc.pc(), 0xc507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc506), 0xbe);
        EXPECT(gbc.readMem(0xe8f7), 0x31);
        // BE 0149
        gbc.setState(0xb74b, 0x90e9, 0x8d00, 0xc2ae, 0x69ef, 0xb329, 0x1, 0x1);
        gbc.writeMem(0xb329, { 0xc7 });
        gbc.writeMem(0xb74b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x90e9);
        EXPECT(gbc.pc(), 0xb74c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb329), 0xc7);
        EXPECT(gbc.readMem(0xb74b), 0xbe);
        // BE 014A
        gbc.setState(0xa96f, 0xa082, 0x6820, 0x3f8b, 0xb661, 0x2a17, 0x0, 0x1);
        gbc.writeMem(0x2a17, { 0xdd });
        gbc.writeMem(0xa96f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa082);
        EXPECT(gbc.pc(), 0xa970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa96f), 0xbe);
        // BE 014B
        gbc.setState(0xa91d, 0xbe1d, 0xbfc0, 0x8f89, 0xc0a5, 0x4888, 0x1, 0x1);
        gbc.writeMem(0x4888, { 0x2d });
        gbc.writeMem(0xa91d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbe1d);
        EXPECT(gbc.pc(), 0xa91e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91d), 0xbe);
        // BE 014C
        gbc.setState(0xb70f, 0xa1fb, 0x7730, 0xdc74, 0x7e0c, 0xa1a2, 0x1, 0x1);
        gbc.writeMem(0xa1a2, { 0x7e });
        gbc.writeMem(0xb70f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa1fb);
        EXPECT(gbc.pc(), 0xb710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a2), 0x7e);
        EXPECT(gbc.readMem(0xb70f), 0xbe);
        // BE 014D
        gbc.setState(0x8b89, 0xd08, 0x1530, 0xa6a, 0xac90, 0x9072, 0x0, 0x1);
        gbc.writeMem(0x8b89, { 0xbe });
        gbc.writeMem(0x9072, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd08);
        EXPECT(gbc.pc(), 0x8b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b89), 0xbe);
        EXPECT(gbc.readMem(0x9072), 0x5b);
        // BE 014E
        gbc.setState(0xa6cd, 0xff91, 0xea00, 0x3096, 0xcb46, 0xf705, 0x1, 0x0);
        gbc.writeMem(0xa6cd, { 0xbe });
        gbc.writeMem(0xf705, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xff91);
        EXPECT(gbc.pc(), 0xa6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6cd), 0xbe);
        EXPECT(gbc.readMem(0xf705), 0x7);
        // BE 014F
        gbc.setState(0x818e, 0xeb91, 0xbe60, 0xc035, 0xefd6, 0xd83d, 0x1, 0x1);
        gbc.writeMem(0x818e, { 0xbe });
        gbc.writeMem(0xd83d, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xeb91);
        EXPECT(gbc.pc(), 0x818f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x818e), 0xbe);
        EXPECT(gbc.readMem(0xd83d), 0x74);
        // BE 0150
        gbc.setState(0x1038, 0x869d, 0x46d0, 0xab15, 0x521, 0x95cd, 0x0, 0x1);
        gbc.writeMem(0x1038, { 0xbe });
        gbc.writeMem(0x95cd, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x869d);
        EXPECT(gbc.pc(), 0x1039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95cd), 0xaa);
        // BE 0151
        gbc.setState(0xe0ba, 0xd0c8, 0x7d40, 0x36b7, 0x6b1e, 0x8ed3, 0x0, 0x0);
        gbc.writeMem(0x8ed3, { 0x53 });
        gbc.writeMem(0xe0ba, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd0c8);
        EXPECT(gbc.pc(), 0xe0bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed3), 0x53);
        EXPECT(gbc.readMem(0xe0ba), 0xbe);
        // BE 0152
        gbc.setState(0x15e8, 0x1698, 0x63b0, 0x42bb, 0x8de4, 0xb9d9, 0x1, 0x1);
        gbc.writeMem(0x15e8, { 0xbe });
        gbc.writeMem(0xb9d9, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1698);
        EXPECT(gbc.pc(), 0x15e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d9), 0x86);
        // BE 0153
        gbc.setState(0xdc87, 0x4d6d, 0xd880, 0x74f3, 0xf3ff, 0x7002, 0x1, 0x1);
        gbc.writeMem(0x7002, { 0x4d });
        gbc.writeMem(0xdc87, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4d6d);
        EXPECT(gbc.pc(), 0xdc88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc87), 0xbe);
        // BE 0154
        gbc.setState(0xaed6, 0x16f1, 0x8d0, 0xa6d8, 0x1041, 0x78c8, 0x0, 0x1);
        gbc.writeMem(0x78c8, { 0xb8 });
        gbc.writeMem(0xaed6, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x16f1);
        EXPECT(gbc.pc(), 0xaed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed6), 0xbe);
        // BE 0155
        gbc.setState(0x28c6, 0xf62f, 0x7690, 0x15f7, 0x109a, 0x2486, 0x1, 0x1);
        gbc.writeMem(0x2486, { 0x1f });
        gbc.writeMem(0x28c6, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf62f);
        EXPECT(gbc.pc(), 0x28c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0156
        gbc.setState(0x3a30, 0x2e97, 0x21a0, 0x52ef, 0x867b, 0x449b, 0x0, 0x1);
        gbc.writeMem(0x3a30, { 0xbe });
        gbc.writeMem(0x449b, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2e97);
        EXPECT(gbc.pc(), 0x3a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0157
        gbc.setState(0x8e55, 0x3b5c, 0xcf90, 0x5ec8, 0x1fa2, 0xcd65, 0x1, 0x0);
        gbc.writeMem(0x8e55, { 0xbe });
        gbc.writeMem(0xcd65, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3b5c);
        EXPECT(gbc.pc(), 0x8e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e55), 0xbe);
        EXPECT(gbc.readMem(0xcd65), 0x54);
        // BE 0158
        gbc.setState(0x78ff, 0xf4bb, 0xe650, 0x3303, 0x51cb, 0x7ff7, 0x1, 0x0);
        gbc.writeMem(0x78ff, { 0xbe });
        gbc.writeMem(0x7ff7, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf4bb);
        EXPECT(gbc.pc(), 0x7900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0159
        gbc.setState(0x394f, 0xa725, 0x6ba0, 0x8c, 0x236, 0xe0ff, 0x0, 0x0);
        gbc.writeMem(0x394f, { 0xbe });
        gbc.writeMem(0xe0ff, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa725);
        EXPECT(gbc.pc(), 0x3950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ff), 0x56);
        // BE 015A
        gbc.setState(0xc7d, 0xdb56, 0xce40, 0xdebf, 0xefb0, 0x6b1, 0x0, 0x0);
        gbc.writeMem(0x6b1, { 0x54 });
        gbc.writeMem(0xc7d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdb56);
        EXPECT(gbc.pc(), 0xc7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 015B
        gbc.setState(0xb5dd, 0x8fed, 0x1600, 0xc76f, 0x2e9b, 0x6f66, 0x1, 0x1);
        gbc.writeMem(0x6f66, { 0xca });
        gbc.writeMem(0xb5dd, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8fed);
        EXPECT(gbc.pc(), 0xb5de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5dd), 0xbe);
        // BE 015C
        gbc.setState(0x2a0, 0x3703, 0xc5e0, 0xd9fe, 0x212f, 0xefa0, 0x0, 0x0);
        gbc.writeMem(0x2a0, { 0xbe });
        gbc.writeMem(0xefa0, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3703);
        EXPECT(gbc.pc(), 0x2a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa0), 0x98);
        // BE 015D
        gbc.setState(0x8275, 0x730e, 0xcae0, 0xb47, 0x2d9f, 0x6a16, 0x1, 0x1);
        gbc.writeMem(0x6a16, { 0xd1 });
        gbc.writeMem(0x8275, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x730e);
        EXPECT(gbc.pc(), 0x8276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8275), 0xbe);
        // BE 015E
        gbc.setState(0x4ebd, 0x85e9, 0x3550, 0xdad5, 0x7ae3, 0xa2bf, 0x1, 0x0);
        gbc.writeMem(0x4ebd, { 0xbe });
        gbc.writeMem(0xa2bf, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x85e9);
        EXPECT(gbc.pc(), 0x4ebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2bf), 0x8d);
        // BE 015F
        gbc.setState(0x4ca4, 0x90fc, 0x930, 0xc85c, 0x7e91, 0xe0c8, 0x0, 0x1);
        gbc.writeMem(0x4ca4, { 0xbe });
        gbc.writeMem(0xe0c8, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x90fc);
        EXPECT(gbc.pc(), 0x4ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c8), 0xe4);
        // BE 0160
        gbc.setState(0xc353, 0xd469, 0x2820, 0x2bb2, 0xf90a, 0xba8c, 0x0, 0x1);
        gbc.writeMem(0xba8c, { 0xdc });
        gbc.writeMem(0xc353, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd469);
        EXPECT(gbc.pc(), 0xc354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8c), 0xdc);
        EXPECT(gbc.readMem(0xc353), 0xbe);
        // BE 0161
        gbc.setState(0x7c04, 0x848e, 0xde50, 0x7036, 0x6caa, 0xa641, 0x0, 0x0);
        gbc.writeMem(0x7c04, { 0xbe });
        gbc.writeMem(0xa641, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x848e);
        EXPECT(gbc.pc(), 0x7c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa641), 0x7b);
        // BE 0163
        gbc.setState(0x89dc, 0xe2a6, 0x13a0, 0x7a9b, 0x773, 0xbb08, 0x0, 0x0);
        gbc.writeMem(0x89dc, { 0xbe });
        gbc.writeMem(0xbb08, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe2a6);
        EXPECT(gbc.pc(), 0x89dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89dc), 0xbe);
        EXPECT(gbc.readMem(0xbb08), 0x7f);
        // BE 0165
        gbc.setState(0x6a45, 0x8fa7, 0xafc0, 0x71a2, 0x81d3, 0x2893, 0x1, 0x0);
        gbc.writeMem(0x2893, { 0x84 });
        gbc.writeMem(0x6a45, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8fa7);
        EXPECT(gbc.pc(), 0x6a46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0166
        gbc.setState(0x87a4, 0x33bd, 0x57d0, 0x5455, 0xe2f3, 0xe5fc, 0x0, 0x1);
        gbc.writeMem(0x87a4, { 0xbe });
        gbc.writeMem(0xe5fc, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x33bd);
        EXPECT(gbc.pc(), 0x87a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a4), 0xbe);
        EXPECT(gbc.readMem(0xe5fc), 0x3f);
        // BE 0167
        gbc.setState(0x8453, 0x51b1, 0xc4f0, 0x81f7, 0x188c, 0x5cc4, 0x1, 0x1);
        gbc.writeMem(0x5cc4, { 0x72 });
        gbc.writeMem(0x8453, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x51b1);
        EXPECT(gbc.pc(), 0x8454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8453), 0xbe);
        // BE 0168
        gbc.setState(0xab31, 0x71, 0xd770, 0x95a5, 0x6fe, 0x287a, 0x0, 0x0);
        gbc.writeMem(0x287a, { 0xc4 });
        gbc.writeMem(0xab31, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x71);
        EXPECT(gbc.pc(), 0xab32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab31), 0xbe);
        // BE 0169
        gbc.setState(0x431c, 0x8060, 0x6f60, 0x26d8, 0x23ef, 0xcfc0, 0x0, 0x1);
        gbc.writeMem(0x431c, { 0xbe });
        gbc.writeMem(0xcfc0, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8060);
        EXPECT(gbc.pc(), 0x431d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc0), 0x3e);
        // BE 016A
        gbc.setState(0xc517, 0xaa1d, 0xb3f0, 0xc1fc, 0xfa28, 0xc18a, 0x1, 0x1);
        gbc.writeMem(0xc18a, { 0xf2 });
        gbc.writeMem(0xc517, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xaa1d);
        EXPECT(gbc.pc(), 0xc518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc18a), 0xf2);
        EXPECT(gbc.readMem(0xc517), 0xbe);
        // BE 016B
        gbc.setState(0xdbd7, 0xe0dd, 0xdbc0, 0xd54f, 0xbda, 0xc99, 0x1, 0x0);
        gbc.writeMem(0xc99, { 0xb4 });
        gbc.writeMem(0xdbd7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe0dd);
        EXPECT(gbc.pc(), 0xdbd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd7), 0xbe);
        // BE 016C
        gbc.setState(0xa5c7, 0x1766, 0x4b0, 0x1c6e, 0x916b, 0x3004, 0x1, 0x1);
        gbc.writeMem(0x3004, { 0x31 });
        gbc.writeMem(0xa5c7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1766);
        EXPECT(gbc.pc(), 0xa5c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c7), 0xbe);
        // BE 016D
        gbc.setState(0x6b68, 0x926c, 0x9900, 0x13d0, 0xf88f, 0x406d, 0x1, 0x0);
        gbc.writeMem(0x406d, { 0xd3 });
        gbc.writeMem(0x6b68, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x926c);
        EXPECT(gbc.pc(), 0x6b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 016E
        gbc.setState(0x5718, 0x564b, 0x4260, 0x6ca, 0x174b, 0xbad, 0x0, 0x1);
        gbc.writeMem(0xbad, { 0xa });
        gbc.writeMem(0x5718, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x564b);
        EXPECT(gbc.pc(), 0x5719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 016F
        gbc.setState(0x53b, 0xfb69, 0xf150, 0xb78b, 0x8ff7, 0xf3f, 0x0, 0x0);
        gbc.writeMem(0x53b, { 0xbe });
        gbc.writeMem(0xf3f, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xfb69);
        EXPECT(gbc.pc(), 0x53c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0170
        gbc.setState(0x878f, 0xd68e, 0x7940, 0x1340, 0xbdef, 0xc00c, 0x1, 0x0);
        gbc.writeMem(0x878f, { 0xbe });
        gbc.writeMem(0xc00c, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd68e);
        EXPECT(gbc.pc(), 0x8790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x878f), 0xbe);
        EXPECT(gbc.readMem(0xc00c), 0x38);
        // BE 0171
        gbc.setState(0xca33, 0x2606, 0xe220, 0x2a0f, 0xaa5c, 0xfc11, 0x0, 0x1);
        gbc.writeMem(0xca33, { 0xbe });
        gbc.writeMem(0xfc11, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2606);
        EXPECT(gbc.pc(), 0xca34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca33), 0xbe);
        EXPECT(gbc.readMem(0xfc11), 0xa7);
        // BE 0172
        gbc.setState(0xd1ff, 0x23ce, 0x4160, 0x2b3d, 0xf083, 0x480f, 0x0, 0x1);
        gbc.writeMem(0x480f, { 0x75 });
        gbc.writeMem(0xd1ff, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x23ce);
        EXPECT(gbc.pc(), 0xd200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ff), 0xbe);
        // BE 0173
        gbc.setState(0x9931, 0x12c4, 0x9ea0, 0x3913, 0x754f, 0x2c65, 0x1, 0x1);
        gbc.writeMem(0x2c65, { 0x5e });
        gbc.writeMem(0x9931, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x12c4);
        EXPECT(gbc.pc(), 0x9932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9931), 0xbe);
        // BE 0174
        gbc.setState(0x59b, 0x759c, 0x2db0, 0x6fdf, 0xb20b, 0xfc89, 0x0, 0x1);
        gbc.writeMem(0x59b, { 0xbe });
        gbc.writeMem(0xfc89, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x759c);
        EXPECT(gbc.pc(), 0x59c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc89), 0x14);
        // BE 0175
        gbc.setState(0x15ed, 0xb109, 0x9fc0, 0x6c9f, 0xa758, 0x3fed, 0x1, 0x0);
        gbc.writeMem(0x15ed, { 0xbe });
        gbc.writeMem(0x3fed, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb109);
        EXPECT(gbc.pc(), 0x15ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0176
        gbc.setState(0x6c88, 0xa8e9, 0xde50, 0x6bf8, 0x91fe, 0x3f91, 0x1, 0x1);
        gbc.writeMem(0x3f91, { 0x6e });
        gbc.writeMem(0x6c88, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa8e9);
        EXPECT(gbc.pc(), 0x6c89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0177
        gbc.setState(0x73cb, 0xf24e, 0x3b0, 0xcdee, 0xacd5, 0xdc15, 0x1, 0x0);
        gbc.writeMem(0x73cb, { 0xbe });
        gbc.writeMem(0xdc15, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf24e);
        EXPECT(gbc.pc(), 0x73cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc15), 0x5a);
        // BE 0178
        gbc.setState(0x94d5, 0xd445, 0x6b30, 0x1afb, 0xd8e6, 0xed41, 0x0, 0x1);
        gbc.writeMem(0x94d5, { 0xbe });
        gbc.writeMem(0xed41, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd445);
        EXPECT(gbc.pc(), 0x94d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d5), 0xbe);
        EXPECT(gbc.readMem(0xed41), 0x37);
        // BE 017A
        gbc.setState(0xd8ae, 0xa2a, 0xa780, 0x7f39, 0xd5ee, 0x3dbb, 0x1, 0x1);
        gbc.writeMem(0x3dbb, { 0x2e });
        gbc.writeMem(0xd8ae, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa2a);
        EXPECT(gbc.pc(), 0xd8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ae), 0xbe);
        // BE 017B
        gbc.setState(0xd612, 0x5690, 0x9ca0, 0xe302, 0x6e94, 0x22aa, 0x0, 0x1);
        gbc.writeMem(0x22aa, { 0xa6 });
        gbc.writeMem(0xd612, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5690);
        EXPECT(gbc.pc(), 0xd613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd612), 0xbe);
        // BE 017C
        gbc.setState(0xeb54, 0xd11b, 0x2f30, 0xe157, 0xd6f, 0xa2c6, 0x1, 0x1);
        gbc.writeMem(0xa2c6, { 0x4 });
        gbc.writeMem(0xeb54, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd11b);
        EXPECT(gbc.pc(), 0xeb55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c6), 0x4);
        EXPECT(gbc.readMem(0xeb54), 0xbe);
        // BE 017E
        gbc.setState(0x2bd2, 0x5343, 0xfa00, 0xaf0a, 0xe634, 0x3c7c, 0x0, 0x1);
        gbc.writeMem(0x2bd2, { 0xbe });
        gbc.writeMem(0x3c7c, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5343);
        EXPECT(gbc.pc(), 0x2bd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 017F
        gbc.setState(0x3c51, 0x577c, 0x6d20, 0x9e2d, 0x33bf, 0x8e9b, 0x1, 0x0);
        gbc.writeMem(0x3c51, { 0xbe });
        gbc.writeMem(0x8e9b, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x577c);
        EXPECT(gbc.pc(), 0x3c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e9b), 0x7d);
        // BE 0180
        gbc.setState(0xda26, 0x2db3, 0x5a50, 0xfd87, 0xda7d, 0x28eb, 0x1, 0x0);
        gbc.writeMem(0x28eb, { 0x23 });
        gbc.writeMem(0xda26, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2db3);
        EXPECT(gbc.pc(), 0xda27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda26), 0xbe);
        // BE 0181
        gbc.setState(0x3be5, 0x898a, 0xaba0, 0xc9d5, 0xa309, 0x71f4, 0x1, 0x1);
        gbc.writeMem(0x3be5, { 0xbe });
        gbc.writeMem(0x71f4, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x898a);
        EXPECT(gbc.pc(), 0x3be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0183
        gbc.setState(0x94ef, 0xea6f, 0x93b0, 0xbbf1, 0xf256, 0xc2f8, 0x0, 0x1);
        gbc.writeMem(0x94ef, { 0xbe });
        gbc.writeMem(0xc2f8, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xea6f);
        EXPECT(gbc.pc(), 0x94f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ef), 0xbe);
        EXPECT(gbc.readMem(0xc2f8), 0x5a);
        // BE 0184
        gbc.setState(0x4767, 0xafa7, 0xefe0, 0x8144, 0xf94e, 0xb915, 0x1, 0x0);
        gbc.writeMem(0x4767, { 0xbe });
        gbc.writeMem(0xb915, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xafa7);
        EXPECT(gbc.pc(), 0x4768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb915), 0xe8);
        // BE 0187
        gbc.setState(0xafb0, 0x2a50, 0x3df0, 0xa76b, 0xbe15, 0x5f81, 0x1, 0x0);
        gbc.writeMem(0x5f81, { 0xf8 });
        gbc.writeMem(0xafb0, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2a50);
        EXPECT(gbc.pc(), 0xafb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb0), 0xbe);
        // BE 0188
        gbc.setState(0xc738, 0xdd97, 0xb3e0, 0xdb1f, 0xdb83, 0xc5f8, 0x1, 0x0);
        gbc.writeMem(0xc5f8, { 0x3c });
        gbc.writeMem(0xc738, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xdd97);
        EXPECT(gbc.pc(), 0xc739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f8), 0x3c);
        EXPECT(gbc.readMem(0xc738), 0xbe);
        // BE 0189
        gbc.setState(0xc53, 0x8d64, 0x1e10, 0xf7bc, 0xb703, 0xd855, 0x0, 0x0);
        gbc.writeMem(0xc53, { 0xbe });
        gbc.writeMem(0xd855, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8d64);
        EXPECT(gbc.pc(), 0xc54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd855), 0x83);
        // BE 018B
        gbc.setState(0x711c, 0x9090, 0x7fc0, 0x570a, 0xa1e0, 0x6bd4, 0x1, 0x1);
        gbc.writeMem(0x6bd4, { 0xe9 });
        gbc.writeMem(0x711c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9090);
        EXPECT(gbc.pc(), 0x711d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 018C
        gbc.setState(0xd613, 0xb374, 0x2910, 0x913e, 0x9e04, 0x8dcf, 0x0, 0x1);
        gbc.writeMem(0x8dcf, { 0x64 });
        gbc.writeMem(0xd613, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb374);
        EXPECT(gbc.pc(), 0xd614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dcf), 0x64);
        EXPECT(gbc.readMem(0xd613), 0xbe);
        // BE 018D
        gbc.setState(0x2c1b, 0x38e5, 0xdc10, 0xbb70, 0xe06e, 0x4e22, 0x1, 0x1);
        gbc.writeMem(0x2c1b, { 0xbe });
        gbc.writeMem(0x4e22, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x38e5);
        EXPECT(gbc.pc(), 0x2c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 018E
        gbc.setState(0x7d6, 0xc6fa, 0x3a90, 0xcc25, 0x366, 0xd3a5, 0x1, 0x0);
        gbc.writeMem(0x7d6, { 0xbe });
        gbc.writeMem(0xd3a5, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc6fa);
        EXPECT(gbc.pc(), 0x7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a5), 0x15);
        // BE 018F
        gbc.setState(0xcf5d, 0xccd9, 0xa120, 0x315, 0x2f06, 0x31c6, 0x0, 0x1);
        gbc.writeMem(0x31c6, { 0x4b });
        gbc.writeMem(0xcf5d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xccd9);
        EXPECT(gbc.pc(), 0xcf5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf5d), 0xbe);
        // BE 0190
        gbc.setState(0x3cb4, 0xbb4f, 0x5750, 0x493b, 0xb2f1, 0x8693, 0x0, 0x0);
        gbc.writeMem(0x3cb4, { 0xbe });
        gbc.writeMem(0x8693, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbb4f);
        EXPECT(gbc.pc(), 0x3cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8693), 0xa5);
        // BE 0191
        gbc.setState(0x90c6, 0xece6, 0xa360, 0x240e, 0xf8fe, 0xdb12, 0x1, 0x0);
        gbc.writeMem(0x90c6, { 0xbe });
        gbc.writeMem(0xdb12, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xece6);
        EXPECT(gbc.pc(), 0x90c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c6), 0xbe);
        EXPECT(gbc.readMem(0xdb12), 0xa);
        // BE 0192
        gbc.setState(0x456a, 0x5571, 0x97b0, 0x79a, 0x25b7, 0xdb04, 0x0, 0x0);
        gbc.writeMem(0x456a, { 0xbe });
        gbc.writeMem(0xdb04, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5571);
        EXPECT(gbc.pc(), 0x456b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb04), 0xe3);
        // BE 0193
        gbc.setState(0x3354, 0xab2c, 0x7620, 0xd6d7, 0x26a7, 0x8a18, 0x0, 0x1);
        gbc.writeMem(0x3354, { 0xbe });
        gbc.writeMem(0x8a18, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xab2c);
        EXPECT(gbc.pc(), 0x3355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a18), 0x65);
        // BE 0194
        gbc.setState(0x777d, 0x3a2c, 0x16d0, 0x5aa5, 0xc2fd, 0x233d, 0x0, 0x0);
        gbc.writeMem(0x233d, { 0x79 });
        gbc.writeMem(0x777d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3a2c);
        EXPECT(gbc.pc(), 0x777e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0195
        gbc.setState(0x9da, 0x954b, 0xfc70, 0xda50, 0x936c, 0x4092, 0x1, 0x0);
        gbc.writeMem(0x9da, { 0xbe });
        gbc.writeMem(0x4092, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x954b);
        EXPECT(gbc.pc(), 0x9db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0196
        gbc.setState(0x4dbf, 0xd2b, 0xc10, 0x731f, 0x24ba, 0x3111, 0x1, 0x1);
        gbc.writeMem(0x3111, { 0x3e });
        gbc.writeMem(0x4dbf, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd2b);
        EXPECT(gbc.pc(), 0x4dc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0197
        gbc.setState(0x2b38, 0xb814, 0xb940, 0x5ea2, 0x21fa, 0xec5, 0x1, 0x0);
        gbc.writeMem(0xec5, { 0xa0 });
        gbc.writeMem(0x2b38, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb814);
        EXPECT(gbc.pc(), 0x2b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0198
        gbc.setState(0xabf2, 0xa6d3, 0xe770, 0xfc71, 0xb1a5, 0x4c7a, 0x1, 0x0);
        gbc.writeMem(0x4c7a, { 0x8c });
        gbc.writeMem(0xabf2, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa6d3);
        EXPECT(gbc.pc(), 0xabf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf2), 0xbe);
        // BE 0199
        gbc.setState(0xef19, 0x9b79, 0xa740, 0x483f, 0xecb2, 0x2f8e, 0x0, 0x0);
        gbc.writeMem(0x2f8e, { 0xb6 });
        gbc.writeMem(0xef19, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9b79);
        EXPECT(gbc.pc(), 0xef1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef19), 0xbe);
        // BE 019A
        gbc.setState(0xea48, 0xc0a4, 0x8a60, 0x14e6, 0x3882, 0x376c, 0x0, 0x0);
        gbc.writeMem(0x376c, { 0xd0 });
        gbc.writeMem(0xea48, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc0a4);
        EXPECT(gbc.pc(), 0xea49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea48), 0xbe);
        // BE 019B
        gbc.setState(0x8597, 0x750, 0xaf80, 0x8cb9, 0x6ad7, 0x43e1, 0x1, 0x1);
        gbc.writeMem(0x43e1, { 0x1e });
        gbc.writeMem(0x8597, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x750);
        EXPECT(gbc.pc(), 0x8598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8597), 0xbe);
        // BE 019C
        gbc.setState(0x150f, 0xa45a, 0x4ca0, 0x7024, 0x220e, 0x11b0, 0x0, 0x0);
        gbc.writeMem(0x11b0, { 0x3f });
        gbc.writeMem(0x150f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa45a);
        EXPECT(gbc.pc(), 0x1510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 019D
        gbc.setState(0x57c8, 0xff8b, 0x59f0, 0x86f2, 0x880d, 0x6a28, 0x1, 0x1);
        gbc.writeMem(0x57c8, { 0xbe });
        gbc.writeMem(0x6a28, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xff8b);
        EXPECT(gbc.pc(), 0x57c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 019E
        gbc.setState(0x8301, 0x4d36, 0x2a10, 0x4a6a, 0x14ec, 0xaca, 0x0, 0x0);
        gbc.writeMem(0xaca, { 0xeb });
        gbc.writeMem(0x8301, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4d36);
        EXPECT(gbc.pc(), 0x8302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8301), 0xbe);
        // BE 019F
        gbc.setState(0xab5f, 0x797b, 0x7bb0, 0x2b7c, 0x76ab, 0x7960, 0x0, 0x0);
        gbc.writeMem(0x7960, { 0x20 });
        gbc.writeMem(0xab5f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x797b);
        EXPECT(gbc.pc(), 0xab60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5f), 0xbe);
        // BE 01A0
        gbc.setState(0x1dba, 0xa48b, 0xb320, 0x2415, 0x4531, 0x4fd0, 0x1, 0x1);
        gbc.writeMem(0x1dba, { 0xbe });
        gbc.writeMem(0x4fd0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa48b);
        EXPECT(gbc.pc(), 0x1dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 01A1
        gbc.setState(0xc463, 0x74ec, 0xa900, 0x5599, 0x9e9a, 0x7ad5, 0x0, 0x1);
        gbc.writeMem(0x7ad5, { 0xc2 });
        gbc.writeMem(0xc463, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x74ec);
        EXPECT(gbc.pc(), 0xc464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc463), 0xbe);
        // BE 01A2
        gbc.setState(0xd386, 0x1692, 0x95e0, 0x8f21, 0x6a99, 0xd93f, 0x1, 0x1);
        gbc.writeMem(0xd386, { 0xbe });
        gbc.writeMem(0xd93f, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1692);
        EXPECT(gbc.pc(), 0xd387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd386), 0xbe);
        EXPECT(gbc.readMem(0xd93f), 0xae);
        // BE 01A3
        gbc.setState(0x1b86, 0x81fb, 0xc950, 0x1461, 0xd81a, 0x177, 0x0, 0x1);
        gbc.writeMem(0x177, { 0x12 });
        gbc.writeMem(0x1b86, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x81fb);
        EXPECT(gbc.pc(), 0x1b87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 01A4
        gbc.setState(0xbfcd, 0x54ad, 0xc660, 0x92a2, 0xe143, 0xf8db, 0x1, 0x0);
        gbc.writeMem(0xbfcd, { 0xbe });
        gbc.writeMem(0xf8db, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x54ad);
        EXPECT(gbc.pc(), 0xbfce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfcd), 0xbe);
        EXPECT(gbc.readMem(0xf8db), 0x8c);
        // BE 01A5
        gbc.setState(0xb9c, 0x6c37, 0x830, 0xd0ad, 0xedc6, 0x50b, 0x1, 0x1);
        gbc.writeMem(0x50b, { 0x6c });
        gbc.writeMem(0xb9c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6c37);
        EXPECT(gbc.pc(), 0xb9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 01A6
        gbc.setState(0xde34, 0x9c36, 0x2e60, 0x8038, 0xf22f, 0x4c32, 0x1, 0x0);
        gbc.writeMem(0x4c32, { 0xfa });
        gbc.writeMem(0xde34, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9c36);
        EXPECT(gbc.pc(), 0xde35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde34), 0xbe);
        // BE 01A7
        gbc.setState(0xa93, 0xef2, 0x1a30, 0xb037, 0x96f0, 0xfcfa, 0x1, 0x0);
        gbc.writeMem(0xa93, { 0xbe });
        gbc.writeMem(0xfcfa, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xef2);
        EXPECT(gbc.pc(), 0xa94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfcfa), 0x31);
        // BE 01A8
        gbc.setState(0xa770, 0x9674, 0xd590, 0xfb15, 0xbec1, 0xcbce, 0x0, 0x0);
        gbc.writeMem(0xa770, { 0xbe });
        gbc.writeMem(0xcbce, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9674);
        EXPECT(gbc.pc(), 0xa771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa770), 0xbe);
        EXPECT(gbc.readMem(0xcbce), 0x2f);
        // BE 01AA
        gbc.setState(0x1ddd, 0x184b, 0xffb0, 0x5a1a, 0x6499, 0x2196, 0x1, 0x0);
        gbc.writeMem(0x1ddd, { 0xbe });
        gbc.writeMem(0x2196, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x184b);
        EXPECT(gbc.pc(), 0x1dde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 01AB
        gbc.setState(0xbd7f, 0x6ede, 0xe2a0, 0x7233, 0x945e, 0x9ad, 0x0, 0x0);
        gbc.writeMem(0x9ad, { 0x44 });
        gbc.writeMem(0xbd7f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6ede);
        EXPECT(gbc.pc(), 0xbd80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7f), 0xbe);
        // BE 01AC
        gbc.setState(0xa411, 0x5db2, 0xfa90, 0x935d, 0x300e, 0x7bc1, 0x1, 0x1);
        gbc.writeMem(0x7bc1, { 0x9d });
        gbc.writeMem(0xa411, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5db2);
        EXPECT(gbc.pc(), 0xa412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa411), 0xbe);
        // BE 01AD
        gbc.setState(0x4ce1, 0x2e78, 0xc2b0, 0x8f57, 0x245c, 0x2b92, 0x0, 0x0);
        gbc.writeMem(0x2b92, { 0x4a });
        gbc.writeMem(0x4ce1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2e78);
        EXPECT(gbc.pc(), 0x4ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 01AF
        gbc.setState(0xeb69, 0x90c6, 0xaf40, 0xd68e, 0x92a, 0x75f9, 0x1, 0x1);
        gbc.writeMem(0x75f9, { 0xcb });
        gbc.writeMem(0xeb69, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x90c6);
        EXPECT(gbc.pc(), 0xeb6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb69), 0xbe);
        // BE 01B0
        gbc.setState(0x8377, 0x229b, 0x1dc0, 0x7446, 0xd5ca, 0x1fb3, 0x0, 0x1);
        gbc.writeMem(0x1fb3, { 0x5d });
        gbc.writeMem(0x8377, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x229b);
        EXPECT(gbc.pc(), 0x8378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8377), 0xbe);
        // BE 01B1
        gbc.setState(0x4185, 0xfb59, 0xdb90, 0x55d8, 0xdaad, 0xb587, 0x1, 0x1);
        gbc.writeMem(0x4185, { 0xbe });
        gbc.writeMem(0xb587, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfb59);
        EXPECT(gbc.pc(), 0x4186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb587), 0xa6);
        // BE 01B2
        gbc.setState(0x54cf, 0xd688, 0x5850, 0xcf2e, 0x6a97, 0x763a, 0x0, 0x0);
        gbc.writeMem(0x54cf, { 0xbe });
        gbc.writeMem(0x763a, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd688);
        EXPECT(gbc.pc(), 0x54d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 01B3
        gbc.setState(0x755d, 0xc10, 0x1180, 0xe216, 0xd8b3, 0x4e6, 0x1, 0x0);
        gbc.writeMem(0x4e6, { 0xeb });
        gbc.writeMem(0x755d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc10);
        EXPECT(gbc.pc(), 0x755e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 01B4
        gbc.setState(0xb57e, 0x34ab, 0xaab0, 0x5d95, 0x1a5f, 0xaf1a, 0x1, 0x1);
        gbc.writeMem(0xaf1a, { 0x65 });
        gbc.writeMem(0xb57e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x34ab);
        EXPECT(gbc.pc(), 0xb57f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf1a), 0x65);
        EXPECT(gbc.readMem(0xb57e), 0xbe);
        // BE 01B5
        gbc.setState(0x999, 0xbcbc, 0xda70, 0xba4f, 0xbefc, 0x9dab, 0x1, 0x0);
        gbc.writeMem(0x999, { 0xbe });
        gbc.writeMem(0x9dab, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbcbc);
        EXPECT(gbc.pc(), 0x99a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dab), 0xce);
        // BE 01B6
        gbc.setState(0x360c, 0x4ef8, 0x2d10, 0xceab, 0x5531, 0xf6ac, 0x1, 0x1);
        gbc.writeMem(0x360c, { 0xbe });
        gbc.writeMem(0xf6ac, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4ef8);
        EXPECT(gbc.pc(), 0x360d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf6ac), 0x50);
        // BE 01B7
        gbc.setState(0xc58e, 0x8021, 0x89c0, 0x4214, 0x5ca2, 0x25aa, 0x1, 0x1);
        gbc.writeMem(0x25aa, { 0xd8 });
        gbc.writeMem(0xc58e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8021);
        EXPECT(gbc.pc(), 0xc58f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc58e), 0xbe);
        // BE 01B8
        gbc.setState(0x4bf3, 0xcd4d, 0x9140, 0x6fd8, 0x23c7, 0x72eb, 0x1, 0x0);
        gbc.writeMem(0x4bf3, { 0xbe });
        gbc.writeMem(0x72eb, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xcd4d);
        EXPECT(gbc.pc(), 0x4bf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 01B9
        gbc.setState(0x74fd, 0x5e2f, 0x98d0, 0xc7a7, 0xe6d0, 0x6dfa, 0x1, 0x1);
        gbc.writeMem(0x6dfa, { 0x33 });
        gbc.writeMem(0x74fd, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5e2f);
        EXPECT(gbc.pc(), 0x74fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 01BB
        gbc.setState(0x491, 0x66e8, 0xaa10, 0x6421, 0x2fc2, 0x1242, 0x1, 0x0);
        gbc.writeMem(0x491, { 0xbe });
        gbc.writeMem(0x1242, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x66e8);
        EXPECT(gbc.pc(), 0x492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 01BC
        gbc.setState(0x9e5b, 0xae90, 0x6d90, 0xb950, 0xf9fc, 0xbd22, 0x1, 0x0);
        gbc.writeMem(0x9e5b, { 0xbe });
        gbc.writeMem(0xbd22, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xae90);
        EXPECT(gbc.pc(), 0x9e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e5b), 0xbe);
        EXPECT(gbc.readMem(0xbd22), 0xff);
        // BE 01BD
        gbc.setState(0x9626, 0xa76d, 0x3b90, 0xc799, 0x9d39, 0xfad1, 0x1, 0x0);
        gbc.writeMem(0x9626, { 0xbe });
        gbc.writeMem(0xfad1, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa76d);
        EXPECT(gbc.pc(), 0x9627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9626), 0xbe);
        EXPECT(gbc.readMem(0xfad1), 0xb3);
        // BE 01BE
        gbc.setState(0xd8fe, 0xe987, 0xd70, 0x2384, 0x79ca, 0x4be4, 0x0, 0x0);
        gbc.writeMem(0x4be4, { 0xfd });
        gbc.writeMem(0xd8fe, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe987);
        EXPECT(gbc.pc(), 0xd8ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8fe), 0xbe);
        // BE 01BF
        gbc.setState(0xa9aa, 0x503e, 0xac80, 0x988, 0x214e, 0xad1d, 0x0, 0x1);
        gbc.writeMem(0xa9aa, { 0xbe });
        gbc.writeMem(0xad1d, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x503e);
        EXPECT(gbc.pc(), 0xa9ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9aa), 0xbe);
        EXPECT(gbc.readMem(0xad1d), 0xd6);
        // BE 01C0
        gbc.setState(0xe18c, 0xde54, 0xdc00, 0x4bfa, 0x5c24, 0xa18f, 0x1, 0x1);
        gbc.writeMem(0xa18f, { 0xa5 });
        gbc.writeMem(0xe18c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xde54);
        EXPECT(gbc.pc(), 0xe18d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18f), 0xa5);
        EXPECT(gbc.readMem(0xe18c), 0xbe);
        // BE 01C1
        gbc.setState(0x8ad6, 0x3824, 0x2080, 0xe82d, 0x43ce, 0xe195, 0x0, 0x0);
        gbc.writeMem(0x8ad6, { 0xbe });
        gbc.writeMem(0xe195, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3824);
        EXPECT(gbc.pc(), 0x8ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad6), 0xbe);
        EXPECT(gbc.readMem(0xe195), 0xa6);
        // BE 01C2
        gbc.setState(0x3e6a, 0x38df, 0xe2c0, 0x331c, 0x9a46, 0x3bba, 0x1, 0x1);
        gbc.writeMem(0x3bba, { 0xe2 });
        gbc.writeMem(0x3e6a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x38df);
        EXPECT(gbc.pc(), 0x3e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 01C3
        gbc.setState(0x1c68, 0x3768, 0x4560, 0xf1b1, 0x4279, 0xf747, 0x1, 0x0);
        gbc.writeMem(0x1c68, { 0xbe });
        gbc.writeMem(0xf747, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3768);
        EXPECT(gbc.pc(), 0x1c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf747), 0xf);
        // BE 01C4
        gbc.setState(0x957f, 0x8b6a, 0x3a80, 0xa32f, 0xd42e, 0x863a, 0x1, 0x0);
        gbc.writeMem(0x863a, { 0xec });
        gbc.writeMem(0x957f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8b6a);
        EXPECT(gbc.pc(), 0x9580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x863a), 0xec);
        EXPECT(gbc.readMem(0x957f), 0xbe);
        // BE 01C5
        gbc.setState(0xbb5, 0xd595, 0x6640, 0x4e5c, 0x5dbc, 0xde52, 0x1, 0x0);
        gbc.writeMem(0xbb5, { 0xbe });
        gbc.writeMem(0xde52, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd595);
        EXPECT(gbc.pc(), 0xbb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde52), 0xac);
        // BE 01C6
        gbc.setState(0x863e, 0x4370, 0xbb40, 0x5f90, 0x1c7c, 0x6b20, 0x0, 0x1);
        gbc.writeMem(0x6b20, { 0xfb });
        gbc.writeMem(0x863e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4370);
        EXPECT(gbc.pc(), 0x863f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x863e), 0xbe);
        // BE 01C7
        gbc.setState(0x461c, 0x16b2, 0x8fc0, 0xd562, 0x2d14, 0x37ad, 0x0, 0x0);
        gbc.writeMem(0x37ad, { 0x4e });
        gbc.writeMem(0x461c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x16b2);
        EXPECT(gbc.pc(), 0x461d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 01C8
        gbc.setState(0xe563, 0x9da1, 0x5fc0, 0x1d13, 0xf934, 0xc246, 0x1, 0x0);
        gbc.writeMem(0xc246, { 0x9f });
        gbc.writeMem(0xe563, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9da1);
        EXPECT(gbc.pc(), 0xe564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc246), 0x9f);
        EXPECT(gbc.readMem(0xe563), 0xbe);
        // BE 01C9
        gbc.setState(0xbf2c, 0x9ae9, 0xb50, 0x76f5, 0x64e0, 0x3aa1, 0x0, 0x1);
        gbc.writeMem(0x3aa1, { 0x9f });
        gbc.writeMem(0xbf2c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9ae9);
        EXPECT(gbc.pc(), 0xbf2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2c), 0xbe);
        // BE 01CA
        gbc.setState(0xbe59, 0xabb1, 0x8ab0, 0x13f8, 0x1033, 0x4e56, 0x0, 0x1);
        gbc.writeMem(0x4e56, { 0xf0 });
        gbc.writeMem(0xbe59, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xabb1);
        EXPECT(gbc.pc(), 0xbe5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe59), 0xbe);
        // BE 01CB
        gbc.setState(0x8a0c, 0xe449, 0xcae0, 0xa90f, 0x333f, 0xc8f4, 0x1, 0x0);
        gbc.writeMem(0x8a0c, { 0xbe });
        gbc.writeMem(0xc8f4, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe449);
        EXPECT(gbc.pc(), 0x8a0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a0c), 0xbe);
        EXPECT(gbc.readMem(0xc8f4), 0xeb);
        // BE 01CC
        gbc.setState(0x8539, 0xb99b, 0x8980, 0x1e38, 0x3896, 0x4104, 0x1, 0x0);
        gbc.writeMem(0x4104, { 0xb });
        gbc.writeMem(0x8539, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb99b);
        EXPECT(gbc.pc(), 0x853a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8539), 0xbe);
        // BE 01CD
        gbc.setState(0x68a7, 0x6e5c, 0xf300, 0xd68e, 0x17b5, 0xec2, 0x1, 0x1);
        gbc.writeMem(0xec2, { 0x3e });
        gbc.writeMem(0x68a7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6e5c);
        EXPECT(gbc.pc(), 0x68a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 01CE
        gbc.setState(0xcce4, 0x3325, 0xe3a0, 0x1444, 0x8bc2, 0x2033, 0x0, 0x0);
        gbc.writeMem(0x2033, { 0xa7 });
        gbc.writeMem(0xcce4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3325);
        EXPECT(gbc.pc(), 0xcce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce4), 0xbe);
        // BE 01CF
        gbc.setState(0x9778, 0xc7b4, 0xcd10, 0x995c, 0x6940, 0x3fe8, 0x1, 0x1);
        gbc.writeMem(0x3fe8, { 0x90 });
        gbc.writeMem(0x9778, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc7b4);
        EXPECT(gbc.pc(), 0x9779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9778), 0xbe);
        // BE 01D0
        gbc.setState(0x2415, 0x7002, 0x7dc0, 0xf9ff, 0x6e38, 0xa020, 0x1, 0x1);
        gbc.writeMem(0x2415, { 0xbe });
        gbc.writeMem(0xa020, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7002);
        EXPECT(gbc.pc(), 0x2416);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa020), 0xec);
        // BE 01D1
        gbc.setState(0x9c4a, 0x9b8f, 0xe270, 0x41db, 0x4fa1, 0xea8d, 0x0, 0x0);
        gbc.writeMem(0x9c4a, { 0xbe });
        gbc.writeMem(0xea8d, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9b8f);
        EXPECT(gbc.pc(), 0x9c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c4a), 0xbe);
        EXPECT(gbc.readMem(0xea8d), 0x7c);
        // BE 01D2
        gbc.setState(0x5363, 0xf490, 0xfc70, 0x8d5a, 0x3b61, 0xec3, 0x0, 0x0);
        gbc.writeMem(0xec3, { 0x81 });
        gbc.writeMem(0x5363, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf490);
        EXPECT(gbc.pc(), 0x5364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 01D3
        gbc.setState(0x36ae, 0xdbdc, 0x5290, 0xd149, 0xc703, 0x2713, 0x1, 0x1);
        gbc.writeMem(0x2713, { 0xd3 });
        gbc.writeMem(0x36ae, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdbdc);
        EXPECT(gbc.pc(), 0x36af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 01D4
        gbc.setState(0x467d, 0xd18d, 0x2910, 0x31cb, 0xe43f, 0x14a, 0x1, 0x1);
        gbc.writeMem(0x14a, { 0x7e });
        gbc.writeMem(0x467d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd18d);
        EXPECT(gbc.pc(), 0x467e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 01D5
        gbc.setState(0x3b50, 0x2d3b, 0x64d0, 0xaf72, 0xed9f, 0xfaca, 0x1, 0x1);
        gbc.writeMem(0x3b50, { 0xbe });
        gbc.writeMem(0xfaca, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2d3b);
        EXPECT(gbc.pc(), 0x3b51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfaca), 0x6c);
        // BE 01D6
        gbc.setState(0xa852, 0xeda4, 0x1a0, 0xeb2e, 0x4622, 0x56, 0x0, 0x0);
        gbc.writeMem(0x56, { 0x2b });
        gbc.writeMem(0xa852, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xeda4);
        EXPECT(gbc.pc(), 0xa853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa852), 0xbe);
        // BE 01D7
        gbc.setState(0x2cca, 0x23be, 0x3d10, 0x8a83, 0x6e47, 0x1b3b, 0x1, 0x0);
        gbc.writeMem(0x1b3b, { 0x35 });
        gbc.writeMem(0x2cca, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x23be);
        EXPECT(gbc.pc(), 0x2ccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 01D8
        gbc.setState(0xe38d, 0x1427, 0x48d0, 0xb8d2, 0xf5db, 0x199, 0x0, 0x1);
        gbc.writeMem(0x199, { 0x94 });
        gbc.writeMem(0xe38d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1427);
        EXPECT(gbc.pc(), 0xe38e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38d), 0xbe);
        // BE 01D9
        gbc.setState(0x33ac, 0xa622, 0x8870, 0x9648, 0x374b, 0x1c70, 0x0, 0x0);
        gbc.writeMem(0x1c70, { 0xef });
        gbc.writeMem(0x33ac, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa622);
        EXPECT(gbc.pc(), 0x33ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 01DA
        gbc.setState(0x9c98, 0x3247, 0x9b90, 0x3bb0, 0xd288, 0x9eb4, 0x0, 0x1);
        gbc.writeMem(0x9c98, { 0xbe });
        gbc.writeMem(0x9eb4, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3247);
        EXPECT(gbc.pc(), 0x9c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c98), 0xbe);
        EXPECT(gbc.readMem(0x9eb4), 0x7d);
        // BE 01DB
        gbc.setState(0x1b4c, 0x46a1, 0xf0c0, 0x92de, 0x912f, 0x3592, 0x0, 0x0);
        gbc.writeMem(0x1b4c, { 0xbe });
        gbc.writeMem(0x3592, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x46a1);
        EXPECT(gbc.pc(), 0x1b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 01DC
        gbc.setState(0x29aa, 0xa5cf, 0x98f0, 0xe495, 0x2372, 0x9d77, 0x1, 0x0);
        gbc.writeMem(0x29aa, { 0xbe });
        gbc.writeMem(0x9d77, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa5cf);
        EXPECT(gbc.pc(), 0x29ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d77), 0xe);
        // BE 01DD
        gbc.setState(0x200, 0xa170, 0xb750, 0xc1f6, 0xcb64, 0x5ff5, 0x1, 0x1);
        gbc.writeMem(0x200, { 0xbe });
        gbc.writeMem(0x5ff5, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa170);
        EXPECT(gbc.pc(), 0x201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 01DF
        gbc.setState(0xc5fd, 0xbfca, 0x8780, 0xe71, 0x2032, 0x977a, 0x0, 0x1);
        gbc.writeMem(0x977a, { 0x24 });
        gbc.writeMem(0xc5fd, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbfca);
        EXPECT(gbc.pc(), 0xc5fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x977a), 0x24);
        EXPECT(gbc.readMem(0xc5fd), 0xbe);
        // BE 01E0
        gbc.setState(0x5f2b, 0x3e55, 0x7900, 0x480, 0xfc92, 0x7e00, 0x1, 0x1);
        gbc.writeMem(0x5f2b, { 0xbe });
        gbc.writeMem(0x7e00, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3e55);
        EXPECT(gbc.pc(), 0x5f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 01E1
        gbc.setState(0xedac, 0x5914, 0x70, 0x84c5, 0xa642, 0x18f0, 0x1, 0x1);
        gbc.writeMem(0x18f0, { 0x6f });
        gbc.writeMem(0xedac, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5914);
        EXPECT(gbc.pc(), 0xedad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedac), 0xbe);
        // BE 01E2
        gbc.setState(0xcd80, 0xb863, 0x31c0, 0x9469, 0x375f, 0xb198, 0x0, 0x0);
        gbc.writeMem(0xb198, { 0x27 });
        gbc.writeMem(0xcd80, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb863);
        EXPECT(gbc.pc(), 0xcd81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb198), 0x27);
        EXPECT(gbc.readMem(0xcd80), 0xbe);
        // BE 01E3
        gbc.setState(0x9176, 0xba7b, 0xbd60, 0xb97d, 0xb44c, 0xf1f2, 0x0, 0x1);
        gbc.writeMem(0x9176, { 0xbe });
        gbc.writeMem(0xf1f2, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xba7b);
        EXPECT(gbc.pc(), 0x9177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9176), 0xbe);
        EXPECT(gbc.readMem(0xf1f2), 0xea);
        // BE 01E4
        gbc.setState(0xb35, 0x80ab, 0xf310, 0x62c3, 0x8ed5, 0xab40, 0x0, 0x0);
        gbc.writeMem(0xb35, { 0xbe });
        gbc.writeMem(0xab40, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x80ab);
        EXPECT(gbc.pc(), 0xb36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab40), 0x35);
        // BE 01E5
        gbc.setState(0xe331, 0x7941, 0x60c0, 0xb1b3, 0x858, 0x473e, 0x1, 0x0);
        gbc.writeMem(0x473e, { 0x21 });
        gbc.writeMem(0xe331, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7941);
        EXPECT(gbc.pc(), 0xe332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe331), 0xbe);
        // BE 01E6
        gbc.setState(0xe3a0, 0x1996, 0x2cf0, 0xab1, 0xad8b, 0xc03d, 0x1, 0x1);
        gbc.writeMem(0xc03d, { 0x75 });
        gbc.writeMem(0xe3a0, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1996);
        EXPECT(gbc.pc(), 0xe3a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc03d), 0x75);
        EXPECT(gbc.readMem(0xe3a0), 0xbe);
        // BE 01E8
        gbc.setState(0xd0f, 0xaeb7, 0xef20, 0x4a62, 0xba2f, 0x915b, 0x0, 0x1);
        gbc.writeMem(0xd0f, { 0xbe });
        gbc.writeMem(0x915b, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xaeb7);
        EXPECT(gbc.pc(), 0xd10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x915b), 0x89);
        // BE 01E9
        gbc.setState(0xbbd0, 0xf97e, 0x1fc0, 0xf175, 0x9f85, 0xdb5b, 0x1, 0x1);
        gbc.writeMem(0xbbd0, { 0xbe });
        gbc.writeMem(0xdb5b, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf97e);
        EXPECT(gbc.pc(), 0xbbd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd0), 0xbe);
        EXPECT(gbc.readMem(0xdb5b), 0x98);
        // BE 01EA
        gbc.setState(0xdb4c, 0x2a72, 0x4e30, 0x716d, 0x8df7, 0xa416, 0x1, 0x0);
        gbc.writeMem(0xa416, { 0xbd });
        gbc.writeMem(0xdb4c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2a72);
        EXPECT(gbc.pc(), 0xdb4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa416), 0xbd);
        EXPECT(gbc.readMem(0xdb4c), 0xbe);
        // BE 01EB
        gbc.setState(0x703f, 0xeda4, 0x5720, 0xecec, 0x811c, 0x33f6, 0x0, 0x1);
        gbc.writeMem(0x33f6, { 0x4a });
        gbc.writeMem(0x703f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xeda4);
        EXPECT(gbc.pc(), 0x7040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 01EC
        gbc.setState(0xc436, 0xdff7, 0x7900, 0x530, 0x91f8, 0xccc7, 0x1, 0x0);
        gbc.writeMem(0xc436, { 0xbe });
        gbc.writeMem(0xccc7, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdff7);
        EXPECT(gbc.pc(), 0xc437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc436), 0xbe);
        EXPECT(gbc.readMem(0xccc7), 0x98);
        // BE 01ED
        gbc.setState(0xa156, 0xdea, 0xf860, 0xfbda, 0x31a3, 0x1e39, 0x0, 0x0);
        gbc.writeMem(0x1e39, { 0xd4 });
        gbc.writeMem(0xa156, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xdea);
        EXPECT(gbc.pc(), 0xa157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa156), 0xbe);
        // BE 01EE
        gbc.setState(0xde90, 0x241e, 0x6570, 0x2837, 0x12cb, 0xba0d, 0x0, 0x0);
        gbc.writeMem(0xba0d, { 0xdd });
        gbc.writeMem(0xde90, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x241e);
        EXPECT(gbc.pc(), 0xde91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0d), 0xdd);
        EXPECT(gbc.readMem(0xde90), 0xbe);
        // BE 01F1
        gbc.setState(0xb5c, 0x30d0, 0xd480, 0x8b8d, 0x9e99, 0xadee, 0x0, 0x1);
        gbc.writeMem(0xb5c, { 0xbe });
        gbc.writeMem(0xadee, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x30d0);
        EXPECT(gbc.pc(), 0xb5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadee), 0x8a);
        // BE 01F2
        gbc.setState(0x31ec, 0x3496, 0xd160, 0x99fb, 0x634, 0xf518, 0x0, 0x0);
        gbc.writeMem(0x31ec, { 0xbe });
        gbc.writeMem(0xf518, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3496);
        EXPECT(gbc.pc(), 0x31ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf518), 0xc);
        // BE 01F3
        gbc.setState(0x502d, 0xb95e, 0x57b0, 0x5c1a, 0x56a0, 0x1229, 0x0, 0x1);
        gbc.writeMem(0x1229, { 0xea });
        gbc.writeMem(0x502d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb95e);
        EXPECT(gbc.pc(), 0x502e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 01F4
        gbc.setState(0x57d8, 0x665c, 0xbc30, 0x520e, 0x8b1f, 0xb108, 0x0, 0x1);
        gbc.writeMem(0x57d8, { 0xbe });
        gbc.writeMem(0xb108, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x665c);
        EXPECT(gbc.pc(), 0x57d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb108), 0xbe);
        // BE 01F5
        gbc.setState(0x3a7e, 0xe800, 0x4310, 0x7c4b, 0xe309, 0xc711, 0x0, 0x0);
        gbc.writeMem(0x3a7e, { 0xbe });
        gbc.writeMem(0xc711, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe800);
        EXPECT(gbc.pc(), 0x3a7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc711), 0x94);
        // BE 01F6
        gbc.setState(0x3e15, 0x77d0, 0xbea0, 0x806e, 0x6510, 0x9efe, 0x0, 0x1);
        gbc.writeMem(0x3e15, { 0xbe });
        gbc.writeMem(0x9efe, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x77d0);
        EXPECT(gbc.pc(), 0x3e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9efe), 0x97);
        // BE 01F7
        gbc.setState(0xc30a, 0xa4c7, 0xa50, 0x269, 0x856d, 0xcec3, 0x1, 0x0);
        gbc.writeMem(0xc30a, { 0xbe });
        gbc.writeMem(0xcec3, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa4c7);
        EXPECT(gbc.pc(), 0xc30b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc30a), 0xbe);
        EXPECT(gbc.readMem(0xcec3), 0x5e);
        // BE 01F8
        gbc.setState(0x26c6, 0xf1b2, 0xd8b0, 0xac8e, 0xa8a9, 0x52d4, 0x0, 0x0);
        gbc.writeMem(0x26c6, { 0xbe });
        gbc.writeMem(0x52d4, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf1b2);
        EXPECT(gbc.pc(), 0x26c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 01F9
        gbc.setState(0x1329, 0x2c93, 0x4990, 0xc8b3, 0x7054, 0x91f8, 0x0, 0x1);
        gbc.writeMem(0x1329, { 0xbe });
        gbc.writeMem(0x91f8, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2c93);
        EXPECT(gbc.pc(), 0x132a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f8), 0x3f);
        // BE 01FA
        gbc.setState(0x4395, 0xff6f, 0x850, 0xc5bf, 0x5f01, 0xc47, 0x0, 0x1);
        gbc.writeMem(0xc47, { 0xcc });
        gbc.writeMem(0x4395, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xff6f);
        EXPECT(gbc.pc(), 0x4396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 01FB
        gbc.setState(0x168f, 0xeb10, 0xa6d0, 0x8e2b, 0xad88, 0x814a, 0x1, 0x0);
        gbc.writeMem(0x168f, { 0xbe });
        gbc.writeMem(0x814a, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xeb10);
        EXPECT(gbc.pc(), 0x1690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x814a), 0x9f);
        // BE 01FC
        gbc.setState(0x3f91, 0xd501, 0x5970, 0x77ee, 0xfcdb, 0x367e, 0x1, 0x0);
        gbc.writeMem(0x367e, { 0x0 });
        gbc.writeMem(0x3f91, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd501);
        EXPECT(gbc.pc(), 0x3f92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 01FD
        gbc.setState(0x4141, 0xa9f7, 0xff30, 0x2838, 0x1021, 0xf335, 0x1, 0x1);
        gbc.writeMem(0x4141, { 0xbe });
        gbc.writeMem(0xf335, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa9f7);
        EXPECT(gbc.pc(), 0x4142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf335), 0xfa);
        // BE 01FE
        gbc.setState(0x6f56, 0x8409, 0xf740, 0x4ebe, 0xec83, 0x64ae, 0x1, 0x0);
        gbc.writeMem(0x64ae, { 0x25 });
        gbc.writeMem(0x6f56, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8409);
        EXPECT(gbc.pc(), 0x6f57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 01FF
        gbc.setState(0xd653, 0xc22f, 0x4c50, 0x46f1, 0xaa0e, 0x2dbe, 0x1, 0x0);
        gbc.writeMem(0x2dbe, { 0x67 });
        gbc.writeMem(0xd653, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc22f);
        EXPECT(gbc.pc(), 0xd654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd653), 0xbe);
        // BE 0200
        gbc.setState(0x7bb5, 0xd439, 0x3970, 0xd74e, 0xaa0d, 0x4933, 0x0, 0x1);
        gbc.writeMem(0x4933, { 0x35 });
        gbc.writeMem(0x7bb5, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd439);
        EXPECT(gbc.pc(), 0x7bb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0201
        gbc.setState(0x8de, 0x9876, 0x3330, 0x71b, 0x7e61, 0xc552, 0x0, 0x1);
        gbc.writeMem(0x8de, { 0xbe });
        gbc.writeMem(0xc552, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9876);
        EXPECT(gbc.pc(), 0x8df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc552), 0xa4);
        // BE 0202
        gbc.setState(0xb2c, 0x788d, 0xcdf0, 0xdc7e, 0xd2e9, 0x1746, 0x0, 0x0);
        gbc.writeMem(0xb2c, { 0xbe });
        gbc.writeMem(0x1746, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x788d);
        EXPECT(gbc.pc(), 0xb2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0203
        gbc.setState(0xa171, 0x72ce, 0x6470, 0xf2b7, 0x8fe7, 0x3ac1, 0x1, 0x0);
        gbc.writeMem(0x3ac1, { 0x1d });
        gbc.writeMem(0xa171, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x72ce);
        EXPECT(gbc.pc(), 0xa172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa171), 0xbe);
        // BE 0204
        gbc.setState(0x7464, 0x4939, 0x64a0, 0x6b21, 0xe5ed, 0xee8a, 0x1, 0x0);
        gbc.writeMem(0x7464, { 0xbe });
        gbc.writeMem(0xee8a, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4939);
        EXPECT(gbc.pc(), 0x7465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee8a), 0xd9);
        // BE 0205
        gbc.setState(0x655e, 0xb11a, 0x36e0, 0x3b71, 0x98bd, 0x33a6, 0x0, 0x1);
        gbc.writeMem(0x33a6, { 0xe2 });
        gbc.writeMem(0x655e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb11a);
        EXPECT(gbc.pc(), 0x655f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0206
        gbc.setState(0xdddd, 0x3d5a, 0x3d90, 0x77d6, 0x1452, 0x8acb, 0x1, 0x0);
        gbc.writeMem(0x8acb, { 0x92 });
        gbc.writeMem(0xdddd, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3d5a);
        EXPECT(gbc.pc(), 0xddde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8acb), 0x92);
        EXPECT(gbc.readMem(0xdddd), 0xbe);
        // BE 0207
        gbc.setState(0x3695, 0xf37e, 0x10d0, 0xf84b, 0x7841, 0x390e, 0x1, 0x1);
        gbc.writeMem(0x3695, { 0xbe });
        gbc.writeMem(0x390e, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf37e);
        EXPECT(gbc.pc(), 0x3696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0208
        gbc.setState(0xb661, 0xd2f7, 0x6c60, 0xee1f, 0x41a7, 0x48d, 0x0, 0x1);
        gbc.writeMem(0x48d, { 0x6f });
        gbc.writeMem(0xb661, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd2f7);
        EXPECT(gbc.pc(), 0xb662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb661), 0xbe);
        // BE 0209
        gbc.setState(0xb12, 0xc14c, 0x3c40, 0x6ea3, 0xf96c, 0x4ef5, 0x0, 0x1);
        gbc.writeMem(0xb12, { 0xbe });
        gbc.writeMem(0x4ef5, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc14c);
        EXPECT(gbc.pc(), 0xb13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 020A
        gbc.setState(0x183f, 0xc2a8, 0x3d30, 0x88d1, 0xac96, 0xe97f, 0x1, 0x1);
        gbc.writeMem(0x183f, { 0xbe });
        gbc.writeMem(0xe97f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc2a8);
        EXPECT(gbc.pc(), 0x1840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe97f), 0x0);
        // BE 020B
        gbc.setState(0x160c, 0x908a, 0x3250, 0x1e49, 0xe7a8, 0xa3e4, 0x1, 0x1);
        gbc.writeMem(0x160c, { 0xbe });
        gbc.writeMem(0xa3e4, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x908a);
        EXPECT(gbc.pc(), 0x160d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e4), 0x41);
        // BE 020C
        gbc.setState(0x75e5, 0x8f85, 0xa990, 0xd9d4, 0xb18a, 0x38cb, 0x1, 0x1);
        gbc.writeMem(0x38cb, { 0xb2 });
        gbc.writeMem(0x75e5, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8f85);
        EXPECT(gbc.pc(), 0x75e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 020D
        gbc.setState(0x1699, 0x6425, 0x6630, 0x1103, 0x7025, 0xf364, 0x0, 0x1);
        gbc.writeMem(0x1699, { 0xbe });
        gbc.writeMem(0xf364, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6425);
        EXPECT(gbc.pc(), 0x169a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf364), 0xd8);
        // BE 020E
        gbc.setState(0x3c20, 0x2cfb, 0xfd50, 0x6f04, 0x7f9b, 0xd8de, 0x0, 0x1);
        gbc.writeMem(0x3c20, { 0xbe });
        gbc.writeMem(0xd8de, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2cfb);
        EXPECT(gbc.pc(), 0x3c21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8de), 0x71);
        // BE 020F
        gbc.setState(0x51ff, 0xd989, 0xdbd0, 0x3fee, 0x7839, 0xa1aa, 0x1, 0x0);
        gbc.writeMem(0x51ff, { 0xbe });
        gbc.writeMem(0xa1aa, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd989);
        EXPECT(gbc.pc(), 0x5200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1aa), 0xaa);
        // BE 0210
        gbc.setState(0x3038, 0x8d3c, 0xdc20, 0x18cc, 0x3d1a, 0x8b8b, 0x0, 0x0);
        gbc.writeMem(0x3038, { 0xbe });
        gbc.writeMem(0x8b8b, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8d3c);
        EXPECT(gbc.pc(), 0x3039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b8b), 0x97);
        // BE 0211
        gbc.setState(0x2710, 0x5a5b, 0x60, 0xa7ce, 0x3c3e, 0x9f92, 0x0, 0x0);
        gbc.writeMem(0x2710, { 0xbe });
        gbc.writeMem(0x9f92, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5a5b);
        EXPECT(gbc.pc(), 0x2711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f92), 0xce);
        // BE 0212
        gbc.setState(0x92da, 0x20b3, 0x7560, 0x82b9, 0x3c5e, 0xc228, 0x0, 0x0);
        gbc.writeMem(0x92da, { 0xbe });
        gbc.writeMem(0xc228, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x20b3);
        EXPECT(gbc.pc(), 0x92db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92da), 0xbe);
        EXPECT(gbc.readMem(0xc228), 0xdf);
        // BE 0213
        gbc.setState(0xb5af, 0x97fd, 0xd300, 0xc2e8, 0xd88e, 0xfc38, 0x0, 0x0);
        gbc.writeMem(0xb5af, { 0xbe });
        gbc.writeMem(0xfc38, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x97fd);
        EXPECT(gbc.pc(), 0xb5b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5af), 0xbe);
        EXPECT(gbc.readMem(0xfc38), 0x2d);
        // BE 0214
        gbc.setState(0x67fc, 0x6f8f, 0x1f0, 0xe6d7, 0x40cf, 0x9b53, 0x1, 0x1);
        gbc.writeMem(0x67fc, { 0xbe });
        gbc.writeMem(0x9b53, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6f8f);
        EXPECT(gbc.pc(), 0x67fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b53), 0xf7);
        // BE 0215
        gbc.setState(0x98a3, 0x407c, 0x6b10, 0x3dee, 0x83d8, 0x8aed, 0x1, 0x0);
        gbc.writeMem(0x8aed, { 0x96 });
        gbc.writeMem(0x98a3, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x407c);
        EXPECT(gbc.pc(), 0x98a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aed), 0x96);
        EXPECT(gbc.readMem(0x98a3), 0xbe);
        // BE 0216
        gbc.setState(0xb5ba, 0x4407, 0xdf60, 0xca22, 0x4e7a, 0x486c, 0x0, 0x0);
        gbc.writeMem(0x486c, { 0xf0 });
        gbc.writeMem(0xb5ba, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4407);
        EXPECT(gbc.pc(), 0xb5bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ba), 0xbe);
        // BE 0217
        gbc.setState(0xd922, 0xd33c, 0x8c20, 0xdc8b, 0xfd73, 0xf63d, 0x1, 0x1);
        gbc.writeMem(0xd922, { 0xbe });
        gbc.writeMem(0xf63d, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd33c);
        EXPECT(gbc.pc(), 0xd923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd922), 0xbe);
        EXPECT(gbc.readMem(0xf63d), 0x1c);
        // BE 0218
        gbc.setState(0xce95, 0x87f5, 0x3940, 0x6eba, 0x29ba, 0xc85f, 0x0, 0x0);
        gbc.writeMem(0xc85f, { 0x1a });
        gbc.writeMem(0xce95, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x87f5);
        EXPECT(gbc.pc(), 0xce96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc85f), 0x1a);
        EXPECT(gbc.readMem(0xce95), 0xbe);
        // BE 0219
        gbc.setState(0xa672, 0x6e70, 0xc190, 0x51a2, 0x9a9f, 0x775, 0x1, 0x0);
        gbc.writeMem(0x775, { 0x2f });
        gbc.writeMem(0xa672, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6e70);
        EXPECT(gbc.pc(), 0xa673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa672), 0xbe);
        // BE 021A
        gbc.setState(0x705e, 0xb6f, 0x63a0, 0xd418, 0x9dc5, 0x288c, 0x1, 0x1);
        gbc.writeMem(0x288c, { 0xb5 });
        gbc.writeMem(0x705e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb6f);
        EXPECT(gbc.pc(), 0x705f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 021B
        gbc.setState(0x6ada, 0xe3ca, 0xbce0, 0xd0ed, 0x254e, 0x49eb, 0x0, 0x0);
        gbc.writeMem(0x49eb, { 0xc1 });
        gbc.writeMem(0x6ada, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe3ca);
        EXPECT(gbc.pc(), 0x6adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 021C
        gbc.setState(0xdbc9, 0xd15c, 0xd430, 0xcb6c, 0xc410, 0xc3b0, 0x0, 0x1);
        gbc.writeMem(0xc3b0, { 0x4e });
        gbc.writeMem(0xdbc9, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd15c);
        EXPECT(gbc.pc(), 0xdbca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b0), 0x4e);
        EXPECT(gbc.readMem(0xdbc9), 0xbe);
        // BE 021D
        gbc.setState(0x7cb5, 0x7907, 0xaf0, 0xb4b4, 0x3ee7, 0x3c0f, 0x1, 0x1);
        gbc.writeMem(0x3c0f, { 0xf2 });
        gbc.writeMem(0x7cb5, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7907);
        EXPECT(gbc.pc(), 0x7cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 021F
        gbc.setState(0x7a17, 0x98f4, 0xea70, 0x1824, 0xf359, 0xdf8b, 0x1, 0x1);
        gbc.writeMem(0x7a17, { 0xbe });
        gbc.writeMem(0xdf8b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x98f4);
        EXPECT(gbc.pc(), 0x7a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf8b), 0x8c);
        // BE 0220
        gbc.setState(0xebf3, 0x5595, 0x31f0, 0x6f55, 0xcd2f, 0x2ff1, 0x1, 0x0);
        gbc.writeMem(0x2ff1, { 0xaa });
        gbc.writeMem(0xebf3, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5595);
        EXPECT(gbc.pc(), 0xebf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf3), 0xbe);
        // BE 0221
        gbc.setState(0x5ec9, 0xded5, 0x50e0, 0x33bd, 0x6976, 0xc07e, 0x0, 0x0);
        gbc.writeMem(0x5ec9, { 0xbe });
        gbc.writeMem(0xc07e, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xded5);
        EXPECT(gbc.pc(), 0x5eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07e), 0x8);
        // BE 0222
        gbc.setState(0x5f68, 0xb04c, 0xe6b0, 0x3d8, 0x3c42, 0x4a34, 0x1, 0x1);
        gbc.writeMem(0x4a34, { 0x54 });
        gbc.writeMem(0x5f68, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb04c);
        EXPECT(gbc.pc(), 0x5f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0223
        gbc.setState(0xd682, 0x9413, 0xaf10, 0x2c24, 0x980c, 0xeb97, 0x1, 0x0);
        gbc.writeMem(0xd682, { 0xbe });
        gbc.writeMem(0xeb97, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9413);
        EXPECT(gbc.pc(), 0xd683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd682), 0xbe);
        EXPECT(gbc.readMem(0xeb97), 0x1);
        // BE 0224
        gbc.setState(0x6cb7, 0x23b6, 0xcce0, 0x9e32, 0x6cf3, 0x963b, 0x1, 0x1);
        gbc.writeMem(0x6cb7, { 0xbe });
        gbc.writeMem(0x963b, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x23b6);
        EXPECT(gbc.pc(), 0x6cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x963b), 0xbb);
        // BE 0226
        gbc.setState(0xc26d, 0x5407, 0xabc0, 0xf5fe, 0xd695, 0x7df, 0x0, 0x0);
        gbc.writeMem(0x7df, { 0x8a });
        gbc.writeMem(0xc26d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5407);
        EXPECT(gbc.pc(), 0xc26e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc26d), 0xbe);
        // BE 0227
        gbc.setState(0xab9e, 0x775d, 0x5f40, 0x80da, 0x4022, 0x8e4c, 0x0, 0x1);
        gbc.writeMem(0x8e4c, { 0x4f });
        gbc.writeMem(0xab9e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x775d);
        EXPECT(gbc.pc(), 0xab9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e4c), 0x4f);
        EXPECT(gbc.readMem(0xab9e), 0xbe);
        // BE 0228
        gbc.setState(0x96b1, 0xcf5f, 0x7010, 0x843b, 0xe7b6, 0xe0ee, 0x0, 0x1);
        gbc.writeMem(0x96b1, { 0xbe });
        gbc.writeMem(0xe0ee, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcf5f);
        EXPECT(gbc.pc(), 0x96b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b1), 0xbe);
        EXPECT(gbc.readMem(0xe0ee), 0xcd);
        // BE 0229
        gbc.setState(0x7b70, 0x1059, 0xb7f0, 0xf3a, 0x1b39, 0x42c1, 0x0, 0x0);
        gbc.writeMem(0x42c1, { 0xa6 });
        gbc.writeMem(0x7b70, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1059);
        EXPECT(gbc.pc(), 0x7b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 022A
        gbc.setState(0x7931, 0x73e0, 0xc820, 0xe6a, 0xd8e2, 0xe565, 0x1, 0x1);
        gbc.writeMem(0x7931, { 0xbe });
        gbc.writeMem(0xe565, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x73e0);
        EXPECT(gbc.pc(), 0x7932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe565), 0x5d);
        // BE 022B
        gbc.setState(0x28d, 0xdc, 0x4df0, 0x295a, 0x14bc, 0x9f1a, 0x0, 0x0);
        gbc.writeMem(0x28d, { 0xbe });
        gbc.writeMem(0x9f1a, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdc);
        EXPECT(gbc.pc(), 0x28e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f1a), 0x68);
        // BE 022C
        gbc.setState(0x888e, 0x5950, 0xc9d0, 0x331, 0x41bd, 0x42e, 0x1, 0x0);
        gbc.writeMem(0x42e, { 0xad });
        gbc.writeMem(0x888e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5950);
        EXPECT(gbc.pc(), 0x888f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888e), 0xbe);
        // BE 022D
        gbc.setState(0x281d, 0x4c73, 0x22c0, 0xa0b5, 0xcff7, 0x9072, 0x1, 0x0);
        gbc.writeMem(0x281d, { 0xbe });
        gbc.writeMem(0x9072, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4c73);
        EXPECT(gbc.pc(), 0x281e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9072), 0x5b);
        // BE 022E
        gbc.setState(0xb47f, 0x9b8d, 0xe360, 0xb509, 0x26d4, 0x894, 0x1, 0x0);
        gbc.writeMem(0x894, { 0x1f });
        gbc.writeMem(0xb47f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9b8d);
        EXPECT(gbc.pc(), 0xb480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb47f), 0xbe);
        // BE 022F
        gbc.setState(0x3c75, 0x70a4, 0xa7e0, 0x7ba9, 0x6178, 0x4e5b, 0x0, 0x0);
        gbc.writeMem(0x3c75, { 0xbe });
        gbc.writeMem(0x4e5b, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x70a4);
        EXPECT(gbc.pc(), 0x3c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0230
        gbc.setState(0xb2ce, 0x722e, 0xba0, 0xe0d4, 0xfa9d, 0xc859, 0x0, 0x1);
        gbc.writeMem(0xb2ce, { 0xbe });
        gbc.writeMem(0xc859, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x722e);
        EXPECT(gbc.pc(), 0xb2cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ce), 0xbe);
        EXPECT(gbc.readMem(0xc859), 0x7f);
        // BE 0231
        gbc.setState(0xef64, 0x34c8, 0x5300, 0x5713, 0x4bc6, 0x5414, 0x1, 0x1);
        gbc.writeMem(0x5414, { 0xb7 });
        gbc.writeMem(0xef64, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x34c8);
        EXPECT(gbc.pc(), 0xef65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef64), 0xbe);
        // BE 0232
        gbc.setState(0x1f80, 0x1d6d, 0x5cc0, 0xb816, 0xc07a, 0xfb53, 0x0, 0x1);
        gbc.writeMem(0x1f80, { 0xbe });
        gbc.writeMem(0xfb53, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1d6d);
        EXPECT(gbc.pc(), 0x1f81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb53), 0xe3);
        // BE 0233
        gbc.setState(0xb46e, 0x44b6, 0xc640, 0x8479, 0x44c1, 0x1f68, 0x0, 0x0);
        gbc.writeMem(0x1f68, { 0x9c });
        gbc.writeMem(0xb46e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x44b6);
        EXPECT(gbc.pc(), 0xb46f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb46e), 0xbe);
        // BE 0234
        gbc.setState(0xde0a, 0xb2d6, 0x9470, 0x9911, 0xb8eb, 0xae5f, 0x1, 0x0);
        gbc.writeMem(0xae5f, { 0x7e });
        gbc.writeMem(0xde0a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb2d6);
        EXPECT(gbc.pc(), 0xde0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5f), 0x7e);
        EXPECT(gbc.readMem(0xde0a), 0xbe);
        // BE 0235
        gbc.setState(0x794a, 0xca1, 0xfe20, 0x9509, 0xe8c9, 0x5640, 0x0, 0x1);
        gbc.writeMem(0x5640, { 0xde });
        gbc.writeMem(0x794a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xca1);
        EXPECT(gbc.pc(), 0x794b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0236
        gbc.setState(0x8d4a, 0x5835, 0x33f0, 0x9108, 0x2263, 0x7c45, 0x0, 0x1);
        gbc.writeMem(0x7c45, { 0x67 });
        gbc.writeMem(0x8d4a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5835);
        EXPECT(gbc.pc(), 0x8d4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d4a), 0xbe);
        // BE 0237
        gbc.setState(0xeb6a, 0x1ea8, 0x7d90, 0x5e42, 0x1f50, 0xf2cd, 0x0, 0x1);
        gbc.writeMem(0xeb6a, { 0xbe });
        gbc.writeMem(0xf2cd, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1ea8);
        EXPECT(gbc.pc(), 0xeb6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6a), 0xbe);
        EXPECT(gbc.readMem(0xf2cd), 0x85);
        // BE 0238
        gbc.setState(0x677b, 0x93b, 0x7ec0, 0x665c, 0x75d3, 0x3f07, 0x1, 0x0);
        gbc.writeMem(0x3f07, { 0xe7 });
        gbc.writeMem(0x677b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x93b);
        EXPECT(gbc.pc(), 0x677c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0239
        gbc.setState(0x2f83, 0xd181, 0xc240, 0xfeaa, 0xbf48, 0x83fd, 0x0, 0x1);
        gbc.writeMem(0x2f83, { 0xbe });
        gbc.writeMem(0x83fd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd181);
        EXPECT(gbc.pc(), 0x2f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83fd), 0x93);
        // BE 023A
        gbc.setState(0x454c, 0x3c53, 0x1e90, 0x40c2, 0xb83a, 0x5929, 0x1, 0x1);
        gbc.writeMem(0x454c, { 0xbe });
        gbc.writeMem(0x5929, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3c53);
        EXPECT(gbc.pc(), 0x454d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 023B
        gbc.setState(0x4805, 0x2c57, 0x8550, 0x9b0, 0x40b8, 0x7050, 0x1, 0x0);
        gbc.writeMem(0x4805, { 0xbe });
        gbc.writeMem(0x7050, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2c57);
        EXPECT(gbc.pc(), 0x4806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 023C
        gbc.setState(0x820a, 0x46db, 0x520, 0x9630, 0x9cc5, 0xbc2f, 0x1, 0x0);
        gbc.writeMem(0x820a, { 0xbe });
        gbc.writeMem(0xbc2f, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x46db);
        EXPECT(gbc.pc(), 0x820b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x820a), 0xbe);
        EXPECT(gbc.readMem(0xbc2f), 0x83);
        // BE 023D
        gbc.setState(0x5879, 0x6919, 0xe7c0, 0x6eea, 0xad3a, 0xc73d, 0x0, 0x1);
        gbc.writeMem(0x5879, { 0xbe });
        gbc.writeMem(0xc73d, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6919);
        EXPECT(gbc.pc(), 0x587a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc73d), 0x81);
        // BE 023E
        gbc.setState(0x3a3b, 0xd183, 0x2340, 0x1040, 0x9a50, 0x73fa, 0x1, 0x0);
        gbc.writeMem(0x3a3b, { 0xbe });
        gbc.writeMem(0x73fa, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd183);
        EXPECT(gbc.pc(), 0x3a3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 023F
        gbc.setState(0x4326, 0xcb0d, 0xa610, 0x918a, 0x4eaa, 0x6994, 0x1, 0x1);
        gbc.writeMem(0x4326, { 0xbe });
        gbc.writeMem(0x6994, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcb0d);
        EXPECT(gbc.pc(), 0x4327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0240
        gbc.setState(0x2fc3, 0x8212, 0x7b90, 0xd98d, 0xc3b2, 0xe1ea, 0x0, 0x0);
        gbc.writeMem(0x2fc3, { 0xbe });
        gbc.writeMem(0xe1ea, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8212);
        EXPECT(gbc.pc(), 0x2fc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ea), 0x33);
        // BE 0241
        gbc.setState(0x7ec4, 0x6b1d, 0x3f30, 0x27c3, 0x700c, 0x564f, 0x0, 0x1);
        gbc.writeMem(0x564f, { 0x8a });
        gbc.writeMem(0x7ec4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6b1d);
        EXPECT(gbc.pc(), 0x7ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0242
        gbc.setState(0xa63d, 0xebe8, 0xc570, 0x1c96, 0xdbe8, 0x6015, 0x1, 0x0);
        gbc.writeMem(0x6015, { 0x1d });
        gbc.writeMem(0xa63d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xebe8);
        EXPECT(gbc.pc(), 0xa63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa63d), 0xbe);
        // BE 0243
        gbc.setState(0x7455, 0xfe46, 0x60e0, 0xa0a0, 0x5f45, 0x5415, 0x1, 0x1);
        gbc.writeMem(0x5415, { 0x4f });
        gbc.writeMem(0x7455, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfe46);
        EXPECT(gbc.pc(), 0x7456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0245
        gbc.setState(0x519f, 0x7b39, 0x1410, 0x8fad, 0x6d73, 0x7cbb, 0x1, 0x0);
        gbc.writeMem(0x519f, { 0xbe });
        gbc.writeMem(0x7cbb, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7b39);
        EXPECT(gbc.pc(), 0x51a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0246
        gbc.setState(0xdea3, 0xc09c, 0xf7d0, 0xdbfb, 0xf8d1, 0xdea5, 0x1, 0x1);
        gbc.writeMem(0xdea3, { 0xbe });
        gbc.writeMem(0xdea5, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc09c);
        EXPECT(gbc.pc(), 0xdea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea3), 0xbe);
        EXPECT(gbc.readMem(0xdea5), 0xe7);
        // BE 0247
        gbc.setState(0x430f, 0x2ad8, 0x7e40, 0x190e, 0x70c, 0x629f, 0x1, 0x0);
        gbc.writeMem(0x430f, { 0xbe });
        gbc.writeMem(0x629f, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2ad8);
        EXPECT(gbc.pc(), 0x4310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0248
        gbc.setState(0x73ba, 0xa106, 0x4fb0, 0xc36c, 0xc7e1, 0x645f, 0x0, 0x1);
        gbc.writeMem(0x645f, { 0xa5 });
        gbc.writeMem(0x73ba, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa106);
        EXPECT(gbc.pc(), 0x73bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0249
        gbc.setState(0x549a, 0xce2b, 0xf990, 0xf7ff, 0xaa03, 0x652d, 0x1, 0x1);
        gbc.writeMem(0x549a, { 0xbe });
        gbc.writeMem(0x652d, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xce2b);
        EXPECT(gbc.pc(), 0x549b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 024A
        gbc.setState(0x26be, 0x9d30, 0x6ea0, 0x7f40, 0x7793, 0xb646, 0x0, 0x0);
        gbc.writeMem(0x26be, { 0xbe });
        gbc.writeMem(0xb646, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9d30);
        EXPECT(gbc.pc(), 0x26bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb646), 0x82);
        // BE 024B
        gbc.setState(0xb5, 0xe623, 0x21a0, 0x74c7, 0xceff, 0x7b24, 0x0, 0x1);
        gbc.writeMem(0xb5, { 0xbe });
        gbc.writeMem(0x7b24, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe623);
        EXPECT(gbc.pc(), 0xb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 024C
        gbc.setState(0xb778, 0xc38e, 0x3600, 0xdc43, 0xdae3, 0x1cac, 0x1, 0x1);
        gbc.writeMem(0x1cac, { 0x36 });
        gbc.writeMem(0xb778, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc38e);
        EXPECT(gbc.pc(), 0xb779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb778), 0xbe);
        // BE 024D
        gbc.setState(0xd8d7, 0x8d69, 0xe620, 0x596b, 0x2d7b, 0x6187, 0x0, 0x1);
        gbc.writeMem(0x6187, { 0x74 });
        gbc.writeMem(0xd8d7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8d69);
        EXPECT(gbc.pc(), 0xd8d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d7), 0xbe);
        // BE 024E
        gbc.setState(0x71db, 0xd05e, 0xb8f0, 0xcb02, 0x1f02, 0x4504, 0x0, 0x1);
        gbc.writeMem(0x4504, { 0x1e });
        gbc.writeMem(0x71db, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd05e);
        EXPECT(gbc.pc(), 0x71dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 024F
        gbc.setState(0xc1e1, 0x7c70, 0x3c50, 0xd14c, 0x1cb4, 0x922, 0x1, 0x0);
        gbc.writeMem(0x922, { 0x35 });
        gbc.writeMem(0xc1e1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7c70);
        EXPECT(gbc.pc(), 0xc1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e1), 0xbe);
        // BE 0250
        gbc.setState(0xb295, 0x95b5, 0x8500, 0x7603, 0xf577, 0x9f6e, 0x1, 0x0);
        gbc.writeMem(0x9f6e, { 0xe0 });
        gbc.writeMem(0xb295, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x95b5);
        EXPECT(gbc.pc(), 0xb296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f6e), 0xe0);
        EXPECT(gbc.readMem(0xb295), 0xbe);
        // BE 0251
        gbc.setState(0xc3a7, 0x4aee, 0xbb50, 0x9e7c, 0x7f40, 0x7681, 0x1, 0x0);
        gbc.writeMem(0x7681, { 0xb0 });
        gbc.writeMem(0xc3a7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4aee);
        EXPECT(gbc.pc(), 0xc3a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a7), 0xbe);
        // BE 0252
        gbc.setState(0xce36, 0x14ad, 0x1e10, 0x556, 0x5f3, 0x83a1, 0x1, 0x0);
        gbc.writeMem(0x83a1, { 0xc6 });
        gbc.writeMem(0xce36, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x14ad);
        EXPECT(gbc.pc(), 0xce37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a1), 0xc6);
        EXPECT(gbc.readMem(0xce36), 0xbe);
        // BE 0253
        gbc.setState(0x1a72, 0xc6f9, 0xe540, 0x27aa, 0x95af, 0x2c9d, 0x0, 0x0);
        gbc.writeMem(0x1a72, { 0xbe });
        gbc.writeMem(0x2c9d, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc6f9);
        EXPECT(gbc.pc(), 0x1a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0254
        gbc.setState(0x8d6d, 0xc04f, 0x8c10, 0xa0ee, 0x8853, 0xaa37, 0x0, 0x1);
        gbc.writeMem(0x8d6d, { 0xbe });
        gbc.writeMem(0xaa37, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc04f);
        EXPECT(gbc.pc(), 0x8d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d6d), 0xbe);
        EXPECT(gbc.readMem(0xaa37), 0xd5);
        // BE 0255
        gbc.setState(0x63e8, 0xc436, 0x62e0, 0x5aa, 0xc18a, 0x36a5, 0x0, 0x1);
        gbc.writeMem(0x36a5, { 0x4f });
        gbc.writeMem(0x63e8, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc436);
        EXPECT(gbc.pc(), 0x63e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0256
        gbc.setState(0x892, 0xab53, 0x6ad0, 0xe3b7, 0x9e41, 0x8c43, 0x1, 0x1);
        gbc.writeMem(0x892, { 0xbe });
        gbc.writeMem(0x8c43, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xab53);
        EXPECT(gbc.pc(), 0x893);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c43), 0xfa);
        // BE 0257
        gbc.setState(0x8429, 0xcb77, 0xc0, 0xf74c, 0xcdae, 0x4234, 0x0, 0x0);
        gbc.writeMem(0x4234, { 0x6c });
        gbc.writeMem(0x8429, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcb77);
        EXPECT(gbc.pc(), 0x842a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8429), 0xbe);
        // BE 0258
        gbc.setState(0x89a7, 0xcd02, 0x74d0, 0xb, 0x3277, 0xffa9, 0x1, 0x0);
        gbc.writeMem(0x89a7, { 0xbe });
        gbc.writeMem(0xffa9, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xcd02);
        EXPECT(gbc.pc(), 0x89a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a7), 0xbe);
        EXPECT(gbc.readMem(0xffa9), 0x61);
        // BE 025C
        gbc.setState(0x8567, 0xd5c8, 0xd930, 0x3219, 0x4745, 0x8612, 0x1, 0x0);
        gbc.writeMem(0x8567, { 0xbe });
        gbc.writeMem(0x8612, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd5c8);
        EXPECT(gbc.pc(), 0x8568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8567), 0xbe);
        EXPECT(gbc.readMem(0x8612), 0xca);
        // BE 025D
        gbc.setState(0x2565, 0x1db4, 0x37f0, 0xa599, 0x30a5, 0x3633, 0x1, 0x1);
        gbc.writeMem(0x2565, { 0xbe });
        gbc.writeMem(0x3633, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1db4);
        EXPECT(gbc.pc(), 0x2566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 025E
        gbc.setState(0xc42e, 0x87f2, 0x95a0, 0x11a6, 0x138c, 0x20, 0x1, 0x1);
        gbc.writeMem(0x20, { 0xe4 });
        gbc.writeMem(0xc42e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x87f2);
        EXPECT(gbc.pc(), 0xc42f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc42e), 0xbe);
        // BE 025F
        gbc.setState(0x2c94, 0x3ae5, 0x8d40, 0x1db8, 0x4ded, 0x2c8a, 0x0, 0x1);
        gbc.writeMem(0x2c8a, { 0x2e });
        gbc.writeMem(0x2c94, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3ae5);
        EXPECT(gbc.pc(), 0x2c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0260
        gbc.setState(0xcd18, 0x4fc8, 0x8f40, 0xdd5b, 0x9325, 0xd4fe, 0x0, 0x0);
        gbc.writeMem(0xcd18, { 0xbe });
        gbc.writeMem(0xd4fe, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4fc8);
        EXPECT(gbc.pc(), 0xcd19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd18), 0xbe);
        EXPECT(gbc.readMem(0xd4fe), 0x46);
        // BE 0261
        gbc.setState(0xe685, 0xb5ac, 0xf7c0, 0xcaeb, 0xb107, 0x5e7b, 0x0, 0x1);
        gbc.writeMem(0x5e7b, { 0x9d });
        gbc.writeMem(0xe685, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb5ac);
        EXPECT(gbc.pc(), 0xe686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe685), 0xbe);
        // BE 0262
        gbc.setState(0xadba, 0x900, 0xd350, 0xa5a, 0xc207, 0xeae6, 0x0, 0x1);
        gbc.writeMem(0xadba, { 0xbe });
        gbc.writeMem(0xeae6, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x900);
        EXPECT(gbc.pc(), 0xadbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadba), 0xbe);
        EXPECT(gbc.readMem(0xeae6), 0x47);
        // BE 0263
        gbc.setState(0x3f87, 0x3eb0, 0xf940, 0xc8f7, 0x4408, 0x3058, 0x1, 0x1);
        gbc.writeMem(0x3058, { 0x52 });
        gbc.writeMem(0x3f87, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3eb0);
        EXPECT(gbc.pc(), 0x3f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0264
        gbc.setState(0xb821, 0xe049, 0x6c50, 0xf76e, 0x611, 0x4b36, 0x0, 0x0);
        gbc.writeMem(0x4b36, { 0xfc });
        gbc.writeMem(0xb821, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe049);
        EXPECT(gbc.pc(), 0xb822);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb821), 0xbe);
        // BE 0265
        gbc.setState(0xe9de, 0xdbb8, 0xfa40, 0xc742, 0x91ad, 0xe06d, 0x1, 0x1);
        gbc.writeMem(0xe06d, { 0x13 });
        gbc.writeMem(0xe9de, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xdbb8);
        EXPECT(gbc.pc(), 0xe9df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06d), 0x13);
        EXPECT(gbc.readMem(0xe9de), 0xbe);
        // BE 0266
        gbc.setState(0xdbdb, 0xe313, 0xb0f0, 0x13a6, 0x7038, 0x44be, 0x0, 0x0);
        gbc.writeMem(0x44be, { 0x37 });
        gbc.writeMem(0xdbdb, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe313);
        EXPECT(gbc.pc(), 0xdbdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbdb), 0xbe);
        // BE 0267
        gbc.setState(0x8da1, 0x7dae, 0x83f0, 0x352a, 0x1a77, 0xee63, 0x0, 0x1);
        gbc.writeMem(0x8da1, { 0xbe });
        gbc.writeMem(0xee63, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7dae);
        EXPECT(gbc.pc(), 0x8da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da1), 0xbe);
        EXPECT(gbc.readMem(0xee63), 0x68);
        // BE 0268
        gbc.setState(0x59da, 0x7aab, 0xe060, 0x8a28, 0x2443, 0xd393, 0x1, 0x0);
        gbc.writeMem(0x59da, { 0xbe });
        gbc.writeMem(0xd393, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7aab);
        EXPECT(gbc.pc(), 0x59db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd393), 0xcd);
        // BE 0269
        gbc.setState(0x8b2b, 0x79f4, 0xca90, 0xbf4c, 0x495d, 0xbfec, 0x0, 0x1);
        gbc.writeMem(0x8b2b, { 0xbe });
        gbc.writeMem(0xbfec, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x79f4);
        EXPECT(gbc.pc(), 0x8b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2b), 0xbe);
        EXPECT(gbc.readMem(0xbfec), 0xc3);
        // BE 026A
        gbc.setState(0x74f6, 0x64e1, 0x7990, 0x55a1, 0x40e9, 0x5e98, 0x0, 0x1);
        gbc.writeMem(0x5e98, { 0x49 });
        gbc.writeMem(0x74f6, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x64e1);
        EXPECT(gbc.pc(), 0x74f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 026B
        gbc.setState(0xd23e, 0xf735, 0xbc10, 0xc99c, 0xae4b, 0x1a79, 0x1, 0x0);
        gbc.writeMem(0x1a79, { 0xc1 });
        gbc.writeMem(0xd23e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf735);
        EXPECT(gbc.pc(), 0xd23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23e), 0xbe);
        // BE 026C
        gbc.setState(0x2f33, 0xa60, 0x7420, 0xf932, 0x8b38, 0x206e, 0x0, 0x0);
        gbc.writeMem(0x206e, { 0x54 });
        gbc.writeMem(0x2f33, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa60);
        EXPECT(gbc.pc(), 0x2f34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 026F
        gbc.setState(0x5b69, 0x8d96, 0xeab0, 0xedc, 0xb380, 0xd5f7, 0x1, 0x0);
        gbc.writeMem(0x5b69, { 0xbe });
        gbc.writeMem(0xd5f7, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8d96);
        EXPECT(gbc.pc(), 0x5b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5f7), 0x2e);
        // BE 0270
        gbc.setState(0x6803, 0x2e25, 0x8f0, 0x883c, 0xa78f, 0x4314, 0x0, 0x0);
        gbc.writeMem(0x4314, { 0x9 });
        gbc.writeMem(0x6803, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2e25);
        EXPECT(gbc.pc(), 0x6804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0271
        gbc.setState(0x56b7, 0xd98e, 0xbae0, 0x28f6, 0x2690, 0x6779, 0x1, 0x0);
        gbc.writeMem(0x56b7, { 0xbe });
        gbc.writeMem(0x6779, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd98e);
        EXPECT(gbc.pc(), 0x56b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0272
        gbc.setState(0x3394, 0x432, 0x34e0, 0x4a4c, 0x71f0, 0x90fb, 0x0, 0x1);
        gbc.writeMem(0x3394, { 0xbe });
        gbc.writeMem(0x90fb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x432);
        EXPECT(gbc.pc(), 0x3395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90fb), 0x90);
        // BE 0273
        gbc.setState(0x9c01, 0x7d82, 0xbea0, 0xf01, 0x5834, 0x40a7, 0x0, 0x1);
        gbc.writeMem(0x40a7, { 0x7 });
        gbc.writeMem(0x9c01, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7d82);
        EXPECT(gbc.pc(), 0x9c02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c01), 0xbe);
        // BE 0274
        gbc.setState(0x430b, 0xc9b9, 0xfc30, 0xeca5, 0xe4ab, 0xe54a, 0x1, 0x0);
        gbc.writeMem(0x430b, { 0xbe });
        gbc.writeMem(0xe54a, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc9b9);
        EXPECT(gbc.pc(), 0x430c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe54a), 0x39);
        // BE 0275
        gbc.setState(0x53c5, 0xa2f6, 0xdc0, 0x1d4e, 0xd43e, 0x129c, 0x0, 0x1);
        gbc.writeMem(0x129c, { 0x97 });
        gbc.writeMem(0x53c5, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa2f6);
        EXPECT(gbc.pc(), 0x53c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0276
        gbc.setState(0x94f6, 0xb817, 0xcac0, 0xf8a1, 0xa28c, 0x9b78, 0x1, 0x0);
        gbc.writeMem(0x94f6, { 0xbe });
        gbc.writeMem(0x9b78, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb817);
        EXPECT(gbc.pc(), 0x94f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f6), 0xbe);
        EXPECT(gbc.readMem(0x9b78), 0x1e);
        // BE 0277
        gbc.setState(0x9d77, 0xa2af, 0xa550, 0xf237, 0x66f4, 0x4127, 0x1, 0x1);
        gbc.writeMem(0x4127, { 0x31 });
        gbc.writeMem(0x9d77, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa2af);
        EXPECT(gbc.pc(), 0x9d78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d77), 0xbe);
        // BE 0278
        gbc.setState(0xef20, 0x1617, 0x3720, 0xe0d4, 0x50fc, 0x67fd, 0x0, 0x0);
        gbc.writeMem(0x67fd, { 0x99 });
        gbc.writeMem(0xef20, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1617);
        EXPECT(gbc.pc(), 0xef21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef20), 0xbe);
        // BE 0279
        gbc.setState(0xddfe, 0x5e5e, 0x7270, 0x3567, 0x3416, 0x8d2b, 0x0, 0x0);
        gbc.writeMem(0x8d2b, { 0x39 });
        gbc.writeMem(0xddfe, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5e5e);
        EXPECT(gbc.pc(), 0xddff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d2b), 0x39);
        EXPECT(gbc.readMem(0xddfe), 0xbe);
        // BE 027A
        gbc.setState(0xd106, 0xa7c9, 0x2480, 0x8065, 0x9c53, 0x542, 0x0, 0x1);
        gbc.writeMem(0x542, { 0x40 });
        gbc.writeMem(0xd106, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa7c9);
        EXPECT(gbc.pc(), 0xd107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd106), 0xbe);
        // BE 027B
        gbc.setState(0x820b, 0x6686, 0x8ac0, 0x6958, 0xfc3a, 0x518d, 0x1, 0x0);
        gbc.writeMem(0x518d, { 0xc5 });
        gbc.writeMem(0x820b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6686);
        EXPECT(gbc.pc(), 0x820c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x820b), 0xbe);
        // BE 027D
        gbc.setState(0x6c62, 0x8747, 0xc450, 0xc7f4, 0xd75d, 0x7268, 0x1, 0x0);
        gbc.writeMem(0x6c62, { 0xbe });
        gbc.writeMem(0x7268, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8747);
        EXPECT(gbc.pc(), 0x6c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0280
        gbc.setState(0x9dae, 0xdeeb, 0xed90, 0xae92, 0x5a7b, 0x1578, 0x0, 0x1);
        gbc.writeMem(0x1578, { 0x43 });
        gbc.writeMem(0x9dae, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdeeb);
        EXPECT(gbc.pc(), 0x9daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dae), 0xbe);
        // BE 0281
        gbc.setState(0x5855, 0x47d, 0x2800, 0x387c, 0xada7, 0xa05c, 0x1, 0x1);
        gbc.writeMem(0x5855, { 0xbe });
        gbc.writeMem(0xa05c, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x47d);
        EXPECT(gbc.pc(), 0x5856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa05c), 0xae);
        // BE 0282
        gbc.setState(0xaaf7, 0xe11d, 0x50d0, 0x8f5f, 0x1637, 0x489e, 0x0, 0x1);
        gbc.writeMem(0x489e, { 0x4 });
        gbc.writeMem(0xaaf7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe11d);
        EXPECT(gbc.pc(), 0xaaf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf7), 0xbe);
        // BE 0283
        gbc.setState(0x1d90, 0xd475, 0x2950, 0x8bab, 0xd7ca, 0x9226, 0x0, 0x1);
        gbc.writeMem(0x1d90, { 0xbe });
        gbc.writeMem(0x9226, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd475);
        EXPECT(gbc.pc(), 0x1d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9226), 0x21);
        // BE 0284
        gbc.setState(0xa9b8, 0x7db6, 0xe1e0, 0xd285, 0x58ce, 0x5a24, 0x1, 0x1);
        gbc.writeMem(0x5a24, { 0x2b });
        gbc.writeMem(0xa9b8, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7db6);
        EXPECT(gbc.pc(), 0xa9b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b8), 0xbe);
        // BE 0285
        gbc.setState(0xbf89, 0x5ad5, 0xd010, 0x68a8, 0x5b48, 0x25c9, 0x0, 0x1);
        gbc.writeMem(0x25c9, { 0xd });
        gbc.writeMem(0xbf89, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5ad5);
        EXPECT(gbc.pc(), 0xbf8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf89), 0xbe);
        // BE 0286
        gbc.setState(0xdb7c, 0x3009, 0x8ac0, 0xaa9e, 0xf5e, 0x99d0, 0x0, 0x0);
        gbc.writeMem(0x99d0, { 0xf2 });
        gbc.writeMem(0xdb7c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3009);
        EXPECT(gbc.pc(), 0xdb7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d0), 0xf2);
        EXPECT(gbc.readMem(0xdb7c), 0xbe);
        // BE 0289
        gbc.setState(0x1f2, 0xc0e, 0x76b0, 0x248f, 0x7502, 0xe607, 0x1, 0x0);
        gbc.writeMem(0x1f2, { 0xbe });
        gbc.writeMem(0xe607, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc0e);
        EXPECT(gbc.pc(), 0x1f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe607), 0xfb);
        // BE 028A
        gbc.setState(0xd941, 0x7e1, 0xd170, 0x80ac, 0x24e2, 0xd375, 0x1, 0x0);
        gbc.writeMem(0xd375, { 0x9e });
        gbc.writeMem(0xd941, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7e1);
        EXPECT(gbc.pc(), 0xd942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd375), 0x9e);
        EXPECT(gbc.readMem(0xd941), 0xbe);
        // BE 028B
        gbc.setState(0x57c, 0x66c0, 0x9ec0, 0x5013, 0xd886, 0x3bce, 0x1, 0x1);
        gbc.writeMem(0x57c, { 0xbe });
        gbc.writeMem(0x3bce, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x66c0);
        EXPECT(gbc.pc(), 0x57d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 028C
        gbc.setState(0x8487, 0xb641, 0x31f0, 0xfa44, 0x6b9, 0xc78c, 0x1, 0x1);
        gbc.writeMem(0x8487, { 0xbe });
        gbc.writeMem(0xc78c, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb641);
        EXPECT(gbc.pc(), 0x8488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8487), 0xbe);
        EXPECT(gbc.readMem(0xc78c), 0x5c);
        // BE 028D
        gbc.setState(0xe069, 0xd35b, 0x77d0, 0xdddf, 0xca88, 0x64d8, 0x1, 0x0);
        gbc.writeMem(0x64d8, { 0xff });
        gbc.writeMem(0xe069, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd35b);
        EXPECT(gbc.pc(), 0xe06a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe069), 0xbe);
        // BE 028E
        gbc.setState(0x4e2b, 0xc324, 0xde0, 0xa7fd, 0x7116, 0x936a, 0x0, 0x0);
        gbc.writeMem(0x4e2b, { 0xbe });
        gbc.writeMem(0x936a, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc324);
        EXPECT(gbc.pc(), 0x4e2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x936a), 0xfd);
        // BE 028F
        gbc.setState(0xbe08, 0xf016, 0x6830, 0xc2f6, 0x1343, 0x34ca, 0x0, 0x0);
        gbc.writeMem(0x34ca, { 0x9a });
        gbc.writeMem(0xbe08, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf016);
        EXPECT(gbc.pc(), 0xbe09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe08), 0xbe);
        // BE 0290
        gbc.setState(0x9ca4, 0xbfa3, 0xd7c0, 0x2d43, 0xf846, 0x37ac, 0x0, 0x0);
        gbc.writeMem(0x37ac, { 0x6a });
        gbc.writeMem(0x9ca4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbfa3);
        EXPECT(gbc.pc(), 0x9ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca4), 0xbe);
        // BE 0291
        gbc.setState(0x523d, 0x99b5, 0x40e0, 0xf858, 0xf558, 0xc184, 0x0, 0x1);
        gbc.writeMem(0x523d, { 0xbe });
        gbc.writeMem(0xc184, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x99b5);
        EXPECT(gbc.pc(), 0x523e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc184), 0xe2);
        // BE 0292
        gbc.setState(0x50d3, 0xb4b4, 0x1dc0, 0xe8ef, 0xa603, 0x3db5, 0x0, 0x1);
        gbc.writeMem(0x3db5, { 0x24 });
        gbc.writeMem(0x50d3, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb4b4);
        EXPECT(gbc.pc(), 0x50d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0293
        gbc.setState(0x463a, 0xc89d, 0x6d40, 0x9c61, 0xb88a, 0x2990, 0x0, 0x0);
        gbc.writeMem(0x2990, { 0x0 });
        gbc.writeMem(0x463a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc89d);
        EXPECT(gbc.pc(), 0x463b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0294
        gbc.setState(0x32a, 0x412a, 0x9320, 0x8512, 0xe920, 0xfdc, 0x0, 0x0);
        gbc.writeMem(0x32a, { 0xbe });
        gbc.writeMem(0xfdc, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x412a);
        EXPECT(gbc.pc(), 0x32b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0295
        gbc.setState(0x214e, 0xcdef, 0xb820, 0x569b, 0x25fd, 0xe356, 0x0, 0x0);
        gbc.writeMem(0x214e, { 0xbe });
        gbc.writeMem(0xe356, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xcdef);
        EXPECT(gbc.pc(), 0x214f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe356), 0x23);
        // BE 0296
        gbc.setState(0x9330, 0x9662, 0x1ba0, 0x656, 0x84c2, 0xfc36, 0x1, 0x1);
        gbc.writeMem(0x9330, { 0xbe });
        gbc.writeMem(0xfc36, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9662);
        EXPECT(gbc.pc(), 0x9331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9330), 0xbe);
        EXPECT(gbc.readMem(0xfc36), 0xfd);
        // BE 0297
        gbc.setState(0xdab6, 0x2f08, 0xdd0, 0x97f1, 0xb576, 0xe4e, 0x0, 0x1);
        gbc.writeMem(0xe4e, { 0x5a });
        gbc.writeMem(0xdab6, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2f08);
        EXPECT(gbc.pc(), 0xdab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab6), 0xbe);
        // BE 0298
        gbc.setState(0x584c, 0x932e, 0x8f50, 0x96b8, 0x2d74, 0x1c63, 0x0, 0x0);
        gbc.writeMem(0x1c63, { 0x4 });
        gbc.writeMem(0x584c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x932e);
        EXPECT(gbc.pc(), 0x584d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0299
        gbc.setState(0x2780, 0x32d2, 0xdcd0, 0x27d8, 0xfa63, 0x238c, 0x0, 0x1);
        gbc.writeMem(0x238c, { 0xff });
        gbc.writeMem(0x2780, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x32d2);
        EXPECT(gbc.pc(), 0x2781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 029A
        gbc.setState(0x3e2d, 0x3397, 0x6bb0, 0xab4f, 0xa16b, 0x39c0, 0x0, 0x1);
        gbc.writeMem(0x39c0, { 0x28 });
        gbc.writeMem(0x3e2d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3397);
        EXPECT(gbc.pc(), 0x3e2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 029B
        gbc.setState(0x3547, 0x1265, 0x4ea0, 0x92c9, 0x1eab, 0xad58, 0x0, 0x0);
        gbc.writeMem(0x3547, { 0xbe });
        gbc.writeMem(0xad58, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1265);
        EXPECT(gbc.pc(), 0x3548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad58), 0xa4);
        // BE 029C
        gbc.setState(0x50ea, 0xc6e5, 0x3450, 0xabd7, 0x7d8d, 0x92ca, 0x1, 0x1);
        gbc.writeMem(0x50ea, { 0xbe });
        gbc.writeMem(0x92ca, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc6e5);
        EXPECT(gbc.pc(), 0x50eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ca), 0x2e);
        // BE 029D
        gbc.setState(0x35c8, 0x2d3f, 0x34a0, 0xe145, 0xe7b9, 0xb168, 0x1, 0x1);
        gbc.writeMem(0x35c8, { 0xbe });
        gbc.writeMem(0xb168, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2d3f);
        EXPECT(gbc.pc(), 0x35c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb168), 0x77);
        // BE 029E
        gbc.setState(0x81ac, 0x3b43, 0x8720, 0xdf77, 0x5ff4, 0xdb85, 0x0, 0x0);
        gbc.writeMem(0x81ac, { 0xbe });
        gbc.writeMem(0xdb85, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3b43);
        EXPECT(gbc.pc(), 0x81ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ac), 0xbe);
        EXPECT(gbc.readMem(0xdb85), 0xbd);
        // BE 029F
        gbc.setState(0xbfb1, 0x4623, 0x2ef0, 0x1503, 0x5430, 0x7578, 0x0, 0x0);
        gbc.writeMem(0x7578, { 0xc3 });
        gbc.writeMem(0xbfb1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4623);
        EXPECT(gbc.pc(), 0xbfb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb1), 0xbe);
        // BE 02A0
        gbc.setState(0x841d, 0xd96a, 0xd450, 0xa22a, 0xad02, 0x9ca2, 0x1, 0x1);
        gbc.writeMem(0x841d, { 0xbe });
        gbc.writeMem(0x9ca2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd96a);
        EXPECT(gbc.pc(), 0x841e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841d), 0xbe);
        EXPECT(gbc.readMem(0x9ca2), 0xd8);
        // BE 02A2
        gbc.setState(0x3f20, 0xbcd0, 0x3c40, 0x5dff, 0x9af5, 0x9764, 0x0, 0x0);
        gbc.writeMem(0x3f20, { 0xbe });
        gbc.writeMem(0x9764, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbcd0);
        EXPECT(gbc.pc(), 0x3f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9764), 0x21);
        // BE 02A3
        gbc.setState(0x9e32, 0x4de2, 0x7f40, 0x792b, 0xd9a, 0x2f5a, 0x1, 0x1);
        gbc.writeMem(0x2f5a, { 0x5e });
        gbc.writeMem(0x9e32, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4de2);
        EXPECT(gbc.pc(), 0x9e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e32), 0xbe);
        // BE 02A4
        gbc.setState(0x46e3, 0x80b8, 0xe2e0, 0x1f4f, 0x8e30, 0x6c7d, 0x1, 0x1);
        gbc.writeMem(0x46e3, { 0xbe });
        gbc.writeMem(0x6c7d, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x80b8);
        EXPECT(gbc.pc(), 0x46e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 02A5
        gbc.setState(0xd254, 0x12c8, 0x1bf0, 0xced1, 0x8593, 0x6c24, 0x0, 0x0);
        gbc.writeMem(0x6c24, { 0xaf });
        gbc.writeMem(0xd254, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x12c8);
        EXPECT(gbc.pc(), 0xd255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd254), 0xbe);
        // BE 02A6
        gbc.setState(0x3433, 0x942d, 0x8690, 0x5cc1, 0x3f87, 0x5f8d, 0x0, 0x0);
        gbc.writeMem(0x3433, { 0xbe });
        gbc.writeMem(0x5f8d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x942d);
        EXPECT(gbc.pc(), 0x3434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 02A7
        gbc.setState(0x1ac2, 0x3b8f, 0xc80, 0x1fdb, 0x4704, 0xfef8, 0x1, 0x0);
        gbc.writeMem(0x1ac2, { 0xbe });
        gbc.writeMem(0xfef8, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3b8f);
        EXPECT(gbc.pc(), 0x1ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfef8), 0xef);
        // BE 02A8
        gbc.setState(0x7c75, 0x1c15, 0x840, 0x5a91, 0x3716, 0xc827, 0x1, 0x0);
        gbc.writeMem(0x7c75, { 0xbe });
        gbc.writeMem(0xc827, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1c15);
        EXPECT(gbc.pc(), 0x7c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc827), 0xd0);
        // BE 02A9
        gbc.setState(0x8215, 0x1003, 0x5c70, 0x40f7, 0xcb23, 0x2f7c, 0x1, 0x0);
        gbc.writeMem(0x2f7c, { 0x0 });
        gbc.writeMem(0x8215, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1003);
        EXPECT(gbc.pc(), 0x8216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8215), 0xbe);
        // BE 02AA
        gbc.setState(0x76e1, 0xc388, 0x1320, 0x356d, 0xeeab, 0x3e28, 0x1, 0x0);
        gbc.writeMem(0x3e28, { 0x83 });
        gbc.writeMem(0x76e1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc388);
        EXPECT(gbc.pc(), 0x76e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 02AB
        gbc.setState(0x923f, 0x7b3f, 0x8a00, 0xb08b, 0x91f7, 0x5148, 0x0, 0x1);
        gbc.writeMem(0x5148, { 0x53 });
        gbc.writeMem(0x923f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7b3f);
        EXPECT(gbc.pc(), 0x9240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923f), 0xbe);
        // BE 02AC
        gbc.setState(0x6ffe, 0x5bba, 0x6f70, 0xfe13, 0xa9f, 0x1cea, 0x0, 0x1);
        gbc.writeMem(0x1cea, { 0x75 });
        gbc.writeMem(0x6ffe, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5bba);
        EXPECT(gbc.pc(), 0x6fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 02AD
        gbc.setState(0x375a, 0x8b, 0x68d0, 0x3cdb, 0x6f3c, 0x2a45, 0x0, 0x1);
        gbc.writeMem(0x2a45, { 0x29 });
        gbc.writeMem(0x375a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8b);
        EXPECT(gbc.pc(), 0x375b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 02AE
        gbc.setState(0x952c, 0xe89d, 0x73f0, 0xc2c3, 0x9e9b, 0xf3fc, 0x0, 0x0);
        gbc.writeMem(0x952c, { 0xbe });
        gbc.writeMem(0xf3fc, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe89d);
        EXPECT(gbc.pc(), 0x952d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x952c), 0xbe);
        EXPECT(gbc.readMem(0xf3fc), 0x3c);
        // BE 02AF
        gbc.setState(0x10de, 0x19f5, 0xd1b0, 0xbe75, 0xaadb, 0x9ced, 0x0, 0x0);
        gbc.writeMem(0x10de, { 0xbe });
        gbc.writeMem(0x9ced, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x19f5);
        EXPECT(gbc.pc(), 0x10df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ced), 0x3b);
        // BE 02B0
        gbc.setState(0x9604, 0x70a7, 0x9510, 0x7b2b, 0xf754, 0x4228, 0x1, 0x0);
        gbc.writeMem(0x4228, { 0x2e });
        gbc.writeMem(0x9604, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x70a7);
        EXPECT(gbc.pc(), 0x9605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9604), 0xbe);
        // BE 02B1
        gbc.setState(0xe914, 0xcd06, 0x2a80, 0xa1e4, 0xf3a4, 0xd5ee, 0x1, 0x0);
        gbc.writeMem(0xd5ee, { 0x69 });
        gbc.writeMem(0xe914, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcd06);
        EXPECT(gbc.pc(), 0xe915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ee), 0x69);
        EXPECT(gbc.readMem(0xe914), 0xbe);
        // BE 02B2
        gbc.setState(0x8abd, 0xc4a3, 0x5e00, 0x94b1, 0x1f03, 0x5c1f, 0x1, 0x0);
        gbc.writeMem(0x5c1f, { 0x32 });
        gbc.writeMem(0x8abd, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc4a3);
        EXPECT(gbc.pc(), 0x8abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8abd), 0xbe);
        // BE 02B3
        gbc.setState(0x5f50, 0xea04, 0x3fe0, 0xbc8b, 0x5b3b, 0xdd26, 0x0, 0x0);
        gbc.writeMem(0x5f50, { 0xbe });
        gbc.writeMem(0xdd26, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xea04);
        EXPECT(gbc.pc(), 0x5f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd26), 0x62);
        // BE 02B4
        gbc.setState(0x1c35, 0xb38a, 0x7c40, 0x9c62, 0x15f5, 0xab91, 0x1, 0x0);
        gbc.writeMem(0x1c35, { 0xbe });
        gbc.writeMem(0xab91, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb38a);
        EXPECT(gbc.pc(), 0x1c36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab91), 0x14);
        // BE 02B5
        gbc.setState(0xb384, 0x7928, 0x24a0, 0x416a, 0xd36b, 0xf217, 0x0, 0x1);
        gbc.writeMem(0xb384, { 0xbe });
        gbc.writeMem(0xf217, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7928);
        EXPECT(gbc.pc(), 0xb385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb384), 0xbe);
        EXPECT(gbc.readMem(0xf217), 0xc9);
        // BE 02B6
        gbc.setState(0xe100, 0x2406, 0x6d0, 0x5dab, 0x298b, 0x7dfd, 0x0, 0x1);
        gbc.writeMem(0x7dfd, { 0x91 });
        gbc.writeMem(0xe100, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2406);
        EXPECT(gbc.pc(), 0xe101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe100), 0xbe);
        // BE 02B7
        gbc.setState(0x37bc, 0x25c0, 0xca70, 0xd54d, 0x876f, 0xb0e8, 0x0, 0x0);
        gbc.writeMem(0x37bc, { 0xbe });
        gbc.writeMem(0xb0e8, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x25c0);
        EXPECT(gbc.pc(), 0x37bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0e8), 0x92);
        // BE 02B8
        gbc.setState(0x8b8, 0x9d01, 0x6e90, 0xbef0, 0xff51, 0x1247, 0x0, 0x0);
        gbc.writeMem(0x8b8, { 0xbe });
        gbc.writeMem(0x1247, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9d01);
        EXPECT(gbc.pc(), 0x8b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 02B9
        gbc.setState(0x4e7d, 0xe35, 0xfa20, 0x67cc, 0xd4f4, 0x87cd, 0x0, 0x1);
        gbc.writeMem(0x4e7d, { 0xbe });
        gbc.writeMem(0x87cd, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe35);
        EXPECT(gbc.pc(), 0x4e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87cd), 0x49);
        // BE 02BA
        gbc.setState(0x4006, 0xf849, 0x7930, 0xd64b, 0xa98e, 0x7392, 0x0, 0x0);
        gbc.writeMem(0x4006, { 0xbe });
        gbc.writeMem(0x7392, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf849);
        EXPECT(gbc.pc(), 0x4007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 02BB
        gbc.setState(0xe6a3, 0xd887, 0x97c0, 0x61b1, 0x1fa, 0xf7ac, 0x1, 0x0);
        gbc.writeMem(0xe6a3, { 0xbe });
        gbc.writeMem(0xf7ac, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd887);
        EXPECT(gbc.pc(), 0xe6a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6a3), 0xbe);
        EXPECT(gbc.readMem(0xf7ac), 0x73);
        // BE 02BC
        gbc.setState(0xc36a, 0x3c05, 0xe460, 0x147, 0xafb3, 0x81d1, 0x1, 0x0);
        gbc.writeMem(0x81d1, { 0x43 });
        gbc.writeMem(0xc36a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3c05);
        EXPECT(gbc.pc(), 0xc36b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81d1), 0x43);
        EXPECT(gbc.readMem(0xc36a), 0xbe);
        // BE 02BD
        gbc.setState(0x467c, 0x5ffb, 0x1610, 0x3706, 0x11d5, 0x56f3, 0x0, 0x1);
        gbc.writeMem(0x467c, { 0xbe });
        gbc.writeMem(0x56f3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5ffb);
        EXPECT(gbc.pc(), 0x467d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 02BE
        gbc.setState(0xb6da, 0xa7fa, 0xf350, 0xdadc, 0x95dc, 0xb40f, 0x1, 0x0);
        gbc.writeMem(0xb40f, { 0x54 });
        gbc.writeMem(0xb6da, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa7fa);
        EXPECT(gbc.pc(), 0xb6db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb40f), 0x54);
        EXPECT(gbc.readMem(0xb6da), 0xbe);
        // BE 02BF
        gbc.setState(0xb34, 0x5fb2, 0x9140, 0xd146, 0x3158, 0xdc2d, 0x0, 0x1);
        gbc.writeMem(0xb34, { 0xbe });
        gbc.writeMem(0xdc2d, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5fb2);
        EXPECT(gbc.pc(), 0xb35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc2d), 0xf8);
        // BE 02C0
        gbc.setState(0x6dd, 0x1ceb, 0xb360, 0xd97a, 0x20d4, 0xfc12, 0x0, 0x0);
        gbc.writeMem(0x6dd, { 0xbe });
        gbc.writeMem(0xfc12, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1ceb);
        EXPECT(gbc.pc(), 0x6de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc12), 0xd8);
        // BE 02C1
        gbc.setState(0x1c42, 0xb993, 0x4140, 0xf589, 0xe6bd, 0xdd3d, 0x0, 0x0);
        gbc.writeMem(0x1c42, { 0xbe });
        gbc.writeMem(0xdd3d, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb993);
        EXPECT(gbc.pc(), 0x1c43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3d), 0x7a);
        // BE 02C2
        gbc.setState(0x7cc1, 0xd8b2, 0x7fc0, 0x3d15, 0x9b28, 0x580f, 0x0, 0x0);
        gbc.writeMem(0x580f, { 0x49 });
        gbc.writeMem(0x7cc1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd8b2);
        EXPECT(gbc.pc(), 0x7cc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 02C3
        gbc.setState(0x6be6, 0xc9c0, 0xb990, 0xabbb, 0x3491, 0xc258, 0x1, 0x1);
        gbc.writeMem(0x6be6, { 0xbe });
        gbc.writeMem(0xc258, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc9c0);
        EXPECT(gbc.pc(), 0x6be7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc258), 0x97);
        // BE 02C4
        gbc.setState(0xc93f, 0x453e, 0x3310, 0x4486, 0xe055, 0x4b35, 0x0, 0x1);
        gbc.writeMem(0x4b35, { 0xa2 });
        gbc.writeMem(0xc93f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x453e);
        EXPECT(gbc.pc(), 0xc940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc93f), 0xbe);
        // BE 02C5
        gbc.setState(0x1f3, 0xb18a, 0xcf30, 0xddfe, 0x9f94, 0xc0ab, 0x1, 0x1);
        gbc.writeMem(0x1f3, { 0xbe });
        gbc.writeMem(0xc0ab, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb18a);
        EXPECT(gbc.pc(), 0x1f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ab), 0x2e);
        // BE 02C6
        gbc.setState(0xd907, 0xa595, 0x3f30, 0x359a, 0x1b84, 0xac7, 0x0, 0x0);
        gbc.writeMem(0xac7, { 0x6c });
        gbc.writeMem(0xd907, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa595);
        EXPECT(gbc.pc(), 0xd908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd907), 0xbe);
        // BE 02C7
        gbc.setState(0xd749, 0x1058, 0xee30, 0xdd0b, 0xcc7d, 0x654e, 0x0, 0x0);
        gbc.writeMem(0x654e, { 0x5d });
        gbc.writeMem(0xd749, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1058);
        EXPECT(gbc.pc(), 0xd74a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd749), 0xbe);
        // BE 02C8
        gbc.setState(0x3e94, 0xf371, 0xd350, 0xccd6, 0xf43, 0xb333, 0x1, 0x0);
        gbc.writeMem(0x3e94, { 0xbe });
        gbc.writeMem(0xb333, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf371);
        EXPECT(gbc.pc(), 0x3e95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb333), 0x72);
        // BE 02C9
        gbc.setState(0xeca1, 0x1717, 0xeae0, 0x603a, 0x78ab, 0x28e2, 0x0, 0x0);
        gbc.writeMem(0x28e2, { 0xcb });
        gbc.writeMem(0xeca1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1717);
        EXPECT(gbc.pc(), 0xeca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca1), 0xbe);
        // BE 02CA
        gbc.setState(0x651f, 0x6863, 0x16f0, 0xd7ed, 0x4d48, 0xa733, 0x0, 0x0);
        gbc.writeMem(0x651f, { 0xbe });
        gbc.writeMem(0xa733, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6863);
        EXPECT(gbc.pc(), 0x6520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa733), 0x2d);
        // BE 02CB
        gbc.setState(0x1e5a, 0x8e4b, 0xf0f0, 0xce25, 0x32b6, 0xc640, 0x0, 0x1);
        gbc.writeMem(0x1e5a, { 0xbe });
        gbc.writeMem(0xc640, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8e4b);
        EXPECT(gbc.pc(), 0x1e5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc640), 0x3d);
        // BE 02CD
        gbc.setState(0xb5a4, 0xa112, 0xee60, 0x8d91, 0x8cd9, 0x945, 0x1, 0x0);
        gbc.writeMem(0x945, { 0xc4 });
        gbc.writeMem(0xb5a4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa112);
        EXPECT(gbc.pc(), 0xb5a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a4), 0xbe);
        // BE 02CE
        gbc.setState(0x576b, 0x1529, 0x4de0, 0xa43, 0xea4, 0xe835, 0x0, 0x0);
        gbc.writeMem(0x576b, { 0xbe });
        gbc.writeMem(0xe835, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1529);
        EXPECT(gbc.pc(), 0x576c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe835), 0xbf);
        // BE 02CF
        gbc.setState(0xe14e, 0x5c33, 0xb0, 0xd5a0, 0x1216, 0x35b6, 0x0, 0x0);
        gbc.writeMem(0x35b6, { 0x7c });
        gbc.writeMem(0xe14e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5c33);
        EXPECT(gbc.pc(), 0xe14f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14e), 0xbe);
        // BE 02D0
        gbc.setState(0x8a9d, 0x9918, 0xfed0, 0x2812, 0xe4b0, 0xa0a6, 0x1, 0x1);
        gbc.writeMem(0x8a9d, { 0xbe });
        gbc.writeMem(0xa0a6, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9918);
        EXPECT(gbc.pc(), 0x8a9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a9d), 0xbe);
        EXPECT(gbc.readMem(0xa0a6), 0x7d);
        // BE 02D1
        gbc.setState(0x3717, 0xb547, 0x190, 0xdced, 0x5de5, 0x763d, 0x1, 0x0);
        gbc.writeMem(0x3717, { 0xbe });
        gbc.writeMem(0x763d, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb547);
        EXPECT(gbc.pc(), 0x3718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 02D2
        gbc.setState(0x8b84, 0x36e4, 0xe320, 0x5640, 0x3be6, 0xa292, 0x0, 0x1);
        gbc.writeMem(0x8b84, { 0xbe });
        gbc.writeMem(0xa292, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x36e4);
        EXPECT(gbc.pc(), 0x8b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b84), 0xbe);
        EXPECT(gbc.readMem(0xa292), 0x3a);
        // BE 02D3
        gbc.setState(0x424a, 0x944, 0xd360, 0xbce3, 0x9089, 0xee4b, 0x1, 0x0);
        gbc.writeMem(0x424a, { 0xbe });
        gbc.writeMem(0xee4b, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x944);
        EXPECT(gbc.pc(), 0x424b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee4b), 0xde);
        // BE 02D4
        gbc.setState(0xbc87, 0x3b42, 0x72b0, 0xb580, 0x72f4, 0xb4ea, 0x1, 0x0);
        gbc.writeMem(0xb4ea, { 0x47 });
        gbc.writeMem(0xbc87, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3b42);
        EXPECT(gbc.pc(), 0xbc88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ea), 0x47);
        EXPECT(gbc.readMem(0xbc87), 0xbe);
        // BE 02D5
        gbc.setState(0x604f, 0x83ce, 0x43d0, 0xa9f0, 0x7a0b, 0x6dc, 0x0, 0x0);
        gbc.writeMem(0x6dc, { 0xb1 });
        gbc.writeMem(0x604f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x83ce);
        EXPECT(gbc.pc(), 0x6050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 02D6
        gbc.setState(0xa8bf, 0x1959, 0xfc80, 0xcd68, 0x2570, 0x3b96, 0x1, 0x0);
        gbc.writeMem(0x3b96, { 0x6b });
        gbc.writeMem(0xa8bf, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1959);
        EXPECT(gbc.pc(), 0xa8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8bf), 0xbe);
        // BE 02D7
        gbc.setState(0x1130, 0xb6a, 0x63e0, 0x5115, 0x2aa5, 0x3f2d, 0x1, 0x0);
        gbc.writeMem(0x1130, { 0xbe });
        gbc.writeMem(0x3f2d, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb6a);
        EXPECT(gbc.pc(), 0x1131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 02D8
        gbc.setState(0x286c, 0x917d, 0x9900, 0x43ca, 0x641f, 0x4061, 0x1, 0x1);
        gbc.writeMem(0x286c, { 0xbe });
        gbc.writeMem(0x4061, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x917d);
        EXPECT(gbc.pc(), 0x286d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 02D9
        gbc.setState(0x756a, 0xde9e, 0x72b0, 0x7fce, 0x63f9, 0x44cf, 0x1, 0x0);
        gbc.writeMem(0x44cf, { 0x2a });
        gbc.writeMem(0x756a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xde9e);
        EXPECT(gbc.pc(), 0x756b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 02DA
        gbc.setState(0xa557, 0xd4b4, 0xa140, 0xd9f8, 0xc026, 0x79a0, 0x1, 0x0);
        gbc.writeMem(0x79a0, { 0xf0 });
        gbc.writeMem(0xa557, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd4b4);
        EXPECT(gbc.pc(), 0xa558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa557), 0xbe);
        // BE 02DC
        gbc.setState(0x8d5, 0x88fb, 0xda50, 0x9f9e, 0xaa2b, 0xcb25, 0x0, 0x1);
        gbc.writeMem(0x8d5, { 0xbe });
        gbc.writeMem(0xcb25, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x88fb);
        EXPECT(gbc.pc(), 0x8d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb25), 0x4d);
        // BE 02DD
        gbc.setState(0xbe5e, 0x835b, 0x9a50, 0x6334, 0x9d76, 0xb65e, 0x1, 0x1);
        gbc.writeMem(0xb65e, { 0x8f });
        gbc.writeMem(0xbe5e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x835b);
        EXPECT(gbc.pc(), 0xbe5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb65e), 0x8f);
        EXPECT(gbc.readMem(0xbe5e), 0xbe);
        // BE 02DE
        gbc.setState(0x30ef, 0x9bcd, 0xe240, 0x575e, 0xeae2, 0x7254, 0x1, 0x0);
        gbc.writeMem(0x30ef, { 0xbe });
        gbc.writeMem(0x7254, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9bcd);
        EXPECT(gbc.pc(), 0x30f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 02DF
        gbc.setState(0xa4fb, 0x72d0, 0x5fa0, 0xfdc1, 0xb2bd, 0xfb8, 0x0, 0x0);
        gbc.writeMem(0xfb8, { 0x1a });
        gbc.writeMem(0xa4fb, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x72d0);
        EXPECT(gbc.pc(), 0xa4fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4fb), 0xbe);
        // BE 02E0
        gbc.setState(0xa17a, 0x4b51, 0x23b0, 0xebf9, 0x88ea, 0x9c02, 0x1, 0x0);
        gbc.writeMem(0x9c02, { 0x2b });
        gbc.writeMem(0xa17a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4b51);
        EXPECT(gbc.pc(), 0xa17b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c02), 0x2b);
        EXPECT(gbc.readMem(0xa17a), 0xbe);
        // BE 02E1
        gbc.setState(0xb1f1, 0xdb41, 0xc200, 0x82ab, 0x89a, 0xcc41, 0x1, 0x1);
        gbc.writeMem(0xb1f1, { 0xbe });
        gbc.writeMem(0xcc41, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdb41);
        EXPECT(gbc.pc(), 0xb1f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f1), 0xbe);
        EXPECT(gbc.readMem(0xcc41), 0x42);
        // BE 02E2
        gbc.setState(0xafdb, 0xf558, 0x24a0, 0xe4c2, 0x853b, 0xcefb, 0x0, 0x1);
        gbc.writeMem(0xafdb, { 0xbe });
        gbc.writeMem(0xcefb, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf558);
        EXPECT(gbc.pc(), 0xafdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafdb), 0xbe);
        EXPECT(gbc.readMem(0xcefb), 0x3a);
        // BE 02E3
        gbc.setState(0xe8eb, 0xfeb3, 0xa1b0, 0x7e09, 0xde35, 0x1f9, 0x1, 0x0);
        gbc.writeMem(0x1f9, { 0xb4 });
        gbc.writeMem(0xe8eb, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfeb3);
        EXPECT(gbc.pc(), 0xe8ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8eb), 0xbe);
        // BE 02E4
        gbc.setState(0xdc9c, 0x2aba, 0xe150, 0x4c5b, 0x1c98, 0x49b0, 0x0, 0x1);
        gbc.writeMem(0x49b0, { 0xf1 });
        gbc.writeMem(0xdc9c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2aba);
        EXPECT(gbc.pc(), 0xdc9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc9c), 0xbe);
        // BE 02E5
        gbc.setState(0x4dea, 0xf3f, 0x2740, 0xedd8, 0x3e7e, 0xccf9, 0x0, 0x0);
        gbc.writeMem(0x4dea, { 0xbe });
        gbc.writeMem(0xccf9, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf3f);
        EXPECT(gbc.pc(), 0x4deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf9), 0xbd);
        // BE 02E6
        gbc.setState(0x1855, 0xcb7c, 0x8d0, 0x924b, 0x5898, 0x9380, 0x0, 0x0);
        gbc.writeMem(0x1855, { 0xbe });
        gbc.writeMem(0x9380, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcb7c);
        EXPECT(gbc.pc(), 0x1856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9380), 0x34);
        // BE 02E7
        gbc.setState(0xce8f, 0xe5f3, 0x44a0, 0x284e, 0xcd88, 0x903e, 0x1, 0x0);
        gbc.writeMem(0x903e, { 0x25 });
        gbc.writeMem(0xce8f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe5f3);
        EXPECT(gbc.pc(), 0xce90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x903e), 0x25);
        EXPECT(gbc.readMem(0xce8f), 0xbe);
        // BE 02E8
        gbc.setState(0xdcdf, 0xdb7f, 0x33c0, 0x625d, 0x836d, 0xb533, 0x1, 0x1);
        gbc.writeMem(0xb533, { 0xe1 });
        gbc.writeMem(0xdcdf, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdb7f);
        EXPECT(gbc.pc(), 0xdce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb533), 0xe1);
        EXPECT(gbc.readMem(0xdcdf), 0xbe);
        // BE 02E9
        gbc.setState(0xa2be, 0x7ec5, 0xfda0, 0x1862, 0x440e, 0x8a00, 0x0, 0x1);
        gbc.writeMem(0x8a00, { 0x9f });
        gbc.writeMem(0xa2be, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7ec5);
        EXPECT(gbc.pc(), 0xa2bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a00), 0x9f);
        EXPECT(gbc.readMem(0xa2be), 0xbe);
        // BE 02EA
        gbc.setState(0x5242, 0x276e, 0x1280, 0xff55, 0x5aab, 0x57bc, 0x1, 0x1);
        gbc.writeMem(0x5242, { 0xbe });
        gbc.writeMem(0x57bc, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x276e);
        EXPECT(gbc.pc(), 0x5243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 02EB
        gbc.setState(0x19d, 0x529f, 0xf5c0, 0xf5c4, 0x60e7, 0x46b5, 0x0, 0x0);
        gbc.writeMem(0x19d, { 0xbe });
        gbc.writeMem(0x46b5, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x529f);
        EXPECT(gbc.pc(), 0x19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 02EC
        gbc.setState(0x4e05, 0x14a5, 0x77c0, 0x5aaa, 0x591, 0x24a5, 0x1, 0x1);
        gbc.writeMem(0x24a5, { 0xb6 });
        gbc.writeMem(0x4e05, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x14a5);
        EXPECT(gbc.pc(), 0x4e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 02ED
        gbc.setState(0xb4e7, 0x2769, 0x3ae0, 0xa379, 0xe95f, 0xbbd6, 0x1, 0x1);
        gbc.writeMem(0xb4e7, { 0xbe });
        gbc.writeMem(0xbbd6, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2769);
        EXPECT(gbc.pc(), 0xb4e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e7), 0xbe);
        EXPECT(gbc.readMem(0xbbd6), 0xaa);
        // BE 02EE
        gbc.setState(0x3829, 0x38a9, 0x2f60, 0x3445, 0x6911, 0x30e4, 0x0, 0x0);
        gbc.writeMem(0x30e4, { 0x19 });
        gbc.writeMem(0x3829, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x38a9);
        EXPECT(gbc.pc(), 0x382a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 02EF
        gbc.setState(0xf00, 0xce10, 0xdac0, 0x7ceb, 0x4885, 0x6d5d, 0x0, 0x1);
        gbc.writeMem(0xf00, { 0xbe });
        gbc.writeMem(0x6d5d, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xce10);
        EXPECT(gbc.pc(), 0xf01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 02F0
        gbc.setState(0xdd5b, 0x6987, 0x8780, 0x1a55, 0xb80f, 0x12c0, 0x1, 0x1);
        gbc.writeMem(0x12c0, { 0x21 });
        gbc.writeMem(0xdd5b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6987);
        EXPECT(gbc.pc(), 0xdd5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd5b), 0xbe);
        // BE 02F1
        gbc.setState(0x2306, 0xed83, 0xb0d0, 0x1580, 0x7c15, 0x83fd, 0x0, 0x0);
        gbc.writeMem(0x2306, { 0xbe });
        gbc.writeMem(0x83fd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xed83);
        EXPECT(gbc.pc(), 0x2307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83fd), 0x93);
        // BE 02F2
        gbc.setState(0x80d0, 0xb3b5, 0xcaf0, 0x1bf4, 0xd64, 0xc9b9, 0x0, 0x0);
        gbc.writeMem(0x80d0, { 0xbe });
        gbc.writeMem(0xc9b9, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb3b5);
        EXPECT(gbc.pc(), 0x80d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d0), 0xbe);
        EXPECT(gbc.readMem(0xc9b9), 0xa2);
        // BE 02F3
        gbc.setState(0xb37b, 0xa179, 0xfc10, 0x6ee3, 0x136, 0x718b, 0x1, 0x0);
        gbc.writeMem(0x718b, { 0xf1 });
        gbc.writeMem(0xb37b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa179);
        EXPECT(gbc.pc(), 0xb37c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb37b), 0xbe);
        // BE 02F4
        gbc.setState(0xce7b, 0xce7a, 0xb9e0, 0x1240, 0x700a, 0x9202, 0x1, 0x1);
        gbc.writeMem(0x9202, { 0xb9 });
        gbc.writeMem(0xce7b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xce7a);
        EXPECT(gbc.pc(), 0xce7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9202), 0xb9);
        EXPECT(gbc.readMem(0xce7b), 0xbe);
        // BE 02F5
        gbc.setState(0x4601, 0xdb36, 0x9160, 0x8c8c, 0x718c, 0xf534, 0x1, 0x0);
        gbc.writeMem(0x4601, { 0xbe });
        gbc.writeMem(0xf534, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdb36);
        EXPECT(gbc.pc(), 0x4602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf534), 0x25);
        // BE 02F6
        gbc.setState(0x7eef, 0x11f4, 0xbef0, 0x9045, 0xce40, 0xb1fe, 0x1, 0x1);
        gbc.writeMem(0x7eef, { 0xbe });
        gbc.writeMem(0xb1fe, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x11f4);
        EXPECT(gbc.pc(), 0x7ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1fe), 0xb6);
        // BE 02F7
        gbc.setState(0x1e16, 0x3ba7, 0x47b0, 0x660a, 0xfaf8, 0x7c0a, 0x0, 0x1);
        gbc.writeMem(0x1e16, { 0xbe });
        gbc.writeMem(0x7c0a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3ba7);
        EXPECT(gbc.pc(), 0x1e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 02F8
        gbc.setState(0x1250, 0x185d, 0xbc20, 0xca22, 0xe849, 0xbaf2, 0x0, 0x1);
        gbc.writeMem(0x1250, { 0xbe });
        gbc.writeMem(0xbaf2, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x185d);
        EXPECT(gbc.pc(), 0x1251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf2), 0x3e);
        // BE 02F9
        gbc.setState(0xb043, 0x1819, 0x6a0, 0x5b2b, 0x248, 0x4140, 0x1, 0x0);
        gbc.writeMem(0x4140, { 0xc3 });
        gbc.writeMem(0xb043, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1819);
        EXPECT(gbc.pc(), 0xb044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb043), 0xbe);
        // BE 02FB
        gbc.setState(0x5efc, 0x917c, 0x8870, 0x3862, 0xbe32, 0x758e, 0x1, 0x0);
        gbc.writeMem(0x5efc, { 0xbe });
        gbc.writeMem(0x758e, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x917c);
        EXPECT(gbc.pc(), 0x5efd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 02FC
        gbc.setState(0x2ac3, 0x57d1, 0x84a0, 0x4707, 0x5a06, 0x1419, 0x1, 0x1);
        gbc.writeMem(0x1419, { 0xcb });
        gbc.writeMem(0x2ac3, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x57d1);
        EXPECT(gbc.pc(), 0x2ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 02FD
        gbc.setState(0xeda4, 0x9ded, 0xc790, 0xc8d7, 0x8cf8, 0x8609, 0x0, 0x0);
        gbc.writeMem(0x8609, { 0x51 });
        gbc.writeMem(0xeda4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9ded);
        EXPECT(gbc.pc(), 0xeda5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8609), 0x51);
        EXPECT(gbc.readMem(0xeda4), 0xbe);
        // BE 02FE
        gbc.setState(0x4af7, 0xb1ad, 0x9870, 0xca12, 0xcb8, 0xf8ba, 0x0, 0x0);
        gbc.writeMem(0x4af7, { 0xbe });
        gbc.writeMem(0xf8ba, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb1ad);
        EXPECT(gbc.pc(), 0x4af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8ba), 0x28);
        // BE 02FF
        gbc.setState(0x3f2, 0xeeeb, 0x5e30, 0x7be5, 0xc2e, 0x1b33, 0x1, 0x1);
        gbc.writeMem(0x3f2, { 0xbe });
        gbc.writeMem(0x1b33, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xeeeb);
        EXPECT(gbc.pc(), 0x3f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0300
        gbc.setState(0x926f, 0x18fb, 0x50c0, 0x1bf7, 0xd217, 0x27c9, 0x1, 0x0);
        gbc.writeMem(0x27c9, { 0xd0 });
        gbc.writeMem(0x926f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x18fb);
        EXPECT(gbc.pc(), 0x9270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x926f), 0xbe);
        // BE 0301
        gbc.setState(0x6fb6, 0x726f, 0xecd0, 0x98e6, 0x5ca1, 0xa8e, 0x0, 0x0);
        gbc.writeMem(0xa8e, { 0x79 });
        gbc.writeMem(0x6fb6, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x726f);
        EXPECT(gbc.pc(), 0x6fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0302
        gbc.setState(0x4137, 0xc39, 0x9210, 0xa2b5, 0x74dd, 0x333, 0x0, 0x1);
        gbc.writeMem(0x333, { 0x2a });
        gbc.writeMem(0x4137, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc39);
        EXPECT(gbc.pc(), 0x4138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0303
        gbc.setState(0xb327, 0xadb8, 0xe440, 0xa4ec, 0xace8, 0xf368, 0x1, 0x0);
        gbc.writeMem(0xb327, { 0xbe });
        gbc.writeMem(0xf368, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xadb8);
        EXPECT(gbc.pc(), 0xb328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb327), 0xbe);
        EXPECT(gbc.readMem(0xf368), 0xa4);
        // BE 0304
        gbc.setState(0x884b, 0x71a9, 0x9840, 0x5fa0, 0xfe0e, 0x6ca3, 0x1, 0x0);
        gbc.writeMem(0x6ca3, { 0xf7 });
        gbc.writeMem(0x884b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x71a9);
        EXPECT(gbc.pc(), 0x884c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884b), 0xbe);
        // BE 0305
        gbc.setState(0xbf99, 0x5f4b, 0xfd90, 0x14fe, 0x47e7, 0x37ea, 0x0, 0x0);
        gbc.writeMem(0x37ea, { 0xc9 });
        gbc.writeMem(0xbf99, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5f4b);
        EXPECT(gbc.pc(), 0xbf9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf99), 0xbe);
        // BE 0307
        gbc.setState(0xbfcd, 0xbdeb, 0x7a70, 0x594, 0x3bf6, 0x974a, 0x1, 0x1);
        gbc.writeMem(0x974a, { 0xba });
        gbc.writeMem(0xbfcd, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbdeb);
        EXPECT(gbc.pc(), 0xbfce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x974a), 0xba);
        EXPECT(gbc.readMem(0xbfcd), 0xbe);
        // BE 0308
        gbc.setState(0x8fac, 0x562e, 0xcf0, 0x993, 0x6557, 0xfb9c, 0x1, 0x0);
        gbc.writeMem(0x8fac, { 0xbe });
        gbc.writeMem(0xfb9c, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x562e);
        EXPECT(gbc.pc(), 0x8fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fac), 0xbe);
        EXPECT(gbc.readMem(0xfb9c), 0x26);
        // BE 0309
        gbc.setState(0x1e54, 0x6e33, 0xc890, 0x5755, 0x4d59, 0xddad, 0x0, 0x1);
        gbc.writeMem(0x1e54, { 0xbe });
        gbc.writeMem(0xddad, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6e33);
        EXPECT(gbc.pc(), 0x1e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddad), 0x5c);
        // BE 030A
        gbc.setState(0xe384, 0xaa7c, 0xbdb0, 0x1b4e, 0xf8eb, 0xbacd, 0x0, 0x1);
        gbc.writeMem(0xbacd, { 0x96 });
        gbc.writeMem(0xe384, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xaa7c);
        EXPECT(gbc.pc(), 0xe385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbacd), 0x96);
        EXPECT(gbc.readMem(0xe384), 0xbe);
        // BE 030B
        gbc.setState(0x54bc, 0x5360, 0x3750, 0xff01, 0x24a9, 0xcae6, 0x1, 0x1);
        gbc.writeMem(0x54bc, { 0xbe });
        gbc.writeMem(0xcae6, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5360);
        EXPECT(gbc.pc(), 0x54bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcae6), 0xd3);
        // BE 030C
        gbc.setState(0xa7e, 0xfe9d, 0xc5f0, 0x75aa, 0xb8fd, 0x26be, 0x0, 0x0);
        gbc.writeMem(0xa7e, { 0xbe });
        gbc.writeMem(0x26be, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfe9d);
        EXPECT(gbc.pc(), 0xa7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 030E
        gbc.setState(0xbd76, 0xd4e3, 0x8820, 0x113e, 0xbe25, 0xf7ad, 0x1, 0x0);
        gbc.writeMem(0xbd76, { 0xbe });
        gbc.writeMem(0xf7ad, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd4e3);
        EXPECT(gbc.pc(), 0xbd77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd76), 0xbe);
        EXPECT(gbc.readMem(0xf7ad), 0x8c);
        // BE 030F
        gbc.setState(0x94b1, 0xc67b, 0x3b40, 0xa22d, 0xc868, 0x2eba, 0x1, 0x1);
        gbc.writeMem(0x2eba, { 0x24 });
        gbc.writeMem(0x94b1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc67b);
        EXPECT(gbc.pc(), 0x94b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b1), 0xbe);
        // BE 0310
        gbc.setState(0x8655, 0xd3a9, 0xd400, 0x666f, 0xa6bb, 0x8cc, 0x0, 0x1);
        gbc.writeMem(0x8cc, { 0x72 });
        gbc.writeMem(0x8655, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd3a9);
        EXPECT(gbc.pc(), 0x8656);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8655), 0xbe);
        // BE 0311
        gbc.setState(0xd632, 0x2fb8, 0xcb10, 0x750a, 0x852a, 0xd8b9, 0x1, 0x1);
        gbc.writeMem(0xd632, { 0xbe });
        gbc.writeMem(0xd8b9, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2fb8);
        EXPECT(gbc.pc(), 0xd633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd632), 0xbe);
        EXPECT(gbc.readMem(0xd8b9), 0x9b);
        // BE 0312
        gbc.setState(0x5ec4, 0xffe7, 0x9e60, 0xa302, 0x5ee8, 0xbcb9, 0x0, 0x1);
        gbc.writeMem(0x5ec4, { 0xbe });
        gbc.writeMem(0xbcb9, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xffe7);
        EXPECT(gbc.pc(), 0x5ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb9), 0x14);
        // BE 0313
        gbc.setState(0x5f3, 0x6fb, 0x6090, 0x4d3c, 0xe17b, 0xfa2d, 0x1, 0x1);
        gbc.writeMem(0x5f3, { 0xbe });
        gbc.writeMem(0xfa2d, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6fb);
        EXPECT(gbc.pc(), 0x5f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa2d), 0x7a);
        // BE 0315
        gbc.setState(0x29a9, 0xd1ff, 0x55f0, 0xf867, 0xfe4, 0xc1d7, 0x1, 0x1);
        gbc.writeMem(0x29a9, { 0xbe });
        gbc.writeMem(0xc1d7, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd1ff);
        EXPECT(gbc.pc(), 0x29aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d7), 0xbf);
        // BE 0316
        gbc.setState(0xe3e7, 0x19b0, 0x79a0, 0x6310, 0xe9c7, 0x1d46, 0x1, 0x0);
        gbc.writeMem(0x1d46, { 0x74 });
        gbc.writeMem(0xe3e7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x19b0);
        EXPECT(gbc.pc(), 0xe3e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e7), 0xbe);
        // BE 0317
        gbc.setState(0x1a2c, 0x4dab, 0x7320, 0x64f3, 0x7c26, 0x25d4, 0x0, 0x1);
        gbc.writeMem(0x1a2c, { 0xbe });
        gbc.writeMem(0x25d4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4dab);
        EXPECT(gbc.pc(), 0x1a2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0318
        gbc.setState(0xae11, 0xeea2, 0xd990, 0xfe6e, 0xbfa1, 0x81b1, 0x1, 0x0);
        gbc.writeMem(0x81b1, { 0xa8 });
        gbc.writeMem(0xae11, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xeea2);
        EXPECT(gbc.pc(), 0xae12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b1), 0xa8);
        EXPECT(gbc.readMem(0xae11), 0xbe);
        // BE 0319
        gbc.setState(0x615, 0x2a8, 0x76e0, 0x87f3, 0x47d9, 0x4c25, 0x1, 0x1);
        gbc.writeMem(0x615, { 0xbe });
        gbc.writeMem(0x4c25, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2a8);
        EXPECT(gbc.pc(), 0x616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 031A
        gbc.setState(0x5e7f, 0x77ee, 0x8940, 0x8405, 0x7c36, 0xe65, 0x1, 0x1);
        gbc.writeMem(0xe65, { 0x1e });
        gbc.writeMem(0x5e7f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x77ee);
        EXPECT(gbc.pc(), 0x5e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 031B
        gbc.setState(0xe3cd, 0xb53c, 0x56d0, 0x6d18, 0x5016, 0x4bfd, 0x1, 0x1);
        gbc.writeMem(0x4bfd, { 0x10 });
        gbc.writeMem(0xe3cd, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb53c);
        EXPECT(gbc.pc(), 0xe3ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3cd), 0xbe);
        // BE 031C
        gbc.setState(0x420b, 0x952d, 0x8080, 0x309d, 0xece9, 0xd92f, 0x0, 0x1);
        gbc.writeMem(0x420b, { 0xbe });
        gbc.writeMem(0xd92f, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x952d);
        EXPECT(gbc.pc(), 0x420c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd92f), 0xb3);
        // BE 031D
        gbc.setState(0x8592, 0xa438, 0xf850, 0x1ff3, 0xa8b6, 0xa2b6, 0x0, 0x0);
        gbc.writeMem(0x8592, { 0xbe });
        gbc.writeMem(0xa2b6, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa438);
        EXPECT(gbc.pc(), 0x8593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8592), 0xbe);
        EXPECT(gbc.readMem(0xa2b6), 0x7f);
        // BE 031E
        gbc.setState(0x466f, 0xe8c2, 0xe2b0, 0x3c4f, 0x8634, 0xd259, 0x0, 0x1);
        gbc.writeMem(0x466f, { 0xbe });
        gbc.writeMem(0xd259, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe8c2);
        EXPECT(gbc.pc(), 0x4670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd259), 0xb2);
        // BE 031F
        gbc.setState(0x658f, 0x423f, 0x3d50, 0x9154, 0x171e, 0xc7f8, 0x0, 0x1);
        gbc.writeMem(0x658f, { 0xbe });
        gbc.writeMem(0xc7f8, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x423f);
        EXPECT(gbc.pc(), 0x6590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f8), 0x13);
        // BE 0320
        gbc.setState(0xe970, 0x1544, 0xc4c0, 0x90f4, 0x8cdf, 0x5920, 0x1, 0x1);
        gbc.writeMem(0x5920, { 0x41 });
        gbc.writeMem(0xe970, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1544);
        EXPECT(gbc.pc(), 0xe971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe970), 0xbe);
        // BE 0321
        gbc.setState(0x21a7, 0xf36d, 0x5220, 0x2f95, 0xd89, 0x954f, 0x0, 0x0);
        gbc.writeMem(0x21a7, { 0xbe });
        gbc.writeMem(0x954f, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf36d);
        EXPECT(gbc.pc(), 0x21a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x954f), 0xee);
        // BE 0322
        gbc.setState(0x4ca5, 0x128a, 0x2740, 0x6411, 0x5b99, 0x5581, 0x1, 0x1);
        gbc.writeMem(0x4ca5, { 0xbe });
        gbc.writeMem(0x5581, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x128a);
        EXPECT(gbc.pc(), 0x4ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0323
        gbc.setState(0xa54c, 0x32b, 0xa690, 0x2148, 0xb996, 0x9d64, 0x1, 0x1);
        gbc.writeMem(0x9d64, { 0xb4 });
        gbc.writeMem(0xa54c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x32b);
        EXPECT(gbc.pc(), 0xa54d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d64), 0xb4);
        EXPECT(gbc.readMem(0xa54c), 0xbe);
        // BE 0324
        gbc.setState(0xd2d5, 0xe1c1, 0x8320, 0xbad1, 0x498f, 0x5139, 0x0, 0x0);
        gbc.writeMem(0x5139, { 0x44 });
        gbc.writeMem(0xd2d5, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe1c1);
        EXPECT(gbc.pc(), 0xd2d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d5), 0xbe);
        // BE 0325
        gbc.setState(0x2b95, 0x80ce, 0x9a50, 0x2828, 0x7963, 0xc4d1, 0x1, 0x1);
        gbc.writeMem(0x2b95, { 0xbe });
        gbc.writeMem(0xc4d1, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x80ce);
        EXPECT(gbc.pc(), 0x2b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d1), 0x33);
        // BE 0326
        gbc.setState(0x1ef6, 0xcfb7, 0x4140, 0xe0e3, 0x6639, 0xb089, 0x0, 0x0);
        gbc.writeMem(0x1ef6, { 0xbe });
        gbc.writeMem(0xb089, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xcfb7);
        EXPECT(gbc.pc(), 0x1ef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb089), 0x17);
        // BE 0327
        gbc.setState(0x80bf, 0x8077, 0x7bb0, 0x2853, 0x608f, 0x82a0, 0x0, 0x0);
        gbc.writeMem(0x80bf, { 0xbe });
        gbc.writeMem(0x82a0, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8077);
        EXPECT(gbc.pc(), 0x80c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80bf), 0xbe);
        EXPECT(gbc.readMem(0x82a0), 0xd3);
        // BE 0328
        gbc.setState(0x3b7b, 0x9098, 0x2b00, 0xca6e, 0xfea, 0x41d6, 0x0, 0x0);
        gbc.writeMem(0x3b7b, { 0xbe });
        gbc.writeMem(0x41d6, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9098);
        EXPECT(gbc.pc(), 0x3b7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 032A
        gbc.setState(0xc57d, 0x89e7, 0x10f0, 0xcfaa, 0x409d, 0x2672, 0x1, 0x1);
        gbc.writeMem(0x2672, { 0x8 });
        gbc.writeMem(0xc57d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x89e7);
        EXPECT(gbc.pc(), 0xc57e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc57d), 0xbe);
        // BE 032B
        gbc.setState(0x4ba9, 0xe8cf, 0xffb0, 0x5550, 0xcaf4, 0xc5f3, 0x1, 0x0);
        gbc.writeMem(0x4ba9, { 0xbe });
        gbc.writeMem(0xc5f3, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe8cf);
        EXPECT(gbc.pc(), 0x4baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f3), 0x44);
        // BE 032C
        gbc.setState(0x98e6, 0x5de4, 0xff60, 0x4996, 0x7f2a, 0x3271, 0x1, 0x1);
        gbc.writeMem(0x3271, { 0xcb });
        gbc.writeMem(0x98e6, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5de4);
        EXPECT(gbc.pc(), 0x98e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e6), 0xbe);
        // BE 032D
        gbc.setState(0xde11, 0xc10d, 0x9db0, 0x48c4, 0x8f09, 0xd132, 0x0, 0x1);
        gbc.writeMem(0xd132, { 0xf4 });
        gbc.writeMem(0xde11, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc10d);
        EXPECT(gbc.pc(), 0xde12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd132), 0xf4);
        EXPECT(gbc.readMem(0xde11), 0xbe);
        // BE 032E
        gbc.setState(0xbec3, 0xe065, 0xdb00, 0x8cf5, 0x3c3, 0xe158, 0x0, 0x1);
        gbc.writeMem(0xbec3, { 0xbe });
        gbc.writeMem(0xe158, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe065);
        EXPECT(gbc.pc(), 0xbec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec3), 0xbe);
        EXPECT(gbc.readMem(0xe158), 0x4c);
        // BE 032F
        gbc.setState(0x5e7c, 0xc6aa, 0xc210, 0xd0, 0x6cfd, 0x49e6, 0x0, 0x0);
        gbc.writeMem(0x49e6, { 0xd3 });
        gbc.writeMem(0x5e7c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc6aa);
        EXPECT(gbc.pc(), 0x5e7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0331
        gbc.setState(0xc51, 0x5397, 0xb470, 0xb189, 0xb083, 0x7998, 0x0, 0x0);
        gbc.writeMem(0xc51, { 0xbe });
        gbc.writeMem(0x7998, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5397);
        EXPECT(gbc.pc(), 0xc52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0332
        gbc.setState(0x7322, 0xdabf, 0xb0d0, 0xd97e, 0xb7d9, 0xa4ad, 0x0, 0x1);
        gbc.writeMem(0x7322, { 0xbe });
        gbc.writeMem(0xa4ad, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xdabf);
        EXPECT(gbc.pc(), 0x7323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ad), 0xa2);
        // BE 0333
        gbc.setState(0xb00d, 0xa8c, 0x6e0, 0x8118, 0x696c, 0xddec, 0x1, 0x0);
        gbc.writeMem(0xb00d, { 0xbe });
        gbc.writeMem(0xddec, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa8c);
        EXPECT(gbc.pc(), 0xb00e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb00d), 0xbe);
        EXPECT(gbc.readMem(0xddec), 0xa4);
        // BE 0334
        gbc.setState(0x6c7d, 0xa24, 0x5ae0, 0x87cf, 0xe121, 0x61f3, 0x0, 0x0);
        gbc.writeMem(0x61f3, { 0xe9 });
        gbc.writeMem(0x6c7d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa24);
        EXPECT(gbc.pc(), 0x6c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0335
        gbc.setState(0x8ca8, 0x1e20, 0xb640, 0x3b61, 0x75e8, 0xf021, 0x1, 0x1);
        gbc.writeMem(0x8ca8, { 0xbe });
        gbc.writeMem(0xf021, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1e20);
        EXPECT(gbc.pc(), 0x8ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca8), 0xbe);
        EXPECT(gbc.readMem(0xf021), 0xa);
        // BE 0336
        gbc.setState(0x32e4, 0xcf87, 0xb520, 0xfeb7, 0x33f0, 0x7c1b, 0x1, 0x1);
        gbc.writeMem(0x32e4, { 0xbe });
        gbc.writeMem(0x7c1b, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xcf87);
        EXPECT(gbc.pc(), 0x32e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0337
        gbc.setState(0xef25, 0x40bb, 0xa470, 0x7251, 0x2f0c, 0x65c5, 0x0, 0x1);
        gbc.writeMem(0x65c5, { 0x4e });
        gbc.writeMem(0xef25, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x40bb);
        EXPECT(gbc.pc(), 0xef26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef25), 0xbe);
        // BE 0338
        gbc.setState(0xd2a4, 0x694e, 0xae90, 0xeb62, 0x8d35, 0x1b62, 0x0, 0x1);
        gbc.writeMem(0x1b62, { 0xcc });
        gbc.writeMem(0xd2a4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x694e);
        EXPECT(gbc.pc(), 0xd2a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2a4), 0xbe);
        // BE 0339
        gbc.setState(0x7eb0, 0x2c60, 0x80, 0x31c4, 0x9223, 0xd7d7, 0x0, 0x0);
        gbc.writeMem(0x7eb0, { 0xbe });
        gbc.writeMem(0xd7d7, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2c60);
        EXPECT(gbc.pc(), 0x7eb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d7), 0xc0);
        // BE 033A
        gbc.setState(0xe138, 0x33dc, 0x2b40, 0x73e6, 0xa76b, 0xd5f0, 0x0, 0x0);
        gbc.writeMem(0xd5f0, { 0x4d });
        gbc.writeMem(0xe138, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x33dc);
        EXPECT(gbc.pc(), 0xe139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f0), 0x4d);
        EXPECT(gbc.readMem(0xe138), 0xbe);
        // BE 033B
        gbc.setState(0xbc17, 0x4047, 0x3fe0, 0xd5dd, 0xdcb4, 0x8af3, 0x0, 0x0);
        gbc.writeMem(0x8af3, { 0x75 });
        gbc.writeMem(0xbc17, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4047);
        EXPECT(gbc.pc(), 0xbc18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af3), 0x75);
        EXPECT(gbc.readMem(0xbc17), 0xbe);
        // BE 033D
        gbc.setState(0x6a37, 0xde9a, 0x2b40, 0x32ff, 0xd28d, 0x6a8b, 0x1, 0x1);
        gbc.writeMem(0x6a37, { 0xbe });
        gbc.writeMem(0x6a8b, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xde9a);
        EXPECT(gbc.pc(), 0x6a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 033E
        gbc.setState(0x6b36, 0x2fa9, 0xf460, 0x689, 0x2081, 0x1fcc, 0x0, 0x0);
        gbc.writeMem(0x1fcc, { 0x6e });
        gbc.writeMem(0x6b36, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2fa9);
        EXPECT(gbc.pc(), 0x6b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 033F
        gbc.setState(0xf6d, 0x908b, 0xad00, 0x1ad0, 0xc8ec, 0x458d, 0x0, 0x1);
        gbc.writeMem(0xf6d, { 0xbe });
        gbc.writeMem(0x458d, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x908b);
        EXPECT(gbc.pc(), 0xf6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0340
        gbc.setState(0xc2bf, 0xbe35, 0xbae0, 0xbd28, 0xe2e3, 0x2c1e, 0x1, 0x0);
        gbc.writeMem(0x2c1e, { 0x60 });
        gbc.writeMem(0xc2bf, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbe35);
        EXPECT(gbc.pc(), 0xc2c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2bf), 0xbe);
        // BE 0341
        gbc.setState(0xaf42, 0x93f4, 0xe490, 0xbaeb, 0xe258, 0x8b96, 0x0, 0x0);
        gbc.writeMem(0x8b96, { 0x39 });
        gbc.writeMem(0xaf42, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x93f4);
        EXPECT(gbc.pc(), 0xaf43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b96), 0x39);
        EXPECT(gbc.readMem(0xaf42), 0xbe);
        // BE 0342
        gbc.setState(0x3507, 0xf453, 0x2cf0, 0x8993, 0xf1f2, 0xcc60, 0x1, 0x0);
        gbc.writeMem(0x3507, { 0xbe });
        gbc.writeMem(0xcc60, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf453);
        EXPECT(gbc.pc(), 0x3508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc60), 0xf9);
        // BE 0343
        gbc.setState(0x194f, 0x8999, 0xb600, 0x46d2, 0x4346, 0xb5c5, 0x1, 0x1);
        gbc.writeMem(0x194f, { 0xbe });
        gbc.writeMem(0xb5c5, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8999);
        EXPECT(gbc.pc(), 0x1950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c5), 0x92);
        // BE 0344
        gbc.setState(0xc85e, 0x45cc, 0x46c0, 0x8d, 0x98c9, 0xda9d, 0x1, 0x0);
        gbc.writeMem(0xc85e, { 0xbe });
        gbc.writeMem(0xda9d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x45cc);
        EXPECT(gbc.pc(), 0xc85f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc85e), 0xbe);
        EXPECT(gbc.readMem(0xda9d), 0x58);
        // BE 0345
        gbc.setState(0xa2e4, 0xc80a, 0xdcd0, 0x6f88, 0xf7eb, 0x9267, 0x1, 0x0);
        gbc.writeMem(0x9267, { 0x73 });
        gbc.writeMem(0xa2e4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc80a);
        EXPECT(gbc.pc(), 0xa2e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9267), 0x73);
        EXPECT(gbc.readMem(0xa2e4), 0xbe);
        // BE 0346
        gbc.setState(0xda46, 0xe3f3, 0x1d40, 0x58c7, 0x1ada, 0xf057, 0x1, 0x0);
        gbc.writeMem(0xda46, { 0xbe });
        gbc.writeMem(0xf057, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe3f3);
        EXPECT(gbc.pc(), 0xda47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda46), 0xbe);
        EXPECT(gbc.readMem(0xf057), 0x60);
        // BE 0347
        gbc.setState(0xe185, 0x69d0, 0x7e80, 0x29c2, 0x4c12, 0x844d, 0x1, 0x1);
        gbc.writeMem(0x844d, { 0x1e });
        gbc.writeMem(0xe185, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x69d0);
        EXPECT(gbc.pc(), 0xe186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x844d), 0x1e);
        EXPECT(gbc.readMem(0xe185), 0xbe);
        // BE 0348
        gbc.setState(0x27de, 0x2b1c, 0x54d0, 0x1b3f, 0xad31, 0x6b4c, 0x0, 0x0);
        gbc.writeMem(0x27de, { 0xbe });
        gbc.writeMem(0x6b4c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2b1c);
        EXPECT(gbc.pc(), 0x27df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0349
        gbc.setState(0x6b1b, 0x4dcc, 0x5be0, 0x533c, 0xdddc, 0x4ed6, 0x0, 0x1);
        gbc.writeMem(0x4ed6, { 0xdd });
        gbc.writeMem(0x6b1b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4dcc);
        EXPECT(gbc.pc(), 0x6b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 034A
        gbc.setState(0xdff8, 0x9bcb, 0x9d60, 0x3cc0, 0x5fb2, 0x18f0, 0x1, 0x0);
        gbc.writeMem(0x18f0, { 0x6f });
        gbc.writeMem(0xdff8, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9bcb);
        EXPECT(gbc.pc(), 0xdff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff8), 0xbe);
        // BE 034B
        gbc.setState(0xcb33, 0x32a4, 0xb560, 0xc92e, 0xd0c4, 0xc9f2, 0x1, 0x1);
        gbc.writeMem(0xc9f2, { 0x66 });
        gbc.writeMem(0xcb33, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x32a4);
        EXPECT(gbc.pc(), 0xcb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9f2), 0x66);
        EXPECT(gbc.readMem(0xcb33), 0xbe);
        // BE 034C
        gbc.setState(0x5d0a, 0x99a8, 0x8dd0, 0xded8, 0xfbc5, 0x1260, 0x0, 0x1);
        gbc.writeMem(0x1260, { 0x52 });
        gbc.writeMem(0x5d0a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x99a8);
        EXPECT(gbc.pc(), 0x5d0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 034D
        gbc.setState(0x5266, 0x4859, 0xef30, 0x8596, 0x147e, 0x30db, 0x1, 0x0);
        gbc.writeMem(0x30db, { 0xf7 });
        gbc.writeMem(0x5266, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4859);
        EXPECT(gbc.pc(), 0x5267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 034E
        gbc.setState(0xc97, 0xc515, 0xb410, 0x4354, 0x17ca, 0x693e, 0x1, 0x1);
        gbc.writeMem(0xc97, { 0xbe });
        gbc.writeMem(0x693e, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc515);
        EXPECT(gbc.pc(), 0xc98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 034F
        gbc.setState(0xaa83, 0x3fc2, 0xd8c0, 0x8c31, 0x5d02, 0xc2db, 0x0, 0x0);
        gbc.writeMem(0xaa83, { 0xbe });
        gbc.writeMem(0xc2db, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3fc2);
        EXPECT(gbc.pc(), 0xaa84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa83), 0xbe);
        EXPECT(gbc.readMem(0xc2db), 0x67);
        // BE 0350
        gbc.setState(0x6288, 0x370d, 0xc030, 0xbc8f, 0xd165, 0xf386, 0x0, 0x1);
        gbc.writeMem(0x6288, { 0xbe });
        gbc.writeMem(0xf386, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x370d);
        EXPECT(gbc.pc(), 0x6289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf386), 0xb0);
        // BE 0351
        gbc.setState(0xbf05, 0x153c, 0xb180, 0x400b, 0x861a, 0x1f9b, 0x1, 0x1);
        gbc.writeMem(0x1f9b, { 0x4f });
        gbc.writeMem(0xbf05, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x153c);
        EXPECT(gbc.pc(), 0xbf06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf05), 0xbe);
        // BE 0352
        gbc.setState(0xe72d, 0x96ff, 0x4a60, 0xba7, 0xf773, 0x42e9, 0x1, 0x1);
        gbc.writeMem(0x42e9, { 0x12 });
        gbc.writeMem(0xe72d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x96ff);
        EXPECT(gbc.pc(), 0xe72e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe72d), 0xbe);
        // BE 0353
        gbc.setState(0xd72f, 0x33eb, 0x24b0, 0x414d, 0x7f3c, 0x92ce, 0x1, 0x0);
        gbc.writeMem(0x92ce, { 0xcb });
        gbc.writeMem(0xd72f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x33eb);
        EXPECT(gbc.pc(), 0xd730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ce), 0xcb);
        EXPECT(gbc.readMem(0xd72f), 0xbe);
        // BE 0354
        gbc.setState(0xc698, 0xb767, 0xe560, 0x6c34, 0x85c3, 0x497b, 0x1, 0x0);
        gbc.writeMem(0x497b, { 0x3c });
        gbc.writeMem(0xc698, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb767);
        EXPECT(gbc.pc(), 0xc699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc698), 0xbe);
        // BE 0355
        gbc.setState(0xe0c8, 0x7e3f, 0x1840, 0x8931, 0xb075, 0x989b, 0x0, 0x1);
        gbc.writeMem(0x989b, { 0xdb });
        gbc.writeMem(0xe0c8, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7e3f);
        EXPECT(gbc.pc(), 0xe0c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989b), 0xdb);
        EXPECT(gbc.readMem(0xe0c8), 0xbe);
        // BE 0356
        gbc.setState(0x6d97, 0xd001, 0x9bd0, 0xfdf4, 0x34e0, 0xf6bb, 0x0, 0x0);
        gbc.writeMem(0x6d97, { 0xbe });
        gbc.writeMem(0xf6bb, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd001);
        EXPECT(gbc.pc(), 0x6d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf6bb), 0xcb);
        // BE 0357
        gbc.setState(0x3eee, 0x4b1, 0xa360, 0x3dae, 0xb9e3, 0x23d5, 0x1, 0x1);
        gbc.writeMem(0x23d5, { 0x40 });
        gbc.writeMem(0x3eee, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4b1);
        EXPECT(gbc.pc(), 0x3eef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0358
        gbc.setState(0xdd9e, 0xca8f, 0xc7f0, 0x20b3, 0x67eb, 0x9583, 0x0, 0x0);
        gbc.writeMem(0x9583, { 0xbc });
        gbc.writeMem(0xdd9e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xca8f);
        EXPECT(gbc.pc(), 0xdd9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9583), 0xbc);
        EXPECT(gbc.readMem(0xdd9e), 0xbe);
        // BE 0359
        gbc.setState(0x7546, 0x1dec, 0xe5f0, 0x9a65, 0x90a5, 0x1687, 0x0, 0x1);
        gbc.writeMem(0x1687, { 0x65 });
        gbc.writeMem(0x7546, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1dec);
        EXPECT(gbc.pc(), 0x7547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 035A
        gbc.setState(0x34fa, 0x92be, 0xf0d0, 0x751b, 0x5858, 0xb993, 0x1, 0x0);
        gbc.writeMem(0x34fa, { 0xbe });
        gbc.writeMem(0xb993, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x92be);
        EXPECT(gbc.pc(), 0x34fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb993), 0x95);
        // BE 035B
        gbc.setState(0xe246, 0x9a1, 0xf2f0, 0x8c90, 0x904f, 0xd2fe, 0x0, 0x0);
        gbc.writeMem(0xd2fe, { 0x22 });
        gbc.writeMem(0xe246, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9a1);
        EXPECT(gbc.pc(), 0xe247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2fe), 0x22);
        EXPECT(gbc.readMem(0xe246), 0xbe);
        // BE 035C
        gbc.setState(0x232d, 0x7eb1, 0x9880, 0xbc5e, 0x4794, 0x93c6, 0x1, 0x0);
        gbc.writeMem(0x232d, { 0xbe });
        gbc.writeMem(0x93c6, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7eb1);
        EXPECT(gbc.pc(), 0x232e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c6), 0xa3);
        // BE 035D
        gbc.setState(0x9b68, 0x105e, 0x2230, 0xa6f6, 0x7c98, 0x9a0a, 0x1, 0x0);
        gbc.writeMem(0x9a0a, { 0x75 });
        gbc.writeMem(0x9b68, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x105e);
        EXPECT(gbc.pc(), 0x9b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a0a), 0x75);
        EXPECT(gbc.readMem(0x9b68), 0xbe);
        // BE 035E
        gbc.setState(0x7501, 0x4b44, 0xfd50, 0xc1aa, 0x4a6, 0x60e0, 0x0, 0x1);
        gbc.writeMem(0x60e0, { 0x7d });
        gbc.writeMem(0x7501, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4b44);
        EXPECT(gbc.pc(), 0x7502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 035F
        gbc.setState(0x3f49, 0x29f5, 0x8a00, 0xbb1a, 0x4032, 0x89f7, 0x1, 0x1);
        gbc.writeMem(0x3f49, { 0xbe });
        gbc.writeMem(0x89f7, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x29f5);
        EXPECT(gbc.pc(), 0x3f4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89f7), 0xb5);
        // BE 0360
        gbc.setState(0x480f, 0xc2e, 0x7190, 0xeecf, 0xc99d, 0x5070, 0x1, 0x0);
        gbc.writeMem(0x480f, { 0xbe });
        gbc.writeMem(0x5070, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc2e);
        EXPECT(gbc.pc(), 0x4810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0361
        gbc.setState(0x3885, 0xdc08, 0x6ca0, 0x7799, 0x1e9, 0xde66, 0x1, 0x1);
        gbc.writeMem(0x3885, { 0xbe });
        gbc.writeMem(0xde66, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdc08);
        EXPECT(gbc.pc(), 0x3886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde66), 0x63);
        // BE 0362
        gbc.setState(0xeeb8, 0xca81, 0x2240, 0x1080, 0x62a0, 0x2fad, 0x1, 0x1);
        gbc.writeMem(0x2fad, { 0xb1 });
        gbc.writeMem(0xeeb8, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xca81);
        EXPECT(gbc.pc(), 0xeeb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb8), 0xbe);
        // BE 0363
        gbc.setState(0xd40c, 0x9694, 0x23d0, 0x6c33, 0xcaf5, 0x5562, 0x0, 0x1);
        gbc.writeMem(0x5562, { 0x99 });
        gbc.writeMem(0xd40c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9694);
        EXPECT(gbc.pc(), 0xd40d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd40c), 0xbe);
        // BE 0364
        gbc.setState(0xe482, 0xb51b, 0x63c0, 0x3bec, 0x8f74, 0x183d, 0x0, 0x0);
        gbc.writeMem(0x183d, { 0x46 });
        gbc.writeMem(0xe482, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb51b);
        EXPECT(gbc.pc(), 0xe483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe482), 0xbe);
        // BE 0365
        gbc.setState(0xbcd6, 0xec07, 0x8560, 0xd8e5, 0xcc02, 0x410, 0x1, 0x1);
        gbc.writeMem(0x410, { 0x7a });
        gbc.writeMem(0xbcd6, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xec07);
        EXPECT(gbc.pc(), 0xbcd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd6), 0xbe);
        // BE 0366
        gbc.setState(0x722b, 0x8f92, 0x1730, 0xf798, 0xf2de, 0x3478, 0x0, 0x0);
        gbc.writeMem(0x3478, { 0x9f });
        gbc.writeMem(0x722b, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8f92);
        EXPECT(gbc.pc(), 0x722c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0367
        gbc.setState(0x70e5, 0xc47, 0xd850, 0xd9dd, 0x92b7, 0x9ce1, 0x0, 0x0);
        gbc.writeMem(0x70e5, { 0xbe });
        gbc.writeMem(0x9ce1, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc47);
        EXPECT(gbc.pc(), 0x70e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ce1), 0x3a);
        // BE 0368
        gbc.setState(0x539f, 0xf5cf, 0x6d20, 0x1c32, 0x8133, 0x13cb, 0x1, 0x1);
        gbc.writeMem(0x13cb, { 0xc2 });
        gbc.writeMem(0x539f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf5cf);
        EXPECT(gbc.pc(), 0x53a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0369
        gbc.setState(0x1433, 0x2cec, 0x3330, 0x10d2, 0xbb6c, 0xb481, 0x1, 0x0);
        gbc.writeMem(0x1433, { 0xbe });
        gbc.writeMem(0xb481, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2cec);
        EXPECT(gbc.pc(), 0x1434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb481), 0x3);
        // BE 036A
        gbc.setState(0xa4ef, 0x1f1e, 0xa5a0, 0x62dc, 0xaf7c, 0xc627, 0x1, 0x1);
        gbc.writeMem(0xa4ef, { 0xbe });
        gbc.writeMem(0xc627, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1f1e);
        EXPECT(gbc.pc(), 0xa4f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ef), 0xbe);
        EXPECT(gbc.readMem(0xc627), 0x82);
        // BE 036B
        gbc.setState(0x4f22, 0x313, 0x3e30, 0xcf06, 0x96f9, 0x115b, 0x1, 0x0);
        gbc.writeMem(0x115b, { 0x1d });
        gbc.writeMem(0x4f22, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x313);
        EXPECT(gbc.pc(), 0x4f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 036C
        gbc.setState(0x541, 0x5c65, 0x1a40, 0x58ff, 0x7370, 0x341f, 0x0, 0x1);
        gbc.writeMem(0x541, { 0xbe });
        gbc.writeMem(0x341f, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5c65);
        EXPECT(gbc.pc(), 0x542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 036D
        gbc.setState(0xa93d, 0x5fc7, 0x6590, 0xe1ec, 0x7f75, 0xa0e8, 0x1, 0x0);
        gbc.writeMem(0xa0e8, { 0x3c });
        gbc.writeMem(0xa93d, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5fc7);
        EXPECT(gbc.pc(), 0xa93e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e8), 0x3c);
        EXPECT(gbc.readMem(0xa93d), 0xbe);
        // BE 036E
        gbc.setState(0x8ad, 0x5dbc, 0xa250, 0x61a1, 0xbbd2, 0x4479, 0x1, 0x1);
        gbc.writeMem(0x8ad, { 0xbe });
        gbc.writeMem(0x4479, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5dbc);
        EXPECT(gbc.pc(), 0x8ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 036F
        gbc.setState(0x838b, 0xc0a1, 0xad0, 0xc348, 0x6d61, 0xf8a2, 0x0, 0x1);
        gbc.writeMem(0x838b, { 0xbe });
        gbc.writeMem(0xf8a2, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc0a1);
        EXPECT(gbc.pc(), 0x838c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838b), 0xbe);
        EXPECT(gbc.readMem(0xf8a2), 0xc4);
        // BE 0370
        gbc.setState(0x2d47, 0x2e9c, 0x3ae0, 0x5941, 0xbf2d, 0x214c, 0x1, 0x0);
        gbc.writeMem(0x214c, { 0xde });
        gbc.writeMem(0x2d47, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2e9c);
        EXPECT(gbc.pc(), 0x2d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0371
        gbc.setState(0x946, 0x974, 0xf9e0, 0x2ce9, 0xb9af, 0x8add, 0x0, 0x0);
        gbc.writeMem(0x946, { 0xbe });
        gbc.writeMem(0x8add, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x974);
        EXPECT(gbc.pc(), 0x947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8add), 0x59);
        // BE 0372
        gbc.setState(0x3d84, 0xb091, 0xbd50, 0xb7b8, 0xea7b, 0xd5e6, 0x1, 0x1);
        gbc.writeMem(0x3d84, { 0xbe });
        gbc.writeMem(0xd5e6, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb091);
        EXPECT(gbc.pc(), 0x3d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e6), 0x33);
        // BE 0373
        gbc.setState(0x3da5, 0xee7d, 0x9f0, 0x1c21, 0x8df3, 0x4c8b, 0x0, 0x0);
        gbc.writeMem(0x3da5, { 0xbe });
        gbc.writeMem(0x4c8b, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xee7d);
        EXPECT(gbc.pc(), 0x3da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0374
        gbc.setState(0xa162, 0x6f5e, 0x4930, 0x7a46, 0x8273, 0x84f8, 0x0, 0x1);
        gbc.writeMem(0x84f8, { 0x18 });
        gbc.writeMem(0xa162, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6f5e);
        EXPECT(gbc.pc(), 0xa163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f8), 0x18);
        EXPECT(gbc.readMem(0xa162), 0xbe);
        // BE 0375
        gbc.setState(0x6db4, 0xeef3, 0x1160, 0xeaf1, 0x52eb, 0x9cb, 0x1, 0x1);
        gbc.writeMem(0x9cb, { 0x2 });
        gbc.writeMem(0x6db4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xeef3);
        EXPECT(gbc.pc(), 0x6db5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 0376
        gbc.setState(0x54b1, 0x4bb4, 0x4960, 0x4e3d, 0xe4ae, 0x2eb4, 0x0, 0x1);
        gbc.writeMem(0x2eb4, { 0xc2 });
        gbc.writeMem(0x54b1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4bb4);
        EXPECT(gbc.pc(), 0x54b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0377
        gbc.setState(0x1dbb, 0x6667, 0x29f0, 0x7daa, 0x4704, 0x5085, 0x0, 0x0);
        gbc.writeMem(0x1dbb, { 0xbe });
        gbc.writeMem(0x5085, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6667);
        EXPECT(gbc.pc(), 0x1dbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0378
        gbc.setState(0x84b5, 0xff73, 0xfe80, 0x6f7e, 0xbf01, 0xb0de, 0x0, 0x0);
        gbc.writeMem(0x84b5, { 0xbe });
        gbc.writeMem(0xb0de, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xff73);
        EXPECT(gbc.pc(), 0x84b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b5), 0xbe);
        EXPECT(gbc.readMem(0xb0de), 0xf0);
        // BE 0379
        gbc.setState(0xc056, 0x65e, 0xa160, 0xf926, 0x2fb8, 0xe956, 0x0, 0x0);
        gbc.writeMem(0xc056, { 0xbe });
        gbc.writeMem(0xe956, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x65e);
        EXPECT(gbc.pc(), 0xc057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc056), 0xbe);
        EXPECT(gbc.readMem(0xe956), 0x83);
        // BE 037A
        gbc.setState(0xc54c, 0xf6ec, 0x2300, 0xe0b, 0x5a44, 0x9af0, 0x0, 0x0);
        gbc.writeMem(0x9af0, { 0xb6 });
        gbc.writeMem(0xc54c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf6ec);
        EXPECT(gbc.pc(), 0xc54d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af0), 0xb6);
        EXPECT(gbc.readMem(0xc54c), 0xbe);
        // BE 037B
        gbc.setState(0xaab3, 0x6f75, 0xd4f0, 0xc155, 0x4dd1, 0xbf24, 0x1, 0x1);
        gbc.writeMem(0xaab3, { 0xbe });
        gbc.writeMem(0xbf24, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6f75);
        EXPECT(gbc.pc(), 0xaab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab3), 0xbe);
        EXPECT(gbc.readMem(0xbf24), 0xbe);
        // BE 037C
        gbc.setState(0xe589, 0xcd1c, 0x6e00, 0xe447, 0xf347, 0x125c, 0x1, 0x0);
        gbc.writeMem(0x125c, { 0x12 });
        gbc.writeMem(0xe589, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcd1c);
        EXPECT(gbc.pc(), 0xe58a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe589), 0xbe);
        // BE 037D
        gbc.setState(0x1436, 0xaed9, 0x95c0, 0x2d25, 0xd8ba, 0x75f1, 0x1, 0x0);
        gbc.writeMem(0x1436, { 0xbe });
        gbc.writeMem(0x75f1, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xaed9);
        EXPECT(gbc.pc(), 0x1437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 037E
        gbc.setState(0x3dbf, 0xbed3, 0xa510, 0x2caa, 0x6e33, 0xb470, 0x0, 0x0);
        gbc.writeMem(0x3dbf, { 0xbe });
        gbc.writeMem(0xb470, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbed3);
        EXPECT(gbc.pc(), 0x3dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb470), 0x99);
        // BE 0380
        gbc.setState(0x5139, 0x467b, 0x5b0, 0x9d09, 0xf886, 0x27f9, 0x0, 0x0);
        gbc.writeMem(0x27f9, { 0xfe });
        gbc.writeMem(0x5139, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x467b);
        EXPECT(gbc.pc(), 0x513a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0381
        gbc.setState(0x170f, 0xf748, 0x2fc0, 0xde67, 0x57d0, 0x49d1, 0x1, 0x0);
        gbc.writeMem(0x170f, { 0xbe });
        gbc.writeMem(0x49d1, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf748);
        EXPECT(gbc.pc(), 0x1710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0382
        gbc.setState(0x8a4c, 0xdfa7, 0x4640, 0x2aa1, 0x3c7, 0xae7a, 0x0, 0x0);
        gbc.writeMem(0x8a4c, { 0xbe });
        gbc.writeMem(0xae7a, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdfa7);
        EXPECT(gbc.pc(), 0x8a4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a4c), 0xbe);
        EXPECT(gbc.readMem(0xae7a), 0x57);
        // BE 0383
        gbc.setState(0x6bc9, 0xe2b8, 0xadd0, 0x6923, 0x40e6, 0x9a52, 0x1, 0x0);
        gbc.writeMem(0x6bc9, { 0xbe });
        gbc.writeMem(0x9a52, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe2b8);
        EXPECT(gbc.pc(), 0x6bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a52), 0x44);
        // BE 0384
        gbc.setState(0xb715, 0x6b13, 0xc720, 0x7758, 0x8f65, 0x5c8e, 0x0, 0x1);
        gbc.writeMem(0x5c8e, { 0x1d });
        gbc.writeMem(0xb715, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6b13);
        EXPECT(gbc.pc(), 0xb716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb715), 0xbe);
        // BE 0385
        gbc.setState(0x35cc, 0x927e, 0x3590, 0xf03c, 0xbb52, 0x3988, 0x0, 0x0);
        gbc.writeMem(0x35cc, { 0xbe });
        gbc.writeMem(0x3988, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x927e);
        EXPECT(gbc.pc(), 0x35cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0386
        gbc.setState(0x1ad, 0x25f, 0x90e0, 0x8148, 0x2ea8, 0x38c9, 0x1, 0x0);
        gbc.writeMem(0x1ad, { 0xbe });
        gbc.writeMem(0x38c9, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x25f);
        EXPECT(gbc.pc(), 0x1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 0387
        gbc.setState(0x1807, 0x5fbe, 0xc560, 0xa2b5, 0xf921, 0x4cc5, 0x1, 0x1);
        gbc.writeMem(0x1807, { 0xbe });
        gbc.writeMem(0x4cc5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5fbe);
        EXPECT(gbc.pc(), 0x1808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0389
        gbc.setState(0xd7a9, 0x2938, 0xe4f0, 0xe19, 0x70e0, 0x4f17, 0x1, 0x0);
        gbc.writeMem(0x4f17, { 0x64 });
        gbc.writeMem(0xd7a9, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2938);
        EXPECT(gbc.pc(), 0xd7aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a9), 0xbe);
        // BE 038A
        gbc.setState(0x86b, 0x1a9d, 0x2d40, 0xe6ff, 0xbba5, 0x56ea, 0x1, 0x1);
        gbc.writeMem(0x86b, { 0xbe });
        gbc.writeMem(0x56ea, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1a9d);
        EXPECT(gbc.pc(), 0x86c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 038B
        gbc.setState(0xbace, 0x78c3, 0xdee0, 0x30c, 0x2634, 0x946, 0x0, 0x0);
        gbc.writeMem(0x946, { 0xec });
        gbc.writeMem(0xbace, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x78c3);
        EXPECT(gbc.pc(), 0xbacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbace), 0xbe);
        // BE 038C
        gbc.setState(0x4588, 0xf24a, 0x70c0, 0xfce8, 0x949c, 0x9994, 0x1, 0x1);
        gbc.writeMem(0x4588, { 0xbe });
        gbc.writeMem(0x9994, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf24a);
        EXPECT(gbc.pc(), 0x4589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9994), 0x5c);
        // BE 038D
        gbc.setState(0x6a0f, 0xf86, 0xc680, 0xef7f, 0xd103, 0x3465, 0x0, 0x1);
        gbc.writeMem(0x3465, { 0xa1 });
        gbc.writeMem(0x6a0f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf86);
        EXPECT(gbc.pc(), 0x6a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 038E
        gbc.setState(0x6f48, 0x4fa7, 0x2f80, 0xbeb9, 0x953f, 0xb656, 0x1, 0x1);
        gbc.writeMem(0x6f48, { 0xbe });
        gbc.writeMem(0xb656, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4fa7);
        EXPECT(gbc.pc(), 0x6f49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb656), 0x7c);
        // BE 038F
        gbc.setState(0x256, 0x6cc6, 0x4ad0, 0x91df, 0x8ae7, 0xd8ce, 0x1, 0x0);
        gbc.writeMem(0x256, { 0xbe });
        gbc.writeMem(0xd8ce, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6cc6);
        EXPECT(gbc.pc(), 0x257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ce), 0x36);
        // BE 0390
        gbc.setState(0x2ca0, 0xb7b5, 0x77a0, 0x45ef, 0x6725, 0xe9b6, 0x0, 0x1);
        gbc.writeMem(0x2ca0, { 0xbe });
        gbc.writeMem(0xe9b6, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb7b5);
        EXPECT(gbc.pc(), 0x2ca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b6), 0xb3);
        // BE 0391
        gbc.setState(0x9fa9, 0x8c49, 0x7fd0, 0xb099, 0x3c45, 0x891d, 0x1, 0x0);
        gbc.writeMem(0x891d, { 0x3c });
        gbc.writeMem(0x9fa9, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8c49);
        EXPECT(gbc.pc(), 0x9faa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x891d), 0x3c);
        EXPECT(gbc.readMem(0x9fa9), 0xbe);
        // BE 0393
        gbc.setState(0xb8e9, 0xacf1, 0x6780, 0xf87, 0x541f, 0x6325, 0x1, 0x1);
        gbc.writeMem(0x6325, { 0xd6 });
        gbc.writeMem(0xb8e9, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xacf1);
        EXPECT(gbc.pc(), 0xb8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8e9), 0xbe);
        // BE 0394
        gbc.setState(0x4b3a, 0xa262, 0xf4c0, 0xd063, 0x2e14, 0x2cd9, 0x1, 0x1);
        gbc.writeMem(0x2cd9, { 0x34 });
        gbc.writeMem(0x4b3a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa262);
        EXPECT(gbc.pc(), 0x4b3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 0395
        gbc.setState(0xbf74, 0x7042, 0xe370, 0x7f50, 0x5a4c, 0xe4a, 0x0, 0x0);
        gbc.writeMem(0xe4a, { 0x62 });
        gbc.writeMem(0xbf74, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7042);
        EXPECT(gbc.pc(), 0xbf75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf74), 0xbe);
        // BE 0396
        gbc.setState(0x8baa, 0xb4bc, 0x4a0, 0x6204, 0x2ed9, 0xcb3d, 0x0, 0x0);
        gbc.writeMem(0x8baa, { 0xbe });
        gbc.writeMem(0xcb3d, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb4bc);
        EXPECT(gbc.pc(), 0x8bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8baa), 0xbe);
        EXPECT(gbc.readMem(0xcb3d), 0xee);
        // BE 0397
        gbc.setState(0x1e48, 0xf97c, 0xaf0, 0xc198, 0xbd79, 0x128, 0x0, 0x0);
        gbc.writeMem(0x128, { 0xa8 });
        gbc.writeMem(0x1e48, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf97c);
        EXPECT(gbc.pc(), 0x1e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 0398
        gbc.setState(0x9488, 0x3ff, 0xc3e0, 0xee1a, 0x310, 0x1739, 0x1, 0x1);
        gbc.writeMem(0x1739, { 0xbd });
        gbc.writeMem(0x9488, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3ff);
        EXPECT(gbc.pc(), 0x9489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9488), 0xbe);
        // BE 0399
        gbc.setState(0xb25d, 0x726c, 0x8f60, 0x9ace, 0x710a, 0xb732, 0x0, 0x0);
        gbc.writeMem(0xb25d, { 0xbe });
        gbc.writeMem(0xb732, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x726c);
        EXPECT(gbc.pc(), 0xb25e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25d), 0xbe);
        EXPECT(gbc.readMem(0xb732), 0x8e);
        // BE 039A
        gbc.setState(0x9632, 0x6330, 0x7760, 0xa984, 0x9ae1, 0x7293, 0x0, 0x1);
        gbc.writeMem(0x7293, { 0xfa });
        gbc.writeMem(0x9632, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6330);
        EXPECT(gbc.pc(), 0x9633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9632), 0xbe);
        // BE 039B
        gbc.setState(0x230, 0x1644, 0x5920, 0x92b3, 0x59d8, 0x775b, 0x1, 0x0);
        gbc.writeMem(0x230, { 0xbe });
        gbc.writeMem(0x775b, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1644);
        EXPECT(gbc.pc(), 0x231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 039C
        gbc.setState(0xa141, 0x2f5d, 0x74f0, 0x5439, 0xea63, 0x48e4, 0x1, 0x0);
        gbc.writeMem(0x48e4, { 0xd3 });
        gbc.writeMem(0xa141, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2f5d);
        EXPECT(gbc.pc(), 0xa142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa141), 0xbe);
        // BE 039D
        gbc.setState(0x393d, 0x3d35, 0x87b0, 0x41f4, 0x1d8a, 0x5595, 0x0, 0x1);
        gbc.writeMem(0x393d, { 0xbe });
        gbc.writeMem(0x5595, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3d35);
        EXPECT(gbc.pc(), 0x393e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 039E
        gbc.setState(0x3c42, 0x8e45, 0x2dc0, 0x7a8a, 0x7273, 0xd6ba, 0x1, 0x1);
        gbc.writeMem(0x3c42, { 0xbe });
        gbc.writeMem(0xd6ba, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8e45);
        EXPECT(gbc.pc(), 0x3c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ba), 0x77);
        // BE 03A0
        gbc.setState(0xc3d4, 0xc4ce, 0xc620, 0x4e65, 0xd177, 0x596d, 0x0, 0x0);
        gbc.writeMem(0x596d, { 0x41 });
        gbc.writeMem(0xc3d4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc4ce);
        EXPECT(gbc.pc(), 0xc3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d4), 0xbe);
        // BE 03A1
        gbc.setState(0x62f6, 0x9de6, 0x5080, 0x85c7, 0x1789, 0x6f6, 0x0, 0x1);
        gbc.writeMem(0x6f6, { 0xf });
        gbc.writeMem(0x62f6, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9de6);
        EXPECT(gbc.pc(), 0x62f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 03A2
        gbc.setState(0x2052, 0xb3c8, 0xf0c0, 0xdefd, 0x1894, 0xdffc, 0x0, 0x0);
        gbc.writeMem(0x2052, { 0xbe });
        gbc.writeMem(0xdffc, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb3c8);
        EXPECT(gbc.pc(), 0x2053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdffc), 0xf2);
        // BE 03A3
        gbc.setState(0x2473, 0x3eca, 0x3480, 0xc96f, 0xf81, 0x24e1, 0x1, 0x1);
        gbc.writeMem(0x2473, { 0xbe });
        gbc.writeMem(0x24e1, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3eca);
        EXPECT(gbc.pc(), 0x2474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 03A4
        gbc.setState(0x15b8, 0xaf9b, 0xb9b0, 0x35ef, 0xcab4, 0x8baa, 0x0, 0x0);
        gbc.writeMem(0x15b8, { 0xbe });
        gbc.writeMem(0x8baa, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xaf9b);
        EXPECT(gbc.pc(), 0x15b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8baa), 0x95);
        // BE 03A5
        gbc.setState(0x28eb, 0x7b4, 0xd2b0, 0x33a, 0x2e49, 0x4193, 0x1, 0x1);
        gbc.writeMem(0x28eb, { 0xbe });
        gbc.writeMem(0x4193, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7b4);
        EXPECT(gbc.pc(), 0x28ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 03A6
        gbc.setState(0x3c32, 0x60d6, 0x7930, 0x202d, 0xf381, 0xd95f, 0x1, 0x0);
        gbc.writeMem(0x3c32, { 0xbe });
        gbc.writeMem(0xd95f, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x60d6);
        EXPECT(gbc.pc(), 0x3c33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd95f), 0xd7);
        // BE 03A7
        gbc.setState(0x93dc, 0x1f6f, 0x1f30, 0x81f4, 0xfb88, 0xbda4, 0x0, 0x0);
        gbc.writeMem(0x93dc, { 0xbe });
        gbc.writeMem(0xbda4, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1f6f);
        EXPECT(gbc.pc(), 0x93dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93dc), 0xbe);
        EXPECT(gbc.readMem(0xbda4), 0xee);
        // BE 03A8
        gbc.setState(0xeeca, 0x9f1e, 0xc910, 0x7945, 0x8ee2, 0xb444, 0x1, 0x0);
        gbc.writeMem(0xb444, { 0x96 });
        gbc.writeMem(0xeeca, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9f1e);
        EXPECT(gbc.pc(), 0xeecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb444), 0x96);
        EXPECT(gbc.readMem(0xeeca), 0xbe);
        // BE 03AA
        gbc.setState(0x6f21, 0x197b, 0x8c20, 0xb1a7, 0x3445, 0xbe53, 0x1, 0x0);
        gbc.writeMem(0x6f21, { 0xbe });
        gbc.writeMem(0xbe53, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x197b);
        EXPECT(gbc.pc(), 0x6f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe53), 0x78);
        // BE 03AB
        gbc.setState(0xdac1, 0x355, 0xbf70, 0xe490, 0x9773, 0x1df5, 0x1, 0x0);
        gbc.writeMem(0x1df5, { 0x96 });
        gbc.writeMem(0xdac1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x355);
        EXPECT(gbc.pc(), 0xdac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac1), 0xbe);
        // BE 03AC
        gbc.setState(0xd26e, 0x2a47, 0x1470, 0xf4d1, 0xb3ef, 0x4c92, 0x0, 0x0);
        gbc.writeMem(0x4c92, { 0xfc });
        gbc.writeMem(0xd26e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2a47);
        EXPECT(gbc.pc(), 0xd26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd26e), 0xbe);
        // BE 03AD
        gbc.setState(0x83a0, 0xd5fb, 0x4f90, 0x8d2a, 0x4486, 0x4800, 0x1, 0x1);
        gbc.writeMem(0x4800, { 0x78 });
        gbc.writeMem(0x83a0, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd5fb);
        EXPECT(gbc.pc(), 0x83a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a0), 0xbe);
        // BE 03AF
        gbc.setState(0x3456, 0xe48d, 0x8ee0, 0x2dd5, 0xbde, 0x4153, 0x1, 0x0);
        gbc.writeMem(0x3456, { 0xbe });
        gbc.writeMem(0x4153, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe48d);
        EXPECT(gbc.pc(), 0x3457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 03B0
        gbc.setState(0xe392, 0xc619, 0xc510, 0xaa9b, 0xb3f, 0xac5f, 0x0, 0x0);
        gbc.writeMem(0xac5f, { 0x5f });
        gbc.writeMem(0xe392, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc619);
        EXPECT(gbc.pc(), 0xe393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac5f), 0x5f);
        EXPECT(gbc.readMem(0xe392), 0xbe);
        // BE 03B1
        gbc.setState(0xae53, 0x7b6a, 0xf30, 0x30dc, 0x4300, 0x6c7d, 0x1, 0x0);
        gbc.writeMem(0x6c7d, { 0x7e });
        gbc.writeMem(0xae53, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7b6a);
        EXPECT(gbc.pc(), 0xae54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae53), 0xbe);
        // BE 03B2
        gbc.setState(0xea1c, 0xff1a, 0x1f90, 0x6f5b, 0xf527, 0x486e, 0x0, 0x1);
        gbc.writeMem(0x486e, { 0x69 });
        gbc.writeMem(0xea1c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xff1a);
        EXPECT(gbc.pc(), 0xea1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea1c), 0xbe);
        // BE 03B3
        gbc.setState(0xd883, 0xb33f, 0x33f0, 0x233c, 0xb24e, 0x533c, 0x0, 0x0);
        gbc.writeMem(0x533c, { 0xa3 });
        gbc.writeMem(0xd883, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb33f);
        EXPECT(gbc.pc(), 0xd884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd883), 0xbe);
        // BE 03B4
        gbc.setState(0x6b05, 0x351a, 0x6d30, 0x28ab, 0x9ddc, 0xa685, 0x1, 0x0);
        gbc.writeMem(0x6b05, { 0xbe });
        gbc.writeMem(0xa685, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x351a);
        EXPECT(gbc.pc(), 0x6b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa685), 0xe5);
        // BE 03B5
        gbc.setState(0xec55, 0x5b85, 0x2830, 0x950e, 0x3e7e, 0x9905, 0x1, 0x0);
        gbc.writeMem(0x9905, { 0x80 });
        gbc.writeMem(0xec55, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5b85);
        EXPECT(gbc.pc(), 0xec56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9905), 0x80);
        EXPECT(gbc.readMem(0xec55), 0xbe);
        // BE 03B6
        gbc.setState(0x36eb, 0x92b9, 0xf540, 0x6220, 0xc555, 0x3ab3, 0x0, 0x0);
        gbc.writeMem(0x36eb, { 0xbe });
        gbc.writeMem(0x3ab3, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x92b9);
        EXPECT(gbc.pc(), 0x36ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 03B7
        gbc.setState(0xcfb3, 0xb155, 0x3410, 0x1864, 0x8f81, 0x6637, 0x0, 0x0);
        gbc.writeMem(0x6637, { 0x1a });
        gbc.writeMem(0xcfb3, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb155);
        EXPECT(gbc.pc(), 0xcfb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb3), 0xbe);
        // BE 03B8
        gbc.setState(0x6acd, 0x646, 0xc150, 0xfd86, 0xee05, 0x9024, 0x0, 0x0);
        gbc.writeMem(0x6acd, { 0xbe });
        gbc.writeMem(0x9024, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x646);
        EXPECT(gbc.pc(), 0x6ace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9024), 0x1e);
        // BE 03B9
        gbc.setState(0x1f6e, 0x108e, 0xf60, 0x9724, 0xcf, 0x6272, 0x1, 0x0);
        gbc.writeMem(0x1f6e, { 0xbe });
        gbc.writeMem(0x6272, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x108e);
        EXPECT(gbc.pc(), 0x1f6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 03BA
        gbc.setState(0xc471, 0x2d37, 0xb850, 0xa015, 0x2590, 0x8c4e, 0x0, 0x0);
        gbc.writeMem(0x8c4e, { 0xb8 });
        gbc.writeMem(0xc471, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2d37);
        EXPECT(gbc.pc(), 0xc472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c4e), 0xb8);
        EXPECT(gbc.readMem(0xc471), 0xbe);
        // BE 03BB
        gbc.setState(0x8ca9, 0x18a3, 0x8040, 0xfa2e, 0x4bc8, 0xdcf8, 0x1, 0x1);
        gbc.writeMem(0x8ca9, { 0xbe });
        gbc.writeMem(0xdcf8, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x18a3);
        EXPECT(gbc.pc(), 0x8caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca9), 0xbe);
        EXPECT(gbc.readMem(0xdcf8), 0x77);
        // BE 03BC
        gbc.setState(0x8b25, 0x16b5, 0x3df0, 0x183e, 0x6478, 0x6853, 0x0, 0x0);
        gbc.writeMem(0x6853, { 0xdc });
        gbc.writeMem(0x8b25, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x16b5);
        EXPECT(gbc.pc(), 0x8b26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b25), 0xbe);
        // BE 03BD
        gbc.setState(0x9306, 0x1345, 0xe810, 0xd454, 0xeaef, 0x57c3, 0x1, 0x1);
        gbc.writeMem(0x57c3, { 0xc0 });
        gbc.writeMem(0x9306, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1345);
        EXPECT(gbc.pc(), 0x9307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9306), 0xbe);
        // BE 03BE
        gbc.setState(0x1e43, 0x8bd7, 0xad50, 0xded8, 0xecb5, 0x892d, 0x0, 0x1);
        gbc.writeMem(0x1e43, { 0xbe });
        gbc.writeMem(0x892d, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8bd7);
        EXPECT(gbc.pc(), 0x1e44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892d), 0xe6);
        // BE 03BF
        gbc.setState(0xa223, 0x602e, 0x49a0, 0x3b0f, 0x38c5, 0x90b6, 0x0, 0x0);
        gbc.writeMem(0x90b6, { 0x40 });
        gbc.writeMem(0xa223, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x602e);
        EXPECT(gbc.pc(), 0xa224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90b6), 0x40);
        EXPECT(gbc.readMem(0xa223), 0xbe);
        // BE 03C0
        gbc.setState(0x1916, 0x3f4e, 0xa2d0, 0xaff6, 0x8042, 0x5e17, 0x0, 0x1);
        gbc.writeMem(0x1916, { 0xbe });
        gbc.writeMem(0x5e17, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3f4e);
        EXPECT(gbc.pc(), 0x1917);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 03C1
        gbc.setState(0xb850, 0xdc18, 0x2a10, 0x70ce, 0xa254, 0x90a7, 0x0, 0x0);
        gbc.writeMem(0x90a7, { 0x96 });
        gbc.writeMem(0xb850, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdc18);
        EXPECT(gbc.pc(), 0xb851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a7), 0x96);
        EXPECT(gbc.readMem(0xb850), 0xbe);
        // BE 03C2
        gbc.setState(0x355, 0x5ed7, 0x13c0, 0xb8af, 0x5486, 0x3641, 0x1, 0x1);
        gbc.writeMem(0x355, { 0xbe });
        gbc.writeMem(0x3641, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5ed7);
        EXPECT(gbc.pc(), 0x356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 03C3
        gbc.setState(0xadf8, 0x78e, 0x8880, 0xbe95, 0x1788, 0x6f8, 0x0, 0x1);
        gbc.writeMem(0x6f8, { 0x2c });
        gbc.writeMem(0xadf8, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x78e);
        EXPECT(gbc.pc(), 0xadf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf8), 0xbe);
        // BE 03C4
        gbc.setState(0x581d, 0xa886, 0x8810, 0xee63, 0xc845, 0x7056, 0x1, 0x0);
        gbc.writeMem(0x581d, { 0xbe });
        gbc.writeMem(0x7056, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa886);
        EXPECT(gbc.pc(), 0x581e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 03C5
        gbc.setState(0x31bc, 0xecb8, 0x3e0, 0xee7, 0x2c0, 0xba32, 0x1, 0x1);
        gbc.writeMem(0x31bc, { 0xbe });
        gbc.writeMem(0xba32, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xecb8);
        EXPECT(gbc.pc(), 0x31bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba32), 0x16);
        // BE 03C6
        gbc.setState(0x5ecf, 0x3d1e, 0xcb0, 0x84ce, 0xb3f7, 0x7bf9, 0x1, 0x1);
        gbc.writeMem(0x5ecf, { 0xbe });
        gbc.writeMem(0x7bf9, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3d1e);
        EXPECT(gbc.pc(), 0x5ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BE 03C7
        gbc.setState(0x53e4, 0x49a4, 0xf930, 0x718f, 0x7814, 0x4681, 0x0, 0x0);
        gbc.writeMem(0x4681, { 0xe2 });
        gbc.writeMem(0x53e4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x49a4);
        EXPECT(gbc.pc(), 0x53e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BE 03C8
        gbc.setState(0x60f5, 0x3513, 0x7040, 0x47be, 0x4038, 0xb24a, 0x0, 0x1);
        gbc.writeMem(0x60f5, { 0xbe });
        gbc.writeMem(0xb24a, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3513);
        EXPECT(gbc.pc(), 0x60f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24a), 0x80);
        // BE 03C9
        gbc.setState(0xc128, 0xe5d8, 0x6660, 0x2907, 0x1a94, 0xf7ce, 0x0, 0x0);
        gbc.writeMem(0xc128, { 0xbe });
        gbc.writeMem(0xf7ce, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe5d8);
        EXPECT(gbc.pc(), 0xc129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc128), 0xbe);
        EXPECT(gbc.readMem(0xf7ce), 0x1);
        // BE 03CA
        gbc.setState(0x51ed, 0x43a2, 0xd0, 0xd45b, 0x2a7e, 0xb007, 0x0, 0x1);
        gbc.writeMem(0x51ed, { 0xbe });
        gbc.writeMem(0xb007, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x43a2);
        EXPECT(gbc.pc(), 0x51ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb007), 0x95);
        // BE 03CB
        gbc.setState(0x21f5, 0x3809, 0x1570, 0xdf28, 0x2651, 0xa92f, 0x0, 0x0);
        gbc.writeMem(0x21f5, { 0xbe });
        gbc.writeMem(0xa92f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3809);
        EXPECT(gbc.pc(), 0x21f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa92f), 0x99);
        // BE 03CC
        gbc.setState(0xde0, 0xf893, 0xe8a0, 0x2ccd, 0xc036, 0x881d, 0x0, 0x1);
        gbc.writeMem(0xde0, { 0xbe });
        gbc.writeMem(0x881d, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf893);
        EXPECT(gbc.pc(), 0xde1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881d), 0x88);
        // BE 03CD
        gbc.setState(0xca07, 0xb11d, 0x3d10, 0x4159, 0x513b, 0x987c, 0x0, 0x0);
        gbc.writeMem(0x987c, { 0xc6 });
        gbc.writeMem(0xca07, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb11d);
        EXPECT(gbc.pc(), 0xca08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x987c), 0xc6);
        EXPECT(gbc.readMem(0xca07), 0xbe);
        // BE 03CE
        gbc.setState(0xe9b2, 0x61d0, 0x9f20, 0x62c6, 0xb5d1, 0x16b5, 0x0, 0x1);
        gbc.writeMem(0x16b5, { 0x2 });
        gbc.writeMem(0xe9b2, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x61d0);
        EXPECT(gbc.pc(), 0xe9b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b2), 0xbe);
        // BE 03CF
        gbc.setState(0x1daa, 0x8120, 0xe00, 0x517a, 0x4323, 0x5a12, 0x0, 0x0);
        gbc.writeMem(0x1daa, { 0xbe });
        gbc.writeMem(0x5a12, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8120);
        EXPECT(gbc.pc(), 0x1dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BE 03D0
        gbc.setState(0x96f1, 0xdfde, 0x3020, 0xd0aa, 0x5cd6, 0xc989, 0x1, 0x1);
        gbc.writeMem(0x96f1, { 0xbe });
        gbc.writeMem(0xc989, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdfde);
        EXPECT(gbc.pc(), 0x96f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96f1), 0xbe);
        EXPECT(gbc.readMem(0xc989), 0xa);
        // BE 03D1
        gbc.setState(0xe177, 0xe87d, 0x3350, 0x155d, 0xc94, 0x2092, 0x0, 0x0);
        gbc.writeMem(0x2092, { 0x1e });
        gbc.writeMem(0xe177, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe87d);
        EXPECT(gbc.pc(), 0xe178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe177), 0xbe);
        // BE 03D2
        gbc.setState(0x21ba, 0xfa61, 0xf0f0, 0xe08a, 0xc928, 0x44d9, 0x0, 0x1);
        gbc.writeMem(0x21ba, { 0xbe });
        gbc.writeMem(0x44d9, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfa61);
        EXPECT(gbc.pc(), 0x21bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BE 03D3
        gbc.setState(0x67c0, 0xbacc, 0x990, 0x1ab8, 0xa5d, 0x8925, 0x1, 0x1);
        gbc.writeMem(0x67c0, { 0xbe });
        gbc.writeMem(0x8925, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbacc);
        EXPECT(gbc.pc(), 0x67c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8925), 0xcb);
        // BE 03D4
        gbc.setState(0xb0e3, 0x2699, 0x1d40, 0x2c15, 0x4eb1, 0x3ac4, 0x0, 0x1);
        gbc.writeMem(0x3ac4, { 0x6b });
        gbc.writeMem(0xb0e3, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2699);
        EXPECT(gbc.pc(), 0xb0e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e3), 0xbe);
        // BE 03D5
        gbc.setState(0xc40a, 0xdead, 0x4b40, 0xfc7b, 0x53f2, 0x832, 0x1, 0x1);
        gbc.writeMem(0x832, { 0x31 });
        gbc.writeMem(0xc40a, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdead);
        EXPECT(gbc.pc(), 0xc40b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc40a), 0xbe);
        // BE 03D6
        gbc.setState(0x4490, 0xa6f4, 0x7e0, 0x3ef, 0xc314, 0xed3b, 0x1, 0x0);
        gbc.writeMem(0x4490, { 0xbe });
        gbc.writeMem(0xed3b, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa6f4);
        EXPECT(gbc.pc(), 0x4491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed3b), 0x33);
        // BE 03D7
        gbc.setState(0x168, 0xdd69, 0x22f0, 0x93f3, 0xd7f8, 0xa4f4, 0x1, 0x0);
        gbc.writeMem(0x168, { 0xbe });
        gbc.writeMem(0xa4f4, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdd69);
        EXPECT(gbc.pc(), 0x169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4f4), 0xaf);
        // BE 03D8
        gbc.setState(0x767a, 0x5272, 0x25a0, 0xac1f, 0xf9ec, 0xab61, 0x0, 0x0);
        gbc.writeMem(0x767a, { 0xbe });
        gbc.writeMem(0xab61, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5272);
        EXPECT(gbc.pc(), 0x767b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab61), 0xb6);
        // BE 03D9
        gbc.setState(0xc819, 0x7044, 0x2900, 0x95f0, 0x10d1, 0x1c00, 0x1, 0x0);
        gbc.writeMem(0x1c00, { 0xb7 });
        gbc.writeMem(0xc819, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7044);
        EXPECT(gbc.pc(), 0xc81a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc819), 0xbe);
        // BE 03DA
        gbc.setState(0x846f, 0x37d2, 0xe0f0, 0x2c7b, 0xcfa0, 0xc992, 0x0, 0x1);
        gbc.writeMem(0x846f, { 0xbe });
        gbc.writeMem(0xc992, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x37d2);
        EXPECT(gbc.pc(), 0x8470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x846f), 0xbe);
        EXPECT(gbc.readMem(0xc992), 0x81);
        // BE 03DB
        gbc.setState(0xd632, 0x1c8a, 0xf160, 0x1750, 0x2695, 0x2731, 0x0, 0x0);
        gbc.writeMem(0x2731, { 0x1 });
        gbc.writeMem(0xd632, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1c8a);
        EXPECT(gbc.pc(), 0xd633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd632), 0xbe);
        // BE 03DC
        gbc.setState(0x898c, 0x915b, 0x27a0, 0x8ae8, 0xc40a, 0x8964, 0x1, 0x0);
        gbc.writeMem(0x8964, { 0x9a });
        gbc.writeMem(0x898c, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x915b);
        EXPECT(gbc.pc(), 0x898d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8964), 0x9a);
        EXPECT(gbc.readMem(0x898c), 0xbe);
        // BE 03DD
        gbc.setState(0x8843, 0x21ac, 0xaa0, 0x98b2, 0x8a5a, 0x5e86, 0x1, 0x0);
        gbc.writeMem(0x5e86, { 0x36 });
        gbc.writeMem(0x8843, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x21ac);
        EXPECT(gbc.pc(), 0x8844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8843), 0xbe);
        // BE 03DE
        gbc.setState(0x76d6, 0xb8af, 0x7750, 0xad30, 0x8805, 0xcb56, 0x1, 0x1);
        gbc.writeMem(0x76d6, { 0xbe });
        gbc.writeMem(0xcb56, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb8af);
        EXPECT(gbc.pc(), 0x76d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb56), 0x32);
        // BE 03DF
        gbc.setState(0xb106, 0x4b84, 0xf840, 0xf9f4, 0x7293, 0xda72, 0x1, 0x1);
        gbc.writeMem(0xb106, { 0xbe });
        gbc.writeMem(0xda72, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4b84);
        EXPECT(gbc.pc(), 0xb107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb106), 0xbe);
        EXPECT(gbc.readMem(0xda72), 0x6);
        // BE 03E0
        gbc.setState(0xb873, 0x7c64, 0x7260, 0x9783, 0x14d, 0xeb77, 0x1, 0x0);
        gbc.writeMem(0xb873, { 0xbe });
        gbc.writeMem(0xeb77, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7c64);
        EXPECT(gbc.pc(), 0xb874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb873), 0xbe);
        EXPECT(gbc.readMem(0xeb77), 0x7f);
        // BE 03E1
        gbc.setState(0x3191, 0x8fba, 0xa7f0, 0xcee3, 0x3e8e, 0xe90c, 0x0, 0x0);
        gbc.writeMem(0x3191, { 0xbe });
        gbc.writeMem(0xe90c, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8fba);
        EXPECT(gbc.pc(), 0x3192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe90c), 0x1);
        // BE 03E2
        gbc.setState(0x5597, 0xe3a9, 0x7f60, 0xe7a5, 0xc282, 0xfec2, 0x1, 0x1);
        gbc.writeMem(0x5597, { 0xbe });
        gbc.writeMem(0xfec2, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe3a9);
        EXPECT(gbc.pc(), 0x5598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfec2), 0xf2);
        // BE 03E3
        gbc.setState(0xb97f, 0xa9d, 0x7050, 0xcb4b, 0x6753, 0x60e8, 0x1, 0x1);
        gbc.writeMem(0x60e8, { 0xf4 });
        gbc.writeMem(0xb97f, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa9d);
        EXPECT(gbc.pc(), 0xb980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97f), 0xbe);
        // BE 03E4
        gbc.setState(0xecba, 0xeb2f, 0x3de0, 0x126f, 0x33c7, 0xecd8, 0x0, 0x1);
        gbc.writeMem(0xecba, { 0xbe });
        gbc.writeMem(0xecd8, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xeb2f);
        EXPECT(gbc.pc(), 0xecbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecba), 0xbe);
        EXPECT(gbc.readMem(0xecd8), 0x1a);
        // BE 03E5
        gbc.setState(0x3a62, 0x1a43, 0x4f70, 0x7264, 0xb018, 0x814d, 0x1, 0x0);
        gbc.writeMem(0x3a62, { 0xbe });
        gbc.writeMem(0x814d, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1a43);
        EXPECT(gbc.pc(), 0x3a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814d), 0x9d);
        // BE 03E6
        gbc.setState(0x68a0, 0x461c, 0x7dc0, 0x1582, 0x387b, 0xf0ae, 0x0, 0x1);
        gbc.writeMem(0x68a0, { 0xbe });
        gbc.writeMem(0xf0ae, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x461c);
        EXPECT(gbc.pc(), 0x68a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf0ae), 0x23);
        // BE 03E7
        gbc.setState(0x8b21, 0x10a7, 0xba90, 0x9c5d, 0x3673, 0xda56, 0x0, 0x1);
        gbc.writeMem(0x8b21, { 0xbe });
        gbc.writeMem(0xda56, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x10a7);
        EXPECT(gbc.pc(), 0x8b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b21), 0xbe);
        EXPECT(gbc.readMem(0xda56), 0xaa);
    }
