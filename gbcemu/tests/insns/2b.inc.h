    TEST(gbcemu, opcode_2b) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 2B 0000
        gbc.setState(0x3df0, 0xc4a4, 0x4d0, 0xc44c, 0x1b06, 0x4021, 0x0, 0x0);
        gbc.writeMem(0x3df0, { 0x2b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc4a4, gbc.sp());
        EXPECT(0x3df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0001
        gbc.setState(0x95d6, 0x2750, 0x14c0, 0x7a3a, 0x7caf, 0xd59b, 0x1, 0x0);
        gbc.writeMem(0x95d6, { 0x2b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2750, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x95d6));
        // 2B 0002
        gbc.setState(0x77b6, 0x4b80, 0x5be0, 0x9cbb, 0x971, 0x68fd, 0x1, 0x0);
        gbc.writeMem(0x77b6, { 0x2b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4b80, gbc.sp());
        EXPECT(0x77b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0003
        gbc.setState(0x43ea, 0x95ee, 0x5ff0, 0x716a, 0x52e2, 0xe4c7, 0x0, 0x0);
        gbc.writeMem(0x43ea, { 0x2b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x95ee, gbc.sp());
        EXPECT(0x43eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0004
        gbc.setState(0x4a57, 0xde24, 0x2890, 0xf1c4, 0x39b5, 0x7bc8, 0x0, 0x0);
        gbc.writeMem(0x4a57, { 0x2b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xde24, gbc.sp());
        EXPECT(0x4a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0005
        gbc.setState(0x5cda, 0x19b1, 0xa9b0, 0x2906, 0xe203, 0xf66a, 0x0, 0x1);
        gbc.writeMem(0x5cda, { 0x2b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x19b1, gbc.sp());
        EXPECT(0x5cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0006
        gbc.setState(0xc70e, 0xdd7a, 0xbea0, 0x5a81, 0x17d, 0x44d8, 0x1, 0x1);
        gbc.writeMem(0xc70e, { 0x2b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdd7a, gbc.sp());
        EXPECT(0xc70f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc70e));
        // 2B 0007
        gbc.setState(0x5327, 0x5465, 0x6520, 0xa34d, 0x3a45, 0x9795, 0x1, 0x1);
        gbc.writeMem(0x5327, { 0x2b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5465, gbc.sp());
        EXPECT(0x5328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0008
        gbc.setState(0x45b9, 0xe023, 0x7ca0, 0x7dbc, 0xc7c0, 0x7089, 0x0, 0x1);
        gbc.writeMem(0x45b9, { 0x2b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe023, gbc.sp());
        EXPECT(0x45ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0009
        gbc.setState(0xbfd9, 0x6dcf, 0x9a50, 0x891d, 0xc52b, 0x854b, 0x1, 0x1);
        gbc.writeMem(0xbfd9, { 0x2b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6dcf, gbc.sp());
        EXPECT(0xbfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbfd9));
        // 2B 000A
        gbc.setState(0x40ea, 0x9a0, 0xd8a0, 0xfa3c, 0x6090, 0xbd5c, 0x0, 0x0);
        gbc.writeMem(0x40ea, { 0x2b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9a0, gbc.sp());
        EXPECT(0x40eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 000B
        gbc.setState(0x4cae, 0xba33, 0xc4a0, 0xda8a, 0xa911, 0x5440, 0x1, 0x0);
        gbc.writeMem(0x4cae, { 0x2b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xba33, gbc.sp());
        EXPECT(0x4caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 000C
        gbc.setState(0xa6a8, 0x9abf, 0xe8f0, 0xecea, 0x4996, 0x8567, 0x1, 0x0);
        gbc.writeMem(0xa6a8, { 0x2b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9abf, gbc.sp());
        EXPECT(0xa6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa6a8));
        // 2B 000E
        gbc.setState(0x1d65, 0xfa73, 0x67a0, 0x7091, 0x5798, 0x4934, 0x0, 0x1);
        gbc.writeMem(0x1d65, { 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfa73, gbc.sp());
        EXPECT(0x1d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 000F
        gbc.setState(0x56e3, 0xa851, 0x48b0, 0x2f83, 0x1dc0, 0xc9f6, 0x0, 0x1);
        gbc.writeMem(0x56e3, { 0x2b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa851, gbc.sp());
        EXPECT(0x56e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0010
        gbc.setState(0xbb02, 0xe0ef, 0x870, 0xefa1, 0x6411, 0x26d2, 0x0, 0x0);
        gbc.writeMem(0xbb02, { 0x2b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe0ef, gbc.sp());
        EXPECT(0xbb03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbb02));
        // 2B 0011
        gbc.setState(0xd290, 0x69af, 0xea30, 0xddd8, 0xb926, 0xed68, 0x1, 0x1);
        gbc.writeMem(0xd290, { 0x2b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x69af, gbc.sp());
        EXPECT(0xd291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd290));
        // 2B 0012
        gbc.setState(0xc91c, 0xa3fb, 0x4820, 0x1616, 0x9eb7, 0x733b, 0x0, 0x1);
        gbc.writeMem(0xc91c, { 0x2b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa3fb, gbc.sp());
        EXPECT(0xc91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc91c));
        // 2B 0013
        gbc.setState(0x2fb0, 0x8625, 0x9710, 0xfe78, 0x3fc0, 0x8952, 0x0, 0x1);
        gbc.writeMem(0x2fb0, { 0x2b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8625, gbc.sp());
        EXPECT(0x2fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0014
        gbc.setState(0xb1de, 0x5a5d, 0x5b10, 0xd65b, 0x36b2, 0xf018, 0x1, 0x1);
        gbc.writeMem(0xb1de, { 0x2b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5a5d, gbc.sp());
        EXPECT(0xb1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb1de));
        // 2B 0015
        gbc.setState(0x844c, 0xd232, 0xbb80, 0xee99, 0xbbb4, 0x10f2, 0x0, 0x0);
        gbc.writeMem(0x844c, { 0x2b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd232, gbc.sp());
        EXPECT(0x844d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x844c));
        // 2B 0016
        gbc.setState(0x4b32, 0x318b, 0x1880, 0x3564, 0x28be, 0xfb73, 0x1, 0x0);
        gbc.writeMem(0x4b32, { 0x2b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x318b, gbc.sp());
        EXPECT(0x4b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0017
        gbc.setState(0x9fed, 0x99fb, 0x190, 0x9d39, 0x8e50, 0x84d, 0x0, 0x1);
        gbc.writeMem(0x9fed, { 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x99fb, gbc.sp());
        EXPECT(0x9fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9fed));
        // 2B 0018
        gbc.setState(0x4b2e, 0xa212, 0xf020, 0x676a, 0xae98, 0x14fb, 0x1, 0x0);
        gbc.writeMem(0x4b2e, { 0x2b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa212, gbc.sp());
        EXPECT(0x4b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0019
        gbc.setState(0xc44, 0x392e, 0xe180, 0xf213, 0xa8d4, 0x6248, 0x0, 0x1);
        gbc.writeMem(0xc44, { 0x2b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x392e, gbc.sp());
        EXPECT(0xc45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 001A
        gbc.setState(0x891f, 0x3505, 0xda40, 0x4dd, 0x44fd, 0x80be, 0x1, 0x1);
        gbc.writeMem(0x891f, { 0x2b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3505, gbc.sp());
        EXPECT(0x8920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x891f));
        // 2B 001B
        gbc.setState(0xb928, 0x54cd, 0x9410, 0xab66, 0x11c4, 0xf062, 0x1, 0x0);
        gbc.writeMem(0xb928, { 0x2b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x54cd, gbc.sp());
        EXPECT(0xb929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb928));
        // 2B 001C
        gbc.setState(0x8cf3, 0x86ea, 0x96d0, 0x2e67, 0x85f9, 0x767a, 0x0, 0x0);
        gbc.writeMem(0x8cf3, { 0x2b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x86ea, gbc.sp());
        EXPECT(0x8cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8cf3));
        // 2B 001D
        gbc.setState(0xf51, 0xe38e, 0xf390, 0x99c7, 0x853e, 0xcf73, 0x1, 0x0);
        gbc.writeMem(0xf51, { 0x2b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe38e, gbc.sp());
        EXPECT(0xf52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 001E
        gbc.setState(0xc5ac, 0x9f67, 0x710, 0x636a, 0x16e9, 0x7e53, 0x1, 0x0);
        gbc.writeMem(0xc5ac, { 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9f67, gbc.sp());
        EXPECT(0xc5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc5ac));
        // 2B 001F
        gbc.setState(0x70a6, 0xfe15, 0x8f40, 0x1de7, 0xfc2e, 0x946d, 0x0, 0x0);
        gbc.writeMem(0x70a6, { 0x2b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfe15, gbc.sp());
        EXPECT(0x70a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0020
        gbc.setState(0xcd01, 0x526e, 0x54c0, 0xaf9f, 0xe517, 0x7338, 0x0, 0x1);
        gbc.writeMem(0xcd01, { 0x2b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x526e, gbc.sp());
        EXPECT(0xcd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcd01));
        // 2B 0022
        gbc.setState(0x19a1, 0x8495, 0x32d0, 0xf3e1, 0x5cdd, 0xf522, 0x0, 0x1);
        gbc.writeMem(0x19a1, { 0x2b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8495, gbc.sp());
        EXPECT(0x19a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0023
        gbc.setState(0x53fd, 0x725a, 0x41e0, 0x1051, 0x414c, 0x823c, 0x0, 0x0);
        gbc.writeMem(0x53fd, { 0x2b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x725a, gbc.sp());
        EXPECT(0x53fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0024
        gbc.setState(0x6ecb, 0xe03b, 0x81d0, 0x4899, 0x3532, 0xfaa3, 0x1, 0x0);
        gbc.writeMem(0x6ecb, { 0x2b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe03b, gbc.sp());
        EXPECT(0x6ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0026
        gbc.setState(0x1595, 0xc2c8, 0xbc40, 0xb666, 0xbc60, 0x8ccd, 0x1, 0x1);
        gbc.writeMem(0x1595, { 0x2b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc2c8, gbc.sp());
        EXPECT(0x1596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0027
        gbc.setState(0x7ee2, 0xdd25, 0x2710, 0xf326, 0xbabf, 0x22e8, 0x0, 0x0);
        gbc.writeMem(0x7ee2, { 0x2b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdd25, gbc.sp());
        EXPECT(0x7ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0028
        gbc.setState(0x482c, 0x30e7, 0x55d0, 0x5856, 0x70c9, 0x863e, 0x1, 0x0);
        gbc.writeMem(0x482c, { 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x30e7, gbc.sp());
        EXPECT(0x482d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0029
        gbc.setState(0x1b45, 0xd434, 0x88b0, 0xc00d, 0x75ba, 0xe448, 0x0, 0x0);
        gbc.writeMem(0x1b45, { 0x2b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd434, gbc.sp());
        EXPECT(0x1b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 002A
        gbc.setState(0x4700, 0x91d2, 0x55f0, 0x7f5f, 0xb53c, 0xa3d9, 0x1, 0x0);
        gbc.writeMem(0x4700, { 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x91d2, gbc.sp());
        EXPECT(0x4701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 002B
        gbc.setState(0x823e, 0xc0e5, 0x6e90, 0x70da, 0x7ae7, 0xf343, 0x1, 0x1);
        gbc.writeMem(0x823e, { 0x2b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0x823f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x823e));
        // 2B 002D
        gbc.setState(0x5374, 0x8319, 0x71f0, 0x81d1, 0x9f2f, 0xee86, 0x0, 0x0);
        gbc.writeMem(0x5374, { 0x2b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8319, gbc.sp());
        EXPECT(0x5375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 002E
        gbc.setState(0x2e2f, 0x7698, 0x5e30, 0xf4dd, 0x6168, 0x2456, 0x1, 0x1);
        gbc.writeMem(0x2e2f, { 0x2b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7698, gbc.sp());
        EXPECT(0x2e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 002F
        gbc.setState(0xa25c, 0x85a3, 0xd990, 0x465a, 0x2e74, 0xdaa8, 0x0, 0x0);
        gbc.writeMem(0xa25c, { 0x2b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x85a3, gbc.sp());
        EXPECT(0xa25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa25c));
        // 2B 0030
        gbc.setState(0x3a56, 0x7d20, 0x5c90, 0x7e89, 0x988c, 0x47f9, 0x0, 0x1);
        gbc.writeMem(0x3a56, { 0x2b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7d20, gbc.sp());
        EXPECT(0x3a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0031
        gbc.setState(0xb6e3, 0x8ac9, 0x2e20, 0x4dd4, 0x7098, 0x2e66, 0x0, 0x1);
        gbc.writeMem(0xb6e3, { 0x2b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8ac9, gbc.sp());
        EXPECT(0xb6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb6e3));
        // 2B 0032
        gbc.setState(0xdd3, 0x6c56, 0x7360, 0xc19c, 0xd804, 0x15aa, 0x1, 0x1);
        gbc.writeMem(0xdd3, { 0x2b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6c56, gbc.sp());
        EXPECT(0xdd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0033
        gbc.setState(0x893f, 0xe3fd, 0x9390, 0x6e82, 0x5876, 0x18a8, 0x0, 0x0);
        gbc.writeMem(0x893f, { 0x2b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe3fd, gbc.sp());
        EXPECT(0x8940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x893f));
        // 2B 0034
        gbc.setState(0x51ea, 0xc81a, 0x5a10, 0x2c68, 0x65d6, 0x8544, 0x0, 0x1);
        gbc.writeMem(0x51ea, { 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc81a, gbc.sp());
        EXPECT(0x51eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0035
        gbc.setState(0x2447, 0xdf9a, 0xe030, 0x4f9d, 0x5bc6, 0x50f6, 0x1, 0x1);
        gbc.writeMem(0x2447, { 0x2b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdf9a, gbc.sp());
        EXPECT(0x2448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0036
        gbc.setState(0xc079, 0x4972, 0x8ae0, 0x291, 0x1f85, 0xc2d9, 0x0, 0x0);
        gbc.writeMem(0xc079, { 0x2b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4972, gbc.sp());
        EXPECT(0xc07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc079));
        // 2B 0038
        gbc.setState(0xda30, 0x6434, 0x4e0, 0xfb27, 0x4c31, 0x73af, 0x0, 0x1);
        gbc.writeMem(0xda30, { 0x2b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6434, gbc.sp());
        EXPECT(0xda31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xda30));
        // 2B 0039
        gbc.setState(0xd53, 0x63e, 0xe600, 0xbc3e, 0xab62, 0x74a4, 0x1, 0x0);
        gbc.writeMem(0xd53, { 0x2b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x63e, gbc.sp());
        EXPECT(0xd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 003A
        gbc.setState(0xb649, 0x62b7, 0x10a0, 0x7bfc, 0x8198, 0xa013, 0x0, 0x1);
        gbc.writeMem(0xb649, { 0x2b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x62b7, gbc.sp());
        EXPECT(0xb64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb649));
        // 2B 003B
        gbc.setState(0x60f0, 0x9d4f, 0x470, 0xd46d, 0x8510, 0x82cd, 0x1, 0x0);
        gbc.writeMem(0x60f0, { 0x2b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9d4f, gbc.sp());
        EXPECT(0x60f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 003C
        gbc.setState(0xada7, 0x2fbc, 0x2dd0, 0xdbb4, 0x94f4, 0x4564, 0x0, 0x1);
        gbc.writeMem(0xada7, { 0x2b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2fbc, gbc.sp());
        EXPECT(0xada8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xada7));
        // 2B 003D
        gbc.setState(0xc603, 0x4de7, 0xcf70, 0x4d91, 0x159e, 0x249a, 0x1, 0x0);
        gbc.writeMem(0xc603, { 0x2b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4de7, gbc.sp());
        EXPECT(0xc604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc603));
        // 2B 003E
        gbc.setState(0x53b8, 0xe5d0, 0x3410, 0x3ddf, 0xda06, 0x3131, 0x0, 0x1);
        gbc.writeMem(0x53b8, { 0x2b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe5d0, gbc.sp());
        EXPECT(0x53b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 003F
        gbc.setState(0x6506, 0xfc9d, 0xa7e0, 0x3488, 0xfa9e, 0x8547, 0x1, 0x1);
        gbc.writeMem(0x6506, { 0x2b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfc9d, gbc.sp());
        EXPECT(0x6507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0040
        gbc.setState(0x1cb6, 0x3dba, 0x93f0, 0x45b2, 0xc8b3, 0x7d51, 0x1, 0x0);
        gbc.writeMem(0x1cb6, { 0x2b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3dba, gbc.sp());
        EXPECT(0x1cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0041
        gbc.setState(0x8320, 0x6d43, 0x2dd0, 0x8d1, 0x85aa, 0x43d, 0x0, 0x1);
        gbc.writeMem(0x8320, { 0x2b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6d43, gbc.sp());
        EXPECT(0x8321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8320));
        // 2B 0042
        gbc.setState(0x827a, 0x778a, 0x5400, 0xad5a, 0xa409, 0x1564, 0x1, 0x0);
        gbc.writeMem(0x827a, { 0x2b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x778a, gbc.sp());
        EXPECT(0x827b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x827a));
        // 2B 0043
        gbc.setState(0x7798, 0xa7a9, 0x310, 0x3784, 0x3b3, 0x37e1, 0x1, 0x1);
        gbc.writeMem(0x7798, { 0x2b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa7a9, gbc.sp());
        EXPECT(0x7799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0044
        gbc.setState(0xcd68, 0x2d8, 0x83d0, 0x1522, 0xcecc, 0x315b, 0x0, 0x1);
        gbc.writeMem(0xcd68, { 0x2b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2d8, gbc.sp());
        EXPECT(0xcd69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcd68));
        // 2B 0045
        gbc.setState(0x8605, 0x10e3, 0xedd0, 0x6002, 0x7c71, 0xc63b, 0x0, 0x1);
        gbc.writeMem(0x8605, { 0x2b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x10e3, gbc.sp());
        EXPECT(0x8606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8605));
        // 2B 0046
        gbc.setState(0xb7ec, 0x93eb, 0x26c0, 0xdb4f, 0x46b7, 0x97d4, 0x1, 0x1);
        gbc.writeMem(0xb7ec, { 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x93eb, gbc.sp());
        EXPECT(0xb7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb7ec));
        // 2B 0048
        gbc.setState(0xc12c, 0x88b8, 0x3180, 0x696e, 0x25c8, 0x10bf, 0x0, 0x1);
        gbc.writeMem(0xc12c, { 0x2b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x88b8, gbc.sp());
        EXPECT(0xc12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc12c));
        // 2B 0049
        gbc.setState(0xe2af, 0xb22c, 0xf370, 0x7695, 0x4e38, 0x689a, 0x0, 0x1);
        gbc.writeMem(0xe2af, { 0x2b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb22c, gbc.sp());
        EXPECT(0xe2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe2af));
        // 2B 004A
        gbc.setState(0x237, 0x9fae, 0x86a0, 0xe72b, 0x9b6f, 0x935f, 0x0, 0x0);
        gbc.writeMem(0x237, { 0x2b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9fae, gbc.sp());
        EXPECT(0x238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 004B
        gbc.setState(0x47dd, 0x2d09, 0x4e30, 0x27fc, 0xcd2, 0x6f6b, 0x1, 0x0);
        gbc.writeMem(0x47dd, { 0x2b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2d09, gbc.sp());
        EXPECT(0x47de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 004C
        gbc.setState(0x7b7c, 0xb7c2, 0x71a0, 0xb512, 0xcaac, 0xfeeb, 0x0, 0x1);
        gbc.writeMem(0x7b7c, { 0x2b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb7c2, gbc.sp());
        EXPECT(0x7b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 004D
        gbc.setState(0x31ef, 0xafd0, 0x6940, 0x49a8, 0x3410, 0x5dbf, 0x0, 0x0);
        gbc.writeMem(0x31ef, { 0x2b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xafd0, gbc.sp());
        EXPECT(0x31f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 004E
        gbc.setState(0x6471, 0xcba6, 0xf680, 0xd36, 0xc299, 0x4bfe, 0x0, 0x1);
        gbc.writeMem(0x6471, { 0x2b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcba6, gbc.sp());
        EXPECT(0x6472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 004F
        gbc.setState(0x74b, 0xb629, 0x7890, 0x25fd, 0xe578, 0xd6c, 0x0, 0x0);
        gbc.writeMem(0x74b, { 0x2b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb629, gbc.sp());
        EXPECT(0x74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0051
        gbc.setState(0x7665, 0xf423, 0x1ba0, 0xeda5, 0x64ca, 0x3c3c, 0x0, 0x0);
        gbc.writeMem(0x7665, { 0x2b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf423, gbc.sp());
        EXPECT(0x7666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0052
        gbc.setState(0x6276, 0x7357, 0xb00, 0xf026, 0x1f86, 0xf911, 0x1, 0x0);
        gbc.writeMem(0x6276, { 0x2b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7357, gbc.sp());
        EXPECT(0x6277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0053
        gbc.setState(0x216c, 0xe056, 0x5680, 0xb2a4, 0x9ed2, 0x59c8, 0x1, 0x0);
        gbc.writeMem(0x216c, { 0x2b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe056, gbc.sp());
        EXPECT(0x216d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0054
        gbc.setState(0x432b, 0x40c7, 0x6ac0, 0x2bfe, 0xb2e5, 0x37f, 0x0, 0x0);
        gbc.writeMem(0x432b, { 0x2b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x40c7, gbc.sp());
        EXPECT(0x432c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0055
        gbc.setState(0x379b, 0x3189, 0xe660, 0x6680, 0x34ad, 0xbd84, 0x1, 0x1);
        gbc.writeMem(0x379b, { 0x2b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3189, gbc.sp());
        EXPECT(0x379c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0056
        gbc.setState(0xd852, 0x8f6a, 0x80b0, 0xa50c, 0x3563, 0xd4c, 0x0, 0x1);
        gbc.writeMem(0xd852, { 0x2b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8f6a, gbc.sp());
        EXPECT(0xd853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd852));
        // 2B 0057
        gbc.setState(0x77a0, 0xfe0f, 0x6710, 0xdaee, 0xe252, 0xb01, 0x1, 0x1);
        gbc.writeMem(0x77a0, { 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfe0f, gbc.sp());
        EXPECT(0x77a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0058
        gbc.setState(0x2012, 0x106c, 0x98f0, 0x5f0f, 0x5a24, 0x1161, 0x0, 0x1);
        gbc.writeMem(0x2012, { 0x2b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x106c, gbc.sp());
        EXPECT(0x2013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0059
        gbc.setState(0xd041, 0x88f5, 0xc700, 0x83a8, 0xb855, 0x9588, 0x1, 0x1);
        gbc.writeMem(0xd041, { 0x2b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x88f5, gbc.sp());
        EXPECT(0xd042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd041));
        // 2B 005A
        gbc.setState(0x5cf6, 0x4ddb, 0xd1a0, 0x66cd, 0xde39, 0x618f, 0x0, 0x0);
        gbc.writeMem(0x5cf6, { 0x2b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4ddb, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 005B
        gbc.setState(0xb923, 0x6be0, 0xefa0, 0x9bc1, 0xe112, 0x4362, 0x1, 0x0);
        gbc.writeMem(0xb923, { 0x2b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6be0, gbc.sp());
        EXPECT(0xb924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb923));
        // 2B 005C
        gbc.setState(0x8ad0, 0x4dd, 0x1cb0, 0x64e5, 0x447c, 0xd84d, 0x1, 0x1);
        gbc.writeMem(0x8ad0, { 0x2b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4dd, gbc.sp());
        EXPECT(0x8ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8ad0));
        // 2B 005D
        gbc.setState(0x9817, 0x696a, 0xe9b0, 0xed5a, 0x6519, 0x3224, 0x0, 0x1);
        gbc.writeMem(0x9817, { 0x2b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x696a, gbc.sp());
        EXPECT(0x9818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9817));
        // 2B 005E
        gbc.setState(0x97d6, 0x109b, 0x8190, 0x6fb9, 0x9412, 0xabb0, 0x0, 0x0);
        gbc.writeMem(0x97d6, { 0x2b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x109b, gbc.sp());
        EXPECT(0x97d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x97d6));
        // 2B 005F
        gbc.setState(0x2d48, 0xe9d3, 0x8270, 0x89d9, 0xa504, 0x1c0b, 0x1, 0x0);
        gbc.writeMem(0x2d48, { 0x2b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe9d3, gbc.sp());
        EXPECT(0x2d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0060
        gbc.setState(0x3f3e, 0x7f37, 0x96c0, 0xa24a, 0xdbad, 0xd819, 0x1, 0x1);
        gbc.writeMem(0x3f3e, { 0x2b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7f37, gbc.sp());
        EXPECT(0x3f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0061
        gbc.setState(0x69cc, 0x35c1, 0x1f30, 0xec0c, 0xb2aa, 0x47ee, 0x0, 0x1);
        gbc.writeMem(0x69cc, { 0x2b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x35c1, gbc.sp());
        EXPECT(0x69cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0062
        gbc.setState(0x7289, 0xf014, 0x8850, 0x5024, 0xc1ac, 0x7a90, 0x1, 0x0);
        gbc.writeMem(0x7289, { 0x2b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf014, gbc.sp());
        EXPECT(0x728a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0063
        gbc.setState(0xdcca, 0x643f, 0xda50, 0xc8ae, 0xd675, 0x16cd, 0x1, 0x0);
        gbc.writeMem(0xdcca, { 0x2b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x643f, gbc.sp());
        EXPECT(0xdccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdcca));
        // 2B 0064
        gbc.setState(0x28c6, 0xa98e, 0xe6b0, 0x852f, 0xf602, 0xb472, 0x0, 0x0);
        gbc.writeMem(0x28c6, { 0x2b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa98e, gbc.sp());
        EXPECT(0x28c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0065
        gbc.setState(0xd965, 0xecfd, 0xce40, 0x9a11, 0x4332, 0x8716, 0x0, 0x0);
        gbc.writeMem(0xd965, { 0x2b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xecfd, gbc.sp());
        EXPECT(0xd966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd965));
        // 2B 0066
        gbc.setState(0x8369, 0xc2c8, 0x6c60, 0x845, 0x1bdf, 0x1f7c, 0x1, 0x0);
        gbc.writeMem(0x8369, { 0x2b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc2c8, gbc.sp());
        EXPECT(0x836a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8369));
        // 2B 0067
        gbc.setState(0xb148, 0xa348, 0x1890, 0xdb37, 0x16ab, 0xc356, 0x1, 0x1);
        gbc.writeMem(0xb148, { 0x2b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa348, gbc.sp());
        EXPECT(0xb149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb148));
        // 2B 0068
        gbc.setState(0x3217, 0x4ec7, 0x4240, 0x8f5e, 0xfbe8, 0x9306, 0x0, 0x0);
        gbc.writeMem(0x3217, { 0x2b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4ec7, gbc.sp());
        EXPECT(0x3218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0069
        gbc.setState(0x4d35, 0x9ece, 0x6720, 0xf509, 0xced8, 0x2bae, 0x1, 0x1);
        gbc.writeMem(0x4d35, { 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9ece, gbc.sp());
        EXPECT(0x4d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 006A
        gbc.setState(0x3c72, 0x4f0, 0x37f0, 0xa099, 0x2b86, 0xc264, 0x0, 0x1);
        gbc.writeMem(0x3c72, { 0x2b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4f0, gbc.sp());
        EXPECT(0x3c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 006B
        gbc.setState(0x4970, 0xe1b, 0xff50, 0x47a3, 0xdd5c, 0x28d6, 0x0, 0x1);
        gbc.writeMem(0x4970, { 0x2b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe1b, gbc.sp());
        EXPECT(0x4971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 006C
        gbc.setState(0x7dac, 0x711b, 0xa540, 0xd2d1, 0x7312, 0xa59e, 0x1, 0x1);
        gbc.writeMem(0x7dac, { 0x2b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x711b, gbc.sp());
        EXPECT(0x7dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 006D
        gbc.setState(0x5203, 0xbc92, 0xef40, 0xdc0d, 0xbfc3, 0x713, 0x1, 0x1);
        gbc.writeMem(0x5203, { 0x2b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbc92, gbc.sp());
        EXPECT(0x5204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 006E
        gbc.setState(0x7cf1, 0xfda9, 0x430, 0xc8c0, 0x989e, 0x6c07, 0x0, 0x0);
        gbc.writeMem(0x7cf1, { 0x2b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfda9, gbc.sp());
        EXPECT(0x7cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0070
        gbc.setState(0x91c2, 0x65df, 0x6e00, 0x2396, 0x1833, 0x8454, 0x0, 0x0);
        gbc.writeMem(0x91c2, { 0x2b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x65df, gbc.sp());
        EXPECT(0x91c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x91c2));
        // 2B 0071
        gbc.setState(0x345b, 0x830b, 0xc70, 0xb072, 0x78d1, 0xced, 0x0, 0x1);
        gbc.writeMem(0x345b, { 0x2b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x830b, gbc.sp());
        EXPECT(0x345c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0072
        gbc.setState(0xc731, 0x8eea, 0x60d0, 0xc469, 0xdd32, 0xc3ab, 0x1, 0x0);
        gbc.writeMem(0xc731, { 0x2b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8eea, gbc.sp());
        EXPECT(0xc732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc731));
        // 2B 0073
        gbc.setState(0x97e9, 0x96aa, 0x8290, 0x7e6e, 0xad52, 0x5726, 0x1, 0x0);
        gbc.writeMem(0x97e9, { 0x2b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x96aa, gbc.sp());
        EXPECT(0x97ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x97e9));
        // 2B 0074
        gbc.setState(0x5fc8, 0x9860, 0xf6d0, 0x8c4d, 0x118d, 0xf44b, 0x1, 0x0);
        gbc.writeMem(0x5fc8, { 0x2b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9860, gbc.sp());
        EXPECT(0x5fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0075
        gbc.setState(0x18f2, 0xef1b, 0xaaa0, 0x6212, 0xbbfb, 0x671, 0x0, 0x1);
        gbc.writeMem(0x18f2, { 0x2b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xef1b, gbc.sp());
        EXPECT(0x18f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0077
        gbc.setState(0x8e72, 0xe061, 0x20f0, 0xfba5, 0x900c, 0xfd72, 0x0, 0x1);
        gbc.writeMem(0x8e72, { 0x2b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe061, gbc.sp());
        EXPECT(0x8e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8e72));
        // 2B 0078
        gbc.setState(0x4d64, 0x63fb, 0xa20, 0x98bb, 0x9337, 0x6d0f, 0x1, 0x1);
        gbc.writeMem(0x4d64, { 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x63fb, gbc.sp());
        EXPECT(0x4d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0079
        gbc.setState(0x9da, 0x4f60, 0x1c60, 0xf73, 0x8cf4, 0x3c17, 0x1, 0x0);
        gbc.writeMem(0x9da, { 0x2b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4f60, gbc.sp());
        EXPECT(0x9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 007A
        gbc.setState(0x2d33, 0x45ac, 0x8d70, 0xa8fe, 0xa1a7, 0xcfa3, 0x0, 0x0);
        gbc.writeMem(0x2d33, { 0x2b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x45ac, gbc.sp());
        EXPECT(0x2d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 007B
        gbc.setState(0xc20f, 0x7996, 0xc7c0, 0xfd2, 0x103c, 0xbbae, 0x0, 0x0);
        gbc.writeMem(0xc20f, { 0x2b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7996, gbc.sp());
        EXPECT(0xc210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc20f));
        // 2B 007C
        gbc.setState(0x2374, 0x23b, 0xb7f0, 0xf16a, 0x3e7e, 0xf551, 0x0, 0x0);
        gbc.writeMem(0x2374, { 0x2b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x23b, gbc.sp());
        EXPECT(0x2375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 007D
        gbc.setState(0x7816, 0xe1c1, 0x6b10, 0x1a71, 0xdec3, 0x3345, 0x1, 0x1);
        gbc.writeMem(0x7816, { 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe1c1, gbc.sp());
        EXPECT(0x7817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 007E
        gbc.setState(0xbba2, 0x787a, 0xcb40, 0x2e5c, 0xbd1, 0x817f, 0x1, 0x1);
        gbc.writeMem(0xbba2, { 0x2b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x787a, gbc.sp());
        EXPECT(0xbba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbba2));
        // 2B 007F
        gbc.setState(0x5c99, 0x25c6, 0xdf80, 0x2de1, 0x8f9a, 0xe6a2, 0x0, 0x1);
        gbc.writeMem(0x5c99, { 0x2b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x25c6, gbc.sp());
        EXPECT(0x5c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0081
        gbc.setState(0x6200, 0x3a14, 0x3070, 0xdaf2, 0x3aca, 0x5720, 0x0, 0x1);
        gbc.writeMem(0x6200, { 0x2b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3a14, gbc.sp());
        EXPECT(0x6201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0082
        gbc.setState(0x26e6, 0x4199, 0xb520, 0x2634, 0xae57, 0x2352, 0x1, 0x0);
        gbc.writeMem(0x26e6, { 0x2b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4199, gbc.sp());
        EXPECT(0x26e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0083
        gbc.setState(0xe151, 0xb95d, 0x5f10, 0x63fe, 0x2529, 0x5867, 0x0, 0x0);
        gbc.writeMem(0xe151, { 0x2b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb95d, gbc.sp());
        EXPECT(0xe152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe151));
        // 2B 0084
        gbc.setState(0x4c0a, 0x30b9, 0x17c0, 0xa121, 0x58fc, 0xe31e, 0x1, 0x1);
        gbc.writeMem(0x4c0a, { 0x2b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x30b9, gbc.sp());
        EXPECT(0x4c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0085
        gbc.setState(0x2067, 0x411e, 0xff00, 0x6936, 0x2056, 0x5a95, 0x0, 0x1);
        gbc.writeMem(0x2067, { 0x2b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x411e, gbc.sp());
        EXPECT(0x2068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0086
        gbc.setState(0x1b9, 0xa4a6, 0xc7f0, 0x164d, 0x231a, 0xd245, 0x1, 0x1);
        gbc.writeMem(0x1b9, { 0x2b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa4a6, gbc.sp());
        EXPECT(0x1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0087
        gbc.setState(0x2cc5, 0xa3ff, 0x3920, 0x67af, 0x62ed, 0x41f9, 0x1, 0x0);
        gbc.writeMem(0x2cc5, { 0x2b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa3ff, gbc.sp());
        EXPECT(0x2cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0088
        gbc.setState(0x3038, 0x6521, 0x7900, 0x26a2, 0xb232, 0xfd2e, 0x0, 0x1);
        gbc.writeMem(0x3038, { 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6521, gbc.sp());
        EXPECT(0x3039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 008A
        gbc.setState(0xcdb9, 0x4ad6, 0x2850, 0x188a, 0xc0b5, 0x6e7f, 0x1, 0x0);
        gbc.writeMem(0xcdb9, { 0x2b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4ad6, gbc.sp());
        EXPECT(0xcdba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcdb9));
        // 2B 008B
        gbc.setState(0x54ce, 0x65c, 0x4630, 0xc65, 0xeca3, 0x57a4, 0x0, 0x1);
        gbc.writeMem(0x54ce, { 0x2b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x65c, gbc.sp());
        EXPECT(0x54cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 008C
        gbc.setState(0x2276, 0xff31, 0x5390, 0xed34, 0x9909, 0x7987, 0x1, 0x1);
        gbc.writeMem(0x2276, { 0x2b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xff31, gbc.sp());
        EXPECT(0x2277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 008D
        gbc.setState(0x4c5b, 0x7a97, 0xd0d0, 0xf80a, 0x581f, 0x3959, 0x0, 0x0);
        gbc.writeMem(0x4c5b, { 0x2b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7a97, gbc.sp());
        EXPECT(0x4c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 008E
        gbc.setState(0xae68, 0xa32d, 0x4b70, 0x3626, 0xadc3, 0x407b, 0x1, 0x1);
        gbc.writeMem(0xae68, { 0x2b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa32d, gbc.sp());
        EXPECT(0xae69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xae68));
        // 2B 008F
        gbc.setState(0x42ae, 0x610e, 0xe2f0, 0xf07e, 0xb5e, 0xf8c7, 0x1, 0x1);
        gbc.writeMem(0x42ae, { 0x2b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x610e, gbc.sp());
        EXPECT(0x42af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0090
        gbc.setState(0x460, 0x2d61, 0xf380, 0x5029, 0x9c36, 0x76f7, 0x0, 0x0);
        gbc.writeMem(0x460, { 0x2b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2d61, gbc.sp());
        EXPECT(0x461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0091
        gbc.setState(0x2aed, 0xdc78, 0x7fc0, 0xb013, 0xf16a, 0x4703, 0x1, 0x1);
        gbc.writeMem(0x2aed, { 0x2b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdc78, gbc.sp());
        EXPECT(0x2aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0092
        gbc.setState(0xbbd, 0xa7ed, 0x7a70, 0xd08d, 0x8d32, 0xb9de, 0x0, 0x1);
        gbc.writeMem(0xbbd, { 0x2b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa7ed, gbc.sp());
        EXPECT(0xbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0094
        gbc.setState(0xe520, 0xc34d, 0x38e0, 0x555, 0xab2e, 0x6087, 0x0, 0x1);
        gbc.writeMem(0xe520, { 0x2b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc34d, gbc.sp());
        EXPECT(0xe521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe520));
        // 2B 0095
        gbc.setState(0x8e42, 0xfddb, 0xf240, 0x6ddf, 0x1a5a, 0xb289, 0x0, 0x0);
        gbc.writeMem(0x8e42, { 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfddb, gbc.sp());
        EXPECT(0x8e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8e42));
        // 2B 0096
        gbc.setState(0x1ec8, 0xf401, 0x9d30, 0x30ce, 0xd8cc, 0x7af5, 0x0, 0x1);
        gbc.writeMem(0x1ec8, { 0x2b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf401, gbc.sp());
        EXPECT(0x1ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0097
        gbc.setState(0x54db, 0x165e, 0xcdb0, 0x76d, 0xd360, 0x7874, 0x1, 0x1);
        gbc.writeMem(0x54db, { 0x2b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x165e, gbc.sp());
        EXPECT(0x54dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0098
        gbc.setState(0x7487, 0x8ffc, 0x4940, 0xc00b, 0x2584, 0x2e81, 0x1, 0x1);
        gbc.writeMem(0x7487, { 0x2b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8ffc, gbc.sp());
        EXPECT(0x7488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0099
        gbc.setState(0x6770, 0x9a, 0x4f40, 0x1161, 0xcaaa, 0x9ace, 0x1, 0x1);
        gbc.writeMem(0x6770, { 0x2b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9a, gbc.sp());
        EXPECT(0x6771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 009A
        gbc.setState(0x3893, 0x465, 0x4f00, 0x6917, 0xc1bd, 0x29b5, 0x0, 0x0);
        gbc.writeMem(0x3893, { 0x2b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x465, gbc.sp());
        EXPECT(0x3894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 009B
        gbc.setState(0x3fd7, 0x9424, 0x4b50, 0x4291, 0x1be1, 0x597d, 0x1, 0x1);
        gbc.writeMem(0x3fd7, { 0x2b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9424, gbc.sp());
        EXPECT(0x3fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 009C
        gbc.setState(0x8a46, 0xfc49, 0x7a70, 0xa0f6, 0x7288, 0xb857, 0x1, 0x1);
        gbc.writeMem(0x8a46, { 0x2b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfc49, gbc.sp());
        EXPECT(0x8a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8a46));
        // 2B 009D
        gbc.setState(0x29ba, 0x73c1, 0x1700, 0x773c, 0x9212, 0x479e, 0x0, 0x0);
        gbc.writeMem(0x29ba, { 0x2b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x73c1, gbc.sp());
        EXPECT(0x29bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 009E
        gbc.setState(0x8894, 0x7ca9, 0x7cb0, 0xb36a, 0xf6cf, 0x56cc, 0x1, 0x0);
        gbc.writeMem(0x8894, { 0x2b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7ca9, gbc.sp());
        EXPECT(0x8895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8894));
        // 2B 009F
        gbc.setState(0x90bb, 0x5df5, 0x5df0, 0x4f79, 0x8827, 0x6767, 0x0, 0x0);
        gbc.writeMem(0x90bb, { 0x2b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5df5, gbc.sp());
        EXPECT(0x90bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x90bb));
        // 2B 00A0
        gbc.setState(0x77f1, 0xbc8b, 0x96e0, 0x83fc, 0xf47, 0xc88f, 0x0, 0x1);
        gbc.writeMem(0x77f1, { 0x2b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbc8b, gbc.sp());
        EXPECT(0x77f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00A1
        gbc.setState(0x3baf, 0x3ca7, 0x86a0, 0x1ad8, 0x7e42, 0xaa2, 0x0, 0x0);
        gbc.writeMem(0x3baf, { 0x2b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3ca7, gbc.sp());
        EXPECT(0x3bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00A2
        gbc.setState(0x2370, 0x1714, 0xf620, 0xd231, 0x1ea6, 0x40e0, 0x0, 0x1);
        gbc.writeMem(0x2370, { 0x2b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1714, gbc.sp());
        EXPECT(0x2371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00A3
        gbc.setState(0xce57, 0xdfe4, 0x8bc0, 0x59a5, 0x257b, 0x4eb4, 0x0, 0x1);
        gbc.writeMem(0xce57, { 0x2b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdfe4, gbc.sp());
        EXPECT(0xce58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xce57));
        // 2B 00A4
        gbc.setState(0x6292, 0x7a68, 0xe440, 0xa2e4, 0x5a23, 0xcab0, 0x1, 0x1);
        gbc.writeMem(0x6292, { 0x2b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7a68, gbc.sp());
        EXPECT(0x6293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00A5
        gbc.setState(0x80c3, 0xd1e6, 0xdb80, 0xeb2f, 0x6a95, 0x24c3, 0x0, 0x1);
        gbc.writeMem(0x80c3, { 0x2b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd1e6, gbc.sp());
        EXPECT(0x80c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x80c3));
        // 2B 00A6
        gbc.setState(0x6041, 0xe5a1, 0x5530, 0x19ad, 0xbe3c, 0x271a, 0x1, 0x1);
        gbc.writeMem(0x6041, { 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe5a1, gbc.sp());
        EXPECT(0x6042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00A7
        gbc.setState(0xca04, 0xd48c, 0x5a80, 0x318a, 0x1ce4, 0xd6e4, 0x1, 0x0);
        gbc.writeMem(0xca04, { 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd48c, gbc.sp());
        EXPECT(0xca05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xca04));
        // 2B 00A8
        gbc.setState(0xdf31, 0xc1ac, 0xe840, 0x1470, 0xa054, 0x342b, 0x0, 0x0);
        gbc.writeMem(0xdf31, { 0x2b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc1ac, gbc.sp());
        EXPECT(0xdf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdf31));
        // 2B 00A9
        gbc.setState(0x73f7, 0xf45a, 0x6c70, 0xf18b, 0xf9f3, 0xd3c8, 0x1, 0x1);
        gbc.writeMem(0x73f7, { 0x2b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf45a, gbc.sp());
        EXPECT(0x73f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00AA
        gbc.setState(0x412a, 0x17b, 0x170, 0x7c7a, 0x88a1, 0x8daa, 0x0, 0x0);
        gbc.writeMem(0x412a, { 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x17b, gbc.sp());
        EXPECT(0x412b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00AB
        gbc.setState(0xed7, 0xe0b5, 0xa7e0, 0x2b2b, 0x8ce8, 0xd09e, 0x1, 0x1);
        gbc.writeMem(0xed7, { 0x2b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe0b5, gbc.sp());
        EXPECT(0xed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00AC
        gbc.setState(0xa439, 0x9d69, 0x5a80, 0x88b3, 0xb469, 0xb6ee, 0x1, 0x1);
        gbc.writeMem(0xa439, { 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9d69, gbc.sp());
        EXPECT(0xa43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa439));
        // 2B 00AD
        gbc.setState(0x5f5d, 0x4c6c, 0xca10, 0x8dff, 0x926a, 0xee05, 0x0, 0x1);
        gbc.writeMem(0x5f5d, { 0x2b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4c6c, gbc.sp());
        EXPECT(0x5f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00AE
        gbc.setState(0x8309, 0xb734, 0x2490, 0x95cb, 0xee3f, 0x6905, 0x0, 0x0);
        gbc.writeMem(0x8309, { 0x2b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb734, gbc.sp());
        EXPECT(0x830a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8309));
        // 2B 00AF
        gbc.setState(0xe918, 0xd5ee, 0x8110, 0xde78, 0x1fe7, 0xfe9f, 0x1, 0x1);
        gbc.writeMem(0xe918, { 0x2b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd5ee, gbc.sp());
        EXPECT(0xe919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe918));
        // 2B 00B0
        gbc.setState(0x43e, 0x402e, 0x8c00, 0x3a2, 0xea18, 0x8642, 0x0, 0x1);
        gbc.writeMem(0x43e, { 0x2b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x402e, gbc.sp());
        EXPECT(0x43f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00B1
        gbc.setState(0x4ddc, 0xf5c8, 0x1a10, 0xc6e5, 0x46a5, 0x6721, 0x1, 0x0);
        gbc.writeMem(0x4ddc, { 0x2b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf5c8, gbc.sp());
        EXPECT(0x4ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00B2
        gbc.setState(0x4836, 0x2d6b, 0x5980, 0xdd99, 0xcd56, 0x5ff3, 0x1, 0x0);
        gbc.writeMem(0x4836, { 0x2b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2d6b, gbc.sp());
        EXPECT(0x4837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00B3
        gbc.setState(0xc612, 0xf27, 0xfb00, 0xebef, 0x534d, 0xd4e3, 0x1, 0x1);
        gbc.writeMem(0xc612, { 0x2b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf27, gbc.sp());
        EXPECT(0xc613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc612));
        // 2B 00B4
        gbc.setState(0x300f, 0x3925, 0x4a20, 0x1842, 0x6b2a, 0xbfb8, 0x1, 0x0);
        gbc.writeMem(0x300f, { 0x2b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3925, gbc.sp());
        EXPECT(0x3010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00B5
        gbc.setState(0x2b0f, 0xaec8, 0xbf40, 0xb765, 0x3008, 0x40b0, 0x1, 0x0);
        gbc.writeMem(0x2b0f, { 0x2b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaec8, gbc.sp());
        EXPECT(0x2b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00B7
        gbc.setState(0xe62f, 0x73ff, 0x320, 0xeba2, 0xf73d, 0x44bc, 0x0, 0x1);
        gbc.writeMem(0xe62f, { 0x2b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x73ff, gbc.sp());
        EXPECT(0xe630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe62f));
        // 2B 00B8
        gbc.setState(0xb067, 0xea5d, 0x7430, 0xd72f, 0x237f, 0x75c7, 0x1, 0x0);
        gbc.writeMem(0xb067, { 0x2b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xea5d, gbc.sp());
        EXPECT(0xb068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb067));
        // 2B 00B9
        gbc.setState(0x419d, 0xc370, 0xe990, 0xdb94, 0x4a93, 0xb0d6, 0x0, 0x1);
        gbc.writeMem(0x419d, { 0x2b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc370, gbc.sp());
        EXPECT(0x419e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00BA
        gbc.setState(0x5cd, 0xf9bd, 0x8020, 0xff61, 0x61ea, 0x118c, 0x1, 0x0);
        gbc.writeMem(0x5cd, { 0x2b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf9bd, gbc.sp());
        EXPECT(0x5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00BB
        gbc.setState(0xaba8, 0x5755, 0xdae0, 0x5665, 0x22fa, 0x8fc5, 0x0, 0x0);
        gbc.writeMem(0xaba8, { 0x2b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5755, gbc.sp());
        EXPECT(0xaba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaba8));
        // 2B 00BC
        gbc.setState(0x61a7, 0x74cb, 0x79b0, 0xb5a1, 0x951b, 0xbf3d, 0x1, 0x1);
        gbc.writeMem(0x61a7, { 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x74cb, gbc.sp());
        EXPECT(0x61a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00BD
        gbc.setState(0xaa23, 0x78c6, 0x2130, 0xde9c, 0x6406, 0x2541, 0x0, 0x0);
        gbc.writeMem(0xaa23, { 0x2b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x78c6, gbc.sp());
        EXPECT(0xaa24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaa23));
        // 2B 00BE
        gbc.setState(0xaa20, 0xa998, 0x3bb0, 0x93f7, 0x8339, 0x990c, 0x1, 0x1);
        gbc.writeMem(0xaa20, { 0x2b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa998, gbc.sp());
        EXPECT(0xaa21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaa20));
        // 2B 00BF
        gbc.setState(0x18b0, 0x1f31, 0xf8e0, 0x752c, 0x73d0, 0xa7e1, 0x0, 0x1);
        gbc.writeMem(0x18b0, { 0x2b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1f31, gbc.sp());
        EXPECT(0x18b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00C0
        gbc.setState(0xadb, 0x50df, 0xb0c0, 0x25e4, 0xfb63, 0x661b, 0x1, 0x0);
        gbc.writeMem(0xadb, { 0x2b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x50df, gbc.sp());
        EXPECT(0xadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00C1
        gbc.setState(0xbf51, 0x7ec8, 0x3710, 0xb306, 0x66ab, 0xfe8b, 0x0, 0x1);
        gbc.writeMem(0xbf51, { 0x2b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7ec8, gbc.sp());
        EXPECT(0xbf52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbf51));
        // 2B 00C2
        gbc.setState(0x3947, 0xc350, 0x2610, 0xcebd, 0x67de, 0x6073, 0x0, 0x1);
        gbc.writeMem(0x3947, { 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc350, gbc.sp());
        EXPECT(0x3948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00C3
        gbc.setState(0x8ea8, 0xf558, 0xe9f0, 0xc9e2, 0xbafa, 0x9cfc, 0x1, 0x1);
        gbc.writeMem(0x8ea8, { 0x2b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf558, gbc.sp());
        EXPECT(0x8ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8ea8));
        // 2B 00C4
        gbc.setState(0xe337, 0x4938, 0x1680, 0x54ac, 0x52a0, 0xa842, 0x1, 0x0);
        gbc.writeMem(0xe337, { 0x2b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4938, gbc.sp());
        EXPECT(0xe338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe337));
        // 2B 00C6
        gbc.setState(0x1eeb, 0x68e2, 0x7610, 0x6c8d, 0xa184, 0xe47c, 0x1, 0x1);
        gbc.writeMem(0x1eeb, { 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x68e2, gbc.sp());
        EXPECT(0x1eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00C8
        gbc.setState(0x1184, 0xc069, 0xbb50, 0x44be, 0xe889, 0xb936, 0x1, 0x1);
        gbc.writeMem(0x1184, { 0x2b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc069, gbc.sp());
        EXPECT(0x1185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00C9
        gbc.setState(0x2a79, 0xa492, 0xcfd0, 0xa82f, 0xe65c, 0x97a8, 0x1, 0x0);
        gbc.writeMem(0x2a79, { 0x2b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa492, gbc.sp());
        EXPECT(0x2a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00CA
        gbc.setState(0x3151, 0x44d9, 0x8240, 0xa5e5, 0x48bd, 0xd924, 0x1, 0x1);
        gbc.writeMem(0x3151, { 0x2b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x44d9, gbc.sp());
        EXPECT(0x3152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00CB
        gbc.setState(0x1dfa, 0x9645, 0x96c0, 0xa80f, 0x404f, 0xcf7b, 0x1, 0x1);
        gbc.writeMem(0x1dfa, { 0x2b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9645, gbc.sp());
        EXPECT(0x1dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00CC
        gbc.setState(0x5058, 0x6837, 0x2f0, 0x935e, 0x3bdf, 0x8e0d, 0x1, 0x0);
        gbc.writeMem(0x5058, { 0x2b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6837, gbc.sp());
        EXPECT(0x5059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00CD
        gbc.setState(0x1a14, 0xf252, 0x5610, 0x5816, 0x9be0, 0x9902, 0x0, 0x1);
        gbc.writeMem(0x1a14, { 0x2b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf252, gbc.sp());
        EXPECT(0x1a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00CE
        gbc.setState(0x91e8, 0x9089, 0x2bc0, 0xabf0, 0x9e20, 0x11d9, 0x0, 0x1);
        gbc.writeMem(0x91e8, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9089, gbc.sp());
        EXPECT(0x91e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x91e8));
        // 2B 00D0
        gbc.setState(0xd518, 0xd55d, 0xb890, 0x1673, 0x320e, 0x24e9, 0x0, 0x0);
        gbc.writeMem(0xd518, { 0x2b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd55d, gbc.sp());
        EXPECT(0xd519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd518));
        // 2B 00D2
        gbc.setState(0x2a28, 0xce07, 0x5c50, 0x92a4, 0x72e2, 0xb9f2, 0x1, 0x0);
        gbc.writeMem(0x2a28, { 0x2b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xce07, gbc.sp());
        EXPECT(0x2a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00D3
        gbc.setState(0xcb4a, 0x79ef, 0xa170, 0xeb5e, 0x79d4, 0x24, 0x0, 0x1);
        gbc.writeMem(0xcb4a, { 0x2b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x79ef, gbc.sp());
        EXPECT(0xcb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcb4a));
        // 2B 00D4
        gbc.setState(0x2863, 0xd73e, 0x9aa0, 0xd250, 0x26d2, 0xd36a, 0x1, 0x1);
        gbc.writeMem(0x2863, { 0x2b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd73e, gbc.sp());
        EXPECT(0x2864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00D5
        gbc.setState(0xee56, 0x1450, 0x3d40, 0x9c8b, 0x144, 0x97a5, 0x1, 0x1);
        gbc.writeMem(0xee56, { 0x2b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1450, gbc.sp());
        EXPECT(0xee57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xee56));
        // 2B 00D6
        gbc.setState(0xb029, 0x3ea6, 0x16f0, 0xbf17, 0x57e5, 0xbecf, 0x0, 0x1);
        gbc.writeMem(0xb029, { 0x2b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3ea6, gbc.sp());
        EXPECT(0xb02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb029));
        // 2B 00D7
        gbc.setState(0xb0fe, 0x525b, 0x5970, 0x78dc, 0x1d39, 0xa10d, 0x1, 0x0);
        gbc.writeMem(0xb0fe, { 0x2b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x525b, gbc.sp());
        EXPECT(0xb0ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb0fe));
        // 2B 00D9
        gbc.setState(0xd48, 0x601b, 0x1b00, 0x9651, 0x8c0d, 0x2ae6, 0x1, 0x1);
        gbc.writeMem(0xd48, { 0x2b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x601b, gbc.sp());
        EXPECT(0xd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00DA
        gbc.setState(0x3f22, 0xf38c, 0x3540, 0x5c7c, 0xe27d, 0xca2, 0x1, 0x0);
        gbc.writeMem(0x3f22, { 0x2b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf38c, gbc.sp());
        EXPECT(0x3f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00DB
        gbc.setState(0x3e1b, 0xd36c, 0x6790, 0x9778, 0x2fc, 0xdf0f, 0x0, 0x1);
        gbc.writeMem(0x3e1b, { 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd36c, gbc.sp());
        EXPECT(0x3e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00DC
        gbc.setState(0x89a8, 0xa118, 0x4060, 0xcf86, 0x74e, 0x7189, 0x0, 0x0);
        gbc.writeMem(0x89a8, { 0x2b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0x89a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x89a8));
        // 2B 00DD
        gbc.setState(0xaa66, 0x96b4, 0x5a10, 0x1782, 0x726e, 0xa59b, 0x0, 0x1);
        gbc.writeMem(0xaa66, { 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x96b4, gbc.sp());
        EXPECT(0xaa67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaa66));
        // 2B 00DE
        gbc.setState(0x7e4a, 0xb79, 0x2640, 0x2f59, 0xef65, 0xfb90, 0x1, 0x1);
        gbc.writeMem(0x7e4a, { 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb79, gbc.sp());
        EXPECT(0x7e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00DF
        gbc.setState(0x4422, 0xc702, 0x9490, 0x58c6, 0xaa25, 0x719c, 0x0, 0x1);
        gbc.writeMem(0x4422, { 0x2b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc702, gbc.sp());
        EXPECT(0x4423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00E0
        gbc.setState(0xdee3, 0x5499, 0xe360, 0x98af, 0x3dc9, 0x31c4, 0x1, 0x0);
        gbc.writeMem(0xdee3, { 0x2b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5499, gbc.sp());
        EXPECT(0xdee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdee3));
        // 2B 00E1
        gbc.setState(0x20e1, 0xf0f6, 0x5660, 0xb8de, 0xb8e2, 0x2712, 0x1, 0x1);
        gbc.writeMem(0x20e1, { 0x2b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf0f6, gbc.sp());
        EXPECT(0x20e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00E2
        gbc.setState(0xbb38, 0x1190, 0x2f80, 0xad9, 0x1761, 0xdffd, 0x0, 0x1);
        gbc.writeMem(0xbb38, { 0x2b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1190, gbc.sp());
        EXPECT(0xbb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbb38));
        // 2B 00E3
        gbc.setState(0x41c3, 0xb144, 0xc950, 0x76dc, 0x5758, 0xeb2b, 0x0, 0x1);
        gbc.writeMem(0x41c3, { 0x2b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb144, gbc.sp());
        EXPECT(0x41c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00E4
        gbc.setState(0x8b2a, 0xdb96, 0xdfd0, 0x4a61, 0x4e55, 0xb272, 0x0, 0x1);
        gbc.writeMem(0x8b2a, { 0x2b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdb96, gbc.sp());
        EXPECT(0x8b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8b2a));
        // 2B 00E5
        gbc.setState(0x7634, 0xd50, 0x7d10, 0xa767, 0x4d42, 0x52ab, 0x0, 0x1);
        gbc.writeMem(0x7634, { 0x2b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd50, gbc.sp());
        EXPECT(0x7635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00E6
        gbc.setState(0x1d0f, 0xf43f, 0xc440, 0xf1, 0x44d0, 0xbbf1, 0x0, 0x0);
        gbc.writeMem(0x1d0f, { 0x2b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf43f, gbc.sp());
        EXPECT(0x1d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00E7
        gbc.setState(0xd16b, 0xc132, 0xc2f0, 0x9ff6, 0x2ee4, 0x3fde, 0x0, 0x0);
        gbc.writeMem(0xd16b, { 0x2b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc132, gbc.sp());
        EXPECT(0xd16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd16b));
        // 2B 00E8
        gbc.setState(0x4a4f, 0x25c2, 0x4cd0, 0x733f, 0xc9d, 0x9efc, 0x1, 0x1);
        gbc.writeMem(0x4a4f, { 0x2b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x25c2, gbc.sp());
        EXPECT(0x4a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00E9
        gbc.setState(0x4515, 0xe776, 0x7e0, 0x12dd, 0x9a17, 0x282e, 0x1, 0x0);
        gbc.writeMem(0x4515, { 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe776, gbc.sp());
        EXPECT(0x4516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00EA
        gbc.setState(0xe6c7, 0xbc8c, 0xa50, 0xf550, 0xd6a0, 0xb1f2, 0x1, 0x1);
        gbc.writeMem(0xe6c7, { 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbc8c, gbc.sp());
        EXPECT(0xe6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe6c7));
        // 2B 00EB
        gbc.setState(0x83c3, 0xa09f, 0x8c60, 0x57af, 0xf483, 0x88ef, 0x0, 0x0);
        gbc.writeMem(0x83c3, { 0x2b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa09f, gbc.sp());
        EXPECT(0x83c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x83c3));
        // 2B 00EC
        gbc.setState(0x55c, 0xcdc3, 0xe970, 0x7c0f, 0xe3c5, 0x5172, 0x0, 0x0);
        gbc.writeMem(0x55c, { 0x2b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcdc3, gbc.sp());
        EXPECT(0x55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00EE
        gbc.setState(0x56a4, 0xea6e, 0x93a0, 0x8312, 0x7694, 0x2756, 0x0, 0x0);
        gbc.writeMem(0x56a4, { 0x2b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xea6e, gbc.sp());
        EXPECT(0x56a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00EF
        gbc.setState(0x8a7, 0xe8a7, 0x5540, 0x7a4d, 0xfd77, 0xb4a0, 0x1, 0x0);
        gbc.writeMem(0x8a7, { 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe8a7, gbc.sp());
        EXPECT(0x8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00F0
        gbc.setState(0x35e7, 0xe708, 0x4b10, 0xceb2, 0x35b7, 0xdbac, 0x0, 0x0);
        gbc.writeMem(0x35e7, { 0x2b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe708, gbc.sp());
        EXPECT(0x35e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00F1
        gbc.setState(0x7906, 0xfa9f, 0xdc00, 0x8d1d, 0xc3e2, 0x4e57, 0x1, 0x1);
        gbc.writeMem(0x7906, { 0x2b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfa9f, gbc.sp());
        EXPECT(0x7907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00F2
        gbc.setState(0x9a86, 0x40aa, 0x88d0, 0xe924, 0x9efd, 0xe232, 0x1, 0x0);
        gbc.writeMem(0x9a86, { 0x2b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x40aa, gbc.sp());
        EXPECT(0x9a87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9a86));
        // 2B 00F3
        gbc.setState(0x2f32, 0x2b0c, 0xb150, 0x96c5, 0x5b1d, 0x8fb, 0x0, 0x0);
        gbc.writeMem(0x2f32, { 0x2b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2b0c, gbc.sp());
        EXPECT(0x2f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00F4
        gbc.setState(0xb764, 0xfa5f, 0x14b0, 0x813a, 0x5106, 0xc678, 0x0, 0x1);
        gbc.writeMem(0xb764, { 0x2b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfa5f, gbc.sp());
        EXPECT(0xb765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb764));
        // 2B 00F5
        gbc.setState(0xa32, 0x7bc2, 0xa140, 0xef30, 0x13b, 0xd696, 0x0, 0x0);
        gbc.writeMem(0xa32, { 0x2b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7bc2, gbc.sp());
        EXPECT(0xa33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00F6
        gbc.setState(0x3eac, 0xcd2d, 0xb870, 0xdf7f, 0x9d26, 0x4cc, 0x1, 0x1);
        gbc.writeMem(0x3eac, { 0x2b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcd2d, gbc.sp());
        EXPECT(0x3ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00F7
        gbc.setState(0xe4b4, 0x85dd, 0x87c0, 0xa2a9, 0x7d07, 0xfba0, 0x1, 0x1);
        gbc.writeMem(0xe4b4, { 0x2b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x85dd, gbc.sp());
        EXPECT(0xe4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe4b4));
        // 2B 00F8
        gbc.setState(0xddb, 0xb4eb, 0xc5e0, 0x16b2, 0x7dfe, 0xe4ce, 0x0, 0x0);
        gbc.writeMem(0xddb, { 0x2b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb4eb, gbc.sp());
        EXPECT(0xddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 00F9
        gbc.setState(0x8add, 0x85d2, 0xb380, 0x7e32, 0x5ede, 0x55bb, 0x1, 0x0);
        gbc.writeMem(0x8add, { 0x2b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x85d2, gbc.sp());
        EXPECT(0x8ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8add));
        // 2B 00FB
        gbc.setState(0xc556, 0xc541, 0xd000, 0x961d, 0x551d, 0xd6b, 0x0, 0x1);
        gbc.writeMem(0xc556, { 0x2b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc541, gbc.sp());
        EXPECT(0xc557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc556));
        // 2B 00FC
        gbc.setState(0x4fc4, 0x981a, 0x85b0, 0x5040, 0x10a6, 0xe9f9, 0x0, 0x1);
        gbc.writeMem(0x4fc4, { 0x2b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x981a, gbc.sp());
        EXPECT(0x4fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 00FD
        gbc.setState(0xb7d0, 0x8e91, 0x2420, 0x59f9, 0x5a25, 0x3984, 0x1, 0x1);
        gbc.writeMem(0xb7d0, { 0x2b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8e91, gbc.sp());
        EXPECT(0xb7d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb7d0));
        // 2B 00FE
        gbc.setState(0x8f73, 0xcfd5, 0x92f0, 0xe12b, 0x65b3, 0xe108, 0x1, 0x1);
        gbc.writeMem(0x8f73, { 0x2b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcfd5, gbc.sp());
        EXPECT(0x8f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8f73));
        // 2B 00FF
        gbc.setState(0x8078, 0x285e, 0x7e30, 0x209f, 0xc0a9, 0x3475, 0x0, 0x0);
        gbc.writeMem(0x8078, { 0x2b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x285e, gbc.sp());
        EXPECT(0x8079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8078));
        // 2B 0100
        gbc.setState(0x7ef6, 0xcef6, 0xb4f0, 0x271e, 0xf2fb, 0x35f, 0x1, 0x0);
        gbc.writeMem(0x7ef6, { 0x2b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcef6, gbc.sp());
        EXPECT(0x7ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0101
        gbc.setState(0xcf4e, 0x39d0, 0xd0f0, 0x74f3, 0x963a, 0x19a7, 0x0, 0x1);
        gbc.writeMem(0xcf4e, { 0x2b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x39d0, gbc.sp());
        EXPECT(0xcf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcf4e));
        // 2B 0102
        gbc.setState(0xa65d, 0x9d9b, 0xec10, 0x6470, 0x3d14, 0x1142, 0x1, 0x0);
        gbc.writeMem(0xa65d, { 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9d9b, gbc.sp());
        EXPECT(0xa65e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa65d));
        // 2B 0103
        gbc.setState(0xac9f, 0x6401, 0x4c30, 0x9342, 0x9365, 0x14ed, 0x0, 0x0);
        gbc.writeMem(0xac9f, { 0x2b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6401, gbc.sp());
        EXPECT(0xaca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xac9f));
        // 2B 0104
        gbc.setState(0x10cc, 0xdf83, 0x8240, 0xd40f, 0x35fc, 0x3219, 0x0, 0x1);
        gbc.writeMem(0x10cc, { 0x2b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdf83, gbc.sp());
        EXPECT(0x10cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0105
        gbc.setState(0xda64, 0xa62, 0x1840, 0x3d55, 0x2dea, 0x19a4, 0x0, 0x0);
        gbc.writeMem(0xda64, { 0x2b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa62, gbc.sp());
        EXPECT(0xda65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xda64));
        // 2B 0106
        gbc.setState(0xe9cd, 0xed08, 0xe370, 0x7a8, 0xb005, 0x648c, 0x1, 0x1);
        gbc.writeMem(0xe9cd, { 0x2b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xed08, gbc.sp());
        EXPECT(0xe9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe9cd));
        // 2B 0109
        gbc.setState(0x3569, 0xb928, 0x9640, 0x3492, 0x9d64, 0x4e4e, 0x0, 0x1);
        gbc.writeMem(0x3569, { 0x2b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb928, gbc.sp());
        EXPECT(0x356a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 010B
        gbc.setState(0x55da, 0xf363, 0xf4f0, 0x6cde, 0x4529, 0xe47b, 0x0, 0x1);
        gbc.writeMem(0x55da, { 0x2b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf363, gbc.sp());
        EXPECT(0x55db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 010C
        gbc.setState(0x655, 0xad82, 0x7c70, 0x52ab, 0x7127, 0x25ac, 0x1, 0x1);
        gbc.writeMem(0x655, { 0x2b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xad82, gbc.sp());
        EXPECT(0x656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 010D
        gbc.setState(0x8915, 0xa133, 0xe270, 0xd787, 0x661c, 0x2db, 0x0, 0x1);
        gbc.writeMem(0x8915, { 0x2b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa133, gbc.sp());
        EXPECT(0x8916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8915));
        // 2B 010E
        gbc.setState(0x26cd, 0x797d, 0x8bf0, 0x4dc5, 0xb1f5, 0x69c9, 0x0, 0x1);
        gbc.writeMem(0x26cd, { 0x2b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x797d, gbc.sp());
        EXPECT(0x26ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 010F
        gbc.setState(0xb1e9, 0x5570, 0x40, 0xb50c, 0x5415, 0x20cc, 0x0, 0x0);
        gbc.writeMem(0xb1e9, { 0x2b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5570, gbc.sp());
        EXPECT(0xb1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb1e9));
        // 2B 0110
        gbc.setState(0x19fc, 0x3e30, 0xaa60, 0xd913, 0x22aa, 0x66ba, 0x0, 0x0);
        gbc.writeMem(0x19fc, { 0x2b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3e30, gbc.sp());
        EXPECT(0x19fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0111
        gbc.setState(0x56db, 0xb7b, 0x7770, 0x354f, 0xaa02, 0x4f0e, 0x0, 0x1);
        gbc.writeMem(0x56db, { 0x2b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb7b, gbc.sp());
        EXPECT(0x56dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0112
        gbc.setState(0x4c6c, 0x6ab5, 0x2650, 0x8bef, 0x95ab, 0x39d8, 0x0, 0x0);
        gbc.writeMem(0x4c6c, { 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6ab5, gbc.sp());
        EXPECT(0x4c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0113
        gbc.setState(0x5eae, 0x3c77, 0xb620, 0xef79, 0x9f3d, 0x43d8, 0x1, 0x0);
        gbc.writeMem(0x5eae, { 0x2b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3c77, gbc.sp());
        EXPECT(0x5eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0114
        gbc.setState(0x5fa2, 0xf1de, 0x8450, 0x2d34, 0xe8c1, 0x3a4c, 0x0, 0x1);
        gbc.writeMem(0x5fa2, { 0x2b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf1de, gbc.sp());
        EXPECT(0x5fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0115
        gbc.setState(0xacf, 0x2b95, 0xf800, 0x7591, 0x70dd, 0x40a0, 0x0, 0x0);
        gbc.writeMem(0xacf, { 0x2b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2b95, gbc.sp());
        EXPECT(0xad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0116
        gbc.setState(0xa6bb, 0x9b0b, 0x5d30, 0x7021, 0xb4a7, 0xd403, 0x0, 0x1);
        gbc.writeMem(0xa6bb, { 0x2b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9b0b, gbc.sp());
        EXPECT(0xa6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa6bb));
        // 2B 0117
        gbc.setState(0x720f, 0x6eee, 0xc0e0, 0x593f, 0xefa5, 0xa967, 0x1, 0x0);
        gbc.writeMem(0x720f, { 0x2b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6eee, gbc.sp());
        EXPECT(0x7210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0118
        gbc.setState(0x5fe3, 0x9ac3, 0xc8e0, 0xda31, 0xfdbe, 0xa1a1, 0x1, 0x0);
        gbc.writeMem(0x5fe3, { 0x2b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9ac3, gbc.sp());
        EXPECT(0x5fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0119
        gbc.setState(0x7f23, 0x56ec, 0x3eb0, 0x9b2e, 0x346c, 0x8919, 0x1, 0x1);
        gbc.writeMem(0x7f23, { 0x2b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x56ec, gbc.sp());
        EXPECT(0x7f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 011A
        gbc.setState(0x2ce1, 0xefc7, 0xcef0, 0xeb37, 0xda65, 0x6d89, 0x0, 0x1);
        gbc.writeMem(0x2ce1, { 0x2b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xefc7, gbc.sp());
        EXPECT(0x2ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 011B
        gbc.setState(0xcaad, 0x7c6b, 0xad60, 0xf5af, 0x5892, 0xe0b5, 0x0, 0x1);
        gbc.writeMem(0xcaad, { 0x2b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7c6b, gbc.sp());
        EXPECT(0xcaae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcaad));
        // 2B 011C
        gbc.setState(0x8623, 0x15c3, 0x26a0, 0xbc1c, 0x3b63, 0x2c26, 0x1, 0x0);
        gbc.writeMem(0x8623, { 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x15c3, gbc.sp());
        EXPECT(0x8624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8623));
        // 2B 011D
        gbc.setState(0xbc57, 0x2562, 0x3340, 0xcb14, 0xee55, 0x93ec, 0x1, 0x0);
        gbc.writeMem(0xbc57, { 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2562, gbc.sp());
        EXPECT(0xbc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbc57));
        // 2B 011E
        gbc.setState(0x5436, 0xc8c7, 0xed00, 0x8cb9, 0x7b61, 0x4790, 0x1, 0x0);
        gbc.writeMem(0x5436, { 0x2b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc8c7, gbc.sp());
        EXPECT(0x5437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 011F
        gbc.setState(0xa2aa, 0x4a78, 0x1aa0, 0x3fa6, 0x7c2d, 0x68c0, 0x0, 0x1);
        gbc.writeMem(0xa2aa, { 0x2b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4a78, gbc.sp());
        EXPECT(0xa2ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa2aa));
        // 2B 0120
        gbc.setState(0xcf1f, 0xfad9, 0x89f0, 0x2220, 0x375c, 0xb81, 0x0, 0x1);
        gbc.writeMem(0xcf1f, { 0x2b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfad9, gbc.sp());
        EXPECT(0xcf20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcf1f));
        // 2B 0121
        gbc.setState(0x2682, 0xd924, 0x6240, 0x4651, 0x5e75, 0x8b4a, 0x1, 0x0);
        gbc.writeMem(0x2682, { 0x2b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd924, gbc.sp());
        EXPECT(0x2683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0122
        gbc.setState(0x630, 0xc4c9, 0x5e20, 0x252f, 0x9fe4, 0x6985, 0x1, 0x0);
        gbc.writeMem(0x630, { 0x2b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc4c9, gbc.sp());
        EXPECT(0x631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0123
        gbc.setState(0xc6f3, 0x2424, 0x9770, 0x996a, 0xaf4f, 0xbd11, 0x0, 0x0);
        gbc.writeMem(0xc6f3, { 0x2b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2424, gbc.sp());
        EXPECT(0xc6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc6f3));
        // 2B 0124
        gbc.setState(0x1ffd, 0xffe1, 0x6fc0, 0x517a, 0xbff5, 0xf669, 0x0, 0x1);
        gbc.writeMem(0x1ffd, { 0x2b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xffe1, gbc.sp());
        EXPECT(0x1ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0125
        gbc.setState(0xab21, 0x23c2, 0x1420, 0x66bc, 0xb461, 0x107e, 0x1, 0x0);
        gbc.writeMem(0xab21, { 0x2b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x23c2, gbc.sp());
        EXPECT(0xab22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xab21));
        // 2B 0126
        gbc.setState(0xb8f5, 0x1a13, 0xbf50, 0x1599, 0x4d27, 0xaacd, 0x1, 0x0);
        gbc.writeMem(0xb8f5, { 0x2b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1a13, gbc.sp());
        EXPECT(0xb8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb8f5));
        // 2B 0127
        gbc.setState(0xb998, 0x3bf0, 0xa870, 0x7d29, 0x61d6, 0xf478, 0x0, 0x0);
        gbc.writeMem(0xb998, { 0x2b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3bf0, gbc.sp());
        EXPECT(0xb999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb998));
        // 2B 0128
        gbc.setState(0x5c8e, 0x471f, 0xd4e0, 0x436a, 0x9f15, 0x3a04, 0x0, 0x1);
        gbc.writeMem(0x5c8e, { 0x2b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x471f, gbc.sp());
        EXPECT(0x5c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0129
        gbc.setState(0x37b9, 0x826d, 0x1970, 0x5c33, 0x81a2, 0xdfca, 0x0, 0x0);
        gbc.writeMem(0x37b9, { 0x2b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x826d, gbc.sp());
        EXPECT(0x37ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 012A
        gbc.setState(0x91dc, 0xbd81, 0xd0c0, 0xf47f, 0x3d63, 0xc909, 0x0, 0x1);
        gbc.writeMem(0x91dc, { 0x2b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbd81, gbc.sp());
        EXPECT(0x91dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x91dc));
        // 2B 012B
        gbc.setState(0xe758, 0xa9fe, 0xfc80, 0xe740, 0xcd1b, 0x5b32, 0x1, 0x0);
        gbc.writeMem(0xe758, { 0x2b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa9fe, gbc.sp());
        EXPECT(0xe759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe758));
        // 2B 012D
        gbc.setState(0x5cd1, 0xfa24, 0xba00, 0xb731, 0xa26f, 0xcc65, 0x1, 0x0);
        gbc.writeMem(0x5cd1, { 0x2b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfa24, gbc.sp());
        EXPECT(0x5cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 012E
        gbc.setState(0x5121, 0x96b2, 0xe20, 0x909d, 0x45c4, 0x1927, 0x0, 0x1);
        gbc.writeMem(0x5121, { 0x2b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x96b2, gbc.sp());
        EXPECT(0x5122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 012F
        gbc.setState(0xa835, 0x89de, 0x9380, 0x1d82, 0xc36c, 0xdb1f, 0x1, 0x0);
        gbc.writeMem(0xa835, { 0x2b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x89de, gbc.sp());
        EXPECT(0xa836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa835));
        // 2B 0130
        gbc.setState(0x96c0, 0xd787, 0xd120, 0xd08c, 0x3f89, 0xb093, 0x0, 0x1);
        gbc.writeMem(0x96c0, { 0x2b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd787, gbc.sp());
        EXPECT(0x96c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x96c0));
        // 2B 0131
        gbc.setState(0x941e, 0xb774, 0xcf40, 0x9564, 0x5e1, 0xc38b, 0x0, 0x1);
        gbc.writeMem(0x941e, { 0x2b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb774, gbc.sp());
        EXPECT(0x941f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x941e));
        // 2B 0132
        gbc.setState(0x2a74, 0x6bc, 0x790, 0x3d46, 0x6110, 0x68e9, 0x1, 0x0);
        gbc.writeMem(0x2a74, { 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6bc, gbc.sp());
        EXPECT(0x2a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0134
        gbc.setState(0xafd, 0xe563, 0x7b00, 0x9d03, 0xd7a0, 0x5720, 0x1, 0x1);
        gbc.writeMem(0xafd, { 0x2b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe563, gbc.sp());
        EXPECT(0xafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0135
        gbc.setState(0x47fa, 0x8ac2, 0xd130, 0x54c8, 0xccd1, 0x4c3c, 0x1, 0x0);
        gbc.writeMem(0x47fa, { 0x2b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8ac2, gbc.sp());
        EXPECT(0x47fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0136
        gbc.setState(0xe5d5, 0x14df, 0x450, 0x49dc, 0x2bdb, 0x7c2a, 0x1, 0x1);
        gbc.writeMem(0xe5d5, { 0x2b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x14df, gbc.sp());
        EXPECT(0xe5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe5d5));
        // 2B 0137
        gbc.setState(0x25a2, 0xcb, 0x7e50, 0x49fe, 0x4f0e, 0x31de, 0x1, 0x1);
        gbc.writeMem(0x25a2, { 0x2b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcb, gbc.sp());
        EXPECT(0x25a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0138
        gbc.setState(0xe994, 0xade0, 0x68d0, 0x1ad1, 0x5428, 0x2c24, 0x1, 0x0);
        gbc.writeMem(0xe994, { 0x2b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xade0, gbc.sp());
        EXPECT(0xe995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe994));
        // 2B 0139
        gbc.setState(0xc1f0, 0x495f, 0x3200, 0x1679, 0xef8d, 0xf827, 0x1, 0x1);
        gbc.writeMem(0xc1f0, { 0x2b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x495f, gbc.sp());
        EXPECT(0xc1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc1f0));
        // 2B 013A
        gbc.setState(0xa0a1, 0x3021, 0x5160, 0x5c62, 0x5496, 0x6569, 0x1, 0x0);
        gbc.writeMem(0xa0a1, { 0x2b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3021, gbc.sp());
        EXPECT(0xa0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa0a1));
        // 2B 013B
        gbc.setState(0xcc3d, 0xfcf4, 0xcf90, 0xa102, 0xf1f4, 0x4678, 0x0, 0x0);
        gbc.writeMem(0xcc3d, { 0x2b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfcf4, gbc.sp());
        EXPECT(0xcc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcc3d));
        // 2B 013D
        gbc.setState(0xeffa, 0x51d5, 0x8630, 0xc6cb, 0x7e3e, 0xccee, 0x1, 0x0);
        gbc.writeMem(0xeffa, { 0x2b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x51d5, gbc.sp());
        EXPECT(0xeffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xeffa));
        // 2B 013E
        gbc.setState(0xae84, 0x9dbb, 0xff20, 0x6454, 0xe1bd, 0x99a8, 0x0, 0x1);
        gbc.writeMem(0xae84, { 0x2b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9dbb, gbc.sp());
        EXPECT(0xae85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xae84));
        // 2B 013F
        gbc.setState(0x728d, 0xda64, 0x4590, 0x9ef7, 0x6e1c, 0xd674, 0x0, 0x1);
        gbc.writeMem(0x728d, { 0x2b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xda64, gbc.sp());
        EXPECT(0x728e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0140
        gbc.setState(0x6049, 0x296c, 0x5630, 0x16b4, 0xbb9a, 0xff13, 0x1, 0x1);
        gbc.writeMem(0x6049, { 0x2b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x296c, gbc.sp());
        EXPECT(0x604a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0141
        gbc.setState(0x800c, 0xa3dc, 0x2cb0, 0xee38, 0x2bdb, 0x7f78, 0x0, 0x0);
        gbc.writeMem(0x800c, { 0x2b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa3dc, gbc.sp());
        EXPECT(0x800d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x800c));
        // 2B 0142
        gbc.setState(0x7fe8, 0x5499, 0xec00, 0xdef0, 0x7662, 0x3903, 0x1, 0x1);
        gbc.writeMem(0x7fe8, { 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5499, gbc.sp());
        EXPECT(0x7fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0143
        gbc.setState(0x382f, 0x85be, 0x4330, 0xcbb4, 0xc7eb, 0xdf99, 0x0, 0x0);
        gbc.writeMem(0x382f, { 0x2b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x85be, gbc.sp());
        EXPECT(0x3830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0144
        gbc.setState(0xae3f, 0xb76f, 0x2770, 0xee6c, 0xb50b, 0x4e06, 0x0, 0x1);
        gbc.writeMem(0xae3f, { 0x2b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb76f, gbc.sp());
        EXPECT(0xae40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xae3f));
        // 2B 0145
        gbc.setState(0x41d4, 0xe4a5, 0x40c0, 0x401e, 0x8fea, 0xde31, 0x1, 0x0);
        gbc.writeMem(0x41d4, { 0x2b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe4a5, gbc.sp());
        EXPECT(0x41d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0146
        gbc.setState(0x37c3, 0x5f52, 0x5a00, 0xd84a, 0x6b68, 0x8d0, 0x1, 0x0);
        gbc.writeMem(0x37c3, { 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5f52, gbc.sp());
        EXPECT(0x37c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0147
        gbc.setState(0xef3, 0x26d7, 0xcb40, 0x94f4, 0xfe9e, 0x467b, 0x1, 0x1);
        gbc.writeMem(0xef3, { 0x2b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x26d7, gbc.sp());
        EXPECT(0xef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0149
        gbc.setState(0x4181, 0xdde3, 0x4850, 0x2907, 0x3c7a, 0x2b00, 0x1, 0x1);
        gbc.writeMem(0x4181, { 0x2b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdde3, gbc.sp());
        EXPECT(0x4182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 014A
        gbc.setState(0xe8b6, 0xf9ba, 0xf30, 0x5428, 0x3e71, 0xdca2, 0x1, 0x0);
        gbc.writeMem(0xe8b6, { 0x2b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf9ba, gbc.sp());
        EXPECT(0xe8b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe8b6));
        // 2B 014B
        gbc.setState(0xe280, 0xac50, 0xc3d0, 0xa562, 0x3946, 0x4b86, 0x1, 0x1);
        gbc.writeMem(0xe280, { 0x2b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xac50, gbc.sp());
        EXPECT(0xe281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe280));
        // 2B 014C
        gbc.setState(0x3886, 0x881b, 0xd100, 0x4504, 0xec5e, 0x802c, 0x1, 0x0);
        gbc.writeMem(0x3886, { 0x2b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x881b, gbc.sp());
        EXPECT(0x3887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 014D
        gbc.setState(0x6ed1, 0x2ff5, 0xd3d0, 0x55f0, 0x4c7, 0xafa, 0x1, 0x1);
        gbc.writeMem(0x6ed1, { 0x2b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2ff5, gbc.sp());
        EXPECT(0x6ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 014E
        gbc.setState(0xe76a, 0xc343, 0x4fb0, 0xf04e, 0xb176, 0x4a42, 0x0, 0x1);
        gbc.writeMem(0xe76a, { 0x2b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc343, gbc.sp());
        EXPECT(0xe76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe76a));
        // 2B 014F
        gbc.setState(0x7027, 0x7659, 0x81f0, 0xe256, 0x531d, 0x8676, 0x0, 0x0);
        gbc.writeMem(0x7027, { 0x2b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7659, gbc.sp());
        EXPECT(0x7028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0150
        gbc.setState(0xd017, 0x441c, 0x9d0, 0x6d12, 0xc18b, 0xdf68, 0x0, 0x1);
        gbc.writeMem(0xd017, { 0x2b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x441c, gbc.sp());
        EXPECT(0xd018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd017));
        // 2B 0151
        gbc.setState(0xeb1, 0xb244, 0xb980, 0x7d8b, 0x9593, 0xfa98, 0x1, 0x1);
        gbc.writeMem(0xeb1, { 0x2b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb244, gbc.sp());
        EXPECT(0xeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0152
        gbc.setState(0xdcd7, 0x699b, 0xd520, 0x4911, 0xce3c, 0xddd1, 0x0, 0x1);
        gbc.writeMem(0xdcd7, { 0x2b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x699b, gbc.sp());
        EXPECT(0xdcd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdcd7));
        // 2B 0153
        gbc.setState(0x55ed, 0x5c37, 0x1ad0, 0xf272, 0x94a8, 0xb7b, 0x1, 0x0);
        gbc.writeMem(0x55ed, { 0x2b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5c37, gbc.sp());
        EXPECT(0x55ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0154
        gbc.setState(0xb2bb, 0x5d66, 0x5590, 0xa789, 0xe397, 0x950c, 0x1, 0x0);
        gbc.writeMem(0xb2bb, { 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5d66, gbc.sp());
        EXPECT(0xb2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb2bb));
        // 2B 0155
        gbc.setState(0x6226, 0xb457, 0x2ae0, 0x52ae, 0x7c0d, 0xe1a3, 0x0, 0x1);
        gbc.writeMem(0x6226, { 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb457, gbc.sp());
        EXPECT(0x6227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0156
        gbc.setState(0x372, 0x3cba, 0xa7a0, 0x4f57, 0x4bc8, 0xd86c, 0x1, 0x0);
        gbc.writeMem(0x372, { 0x2b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3cba, gbc.sp());
        EXPECT(0x373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0158
        gbc.setState(0x36c9, 0x61c7, 0x65e0, 0xd9ed, 0x17eb, 0x1b6d, 0x1, 0x0);
        gbc.writeMem(0x36c9, { 0x2b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x61c7, gbc.sp());
        EXPECT(0x36ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0159
        gbc.setState(0xa6b4, 0x3dc5, 0x1b0, 0x98a2, 0x21bb, 0xdf3c, 0x1, 0x1);
        gbc.writeMem(0xa6b4, { 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3dc5, gbc.sp());
        EXPECT(0xa6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa6b4));
        // 2B 015A
        gbc.setState(0x9b75, 0x3144, 0x3c40, 0x2d9b, 0x1376, 0xf579, 0x1, 0x1);
        gbc.writeMem(0x9b75, { 0x2b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0x9b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9b75));
        // 2B 015B
        gbc.setState(0x455f, 0xeca4, 0xd920, 0x3394, 0x5fc0, 0x5cbc, 0x0, 0x0);
        gbc.writeMem(0x455f, { 0x2b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xeca4, gbc.sp());
        EXPECT(0x4560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 015C
        gbc.setState(0x23a8, 0x9207, 0xcd60, 0xe1ca, 0x9da5, 0x566c, 0x1, 0x0);
        gbc.writeMem(0x23a8, { 0x2b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9207, gbc.sp());
        EXPECT(0x23a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 015D
        gbc.setState(0xb0ca, 0xc0de, 0xe010, 0xfcb6, 0x3736, 0x9389, 0x1, 0x1);
        gbc.writeMem(0xb0ca, { 0x2b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc0de, gbc.sp());
        EXPECT(0xb0cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb0ca));
        // 2B 015E
        gbc.setState(0x5576, 0x56dd, 0xdec0, 0xa0b1, 0x346f, 0x58dd, 0x0, 0x1);
        gbc.writeMem(0x5576, { 0x2b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x56dd, gbc.sp());
        EXPECT(0x5577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 015F
        gbc.setState(0xc791, 0xc8f5, 0x9b40, 0x6c7e, 0xf137, 0x1f45, 0x1, 0x1);
        gbc.writeMem(0xc791, { 0x2b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc8f5, gbc.sp());
        EXPECT(0xc792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc791));
        // 2B 0160
        gbc.setState(0x6a27, 0x6cca, 0x62d0, 0x3d03, 0x63ad, 0xdb53, 0x1, 0x0);
        gbc.writeMem(0x6a27, { 0x2b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6cca, gbc.sp());
        EXPECT(0x6a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0161
        gbc.setState(0x317c, 0xd28d, 0x890, 0xf098, 0xe35e, 0x7e3e, 0x0, 0x0);
        gbc.writeMem(0x317c, { 0x2b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd28d, gbc.sp());
        EXPECT(0x317d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0162
        gbc.setState(0x21a8, 0xb976, 0x78c0, 0x9159, 0x1f09, 0xe1c, 0x0, 0x1);
        gbc.writeMem(0x21a8, { 0x2b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb976, gbc.sp());
        EXPECT(0x21a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0163
        gbc.setState(0xac67, 0xb80e, 0xe4c0, 0x255d, 0xc44d, 0x60d7, 0x1, 0x1);
        gbc.writeMem(0xac67, { 0x2b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb80e, gbc.sp());
        EXPECT(0xac68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xac67));
        // 2B 0164
        gbc.setState(0x1096, 0x821f, 0x22b0, 0x8063, 0x712d, 0x998b, 0x0, 0x1);
        gbc.writeMem(0x1096, { 0x2b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x821f, gbc.sp());
        EXPECT(0x1097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0165
        gbc.setState(0xefb3, 0x99a4, 0xa290, 0x888e, 0x1e79, 0x824d, 0x0, 0x1);
        gbc.writeMem(0xefb3, { 0x2b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x99a4, gbc.sp());
        EXPECT(0xefb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xefb3));
        // 2B 0166
        gbc.setState(0x85a3, 0x7dbe, 0x8d0, 0xa83, 0xff1f, 0xefaf, 0x0, 0x1);
        gbc.writeMem(0x85a3, { 0x2b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7dbe, gbc.sp());
        EXPECT(0x85a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x85a3));
        // 2B 0168
        gbc.setState(0x3e6f, 0xee77, 0x4c60, 0x2657, 0xa35, 0x9a94, 0x1, 0x0);
        gbc.writeMem(0x3e6f, { 0x2b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xee77, gbc.sp());
        EXPECT(0x3e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 016A
        gbc.setState(0x901c, 0x4a78, 0xb050, 0xeebd, 0x30f7, 0x99c1, 0x1, 0x1);
        gbc.writeMem(0x901c, { 0x2b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4a78, gbc.sp());
        EXPECT(0x901d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x901c));
        // 2B 016B
        gbc.setState(0x8bb, 0xd644, 0x6e80, 0xe90, 0x1a74, 0x783c, 0x0, 0x0);
        gbc.writeMem(0x8bb, { 0x2b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd644, gbc.sp());
        EXPECT(0x8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 016C
        gbc.setState(0xcb06, 0x7976, 0x85f0, 0xbfe5, 0xd133, 0xac0, 0x0, 0x1);
        gbc.writeMem(0xcb06, { 0x2b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7976, gbc.sp());
        EXPECT(0xcb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcb06));
        // 2B 016D
        gbc.setState(0x455e, 0x34a, 0xf4c0, 0xbc42, 0xebbf, 0x671e, 0x0, 0x0);
        gbc.writeMem(0x455e, { 0x2b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x34a, gbc.sp());
        EXPECT(0x455f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 016E
        gbc.setState(0xebfd, 0xf117, 0xf3a0, 0xf013, 0x36ca, 0x15a, 0x1, 0x1);
        gbc.writeMem(0xebfd, { 0x2b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf117, gbc.sp());
        EXPECT(0xebfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xebfd));
        // 2B 016F
        gbc.setState(0x100d, 0xa4f8, 0xa0e0, 0xd5cc, 0xee12, 0xa204, 0x0, 0x0);
        gbc.writeMem(0x100d, { 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa4f8, gbc.sp());
        EXPECT(0x100e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0170
        gbc.setState(0x1159, 0x8a2b, 0xfcd0, 0xa6f4, 0x48c8, 0x32d3, 0x0, 0x0);
        gbc.writeMem(0x1159, { 0x2b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8a2b, gbc.sp());
        EXPECT(0x115a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0171
        gbc.setState(0x669, 0x3fa9, 0x6600, 0x5257, 0xb219, 0x3cf, 0x1, 0x1);
        gbc.writeMem(0x669, { 0x2b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3fa9, gbc.sp());
        EXPECT(0x66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0172
        gbc.setState(0xa06b, 0x9cf7, 0x9160, 0x5632, 0x9b57, 0xa725, 0x1, 0x0);
        gbc.writeMem(0xa06b, { 0x2b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9cf7, gbc.sp());
        EXPECT(0xa06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa06b));
        // 2B 0174
        gbc.setState(0x25e4, 0x4e05, 0x8760, 0x1ee1, 0xca3f, 0x126b, 0x1, 0x0);
        gbc.writeMem(0x25e4, { 0x2b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4e05, gbc.sp());
        EXPECT(0x25e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0175
        gbc.setState(0x515f, 0x260f, 0x7190, 0xd153, 0xe970, 0x5787, 0x1, 0x1);
        gbc.writeMem(0x515f, { 0x2b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x260f, gbc.sp());
        EXPECT(0x5160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0176
        gbc.setState(0xdbe8, 0x719f, 0x5bd0, 0xfa17, 0x680f, 0x19fe, 0x1, 0x1);
        gbc.writeMem(0xdbe8, { 0x2b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x719f, gbc.sp());
        EXPECT(0xdbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdbe8));
        // 2B 0177
        gbc.setState(0x8ed7, 0xaddc, 0xbdb0, 0x7738, 0xfd64, 0x4d1f, 0x1, 0x0);
        gbc.writeMem(0x8ed7, { 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xaddc, gbc.sp());
        EXPECT(0x8ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8ed7));
        // 2B 0178
        gbc.setState(0xbf5, 0x760a, 0x79b0, 0x2ce1, 0xb0e2, 0xd0df, 0x1, 0x0);
        gbc.writeMem(0xbf5, { 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x760a, gbc.sp());
        EXPECT(0xbf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0179
        gbc.setState(0x40f2, 0x7ca5, 0xeb90, 0xdefd, 0xfa59, 0x4b13, 0x0, 0x1);
        gbc.writeMem(0x40f2, { 0x2b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7ca5, gbc.sp());
        EXPECT(0x40f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 017A
        gbc.setState(0x3ac1, 0x9252, 0xf790, 0xccc, 0x46f7, 0x6099, 0x1, 0x1);
        gbc.writeMem(0x3ac1, { 0x2b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9252, gbc.sp());
        EXPECT(0x3ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 017B
        gbc.setState(0xa62, 0xf422, 0xa510, 0x8924, 0x995c, 0x4907, 0x1, 0x0);
        gbc.writeMem(0xa62, { 0x2b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf422, gbc.sp());
        EXPECT(0xa63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 017C
        gbc.setState(0x3d4a, 0x3af2, 0xfd70, 0xae1, 0x167a, 0xaec5, 0x0, 0x0);
        gbc.writeMem(0x3d4a, { 0x2b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3af2, gbc.sp());
        EXPECT(0x3d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 017D
        gbc.setState(0xb969, 0x827f, 0x2b90, 0x5c9c, 0x8c68, 0x83a, 0x1, 0x1);
        gbc.writeMem(0xb969, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x827f, gbc.sp());
        EXPECT(0xb96a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb969));
        // 2B 017E
        gbc.setState(0xe523, 0x13ca, 0xa630, 0x2836, 0x4340, 0x3aa6, 0x1, 0x0);
        gbc.writeMem(0xe523, { 0x2b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x13ca, gbc.sp());
        EXPECT(0xe524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe523));
        // 2B 017F
        gbc.setState(0xbcdd, 0x8f8e, 0xc270, 0xb07f, 0x83e5, 0x324d, 0x0, 0x0);
        gbc.writeMem(0xbcdd, { 0x2b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8f8e, gbc.sp());
        EXPECT(0xbcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbcdd));
        // 2B 0180
        gbc.setState(0xc6c, 0xbbfc, 0xbe70, 0xaf7f, 0x2b05, 0x9933, 0x0, 0x0);
        gbc.writeMem(0xc6c, { 0x2b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbbfc, gbc.sp());
        EXPECT(0xc6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0181
        gbc.setState(0xd7af, 0x67d4, 0x2640, 0x9233, 0x67eb, 0x5ed3, 0x0, 0x1);
        gbc.writeMem(0xd7af, { 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x67d4, gbc.sp());
        EXPECT(0xd7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd7af));
        // 2B 0183
        gbc.setState(0xeecb, 0xcfac, 0x7a0, 0x4137, 0xfdd9, 0x28fa, 0x1, 0x1);
        gbc.writeMem(0xeecb, { 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcfac, gbc.sp());
        EXPECT(0xeecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xeecb));
        // 2B 0184
        gbc.setState(0x325, 0x335, 0xf340, 0x457d, 0xfbda, 0xa1af, 0x0, 0x1);
        gbc.writeMem(0x325, { 0x2b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x335, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0185
        gbc.setState(0x5155, 0xc33a, 0x28e0, 0xacdc, 0x7217, 0x74fa, 0x0, 0x1);
        gbc.writeMem(0x5155, { 0x2b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc33a, gbc.sp());
        EXPECT(0x5156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0186
        gbc.setState(0x4a5d, 0x77b5, 0xb640, 0x67b9, 0x23de, 0x4f8d, 0x0, 0x0);
        gbc.writeMem(0x4a5d, { 0x2b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x77b5, gbc.sp());
        EXPECT(0x4a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0187
        gbc.setState(0x863, 0xf2bb, 0xb6a0, 0x5546, 0xe4ff, 0x96b9, 0x0, 0x0);
        gbc.writeMem(0x863, { 0x2b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf2bb, gbc.sp());
        EXPECT(0x864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0188
        gbc.setState(0x9fe0, 0xb72b, 0xfcd0, 0x5b53, 0x53b5, 0x398d, 0x0, 0x1);
        gbc.writeMem(0x9fe0, { 0x2b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb72b, gbc.sp());
        EXPECT(0x9fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9fe0));
        // 2B 0189
        gbc.setState(0x479e, 0xb199, 0xfcd0, 0xda21, 0xc224, 0x5b74, 0x0, 0x1);
        gbc.writeMem(0x479e, { 0x2b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb199, gbc.sp());
        EXPECT(0x479f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 018B
        gbc.setState(0x804, 0x918d, 0x170, 0x8520, 0x6cee, 0x38f9, 0x0, 0x0);
        gbc.writeMem(0x804, { 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x918d, gbc.sp());
        EXPECT(0x805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 018C
        gbc.setState(0x7853, 0xa813, 0x8d80, 0x56dc, 0xcbb0, 0x8edb, 0x1, 0x1);
        gbc.writeMem(0x7853, { 0x2b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa813, gbc.sp());
        EXPECT(0x7854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 018D
        gbc.setState(0x5357, 0xfd5e, 0xde70, 0xcde9, 0xd2a, 0x4041, 0x1, 0x1);
        gbc.writeMem(0x5357, { 0x2b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfd5e, gbc.sp());
        EXPECT(0x5358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 018E
        gbc.setState(0xc323, 0x8f51, 0x1ba0, 0xd68f, 0xc747, 0xfc15, 0x0, 0x0);
        gbc.writeMem(0xc323, { 0x2b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8f51, gbc.sp());
        EXPECT(0xc324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc323));
        // 2B 018F
        gbc.setState(0x9d0b, 0x2a65, 0x34f0, 0x114b, 0x3894, 0x2a0d, 0x0, 0x1);
        gbc.writeMem(0x9d0b, { 0x2b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2a65, gbc.sp());
        EXPECT(0x9d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9d0b));
        // 2B 0190
        gbc.setState(0xd25e, 0xce92, 0x2cc0, 0x2271, 0xb997, 0x3896, 0x1, 0x1);
        gbc.writeMem(0xd25e, { 0x2b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xce92, gbc.sp());
        EXPECT(0xd25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd25e));
        // 2B 0191
        gbc.setState(0xc1e1, 0xf9eb, 0xe460, 0x3c34, 0x60f2, 0x2df9, 0x1, 0x1);
        gbc.writeMem(0xc1e1, { 0x2b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf9eb, gbc.sp());
        EXPECT(0xc1e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc1e1));
        // 2B 0192
        gbc.setState(0x6f67, 0x7bf5, 0x1f90, 0x6122, 0xc9d6, 0x5c0a, 0x1, 0x0);
        gbc.writeMem(0x6f67, { 0x2b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7bf5, gbc.sp());
        EXPECT(0x6f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0193
        gbc.setState(0xb4a9, 0x39f, 0xa4e0, 0x3ad1, 0x9f21, 0x58ef, 0x1, 0x0);
        gbc.writeMem(0xb4a9, { 0x2b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x39f, gbc.sp());
        EXPECT(0xb4aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb4a9));
        // 2B 0194
        gbc.setState(0x9671, 0xfd2, 0xf980, 0x32c5, 0xb128, 0x9ee4, 0x1, 0x1);
        gbc.writeMem(0x9671, { 0x2b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfd2, gbc.sp());
        EXPECT(0x9672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9671));
        // 2B 0195
        gbc.setState(0xacff, 0x624a, 0xbdb0, 0x7e5b, 0x4526, 0xb399, 0x0, 0x1);
        gbc.writeMem(0xacff, { 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x624a, gbc.sp());
        EXPECT(0xad00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xacff));
        // 2B 0196
        gbc.setState(0x11a, 0xa13a, 0x3d40, 0x15b2, 0x469b, 0x89f1, 0x0, 0x0);
        gbc.writeMem(0x11a, { 0x2b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa13a, gbc.sp());
        EXPECT(0x11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0197
        gbc.setState(0x6789, 0xe79e, 0x9770, 0x5fb4, 0x4a44, 0xedd6, 0x0, 0x0);
        gbc.writeMem(0x6789, { 0x2b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe79e, gbc.sp());
        EXPECT(0x678a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0198
        gbc.setState(0x1855, 0x44c1, 0x20f0, 0x8970, 0xaada, 0x201f, 0x1, 0x0);
        gbc.writeMem(0x1855, { 0x2b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x44c1, gbc.sp());
        EXPECT(0x1856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0199
        gbc.setState(0xd9be, 0x7b2e, 0xd680, 0xef2, 0xda34, 0x288c, 0x0, 0x1);
        gbc.writeMem(0xd9be, { 0x2b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7b2e, gbc.sp());
        EXPECT(0xd9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd9be));
        // 2B 019A
        gbc.setState(0x34c, 0xd845, 0x4ca0, 0xceb4, 0x7522, 0x951, 0x0, 0x0);
        gbc.writeMem(0x34c, { 0x2b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd845, gbc.sp());
        EXPECT(0x34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 019B
        gbc.setState(0xc1b7, 0xb106, 0xab70, 0xa5d3, 0x40bf, 0xcef9, 0x0, 0x0);
        gbc.writeMem(0xc1b7, { 0x2b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb106, gbc.sp());
        EXPECT(0xc1b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc1b7));
        // 2B 019C
        gbc.setState(0x9c02, 0xcc34, 0xe340, 0x569f, 0x5c6a, 0xd6f5, 0x1, 0x0);
        gbc.writeMem(0x9c02, { 0x2b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcc34, gbc.sp());
        EXPECT(0x9c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9c02));
        // 2B 019D
        gbc.setState(0x30d, 0xc864, 0xa160, 0xabba, 0x207e, 0x9717, 0x1, 0x0);
        gbc.writeMem(0x30d, { 0x2b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc864, gbc.sp());
        EXPECT(0x30e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 019E
        gbc.setState(0x14f5, 0x3ce, 0x4e90, 0xcb73, 0x9664, 0x8b2d, 0x0, 0x0);
        gbc.writeMem(0x14f5, { 0x2b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3ce, gbc.sp());
        EXPECT(0x14f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 019F
        gbc.setState(0x9d59, 0x3, 0x6b90, 0xb705, 0x24ed, 0x7a6d, 0x1, 0x0);
        gbc.writeMem(0x9d59, { 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3, gbc.sp());
        EXPECT(0x9d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9d59));
        // 2B 01A0
        gbc.setState(0x1ecc, 0x9efe, 0xabd0, 0xd88c, 0x9a87, 0xe236, 0x0, 0x1);
        gbc.writeMem(0x1ecc, { 0x2b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9efe, gbc.sp());
        EXPECT(0x1ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01A1
        gbc.setState(0x4c82, 0x1779, 0xd7a0, 0xa3f4, 0xae9a, 0x12, 0x1, 0x0);
        gbc.writeMem(0x4c82, { 0x2b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1779, gbc.sp());
        EXPECT(0x4c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01A2
        gbc.setState(0xc734, 0x8ffe, 0x6f80, 0xe5c4, 0x7581, 0xc57e, 0x1, 0x1);
        gbc.writeMem(0xc734, { 0x2b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8ffe, gbc.sp());
        EXPECT(0xc735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc734));
        // 2B 01A3
        gbc.setState(0xc724, 0x7deb, 0xad40, 0x463c, 0x8892, 0xae24, 0x1, 0x0);
        gbc.writeMem(0xc724, { 0x2b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7deb, gbc.sp());
        EXPECT(0xc725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc724));
        // 2B 01A4
        gbc.setState(0x8a99, 0x230a, 0x8810, 0x87be, 0xda1d, 0x5ad9, 0x0, 0x0);
        gbc.writeMem(0x8a99, { 0x2b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x230a, gbc.sp());
        EXPECT(0x8a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8a99));
        // 2B 01A5
        gbc.setState(0xb3fa, 0xf7f3, 0x7430, 0xe57d, 0xd73d, 0x8aaa, 0x0, 0x0);
        gbc.writeMem(0xb3fa, { 0x2b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf7f3, gbc.sp());
        EXPECT(0xb3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb3fa));
        // 2B 01A6
        gbc.setState(0x90d9, 0x5803, 0x1820, 0x5ad3, 0xb7a3, 0xf33f, 0x1, 0x0);
        gbc.writeMem(0x90d9, { 0x2b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5803, gbc.sp());
        EXPECT(0x90da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x90d9));
        // 2B 01A7
        gbc.setState(0xc5b8, 0x776c, 0x5810, 0xda6e, 0xcf1f, 0xc993, 0x0, 0x0);
        gbc.writeMem(0xc5b8, { 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x776c, gbc.sp());
        EXPECT(0xc5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc5b8));
        // 2B 01A8
        gbc.setState(0x8af4, 0x2dd6, 0x71b0, 0x4ee2, 0xac20, 0xde36, 0x0, 0x0);
        gbc.writeMem(0x8af4, { 0x2b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2dd6, gbc.sp());
        EXPECT(0x8af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8af4));
        // 2B 01A9
        gbc.setState(0xdeec, 0x33b9, 0x95f0, 0x7534, 0x825b, 0x5fac, 0x0, 0x1);
        gbc.writeMem(0xdeec, { 0x2b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x33b9, gbc.sp());
        EXPECT(0xdeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdeec));
        // 2B 01AA
        gbc.setState(0x195e, 0xecd2, 0xc5b0, 0xafca, 0x6ac2, 0x5585, 0x1, 0x0);
        gbc.writeMem(0x195e, { 0x2b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xecd2, gbc.sp());
        EXPECT(0x195f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01AB
        gbc.setState(0xc1f3, 0xe828, 0x5d00, 0x85a8, 0xfb51, 0xa411, 0x1, 0x1);
        gbc.writeMem(0xc1f3, { 0x2b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe828, gbc.sp());
        EXPECT(0xc1f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc1f3));
        // 2B 01AC
        gbc.setState(0xcad7, 0x736b, 0x910, 0x17fc, 0x9c37, 0x61fa, 0x1, 0x0);
        gbc.writeMem(0xcad7, { 0x2b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x736b, gbc.sp());
        EXPECT(0xcad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcad7));
        // 2B 01AD
        gbc.setState(0xe183, 0xca95, 0xd810, 0x9fe6, 0xbc2d, 0xf7b4, 0x1, 0x1);
        gbc.writeMem(0xe183, { 0x2b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xca95, gbc.sp());
        EXPECT(0xe184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe183));
        // 2B 01AE
        gbc.setState(0x2e6f, 0xe672, 0xac60, 0xcd3b, 0x8789, 0xde4b, 0x1, 0x1);
        gbc.writeMem(0x2e6f, { 0x2b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe672, gbc.sp());
        EXPECT(0x2e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01AF
        gbc.setState(0x81e7, 0x51a1, 0x9e10, 0xc21e, 0x2e1c, 0xfee, 0x0, 0x1);
        gbc.writeMem(0x81e7, { 0x2b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x51a1, gbc.sp());
        EXPECT(0x81e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x81e7));
        // 2B 01B0
        gbc.setState(0x988c, 0xcf5e, 0x1120, 0xe5, 0xab8c, 0x20c1, 0x1, 0x1);
        gbc.writeMem(0x988c, { 0x2b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcf5e, gbc.sp());
        EXPECT(0x988d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x988c));
        // 2B 01B1
        gbc.setState(0x3402, 0xdc1, 0x6af0, 0xf8ca, 0xa8c5, 0x359b, 0x1, 0x0);
        gbc.writeMem(0x3402, { 0x2b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdc1, gbc.sp());
        EXPECT(0x3403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01B2
        gbc.setState(0x1e78, 0x73a8, 0x2200, 0x17d1, 0x472c, 0xdd18, 0x0, 0x0);
        gbc.writeMem(0x1e78, { 0x2b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x73a8, gbc.sp());
        EXPECT(0x1e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01B3
        gbc.setState(0x28b, 0x20d0, 0x5230, 0xd4d0, 0xd29b, 0xfb67, 0x0, 0x1);
        gbc.writeMem(0x28b, { 0x2b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x20d0, gbc.sp());
        EXPECT(0x28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01B4
        gbc.setState(0xc548, 0x6b, 0xf350, 0x4526, 0x5563, 0x3a4, 0x1, 0x0);
        gbc.writeMem(0xc548, { 0x2b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6b, gbc.sp());
        EXPECT(0xc549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc548));
        // 2B 01B5
        gbc.setState(0x7771, 0x3441, 0x3b50, 0xf731, 0xcd49, 0x45dd, 0x0, 0x1);
        gbc.writeMem(0x7771, { 0x2b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3441, gbc.sp());
        EXPECT(0x7772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01B6
        gbc.setState(0xba12, 0x6a14, 0xf320, 0x9d7c, 0x3f75, 0x1e40, 0x1, 0x1);
        gbc.writeMem(0xba12, { 0x2b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6a14, gbc.sp());
        EXPECT(0xba13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xba12));
        // 2B 01B7
        gbc.setState(0xaf2c, 0xba1c, 0x4ad0, 0xfaec, 0x1229, 0x4a44, 0x0, 0x1);
        gbc.writeMem(0xaf2c, { 0x2b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xba1c, gbc.sp());
        EXPECT(0xaf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaf2c));
        // 2B 01B8
        gbc.setState(0x4c58, 0x589d, 0xa7f0, 0x59e, 0x4ff8, 0xc420, 0x1, 0x0);
        gbc.writeMem(0x4c58, { 0x2b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x589d, gbc.sp());
        EXPECT(0x4c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01B9
        gbc.setState(0xe0ba, 0x22ff, 0x2a70, 0x142f, 0x40c1, 0x629d, 0x1, 0x0);
        gbc.writeMem(0xe0ba, { 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x22ff, gbc.sp());
        EXPECT(0xe0bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe0ba));
        // 2B 01BB
        gbc.setState(0x92eb, 0xee2f, 0xec20, 0x42bd, 0xd4f6, 0x3f0, 0x1, 0x1);
        gbc.writeMem(0x92eb, { 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xee2f, gbc.sp());
        EXPECT(0x92ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x92eb));
        // 2B 01BC
        gbc.setState(0xe7ff, 0x2b89, 0x1060, 0x8c16, 0x6e2a, 0x87f8, 0x0, 0x1);
        gbc.writeMem(0xe7ff, { 0x2b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2b89, gbc.sp());
        EXPECT(0xe800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe7ff));
        // 2B 01BD
        gbc.setState(0x84fd, 0x7fc, 0x71b0, 0x9085, 0x65f7, 0x6e0a, 0x0, 0x1);
        gbc.writeMem(0x84fd, { 0x2b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7fc, gbc.sp());
        EXPECT(0x84fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x84fd));
        // 2B 01BE
        gbc.setState(0x5bb8, 0xa9f, 0x8d90, 0x3c61, 0xf7ed, 0x44ac, 0x1, 0x0);
        gbc.writeMem(0x5bb8, { 0x2b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa9f, gbc.sp());
        EXPECT(0x5bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01BF
        gbc.setState(0x5dd7, 0xa9bb, 0xf8f0, 0xb653, 0x95e3, 0x76de, 0x1, 0x1);
        gbc.writeMem(0x5dd7, { 0x2b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa9bb, gbc.sp());
        EXPECT(0x5dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01C0
        gbc.setState(0xafcb, 0xc2a9, 0x8090, 0xf31f, 0x6d68, 0xd208, 0x1, 0x0);
        gbc.writeMem(0xafcb, { 0x2b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc2a9, gbc.sp());
        EXPECT(0xafcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xafcb));
        // 2B 01C1
        gbc.setState(0x5bf5, 0x9d3, 0x7260, 0xf2b4, 0x9902, 0xbab4, 0x1, 0x1);
        gbc.writeMem(0x5bf5, { 0x2b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9d3, gbc.sp());
        EXPECT(0x5bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01C2
        gbc.setState(0x2e79, 0xd807, 0x4420, 0x8982, 0xea32, 0x1c0e, 0x1, 0x1);
        gbc.writeMem(0x2e79, { 0x2b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd807, gbc.sp());
        EXPECT(0x2e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01C3
        gbc.setState(0x67ec, 0x4b08, 0x9100, 0xaf6d, 0x3204, 0x9bd8, 0x0, 0x1);
        gbc.writeMem(0x67ec, { 0x2b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4b08, gbc.sp());
        EXPECT(0x67ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01C4
        gbc.setState(0x1dc0, 0xd44a, 0x1720, 0x8974, 0xf108, 0x7da9, 0x1, 0x0);
        gbc.writeMem(0x1dc0, { 0x2b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd44a, gbc.sp());
        EXPECT(0x1dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01C5
        gbc.setState(0x18f2, 0xc29e, 0xc140, 0x6fe8, 0x5323, 0xb951, 0x0, 0x1);
        gbc.writeMem(0x18f2, { 0x2b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc29e, gbc.sp());
        EXPECT(0x18f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01C6
        gbc.setState(0x9ff2, 0x2f0c, 0x5b0, 0xabb9, 0xbed7, 0x69a3, 0x0, 0x1);
        gbc.writeMem(0x9ff2, { 0x2b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2f0c, gbc.sp());
        EXPECT(0x9ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9ff2));
        // 2B 01C7
        gbc.setState(0x3452, 0x4dde, 0xbe00, 0x9eaf, 0x6948, 0x4394, 0x1, 0x1);
        gbc.writeMem(0x3452, { 0x2b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4dde, gbc.sp());
        EXPECT(0x3453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01C8
        gbc.setState(0x84d4, 0x9dc5, 0x9eb0, 0x3587, 0x6228, 0xc88c, 0x1, 0x1);
        gbc.writeMem(0x84d4, { 0x2b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9dc5, gbc.sp());
        EXPECT(0x84d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x84d4));
        // 2B 01C9
        gbc.setState(0x77de, 0x37d0, 0xd640, 0xa315, 0x1440, 0x963f, 0x0, 0x1);
        gbc.writeMem(0x77de, { 0x2b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x37d0, gbc.sp());
        EXPECT(0x77df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01CA
        gbc.setState(0xcc77, 0xe6c8, 0x95c0, 0xf80a, 0x70cd, 0xaffd, 0x1, 0x1);
        gbc.writeMem(0xcc77, { 0x2b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe6c8, gbc.sp());
        EXPECT(0xcc78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcc77));
        // 2B 01CB
        gbc.setState(0x9d82, 0xfb40, 0x94a0, 0x534c, 0xbef8, 0x7707, 0x0, 0x0);
        gbc.writeMem(0x9d82, { 0x2b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfb40, gbc.sp());
        EXPECT(0x9d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9d82));
        // 2B 01CC
        gbc.setState(0xa8fa, 0xb5e0, 0x47e0, 0x3b79, 0xc5a7, 0xd185, 0x0, 0x1);
        gbc.writeMem(0xa8fa, { 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb5e0, gbc.sp());
        EXPECT(0xa8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa8fa));
        // 2B 01CD
        gbc.setState(0x3b6d, 0xf085, 0xf120, 0xc418, 0xfc55, 0xa2db, 0x0, 0x1);
        gbc.writeMem(0x3b6d, { 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf085, gbc.sp());
        EXPECT(0x3b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01CF
        gbc.setState(0x7e04, 0x173, 0x90f0, 0x494, 0x7fdb, 0xbf8c, 0x1, 0x0);
        gbc.writeMem(0x7e04, { 0x2b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x173, gbc.sp());
        EXPECT(0x7e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01D0
        gbc.setState(0x23ee, 0x7128, 0x65e0, 0x102e, 0x8864, 0x4a01, 0x1, 0x0);
        gbc.writeMem(0x23ee, { 0x2b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7128, gbc.sp());
        EXPECT(0x23ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01D1
        gbc.setState(0xd0e1, 0x5f91, 0x3e0, 0xd843, 0x71c0, 0xce, 0x1, 0x1);
        gbc.writeMem(0xd0e1, { 0x2b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5f91, gbc.sp());
        EXPECT(0xd0e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd0e1));
        // 2B 01D2
        gbc.setState(0x4a85, 0xc0ce, 0x5de0, 0x97b3, 0xa9f2, 0xaea3, 0x0, 0x0);
        gbc.writeMem(0x4a85, { 0x2b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc0ce, gbc.sp());
        EXPECT(0x4a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01D3
        gbc.setState(0x753f, 0xdb3b, 0xe8d0, 0x9201, 0xcfb4, 0x96a5, 0x0, 0x1);
        gbc.writeMem(0x753f, { 0x2b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdb3b, gbc.sp());
        EXPECT(0x7540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01D4
        gbc.setState(0x3afb, 0xf0b0, 0x4e90, 0x56ad, 0x8b28, 0x10ae, 0x1, 0x0);
        gbc.writeMem(0x3afb, { 0x2b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf0b0, gbc.sp());
        EXPECT(0x3afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01D5
        gbc.setState(0x9b0f, 0xb6d3, 0xae00, 0x7e93, 0x996d, 0xb126, 0x0, 0x0);
        gbc.writeMem(0x9b0f, { 0x2b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb6d3, gbc.sp());
        EXPECT(0x9b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9b0f));
        // 2B 01D6
        gbc.setState(0x371, 0x3f32, 0x7be0, 0x6fe9, 0xf233, 0x4ecf, 0x0, 0x0);
        gbc.writeMem(0x371, { 0x2b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3f32, gbc.sp());
        EXPECT(0x372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01D7
        gbc.setState(0x2d8b, 0x309d, 0xfb20, 0x7f3a, 0x17f9, 0x5839, 0x1, 0x1);
        gbc.writeMem(0x2d8b, { 0x2b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x309d, gbc.sp());
        EXPECT(0x2d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01D8
        gbc.setState(0x7440, 0x3682, 0x9000, 0xd816, 0x5015, 0x1fda, 0x1, 0x0);
        gbc.writeMem(0x7440, { 0x2b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3682, gbc.sp());
        EXPECT(0x7441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01D9
        gbc.setState(0x4b18, 0x3701, 0xb20, 0xc5c4, 0xec0b, 0xe584, 0x0, 0x0);
        gbc.writeMem(0x4b18, { 0x2b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3701, gbc.sp());
        EXPECT(0x4b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01DA
        gbc.setState(0xe9d1, 0x3f18, 0x44a0, 0x1f78, 0xa478, 0x769, 0x1, 0x0);
        gbc.writeMem(0xe9d1, { 0x2b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3f18, gbc.sp());
        EXPECT(0xe9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe9d1));
        // 2B 01DB
        gbc.setState(0xb482, 0x9027, 0x2eb0, 0xce73, 0x39f3, 0x7267, 0x0, 0x0);
        gbc.writeMem(0xb482, { 0x2b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9027, gbc.sp());
        EXPECT(0xb483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb482));
        // 2B 01DC
        gbc.setState(0x356f, 0x5457, 0x1a0, 0x60d4, 0xe2da, 0xb57b, 0x1, 0x0);
        gbc.writeMem(0x356f, { 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5457, gbc.sp());
        EXPECT(0x3570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01DD
        gbc.setState(0x26ad, 0xb558, 0x3fe0, 0x39c6, 0x2671, 0x6d88, 0x0, 0x1);
        gbc.writeMem(0x26ad, { 0x2b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb558, gbc.sp());
        EXPECT(0x26ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01DE
        gbc.setState(0x1c46, 0xad05, 0x9d0, 0x1b0f, 0xa2bc, 0x2662, 0x0, 0x1);
        gbc.writeMem(0x1c46, { 0x2b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xad05, gbc.sp());
        EXPECT(0x1c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01DF
        gbc.setState(0xde4a, 0xdb08, 0x1750, 0xdcf, 0xba5c, 0x418b, 0x1, 0x1);
        gbc.writeMem(0xde4a, { 0x2b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdb08, gbc.sp());
        EXPECT(0xde4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xde4a));
        // 2B 01E0
        gbc.setState(0x279b, 0x11c2, 0xb710, 0xb6a6, 0x295a, 0x1a59, 0x1, 0x1);
        gbc.writeMem(0x279b, { 0x2b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x11c2, gbc.sp());
        EXPECT(0x279c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01E1
        gbc.setState(0xb989, 0x7bb6, 0x1170, 0xfc06, 0x9d1c, 0x3fbb, 0x1, 0x1);
        gbc.writeMem(0xb989, { 0x2b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7bb6, gbc.sp());
        EXPECT(0xb98a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb989));
        // 2B 01E2
        gbc.setState(0x30cb, 0x4df6, 0x2080, 0xc08b, 0xb288, 0x8a8a, 0x1, 0x0);
        gbc.writeMem(0x30cb, { 0x2b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4df6, gbc.sp());
        EXPECT(0x30cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01E3
        gbc.setState(0xc68e, 0xb7ad, 0xebe0, 0xbaef, 0x1631, 0xc5a0, 0x0, 0x1);
        gbc.writeMem(0xc68e, { 0x2b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb7ad, gbc.sp());
        EXPECT(0xc68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc68e));
        // 2B 01E4
        gbc.setState(0xad1c, 0x5a0d, 0x6b60, 0xdc96, 0x50d2, 0xd5b5, 0x0, 0x0);
        gbc.writeMem(0xad1c, { 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5a0d, gbc.sp());
        EXPECT(0xad1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xad1c));
        // 2B 01E5
        gbc.setState(0x8b84, 0xab8e, 0x4590, 0xf808, 0x18dc, 0x391f, 0x0, 0x0);
        gbc.writeMem(0x8b84, { 0x2b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xab8e, gbc.sp());
        EXPECT(0x8b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8b84));
        // 2B 01E7
        gbc.setState(0x8374, 0x3661, 0xca80, 0x8510, 0x9e1c, 0x18a4, 0x1, 0x0);
        gbc.writeMem(0x8374, { 0x2b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3661, gbc.sp());
        EXPECT(0x8375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8374));
        // 2B 01E8
        gbc.setState(0x8095, 0xfbc0, 0x7480, 0xc4d5, 0x4616, 0x7d6d, 0x0, 0x1);
        gbc.writeMem(0x8095, { 0x2b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfbc0, gbc.sp());
        EXPECT(0x8096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8095));
        // 2B 01E9
        gbc.setState(0xcbf5, 0xc789, 0x58e0, 0x8c30, 0x98fe, 0x8c9c, 0x1, 0x1);
        gbc.writeMem(0xcbf5, { 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc789, gbc.sp());
        EXPECT(0xcbf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcbf5));
        // 2B 01EA
        gbc.setState(0xcd35, 0x69c5, 0x8f50, 0xd9f4, 0xae2c, 0xa39a, 0x0, 0x1);
        gbc.writeMem(0xcd35, { 0x2b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x69c5, gbc.sp());
        EXPECT(0xcd36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcd35));
        // 2B 01EB
        gbc.setState(0xdc63, 0xa94b, 0xba00, 0x7cb1, 0xdfe2, 0xa179, 0x1, 0x0);
        gbc.writeMem(0xdc63, { 0x2b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa94b, gbc.sp());
        EXPECT(0xdc64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdc63));
        // 2B 01EC
        gbc.setState(0xe004, 0xd708, 0xc690, 0x2476, 0x6fed, 0x5067, 0x1, 0x0);
        gbc.writeMem(0xe004, { 0x2b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd708, gbc.sp());
        EXPECT(0xe005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe004));
        // 2B 01ED
        gbc.setState(0xb02, 0x8475, 0x2880, 0x6e71, 0xfc8e, 0xddd8, 0x1, 0x1);
        gbc.writeMem(0xb02, { 0x2b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8475, gbc.sp());
        EXPECT(0xb03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01EE
        gbc.setState(0x5da8, 0x876b, 0x3950, 0xa447, 0x5482, 0x7694, 0x1, 0x0);
        gbc.writeMem(0x5da8, { 0x2b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x876b, gbc.sp());
        EXPECT(0x5da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01EF
        gbc.setState(0x349d, 0x6842, 0xd440, 0xeabb, 0x7ffc, 0x2646, 0x0, 0x1);
        gbc.writeMem(0x349d, { 0x2b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6842, gbc.sp());
        EXPECT(0x349e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01F0
        gbc.setState(0x480f, 0x86b8, 0xe2d0, 0xda57, 0x181, 0xfe33, 0x1, 0x0);
        gbc.writeMem(0x480f, { 0x2b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x86b8, gbc.sp());
        EXPECT(0x4810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01F1
        gbc.setState(0xb849, 0x44e1, 0x3b30, 0x663f, 0xbbe0, 0x452a, 0x0, 0x0);
        gbc.writeMem(0xb849, { 0x2b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x44e1, gbc.sp());
        EXPECT(0xb84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb849));
        // 2B 01F2
        gbc.setState(0x1, 0xe94e, 0xc580, 0xa919, 0xadf, 0xc944, 0x1, 0x0);
        gbc.writeMem(0x1, { 0x2b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe94e, gbc.sp());
        EXPECT(0x2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01F3
        gbc.setState(0x9c21, 0x740d, 0x2190, 0xb035, 0xb852, 0xfa20, 0x1, 0x0);
        gbc.writeMem(0x9c21, { 0x2b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x740d, gbc.sp());
        EXPECT(0x9c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9c21));
        // 2B 01F4
        gbc.setState(0x25d3, 0x11f2, 0x8600, 0xff67, 0xc9da, 0xc1cc, 0x0, 0x0);
        gbc.writeMem(0x25d3, { 0x2b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x11f2, gbc.sp());
        EXPECT(0x25d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01F5
        gbc.setState(0x4ed5, 0x90da, 0x9890, 0x3c08, 0x2907, 0x69d3, 0x0, 0x0);
        gbc.writeMem(0x4ed5, { 0x2b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x90da, gbc.sp());
        EXPECT(0x4ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01F6
        gbc.setState(0xb63, 0xffe, 0x620, 0xd957, 0xba4a, 0xe315, 0x1, 0x0);
        gbc.writeMem(0xb63, { 0x2b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xffe, gbc.sp());
        EXPECT(0xb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01F8
        gbc.setState(0x1e98, 0xa42, 0xab80, 0x78f7, 0xb969, 0x2ec2, 0x0, 0x1);
        gbc.writeMem(0x1e98, { 0x2b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa42, gbc.sp());
        EXPECT(0x1e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 01F9
        gbc.setState(0xb6df, 0xb2c5, 0x51c0, 0xa2b3, 0xb75b, 0x49ce, 0x1, 0x1);
        gbc.writeMem(0xb6df, { 0x2b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb2c5, gbc.sp());
        EXPECT(0xb6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb6df));
        // 2B 01FA
        gbc.setState(0xd054, 0x15be, 0x2e10, 0xd32, 0x55c0, 0xb25, 0x0, 0x1);
        gbc.writeMem(0xd054, { 0x2b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x15be, gbc.sp());
        EXPECT(0xd055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd054));
        // 2B 01FB
        gbc.setState(0xcae3, 0x2603, 0x2250, 0xf199, 0xc1ef, 0x6a56, 0x0, 0x0);
        gbc.writeMem(0xcae3, { 0x2b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2603, gbc.sp());
        EXPECT(0xcae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcae3));
        // 2B 01FC
        gbc.setState(0x9e2f, 0xcb01, 0x2970, 0x288b, 0x9a64, 0x3b39, 0x0, 0x1);
        gbc.writeMem(0x9e2f, { 0x2b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcb01, gbc.sp());
        EXPECT(0x9e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9e2f));
        // 2B 01FD
        gbc.setState(0xedcb, 0x25d6, 0xaf20, 0xf610, 0x2c16, 0xd189, 0x0, 0x1);
        gbc.writeMem(0xedcb, { 0x2b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x25d6, gbc.sp());
        EXPECT(0xedcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xedcb));
        // 2B 01FE
        gbc.setState(0x60d8, 0xd071, 0x9930, 0x53eb, 0xd3a6, 0x3519, 0x0, 0x1);
        gbc.writeMem(0x60d8, { 0x2b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd071, gbc.sp());
        EXPECT(0x60d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 01FF
        gbc.setState(0x3677, 0xe6bf, 0xe460, 0x94a8, 0xcf40, 0x6fac, 0x1, 0x0);
        gbc.writeMem(0x3677, { 0x2b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe6bf, gbc.sp());
        EXPECT(0x3678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0200
        gbc.setState(0x54f8, 0x636c, 0xbbb0, 0xd495, 0x4d01, 0x8635, 0x0, 0x1);
        gbc.writeMem(0x54f8, { 0x2b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x636c, gbc.sp());
        EXPECT(0x54f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0201
        gbc.setState(0xcc9f, 0xa7d1, 0xbfd0, 0xda75, 0xf4c4, 0xe59, 0x1, 0x0);
        gbc.writeMem(0xcc9f, { 0x2b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa7d1, gbc.sp());
        EXPECT(0xcca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcc9f));
        // 2B 0202
        gbc.setState(0x87e1, 0xa1df, 0x6930, 0x6f46, 0x7383, 0x6d36, 0x0, 0x1);
        gbc.writeMem(0x87e1, { 0x2b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa1df, gbc.sp());
        EXPECT(0x87e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x87e1));
        // 2B 0203
        gbc.setState(0xa299, 0xcede, 0xc8d0, 0x1eac, 0xa53b, 0x5c56, 0x0, 0x1);
        gbc.writeMem(0xa299, { 0x2b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcede, gbc.sp());
        EXPECT(0xa29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa299));
        // 2B 0204
        gbc.setState(0x67a3, 0x65f4, 0x48a0, 0xe16d, 0xe960, 0x2fb7, 0x1, 0x0);
        gbc.writeMem(0x67a3, { 0x2b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x65f4, gbc.sp());
        EXPECT(0x67a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0205
        gbc.setState(0x8fd2, 0x4791, 0xa090, 0xe8fd, 0x1b6c, 0x8cd6, 0x0, 0x0);
        gbc.writeMem(0x8fd2, { 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4791, gbc.sp());
        EXPECT(0x8fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8fd2));
        // 2B 0206
        gbc.setState(0xd20d, 0xdb80, 0x3360, 0x3e1c, 0xef3a, 0x3106, 0x1, 0x0);
        gbc.writeMem(0xd20d, { 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdb80, gbc.sp());
        EXPECT(0xd20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd20d));
        // 2B 0207
        gbc.setState(0xc07a, 0xe47f, 0x2000, 0xf2a4, 0x8342, 0x69b, 0x1, 0x0);
        gbc.writeMem(0xc07a, { 0x2b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe47f, gbc.sp());
        EXPECT(0xc07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc07a));
        // 2B 0208
        gbc.setState(0x7925, 0xe0d1, 0x95e0, 0x2928, 0x6541, 0x347f, 0x0, 0x0);
        gbc.writeMem(0x7925, { 0x2b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe0d1, gbc.sp());
        EXPECT(0x7926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0209
        gbc.setState(0x36ae, 0x3298, 0xc7b0, 0x1166, 0xb630, 0x5061, 0x1, 0x0);
        gbc.writeMem(0x36ae, { 0x2b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3298, gbc.sp());
        EXPECT(0x36af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 020A
        gbc.setState(0xa49e, 0xdd1d, 0x3c00, 0x2f65, 0xc80b, 0xc62e, 0x1, 0x1);
        gbc.writeMem(0xa49e, { 0x2b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdd1d, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa49e));
        // 2B 020B
        gbc.setState(0xd4d4, 0x2918, 0x95f0, 0x2a86, 0x2439, 0x5f4d, 0x0, 0x1);
        gbc.writeMem(0xd4d4, { 0x2b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2918, gbc.sp());
        EXPECT(0xd4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd4d4));
        // 2B 020C
        gbc.setState(0xb50b, 0xebb5, 0xb6e0, 0x1640, 0x7be3, 0x864c, 0x1, 0x0);
        gbc.writeMem(0xb50b, { 0x2b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xebb5, gbc.sp());
        EXPECT(0xb50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb50b));
        // 2B 020D
        gbc.setState(0x684a, 0xe2e8, 0x9bb0, 0xc2e, 0x75cc, 0x65a4, 0x1, 0x0);
        gbc.writeMem(0x684a, { 0x2b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe2e8, gbc.sp());
        EXPECT(0x684b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 020E
        gbc.setState(0x7718, 0xcd8a, 0x69f0, 0xe821, 0x9101, 0x16a3, 0x1, 0x0);
        gbc.writeMem(0x7718, { 0x2b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcd8a, gbc.sp());
        EXPECT(0x7719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 020F
        gbc.setState(0x4ddb, 0xb692, 0xf460, 0x7f95, 0x168a, 0xf14f, 0x1, 0x1);
        gbc.writeMem(0x4ddb, { 0x2b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb692, gbc.sp());
        EXPECT(0x4ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0210
        gbc.setState(0x7880, 0x10ad, 0x6ae0, 0xf71, 0x79fe, 0xeddd, 0x0, 0x1);
        gbc.writeMem(0x7880, { 0x2b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x10ad, gbc.sp());
        EXPECT(0x7881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0211
        gbc.setState(0xb821, 0x98e9, 0xb1e0, 0x5a7b, 0xb5f5, 0xd89a, 0x0, 0x0);
        gbc.writeMem(0xb821, { 0x2b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x98e9, gbc.sp());
        EXPECT(0xb822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb821));
        // 2B 0212
        gbc.setState(0xc6eb, 0xcd6a, 0x10, 0x7dcf, 0x17d9, 0xde28, 0x0, 0x1);
        gbc.writeMem(0xc6eb, { 0x2b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcd6a, gbc.sp());
        EXPECT(0xc6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc6eb));
        // 2B 0213
        gbc.setState(0xeb0e, 0x2b9, 0x13a0, 0x6e84, 0x1ee1, 0x1201, 0x0, 0x1);
        gbc.writeMem(0xeb0e, { 0x2b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2b9, gbc.sp());
        EXPECT(0xeb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xeb0e));
        // 2B 0214
        gbc.setState(0xe566, 0x86cd, 0x8af0, 0xe074, 0x5c00, 0xe3c5, 0x1, 0x0);
        gbc.writeMem(0xe566, { 0x2b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x86cd, gbc.sp());
        EXPECT(0xe567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe566));
        // 2B 0215
        gbc.setState(0x289e, 0x8b15, 0xac40, 0xa2a2, 0xee8e, 0x4250, 0x0, 0x1);
        gbc.writeMem(0x289e, { 0x2b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8b15, gbc.sp());
        EXPECT(0x289f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0216
        gbc.setState(0x91d3, 0x2389, 0x7ac0, 0x5d00, 0xdd3a, 0xb940, 0x1, 0x1);
        gbc.writeMem(0x91d3, { 0x2b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2389, gbc.sp());
        EXPECT(0x91d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x91d3));
        // 2B 0217
        gbc.setState(0x72f6, 0x6d45, 0xa9a0, 0x6545, 0xf72b, 0x7dd7, 0x0, 0x1);
        gbc.writeMem(0x72f6, { 0x2b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6d45, gbc.sp());
        EXPECT(0x72f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0218
        gbc.setState(0xdad6, 0x38ee, 0x2eb0, 0x7513, 0x2f18, 0xcd73, 0x1, 0x0);
        gbc.writeMem(0xdad6, { 0x2b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x38ee, gbc.sp());
        EXPECT(0xdad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdad6));
        // 2B 021A
        gbc.setState(0xd625, 0xc96c, 0xaae0, 0x6039, 0xb2c8, 0xacd3, 0x0, 0x1);
        gbc.writeMem(0xd625, { 0x2b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc96c, gbc.sp());
        EXPECT(0xd626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd625));
        // 2B 021B
        gbc.setState(0x3812, 0x2288, 0x4930, 0x8d07, 0x707, 0x78cb, 0x0, 0x0);
        gbc.writeMem(0x3812, { 0x2b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2288, gbc.sp());
        EXPECT(0x3813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 021C
        gbc.setState(0xa193, 0x58ad, 0xc420, 0x1519, 0xf790, 0x8d9a, 0x1, 0x0);
        gbc.writeMem(0xa193, { 0x2b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x58ad, gbc.sp());
        EXPECT(0xa194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa193));
        // 2B 021D
        gbc.setState(0x2e25, 0xce, 0x34b0, 0x4d93, 0xdcb7, 0x9f1, 0x0, 0x0);
        gbc.writeMem(0x2e25, { 0x2b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xce, gbc.sp());
        EXPECT(0x2e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 021E
        gbc.setState(0xb72b, 0x395f, 0x9ab0, 0xf0bb, 0x6072, 0x6890, 0x1, 0x0);
        gbc.writeMem(0xb72b, { 0x2b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x395f, gbc.sp());
        EXPECT(0xb72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb72b));
        // 2B 021F
        gbc.setState(0xcb36, 0x50d6, 0x88b0, 0xfb37, 0xac42, 0x9aa7, 0x0, 0x0);
        gbc.writeMem(0xcb36, { 0x2b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x50d6, gbc.sp());
        EXPECT(0xcb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcb36));
        // 2B 0220
        gbc.setState(0x32b2, 0x4756, 0x4cd0, 0x994d, 0x3ce8, 0xf314, 0x1, 0x0);
        gbc.writeMem(0x32b2, { 0x2b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4756, gbc.sp());
        EXPECT(0x32b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0221
        gbc.setState(0xeb60, 0xdd7f, 0x9200, 0x2e62, 0x9680, 0xa8c8, 0x1, 0x1);
        gbc.writeMem(0xeb60, { 0x2b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdd7f, gbc.sp());
        EXPECT(0xeb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xeb60));
        // 2B 0222
        gbc.setState(0xe687, 0xe79b, 0xa360, 0x9f7a, 0x451c, 0xb6c, 0x1, 0x0);
        gbc.writeMem(0xe687, { 0x2b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe79b, gbc.sp());
        EXPECT(0xe688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe687));
        // 2B 0223
        gbc.setState(0x3f1b, 0xe5e, 0x7ca0, 0xf76c, 0x7ff6, 0x4c42, 0x0, 0x0);
        gbc.writeMem(0x3f1b, { 0x2b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe5e, gbc.sp());
        EXPECT(0x3f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0224
        gbc.setState(0xe8d2, 0x7bc3, 0x25c0, 0x25ab, 0xc80c, 0x90a3, 0x1, 0x0);
        gbc.writeMem(0xe8d2, { 0x2b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7bc3, gbc.sp());
        EXPECT(0xe8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe8d2));
        // 2B 0225
        gbc.setState(0x3eda, 0x325a, 0xf980, 0x61a8, 0xeaf7, 0x88d0, 0x1, 0x1);
        gbc.writeMem(0x3eda, { 0x2b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x325a, gbc.sp());
        EXPECT(0x3edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0226
        gbc.setState(0xe24, 0xe12c, 0x10a0, 0xcc1e, 0xac50, 0x508e, 0x0, 0x1);
        gbc.writeMem(0xe24, { 0x2b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe12c, gbc.sp());
        EXPECT(0xe25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0227
        gbc.setState(0x66a4, 0xa519, 0xd6e0, 0xe29e, 0xcb4b, 0x816b, 0x1, 0x0);
        gbc.writeMem(0x66a4, { 0x2b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa519, gbc.sp());
        EXPECT(0x66a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 022A
        gbc.setState(0xafb, 0x507b, 0x1f0, 0x5a69, 0xf9f8, 0xf9fa, 0x0, 0x1);
        gbc.writeMem(0xafb, { 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x507b, gbc.sp());
        EXPECT(0xafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 022B
        gbc.setState(0xd359, 0xb498, 0x4160, 0xe6f0, 0xa9bd, 0x88e, 0x0, 0x0);
        gbc.writeMem(0xd359, { 0x2b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb498, gbc.sp());
        EXPECT(0xd35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd359));
        // 2B 022C
        gbc.setState(0x3031, 0xc486, 0x60a0, 0x25d1, 0xac12, 0xa90c, 0x1, 0x1);
        gbc.writeMem(0x3031, { 0x2b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc486, gbc.sp());
        EXPECT(0x3032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 022D
        gbc.setState(0x6d5b, 0xf2d8, 0x6ec0, 0xb34c, 0x952f, 0x2e12, 0x0, 0x1);
        gbc.writeMem(0x6d5b, { 0x2b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf2d8, gbc.sp());
        EXPECT(0x6d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 022F
        gbc.setState(0xa80a, 0xb8c0, 0x5620, 0x852b, 0x918, 0x3de9, 0x0, 0x1);
        gbc.writeMem(0xa80a, { 0x2b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb8c0, gbc.sp());
        EXPECT(0xa80b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa80a));
        // 2B 0230
        gbc.setState(0xe23, 0xa1d8, 0xaa00, 0x55c2, 0x5d11, 0x8f32, 0x1, 0x1);
        gbc.writeMem(0xe23, { 0x2b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa1d8, gbc.sp());
        EXPECT(0xe24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0231
        gbc.setState(0x2586, 0x2ae7, 0x2300, 0xa7e4, 0xe57b, 0x988, 0x1, 0x0);
        gbc.writeMem(0x2586, { 0x2b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2ae7, gbc.sp());
        EXPECT(0x2587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0233
        gbc.setState(0x64b3, 0xe9a4, 0x1930, 0xe612, 0x7e4d, 0x2e08, 0x1, 0x0);
        gbc.writeMem(0x64b3, { 0x2b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe9a4, gbc.sp());
        EXPECT(0x64b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0234
        gbc.setState(0xcaaa, 0x2763, 0xbf00, 0x563e, 0x6574, 0xb28a, 0x0, 0x1);
        gbc.writeMem(0xcaaa, { 0x2b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2763, gbc.sp());
        EXPECT(0xcaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcaaa));
        // 2B 0235
        gbc.setState(0x951d, 0x66c9, 0xf1a0, 0xb3d5, 0x2fa6, 0x6872, 0x0, 0x0);
        gbc.writeMem(0x951d, { 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x66c9, gbc.sp());
        EXPECT(0x951e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x951d));
        // 2B 0236
        gbc.setState(0x133e, 0x2686, 0x6b30, 0x51cd, 0x543d, 0x3c4, 0x1, 0x1);
        gbc.writeMem(0x133e, { 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2686, gbc.sp());
        EXPECT(0x133f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0237
        gbc.setState(0x3859, 0xa8b, 0xb5f0, 0x4c70, 0xab97, 0xc74d, 0x0, 0x1);
        gbc.writeMem(0x3859, { 0x2b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa8b, gbc.sp());
        EXPECT(0x385a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0238
        gbc.setState(0x6639, 0x6274, 0x3840, 0x292, 0xb707, 0xcb82, 0x1, 0x1);
        gbc.writeMem(0x6639, { 0x2b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6274, gbc.sp());
        EXPECT(0x663a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0239
        gbc.setState(0x25bc, 0x8ee8, 0xb90, 0xca66, 0x72f0, 0xf49a, 0x0, 0x0);
        gbc.writeMem(0x25bc, { 0x2b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8ee8, gbc.sp());
        EXPECT(0x25bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 023A
        gbc.setState(0xc871, 0x70a4, 0x3170, 0x2da1, 0xb387, 0x2800, 0x1, 0x1);
        gbc.writeMem(0xc871, { 0x2b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x70a4, gbc.sp());
        EXPECT(0xc872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc871));
        // 2B 023C
        gbc.setState(0x2997, 0x8bd1, 0xb9f0, 0x5545, 0xbacd, 0x8299, 0x0, 0x0);
        gbc.writeMem(0x2997, { 0x2b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8bd1, gbc.sp());
        EXPECT(0x2998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 023D
        gbc.setState(0xdf3d, 0xc506, 0x80c0, 0x5a13, 0x8a2f, 0xe75c, 0x0, 0x1);
        gbc.writeMem(0xdf3d, { 0x2b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc506, gbc.sp());
        EXPECT(0xdf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdf3d));
        // 2B 023E
        gbc.setState(0x11ac, 0xc10a, 0xbe20, 0x2a70, 0xe4b8, 0xfdba, 0x1, 0x1);
        gbc.writeMem(0x11ac, { 0x2b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc10a, gbc.sp());
        EXPECT(0x11ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0240
        gbc.setState(0x37ab, 0xcb1a, 0x1810, 0x6c5b, 0xa1ac, 0xe1f5, 0x0, 0x0);
        gbc.writeMem(0x37ab, { 0x2b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcb1a, gbc.sp());
        EXPECT(0x37ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0241
        gbc.setState(0xb152, 0xc8a4, 0xe150, 0xbd3a, 0xe141, 0xe1b8, 0x0, 0x1);
        gbc.writeMem(0xb152, { 0x2b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc8a4, gbc.sp());
        EXPECT(0xb153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb152));
        // 2B 0242
        gbc.setState(0x1fa1, 0x5f6b, 0x6720, 0x283b, 0xd880, 0x953c, 0x0, 0x0);
        gbc.writeMem(0x1fa1, { 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5f6b, gbc.sp());
        EXPECT(0x1fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0243
        gbc.setState(0xeffe, 0xba12, 0x2ed0, 0x3a9f, 0xe542, 0x2702, 0x0, 0x1);
        gbc.writeMem(0xeffe, { 0x2b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xba12, gbc.sp());
        EXPECT(0xefff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xeffe));
        // 2B 0244
        gbc.setState(0xd649, 0x22db, 0x8c90, 0x5a64, 0x72f3, 0x898, 0x0, 0x1);
        gbc.writeMem(0xd649, { 0x2b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x22db, gbc.sp());
        EXPECT(0xd64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd649));
        // 2B 0245
        gbc.setState(0x1ebc, 0x7f24, 0xf4d0, 0x73a6, 0x4e79, 0x1c6a, 0x1, 0x1);
        gbc.writeMem(0x1ebc, { 0x2b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7f24, gbc.sp());
        EXPECT(0x1ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0246
        gbc.setState(0xd368, 0xc67b, 0x3c70, 0x3df4, 0x47bd, 0x1566, 0x0, 0x1);
        gbc.writeMem(0xd368, { 0x2b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc67b, gbc.sp());
        EXPECT(0xd369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd368));
        // 2B 0247
        gbc.setState(0x3ae2, 0xb37a, 0x8900, 0x43dc, 0xc612, 0x7a2c, 0x1, 0x1);
        gbc.writeMem(0x3ae2, { 0x2b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb37a, gbc.sp());
        EXPECT(0x3ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0248
        gbc.setState(0x505e, 0x6047, 0x5f80, 0x139f, 0xd388, 0x30a6, 0x1, 0x1);
        gbc.writeMem(0x505e, { 0x2b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6047, gbc.sp());
        EXPECT(0x505f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0249
        gbc.setState(0xc179, 0x226b, 0x2270, 0x30e2, 0xd4dd, 0xa925, 0x1, 0x0);
        gbc.writeMem(0xc179, { 0x2b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x226b, gbc.sp());
        EXPECT(0xc17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc179));
        // 2B 024A
        gbc.setState(0xc602, 0x4948, 0xf230, 0x64a1, 0x343a, 0xbfd0, 0x1, 0x0);
        gbc.writeMem(0xc602, { 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4948, gbc.sp());
        EXPECT(0xc603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc602));
        // 2B 024B
        gbc.setState(0x9c53, 0x477f, 0xca40, 0xe560, 0xef3b, 0x45ef, 0x1, 0x0);
        gbc.writeMem(0x9c53, { 0x2b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x477f, gbc.sp());
        EXPECT(0x9c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9c53));
        // 2B 024C
        gbc.setState(0x1cf3, 0x1e6c, 0xdb0, 0x4a73, 0x221c, 0xc12f, 0x0, 0x0);
        gbc.writeMem(0x1cf3, { 0x2b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1e6c, gbc.sp());
        EXPECT(0x1cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 024D
        gbc.setState(0x2e68, 0xd9f0, 0x1580, 0x3c62, 0x2c22, 0x5bd1, 0x1, 0x0);
        gbc.writeMem(0x2e68, { 0x2b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd9f0, gbc.sp());
        EXPECT(0x2e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 024E
        gbc.setState(0x6583, 0x621c, 0x1ac0, 0xd924, 0x8399, 0xbcae, 0x0, 0x0);
        gbc.writeMem(0x6583, { 0x2b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x621c, gbc.sp());
        EXPECT(0x6584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 024F
        gbc.setState(0x9ab, 0xe88e, 0xc340, 0x965e, 0x888d, 0xd702, 0x1, 0x1);
        gbc.writeMem(0x9ab, { 0x2b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe88e, gbc.sp());
        EXPECT(0x9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0250
        gbc.setState(0x932f, 0x94c9, 0xb1b0, 0x9e41, 0xdf, 0x43a2, 0x1, 0x1);
        gbc.writeMem(0x932f, { 0x2b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x94c9, gbc.sp());
        EXPECT(0x9330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x932f));
        // 2B 0251
        gbc.setState(0xa2d1, 0x3cd, 0xf900, 0x98b4, 0xa7ab, 0xe9d8, 0x0, 0x0);
        gbc.writeMem(0xa2d1, { 0x2b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3cd, gbc.sp());
        EXPECT(0xa2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa2d1));
        // 2B 0252
        gbc.setState(0x9c19, 0x29d9, 0x6380, 0xf5fe, 0x76b9, 0x1941, 0x1, 0x1);
        gbc.writeMem(0x9c19, { 0x2b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x29d9, gbc.sp());
        EXPECT(0x9c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9c19));
        // 2B 0253
        gbc.setState(0x2869, 0x18b6, 0x9af0, 0x5652, 0x2f82, 0x7bbd, 0x1, 0x0);
        gbc.writeMem(0x2869, { 0x2b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x18b6, gbc.sp());
        EXPECT(0x286a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0254
        gbc.setState(0xd3a2, 0x49da, 0xaf50, 0x6940, 0xbe9f, 0x8d59, 0x0, 0x0);
        gbc.writeMem(0xd3a2, { 0x2b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x49da, gbc.sp());
        EXPECT(0xd3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd3a2));
        // 2B 0255
        gbc.setState(0x8399, 0xee46, 0x4510, 0x7dfe, 0x2453, 0x4bed, 0x0, 0x1);
        gbc.writeMem(0x8399, { 0x2b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xee46, gbc.sp());
        EXPECT(0x839a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8399));
        // 2B 0256
        gbc.setState(0x2352, 0xa393, 0xf990, 0x8ee3, 0xd6fe, 0x3b1e, 0x0, 0x1);
        gbc.writeMem(0x2352, { 0x2b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa393, gbc.sp());
        EXPECT(0x2353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0257
        gbc.setState(0x338b, 0x92f3, 0xe140, 0xfa5f, 0x6b35, 0x5b6d, 0x0, 0x0);
        gbc.writeMem(0x338b, { 0x2b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x92f3, gbc.sp());
        EXPECT(0x338c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0258
        gbc.setState(0x8b0c, 0xcd0c, 0x6c70, 0xb560, 0xcf33, 0x118e, 0x1, 0x1);
        gbc.writeMem(0x8b0c, { 0x2b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcd0c, gbc.sp());
        EXPECT(0x8b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8b0c));
        // 2B 0259
        gbc.setState(0x28d0, 0xf38c, 0xf450, 0x8114, 0x462c, 0x7202, 0x0, 0x1);
        gbc.writeMem(0x28d0, { 0x2b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf38c, gbc.sp());
        EXPECT(0x28d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 025A
        gbc.setState(0x992a, 0x272b, 0x7900, 0x5e1f, 0x889, 0xb6dd, 0x0, 0x1);
        gbc.writeMem(0x992a, { 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x272b, gbc.sp());
        EXPECT(0x992b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x992a));
        // 2B 025B
        gbc.setState(0x1176, 0x226b, 0xaef0, 0x18be, 0x30dd, 0x3443, 0x0, 0x1);
        gbc.writeMem(0x1176, { 0x2b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x226b, gbc.sp());
        EXPECT(0x1177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 025C
        gbc.setState(0x77d9, 0xb9c7, 0x99e0, 0xff0f, 0xf4f, 0x7287, 0x1, 0x1);
        gbc.writeMem(0x77d9, { 0x2b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb9c7, gbc.sp());
        EXPECT(0x77da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 025F
        gbc.setState(0x8414, 0x9bb0, 0x7850, 0x828, 0xebac, 0xc86b, 0x0, 0x1);
        gbc.writeMem(0x8414, { 0x2b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9bb0, gbc.sp());
        EXPECT(0x8415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8414));
        // 2B 0261
        gbc.setState(0xd916, 0x76ad, 0x3810, 0x41d1, 0xb791, 0xa675, 0x1, 0x0);
        gbc.writeMem(0xd916, { 0x2b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x76ad, gbc.sp());
        EXPECT(0xd917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd916));
        // 2B 0262
        gbc.setState(0x3cf3, 0xb3b, 0x1320, 0xbc6e, 0x4f, 0xea3c, 0x1, 0x0);
        gbc.writeMem(0x3cf3, { 0x2b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb3b, gbc.sp());
        EXPECT(0x3cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0263
        gbc.setState(0x308f, 0x3b17, 0xcd00, 0x34de, 0x1318, 0xb832, 0x0, 0x1);
        gbc.writeMem(0x308f, { 0x2b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3b17, gbc.sp());
        EXPECT(0x3090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0264
        gbc.setState(0xe7ca, 0x66bb, 0xbdb0, 0x84ba, 0x23c7, 0xfb38, 0x0, 0x0);
        gbc.writeMem(0xe7ca, { 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x66bb, gbc.sp());
        EXPECT(0xe7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe7ca));
        // 2B 0265
        gbc.setState(0xdcd2, 0x6d, 0x68c0, 0x63e, 0xf218, 0xfaf9, 0x0, 0x1);
        gbc.writeMem(0xdcd2, { 0x2b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6d, gbc.sp());
        EXPECT(0xdcd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdcd2));
        // 2B 0266
        gbc.setState(0x8a86, 0xe77b, 0x80d0, 0x39f4, 0x55e7, 0x941e, 0x1, 0x1);
        gbc.writeMem(0x8a86, { 0x2b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe77b, gbc.sp());
        EXPECT(0x8a87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8a86));
        // 2B 0267
        gbc.setState(0xe638, 0xa4c8, 0xe780, 0x697f, 0x726b, 0x7f41, 0x1, 0x1);
        gbc.writeMem(0xe638, { 0x2b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa4c8, gbc.sp());
        EXPECT(0xe639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe638));
        // 2B 0268
        gbc.setState(0xe122, 0xd76d, 0x13a0, 0x3d36, 0x188e, 0xbcf2, 0x0, 0x1);
        gbc.writeMem(0xe122, { 0x2b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd76d, gbc.sp());
        EXPECT(0xe123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe122));
        // 2B 0269
        gbc.setState(0xec7b, 0x7852, 0x5710, 0x1eef, 0xc30e, 0xdbd8, 0x1, 0x1);
        gbc.writeMem(0xec7b, { 0x2b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7852, gbc.sp());
        EXPECT(0xec7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xec7b));
        // 2B 026A
        gbc.setState(0x7636, 0xcedc, 0xf120, 0x118f, 0xa29, 0xdcdc, 0x1, 0x0);
        gbc.writeMem(0x7636, { 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcedc, gbc.sp());
        EXPECT(0x7637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 026B
        gbc.setState(0x85d9, 0x9e01, 0xa810, 0xac4c, 0x92e, 0x8fd4, 0x0, 0x0);
        gbc.writeMem(0x85d9, { 0x2b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9e01, gbc.sp());
        EXPECT(0x85da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x85d9));
        // 2B 026C
        gbc.setState(0x5963, 0x777c, 0x3070, 0x4d29, 0x55e9, 0x60e6, 0x1, 0x0);
        gbc.writeMem(0x5963, { 0x2b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x777c, gbc.sp());
        EXPECT(0x5964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 026D
        gbc.setState(0x38de, 0xe0d8, 0x70f0, 0x6e9, 0xb96c, 0x1b6e, 0x1, 0x0);
        gbc.writeMem(0x38de, { 0x2b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe0d8, gbc.sp());
        EXPECT(0x38df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 026E
        gbc.setState(0x691, 0x6529, 0x3470, 0x9021, 0xde20, 0x645a, 0x1, 0x1);
        gbc.writeMem(0x691, { 0x2b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6529, gbc.sp());
        EXPECT(0x692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 026F
        gbc.setState(0xef06, 0x1b6c, 0xe8d0, 0xe2f7, 0x7774, 0x7425, 0x1, 0x0);
        gbc.writeMem(0xef06, { 0x2b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1b6c, gbc.sp());
        EXPECT(0xef07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xef06));
        // 2B 0270
        gbc.setState(0xbddd, 0x90f, 0x7780, 0x6c12, 0x37fb, 0x903d, 0x1, 0x0);
        gbc.writeMem(0xbddd, { 0x2b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x90f, gbc.sp());
        EXPECT(0xbdde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbddd));
        // 2B 0271
        gbc.setState(0xf03, 0x4654, 0x6730, 0x32f5, 0x4d60, 0x5458, 0x0, 0x0);
        gbc.writeMem(0xf03, { 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4654, gbc.sp());
        EXPECT(0xf04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0272
        gbc.setState(0xc848, 0xaf7a, 0x5210, 0x2657, 0xdd85, 0xf, 0x1, 0x1);
        gbc.writeMem(0xc848, { 0x2b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaf7a, gbc.sp());
        EXPECT(0xc849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc848));
        // 2B 0273
        gbc.setState(0x6d79, 0xc365, 0x4f70, 0xed1e, 0xc187, 0x5a21, 0x0, 0x0);
        gbc.writeMem(0x6d79, { 0x2b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc365, gbc.sp());
        EXPECT(0x6d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0274
        gbc.setState(0x1669, 0xdcd9, 0xa370, 0xa2b7, 0x51de, 0x4b8f, 0x1, 0x0);
        gbc.writeMem(0x1669, { 0x2b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdcd9, gbc.sp());
        EXPECT(0x166a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0275
        gbc.setState(0xc35e, 0xfb7f, 0xc760, 0x788, 0x1cba, 0xaf9d, 0x1, 0x0);
        gbc.writeMem(0xc35e, { 0x2b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfb7f, gbc.sp());
        EXPECT(0xc35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc35e));
        // 2B 0276
        gbc.setState(0x946d, 0x2a90, 0xebc0, 0x52e9, 0xe792, 0x6c4c, 0x0, 0x0);
        gbc.writeMem(0x946d, { 0x2b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2a90, gbc.sp());
        EXPECT(0x946e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x946d));
        // 2B 0278
        gbc.setState(0x98b3, 0xa6a2, 0xf450, 0x44a1, 0x1aea, 0x40b9, 0x0, 0x1);
        gbc.writeMem(0x98b3, { 0x2b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa6a2, gbc.sp());
        EXPECT(0x98b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x98b3));
        // 2B 027A
        gbc.setState(0xe573, 0xf172, 0xf400, 0xba73, 0x2108, 0x2fd1, 0x1, 0x1);
        gbc.writeMem(0xe573, { 0x2b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf172, gbc.sp());
        EXPECT(0xe574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe573));
        // 2B 027B
        gbc.setState(0x7864, 0xf65d, 0x34c0, 0xd366, 0xb2a4, 0x935c, 0x1, 0x0);
        gbc.writeMem(0x7864, { 0x2b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf65d, gbc.sp());
        EXPECT(0x7865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 027C
        gbc.setState(0x6774, 0x7f7d, 0x1520, 0x50b3, 0x253c, 0xcb14, 0x1, 0x1);
        gbc.writeMem(0x6774, { 0x2b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7f7d, gbc.sp());
        EXPECT(0x6775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 027D
        gbc.setState(0xbff5, 0x7fbb, 0x7b90, 0x9e71, 0xbbd9, 0xfe6, 0x1, 0x0);
        gbc.writeMem(0xbff5, { 0x2b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7fbb, gbc.sp());
        EXPECT(0xbff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbff5));
        // 2B 027E
        gbc.setState(0x841a, 0xf2e7, 0xac70, 0x126b, 0xd2f9, 0xce5f, 0x0, 0x1);
        gbc.writeMem(0x841a, { 0x2b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf2e7, gbc.sp());
        EXPECT(0x841b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x841a));
        // 2B 027F
        gbc.setState(0x7866, 0x9d2c, 0x7070, 0x3612, 0xee03, 0xfbd7, 0x0, 0x0);
        gbc.writeMem(0x7866, { 0x2b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9d2c, gbc.sp());
        EXPECT(0x7867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0280
        gbc.setState(0x5bc3, 0xd102, 0x34d0, 0x877a, 0x9800, 0x5240, 0x0, 0x1);
        gbc.writeMem(0x5bc3, { 0x2b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd102, gbc.sp());
        EXPECT(0x5bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0281
        gbc.setState(0xda99, 0x3cc, 0x9fa0, 0x2ba2, 0x1aeb, 0x87aa, 0x1, 0x1);
        gbc.writeMem(0xda99, { 0x2b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3cc, gbc.sp());
        EXPECT(0xda9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xda99));
        // 2B 0282
        gbc.setState(0x28c4, 0x4f0e, 0xc030, 0x3df, 0xcba5, 0x5d72, 0x1, 0x1);
        gbc.writeMem(0x28c4, { 0x2b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4f0e, gbc.sp());
        EXPECT(0x28c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0283
        gbc.setState(0x7ecd, 0xb3d6, 0x79e0, 0xc777, 0xa5a6, 0xd058, 0x0, 0x1);
        gbc.writeMem(0x7ecd, { 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb3d6, gbc.sp());
        EXPECT(0x7ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0284
        gbc.setState(0x7ee6, 0x6fde, 0xe0f0, 0x84a9, 0x267a, 0xd248, 0x1, 0x0);
        gbc.writeMem(0x7ee6, { 0x2b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6fde, gbc.sp());
        EXPECT(0x7ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0285
        gbc.setState(0x65d7, 0x9c3e, 0x3f60, 0xe84, 0x8d24, 0xb099, 0x0, 0x1);
        gbc.writeMem(0x65d7, { 0x2b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9c3e, gbc.sp());
        EXPECT(0x65d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0286
        gbc.setState(0xc51d, 0xb93c, 0x72a0, 0x8a9c, 0xa673, 0x17d1, 0x0, 0x1);
        gbc.writeMem(0xc51d, { 0x2b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb93c, gbc.sp());
        EXPECT(0xc51e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc51d));
        // 2B 0287
        gbc.setState(0xdc5a, 0x26ed, 0x1fa0, 0xa276, 0x3ec4, 0x7cb5, 0x0, 0x0);
        gbc.writeMem(0xdc5a, { 0x2b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x26ed, gbc.sp());
        EXPECT(0xdc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdc5a));
        // 2B 0288
        gbc.setState(0x1c8e, 0xebd8, 0x7cd0, 0xce62, 0x3599, 0xae46, 0x1, 0x1);
        gbc.writeMem(0x1c8e, { 0x2b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xebd8, gbc.sp());
        EXPECT(0x1c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0289
        gbc.setState(0xea34, 0x747b, 0x3110, 0xd842, 0x28b3, 0xe9e, 0x1, 0x0);
        gbc.writeMem(0xea34, { 0x2b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x747b, gbc.sp());
        EXPECT(0xea35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xea34));
        // 2B 028A
        gbc.setState(0x972e, 0x136c, 0xbaa0, 0xa4ca, 0x95b2, 0x4c0a, 0x1, 0x0);
        gbc.writeMem(0x972e, { 0x2b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x136c, gbc.sp());
        EXPECT(0x972f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x972e));
        // 2B 028B
        gbc.setState(0xef6f, 0x26a2, 0x6e60, 0x6c69, 0x3565, 0x4961, 0x0, 0x0);
        gbc.writeMem(0xef6f, { 0x2b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x26a2, gbc.sp());
        EXPECT(0xef70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xef6f));
        // 2B 028C
        gbc.setState(0x57d1, 0x3832, 0x6360, 0x2498, 0xb85a, 0x70b1, 0x0, 0x1);
        gbc.writeMem(0x57d1, { 0x2b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3832, gbc.sp());
        EXPECT(0x57d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 028D
        gbc.setState(0xb595, 0xab11, 0x720, 0x6514, 0x6f5e, 0x251a, 0x0, 0x0);
        gbc.writeMem(0xb595, { 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xab11, gbc.sp());
        EXPECT(0xb596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb595));
        // 2B 028E
        gbc.setState(0xdd96, 0x1b7e, 0x2800, 0x3bc4, 0x1135, 0xf187, 0x0, 0x0);
        gbc.writeMem(0xdd96, { 0x2b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1b7e, gbc.sp());
        EXPECT(0xdd97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdd96));
        // 2B 028F
        gbc.setState(0x101, 0xed5e, 0x8ad0, 0x9b46, 0x7a2c, 0xed7c, 0x1, 0x1);
        gbc.writeMem(0x101, { 0x2b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xed5e, gbc.sp());
        EXPECT(0x102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0290
        gbc.setState(0xd4bf, 0x45d2, 0x3790, 0xa555, 0x8410, 0x7a9a, 0x1, 0x1);
        gbc.writeMem(0xd4bf, { 0x2b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x45d2, gbc.sp());
        EXPECT(0xd4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd4bf));
        // 2B 0291
        gbc.setState(0x66d1, 0x708f, 0xe160, 0x1c69, 0xcaf3, 0xb58b, 0x0, 0x0);
        gbc.writeMem(0x66d1, { 0x2b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x708f, gbc.sp());
        EXPECT(0x66d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0292
        gbc.setState(0x92bd, 0x5323, 0x4770, 0x58fa, 0x9a52, 0x64d3, 0x0, 0x1);
        gbc.writeMem(0x92bd, { 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5323, gbc.sp());
        EXPECT(0x92be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x92bd));
        // 2B 0293
        gbc.setState(0x8d67, 0x67d4, 0x7880, 0x4127, 0x6e49, 0xbf0b, 0x1, 0x0);
        gbc.writeMem(0x8d67, { 0x2b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x67d4, gbc.sp());
        EXPECT(0x8d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8d67));
        // 2B 0295
        gbc.setState(0xaf33, 0x6915, 0x3fc0, 0x91cf, 0x3667, 0x8503, 0x0, 0x1);
        gbc.writeMem(0xaf33, { 0x2b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6915, gbc.sp());
        EXPECT(0xaf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaf33));
        // 2B 0296
        gbc.setState(0xbbea, 0x2f6f, 0xdb70, 0x3678, 0xd136, 0x7d07, 0x0, 0x1);
        gbc.writeMem(0xbbea, { 0x2b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2f6f, gbc.sp());
        EXPECT(0xbbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbbea));
        // 2B 0297
        gbc.setState(0x1823, 0x5a0c, 0x96d0, 0x50f6, 0x286e, 0x9b, 0x1, 0x1);
        gbc.writeMem(0x1823, { 0x2b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5a0c, gbc.sp());
        EXPECT(0x1824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0298
        gbc.setState(0xa04c, 0xb962, 0x21a0, 0xc369, 0xb881, 0x741b, 0x1, 0x1);
        gbc.writeMem(0xa04c, { 0x2b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb962, gbc.sp());
        EXPECT(0xa04d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa04c));
        // 2B 0299
        gbc.setState(0x2a9b, 0x3f7f, 0xfcc0, 0xb9d4, 0x5e, 0xaf1e, 0x1, 0x0);
        gbc.writeMem(0x2a9b, { 0x2b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3f7f, gbc.sp());
        EXPECT(0x2a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 029A
        gbc.setState(0xa796, 0x4362, 0x7270, 0xab5c, 0x3771, 0xfbc5, 0x0, 0x0);
        gbc.writeMem(0xa796, { 0x2b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4362, gbc.sp());
        EXPECT(0xa797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa796));
        // 2B 029B
        gbc.setState(0xd1bb, 0xe728, 0x8ad0, 0x3f17, 0x5878, 0xe420, 0x1, 0x1);
        gbc.writeMem(0xd1bb, { 0x2b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe728, gbc.sp());
        EXPECT(0xd1bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd1bb));
        // 2B 029C
        gbc.setState(0xa533, 0x526e, 0x3360, 0x7150, 0x843d, 0x70d6, 0x1, 0x0);
        gbc.writeMem(0xa533, { 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x526e, gbc.sp());
        EXPECT(0xa534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa533));
        // 2B 029D
        gbc.setState(0x260b, 0xea97, 0x9050, 0xeaa3, 0x10c2, 0x7cdc, 0x1, 0x0);
        gbc.writeMem(0x260b, { 0x2b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xea97, gbc.sp());
        EXPECT(0x260c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 029E
        gbc.setState(0x6f1f, 0x73a1, 0x9af0, 0x190b, 0xd9c7, 0xfa14, 0x0, 0x0);
        gbc.writeMem(0x6f1f, { 0x2b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x73a1, gbc.sp());
        EXPECT(0x6f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 029F
        gbc.setState(0x8adf, 0xc140, 0xbf90, 0x9ff7, 0x94af, 0xda6f, 0x0, 0x0);
        gbc.writeMem(0x8adf, { 0x2b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc140, gbc.sp());
        EXPECT(0x8ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8adf));
        // 2B 02A1
        gbc.setState(0x1dda, 0xee5d, 0x9050, 0x3c70, 0xbda7, 0x372f, 0x1, 0x1);
        gbc.writeMem(0x1dda, { 0x2b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xee5d, gbc.sp());
        EXPECT(0x1ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02A3
        gbc.setState(0x7dd4, 0xf7a0, 0x5e90, 0x42a6, 0xc398, 0x3264, 0x0, 0x1);
        gbc.writeMem(0x7dd4, { 0x2b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf7a0, gbc.sp());
        EXPECT(0x7dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02A4
        gbc.setState(0x460f, 0x9a43, 0xc3d0, 0x2717, 0x3784, 0xd6e8, 0x0, 0x1);
        gbc.writeMem(0x460f, { 0x2b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9a43, gbc.sp());
        EXPECT(0x4610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02A5
        gbc.setState(0x4cdf, 0xea67, 0x6ab0, 0xdc2c, 0x6b2a, 0xdfc4, 0x1, 0x1);
        gbc.writeMem(0x4cdf, { 0x2b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xea67, gbc.sp());
        EXPECT(0x4ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02A6
        gbc.setState(0x82b7, 0xc7cc, 0xe160, 0xa28a, 0x7af3, 0xbfaa, 0x0, 0x0);
        gbc.writeMem(0x82b7, { 0x2b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc7cc, gbc.sp());
        EXPECT(0x82b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x82b7));
        // 2B 02A7
        gbc.setState(0x9728, 0x7c25, 0x87e0, 0xbc61, 0x917e, 0x36f9, 0x0, 0x0);
        gbc.writeMem(0x9728, { 0x2b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7c25, gbc.sp());
        EXPECT(0x9729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9728));
        // 2B 02A8
        gbc.setState(0xa4a6, 0xbd60, 0x6bd0, 0x83a8, 0xae29, 0x1a7d, 0x1, 0x1);
        gbc.writeMem(0xa4a6, { 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbd60, gbc.sp());
        EXPECT(0xa4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa4a6));
        // 2B 02A9
        gbc.setState(0x8e0b, 0xff65, 0x1e80, 0xbc59, 0xf614, 0x52e5, 0x0, 0x1);
        gbc.writeMem(0x8e0b, { 0x2b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xff65, gbc.sp());
        EXPECT(0x8e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8e0b));
        // 2B 02AA
        gbc.setState(0x58c1, 0x628f, 0xfac0, 0xb1d2, 0x7a22, 0x6447, 0x0, 0x1);
        gbc.writeMem(0x58c1, { 0x2b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x628f, gbc.sp());
        EXPECT(0x58c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02AB
        gbc.setState(0x7f70, 0xa377, 0xb9e0, 0x919f, 0xb802, 0x1f4e, 0x0, 0x0);
        gbc.writeMem(0x7f70, { 0x2b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa377, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02AC
        gbc.setState(0xdcee, 0xd603, 0x46a0, 0xcd99, 0x8d56, 0xcf7, 0x1, 0x1);
        gbc.writeMem(0xdcee, { 0x2b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd603, gbc.sp());
        EXPECT(0xdcef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdcee));
        // 2B 02AD
        gbc.setState(0xc1fd, 0x44e6, 0x97f0, 0x1237, 0xc0a7, 0x2b48, 0x1, 0x0);
        gbc.writeMem(0xc1fd, { 0x2b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x44e6, gbc.sp());
        EXPECT(0xc1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc1fd));
        // 2B 02AE
        gbc.setState(0xd432, 0xf5aa, 0x4580, 0x852a, 0x2cda, 0xf296, 0x0, 0x0);
        gbc.writeMem(0xd432, { 0x2b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf5aa, gbc.sp());
        EXPECT(0xd433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd432));
        // 2B 02AF
        gbc.setState(0xa622, 0xa768, 0x8f20, 0x4e1b, 0xfd8a, 0x1b6a, 0x0, 0x0);
        gbc.writeMem(0xa622, { 0x2b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa768, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa622));
        // 2B 02B0
        gbc.setState(0xffb, 0x82b4, 0xbca0, 0xb56c, 0x509a, 0x3b0d, 0x1, 0x1);
        gbc.writeMem(0xffb, { 0x2b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x82b4, gbc.sp());
        EXPECT(0xffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02B1
        gbc.setState(0x556e, 0xbf80, 0x47e0, 0x19ac, 0x9476, 0x6ddd, 0x0, 0x1);
        gbc.writeMem(0x556e, { 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbf80, gbc.sp());
        EXPECT(0x556f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02B2
        gbc.setState(0x3d70, 0xd91f, 0x44f0, 0x31ac, 0x21eb, 0x739a, 0x0, 0x1);
        gbc.writeMem(0x3d70, { 0x2b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd91f, gbc.sp());
        EXPECT(0x3d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02B3
        gbc.setState(0x126f, 0xebe5, 0x7bd0, 0xd529, 0x4574, 0xd8ef, 0x1, 0x1);
        gbc.writeMem(0x126f, { 0x2b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xebe5, gbc.sp());
        EXPECT(0x1270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02B4
        gbc.setState(0xae77, 0x6405, 0x2bf0, 0x1fae, 0x2d66, 0x43d5, 0x0, 0x0);
        gbc.writeMem(0xae77, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6405, gbc.sp());
        EXPECT(0xae78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xae77));
        // 2B 02B5
        gbc.setState(0x4bd6, 0xeb31, 0xc800, 0x68df, 0xf070, 0xb90a, 0x1, 0x0);
        gbc.writeMem(0x4bd6, { 0x2b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xeb31, gbc.sp());
        EXPECT(0x4bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02B6
        gbc.setState(0x5c86, 0xe089, 0x9cf0, 0x4690, 0x378d, 0x146d, 0x1, 0x1);
        gbc.writeMem(0x5c86, { 0x2b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe089, gbc.sp());
        EXPECT(0x5c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02B7
        gbc.setState(0x34ae, 0x20e9, 0xa8c0, 0xe7bd, 0x69af, 0xf628, 0x0, 0x0);
        gbc.writeMem(0x34ae, { 0x2b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x20e9, gbc.sp());
        EXPECT(0x34af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02B8
        gbc.setState(0x7b9a, 0xf8f5, 0x3010, 0x188d, 0xdb5d, 0xb255, 0x0, 0x0);
        gbc.writeMem(0x7b9a, { 0x2b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf8f5, gbc.sp());
        EXPECT(0x7b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02B9
        gbc.setState(0x5e75, 0xafb5, 0x5a10, 0x52af, 0x5797, 0x556d, 0x1, 0x1);
        gbc.writeMem(0x5e75, { 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xafb5, gbc.sp());
        EXPECT(0x5e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02BA
        gbc.setState(0xccf9, 0x21b2, 0x53a0, 0x7285, 0x3225, 0x3f3e, 0x0, 0x1);
        gbc.writeMem(0xccf9, { 0x2b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x21b2, gbc.sp());
        EXPECT(0xccfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xccf9));
        // 2B 02BB
        gbc.setState(0x3a8b, 0xd443, 0x5400, 0xb6ba, 0x4fd8, 0x90db, 0x1, 0x1);
        gbc.writeMem(0x3a8b, { 0x2b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd443, gbc.sp());
        EXPECT(0x3a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02BD
        gbc.setState(0xa6, 0x17e7, 0x39c0, 0x5519, 0x7130, 0xfb37, 0x0, 0x1);
        gbc.writeMem(0xa6, { 0x2b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x17e7, gbc.sp());
        EXPECT(0xa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02BE
        gbc.setState(0x2781, 0x32b5, 0x88a0, 0xfa10, 0x540f, 0x35d6, 0x1, 0x1);
        gbc.writeMem(0x2781, { 0x2b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x32b5, gbc.sp());
        EXPECT(0x2782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02BF
        gbc.setState(0xcd57, 0xd722, 0xf250, 0x3051, 0x249f, 0x80ae, 0x1, 0x1);
        gbc.writeMem(0xcd57, { 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd722, gbc.sp());
        EXPECT(0xcd58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcd57));
        // 2B 02C0
        gbc.setState(0x8ed7, 0xa111, 0x5240, 0xd6ac, 0x512b, 0x344c, 0x1, 0x0);
        gbc.writeMem(0x8ed7, { 0x2b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa111, gbc.sp());
        EXPECT(0x8ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8ed7));
        // 2B 02C1
        gbc.setState(0x27b6, 0x493a, 0xd1b0, 0x238a, 0xb2e4, 0xea80, 0x0, 0x1);
        gbc.writeMem(0x27b6, { 0x2b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x493a, gbc.sp());
        EXPECT(0x27b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02C2
        gbc.setState(0x337b, 0x7966, 0x8690, 0x1ac6, 0x3370, 0xeea0, 0x1, 0x1);
        gbc.writeMem(0x337b, { 0x2b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7966, gbc.sp());
        EXPECT(0x337c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02C3
        gbc.setState(0xd50c, 0x2718, 0x64e0, 0xc93b, 0x7e92, 0x318f, 0x1, 0x0);
        gbc.writeMem(0xd50c, { 0x2b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2718, gbc.sp());
        EXPECT(0xd50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd50c));
        // 2B 02C4
        gbc.setState(0x88cc, 0x5e0c, 0xb240, 0x3f82, 0x2120, 0x4dc, 0x0, 0x0);
        gbc.writeMem(0x88cc, { 0x2b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5e0c, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x88cc));
        // 2B 02C5
        gbc.setState(0x2b78, 0xfd7d, 0x6a60, 0xce8a, 0x642d, 0xa67e, 0x1, 0x0);
        gbc.writeMem(0x2b78, { 0x2b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfd7d, gbc.sp());
        EXPECT(0x2b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02C6
        gbc.setState(0x2bf4, 0x271c, 0x700, 0x597e, 0xa73a, 0x27f5, 0x0, 0x0);
        gbc.writeMem(0x2bf4, { 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x271c, gbc.sp());
        EXPECT(0x2bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02C7
        gbc.setState(0xa706, 0x974, 0x5030, 0xfe59, 0xa09, 0xea6b, 0x1, 0x0);
        gbc.writeMem(0xa706, { 0x2b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x974, gbc.sp());
        EXPECT(0xa707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa706));
        // 2B 02C8
        gbc.setState(0xb6b, 0xa476, 0x2c00, 0xe6c8, 0xc2bd, 0x6983, 0x1, 0x1);
        gbc.writeMem(0xb6b, { 0x2b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa476, gbc.sp());
        EXPECT(0xb6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02C9
        gbc.setState(0x7b39, 0x9fd0, 0x3c30, 0xcd2f, 0xb26, 0xe4e4, 0x1, 0x1);
        gbc.writeMem(0x7b39, { 0x2b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9fd0, gbc.sp());
        EXPECT(0x7b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02CA
        gbc.setState(0x5894, 0x8600, 0xf9b0, 0x14ad, 0x39ee, 0xe0af, 0x1, 0x1);
        gbc.writeMem(0x5894, { 0x2b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8600, gbc.sp());
        EXPECT(0x5895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02CB
        gbc.setState(0xcaec, 0x623f, 0x2a70, 0x8500, 0xe79c, 0x55ea, 0x1, 0x1);
        gbc.writeMem(0xcaec, { 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x623f, gbc.sp());
        EXPECT(0xcaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcaec));
        // 2B 02CC
        gbc.setState(0x6e19, 0x3d4b, 0x3210, 0x46fd, 0xd550, 0xf5a6, 0x0, 0x0);
        gbc.writeMem(0x6e19, { 0x2b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3d4b, gbc.sp());
        EXPECT(0x6e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02CD
        gbc.setState(0x701, 0x1e72, 0xab50, 0x252e, 0x28a5, 0xdaa6, 0x0, 0x0);
        gbc.writeMem(0x701, { 0x2b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1e72, gbc.sp());
        EXPECT(0x702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02CF
        gbc.setState(0x1161, 0x4f5, 0xf1b0, 0xa425, 0x5f17, 0x4b0b, 0x1, 0x0);
        gbc.writeMem(0x1161, { 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4f5, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02D0
        gbc.setState(0x5a2c, 0x8790, 0x6ce0, 0xd369, 0x581, 0x66fe, 0x1, 0x1);
        gbc.writeMem(0x5a2c, { 0x2b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8790, gbc.sp());
        EXPECT(0x5a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02D1
        gbc.setState(0xce36, 0x44f6, 0xe6a0, 0x288d, 0x375e, 0x1788, 0x1, 0x0);
        gbc.writeMem(0xce36, { 0x2b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x44f6, gbc.sp());
        EXPECT(0xce37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xce36));
        // 2B 02D2
        gbc.setState(0x9af1, 0x2ce7, 0x9ba0, 0x901, 0x6c65, 0x4aef, 0x0, 0x0);
        gbc.writeMem(0x9af1, { 0x2b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2ce7, gbc.sp());
        EXPECT(0x9af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9af1));
        // 2B 02D4
        gbc.setState(0x3a36, 0xfe37, 0xd000, 0x4bc4, 0xbd0c, 0x2a14, 0x0, 0x1);
        gbc.writeMem(0x3a36, { 0x2b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfe37, gbc.sp());
        EXPECT(0x3a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02D5
        gbc.setState(0xb81f, 0x9e32, 0xa9c0, 0x386b, 0xc632, 0xd81a, 0x0, 0x0);
        gbc.writeMem(0xb81f, { 0x2b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9e32, gbc.sp());
        EXPECT(0xb820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb81f));
        // 2B 02D6
        gbc.setState(0x4a5, 0x9289, 0x48f0, 0xf88d, 0x8c3d, 0xc6f4, 0x1, 0x0);
        gbc.writeMem(0x4a5, { 0x2b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9289, gbc.sp());
        EXPECT(0x4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02D7
        gbc.setState(0xb8, 0x3c23, 0xa10, 0x889b, 0x8197, 0x944f, 0x0, 0x0);
        gbc.writeMem(0xb8, { 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3c23, gbc.sp());
        EXPECT(0xb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02D8
        gbc.setState(0x85a0, 0x92b9, 0xcca0, 0x9aac, 0x7194, 0x8251, 0x0, 0x0);
        gbc.writeMem(0x85a0, { 0x2b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x92b9, gbc.sp());
        EXPECT(0x85a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x85a0));
        // 2B 02D9
        gbc.setState(0x6465, 0xa6db, 0xa780, 0x7e52, 0x1764, 0x8f2c, 0x1, 0x1);
        gbc.writeMem(0x6465, { 0x2b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa6db, gbc.sp());
        EXPECT(0x6466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02DA
        gbc.setState(0xc795, 0x8b94, 0x12b0, 0x8a9e, 0x4437, 0x7ad9, 0x0, 0x1);
        gbc.writeMem(0xc795, { 0x2b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8b94, gbc.sp());
        EXPECT(0xc796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc795));
        // 2B 02DB
        gbc.setState(0x951e, 0x9a34, 0x63a0, 0x61db, 0xf7d6, 0x3eb9, 0x0, 0x0);
        gbc.writeMem(0x951e, { 0x2b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9a34, gbc.sp());
        EXPECT(0x951f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x951e));
        // 2B 02DC
        gbc.setState(0x56c0, 0x9036, 0x5070, 0x13af, 0xee99, 0xb154, 0x1, 0x1);
        gbc.writeMem(0x56c0, { 0x2b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9036, gbc.sp());
        EXPECT(0x56c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02DD
        gbc.setState(0x5f2b, 0x6ceb, 0x7380, 0x17d3, 0xd34a, 0xf05f, 0x1, 0x0);
        gbc.writeMem(0x5f2b, { 0x2b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6ceb, gbc.sp());
        EXPECT(0x5f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02DE
        gbc.setState(0x1d4, 0x989a, 0xe4b0, 0xc6a1, 0xf059, 0xee89, 0x1, 0x0);
        gbc.writeMem(0x1d4, { 0x2b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x989a, gbc.sp());
        EXPECT(0x1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02DF
        gbc.setState(0xe9a5, 0x8bc7, 0x5260, 0x5626, 0x77c0, 0xda05, 0x1, 0x0);
        gbc.writeMem(0xe9a5, { 0x2b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8bc7, gbc.sp());
        EXPECT(0xe9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe9a5));
        // 2B 02E0
        gbc.setState(0xd881, 0xc466, 0x96e0, 0x6d2, 0xf7f5, 0x3089, 0x1, 0x1);
        gbc.writeMem(0xd881, { 0x2b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc466, gbc.sp());
        EXPECT(0xd882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd881));
        // 2B 02E1
        gbc.setState(0xd95a, 0x9464, 0xd820, 0x221c, 0x69aa, 0x7c26, 0x0, 0x1);
        gbc.writeMem(0xd95a, { 0x2b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9464, gbc.sp());
        EXPECT(0xd95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd95a));
        // 2B 02E2
        gbc.setState(0xd772, 0x38da, 0x2660, 0xf069, 0x9e43, 0xf16f, 0x0, 0x1);
        gbc.writeMem(0xd772, { 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x38da, gbc.sp());
        EXPECT(0xd773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd772));
        // 2B 02E3
        gbc.setState(0x27ea, 0xbdcb, 0x5810, 0x7008, 0x2b29, 0x70a0, 0x0, 0x0);
        gbc.writeMem(0x27ea, { 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbdcb, gbc.sp());
        EXPECT(0x27eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02E4
        gbc.setState(0xd351, 0x5643, 0x8420, 0xc9a6, 0xb6d0, 0x3b01, 0x0, 0x0);
        gbc.writeMem(0xd351, { 0x2b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5643, gbc.sp());
        EXPECT(0xd352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd351));
        // 2B 02E5
        gbc.setState(0xe237, 0xc610, 0x3d0, 0xd438, 0xbef3, 0x7a5e, 0x1, 0x1);
        gbc.writeMem(0xe237, { 0x2b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc610, gbc.sp());
        EXPECT(0xe238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe237));
        // 2B 02E6
        gbc.setState(0x45fb, 0x23db, 0xd940, 0xbaad, 0x9750, 0x52c, 0x1, 0x0);
        gbc.writeMem(0x45fb, { 0x2b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x23db, gbc.sp());
        EXPECT(0x45fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02E7
        gbc.setState(0x6fd3, 0x3841, 0xb2c0, 0xd639, 0x3902, 0x41c9, 0x0, 0x1);
        gbc.writeMem(0x6fd3, { 0x2b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3841, gbc.sp());
        EXPECT(0x6fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02E8
        gbc.setState(0xca78, 0x7609, 0xbc50, 0x2f92, 0xed6, 0xe5c4, 0x1, 0x0);
        gbc.writeMem(0xca78, { 0x2b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7609, gbc.sp());
        EXPECT(0xca79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xca78));
        // 2B 02E9
        gbc.setState(0x6e59, 0xf4a5, 0xe0e0, 0xd830, 0xef0d, 0xfc9a, 0x1, 0x1);
        gbc.writeMem(0x6e59, { 0x2b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf4a5, gbc.sp());
        EXPECT(0x6e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02EA
        gbc.setState(0x9a34, 0xc2ef, 0xddf0, 0x7314, 0xef8e, 0xc95f, 0x1, 0x0);
        gbc.writeMem(0x9a34, { 0x2b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc2ef, gbc.sp());
        EXPECT(0x9a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9a34));
        // 2B 02EB
        gbc.setState(0xe76e, 0x7657, 0x7ba0, 0xb625, 0xab57, 0x8f49, 0x0, 0x0);
        gbc.writeMem(0xe76e, { 0x2b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7657, gbc.sp());
        EXPECT(0xe76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe76e));
        // 2B 02EC
        gbc.setState(0x858e, 0x7f2e, 0xd7d0, 0xb86e, 0xd2e2, 0x7b44, 0x0, 0x0);
        gbc.writeMem(0x858e, { 0x2b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7f2e, gbc.sp());
        EXPECT(0x858f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x858e));
        // 2B 02ED
        gbc.setState(0x18ab, 0x4b52, 0x2ad0, 0xde0f, 0x432, 0x1654, 0x0, 0x0);
        gbc.writeMem(0x18ab, { 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4b52, gbc.sp());
        EXPECT(0x18ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02EE
        gbc.setState(0xbc36, 0xde14, 0x4f30, 0xfa05, 0x9aa0, 0xa465, 0x0, 0x0);
        gbc.writeMem(0xbc36, { 0x2b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xde14, gbc.sp());
        EXPECT(0xbc37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbc36));
        // 2B 02EF
        gbc.setState(0x25e7, 0xdeff, 0xc830, 0x4336, 0xd513, 0x11de, 0x0, 0x0);
        gbc.writeMem(0x25e7, { 0x2b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdeff, gbc.sp());
        EXPECT(0x25e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02F0
        gbc.setState(0xb754, 0x7dbd, 0x900, 0x40f4, 0x61bd, 0xb295, 0x1, 0x1);
        gbc.writeMem(0xb754, { 0x2b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7dbd, gbc.sp());
        EXPECT(0xb755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb754));
        // 2B 02F1
        gbc.setState(0x1c80, 0x6c5c, 0x8910, 0x285f, 0x1b51, 0x7a09, 0x0, 0x1);
        gbc.writeMem(0x1c80, { 0x2b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6c5c, gbc.sp());
        EXPECT(0x1c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02F2
        gbc.setState(0x56ee, 0xc20b, 0x980, 0x53f0, 0x4bfa, 0x539c, 0x1, 0x0);
        gbc.writeMem(0x56ee, { 0x2b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc20b, gbc.sp());
        EXPECT(0x56ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02F3
        gbc.setState(0x8a1e, 0xe61, 0x9c50, 0x5155, 0x2019, 0xb7d9, 0x1, 0x1);
        gbc.writeMem(0x8a1e, { 0x2b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe61, gbc.sp());
        EXPECT(0x8a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8a1e));
        // 2B 02F4
        gbc.setState(0x62a7, 0x9b3d, 0x9f30, 0x7f92, 0xc6cd, 0x9445, 0x0, 0x0);
        gbc.writeMem(0x62a7, { 0x2b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9b3d, gbc.sp());
        EXPECT(0x62a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02F5
        gbc.setState(0x2d47, 0xce6d, 0xdd70, 0x40d3, 0xa9e9, 0x2fc1, 0x1, 0x0);
        gbc.writeMem(0x2d47, { 0x2b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xce6d, gbc.sp());
        EXPECT(0x2d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02F6
        gbc.setState(0x2784, 0xb05, 0x8200, 0xd779, 0xf764, 0x7d31, 0x0, 0x0);
        gbc.writeMem(0x2784, { 0x2b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb05, gbc.sp());
        EXPECT(0x2785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02F7
        gbc.setState(0xdd04, 0x194, 0xa7d0, 0x1993, 0x9383, 0x1e64, 0x1, 0x0);
        gbc.writeMem(0xdd04, { 0x2b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x194, gbc.sp());
        EXPECT(0xdd05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdd04));
        // 2B 02F8
        gbc.setState(0xe1fe, 0x8a16, 0x5700, 0x2572, 0x5866, 0xb2dd, 0x0, 0x1);
        gbc.writeMem(0xe1fe, { 0x2b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8a16, gbc.sp());
        EXPECT(0xe1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe1fe));
        // 2B 02F9
        gbc.setState(0x30fe, 0xa62f, 0xf2c0, 0xd571, 0xbfeb, 0x1fc7, 0x1, 0x1);
        gbc.writeMem(0x30fe, { 0x2b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa62f, gbc.sp());
        EXPECT(0x30ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 02FA
        gbc.setState(0xcd46, 0xdfd2, 0x62b0, 0x3d7e, 0x7d6b, 0xa83f, 0x1, 0x0);
        gbc.writeMem(0xcd46, { 0x2b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdfd2, gbc.sp());
        EXPECT(0xcd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcd46));
        // 2B 02FB
        gbc.setState(0x4577, 0x50e2, 0x3810, 0xdc38, 0xf9d8, 0x6c94, 0x1, 0x0);
        gbc.writeMem(0x4577, { 0x2b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x50e2, gbc.sp());
        EXPECT(0x4578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02FC
        gbc.setState(0xb5c4, 0xcd64, 0xbfe0, 0x7b, 0xa18, 0x2127, 0x1, 0x1);
        gbc.writeMem(0xb5c4, { 0x2b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcd64, gbc.sp());
        EXPECT(0xb5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb5c4));
        // 2B 02FD
        gbc.setState(0xa110, 0xc94f, 0xfb60, 0xa4c5, 0x6628, 0x5c1a, 0x0, 0x0);
        gbc.writeMem(0xa110, { 0x2b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc94f, gbc.sp());
        EXPECT(0xa111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa110));
        // 2B 02FE
        gbc.setState(0x4d1a, 0xf045, 0xe8d0, 0xff2e, 0xeda0, 0x5907, 0x0, 0x0);
        gbc.writeMem(0x4d1a, { 0x2b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf045, gbc.sp());
        EXPECT(0x4d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 02FF
        gbc.setState(0x7ff2, 0x1cd5, 0x9290, 0xc33a, 0x256c, 0xff71, 0x0, 0x1);
        gbc.writeMem(0x7ff2, { 0x2b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1cd5, gbc.sp());
        EXPECT(0x7ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0300
        gbc.setState(0x4b1a, 0x9147, 0xcf70, 0x62b3, 0xb9eb, 0x9033, 0x1, 0x1);
        gbc.writeMem(0x4b1a, { 0x2b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9147, gbc.sp());
        EXPECT(0x4b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0301
        gbc.setState(0xbb4c, 0x1a09, 0x1740, 0x35de, 0x9014, 0x388, 0x0, 0x0);
        gbc.writeMem(0xbb4c, { 0x2b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1a09, gbc.sp());
        EXPECT(0xbb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbb4c));
        // 2B 0302
        gbc.setState(0xa1f1, 0x6422, 0x82c0, 0x8310, 0x5815, 0xa077, 0x0, 0x1);
        gbc.writeMem(0xa1f1, { 0x2b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6422, gbc.sp());
        EXPECT(0xa1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa1f1));
        // 2B 0303
        gbc.setState(0xdd33, 0x3018, 0xe870, 0xfb42, 0xe67a, 0x5543, 0x0, 0x1);
        gbc.writeMem(0xdd33, { 0x2b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3018, gbc.sp());
        EXPECT(0xdd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdd33));
        // 2B 0304
        gbc.setState(0xcc66, 0x43e8, 0xee80, 0xbdc9, 0x5bc0, 0x1d61, 0x1, 0x0);
        gbc.writeMem(0xcc66, { 0x2b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x43e8, gbc.sp());
        EXPECT(0xcc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcc66));
        // 2B 0305
        gbc.setState(0xb3b2, 0x1093, 0xc890, 0x4eda, 0xb71, 0x103, 0x0, 0x1);
        gbc.writeMem(0xb3b2, { 0x2b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1093, gbc.sp());
        EXPECT(0xb3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb3b2));
        // 2B 0306
        gbc.setState(0xa764, 0x7cba, 0x35f0, 0xc82a, 0x284c, 0xee7, 0x1, 0x0);
        gbc.writeMem(0xa764, { 0x2b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7cba, gbc.sp());
        EXPECT(0xa765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa764));
        // 2B 0307
        gbc.setState(0x613e, 0x2a4d, 0xbb20, 0xeaa2, 0xa2d7, 0x4dc1, 0x1, 0x0);
        gbc.writeMem(0x613e, { 0x2b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2a4d, gbc.sp());
        EXPECT(0x613f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0308
        gbc.setState(0xc3ad, 0x432d, 0xdec0, 0x8e10, 0x560a, 0xe8a7, 0x1, 0x1);
        gbc.writeMem(0xc3ad, { 0x2b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x432d, gbc.sp());
        EXPECT(0xc3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc3ad));
        // 2B 0309
        gbc.setState(0x3c02, 0x2126, 0x4410, 0xbd00, 0x3815, 0x6b03, 0x0, 0x1);
        gbc.writeMem(0x3c02, { 0x2b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2126, gbc.sp());
        EXPECT(0x3c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 030A
        gbc.setState(0xe1a9, 0x3e8, 0x1220, 0x227e, 0x39db, 0x5f31, 0x0, 0x1);
        gbc.writeMem(0xe1a9, { 0x2b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3e8, gbc.sp());
        EXPECT(0xe1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe1a9));
        // 2B 030B
        gbc.setState(0xd715, 0x9f60, 0xbfd0, 0x4433, 0xfce5, 0x4302, 0x1, 0x0);
        gbc.writeMem(0xd715, { 0x2b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9f60, gbc.sp());
        EXPECT(0xd716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd715));
        // 2B 030C
        gbc.setState(0x2cf7, 0x527a, 0xb8d0, 0xcbf1, 0x932d, 0x94d6, 0x1, 0x0);
        gbc.writeMem(0x2cf7, { 0x2b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x527a, gbc.sp());
        EXPECT(0x2cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 030E
        gbc.setState(0x27cd, 0xf79e, 0xe370, 0x7707, 0x1838, 0xf212, 0x1, 0x0);
        gbc.writeMem(0x27cd, { 0x2b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf79e, gbc.sp());
        EXPECT(0x27ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 030F
        gbc.setState(0xbfc, 0xc2cc, 0xb6b0, 0xaf97, 0xcaec, 0xd663, 0x1, 0x0);
        gbc.writeMem(0xbfc, { 0x2b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc2cc, gbc.sp());
        EXPECT(0xbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0310
        gbc.setState(0x32af, 0x1055, 0x28c0, 0xbd46, 0x8387, 0x7cfd, 0x1, 0x1);
        gbc.writeMem(0x32af, { 0x2b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1055, gbc.sp());
        EXPECT(0x32b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0311
        gbc.setState(0x813b, 0x3f69, 0x5a10, 0xa7a2, 0xb7f0, 0xd2b, 0x0, 0x1);
        gbc.writeMem(0x813b, { 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3f69, gbc.sp());
        EXPECT(0x813c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x813b));
        // 2B 0313
        gbc.setState(0x92a5, 0xefb3, 0x51e0, 0x7874, 0x419e, 0xf7c1, 0x0, 0x0);
        gbc.writeMem(0x92a5, { 0x2b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xefb3, gbc.sp());
        EXPECT(0x92a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x92a5));
        // 2B 0314
        gbc.setState(0xa90b, 0x2a78, 0xb9c0, 0x9c10, 0x535d, 0x54de, 0x1, 0x0);
        gbc.writeMem(0xa90b, { 0x2b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2a78, gbc.sp());
        EXPECT(0xa90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa90b));
        // 2B 0315
        gbc.setState(0xc56f, 0x3d4d, 0xeea0, 0xad3e, 0xf484, 0x377e, 0x0, 0x0);
        gbc.writeMem(0xc56f, { 0x2b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3d4d, gbc.sp());
        EXPECT(0xc570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc56f));
        // 2B 0316
        gbc.setState(0xcb9, 0x7909, 0xe7e0, 0x9f6b, 0x7af6, 0xf0d3, 0x1, 0x0);
        gbc.writeMem(0xcb9, { 0x2b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7909, gbc.sp());
        EXPECT(0xcba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0317
        gbc.setState(0x12c9, 0xdfff, 0x2e60, 0x2ee6, 0xf998, 0x8b37, 0x1, 0x1);
        gbc.writeMem(0x12c9, { 0x2b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdfff, gbc.sp());
        EXPECT(0x12ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0318
        gbc.setState(0x914c, 0x9c17, 0x95c0, 0x7701, 0x3b37, 0x1cea, 0x0, 0x1);
        gbc.writeMem(0x914c, { 0x2b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9c17, gbc.sp());
        EXPECT(0x914d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x914c));
        // 2B 0319
        gbc.setState(0x5f75, 0x394e, 0x5630, 0x494c, 0xe677, 0x372, 0x1, 0x1);
        gbc.writeMem(0x5f75, { 0x2b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x394e, gbc.sp());
        EXPECT(0x5f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 031A
        gbc.setState(0x3f23, 0x40ed, 0xf90, 0xc820, 0x6943, 0x9b2, 0x0, 0x1);
        gbc.writeMem(0x3f23, { 0x2b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x40ed, gbc.sp());
        EXPECT(0x3f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 031B
        gbc.setState(0xde2b, 0x6645, 0xfa90, 0x8831, 0x974, 0x41c2, 0x1, 0x1);
        gbc.writeMem(0xde2b, { 0x2b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6645, gbc.sp());
        EXPECT(0xde2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xde2b));
        // 2B 031C
        gbc.setState(0x1bf0, 0xeaa9, 0x2a0, 0xeb3, 0x535b, 0x2c81, 0x0, 0x1);
        gbc.writeMem(0x1bf0, { 0x2b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xeaa9, gbc.sp());
        EXPECT(0x1bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 031D
        gbc.setState(0x6265, 0x6c29, 0xf3c0, 0xf3b8, 0x36c7, 0xd48a, 0x1, 0x1);
        gbc.writeMem(0x6265, { 0x2b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6c29, gbc.sp());
        EXPECT(0x6266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 031E
        gbc.setState(0x9673, 0xb7de, 0x2340, 0xccac, 0xb532, 0x16db, 0x1, 0x0);
        gbc.writeMem(0x9673, { 0x2b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb7de, gbc.sp());
        EXPECT(0x9674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9673));
        // 2B 0320
        gbc.setState(0x7f0b, 0x1f67, 0x1d10, 0x6eee, 0x41c7, 0x6306, 0x0, 0x0);
        gbc.writeMem(0x7f0b, { 0x2b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1f67, gbc.sp());
        EXPECT(0x7f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0321
        gbc.setState(0x8c74, 0x1e7c, 0x80d0, 0xcfbd, 0x7f3f, 0xb10b, 0x1, 0x1);
        gbc.writeMem(0x8c74, { 0x2b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1e7c, gbc.sp());
        EXPECT(0x8c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8c74));
        // 2B 0322
        gbc.setState(0x7893, 0x3c7c, 0x4a30, 0xac1, 0xf182, 0x61d0, 0x0, 0x0);
        gbc.writeMem(0x7893, { 0x2b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3c7c, gbc.sp());
        EXPECT(0x7894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0323
        gbc.setState(0xdd0f, 0xf4a0, 0x130, 0xaf60, 0xc563, 0xd12, 0x0, 0x1);
        gbc.writeMem(0xdd0f, { 0x2b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf4a0, gbc.sp());
        EXPECT(0xdd10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdd0f));
        // 2B 0324
        gbc.setState(0xd0f4, 0xf705, 0xd5c0, 0xaed, 0xd74f, 0xbda7, 0x1, 0x0);
        gbc.writeMem(0xd0f4, { 0x2b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0xd0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd0f4));
        // 2B 0325
        gbc.setState(0x4ff8, 0x33ca, 0xcb50, 0xd311, 0xa6f, 0x5a, 0x0, 0x0);
        gbc.writeMem(0x4ff8, { 0x2b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x33ca, gbc.sp());
        EXPECT(0x4ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0326
        gbc.setState(0x3947, 0x83c1, 0x26c0, 0x4d90, 0x51c4, 0x3c9c, 0x0, 0x0);
        gbc.writeMem(0x3947, { 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x83c1, gbc.sp());
        EXPECT(0x3948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0327
        gbc.setState(0x8981, 0x9ee0, 0x6b20, 0xc81a, 0xc22b, 0xd2ec, 0x1, 0x0);
        gbc.writeMem(0x8981, { 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9ee0, gbc.sp());
        EXPECT(0x8982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8981));
        // 2B 0328
        gbc.setState(0x24e0, 0x60eb, 0x2b0, 0x649a, 0x3e70, 0xb700, 0x1, 0x1);
        gbc.writeMem(0x24e0, { 0x2b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x60eb, gbc.sp());
        EXPECT(0x24e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0329
        gbc.setState(0x13bc, 0x1dcc, 0x9960, 0x2d85, 0xe454, 0x216a, 0x0, 0x0);
        gbc.writeMem(0x13bc, { 0x2b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1dcc, gbc.sp());
        EXPECT(0x13bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 032A
        gbc.setState(0xc9a, 0x42e7, 0xe130, 0x2443, 0x3e61, 0xa23c, 0x0, 0x0);
        gbc.writeMem(0xc9a, { 0x2b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x42e7, gbc.sp());
        EXPECT(0xc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 032B
        gbc.setState(0xc59f, 0x512b, 0xc560, 0xca78, 0x8fce, 0x87ec, 0x1, 0x0);
        gbc.writeMem(0xc59f, { 0x2b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x512b, gbc.sp());
        EXPECT(0xc5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc59f));
        // 2B 032C
        gbc.setState(0xd75a, 0xcef2, 0x2940, 0xe303, 0x987a, 0xa3ec, 0x0, 0x0);
        gbc.writeMem(0xd75a, { 0x2b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcef2, gbc.sp());
        EXPECT(0xd75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd75a));
        // 2B 032D
        gbc.setState(0xd070, 0xab1d, 0xfa00, 0xda0c, 0xeae6, 0xcfe3, 0x1, 0x0);
        gbc.writeMem(0xd070, { 0x2b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xab1d, gbc.sp());
        EXPECT(0xd071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd070));
        // 2B 032E
        gbc.setState(0x3ee7, 0x90ad, 0xeb60, 0xe651, 0xd72b, 0x72c6, 0x0, 0x1);
        gbc.writeMem(0x3ee7, { 0x2b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x90ad, gbc.sp());
        EXPECT(0x3ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0330
        gbc.setState(0x6e85, 0x74c2, 0xb980, 0xf26e, 0x9f49, 0x1b51, 0x1, 0x0);
        gbc.writeMem(0x6e85, { 0x2b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x74c2, gbc.sp());
        EXPECT(0x6e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0331
        gbc.setState(0x8e47, 0xfd82, 0xf940, 0xedf, 0x782c, 0x8315, 0x0, 0x1);
        gbc.writeMem(0x8e47, { 0x2b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfd82, gbc.sp());
        EXPECT(0x8e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8e47));
        // 2B 0333
        gbc.setState(0xe11b, 0x17a8, 0x8e20, 0xe8c8, 0x3efe, 0xba76, 0x1, 0x1);
        gbc.writeMem(0xe11b, { 0x2b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x17a8, gbc.sp());
        EXPECT(0xe11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe11b));
        // 2B 0334
        gbc.setState(0xdd6c, 0xf33a, 0xd8a0, 0x8878, 0x4535, 0xe7e3, 0x0, 0x1);
        gbc.writeMem(0xdd6c, { 0x2b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf33a, gbc.sp());
        EXPECT(0xdd6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdd6c));
        // 2B 0335
        gbc.setState(0x6dc9, 0xc531, 0x59a0, 0x299d, 0xe39e, 0x87bb, 0x1, 0x0);
        gbc.writeMem(0x6dc9, { 0x2b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc531, gbc.sp());
        EXPECT(0x6dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0336
        gbc.setState(0xa4e3, 0xbdd1, 0x780, 0x421, 0xd88f, 0x5436, 0x0, 0x0);
        gbc.writeMem(0xa4e3, { 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbdd1, gbc.sp());
        EXPECT(0xa4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa4e3));
        // 2B 0337
        gbc.setState(0xa023, 0x97c0, 0x1f60, 0x8328, 0xe977, 0x8743, 0x0, 0x1);
        gbc.writeMem(0xa023, { 0x2b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x97c0, gbc.sp());
        EXPECT(0xa024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa023));
        // 2B 0338
        gbc.setState(0x1a7c, 0x10c3, 0xce50, 0xff98, 0xfb94, 0xb2, 0x1, 0x0);
        gbc.writeMem(0x1a7c, { 0x2b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x10c3, gbc.sp());
        EXPECT(0x1a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0339
        gbc.setState(0xbea5, 0x8b8b, 0x24c0, 0x5bfa, 0xe1bf, 0xf44, 0x1, 0x0);
        gbc.writeMem(0xbea5, { 0x2b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8b8b, gbc.sp());
        EXPECT(0xbea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbea5));
        // 2B 033A
        gbc.setState(0x3b9f, 0xe1ef, 0x7700, 0xd1f7, 0xdbb9, 0x448b, 0x1, 0x0);
        gbc.writeMem(0x3b9f, { 0x2b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe1ef, gbc.sp());
        EXPECT(0x3ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 033B
        gbc.setState(0x8558, 0xaff5, 0xec20, 0x49c4, 0xef3d, 0x8d26, 0x1, 0x1);
        gbc.writeMem(0x8558, { 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xaff5, gbc.sp());
        EXPECT(0x8559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8558));
        // 2B 033C
        gbc.setState(0x4abc, 0x15c2, 0x3d30, 0xa53a, 0x7ac3, 0xf846, 0x0, 0x0);
        gbc.writeMem(0x4abc, { 0x2b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x15c2, gbc.sp());
        EXPECT(0x4abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 033D
        gbc.setState(0xd690, 0xf251, 0x7d60, 0x228b, 0xfd97, 0xb86e, 0x1, 0x1);
        gbc.writeMem(0xd690, { 0x2b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf251, gbc.sp());
        EXPECT(0xd691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd690));
        // 2B 033F
        gbc.setState(0x7dfb, 0x6f7, 0x5a60, 0xe16e, 0xab8b, 0x93f4, 0x1, 0x0);
        gbc.writeMem(0x7dfb, { 0x2b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6f7, gbc.sp());
        EXPECT(0x7dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0340
        gbc.setState(0x4e12, 0x7bc0, 0x92b0, 0x576f, 0x864e, 0xe84a, 0x1, 0x1);
        gbc.writeMem(0x4e12, { 0x2b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7bc0, gbc.sp());
        EXPECT(0x4e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0341
        gbc.setState(0x3854, 0x76f, 0xb210, 0xa4c3, 0x63ab, 0xce55, 0x1, 0x1);
        gbc.writeMem(0x3854, { 0x2b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x76f, gbc.sp());
        EXPECT(0x3855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0342
        gbc.setState(0xce37, 0x39c7, 0x3c00, 0x6d51, 0x7b61, 0xab80, 0x0, 0x1);
        gbc.writeMem(0xce37, { 0x2b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x39c7, gbc.sp());
        EXPECT(0xce38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xce37));
        // 2B 0343
        gbc.setState(0x5e73, 0xdcf4, 0x1810, 0x2c61, 0x9091, 0x9996, 0x0, 0x0);
        gbc.writeMem(0x5e73, { 0x2b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdcf4, gbc.sp());
        EXPECT(0x5e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0344
        gbc.setState(0x35e7, 0x4a9a, 0xe20, 0xb4f7, 0x24ae, 0x34f6, 0x1, 0x0);
        gbc.writeMem(0x35e7, { 0x2b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4a9a, gbc.sp());
        EXPECT(0x35e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0345
        gbc.setState(0x55f9, 0x7d2e, 0xede0, 0x14e4, 0xed93, 0x2707, 0x0, 0x1);
        gbc.writeMem(0x55f9, { 0x2b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7d2e, gbc.sp());
        EXPECT(0x55fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0346
        gbc.setState(0x60a3, 0x63f0, 0x4d20, 0x2cdb, 0x6a65, 0x33c3, 0x1, 0x1);
        gbc.writeMem(0x60a3, { 0x2b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x63f0, gbc.sp());
        EXPECT(0x60a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0347
        gbc.setState(0x6a5c, 0xb8b1, 0x9890, 0xa7cf, 0x3053, 0x61f1, 0x1, 0x0);
        gbc.writeMem(0x6a5c, { 0x2b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb8b1, gbc.sp());
        EXPECT(0x6a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0348
        gbc.setState(0xded8, 0x5b1c, 0xfd60, 0x8f17, 0xb372, 0x7c3e, 0x0, 0x1);
        gbc.writeMem(0xded8, { 0x2b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5b1c, gbc.sp());
        EXPECT(0xded9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xded8));
        // 2B 0349
        gbc.setState(0x8a99, 0x10e4, 0x1190, 0xce6, 0xca9e, 0x3d60, 0x1, 0x0);
        gbc.writeMem(0x8a99, { 0x2b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x10e4, gbc.sp());
        EXPECT(0x8a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8a99));
        // 2B 034A
        gbc.setState(0xa618, 0x6cfe, 0x4bb0, 0xaec3, 0x2535, 0x7145, 0x0, 0x1);
        gbc.writeMem(0xa618, { 0x2b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6cfe, gbc.sp());
        EXPECT(0xa619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa618));
        // 2B 034C
        gbc.setState(0xd884, 0xd985, 0x6980, 0x5e58, 0x6a77, 0x24db, 0x0, 0x0);
        gbc.writeMem(0xd884, { 0x2b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd985, gbc.sp());
        EXPECT(0xd885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd884));
        // 2B 034D
        gbc.setState(0x712e, 0x2c4f, 0xb080, 0xef71, 0xa1f7, 0xca77, 0x0, 0x1);
        gbc.writeMem(0x712e, { 0x2b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2c4f, gbc.sp());
        EXPECT(0x712f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 034E
        gbc.setState(0xeab5, 0x79b3, 0x7ae0, 0x11ac, 0x6e43, 0x42dd, 0x1, 0x0);
        gbc.writeMem(0xeab5, { 0x2b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x79b3, gbc.sp());
        EXPECT(0xeab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xeab5));
        // 2B 034F
        gbc.setState(0x30b9, 0x5fa6, 0x7670, 0xae97, 0xd437, 0x6f83, 0x1, 0x1);
        gbc.writeMem(0x30b9, { 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5fa6, gbc.sp());
        EXPECT(0x30ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0350
        gbc.setState(0x9d58, 0x2800, 0x9f70, 0x4c9f, 0xb0f6, 0x4ef, 0x1, 0x0);
        gbc.writeMem(0x9d58, { 0x2b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2800, gbc.sp());
        EXPECT(0x9d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9d58));
        // 2B 0351
        gbc.setState(0xd9a7, 0x2bc2, 0xa4c0, 0xf9e5, 0xe8c3, 0x20ec, 0x0, 0x0);
        gbc.writeMem(0xd9a7, { 0x2b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2bc2, gbc.sp());
        EXPECT(0xd9a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd9a7));
        // 2B 0352
        gbc.setState(0x6842, 0x28c6, 0xbd50, 0x9ac5, 0xbae8, 0xe177, 0x0, 0x0);
        gbc.writeMem(0x6842, { 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x28c6, gbc.sp());
        EXPECT(0x6843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0353
        gbc.setState(0xd544, 0xfb92, 0xa980, 0x9170, 0x9304, 0x6713, 0x0, 0x1);
        gbc.writeMem(0xd544, { 0x2b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfb92, gbc.sp());
        EXPECT(0xd545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd544));
        // 2B 0354
        gbc.setState(0xdf37, 0x8616, 0xb810, 0xc0f, 0x5a25, 0x790b, 0x1, 0x1);
        gbc.writeMem(0xdf37, { 0x2b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8616, gbc.sp());
        EXPECT(0xdf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdf37));
        // 2B 0355
        gbc.setState(0x1371, 0xfed1, 0xa800, 0x1ffe, 0x47ce, 0x3107, 0x0, 0x0);
        gbc.writeMem(0x1371, { 0x2b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfed1, gbc.sp());
        EXPECT(0x1372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0356
        gbc.setState(0x36ea, 0xbb70, 0xd9a0, 0x3072, 0xe032, 0xd450, 0x1, 0x0);
        gbc.writeMem(0x36ea, { 0x2b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbb70, gbc.sp());
        EXPECT(0x36eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0357
        gbc.setState(0x52f7, 0xf6a6, 0xfe70, 0xd55e, 0x62e3, 0xba84, 0x1, 0x0);
        gbc.writeMem(0x52f7, { 0x2b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf6a6, gbc.sp());
        EXPECT(0x52f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0358
        gbc.setState(0x36b3, 0x3a3d, 0x3f10, 0xfe83, 0x4b73, 0xc9b, 0x0, 0x1);
        gbc.writeMem(0x36b3, { 0x2b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3a3d, gbc.sp());
        EXPECT(0x36b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0359
        gbc.setState(0x8d6c, 0x4c84, 0x3ee0, 0x5b8c, 0x8b10, 0xcd8e, 0x1, 0x1);
        gbc.writeMem(0x8d6c, { 0x2b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4c84, gbc.sp());
        EXPECT(0x8d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8d6c));
        // 2B 035A
        gbc.setState(0x161b, 0x86e1, 0x1340, 0x7028, 0xe92d, 0x905c, 0x0, 0x1);
        gbc.writeMem(0x161b, { 0x2b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x86e1, gbc.sp());
        EXPECT(0x161c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 035B
        gbc.setState(0x68ae, 0x73ef, 0x1b30, 0xaf1b, 0x4d07, 0x464f, 0x1, 0x1);
        gbc.writeMem(0x68ae, { 0x2b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x73ef, gbc.sp());
        EXPECT(0x68af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 035C
        gbc.setState(0x5b41, 0x1581, 0x5340, 0xa199, 0x2ad3, 0x4367, 0x1, 0x1);
        gbc.writeMem(0x5b41, { 0x2b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1581, gbc.sp());
        EXPECT(0x5b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 035D
        gbc.setState(0x513d, 0xd90b, 0x5da0, 0xe058, 0x525a, 0xeb73, 0x0, 0x0);
        gbc.writeMem(0x513d, { 0x2b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd90b, gbc.sp());
        EXPECT(0x513e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 035E
        gbc.setState(0x9dc3, 0x8699, 0x8ef0, 0xf0af, 0xbcc, 0x42ed, 0x0, 0x1);
        gbc.writeMem(0x9dc3, { 0x2b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8699, gbc.sp());
        EXPECT(0x9dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9dc3));
        // 2B 035F
        gbc.setState(0xbaba, 0x72a6, 0xff90, 0x48a5, 0x66a7, 0x8c8c, 0x1, 0x0);
        gbc.writeMem(0xbaba, { 0x2b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x72a6, gbc.sp());
        EXPECT(0xbabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbaba));
        // 2B 0360
        gbc.setState(0xa927, 0xe6e5, 0x8090, 0xab88, 0x9047, 0x48de, 0x0, 0x1);
        gbc.writeMem(0xa927, { 0x2b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe6e5, gbc.sp());
        EXPECT(0xa928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa927));
        // 2B 0361
        gbc.setState(0xd5e, 0x6a50, 0x70f0, 0xe6fc, 0x544e, 0x809d, 0x0, 0x0);
        gbc.writeMem(0xd5e, { 0x2b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6a50, gbc.sp());
        EXPECT(0xd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0362
        gbc.setState(0x943e, 0x7845, 0x9db0, 0xe391, 0x7154, 0xcda8, 0x0, 0x1);
        gbc.writeMem(0x943e, { 0x2b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7845, gbc.sp());
        EXPECT(0x943f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x943e));
        // 2B 0363
        gbc.setState(0x7bbd, 0xf126, 0xd190, 0x7452, 0x1245, 0xf0d3, 0x0, 0x1);
        gbc.writeMem(0x7bbd, { 0x2b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf126, gbc.sp());
        EXPECT(0x7bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0364
        gbc.setState(0xad24, 0xcda5, 0xe70, 0xe794, 0x72a5, 0x838d, 0x1, 0x0);
        gbc.writeMem(0xad24, { 0x2b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcda5, gbc.sp());
        EXPECT(0xad25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xad24));
        // 2B 0365
        gbc.setState(0x91bd, 0xae45, 0x86c0, 0x6bea, 0x1dc6, 0x55e0, 0x0, 0x0);
        gbc.writeMem(0x91bd, { 0x2b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xae45, gbc.sp());
        EXPECT(0x91be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x91bd));
        // 2B 0366
        gbc.setState(0x98ae, 0xac76, 0x91f0, 0x714, 0xaa1b, 0xc97b, 0x0, 0x0);
        gbc.writeMem(0x98ae, { 0x2b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xac76, gbc.sp());
        EXPECT(0x98af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x98ae));
        // 2B 0367
        gbc.setState(0x8d44, 0x3d1f, 0xe360, 0x3b9d, 0xf7c2, 0x1457, 0x0, 0x0);
        gbc.writeMem(0x8d44, { 0x2b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3d1f, gbc.sp());
        EXPECT(0x8d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8d44));
        // 2B 0368
        gbc.setState(0xdd25, 0x10ed, 0x8260, 0xb94a, 0xb9ab, 0x6df8, 0x0, 0x0);
        gbc.writeMem(0xdd25, { 0x2b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x10ed, gbc.sp());
        EXPECT(0xdd26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdd25));
        // 2B 0369
        gbc.setState(0x7af4, 0xe108, 0xfae0, 0x4ce6, 0xc7a7, 0x74c5, 0x0, 0x0);
        gbc.writeMem(0x7af4, { 0x2b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe108, gbc.sp());
        EXPECT(0x7af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 036A
        gbc.setState(0xb2af, 0x2ef4, 0x6bc0, 0xa2a5, 0x2217, 0xdd9d, 0x0, 0x0);
        gbc.writeMem(0xb2af, { 0x2b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2ef4, gbc.sp());
        EXPECT(0xb2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb2af));
        // 2B 036B
        gbc.setState(0xdfd9, 0x32e8, 0x440, 0x2a8c, 0x4117, 0x2347, 0x0, 0x0);
        gbc.writeMem(0xdfd9, { 0x2b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x32e8, gbc.sp());
        EXPECT(0xdfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdfd9));
        // 2B 036C
        gbc.setState(0x20cc, 0xbf6b, 0x320, 0x997d, 0xa1f0, 0x8225, 0x0, 0x1);
        gbc.writeMem(0x20cc, { 0x2b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbf6b, gbc.sp());
        EXPECT(0x20cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 036D
        gbc.setState(0xd175, 0x9bc7, 0xa010, 0x4740, 0xead8, 0x8bfe, 0x0, 0x1);
        gbc.writeMem(0xd175, { 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9bc7, gbc.sp());
        EXPECT(0xd176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd175));
        // 2B 036E
        gbc.setState(0x9ba8, 0x5b64, 0x7c60, 0x527c, 0xf2c8, 0x3ade, 0x1, 0x0);
        gbc.writeMem(0x9ba8, { 0x2b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5b64, gbc.sp());
        EXPECT(0x9ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9ba8));
        // 2B 036F
        gbc.setState(0x4d50, 0x436f, 0x7400, 0xc1a0, 0xefe6, 0x7364, 0x1, 0x0);
        gbc.writeMem(0x4d50, { 0x2b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x436f, gbc.sp());
        EXPECT(0x4d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0370
        gbc.setState(0x66da, 0xd96c, 0x2aa0, 0xfff1, 0xc9d2, 0xe90f, 0x0, 0x1);
        gbc.writeMem(0x66da, { 0x2b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd96c, gbc.sp());
        EXPECT(0x66db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0371
        gbc.setState(0xa1be, 0x355c, 0xed40, 0xd035, 0x31e, 0x6f51, 0x1, 0x0);
        gbc.writeMem(0xa1be, { 0x2b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x355c, gbc.sp());
        EXPECT(0xa1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa1be));
        // 2B 0372
        gbc.setState(0xe556, 0x5346, 0xd410, 0xc3c5, 0xe01e, 0x5218, 0x0, 0x1);
        gbc.writeMem(0xe556, { 0x2b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5346, gbc.sp());
        EXPECT(0xe557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe556));
        // 2B 0373
        gbc.setState(0x5997, 0x8708, 0x34f0, 0xec6e, 0x6eb7, 0xb166, 0x0, 0x1);
        gbc.writeMem(0x5997, { 0x2b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8708, gbc.sp());
        EXPECT(0x5998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0374
        gbc.setState(0x1adb, 0x4f32, 0xa560, 0xd83f, 0xb0c6, 0x177f, 0x1, 0x1);
        gbc.writeMem(0x1adb, { 0x2b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4f32, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0375
        gbc.setState(0x23c7, 0x50df, 0xde70, 0x5057, 0xac83, 0x1ac, 0x1, 0x0);
        gbc.writeMem(0x23c7, { 0x2b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x50df, gbc.sp());
        EXPECT(0x23c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0376
        gbc.setState(0x1a3a, 0x7c38, 0xfb0, 0x3674, 0xeba4, 0x9811, 0x1, 0x0);
        gbc.writeMem(0x1a3a, { 0x2b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7c38, gbc.sp());
        EXPECT(0x1a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0377
        gbc.setState(0x73bb, 0xdd8, 0x7370, 0x129f, 0x999a, 0x1e70, 0x1, 0x0);
        gbc.writeMem(0x73bb, { 0x2b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdd8, gbc.sp());
        EXPECT(0x73bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0378
        gbc.setState(0x1291, 0x1b87, 0xe0d0, 0x7e64, 0xb17b, 0xb776, 0x0, 0x0);
        gbc.writeMem(0x1291, { 0x2b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1b87, gbc.sp());
        EXPECT(0x1292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0379
        gbc.setState(0x8026, 0x7c32, 0xcd10, 0x606c, 0xdbd9, 0x6d0b, 0x1, 0x0);
        gbc.writeMem(0x8026, { 0x2b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7c32, gbc.sp());
        EXPECT(0x8027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8026));
        // 2B 037A
        gbc.setState(0x7c6e, 0x1296, 0xac50, 0xce48, 0x89b4, 0xa1df, 0x0, 0x0);
        gbc.writeMem(0x7c6e, { 0x2b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1296, gbc.sp());
        EXPECT(0x7c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 037B
        gbc.setState(0x6244, 0x7a05, 0x53b0, 0x7224, 0x71cc, 0x9155, 0x0, 0x1);
        gbc.writeMem(0x6244, { 0x2b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7a05, gbc.sp());
        EXPECT(0x6245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 037C
        gbc.setState(0xaa8b, 0x65bc, 0x55c0, 0x3f26, 0x6b3a, 0x1d2, 0x1, 0x0);
        gbc.writeMem(0xaa8b, { 0x2b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x65bc, gbc.sp());
        EXPECT(0xaa8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaa8b));
        // 2B 037D
        gbc.setState(0xec98, 0xf8b6, 0xd3e0, 0x8874, 0xcd5a, 0xd2cc, 0x0, 0x1);
        gbc.writeMem(0xec98, { 0x2b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf8b6, gbc.sp());
        EXPECT(0xec99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xec98));
        // 2B 037E
        gbc.setState(0xd053, 0x8f12, 0x75e0, 0x83a0, 0xfde9, 0xf010, 0x0, 0x1);
        gbc.writeMem(0xd053, { 0x2b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8f12, gbc.sp());
        EXPECT(0xd054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd053));
        // 2B 037F
        gbc.setState(0x845c, 0x711d, 0xfda0, 0x801e, 0x6fc7, 0x7ace, 0x1, 0x1);
        gbc.writeMem(0x845c, { 0x2b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x711d, gbc.sp());
        EXPECT(0x845d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x845c));
        // 2B 0380
        gbc.setState(0x7336, 0x803, 0x1260, 0xe6c7, 0x6011, 0xb7e6, 0x0, 0x0);
        gbc.writeMem(0x7336, { 0x2b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x803, gbc.sp());
        EXPECT(0x7337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0381
        gbc.setState(0x9f69, 0xe3bc, 0x2ba0, 0x78e, 0xc3de, 0x2c55, 0x1, 0x0);
        gbc.writeMem(0x9f69, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe3bc, gbc.sp());
        EXPECT(0x9f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9f69));
        // 2B 0382
        gbc.setState(0x767f, 0xfbae, 0xa4c0, 0xea8b, 0x2b21, 0xa02e, 0x1, 0x1);
        gbc.writeMem(0x767f, { 0x2b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfbae, gbc.sp());
        EXPECT(0x7680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0383
        gbc.setState(0x1b2c, 0x3f8, 0xe580, 0x1cee, 0x8b6e, 0x65e0, 0x1, 0x0);
        gbc.writeMem(0x1b2c, { 0x2b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3f8, gbc.sp());
        EXPECT(0x1b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0384
        gbc.setState(0xafab, 0xac67, 0xdf90, 0x30c0, 0xd41f, 0xb4cd, 0x1, 0x1);
        gbc.writeMem(0xafab, { 0x2b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xac67, gbc.sp());
        EXPECT(0xafac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xafab));
        // 2B 0385
        gbc.setState(0x4942, 0xd011, 0x7470, 0xc396, 0xf88, 0xeb9e, 0x1, 0x0);
        gbc.writeMem(0x4942, { 0x2b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd011, gbc.sp());
        EXPECT(0x4943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0386
        gbc.setState(0xd67, 0x3d2b, 0x6700, 0xcc58, 0xdcfa, 0x83cd, 0x1, 0x0);
        gbc.writeMem(0xd67, { 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3d2b, gbc.sp());
        EXPECT(0xd68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0387
        gbc.setState(0x27, 0x2c2f, 0xa270, 0xf38a, 0x956d, 0x5365, 0x0, 0x0);
        gbc.writeMem(0x27, { 0x2b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2c2f, gbc.sp());
        EXPECT(0x28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0388
        gbc.setState(0xd57c, 0x4a6d, 0xe490, 0x907b, 0xbf05, 0xa2e1, 0x0, 0x1);
        gbc.writeMem(0xd57c, { 0x2b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4a6d, gbc.sp());
        EXPECT(0xd57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd57c));
        // 2B 0389
        gbc.setState(0x8166, 0x158a, 0x4f80, 0x2683, 0x716c, 0xa20, 0x1, 0x0);
        gbc.writeMem(0x8166, { 0x2b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x158a, gbc.sp());
        EXPECT(0x8167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8166));
        // 2B 038A
        gbc.setState(0x44c, 0xa456, 0x8ad0, 0xd2eb, 0x6213, 0x80a9, 0x0, 0x1);
        gbc.writeMem(0x44c, { 0x2b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa456, gbc.sp());
        EXPECT(0x44d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 038B
        gbc.setState(0x2261, 0x183a, 0x2da0, 0xb2bf, 0x40c7, 0x25c5, 0x1, 0x1);
        gbc.writeMem(0x2261, { 0x2b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x183a, gbc.sp());
        EXPECT(0x2262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 038C
        gbc.setState(0x108a, 0x4648, 0x4cb0, 0xbd09, 0xc20b, 0x6f3b, 0x1, 0x1);
        gbc.writeMem(0x108a, { 0x2b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4648, gbc.sp());
        EXPECT(0x108b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 038D
        gbc.setState(0x6c69, 0x983e, 0x4630, 0xd1e1, 0x276d, 0x9f83, 0x1, 0x1);
        gbc.writeMem(0x6c69, { 0x2b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x983e, gbc.sp());
        EXPECT(0x6c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 038E
        gbc.setState(0x4cf3, 0x48cb, 0xa7c0, 0x8242, 0xa3cd, 0xedfa, 0x0, 0x0);
        gbc.writeMem(0x4cf3, { 0x2b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x48cb, gbc.sp());
        EXPECT(0x4cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 038F
        gbc.setState(0x27a1, 0x72f2, 0xc480, 0xd5d6, 0xa5a, 0xff78, 0x1, 0x1);
        gbc.writeMem(0x27a1, { 0x2b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x72f2, gbc.sp());
        EXPECT(0x27a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0391
        gbc.setState(0x9cf8, 0xbd78, 0x71b0, 0x6021, 0xeb03, 0xb624, 0x0, 0x0);
        gbc.writeMem(0x9cf8, { 0x2b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbd78, gbc.sp());
        EXPECT(0x9cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9cf8));
        // 2B 0392
        gbc.setState(0x9ee8, 0x4374, 0xbf90, 0x95ea, 0xd710, 0x3caa, 0x1, 0x1);
        gbc.writeMem(0x9ee8, { 0x2b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4374, gbc.sp());
        EXPECT(0x9ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9ee8));
        // 2B 0393
        gbc.setState(0xad98, 0x9ce8, 0xa530, 0x32f4, 0xf322, 0x63ce, 0x1, 0x1);
        gbc.writeMem(0xad98, { 0x2b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9ce8, gbc.sp());
        EXPECT(0xad99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xad98));
        // 2B 0394
        gbc.setState(0xbbab, 0xe4fb, 0x4760, 0x46e4, 0xb55f, 0x2dc4, 0x1, 0x0);
        gbc.writeMem(0xbbab, { 0x2b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe4fb, gbc.sp());
        EXPECT(0xbbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbbab));
        // 2B 0396
        gbc.setState(0x5a5d, 0x7268, 0x9a40, 0xc5d4, 0x2aec, 0x50c6, 0x1, 0x0);
        gbc.writeMem(0x5a5d, { 0x2b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7268, gbc.sp());
        EXPECT(0x5a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 0397
        gbc.setState(0x4c26, 0xe555, 0xa6b0, 0xfdb5, 0x793b, 0x32ae, 0x1, 0x0);
        gbc.writeMem(0x4c26, { 0x2b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe555, gbc.sp());
        EXPECT(0x4c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 0398
        gbc.setState(0x894f, 0x1eaa, 0xc7f0, 0xf641, 0xe4ca, 0x6c61, 0x1, 0x0);
        gbc.writeMem(0x894f, { 0x2b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1eaa, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x894f));
        // 2B 0399
        gbc.setState(0x4030, 0xbafa, 0x4ef0, 0x162a, 0x3739, 0x7818, 0x1, 0x0);
        gbc.writeMem(0x4030, { 0x2b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbafa, gbc.sp());
        EXPECT(0x4031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 039A
        gbc.setState(0x87bb, 0x1014, 0x40a0, 0xc08, 0x1026, 0x473c, 0x1, 0x1);
        gbc.writeMem(0x87bb, { 0x2b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1014, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x87bb));
        // 2B 039B
        gbc.setState(0x5dcc, 0xead2, 0x7b50, 0x3a5, 0x88c, 0x4f2c, 0x0, 0x0);
        gbc.writeMem(0x5dcc, { 0x2b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xead2, gbc.sp());
        EXPECT(0x5dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 039C
        gbc.setState(0xd57b, 0xd331, 0xd890, 0x244a, 0x286, 0xd82d, 0x0, 0x0);
        gbc.writeMem(0xd57b, { 0x2b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd331, gbc.sp());
        EXPECT(0xd57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd57b));
        // 2B 039D
        gbc.setState(0xa00d, 0x46d2, 0xd9c0, 0xde1a, 0x74c9, 0x2013, 0x1, 0x1);
        gbc.writeMem(0xa00d, { 0x2b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x46d2, gbc.sp());
        EXPECT(0xa00e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa00d));
        // 2B 039E
        gbc.setState(0xbf16, 0xeed, 0xaf70, 0x29fc, 0x4a21, 0x7275, 0x0, 0x0);
        gbc.writeMem(0xbf16, { 0x2b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xeed, gbc.sp());
        EXPECT(0xbf17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbf16));
        // 2B 039F
        gbc.setState(0x9ba1, 0xe60a, 0x5980, 0xde28, 0x8980, 0xa8f9, 0x1, 0x1);
        gbc.writeMem(0x9ba1, { 0x2b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe60a, gbc.sp());
        EXPECT(0x9ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9ba1));
        // 2B 03A0
        gbc.setState(0xccdf, 0x4922, 0x98e0, 0x21af, 0x12be, 0xa31a, 0x0, 0x1);
        gbc.writeMem(0xccdf, { 0x2b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4922, gbc.sp());
        EXPECT(0xcce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xccdf));
        // 2B 03A1
        gbc.setState(0x58ea, 0x1aeb, 0x4660, 0x81be, 0xb9b, 0x33c6, 0x1, 0x0);
        gbc.writeMem(0x58ea, { 0x2b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1aeb, gbc.sp());
        EXPECT(0x58eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03A2
        gbc.setState(0x4288, 0xcf19, 0x48d0, 0x7c48, 0x5f2c, 0x4c87, 0x1, 0x0);
        gbc.writeMem(0x4288, { 0x2b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcf19, gbc.sp());
        EXPECT(0x4289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03A3
        gbc.setState(0x758, 0xf127, 0xd420, 0xf6f1, 0x4481, 0xdd59, 0x1, 0x0);
        gbc.writeMem(0x758, { 0x2b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf127, gbc.sp());
        EXPECT(0x759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03A4
        gbc.setState(0x8b3, 0x2145, 0x36c0, 0x3379, 0x72ec, 0x3299, 0x0, 0x0);
        gbc.writeMem(0x8b3, { 0x2b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2145, gbc.sp());
        EXPECT(0x8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03A5
        gbc.setState(0x16e3, 0x4099, 0x1080, 0x86b0, 0xcbc7, 0xa644, 0x0, 0x1);
        gbc.writeMem(0x16e3, { 0x2b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4099, gbc.sp());
        EXPECT(0x16e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03A6
        gbc.setState(0x9db2, 0x4097, 0x5870, 0xf5dc, 0x7632, 0xaa2d, 0x1, 0x0);
        gbc.writeMem(0x9db2, { 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4097, gbc.sp());
        EXPECT(0x9db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9db2));
        // 2B 03A7
        gbc.setState(0x1bd8, 0x4b03, 0x3a0, 0x7860, 0x7cb7, 0x8c92, 0x1, 0x1);
        gbc.writeMem(0x1bd8, { 0x2b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4b03, gbc.sp());
        EXPECT(0x1bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03A8
        gbc.setState(0x127e, 0xffcb, 0x6820, 0xe09b, 0xd150, 0x9, 0x1, 0x0);
        gbc.writeMem(0x127e, { 0x2b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xffcb, gbc.sp());
        EXPECT(0x127f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03A9
        gbc.setState(0x4213, 0xba1b, 0x9ef0, 0x11a6, 0xc88e, 0x2a3f, 0x1, 0x0);
        gbc.writeMem(0x4213, { 0x2b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xba1b, gbc.sp());
        EXPECT(0x4214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03AA
        gbc.setState(0x5aa8, 0x4f73, 0xd740, 0x2c84, 0x605c, 0xcbc9, 0x1, 0x1);
        gbc.writeMem(0x5aa8, { 0x2b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4f73, gbc.sp());
        EXPECT(0x5aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03AB
        gbc.setState(0x502b, 0xda39, 0xfe40, 0x98a9, 0xc2f5, 0x4ebe, 0x1, 0x0);
        gbc.writeMem(0x502b, { 0x2b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xda39, gbc.sp());
        EXPECT(0x502c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03AC
        gbc.setState(0x6efa, 0x1442, 0x4840, 0x12b8, 0x2f9f, 0x443b, 0x0, 0x0);
        gbc.writeMem(0x6efa, { 0x2b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1442, gbc.sp());
        EXPECT(0x6efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03AD
        gbc.setState(0x3ed1, 0x1c8c, 0x59b0, 0xef17, 0xaa6f, 0x96dd, 0x1, 0x1);
        gbc.writeMem(0x3ed1, { 0x2b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1c8c, gbc.sp());
        EXPECT(0x3ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03AE
        gbc.setState(0xd620, 0x6c2c, 0x9fd0, 0x92c8, 0x31d7, 0x8531, 0x0, 0x1);
        gbc.writeMem(0xd620, { 0x2b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6c2c, gbc.sp());
        EXPECT(0xd621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd620));
        // 2B 03AF
        gbc.setState(0xaad7, 0xf571, 0x4160, 0xd570, 0x68a0, 0xe782, 0x1, 0x0);
        gbc.writeMem(0xaad7, { 0x2b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf571, gbc.sp());
        EXPECT(0xaad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaad7));
        // 2B 03B0
        gbc.setState(0x5f83, 0xec8a, 0x80a0, 0x7f52, 0xe7a, 0xc63b, 0x1, 0x0);
        gbc.writeMem(0x5f83, { 0x2b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xec8a, gbc.sp());
        EXPECT(0x5f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03B1
        gbc.setState(0xbd19, 0x7656, 0xe740, 0xc030, 0xd8da, 0xe265, 0x0, 0x0);
        gbc.writeMem(0xbd19, { 0x2b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7656, gbc.sp());
        EXPECT(0xbd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbd19));
        // 2B 03B2
        gbc.setState(0xf58, 0xe210, 0xebb0, 0x66a5, 0xf32e, 0x884d, 0x1, 0x1);
        gbc.writeMem(0xf58, { 0x2b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe210, gbc.sp());
        EXPECT(0xf59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03B3
        gbc.setState(0x87c4, 0x7527, 0xbe70, 0xcb75, 0x9091, 0x6fa1, 0x1, 0x0);
        gbc.writeMem(0x87c4, { 0x2b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7527, gbc.sp());
        EXPECT(0x87c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x87c4));
        // 2B 03B4
        gbc.setState(0x39fe, 0xbf90, 0x3900, 0xb969, 0x58b8, 0x62d9, 0x1, 0x1);
        gbc.writeMem(0x39fe, { 0x2b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbf90, gbc.sp());
        EXPECT(0x39ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03B5
        gbc.setState(0x3530, 0x56cd, 0x23d0, 0xa028, 0x7086, 0x1dee, 0x1, 0x0);
        gbc.writeMem(0x3530, { 0x2b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x56cd, gbc.sp());
        EXPECT(0x3531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03B6
        gbc.setState(0x748b, 0xad7, 0x3290, 0x2d88, 0x161e, 0xb936, 0x0, 0x1);
        gbc.writeMem(0x748b, { 0x2b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xad7, gbc.sp());
        EXPECT(0x748c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03B7
        gbc.setState(0xebf, 0x5e6e, 0x7950, 0xa8bd, 0x7cf, 0xf497, 0x1, 0x1);
        gbc.writeMem(0xebf, { 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5e6e, gbc.sp());
        EXPECT(0xec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03B8
        gbc.setState(0x88c5, 0xaa91, 0x6e70, 0xafe8, 0x3771, 0xbe4a, 0x1, 0x0);
        gbc.writeMem(0x88c5, { 0x2b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xaa91, gbc.sp());
        EXPECT(0x88c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x88c5));
        // 2B 03B9
        gbc.setState(0xcd2b, 0xec47, 0x3670, 0x6643, 0xfc4c, 0xe6d3, 0x0, 0x1);
        gbc.writeMem(0xcd2b, { 0x2b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xec47, gbc.sp());
        EXPECT(0xcd2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcd2b));
        // 2B 03BA
        gbc.setState(0x6cca, 0xebb, 0x9530, 0xbbc4, 0x95cc, 0x6195, 0x1, 0x0);
        gbc.writeMem(0x6cca, { 0x2b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xebb, gbc.sp());
        EXPECT(0x6ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03BC
        gbc.setState(0xb83b, 0xb6d2, 0x7070, 0x253a, 0x3e57, 0x6dc8, 0x1, 0x1);
        gbc.writeMem(0xb83b, { 0x2b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb6d2, gbc.sp());
        EXPECT(0xb83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb83b));
        // 2B 03BD
        gbc.setState(0xcf15, 0xe646, 0x4d70, 0x2df2, 0x5ae7, 0x36da, 0x0, 0x1);
        gbc.writeMem(0xcf15, { 0x2b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe646, gbc.sp());
        EXPECT(0xcf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcf15));
        // 2B 03BE
        gbc.setState(0x1331, 0xee51, 0x88e0, 0xcb20, 0xc76c, 0x1215, 0x0, 0x1);
        gbc.writeMem(0x1331, { 0x2b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xee51, gbc.sp());
        EXPECT(0x1332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03BF
        gbc.setState(0xe5fd, 0x2bf9, 0x9700, 0x81a1, 0xcd43, 0x4fa1, 0x1, 0x0);
        gbc.writeMem(0xe5fd, { 0x2b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2bf9, gbc.sp());
        EXPECT(0xe5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe5fd));
        // 2B 03C0
        gbc.setState(0x94e4, 0x3ba2, 0x79c0, 0xce14, 0x66d5, 0x5444, 0x1, 0x1);
        gbc.writeMem(0x94e4, { 0x2b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3ba2, gbc.sp());
        EXPECT(0x94e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x94e4));
        // 2B 03C1
        gbc.setState(0xdec6, 0x4835, 0x2bc0, 0xf903, 0x38e7, 0x3be, 0x0, 0x1);
        gbc.writeMem(0xdec6, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4835, gbc.sp());
        EXPECT(0xdec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xdec6));
        // 2B 03C2
        gbc.setState(0xe301, 0xb831, 0x2650, 0x4d29, 0xdb, 0x5848, 0x0, 0x0);
        gbc.writeMem(0xe301, { 0x2b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb831, gbc.sp());
        EXPECT(0xe302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe301));
        // 2B 03C3
        gbc.setState(0x2066, 0xf85a, 0x4b00, 0x6a43, 0x179d, 0x82bc, 0x1, 0x1);
        gbc.writeMem(0x2066, { 0x2b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf85a, gbc.sp());
        EXPECT(0x2067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03C4
        gbc.setState(0x6d85, 0x5af9, 0x36c0, 0x9240, 0x9be4, 0x43e3, 0x0, 0x1);
        gbc.writeMem(0x6d85, { 0x2b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5af9, gbc.sp());
        EXPECT(0x6d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03C5
        gbc.setState(0x40f3, 0xa836, 0x8ed0, 0xa36f, 0xe41a, 0xb5c, 0x0, 0x0);
        gbc.writeMem(0x40f3, { 0x2b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa836, gbc.sp());
        EXPECT(0x40f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03C6
        gbc.setState(0x7230, 0x6373, 0xfda0, 0x116a, 0x5359, 0x4d66, 0x1, 0x0);
        gbc.writeMem(0x7230, { 0x2b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6373, gbc.sp());
        EXPECT(0x7231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03C7
        gbc.setState(0xcc22, 0xe9f3, 0x5fe0, 0xee58, 0x9061, 0x9fab, 0x1, 0x1);
        gbc.writeMem(0xcc22, { 0x2b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe9f3, gbc.sp());
        EXPECT(0xcc23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcc22));
        // 2B 03C8
        gbc.setState(0xea6a, 0xc24b, 0x18b0, 0x5a15, 0x9e01, 0x6e4d, 0x1, 0x1);
        gbc.writeMem(0xea6a, { 0x2b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc24b, gbc.sp());
        EXPECT(0xea6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xea6a));
        // 2B 03CA
        gbc.setState(0xeae6, 0x23ae, 0x56c0, 0xe0ff, 0xcad7, 0x3e4, 0x0, 0x1);
        gbc.writeMem(0xeae6, { 0x2b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x23ae, gbc.sp());
        EXPECT(0xeae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xeae6));
        // 2B 03CB
        gbc.setState(0xaff0, 0x8fe3, 0x1240, 0x5953, 0xba0f, 0xfee, 0x1, 0x1);
        gbc.writeMem(0xaff0, { 0x2b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8fe3, gbc.sp());
        EXPECT(0xaff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaff0));
        // 2B 03CD
        gbc.setState(0x77b1, 0xdd84, 0xd830, 0xa121, 0x1047, 0xf78d, 0x1, 0x1);
        gbc.writeMem(0x77b1, { 0x2b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdd84, gbc.sp());
        EXPECT(0x77b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03CE
        gbc.setState(0x97f5, 0x5399, 0x9660, 0xfee2, 0x158b, 0x906d, 0x0, 0x1);
        gbc.writeMem(0x97f5, { 0x2b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5399, gbc.sp());
        EXPECT(0x97f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x97f5));
        // 2B 03CF
        gbc.setState(0x8920, 0x1da8, 0x3140, 0x2316, 0xead1, 0x92c6, 0x1, 0x1);
        gbc.writeMem(0x8920, { 0x2b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1da8, gbc.sp());
        EXPECT(0x8921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x8920));
        // 2B 03D0
        gbc.setState(0xb473, 0x68bb, 0x94b0, 0x742, 0xa20f, 0xde85, 0x0, 0x1);
        gbc.writeMem(0xb473, { 0x2b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x68bb, gbc.sp());
        EXPECT(0xb474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb473));
        // 2B 03D1
        gbc.setState(0xe6ff, 0x91ed, 0xc980, 0x8b70, 0x2ac, 0xc23c, 0x1, 0x0);
        gbc.writeMem(0xe6ff, { 0x2b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x91ed, gbc.sp());
        EXPECT(0xe700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe6ff));
        // 2B 03D2
        gbc.setState(0x6a3, 0xbeed, 0x7e50, 0x7fda, 0x6ad9, 0x5842, 0x0, 0x1);
        gbc.writeMem(0x6a3, { 0x2b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbeed, gbc.sp());
        EXPECT(0x6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03D3
        gbc.setState(0x274f, 0xc5fc, 0x3e30, 0xf441, 0x6227, 0x636f, 0x0, 0x1);
        gbc.writeMem(0x274f, { 0x2b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc5fc, gbc.sp());
        EXPECT(0x2750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03D4
        gbc.setState(0x3292, 0x3d0, 0xacd0, 0xd501, 0x83a5, 0xbd5d, 0x0, 0x1);
        gbc.writeMem(0x3292, { 0x2b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3d0, gbc.sp());
        EXPECT(0x3293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03D5
        gbc.setState(0xe64c, 0x2049, 0xb950, 0x2d58, 0xa382, 0x2b24, 0x0, 0x1);
        gbc.writeMem(0xe64c, { 0x2b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2049, gbc.sp());
        EXPECT(0xe64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe64c));
        // 2B 03D6
        gbc.setState(0x57d0, 0xe800, 0x2040, 0x4625, 0x643c, 0x52cb, 0x0, 0x1);
        gbc.writeMem(0x57d0, { 0x2b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe800, gbc.sp());
        EXPECT(0x57d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03D7
        gbc.setState(0x340e, 0xd430, 0x9070, 0x767f, 0x8b01, 0x930e, 0x1, 0x0);
        gbc.writeMem(0x340e, { 0x2b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd430, gbc.sp());
        EXPECT(0x340f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03D8
        gbc.setState(0x6f77, 0xd172, 0x7650, 0x437c, 0xd2f9, 0xf2c2, 0x0, 0x0);
        gbc.writeMem(0x6f77, { 0x2b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd172, gbc.sp());
        EXPECT(0x6f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03D9
        gbc.setState(0x31b0, 0xd9f5, 0xb7f0, 0xa8a4, 0x6055, 0xd10c, 0x1, 0x0);
        gbc.writeMem(0x31b0, { 0x2b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd9f5, gbc.sp());
        EXPECT(0x31b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03DA
        gbc.setState(0xd72f, 0xa81b, 0xeb70, 0x66d7, 0x9a17, 0xa46c, 0x1, 0x1);
        gbc.writeMem(0xd72f, { 0x2b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa81b, gbc.sp());
        EXPECT(0xd730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd72f));
        // 2B 03DB
        gbc.setState(0xcfe2, 0x9090, 0x3000, 0xb6f7, 0x1004, 0xad2a, 0x0, 0x1);
        gbc.writeMem(0xcfe2, { 0x2b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9090, gbc.sp());
        EXPECT(0xcfe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcfe2));
        // 2B 03DC
        gbc.setState(0xaae8, 0xc2e5, 0xe1d0, 0xae7f, 0x6150, 0x883a, 0x0, 0x0);
        gbc.writeMem(0xaae8, { 0x2b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc2e5, gbc.sp());
        EXPECT(0xaae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaae8));
        // 2B 03DE
        gbc.setState(0x41cb, 0xbe47, 0x4de0, 0xaccb, 0x65bd, 0x56f6, 0x0, 0x1);
        gbc.writeMem(0x41cb, { 0x2b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbe47, gbc.sp());
        EXPECT(0x41cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03DF
        gbc.setState(0x4235, 0xd2d6, 0xf740, 0x6fcd, 0x5d66, 0xa046, 0x0, 0x0);
        gbc.writeMem(0x4235, { 0x2b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd2d6, gbc.sp());
        EXPECT(0x4236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03E0
        gbc.setState(0xcefe, 0x5f65, 0x7830, 0x5c47, 0xe03e, 0x3b7b, 0x1, 0x0);
        gbc.writeMem(0xcefe, { 0x2b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5f65, gbc.sp());
        EXPECT(0xceff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcefe));
        // 2B 03E1
        gbc.setState(0x7ef2, 0x6dff, 0x2560, 0x6730, 0x63ea, 0xcb48, 0x0, 0x1);
        gbc.writeMem(0x7ef2, { 0x2b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6dff, gbc.sp());
        EXPECT(0x7ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2B 03E2
        gbc.setState(0x94ba, 0x81d7, 0xae00, 0x13ab, 0x8e30, 0x15c3, 0x0, 0x0);
        gbc.writeMem(0x94ba, { 0x2b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x81d7, gbc.sp());
        EXPECT(0x94bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x94ba));
        // 2B 03E3
        gbc.setState(0xc6c4, 0x2b6e, 0x7850, 0x8cee, 0xe4eb, 0x7a1a, 0x0, 0x1);
        gbc.writeMem(0xc6c4, { 0x2b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0xc6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc6c4));
        // 2B 03E4
        gbc.setState(0xae9d, 0x86d3, 0x33d0, 0x3d24, 0x6853, 0x3de0, 0x1, 0x1);
        gbc.writeMem(0xae9d, { 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x86d3, gbc.sp());
        EXPECT(0xae9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xae9d));
        // 2B 03E5
        gbc.setState(0x3c7b, 0x34fc, 0xb6d0, 0xa554, 0xd59, 0xb051, 0x1, 0x0);
        gbc.writeMem(0x3c7b, { 0x2b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x34fc, gbc.sp());
        EXPECT(0x3c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03E6
        gbc.setState(0x25ad, 0x5c51, 0x34d0, 0x9cd5, 0xeb8a, 0x5d9f, 0x1, 0x1);
        gbc.writeMem(0x25ad, { 0x2b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5c51, gbc.sp());
        EXPECT(0x25ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2B 03E7
        gbc.setState(0x141c, 0x4b5, 0x64f0, 0x8bca, 0x2f6f, 0xeb53, 0x1, 0x0);
        gbc.writeMem(0x141c, { 0x2b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4b5, gbc.sp());
        EXPECT(0x141d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
