#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_b8)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_b8) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B8 0000
        gbc.setState(0xca41, 0xe675, 0xe070, 0x370c, 0x355a, 0x2069, 0x0, 0x1);
        gbc.writeMem(0xca41, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe675);
        EXPECT(gbc.pc(), 0xca43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca41), 0xcb);
        EXPECT(gbc.readMem(0xca42), 0xb8);
        // CB B8 0001
        gbc.setState(0x4947, 0x46e5, 0xbf70, 0x95b0, 0xe7e2, 0xeb8b, 0x0, 0x0);
        gbc.writeMem(0x4947, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x46e5);
        EXPECT(gbc.pc(), 0x4949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0002
        gbc.setState(0x74d2, 0xcb1b, 0x4230, 0xdc66, 0x5c4c, 0x4bc6, 0x0, 0x1);
        gbc.writeMem(0x74d2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcb1b);
        EXPECT(gbc.pc(), 0x74d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0004
        gbc.setState(0xe48c, 0xe244, 0xc820, 0xc514, 0x999c, 0xd1cf, 0x0, 0x0);
        gbc.writeMem(0xe48c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe244);
        EXPECT(gbc.pc(), 0xe48e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe48c), 0xcb);
        EXPECT(gbc.readMem(0xe48d), 0xb8);
        // CB B8 0005
        gbc.setState(0xaa62, 0x7ddf, 0xe030, 0xbf49, 0xf7aa, 0xae0d, 0x0, 0x1);
        gbc.writeMem(0xaa62, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7ddf);
        EXPECT(gbc.pc(), 0xaa64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa62), 0xcb);
        EXPECT(gbc.readMem(0xaa63), 0xb8);
        // CB B8 0006
        gbc.setState(0x1d96, 0x7f54, 0xb580, 0x2452, 0x62bc, 0xd3bd, 0x0, 0x0);
        gbc.writeMem(0x1d96, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7f54);
        EXPECT(gbc.pc(), 0x1d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0007
        gbc.setState(0x6982, 0xedfa, 0xa0f0, 0x5190, 0x9785, 0xc93, 0x1, 0x0);
        gbc.writeMem(0x6982, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xedfa);
        EXPECT(gbc.pc(), 0x6984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0008
        gbc.setState(0x9ce2, 0x5aa3, 0x3980, 0x9aa, 0xa087, 0x864, 0x0, 0x0);
        gbc.writeMem(0x9ce2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5aa3);
        EXPECT(gbc.pc(), 0x9ce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ce2), 0xcb);
        EXPECT(gbc.readMem(0x9ce3), 0xb8);
        // CB B8 0009
        gbc.setState(0xe15f, 0xe603, 0xe150, 0xfa51, 0x2bde, 0x7988, 0x0, 0x0);
        gbc.writeMem(0xe15f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe603);
        EXPECT(gbc.pc(), 0xe161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe15f), 0xcb);
        EXPECT(gbc.readMem(0xe160), 0xb8);
        // CB B8 000A
        gbc.setState(0x25df, 0x94fe, 0xbf50, 0xd18, 0x59b9, 0x5fcf, 0x0, 0x0);
        gbc.writeMem(0x25df, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x94fe);
        EXPECT(gbc.pc(), 0x25e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 000C
        gbc.setState(0xd04f, 0xa1c8, 0xa8b0, 0x290a, 0xdb11, 0x1286, 0x1, 0x1);
        gbc.writeMem(0xd04f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa1c8);
        EXPECT(gbc.pc(), 0xd051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd04f), 0xcb);
        EXPECT(gbc.readMem(0xd050), 0xb8);
        // CB B8 000D
        gbc.setState(0x44be, 0x3b33, 0xc580, 0x17d4, 0x59bb, 0xd596, 0x0, 0x1);
        gbc.writeMem(0x44be, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3b33);
        EXPECT(gbc.pc(), 0x44c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 000E
        gbc.setState(0xe47e, 0xf724, 0x91b0, 0x363b, 0x612f, 0x6d51, 0x1, 0x1);
        gbc.writeMem(0xe47e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf724);
        EXPECT(gbc.pc(), 0xe480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe47e), 0xcb);
        EXPECT(gbc.readMem(0xe47f), 0xb8);
        // CB B8 000F
        gbc.setState(0xa82b, 0xc9cf, 0x2440, 0x1840, 0x3eac, 0x96e, 0x1, 0x0);
        gbc.writeMem(0xa82b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc9cf);
        EXPECT(gbc.pc(), 0xa82d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82b), 0xcb);
        EXPECT(gbc.readMem(0xa82c), 0xb8);
        // CB B8 0010
        gbc.setState(0x7eee, 0x1061, 0x44a0, 0x211a, 0x5094, 0x7bce, 0x1, 0x1);
        gbc.writeMem(0x7eee, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1061);
        EXPECT(gbc.pc(), 0x7ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0011
        gbc.setState(0xca92, 0x2ac3, 0x57f0, 0x436e, 0x851b, 0xb5a1, 0x0, 0x1);
        gbc.writeMem(0xca92, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2ac3);
        EXPECT(gbc.pc(), 0xca94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca92), 0xcb);
        EXPECT(gbc.readMem(0xca93), 0xb8);
        // CB B8 0012
        gbc.setState(0x54e0, 0xf08, 0x4e10, 0xe717, 0x987b, 0xa1d, 0x1, 0x1);
        gbc.writeMem(0x54e0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf08);
        EXPECT(gbc.pc(), 0x54e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0013
        gbc.setState(0x2dfd, 0x14c3, 0xcce0, 0x608d, 0x671d, 0x479e, 0x0, 0x0);
        gbc.writeMem(0x2dfd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x14c3);
        EXPECT(gbc.pc(), 0x2dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0014
        gbc.setState(0x9bb3, 0xca66, 0x49c0, 0x1401, 0x7e0c, 0x3c41, 0x0, 0x0);
        gbc.writeMem(0x9bb3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xca66);
        EXPECT(gbc.pc(), 0x9bb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bb3), 0xcb);
        EXPECT(gbc.readMem(0x9bb4), 0xb8);
        // CB B8 0015
        gbc.setState(0x7fb3, 0xfd84, 0xa9e0, 0xf897, 0x7e7e, 0x8d7f, 0x0, 0x1);
        gbc.writeMem(0x7fb3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfd84);
        EXPECT(gbc.pc(), 0x7fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0016
        gbc.setState(0xe10d, 0xfa5, 0x1c80, 0xe998, 0x2981, 0x8be3, 0x0, 0x0);
        gbc.writeMem(0xe10d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfa5);
        EXPECT(gbc.pc(), 0xe10f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe10d), 0xcb);
        EXPECT(gbc.readMem(0xe10e), 0xb8);
        // CB B8 0017
        gbc.setState(0x7bf8, 0x43d1, 0xde0, 0x8294, 0x3fd8, 0x4211, 0x1, 0x0);
        gbc.writeMem(0x7bf8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x43d1);
        EXPECT(gbc.pc(), 0x7bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0018
        gbc.setState(0xd6f6, 0xa22c, 0x6500, 0x811c, 0xeef7, 0x69c, 0x0, 0x1);
        gbc.writeMem(0xd6f6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa22c);
        EXPECT(gbc.pc(), 0xd6f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f6), 0xcb);
        EXPECT(gbc.readMem(0xd6f7), 0xb8);
        // CB B8 0019
        gbc.setState(0xf14, 0x8907, 0x4830, 0xde39, 0x9bd, 0x1d48, 0x0, 0x0);
        gbc.writeMem(0xf14, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8907);
        EXPECT(gbc.pc(), 0xf16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 001A
        gbc.setState(0x6671, 0x1db9, 0x6b50, 0xda2f, 0x68cd, 0x791, 0x0, 0x0);
        gbc.writeMem(0x6671, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1db9);
        EXPECT(gbc.pc(), 0x6673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 001B
        gbc.setState(0x64df, 0xe59, 0x6d50, 0xbaee, 0x6c95, 0xe7c0, 0x1, 0x1);
        gbc.writeMem(0x64df, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe59);
        EXPECT(gbc.pc(), 0x64e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 001C
        gbc.setState(0x4bfc, 0x388b, 0xe50, 0x9164, 0xae3a, 0xa85d, 0x0, 0x0);
        gbc.writeMem(0x4bfc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x388b);
        EXPECT(gbc.pc(), 0x4bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 001D
        gbc.setState(0xbc3e, 0x3af2, 0xb4a0, 0x5fcb, 0x77b6, 0xfe4d, 0x0, 0x1);
        gbc.writeMem(0xbc3e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3af2);
        EXPECT(gbc.pc(), 0xbc40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3e), 0xcb);
        EXPECT(gbc.readMem(0xbc3f), 0xb8);
        // CB B8 001E
        gbc.setState(0xd0ab, 0x5a29, 0x6260, 0xd0d4, 0x9321, 0x1d59, 0x1, 0x1);
        gbc.writeMem(0xd0ab, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5a29);
        EXPECT(gbc.pc(), 0xd0ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ab), 0xcb);
        EXPECT(gbc.readMem(0xd0ac), 0xb8);
        // CB B8 001F
        gbc.setState(0x7d9e, 0x14cc, 0x3e30, 0x923d, 0x8d2f, 0x138e, 0x1, 0x1);
        gbc.writeMem(0x7d9e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x14cc);
        EXPECT(gbc.pc(), 0x7da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0020
        gbc.setState(0xd35, 0xed87, 0x9390, 0x512c, 0x928a, 0x5a26, 0x0, 0x1);
        gbc.writeMem(0xd35, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xed87);
        EXPECT(gbc.pc(), 0xd37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0021
        gbc.setState(0x7d10, 0x94bc, 0xed00, 0x301c, 0xbfad, 0x7072, 0x0, 0x1);
        gbc.writeMem(0x7d10, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x94bc);
        EXPECT(gbc.pc(), 0x7d12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0022
        gbc.setState(0xe3ae, 0x6d42, 0x6400, 0x391e, 0x6046, 0x52b4, 0x0, 0x1);
        gbc.writeMem(0xe3ae, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6d42);
        EXPECT(gbc.pc(), 0xe3b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ae), 0xcb);
        EXPECT(gbc.readMem(0xe3af), 0xb8);
        // CB B8 0024
        gbc.setState(0x3dec, 0xba20, 0x2300, 0x9258, 0x365f, 0x7b25, 0x0, 0x1);
        gbc.writeMem(0x3dec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xba20);
        EXPECT(gbc.pc(), 0x3dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0025
        gbc.setState(0xe94a, 0x3dc6, 0x5c20, 0xeac5, 0xffc2, 0xca80, 0x0, 0x0);
        gbc.writeMem(0xe94a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3dc6);
        EXPECT(gbc.pc(), 0xe94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe94a), 0xcb);
        EXPECT(gbc.readMem(0xe94b), 0xb8);
        // CB B8 0026
        gbc.setState(0xe988, 0x6a85, 0xbdb0, 0xb89, 0xf76e, 0x5f8, 0x0, 0x0);
        gbc.writeMem(0xe988, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6a85);
        EXPECT(gbc.pc(), 0xe98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe988), 0xcb);
        EXPECT(gbc.readMem(0xe989), 0xb8);
        // CB B8 0027
        gbc.setState(0x20c9, 0x34f2, 0xa210, 0xd3e2, 0x3e61, 0x4719, 0x0, 0x1);
        gbc.writeMem(0x20c9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x34f2);
        EXPECT(gbc.pc(), 0x20cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0028
        gbc.setState(0x56ad, 0x1563, 0x9d10, 0xd0af, 0xf455, 0x56f2, 0x1, 0x0);
        gbc.writeMem(0x56ad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1563);
        EXPECT(gbc.pc(), 0x56af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0029
        gbc.setState(0x3d6, 0x348f, 0x5780, 0x474d, 0xf3e3, 0xc41b, 0x1, 0x0);
        gbc.writeMem(0x3d6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x348f);
        EXPECT(gbc.pc(), 0x3d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 002A
        gbc.setState(0x41a2, 0x8f3d, 0x1dd0, 0xf626, 0x461, 0x2869, 0x1, 0x0);
        gbc.writeMem(0x41a2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8f3d);
        EXPECT(gbc.pc(), 0x41a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 002B
        gbc.setState(0xe62a, 0x8fba, 0x2330, 0xa6b1, 0xea90, 0x6954, 0x1, 0x1);
        gbc.writeMem(0xe62a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8fba);
        EXPECT(gbc.pc(), 0xe62c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62a), 0xcb);
        EXPECT(gbc.readMem(0xe62b), 0xb8);
        // CB B8 002C
        gbc.setState(0x57f9, 0xcb88, 0xbb20, 0xd4c4, 0x3bb1, 0x95b4, 0x0, 0x1);
        gbc.writeMem(0x57f9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xcb88);
        EXPECT(gbc.pc(), 0x57fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 002D
        gbc.setState(0xa949, 0x2647, 0x5120, 0xb5f2, 0x1d2e, 0xc6d2, 0x0, 0x1);
        gbc.writeMem(0xa949, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2647);
        EXPECT(gbc.pc(), 0xa94b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa949), 0xcb);
        EXPECT(gbc.readMem(0xa94a), 0xb8);
        // CB B8 002E
        gbc.setState(0x5d47, 0x87c7, 0xd1b0, 0xa20a, 0x9844, 0x7594, 0x0, 0x1);
        gbc.writeMem(0x5d47, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x87c7);
        EXPECT(gbc.pc(), 0x5d49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 002F
        gbc.setState(0x4e22, 0x98ca, 0x7b80, 0x3f11, 0xb95e, 0xf106, 0x0, 0x0);
        gbc.writeMem(0x4e22, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x98ca);
        EXPECT(gbc.pc(), 0x4e24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0030
        gbc.setState(0x6a58, 0x7ed2, 0x9450, 0xc491, 0x32a0, 0x6834, 0x0, 0x0);
        gbc.writeMem(0x6a58, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7ed2);
        EXPECT(gbc.pc(), 0x6a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0031
        gbc.setState(0x21f1, 0x2d72, 0xb930, 0xcedc, 0xb8ef, 0x1ed5, 0x0, 0x1);
        gbc.writeMem(0x21f1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2d72);
        EXPECT(gbc.pc(), 0x21f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0032
        gbc.setState(0x3f96, 0xa640, 0x85b0, 0x17d6, 0x6700, 0x403, 0x0, 0x0);
        gbc.writeMem(0x3f96, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa640);
        EXPECT(gbc.pc(), 0x3f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0033
        gbc.setState(0x13b2, 0xf142, 0x5960, 0x6093, 0xeb95, 0xc69c, 0x1, 0x1);
        gbc.writeMem(0x13b2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf142);
        EXPECT(gbc.pc(), 0x13b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0035
        gbc.setState(0xa651, 0x1212, 0x34d0, 0xea37, 0x12dd, 0x4be7, 0x1, 0x0);
        gbc.writeMem(0xa651, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1212);
        EXPECT(gbc.pc(), 0xa653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa651), 0xcb);
        EXPECT(gbc.readMem(0xa652), 0xb8);
        // CB B8 0036
        gbc.setState(0x18eb, 0x3b65, 0x1550, 0x368, 0xfbde, 0x5be, 0x0, 0x0);
        gbc.writeMem(0x18eb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3b65);
        EXPECT(gbc.pc(), 0x18ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0037
        gbc.setState(0xec7d, 0xe8dc, 0x9890, 0x2da7, 0x6056, 0x6cf0, 0x0, 0x0);
        gbc.writeMem(0xec7d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe8dc);
        EXPECT(gbc.pc(), 0xec7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec7d), 0xcb);
        EXPECT(gbc.readMem(0xec7e), 0xb8);
        // CB B8 0038
        gbc.setState(0x1547, 0x91e2, 0xfc50, 0x6704, 0xcd49, 0xffb6, 0x0, 0x0);
        gbc.writeMem(0x1547, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x91e2);
        EXPECT(gbc.pc(), 0x1549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0039
        gbc.setState(0x1ab2, 0x5741, 0xaff0, 0x1099, 0x67d3, 0xa877, 0x0, 0x1);
        gbc.writeMem(0x1ab2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5741);
        EXPECT(gbc.pc(), 0x1ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 003A
        gbc.setState(0x1321, 0x62d3, 0xcd30, 0xd1b4, 0xf613, 0x30d4, 0x1, 0x0);
        gbc.writeMem(0x1321, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x62d3);
        EXPECT(gbc.pc(), 0x1323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 003B
        gbc.setState(0xcd2d, 0x6418, 0x1d90, 0xb35, 0xb961, 0x1165, 0x0, 0x0);
        gbc.writeMem(0xcd2d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6418);
        EXPECT(gbc.pc(), 0xcd2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2d), 0xcb);
        EXPECT(gbc.readMem(0xcd2e), 0xb8);
        // CB B8 003C
        gbc.setState(0x93a9, 0x1f70, 0xa910, 0x53cf, 0x5497, 0xe35c, 0x0, 0x1);
        gbc.writeMem(0x93a9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1f70);
        EXPECT(gbc.pc(), 0x93ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a9), 0xcb);
        EXPECT(gbc.readMem(0x93aa), 0xb8);
        // CB B8 003D
        gbc.setState(0x50af, 0x7440, 0xb160, 0x8fa8, 0xe542, 0xd10f, 0x0, 0x0);
        gbc.writeMem(0x50af, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7440);
        EXPECT(gbc.pc(), 0x50b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 003E
        gbc.setState(0x9e18, 0xcd65, 0xac90, 0x63e5, 0x7d77, 0xf8bd, 0x1, 0x1);
        gbc.writeMem(0x9e18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcd65);
        EXPECT(gbc.pc(), 0x9e1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e18), 0xcb);
        EXPECT(gbc.readMem(0x9e19), 0xb8);
        // CB B8 003F
        gbc.setState(0x29c1, 0xfb01, 0xde00, 0x6f26, 0x127e, 0x1dcb, 0x0, 0x0);
        gbc.writeMem(0x29c1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfb01);
        EXPECT(gbc.pc(), 0x29c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0040
        gbc.setState(0x7453, 0x6c60, 0x77a0, 0xf6dc, 0xd1f6, 0xb3b9, 0x1, 0x1);
        gbc.writeMem(0x7453, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6c60);
        EXPECT(gbc.pc(), 0x7455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0041
        gbc.setState(0x2e89, 0x6096, 0xb370, 0xa2bf, 0x9420, 0x3368, 0x0, 0x0);
        gbc.writeMem(0x2e89, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6096);
        EXPECT(gbc.pc(), 0x2e8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0042
        gbc.setState(0x6cf6, 0x6186, 0x7b90, 0x66e7, 0x9f95, 0x393f, 0x1, 0x0);
        gbc.writeMem(0x6cf6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6186);
        EXPECT(gbc.pc(), 0x6cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0043
        gbc.setState(0x7f02, 0xdff5, 0x14a0, 0xe68f, 0xe221, 0xc3e5, 0x1, 0x1);
        gbc.writeMem(0x7f02, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xdff5);
        EXPECT(gbc.pc(), 0x7f04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0044
        gbc.setState(0x14bf, 0x4d82, 0xbf20, 0x353d, 0xb1e5, 0x7b78, 0x1, 0x1);
        gbc.writeMem(0x14bf, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4d82);
        EXPECT(gbc.pc(), 0x14c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0045
        gbc.setState(0xb75d, 0xb38b, 0x11b0, 0xffbc, 0x213a, 0x523e, 0x0, 0x1);
        gbc.writeMem(0xb75d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb38b);
        EXPECT(gbc.pc(), 0xb75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb75d), 0xcb);
        EXPECT(gbc.readMem(0xb75e), 0xb8);
        // CB B8 0046
        gbc.setState(0x4566, 0xdada, 0x5c80, 0x9360, 0xe4a, 0xd877, 0x1, 0x0);
        gbc.writeMem(0x4566, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdada);
        EXPECT(gbc.pc(), 0x4568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0047
        gbc.setState(0x86ff, 0xbb8a, 0xf9f0, 0x8e60, 0x477, 0xc78e, 0x0, 0x0);
        gbc.writeMem(0x86ff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbb8a);
        EXPECT(gbc.pc(), 0x8701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ff), 0xcb);
        EXPECT(gbc.readMem(0x8700), 0xb8);
        // CB B8 0048
        gbc.setState(0x3c8e, 0xec22, 0x84f0, 0xba38, 0xb622, 0x9ef8, 0x0, 0x0);
        gbc.writeMem(0x3c8e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xec22);
        EXPECT(gbc.pc(), 0x3c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0049
        gbc.setState(0x1cc6, 0xcc96, 0x3be0, 0x707c, 0xa1a0, 0x62fd, 0x0, 0x0);
        gbc.writeMem(0x1cc6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcc96);
        EXPECT(gbc.pc(), 0x1cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 004A
        gbc.setState(0x41b1, 0x8836, 0x8e70, 0x1be9, 0x7231, 0xe67a, 0x1, 0x0);
        gbc.writeMem(0x41b1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8836);
        EXPECT(gbc.pc(), 0x41b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 004B
        gbc.setState(0x3401, 0x7801, 0x3360, 0x25fd, 0xac50, 0xacbb, 0x0, 0x0);
        gbc.writeMem(0x3401, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7801);
        EXPECT(gbc.pc(), 0x3403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 004C
        gbc.setState(0xbd9e, 0xf5bd, 0x49f0, 0x405b, 0x7053, 0x4639, 0x0, 0x0);
        gbc.writeMem(0xbd9e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf5bd);
        EXPECT(gbc.pc(), 0xbda0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd9e), 0xcb);
        EXPECT(gbc.readMem(0xbd9f), 0xb8);
        // CB B8 004D
        gbc.setState(0x6363, 0xd58e, 0xe0e0, 0xa3, 0x6689, 0xbeaf, 0x1, 0x0);
        gbc.writeMem(0x6363, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd58e);
        EXPECT(gbc.pc(), 0x6365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 004E
        gbc.setState(0xb32e, 0x5954, 0xef20, 0xcbee, 0x5c74, 0x6446, 0x0, 0x1);
        gbc.writeMem(0xb32e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5954);
        EXPECT(gbc.pc(), 0xb330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb32e), 0xcb);
        EXPECT(gbc.readMem(0xb32f), 0xb8);
        // CB B8 004F
        gbc.setState(0x16b4, 0xb009, 0x4ca0, 0x34cf, 0xad9a, 0x7025, 0x0, 0x0);
        gbc.writeMem(0x16b4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb009);
        EXPECT(gbc.pc(), 0x16b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0050
        gbc.setState(0xf95, 0xb4b4, 0xa490, 0x7e5b, 0x2d52, 0xa9d, 0x1, 0x1);
        gbc.writeMem(0xf95, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb4b4);
        EXPECT(gbc.pc(), 0xf97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0051
        gbc.setState(0xbe2b, 0xc56a, 0x2ea0, 0xdfc0, 0x24f5, 0xfae8, 0x0, 0x1);
        gbc.writeMem(0xbe2b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc56a);
        EXPECT(gbc.pc(), 0xbe2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe2b), 0xcb);
        EXPECT(gbc.readMem(0xbe2c), 0xb8);
        // CB B8 0052
        gbc.setState(0x9127, 0x75ed, 0xfbc0, 0x477b, 0x90e8, 0xdcc, 0x1, 0x0);
        gbc.writeMem(0x9127, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x75ed);
        EXPECT(gbc.pc(), 0x9129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9127), 0xcb);
        EXPECT(gbc.readMem(0x9128), 0xb8);
        // CB B8 0053
        gbc.setState(0xdd01, 0x971c, 0xbce0, 0x6f34, 0xc926, 0x65fd, 0x1, 0x0);
        gbc.writeMem(0xdd01, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x971c);
        EXPECT(gbc.pc(), 0xdd03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd01), 0xcb);
        EXPECT(gbc.readMem(0xdd02), 0xb8);
        // CB B8 0054
        gbc.setState(0xeb2a, 0x378b, 0xc710, 0x1d3f, 0xa4eb, 0x86f9, 0x0, 0x1);
        gbc.writeMem(0xeb2a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x378b);
        EXPECT(gbc.pc(), 0xeb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2a), 0xcb);
        EXPECT(gbc.readMem(0xeb2b), 0xb8);
        // CB B8 0055
        gbc.setState(0x8ac7, 0x68c7, 0x91f0, 0xb8d2, 0x4bf4, 0x1dcb, 0x0, 0x0);
        gbc.writeMem(0x8ac7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x68c7);
        EXPECT(gbc.pc(), 0x8ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac7), 0xcb);
        EXPECT(gbc.readMem(0x8ac8), 0xb8);
        // CB B8 0056
        gbc.setState(0x9062, 0x684a, 0x2440, 0x2d3d, 0x7f2a, 0xcb01, 0x0, 0x0);
        gbc.writeMem(0x9062, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x684a);
        EXPECT(gbc.pc(), 0x9064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9062), 0xcb);
        EXPECT(gbc.readMem(0x9063), 0xb8);
        // CB B8 0057
        gbc.setState(0x29dc, 0x5d0c, 0x7290, 0xeb1e, 0x9c66, 0x2cb5, 0x0, 0x1);
        gbc.writeMem(0x29dc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5d0c);
        EXPECT(gbc.pc(), 0x29de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0059
        gbc.setState(0xb418, 0x914c, 0x8ba0, 0xee5d, 0x6769, 0xa5be, 0x0, 0x0);
        gbc.writeMem(0xb418, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x914c);
        EXPECT(gbc.pc(), 0xb41a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb418), 0xcb);
        EXPECT(gbc.readMem(0xb419), 0xb8);
        // CB B8 005B
        gbc.setState(0x482e, 0xbe58, 0x83c0, 0x3e8, 0x3268, 0x35e, 0x0, 0x1);
        gbc.writeMem(0x482e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbe58);
        EXPECT(gbc.pc(), 0x4830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 005C
        gbc.setState(0xed1a, 0xbf78, 0x3000, 0x5b97, 0x24ac, 0xe8c8, 0x0, 0x1);
        gbc.writeMem(0xed1a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xbf78);
        EXPECT(gbc.pc(), 0xed1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed1a), 0xcb);
        EXPECT(gbc.readMem(0xed1b), 0xb8);
        // CB B8 005D
        gbc.setState(0xc783, 0x1b, 0x42f0, 0x8f4c, 0x7db7, 0x2735, 0x0, 0x1);
        gbc.writeMem(0xc783, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1b);
        EXPECT(gbc.pc(), 0xc785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc783), 0xcb);
        EXPECT(gbc.readMem(0xc784), 0xb8);
        // CB B8 005E
        gbc.setState(0x1e8f, 0xe21e, 0x55f0, 0x471e, 0xf09e, 0xc110, 0x1, 0x1);
        gbc.writeMem(0x1e8f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe21e);
        EXPECT(gbc.pc(), 0x1e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 005F
        gbc.setState(0xc2c4, 0x6ad6, 0x6c90, 0xe27b, 0xbf7b, 0x1997, 0x1, 0x0);
        gbc.writeMem(0xc2c4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6ad6);
        EXPECT(gbc.pc(), 0xc2c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2c4), 0xcb);
        EXPECT(gbc.readMem(0xc2c5), 0xb8);
        // CB B8 0060
        gbc.setState(0x3aff, 0x48ee, 0x7970, 0xd41, 0x7aa9, 0x1e2a, 0x0, 0x0);
        gbc.writeMem(0x3aff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x48ee);
        EXPECT(gbc.pc(), 0x3b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0061
        gbc.setState(0x22be, 0x621e, 0x41b0, 0xb7a3, 0x53b1, 0x4c6a, 0x0, 0x0);
        gbc.writeMem(0x22be, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x621e);
        EXPECT(gbc.pc(), 0x22c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0062
        gbc.setState(0x6e5f, 0x3e19, 0xc040, 0xf5, 0x635a, 0x3199, 0x1, 0x1);
        gbc.writeMem(0x6e5f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3e19);
        EXPECT(gbc.pc(), 0x6e61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0063
        gbc.setState(0xe46a, 0x4c04, 0xed90, 0x3e68, 0xc27b, 0xa723, 0x0, 0x0);
        gbc.writeMem(0xe46a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4c04);
        EXPECT(gbc.pc(), 0xe46c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe46a), 0xcb);
        EXPECT(gbc.readMem(0xe46b), 0xb8);
        // CB B8 0064
        gbc.setState(0x98d5, 0x16c9, 0xd9c0, 0x2d87, 0x3f7c, 0xbcbc, 0x1, 0x0);
        gbc.writeMem(0x98d5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x16c9);
        EXPECT(gbc.pc(), 0x98d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d5), 0xcb);
        EXPECT(gbc.readMem(0x98d6), 0xb8);
        // CB B8 0065
        gbc.setState(0xbec7, 0xfc0e, 0x1360, 0xc591, 0x9388, 0xe1f1, 0x1, 0x0);
        gbc.writeMem(0xbec7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfc0e);
        EXPECT(gbc.pc(), 0xbec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec7), 0xcb);
        EXPECT(gbc.readMem(0xbec8), 0xb8);
        // CB B8 0066
        gbc.setState(0x974, 0x9494, 0xaf0, 0xef0f, 0xf654, 0x78e4, 0x0, 0x0);
        gbc.writeMem(0x974, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9494);
        EXPECT(gbc.pc(), 0x976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0067
        gbc.setState(0xabb4, 0x2749, 0xd420, 0xdb8a, 0x1ac8, 0xc87e, 0x0, 0x0);
        gbc.writeMem(0xabb4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2749);
        EXPECT(gbc.pc(), 0xabb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb4), 0xcb);
        EXPECT(gbc.readMem(0xabb5), 0xb8);
        // CB B8 0068
        gbc.setState(0x6d88, 0x1f09, 0x1ca0, 0xe266, 0xae1, 0x5a83, 0x0, 0x0);
        gbc.writeMem(0x6d88, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1f09);
        EXPECT(gbc.pc(), 0x6d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 006A
        gbc.setState(0x93e0, 0x8e51, 0xe5b0, 0xdbfd, 0x5e10, 0x2476, 0x1, 0x1);
        gbc.writeMem(0x93e0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8e51);
        EXPECT(gbc.pc(), 0x93e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e0), 0xcb);
        EXPECT(gbc.readMem(0x93e1), 0xb8);
        // CB B8 006B
        gbc.setState(0xc072, 0x5d79, 0xf040, 0xccef, 0xcbdf, 0x8ceb, 0x1, 0x0);
        gbc.writeMem(0xc072, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5d79);
        EXPECT(gbc.pc(), 0xc074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc072), 0xcb);
        EXPECT(gbc.readMem(0xc073), 0xb8);
        // CB B8 006C
        gbc.setState(0xbbce, 0x1c6c, 0xb7f0, 0xedc1, 0x842c, 0x7b0, 0x0, 0x0);
        gbc.writeMem(0xbbce, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1c6c);
        EXPECT(gbc.pc(), 0xbbd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbce), 0xcb);
        EXPECT(gbc.readMem(0xbbcf), 0xb8);
        // CB B8 006D
        gbc.setState(0x605, 0x2d60, 0x48a0, 0x80b9, 0x22a2, 0xdf02, 0x0, 0x1);
        gbc.writeMem(0x605, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2d60);
        EXPECT(gbc.pc(), 0x607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 006E
        gbc.setState(0x232c, 0xc1b5, 0xdac0, 0x929d, 0x8393, 0xb67f, 0x0, 0x1);
        gbc.writeMem(0x232c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc1b5);
        EXPECT(gbc.pc(), 0x232e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 006F
        gbc.setState(0xde85, 0xc4bd, 0xc830, 0x60b7, 0xd5c0, 0xe8c1, 0x0, 0x1);
        gbc.writeMem(0xde85, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc4bd);
        EXPECT(gbc.pc(), 0xde87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde85), 0xcb);
        EXPECT(gbc.readMem(0xde86), 0xb8);
        // CB B8 0070
        gbc.setState(0xb1a, 0x3142, 0x6390, 0x7b56, 0xc8b, 0xb18f, 0x0, 0x0);
        gbc.writeMem(0xb1a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3142);
        EXPECT(gbc.pc(), 0xb1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0071
        gbc.setState(0x1d30, 0x74d5, 0xcf80, 0x4756, 0xd6e1, 0x2075, 0x0, 0x1);
        gbc.writeMem(0x1d30, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x74d5);
        EXPECT(gbc.pc(), 0x1d32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0072
        gbc.setState(0xecfc, 0x7d77, 0xcb20, 0xe82a, 0x29b2, 0xf9f9, 0x0, 0x1);
        gbc.writeMem(0xecfc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7d77);
        EXPECT(gbc.pc(), 0xecfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfc), 0xcb);
        EXPECT(gbc.readMem(0xecfd), 0xb8);
        // CB B8 0073
        gbc.setState(0x9b2a, 0x17a, 0x5b80, 0x859d, 0xd7fe, 0xa30d, 0x1, 0x0);
        gbc.writeMem(0x9b2a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x17a);
        EXPECT(gbc.pc(), 0x9b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b2a), 0xcb);
        EXPECT(gbc.readMem(0x9b2b), 0xb8);
        // CB B8 0074
        gbc.setState(0xba31, 0xfd16, 0xcb0, 0xcd53, 0xb964, 0xd9ba, 0x1, 0x1);
        gbc.writeMem(0xba31, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfd16);
        EXPECT(gbc.pc(), 0xba33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba31), 0xcb);
        EXPECT(gbc.readMem(0xba32), 0xb8);
        // CB B8 0075
        gbc.setState(0xa21, 0x8e74, 0xa5a0, 0x84e9, 0x2a1d, 0xcf73, 0x1, 0x0);
        gbc.writeMem(0xa21, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8e74);
        EXPECT(gbc.pc(), 0xa23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0076
        gbc.setState(0x7576, 0x6c2e, 0x1ca0, 0x2b10, 0xfd38, 0x5228, 0x1, 0x1);
        gbc.writeMem(0x7576, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6c2e);
        EXPECT(gbc.pc(), 0x7578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0077
        gbc.setState(0x6a2b, 0x4649, 0xa950, 0xa863, 0xaa6e, 0x3f47, 0x0, 0x1);
        gbc.writeMem(0x6a2b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4649);
        EXPECT(gbc.pc(), 0x6a2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0078
        gbc.setState(0x84ad, 0x9fa8, 0x5e00, 0xbde, 0x1159, 0x64e6, 0x1, 0x1);
        gbc.writeMem(0x84ad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9fa8);
        EXPECT(gbc.pc(), 0x84af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ad), 0xcb);
        EXPECT(gbc.readMem(0x84ae), 0xb8);
        // CB B8 0079
        gbc.setState(0x996a, 0xfa72, 0xe660, 0xd08a, 0x3d6b, 0x2711, 0x0, 0x1);
        gbc.writeMem(0x996a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xfa72);
        EXPECT(gbc.pc(), 0x996c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996a), 0xcb);
        EXPECT(gbc.readMem(0x996b), 0xb8);
        // CB B8 007A
        gbc.setState(0x99d4, 0x625e, 0xf4b0, 0xc617, 0x65b0, 0xd005, 0x0, 0x1);
        gbc.writeMem(0x99d4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x625e);
        EXPECT(gbc.pc(), 0x99d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d4), 0xcb);
        EXPECT(gbc.readMem(0x99d5), 0xb8);
        // CB B8 007B
        gbc.setState(0x466c, 0xfe80, 0x1bd0, 0xf443, 0x458f, 0xed85, 0x1, 0x1);
        gbc.writeMem(0x466c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xfe80);
        EXPECT(gbc.pc(), 0x466e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 007C
        gbc.setState(0x80a8, 0xaac8, 0xb0e0, 0xfcd3, 0xf986, 0xa235, 0x1, 0x0);
        gbc.writeMem(0x80a8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xaac8);
        EXPECT(gbc.pc(), 0x80aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a8), 0xcb);
        EXPECT(gbc.readMem(0x80a9), 0xb8);
        // CB B8 007E
        gbc.setState(0x3ab8, 0x6d04, 0x470, 0x3b25, 0x2014, 0x3ca8, 0x1, 0x1);
        gbc.writeMem(0x3ab8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6d04);
        EXPECT(gbc.pc(), 0x3aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 007F
        gbc.setState(0x5830, 0x1026, 0x34e0, 0xaae, 0x60bf, 0x3614, 0x1, 0x1);
        gbc.writeMem(0x5830, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1026);
        EXPECT(gbc.pc(), 0x5832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0080
        gbc.setState(0x43fc, 0x827c, 0x48f0, 0x5978, 0x5c8a, 0x81d9, 0x1, 0x0);
        gbc.writeMem(0x43fc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x827c);
        EXPECT(gbc.pc(), 0x43fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0081
        gbc.setState(0x4568, 0x181a, 0xb8e0, 0x2194, 0x8fc, 0x1f4d, 0x0, 0x0);
        gbc.writeMem(0x4568, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x181a);
        EXPECT(gbc.pc(), 0x456a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0082
        gbc.setState(0x72e0, 0x639, 0xf260, 0x5ae4, 0xd902, 0x28bd, 0x0, 0x1);
        gbc.writeMem(0x72e0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x639);
        EXPECT(gbc.pc(), 0x72e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0083
        gbc.setState(0x3d94, 0x7f0d, 0xaf10, 0xa3d5, 0x5e8e, 0x9602, 0x1, 0x1);
        gbc.writeMem(0x3d94, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7f0d);
        EXPECT(gbc.pc(), 0x3d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0084
        gbc.setState(0x5475, 0x9276, 0xf800, 0xcbeb, 0x314, 0x5004, 0x0, 0x1);
        gbc.writeMem(0x5475, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9276);
        EXPECT(gbc.pc(), 0x5477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0085
        gbc.setState(0xf0b, 0xdf7f, 0x3f60, 0xf013, 0x43fd, 0xe07, 0x0, 0x1);
        gbc.writeMem(0xf0b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdf7f);
        EXPECT(gbc.pc(), 0xf0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0086
        gbc.setState(0x6702, 0x59e0, 0xd0d0, 0x8a64, 0xf684, 0xc07f, 0x0, 0x1);
        gbc.writeMem(0x6702, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x59e0);
        EXPECT(gbc.pc(), 0x6704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0087
        gbc.setState(0x2f2e, 0x8ada, 0xdbe0, 0x4eed, 0x78f1, 0x2699, 0x0, 0x1);
        gbc.writeMem(0x2f2e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8ada);
        EXPECT(gbc.pc(), 0x2f30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0088
        gbc.setState(0x8f34, 0xfa17, 0xaa80, 0x479f, 0x8609, 0x721c, 0x0, 0x1);
        gbc.writeMem(0x8f34, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfa17);
        EXPECT(gbc.pc(), 0x8f36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f34), 0xcb);
        EXPECT(gbc.readMem(0x8f35), 0xb8);
        // CB B8 0089
        gbc.setState(0x2217, 0xcf9e, 0x66b0, 0xf772, 0xc04a, 0xa5e9, 0x1, 0x0);
        gbc.writeMem(0x2217, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcf9e);
        EXPECT(gbc.pc(), 0x2219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 008A
        gbc.setState(0xd209, 0x1c8a, 0x69d0, 0xa795, 0x94f, 0xcec0, 0x0, 0x0);
        gbc.writeMem(0xd209, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1c8a);
        EXPECT(gbc.pc(), 0xd20b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd209), 0xcb);
        EXPECT(gbc.readMem(0xd20a), 0xb8);
        // CB B8 008B
        gbc.setState(0xad17, 0x9510, 0xcb00, 0xebda, 0x3de5, 0x48ae, 0x0, 0x1);
        gbc.writeMem(0xad17, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9510);
        EXPECT(gbc.pc(), 0xad19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad17), 0xcb);
        EXPECT(gbc.readMem(0xad18), 0xb8);
        // CB B8 008C
        gbc.setState(0x89a4, 0x91ef, 0xbe10, 0x8efc, 0xd104, 0x6411, 0x1, 0x0);
        gbc.writeMem(0x89a4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x91ef);
        EXPECT(gbc.pc(), 0x89a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a4), 0xcb);
        EXPECT(gbc.readMem(0x89a5), 0xb8);
        // CB B8 008D
        gbc.setState(0xd80f, 0x1a62, 0x91d0, 0x8a8d, 0x4144, 0x61b1, 0x1, 0x0);
        gbc.writeMem(0xd80f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1a62);
        EXPECT(gbc.pc(), 0xd811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd80f), 0xcb);
        EXPECT(gbc.readMem(0xd810), 0xb8);
        // CB B8 008E
        gbc.setState(0x6a0f, 0x4bea, 0x97d0, 0xb80e, 0xf8b5, 0xe057, 0x0, 0x1);
        gbc.writeMem(0x6a0f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4bea);
        EXPECT(gbc.pc(), 0x6a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 008F
        gbc.setState(0xefa6, 0xc1cf, 0xe930, 0x3d43, 0xa597, 0x3008, 0x0, 0x1);
        gbc.writeMem(0xefa6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc1cf);
        EXPECT(gbc.pc(), 0xefa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefa6), 0xcb);
        EXPECT(gbc.readMem(0xefa7), 0xb8);
        // CB B8 0090
        gbc.setState(0x3f3e, 0x390a, 0x6ac0, 0x8e6c, 0xcb5f, 0x4abd, 0x1, 0x1);
        gbc.writeMem(0x3f3e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x390a);
        EXPECT(gbc.pc(), 0x3f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0091
        gbc.setState(0x5bc5, 0x4485, 0xab00, 0x8a6f, 0xe715, 0xfc96, 0x0, 0x1);
        gbc.writeMem(0x5bc5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4485);
        EXPECT(gbc.pc(), 0x5bc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0092
        gbc.setState(0x5273, 0xc1e6, 0x1230, 0xe894, 0xecd7, 0x474c, 0x0, 0x0);
        gbc.writeMem(0x5273, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc1e6);
        EXPECT(gbc.pc(), 0x5275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0093
        gbc.setState(0x188, 0xcbcc, 0x2160, 0x24d4, 0xa386, 0xae26, 0x0, 0x0);
        gbc.writeMem(0x188, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcbcc);
        EXPECT(gbc.pc(), 0x18a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0094
        gbc.setState(0x2bea, 0x18b4, 0x76d0, 0xc740, 0x2d96, 0xcb88, 0x1, 0x0);
        gbc.writeMem(0x2bea, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x18b4);
        EXPECT(gbc.pc(), 0x2bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0095
        gbc.setState(0xd34c, 0x67a, 0x6450, 0xace0, 0xb970, 0x2357, 0x0, 0x1);
        gbc.writeMem(0xd34c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x67a);
        EXPECT(gbc.pc(), 0xd34e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd34c), 0xcb);
        EXPECT(gbc.readMem(0xd34d), 0xb8);
        // CB B8 0096
        gbc.setState(0xb432, 0x801c, 0x5900, 0x98c0, 0x9848, 0x244a, 0x0, 0x1);
        gbc.writeMem(0xb432, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x801c);
        EXPECT(gbc.pc(), 0xb434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb432), 0xcb);
        EXPECT(gbc.readMem(0xb433), 0xb8);
        // CB B8 0098
        gbc.setState(0x60c0, 0x53ff, 0xc0e0, 0x82ca, 0xb495, 0x6dc0, 0x0, 0x1);
        gbc.writeMem(0x60c0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x53ff);
        EXPECT(gbc.pc(), 0x60c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0099
        gbc.setState(0x16e8, 0x440f, 0x6b50, 0x28aa, 0x526d, 0x79ee, 0x0, 0x0);
        gbc.writeMem(0x16e8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x440f);
        EXPECT(gbc.pc(), 0x16ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 009A
        gbc.setState(0xebba, 0xa38d, 0xe5a0, 0xce54, 0x7c03, 0xce60, 0x0, 0x0);
        gbc.writeMem(0xebba, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa38d);
        EXPECT(gbc.pc(), 0xebbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebba), 0xcb);
        EXPECT(gbc.readMem(0xebbb), 0xb8);
        // CB B8 009B
        gbc.setState(0x7074, 0x1391, 0x9bd0, 0x13e7, 0x14b6, 0x511e, 0x0, 0x0);
        gbc.writeMem(0x7074, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1391);
        EXPECT(gbc.pc(), 0x7076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 009C
        gbc.setState(0x7eb4, 0x8d27, 0x57d0, 0x13cf, 0xc77b, 0x86dc, 0x1, 0x0);
        gbc.writeMem(0x7eb4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8d27);
        EXPECT(gbc.pc(), 0x7eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 009D
        gbc.setState(0x3a5, 0xfb7, 0x9620, 0x1a7b, 0xab6d, 0xa3c7, 0x0, 0x1);
        gbc.writeMem(0x3a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfb7);
        EXPECT(gbc.pc(), 0x3a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 009E
        gbc.setState(0x5f3, 0x652b, 0x9d0, 0x5f2c, 0x1221, 0xb44d, 0x1, 0x0);
        gbc.writeMem(0x5f3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x652b);
        EXPECT(gbc.pc(), 0x5f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 009F
        gbc.setState(0x2457, 0xf494, 0xa2f0, 0x7a10, 0x7bf, 0x93a9, 0x0, 0x0);
        gbc.writeMem(0x2457, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf494);
        EXPECT(gbc.pc(), 0x2459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00A0
        gbc.setState(0x753d, 0x4c9b, 0x25d0, 0x13a9, 0xa0c5, 0x84a5, 0x0, 0x1);
        gbc.writeMem(0x753d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4c9b);
        EXPECT(gbc.pc(), 0x753f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00A1
        gbc.setState(0x5ff3, 0x8bdb, 0xdc30, 0x4624, 0x512a, 0x2190, 0x0, 0x1);
        gbc.writeMem(0x5ff3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8bdb);
        EXPECT(gbc.pc(), 0x5ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00A2
        gbc.setState(0x4ec4, 0x8a1, 0x4430, 0x21a4, 0x2dc6, 0x1dde, 0x1, 0x0);
        gbc.writeMem(0x4ec4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8a1);
        EXPECT(gbc.pc(), 0x4ec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00A3
        gbc.setState(0xccc5, 0xecbd, 0x76c0, 0x34ba, 0xb9ea, 0x945c, 0x0, 0x1);
        gbc.writeMem(0xccc5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xecbd);
        EXPECT(gbc.pc(), 0xccc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc5), 0xcb);
        EXPECT(gbc.readMem(0xccc6), 0xb8);
        // CB B8 00A4
        gbc.setState(0x22dd, 0xb9e6, 0x17e0, 0x3e83, 0x4597, 0x336a, 0x0, 0x1);
        gbc.writeMem(0x22dd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb9e6);
        EXPECT(gbc.pc(), 0x22df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00A5
        gbc.setState(0xd0f7, 0x50b6, 0xc2d0, 0xa47, 0xe4f3, 0x51be, 0x1, 0x0);
        gbc.writeMem(0xd0f7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x50b6);
        EXPECT(gbc.pc(), 0xd0f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f7), 0xcb);
        EXPECT(gbc.readMem(0xd0f8), 0xb8);
        // CB B8 00A6
        gbc.setState(0x350b, 0x38b9, 0x6e50, 0xed5e, 0x9161, 0xf226, 0x0, 0x1);
        gbc.writeMem(0x350b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x38b9);
        EXPECT(gbc.pc(), 0x350d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00A7
        gbc.setState(0xab09, 0x5a91, 0x3e70, 0xfc3f, 0x47c4, 0x8fd6, 0x1, 0x0);
        gbc.writeMem(0xab09, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5a91);
        EXPECT(gbc.pc(), 0xab0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab09), 0xcb);
        EXPECT(gbc.readMem(0xab0a), 0xb8);
        // CB B8 00A8
        gbc.setState(0x280c, 0xb264, 0xc1a0, 0xbcff, 0xbbc5, 0xe58, 0x0, 0x1);
        gbc.writeMem(0x280c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb264);
        EXPECT(gbc.pc(), 0x280e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00AA
        gbc.setState(0x8244, 0x36f3, 0xf770, 0xb214, 0x83e3, 0x8a2, 0x1, 0x0);
        gbc.writeMem(0x8244, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x36f3);
        EXPECT(gbc.pc(), 0x8246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8244), 0xcb);
        EXPECT(gbc.readMem(0x8245), 0xb8);
        // CB B8 00AB
        gbc.setState(0xbbec, 0xf0c3, 0x7d60, 0xf76b, 0xabd6, 0xa291, 0x0, 0x1);
        gbc.writeMem(0xbbec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf0c3);
        EXPECT(gbc.pc(), 0xbbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbec), 0xcb);
        EXPECT(gbc.readMem(0xbbed), 0xb8);
        // CB B8 00AC
        gbc.setState(0x623a, 0xf719, 0xaf40, 0x7f90, 0x10f9, 0xd929, 0x0, 0x0);
        gbc.writeMem(0x623a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf719);
        EXPECT(gbc.pc(), 0x623c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00AD
        gbc.setState(0xe150, 0x380c, 0x940, 0x9126, 0x73f8, 0xd73e, 0x0, 0x1);
        gbc.writeMem(0xe150, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x380c);
        EXPECT(gbc.pc(), 0xe152);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe150), 0xcb);
        EXPECT(gbc.readMem(0xe151), 0xb8);
        // CB B8 00AE
        gbc.setState(0xb1c2, 0x1146, 0xa2a0, 0xab4b, 0xf2d3, 0x159d, 0x0, 0x0);
        gbc.writeMem(0xb1c2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1146);
        EXPECT(gbc.pc(), 0xb1c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c2), 0xcb);
        EXPECT(gbc.readMem(0xb1c3), 0xb8);
        // CB B8 00AF
        gbc.setState(0x8516, 0xd103, 0xf360, 0x4f78, 0x769b, 0xe75e, 0x0, 0x1);
        gbc.writeMem(0x8516, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd103);
        EXPECT(gbc.pc(), 0x8518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8516), 0xcb);
        EXPECT(gbc.readMem(0x8517), 0xb8);
        // CB B8 00B0
        gbc.setState(0xb39e, 0x4bea, 0xd6c0, 0xcaf7, 0xc53a, 0x9dbd, 0x1, 0x1);
        gbc.writeMem(0xb39e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4bea);
        EXPECT(gbc.pc(), 0xb3a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb39e), 0xcb);
        EXPECT(gbc.readMem(0xb39f), 0xb8);
        // CB B8 00B2
        gbc.setState(0x3df3, 0xfb10, 0xf270, 0xbe15, 0x7543, 0xd534, 0x0, 0x0);
        gbc.writeMem(0x3df3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xfb10);
        EXPECT(gbc.pc(), 0x3df5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00B3
        gbc.setState(0x4212, 0x883b, 0x64d0, 0xb5d2, 0x534b, 0x1b18, 0x0, 0x1);
        gbc.writeMem(0x4212, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x883b);
        EXPECT(gbc.pc(), 0x4214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00B4
        gbc.setState(0x6920, 0x39d1, 0xaa70, 0x1127, 0xf754, 0x3b86, 0x0, 0x1);
        gbc.writeMem(0x6920, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x39d1);
        EXPECT(gbc.pc(), 0x6922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00B6
        gbc.setState(0x45b0, 0x7cb4, 0xeda0, 0xd327, 0x2208, 0xf22d, 0x0, 0x0);
        gbc.writeMem(0x45b0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7cb4);
        EXPECT(gbc.pc(), 0x45b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00B7
        gbc.setState(0xbd21, 0x2895, 0x8d60, 0x2400, 0xe807, 0x97d1, 0x0, 0x1);
        gbc.writeMem(0xbd21, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2895);
        EXPECT(gbc.pc(), 0xbd23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd21), 0xcb);
        EXPECT(gbc.readMem(0xbd22), 0xb8);
        // CB B8 00B8
        gbc.setState(0xec08, 0x45d, 0xad60, 0xbfd, 0x58f3, 0x85a4, 0x1, 0x0);
        gbc.writeMem(0xec08, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x45d);
        EXPECT(gbc.pc(), 0xec0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec08), 0xcb);
        EXPECT(gbc.readMem(0xec09), 0xb8);
        // CB B8 00B9
        gbc.setState(0x8666, 0xb1df, 0xbf20, 0xab47, 0xe6e9, 0xf812, 0x0, 0x1);
        gbc.writeMem(0x8666, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb1df);
        EXPECT(gbc.pc(), 0x8668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8666), 0xcb);
        EXPECT(gbc.readMem(0x8667), 0xb8);
        // CB B8 00BA
        gbc.setState(0x8db7, 0x8309, 0x2820, 0x2ac8, 0x1101, 0x908e, 0x1, 0x0);
        gbc.writeMem(0x8db7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8309);
        EXPECT(gbc.pc(), 0x8db9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db7), 0xcb);
        EXPECT(gbc.readMem(0x8db8), 0xb8);
        // CB B8 00BC
        gbc.setState(0x6af3, 0xaa90, 0xc360, 0x75a7, 0xf023, 0x2683, 0x1, 0x0);
        gbc.writeMem(0x6af3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xaa90);
        EXPECT(gbc.pc(), 0x6af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00BD
        gbc.setState(0xe42f, 0xe367, 0xe080, 0xd7fb, 0xe7bd, 0x7b98, 0x0, 0x0);
        gbc.writeMem(0xe42f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe367);
        EXPECT(gbc.pc(), 0xe431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe42f), 0xcb);
        EXPECT(gbc.readMem(0xe430), 0xb8);
        // CB B8 00BE
        gbc.setState(0x24f2, 0xb671, 0xc930, 0x5e43, 0x18fb, 0x227d, 0x1, 0x1);
        gbc.writeMem(0x24f2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb671);
        EXPECT(gbc.pc(), 0x24f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00BF
        gbc.setState(0x40bd, 0xbeff, 0x5930, 0x76b, 0x498d, 0x2d04, 0x0, 0x0);
        gbc.writeMem(0x40bd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbeff);
        EXPECT(gbc.pc(), 0x40bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00C0
        gbc.setState(0x5b55, 0xb58b, 0x5560, 0xf7dc, 0x7cab, 0x2b5, 0x0, 0x0);
        gbc.writeMem(0x5b55, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb58b);
        EXPECT(gbc.pc(), 0x5b57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00C1
        gbc.setState(0x72ed, 0xe427, 0xee80, 0xa13d, 0x54f5, 0xd2c3, 0x1, 0x0);
        gbc.writeMem(0x72ed, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe427);
        EXPECT(gbc.pc(), 0x72ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00C2
        gbc.setState(0x3795, 0xd051, 0xb1f0, 0xbc76, 0xfca1, 0x1508, 0x0, 0x0);
        gbc.writeMem(0x3795, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd051);
        EXPECT(gbc.pc(), 0x3797);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00C3
        gbc.setState(0xbd0f, 0xd0de, 0xad80, 0x7c37, 0x7f0c, 0xbc73, 0x0, 0x0);
        gbc.writeMem(0xbd0f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd0de);
        EXPECT(gbc.pc(), 0xbd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd0f), 0xcb);
        EXPECT(gbc.readMem(0xbd10), 0xb8);
        // CB B8 00C4
        gbc.setState(0x5ad1, 0x21cb, 0xd380, 0x5789, 0x67e4, 0x64ca, 0x1, 0x1);
        gbc.writeMem(0x5ad1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x21cb);
        EXPECT(gbc.pc(), 0x5ad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00C5
        gbc.setState(0xa7e9, 0x96, 0x3370, 0xf82, 0xcf26, 0x5579, 0x1, 0x0);
        gbc.writeMem(0xa7e9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x96);
        EXPECT(gbc.pc(), 0xa7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e9), 0xcb);
        EXPECT(gbc.readMem(0xa7ea), 0xb8);
        // CB B8 00C6
        gbc.setState(0xb3f1, 0xc3ba, 0x49f0, 0x61f3, 0xf5a8, 0x89d5, 0x0, 0x1);
        gbc.writeMem(0xb3f1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc3ba);
        EXPECT(gbc.pc(), 0xb3f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f1), 0xcb);
        EXPECT(gbc.readMem(0xb3f2), 0xb8);
        // CB B8 00C7
        gbc.setState(0x77e2, 0xa1b6, 0xc880, 0xabc, 0x4280, 0xe03f, 0x0, 0x1);
        gbc.writeMem(0x77e2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa1b6);
        EXPECT(gbc.pc(), 0x77e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00C8
        gbc.setState(0x340e, 0x346a, 0xc1a0, 0xbb38, 0x3d81, 0x5da9, 0x1, 0x0);
        gbc.writeMem(0x340e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x346a);
        EXPECT(gbc.pc(), 0x3410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00C9
        gbc.setState(0xeed7, 0x598, 0x8500, 0x8fc8, 0x7073, 0xc7cc, 0x1, 0x0);
        gbc.writeMem(0xeed7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x598);
        EXPECT(gbc.pc(), 0xeed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeed7), 0xcb);
        EXPECT(gbc.readMem(0xeed8), 0xb8);
        // CB B8 00CA
        gbc.setState(0xaddb, 0xc7c, 0xb470, 0x11bd, 0xaae8, 0xe35, 0x1, 0x1);
        gbc.writeMem(0xaddb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc7c);
        EXPECT(gbc.pc(), 0xaddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaddb), 0xcb);
        EXPECT(gbc.readMem(0xaddc), 0xb8);
        // CB B8 00CB
        gbc.setState(0x9f60, 0x6159, 0x9260, 0x9943, 0x58ec, 0x79ad, 0x1, 0x1);
        gbc.writeMem(0x9f60, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6159);
        EXPECT(gbc.pc(), 0x9f62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f60), 0xcb);
        EXPECT(gbc.readMem(0x9f61), 0xb8);
        // CB B8 00CC
        gbc.setState(0x1fa9, 0x3ac2, 0x1e60, 0xd938, 0x687e, 0xe7e1, 0x1, 0x1);
        gbc.writeMem(0x1fa9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3ac2);
        EXPECT(gbc.pc(), 0x1fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00CD
        gbc.setState(0xb7d8, 0x208c, 0xa590, 0xdb8c, 0x94d7, 0xc94b, 0x1, 0x0);
        gbc.writeMem(0xb7d8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x208c);
        EXPECT(gbc.pc(), 0xb7da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d8), 0xcb);
        EXPECT(gbc.readMem(0xb7d9), 0xb8);
        // CB B8 00CE
        gbc.setState(0x2434, 0xb74b, 0xdd40, 0x3a6d, 0x100e, 0x5bd1, 0x0, 0x0);
        gbc.writeMem(0x2434, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb74b);
        EXPECT(gbc.pc(), 0x2436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00CF
        gbc.setState(0xbdf5, 0xa05e, 0x950, 0xff5, 0x2ac2, 0xbeb0, 0x1, 0x0);
        gbc.writeMem(0xbdf5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa05e);
        EXPECT(gbc.pc(), 0xbdf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf5), 0xcb);
        EXPECT(gbc.readMem(0xbdf6), 0xb8);
        // CB B8 00D0
        gbc.setState(0x64d7, 0xd014, 0x4f30, 0xbcbe, 0xf8b4, 0x658a, 0x1, 0x0);
        gbc.writeMem(0x64d7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd014);
        EXPECT(gbc.pc(), 0x64d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00D1
        gbc.setState(0xd82f, 0xb204, 0x9320, 0xd924, 0x6a9, 0x98b9, 0x0, 0x0);
        gbc.writeMem(0xd82f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb204);
        EXPECT(gbc.pc(), 0xd831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd82f), 0xcb);
        EXPECT(gbc.readMem(0xd830), 0xb8);
        // CB B8 00D2
        gbc.setState(0x2c1b, 0xe27d, 0x7840, 0x50b8, 0x44b, 0xe8cb, 0x0, 0x1);
        gbc.writeMem(0x2c1b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe27d);
        EXPECT(gbc.pc(), 0x2c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00D3
        gbc.setState(0x8691, 0x6fe4, 0xeb20, 0x2734, 0x44bc, 0x3475, 0x0, 0x0);
        gbc.writeMem(0x8691, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6fe4);
        EXPECT(gbc.pc(), 0x8693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8691), 0xcb);
        EXPECT(gbc.readMem(0x8692), 0xb8);
        // CB B8 00D4
        gbc.setState(0xa889, 0xb1aa, 0xe40, 0x77d7, 0x544a, 0x7729, 0x0, 0x1);
        gbc.writeMem(0xa889, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb1aa);
        EXPECT(gbc.pc(), 0xa88b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa889), 0xcb);
        EXPECT(gbc.readMem(0xa88a), 0xb8);
        // CB B8 00D5
        gbc.setState(0xefcb, 0x586, 0xd470, 0x95f6, 0x2284, 0x8b3f, 0x0, 0x1);
        gbc.writeMem(0xefcb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x586);
        EXPECT(gbc.pc(), 0xefcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefcb), 0xcb);
        EXPECT(gbc.readMem(0xefcc), 0xb8);
        // CB B8 00D6
        gbc.setState(0x25d6, 0x8bdc, 0x33f0, 0xeeab, 0xfc11, 0x1b6b, 0x0, 0x1);
        gbc.writeMem(0x25d6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8bdc);
        EXPECT(gbc.pc(), 0x25d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00D7
        gbc.setState(0x92ba, 0x209f, 0xcab0, 0xa1d3, 0x2f4d, 0x7c24, 0x1, 0x0);
        gbc.writeMem(0x92ba, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x209f);
        EXPECT(gbc.pc(), 0x92bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ba), 0xcb);
        EXPECT(gbc.readMem(0x92bb), 0xb8);
        // CB B8 00D8
        gbc.setState(0x3fd1, 0x4f67, 0x5740, 0xe5f6, 0xf87, 0x54b7, 0x1, 0x0);
        gbc.writeMem(0x3fd1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4f67);
        EXPECT(gbc.pc(), 0x3fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00D9
        gbc.setState(0x423, 0x3572, 0x77f0, 0xc67b, 0x2fd5, 0xfbdc, 0x1, 0x1);
        gbc.writeMem(0x423, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3572);
        EXPECT(gbc.pc(), 0x425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00DA
        gbc.setState(0x9036, 0x9faf, 0xf6f0, 0x921a, 0x4c58, 0x4629, 0x0, 0x1);
        gbc.writeMem(0x9036, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9faf);
        EXPECT(gbc.pc(), 0x9038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9036), 0xcb);
        EXPECT(gbc.readMem(0x9037), 0xb8);
        // CB B8 00DB
        gbc.setState(0x685a, 0x102a, 0x2700, 0xf721, 0x3078, 0x7112, 0x1, 0x0);
        gbc.writeMem(0x685a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x102a);
        EXPECT(gbc.pc(), 0x685c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00DC
        gbc.setState(0xb215, 0xade5, 0xdff0, 0x5b29, 0xa836, 0x7ada, 0x1, 0x0);
        gbc.writeMem(0xb215, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xade5);
        EXPECT(gbc.pc(), 0xb217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb215), 0xcb);
        EXPECT(gbc.readMem(0xb216), 0xb8);
        // CB B8 00DD
        gbc.setState(0x596c, 0xaad2, 0x480, 0x602, 0xe3a5, 0x9755, 0x1, 0x1);
        gbc.writeMem(0x596c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xaad2);
        EXPECT(gbc.pc(), 0x596e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00DE
        gbc.setState(0xb0e9, 0x9335, 0xb430, 0xd468, 0x5e16, 0xcf6e, 0x0, 0x0);
        gbc.writeMem(0xb0e9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9335);
        EXPECT(gbc.pc(), 0xb0eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e9), 0xcb);
        EXPECT(gbc.readMem(0xb0ea), 0xb8);
        // CB B8 00DF
        gbc.setState(0x5fa5, 0x9bca, 0x8220, 0x7b94, 0x27d3, 0xde05, 0x1, 0x0);
        gbc.writeMem(0x5fa5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9bca);
        EXPECT(gbc.pc(), 0x5fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00E0
        gbc.setState(0xd7b5, 0xb14b, 0xdf80, 0x65e3, 0x85a, 0xccd7, 0x0, 0x1);
        gbc.writeMem(0xd7b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb14b);
        EXPECT(gbc.pc(), 0xd7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b5), 0xcb);
        EXPECT(gbc.readMem(0xd7b6), 0xb8);
        // CB B8 00E1
        gbc.setState(0xbb7c, 0x8a64, 0x8d0, 0x4f7, 0xfc33, 0x7b00, 0x0, 0x0);
        gbc.writeMem(0xbb7c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8a64);
        EXPECT(gbc.pc(), 0xbb7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7c), 0xcb);
        EXPECT(gbc.readMem(0xbb7d), 0xb8);
        // CB B8 00E2
        gbc.setState(0x93e5, 0x4407, 0x72a0, 0xa71d, 0xae4c, 0xeb50, 0x1, 0x1);
        gbc.writeMem(0x93e5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4407);
        EXPECT(gbc.pc(), 0x93e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e5), 0xcb);
        EXPECT(gbc.readMem(0x93e6), 0xb8);
        // CB B8 00E3
        gbc.setState(0xc351, 0x94ba, 0xa850, 0xb225, 0xdc63, 0xa9f0, 0x0, 0x1);
        gbc.writeMem(0xc351, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x94ba);
        EXPECT(gbc.pc(), 0xc353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc351), 0xcb);
        EXPECT(gbc.readMem(0xc352), 0xb8);
        // CB B8 00E4
        gbc.setState(0xe230, 0x8140, 0x40e0, 0x8106, 0x975c, 0xccb1, 0x0, 0x1);
        gbc.writeMem(0xe230, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8140);
        EXPECT(gbc.pc(), 0xe232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe230), 0xcb);
        EXPECT(gbc.readMem(0xe231), 0xb8);
        // CB B8 00E5
        gbc.setState(0x1c37, 0x4153, 0xd630, 0x23ea, 0xa9f4, 0xf3fa, 0x1, 0x1);
        gbc.writeMem(0x1c37, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4153);
        EXPECT(gbc.pc(), 0x1c39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00E6
        gbc.setState(0x3958, 0x2dc1, 0x7820, 0x556d, 0xcd43, 0xeef4, 0x1, 0x0);
        gbc.writeMem(0x3958, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2dc1);
        EXPECT(gbc.pc(), 0x395a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00E7
        gbc.setState(0x506c, 0x6506, 0x2d0, 0x6c9d, 0xb333, 0xa19c, 0x1, 0x1);
        gbc.writeMem(0x506c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6506);
        EXPECT(gbc.pc(), 0x506e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00E8
        gbc.setState(0xb182, 0xed47, 0x14a0, 0x8633, 0xabc4, 0x37df, 0x1, 0x0);
        gbc.writeMem(0xb182, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xed47);
        EXPECT(gbc.pc(), 0xb184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb182), 0xcb);
        EXPECT(gbc.readMem(0xb183), 0xb8);
        // CB B8 00E9
        gbc.setState(0x4014, 0x9bf0, 0x6e70, 0x8acc, 0xba47, 0xfa4d, 0x1, 0x1);
        gbc.writeMem(0x4014, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9bf0);
        EXPECT(gbc.pc(), 0x4016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00EA
        gbc.setState(0xbe0d, 0xafa4, 0x7e40, 0xeb9c, 0xc1c8, 0xac49, 0x1, 0x0);
        gbc.writeMem(0xbe0d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xafa4);
        EXPECT(gbc.pc(), 0xbe0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe0d), 0xcb);
        EXPECT(gbc.readMem(0xbe0e), 0xb8);
        // CB B8 00EC
        gbc.setState(0x1b65, 0x5728, 0xbd90, 0x898a, 0xe350, 0xc18d, 0x0, 0x0);
        gbc.writeMem(0x1b65, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5728);
        EXPECT(gbc.pc(), 0x1b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00ED
        gbc.setState(0x605b, 0x771a, 0xef0, 0x2b3d, 0x603a, 0xf3cb, 0x1, 0x1);
        gbc.writeMem(0x605b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x771a);
        EXPECT(gbc.pc(), 0x605d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00EE
        gbc.setState(0xe80c, 0x4efb, 0x3970, 0x74c0, 0xbdc0, 0xd5b4, 0x1, 0x0);
        gbc.writeMem(0xe80c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4efb);
        EXPECT(gbc.pc(), 0xe80e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe80c), 0xcb);
        EXPECT(gbc.readMem(0xe80d), 0xb8);
        // CB B8 00EF
        gbc.setState(0x68fb, 0x265, 0xb1d0, 0xde62, 0x6c01, 0x175e, 0x0, 0x1);
        gbc.writeMem(0x68fb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x265);
        EXPECT(gbc.pc(), 0x68fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 00F0
        gbc.setState(0xd3ae, 0xb38b, 0xaca0, 0x97d0, 0xdc7e, 0xc366, 0x1, 0x0);
        gbc.writeMem(0xd3ae, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb38b);
        EXPECT(gbc.pc(), 0xd3b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ae), 0xcb);
        EXPECT(gbc.readMem(0xd3af), 0xb8);
        // CB B8 00F1
        gbc.setState(0xdbca, 0xded0, 0xa5e0, 0xccae, 0x7af9, 0x497c, 0x0, 0x0);
        gbc.writeMem(0xdbca, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xded0);
        EXPECT(gbc.pc(), 0xdbcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbca), 0xcb);
        EXPECT(gbc.readMem(0xdbcb), 0xb8);
        // CB B8 00F2
        gbc.setState(0xc7b4, 0x211c, 0x980, 0x260a, 0x3acc, 0x20d2, 0x1, 0x0);
        gbc.writeMem(0xc7b4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x211c);
        EXPECT(gbc.pc(), 0xc7b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b4), 0xcb);
        EXPECT(gbc.readMem(0xc7b5), 0xb8);
        // CB B8 00F3
        gbc.setState(0xb05, 0x6b00, 0xd4c0, 0x4c28, 0x3af9, 0x2777, 0x0, 0x1);
        gbc.writeMem(0xb05, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6b00);
        EXPECT(gbc.pc(), 0xb07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00F5
        gbc.setState(0xb906, 0xcf04, 0xd0e0, 0x6afb, 0xc8ca, 0x390d, 0x1, 0x0);
        gbc.writeMem(0xb906, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xcf04);
        EXPECT(gbc.pc(), 0xb908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb906), 0xcb);
        EXPECT(gbc.readMem(0xb907), 0xb8);
        // CB B8 00F6
        gbc.setState(0xbf5f, 0xb2dd, 0x2900, 0xf44a, 0x65ab, 0xa767, 0x0, 0x1);
        gbc.writeMem(0xbf5f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb2dd);
        EXPECT(gbc.pc(), 0xbf61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf5f), 0xcb);
        EXPECT(gbc.readMem(0xbf60), 0xb8);
        // CB B8 00F7
        gbc.setState(0x3df6, 0x1ff4, 0xf9c0, 0x6210, 0x76b2, 0xa70f, 0x1, 0x1);
        gbc.writeMem(0x3df6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1ff4);
        EXPECT(gbc.pc(), 0x3df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00F8
        gbc.setState(0x9a81, 0xb0ab, 0xc310, 0x3523, 0xb74a, 0x2304, 0x1, 0x1);
        gbc.writeMem(0x9a81, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb0ab);
        EXPECT(gbc.pc(), 0x9a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a81), 0xcb);
        EXPECT(gbc.readMem(0x9a82), 0xb8);
        // CB B8 00F9
        gbc.setState(0x9b97, 0x4a45, 0x6ee0, 0xa80e, 0x4f14, 0xbb95, 0x0, 0x1);
        gbc.writeMem(0x9b97, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4a45);
        EXPECT(gbc.pc(), 0x9b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b97), 0xcb);
        EXPECT(gbc.readMem(0x9b98), 0xb8);
        // CB B8 00FB
        gbc.setState(0xe74b, 0x5714, 0xa1b0, 0x476a, 0x3039, 0xca13, 0x0, 0x0);
        gbc.writeMem(0xe74b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5714);
        EXPECT(gbc.pc(), 0xe74d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe74b), 0xcb);
        EXPECT(gbc.readMem(0xe74c), 0xb8);
        // CB B8 00FC
        gbc.setState(0x2100, 0xb938, 0xfae0, 0x5449, 0xc9d9, 0x539f, 0x0, 0x1);
        gbc.writeMem(0x2100, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb938);
        EXPECT(gbc.pc(), 0x2102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00FD
        gbc.setState(0xdf3f, 0x4c7b, 0x2d50, 0x70a7, 0x2091, 0xb6be, 0x1, 0x1);
        gbc.writeMem(0xdf3f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4c7b);
        EXPECT(gbc.pc(), 0xdf41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf3f), 0xcb);
        EXPECT(gbc.readMem(0xdf40), 0xb8);
        // CB B8 00FE
        gbc.setState(0x6fd4, 0xc456, 0x3320, 0xecc2, 0x45b3, 0xf7eb, 0x0, 0x1);
        gbc.writeMem(0x6fd4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc456);
        EXPECT(gbc.pc(), 0x6fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 00FF
        gbc.setState(0x179d, 0xcbe9, 0xde90, 0xfb4d, 0xbec7, 0xa2d8, 0x1, 0x1);
        gbc.writeMem(0x179d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcbe9);
        EXPECT(gbc.pc(), 0x179f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0100
        gbc.setState(0xd21f, 0x10a1, 0xe1a0, 0xaaf5, 0x6b67, 0x7402, 0x0, 0x1);
        gbc.writeMem(0xd21f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x10a1);
        EXPECT(gbc.pc(), 0xd221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd21f), 0xcb);
        EXPECT(gbc.readMem(0xd220), 0xb8);
        // CB B8 0101
        gbc.setState(0xbb7b, 0xea2a, 0xad50, 0x9c53, 0xa6dc, 0xda3b, 0x1, 0x1);
        gbc.writeMem(0xbb7b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xea2a);
        EXPECT(gbc.pc(), 0xbb7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7b), 0xcb);
        EXPECT(gbc.readMem(0xbb7c), 0xb8);
        // CB B8 0102
        gbc.setState(0x9181, 0x6846, 0xb300, 0xda08, 0xfc9e, 0xa5f9, 0x0, 0x0);
        gbc.writeMem(0x9181, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6846);
        EXPECT(gbc.pc(), 0x9183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9181), 0xcb);
        EXPECT(gbc.readMem(0x9182), 0xb8);
        // CB B8 0103
        gbc.setState(0xb4f0, 0x261c, 0xc060, 0x954e, 0x4266, 0x8b53, 0x0, 0x1);
        gbc.writeMem(0xb4f0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x261c);
        EXPECT(gbc.pc(), 0xb4f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f0), 0xcb);
        EXPECT(gbc.readMem(0xb4f1), 0xb8);
        // CB B8 0104
        gbc.setState(0xb344, 0xda2, 0x4220, 0xf723, 0x5973, 0x77f1, 0x1, 0x1);
        gbc.writeMem(0xb344, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xda2);
        EXPECT(gbc.pc(), 0xb346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb344), 0xcb);
        EXPECT(gbc.readMem(0xb345), 0xb8);
        // CB B8 0105
        gbc.setState(0x8981, 0x10a1, 0x5e00, 0x1ea4, 0x5107, 0x6cc3, 0x1, 0x1);
        gbc.writeMem(0x8981, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x10a1);
        EXPECT(gbc.pc(), 0x8983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8981), 0xcb);
        EXPECT(gbc.readMem(0x8982), 0xb8);
        // CB B8 0106
        gbc.setState(0xd188, 0xfe4, 0xea70, 0xb9fb, 0xd9cd, 0x3981, 0x0, 0x1);
        gbc.writeMem(0xd188, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfe4);
        EXPECT(gbc.pc(), 0xd18a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd188), 0xcb);
        EXPECT(gbc.readMem(0xd189), 0xb8);
        // CB B8 0107
        gbc.setState(0xdb8, 0x87b0, 0x16c0, 0x507f, 0xaca4, 0x876a, 0x1, 0x1);
        gbc.writeMem(0xdb8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x87b0);
        EXPECT(gbc.pc(), 0xdba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0108
        gbc.setState(0x994d, 0x84cc, 0x12f0, 0x43b6, 0x601a, 0xba70, 0x0, 0x0);
        gbc.writeMem(0x994d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x84cc);
        EXPECT(gbc.pc(), 0x994f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994d), 0xcb);
        EXPECT(gbc.readMem(0x994e), 0xb8);
        // CB B8 0109
        gbc.setState(0x3333, 0xc55a, 0xb390, 0xab84, 0x6bdc, 0xc3fe, 0x1, 0x0);
        gbc.writeMem(0x3333, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc55a);
        EXPECT(gbc.pc(), 0x3335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 010A
        gbc.setState(0x7de, 0x1631, 0xe160, 0x1bd4, 0xa872, 0x9755, 0x0, 0x0);
        gbc.writeMem(0x7de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1631);
        EXPECT(gbc.pc(), 0x7e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 010B
        gbc.setState(0x1076, 0x8cf9, 0x7e60, 0xf634, 0x5feb, 0xff2, 0x1, 0x0);
        gbc.writeMem(0x1076, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8cf9);
        EXPECT(gbc.pc(), 0x1078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 010C
        gbc.setState(0x2edd, 0xf2de, 0xfb70, 0x736c, 0xb808, 0xe775, 0x1, 0x1);
        gbc.writeMem(0x2edd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf2de);
        EXPECT(gbc.pc(), 0x2edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 010D
        gbc.setState(0x1e1a, 0xf809, 0x89e0, 0x1397, 0x7e94, 0x2270, 0x0, 0x1);
        gbc.writeMem(0x1e1a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf809);
        EXPECT(gbc.pc(), 0x1e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 010E
        gbc.setState(0x7963, 0xff9b, 0x2fb0, 0x6c1b, 0x807f, 0xac59, 0x0, 0x0);
        gbc.writeMem(0x7963, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xff9b);
        EXPECT(gbc.pc(), 0x7965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 010F
        gbc.setState(0xb9de, 0x9da, 0x6b20, 0x82f5, 0x5f6, 0x7455, 0x1, 0x0);
        gbc.writeMem(0xb9de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9da);
        EXPECT(gbc.pc(), 0xb9e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9de), 0xcb);
        EXPECT(gbc.readMem(0xb9df), 0xb8);
        // CB B8 0110
        gbc.setState(0x27c2, 0x9433, 0xc5e0, 0x727d, 0x7eed, 0x9f5d, 0x1, 0x1);
        gbc.writeMem(0x27c2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9433);
        EXPECT(gbc.pc(), 0x27c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0111
        gbc.setState(0x1a20, 0x98b4, 0xe5f0, 0xc896, 0xe7d3, 0x3d16, 0x1, 0x1);
        gbc.writeMem(0x1a20, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x98b4);
        EXPECT(gbc.pc(), 0x1a22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0112
        gbc.setState(0xa161, 0x6424, 0xd1c0, 0x5a7f, 0x2b64, 0x9ce8, 0x0, 0x1);
        gbc.writeMem(0xa161, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6424);
        EXPECT(gbc.pc(), 0xa163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa161), 0xcb);
        EXPECT(gbc.readMem(0xa162), 0xb8);
        // CB B8 0113
        gbc.setState(0x6e93, 0xbea8, 0x5e00, 0xf00a, 0xc02e, 0x2064, 0x1, 0x0);
        gbc.writeMem(0x6e93, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbea8);
        EXPECT(gbc.pc(), 0x6e95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0115
        gbc.setState(0xaf5c, 0xd41c, 0x1880, 0x5629, 0xa0a7, 0x1624, 0x1, 0x1);
        gbc.writeMem(0xaf5c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd41c);
        EXPECT(gbc.pc(), 0xaf5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf5c), 0xcb);
        EXPECT(gbc.readMem(0xaf5d), 0xb8);
        // CB B8 0116
        gbc.setState(0x63c, 0xadf3, 0xd480, 0x7e8f, 0xd5ae, 0x703a, 0x1, 0x0);
        gbc.writeMem(0x63c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xadf3);
        EXPECT(gbc.pc(), 0x63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0117
        gbc.setState(0xe681, 0x3b8e, 0x5690, 0x4954, 0xe995, 0xe601, 0x0, 0x0);
        gbc.writeMem(0xe681, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3b8e);
        EXPECT(gbc.pc(), 0xe683);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe681), 0xcb);
        EXPECT(gbc.readMem(0xe682), 0xb8);
        // CB B8 0118
        gbc.setState(0xb681, 0x9758, 0x43a0, 0x6b64, 0x8c25, 0x9690, 0x0, 0x0);
        gbc.writeMem(0xb681, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9758);
        EXPECT(gbc.pc(), 0xb683);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb681), 0xcb);
        EXPECT(gbc.readMem(0xb682), 0xb8);
        // CB B8 0119
        gbc.setState(0x865d, 0xb42d, 0x7d90, 0x8427, 0x894d, 0xdd54, 0x1, 0x1);
        gbc.writeMem(0x865d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb42d);
        EXPECT(gbc.pc(), 0x865f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x865d), 0xcb);
        EXPECT(gbc.readMem(0x865e), 0xb8);
        // CB B8 011A
        gbc.setState(0x5e8b, 0xa981, 0x93b0, 0xea48, 0x588f, 0x6009, 0x0, 0x0);
        gbc.writeMem(0x5e8b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa981);
        EXPECT(gbc.pc(), 0x5e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 011B
        gbc.setState(0x3078, 0x7a47, 0x78e0, 0x6067, 0xeff4, 0x2c26, 0x0, 0x1);
        gbc.writeMem(0x3078, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7a47);
        EXPECT(gbc.pc(), 0x307a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 011C
        gbc.setState(0x6a98, 0x9932, 0x4eb0, 0xddf9, 0xac0f, 0x62c3, 0x0, 0x1);
        gbc.writeMem(0x6a98, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9932);
        EXPECT(gbc.pc(), 0x6a9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 011D
        gbc.setState(0xc24e, 0x57d6, 0xa010, 0x3ed9, 0x4ce5, 0xf7e6, 0x0, 0x0);
        gbc.writeMem(0xc24e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x57d6);
        EXPECT(gbc.pc(), 0xc250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc24e), 0xcb);
        EXPECT(gbc.readMem(0xc24f), 0xb8);
        // CB B8 011E
        gbc.setState(0x1364, 0xdb69, 0x6af0, 0x64cd, 0x42dd, 0xfdbb, 0x1, 0x1);
        gbc.writeMem(0x1364, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xdb69);
        EXPECT(gbc.pc(), 0x1366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 011F
        gbc.setState(0xd3b1, 0xf0e8, 0x74d0, 0xe83, 0x8c55, 0x8394, 0x0, 0x0);
        gbc.writeMem(0xd3b1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf0e8);
        EXPECT(gbc.pc(), 0xd3b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b1), 0xcb);
        EXPECT(gbc.readMem(0xd3b2), 0xb8);
        // CB B8 0120
        gbc.setState(0x1d6f, 0x2207, 0xedf0, 0x4a48, 0xcae4, 0xc918, 0x1, 0x0);
        gbc.writeMem(0x1d6f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2207);
        EXPECT(gbc.pc(), 0x1d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0121
        gbc.setState(0xcdf3, 0xcb80, 0x5400, 0x1434, 0x5ff3, 0xf2a4, 0x1, 0x0);
        gbc.writeMem(0xcdf3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xcb80);
        EXPECT(gbc.pc(), 0xcdf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf3), 0xcb);
        EXPECT(gbc.readMem(0xcdf4), 0xb8);
        // CB B8 0122
        gbc.setState(0x7bd8, 0x2354, 0xaa30, 0x8122, 0xe444, 0xc747, 0x1, 0x0);
        gbc.writeMem(0x7bd8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2354);
        EXPECT(gbc.pc(), 0x7bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0123
        gbc.setState(0x4e4, 0xa5a6, 0x3ef0, 0x7173, 0x41a7, 0xaeb7, 0x0, 0x1);
        gbc.writeMem(0x4e4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa5a6);
        EXPECT(gbc.pc(), 0x4e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0124
        gbc.setState(0xc18, 0x456d, 0x6960, 0x4822, 0xd4df, 0xd1bd, 0x0, 0x1);
        gbc.writeMem(0xc18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x456d);
        EXPECT(gbc.pc(), 0xc1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0125
        gbc.setState(0xb58c, 0x257c, 0xadc0, 0x75d8, 0x5b29, 0x2ef2, 0x1, 0x0);
        gbc.writeMem(0xb58c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x257c);
        EXPECT(gbc.pc(), 0xb58e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb58c), 0xcb);
        EXPECT(gbc.readMem(0xb58d), 0xb8);
        // CB B8 0126
        gbc.setState(0x1be4, 0x3231, 0x6260, 0x182d, 0xe003, 0xcc8, 0x0, 0x1);
        gbc.writeMem(0x1be4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3231);
        EXPECT(gbc.pc(), 0x1be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0127
        gbc.setState(0xa258, 0x2be4, 0x2f50, 0x456d, 0x1cdb, 0xb7a9, 0x1, 0x1);
        gbc.writeMem(0xa258, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2be4);
        EXPECT(gbc.pc(), 0xa25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa258), 0xcb);
        EXPECT(gbc.readMem(0xa259), 0xb8);
        // CB B8 0128
        gbc.setState(0xd386, 0xb824, 0x2710, 0xfb10, 0x5e9c, 0x2a57, 0x0, 0x0);
        gbc.writeMem(0xd386, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb824);
        EXPECT(gbc.pc(), 0xd388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd386), 0xcb);
        EXPECT(gbc.readMem(0xd387), 0xb8);
        // CB B8 0129
        gbc.setState(0x49ae, 0x6252, 0x310, 0xd9cd, 0x55e8, 0x8755, 0x0, 0x0);
        gbc.writeMem(0x49ae, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6252);
        EXPECT(gbc.pc(), 0x49b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 012A
        gbc.setState(0xcbb5, 0x808f, 0xabc0, 0x3022, 0x60c7, 0xedf3, 0x1, 0x1);
        gbc.writeMem(0xcbb5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x808f);
        EXPECT(gbc.pc(), 0xcbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb5), 0xcb);
        EXPECT(gbc.readMem(0xcbb6), 0xb8);
        // CB B8 012B
        gbc.setState(0xa332, 0x6864, 0xd2f0, 0x4b88, 0xa6bf, 0x94f7, 0x0, 0x1);
        gbc.writeMem(0xa332, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6864);
        EXPECT(gbc.pc(), 0xa334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa332), 0xcb);
        EXPECT(gbc.readMem(0xa333), 0xb8);
        // CB B8 012C
        gbc.setState(0x5df4, 0x160, 0x2d60, 0xc790, 0xc11b, 0x59ff, 0x0, 0x1);
        gbc.writeMem(0x5df4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x160);
        EXPECT(gbc.pc(), 0x5df6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 012E
        gbc.setState(0xa5b7, 0x80f, 0x4f80, 0xca45, 0x9efe, 0xf99d, 0x1, 0x0);
        gbc.writeMem(0xa5b7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x80f);
        EXPECT(gbc.pc(), 0xa5b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5b7), 0xcb);
        EXPECT(gbc.readMem(0xa5b8), 0xb8);
        // CB B8 012F
        gbc.setState(0xa4a0, 0x5705, 0x9c40, 0x84d4, 0x36d5, 0x9ecb, 0x1, 0x1);
        gbc.writeMem(0xa4a0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5705);
        EXPECT(gbc.pc(), 0xa4a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a0), 0xcb);
        EXPECT(gbc.readMem(0xa4a1), 0xb8);
        // CB B8 0130
        gbc.setState(0xd268, 0x8a41, 0x36e0, 0x86dc, 0x2036, 0x57b9, 0x0, 0x0);
        gbc.writeMem(0xd268, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8a41);
        EXPECT(gbc.pc(), 0xd26a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd268), 0xcb);
        EXPECT(gbc.readMem(0xd269), 0xb8);
        // CB B8 0131
        gbc.setState(0xa346, 0xcca5, 0x5800, 0x937c, 0xa3ca, 0x9959, 0x1, 0x0);
        gbc.writeMem(0xa346, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcca5);
        EXPECT(gbc.pc(), 0xa348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa346), 0xcb);
        EXPECT(gbc.readMem(0xa347), 0xb8);
        // CB B8 0132
        gbc.setState(0x22a8, 0x4c96, 0x5170, 0xb15d, 0x811a, 0x20dd, 0x1, 0x0);
        gbc.writeMem(0x22a8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4c96);
        EXPECT(gbc.pc(), 0x22aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0133
        gbc.setState(0x5227, 0xd406, 0x1ac0, 0xadf5, 0xec86, 0xd1fa, 0x1, 0x1);
        gbc.writeMem(0x5227, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd406);
        EXPECT(gbc.pc(), 0x5229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0134
        gbc.setState(0xa834, 0xa1e7, 0x4970, 0xc8df, 0x9d7c, 0xedb2, 0x0, 0x0);
        gbc.writeMem(0xa834, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa1e7);
        EXPECT(gbc.pc(), 0xa836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa834), 0xcb);
        EXPECT(gbc.readMem(0xa835), 0xb8);
        // CB B8 0136
        gbc.setState(0xabc2, 0xc4e, 0x1150, 0x60d2, 0x21fc, 0xb117, 0x0, 0x1);
        gbc.writeMem(0xabc2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc4e);
        EXPECT(gbc.pc(), 0xabc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc2), 0xcb);
        EXPECT(gbc.readMem(0xabc3), 0xb8);
        // CB B8 0137
        gbc.setState(0xd6fc, 0x1cee, 0x8800, 0xf146, 0xcb23, 0xe196, 0x0, 0x0);
        gbc.writeMem(0xd6fc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1cee);
        EXPECT(gbc.pc(), 0xd6fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6fc), 0xcb);
        EXPECT(gbc.readMem(0xd6fd), 0xb8);
        // CB B8 0139
        gbc.setState(0xef8, 0xfcec, 0x68a0, 0x9969, 0x97c8, 0x4e56, 0x0, 0x1);
        gbc.writeMem(0xef8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfcec);
        EXPECT(gbc.pc(), 0xefa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 013A
        gbc.setState(0x38de, 0x44ff, 0x5cc0, 0x3b7a, 0x7c7b, 0x1efd, 0x1, 0x1);
        gbc.writeMem(0x38de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x44ff);
        EXPECT(gbc.pc(), 0x38e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 013C
        gbc.setState(0x9b05, 0xf7b7, 0x19f0, 0xa214, 0x8927, 0xeaba, 0x1, 0x0);
        gbc.writeMem(0x9b05, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf7b7);
        EXPECT(gbc.pc(), 0x9b07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b05), 0xcb);
        EXPECT(gbc.readMem(0x9b06), 0xb8);
        // CB B8 013D
        gbc.setState(0x97de, 0x7ab5, 0xf880, 0x5b7a, 0xf269, 0xca17, 0x1, 0x1);
        gbc.writeMem(0x97de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7ab5);
        EXPECT(gbc.pc(), 0x97e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97de), 0xcb);
        EXPECT(gbc.readMem(0x97df), 0xb8);
        // CB B8 013E
        gbc.setState(0x7f16, 0x986e, 0x6680, 0x76bf, 0xc47a, 0xedb7, 0x1, 0x1);
        gbc.writeMem(0x7f16, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x986e);
        EXPECT(gbc.pc(), 0x7f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 013F
        gbc.setState(0x8fb2, 0x757b, 0x6ae0, 0x865d, 0x831e, 0xdb6d, 0x1, 0x1);
        gbc.writeMem(0x8fb2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x757b);
        EXPECT(gbc.pc(), 0x8fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb2), 0xcb);
        EXPECT(gbc.readMem(0x8fb3), 0xb8);
        // CB B8 0140
        gbc.setState(0x789b, 0x908b, 0xf7a0, 0x2899, 0x6187, 0x4237, 0x0, 0x1);
        gbc.writeMem(0x789b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x908b);
        EXPECT(gbc.pc(), 0x789d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0141
        gbc.setState(0x80a4, 0x4d9c, 0x2e40, 0x95bf, 0xf153, 0x8210, 0x0, 0x0);
        gbc.writeMem(0x80a4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4d9c);
        EXPECT(gbc.pc(), 0x80a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a4), 0xcb);
        EXPECT(gbc.readMem(0x80a5), 0xb8);
        // CB B8 0142
        gbc.setState(0x1d17, 0x2489, 0xbaf0, 0x7ce1, 0x7726, 0x7b43, 0x0, 0x0);
        gbc.writeMem(0x1d17, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2489);
        EXPECT(gbc.pc(), 0x1d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0143
        gbc.setState(0xde6f, 0x26bf, 0xbd10, 0x9beb, 0xb334, 0x815a, 0x0, 0x1);
        gbc.writeMem(0xde6f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x26bf);
        EXPECT(gbc.pc(), 0xde71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde6f), 0xcb);
        EXPECT(gbc.readMem(0xde70), 0xb8);
        // CB B8 0144
        gbc.setState(0xb80, 0x694b, 0xe440, 0x3314, 0x7714, 0xb528, 0x0, 0x1);
        gbc.writeMem(0xb80, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x694b);
        EXPECT(gbc.pc(), 0xb82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0146
        gbc.setState(0xa1b2, 0xda3f, 0xa7f0, 0x3372, 0x28a5, 0xf8f6, 0x1, 0x0);
        gbc.writeMem(0xa1b2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xda3f);
        EXPECT(gbc.pc(), 0xa1b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b2), 0xcb);
        EXPECT(gbc.readMem(0xa1b3), 0xb8);
        // CB B8 0147
        gbc.setState(0xc826, 0xf45b, 0xf440, 0x7079, 0x2ca0, 0xdd7d, 0x1, 0x1);
        gbc.writeMem(0xc826, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf45b);
        EXPECT(gbc.pc(), 0xc828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc826), 0xcb);
        EXPECT(gbc.readMem(0xc827), 0xb8);
        // CB B8 0148
        gbc.setState(0x54e0, 0x9ac7, 0xb750, 0x8ec0, 0xb064, 0x22da, 0x1, 0x1);
        gbc.writeMem(0x54e0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9ac7);
        EXPECT(gbc.pc(), 0x54e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0149
        gbc.setState(0x143a, 0x4cdd, 0xf410, 0x5c0e, 0x6d5, 0x8cb6, 0x0, 0x1);
        gbc.writeMem(0x143a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4cdd);
        EXPECT(gbc.pc(), 0x143c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 014A
        gbc.setState(0xe427, 0x31fd, 0xbcd0, 0x1959, 0xeba4, 0xb443, 0x0, 0x0);
        gbc.writeMem(0xe427, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x31fd);
        EXPECT(gbc.pc(), 0xe429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe427), 0xcb);
        EXPECT(gbc.readMem(0xe428), 0xb8);
        // CB B8 014B
        gbc.setState(0x9449, 0xd24a, 0xf440, 0xa0c1, 0xe550, 0x512c, 0x0, 0x0);
        gbc.writeMem(0x9449, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd24a);
        EXPECT(gbc.pc(), 0x944b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9449), 0xcb);
        EXPECT(gbc.readMem(0x944a), 0xb8);
        // CB B8 014C
        gbc.setState(0xd5b9, 0x33a3, 0x1ea0, 0x7d5e, 0xe84a, 0x9a65, 0x1, 0x0);
        gbc.writeMem(0xd5b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x33a3);
        EXPECT(gbc.pc(), 0xd5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b9), 0xcb);
        EXPECT(gbc.readMem(0xd5ba), 0xb8);
        // CB B8 014D
        gbc.setState(0x9b0d, 0x218a, 0xc5e0, 0x8b09, 0xcd7e, 0x9fc2, 0x0, 0x1);
        gbc.writeMem(0x9b0d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x218a);
        EXPECT(gbc.pc(), 0x9b0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b0d), 0xcb);
        EXPECT(gbc.readMem(0x9b0e), 0xb8);
        // CB B8 014E
        gbc.setState(0x7b0e, 0x1bcd, 0x5760, 0x3e3d, 0x7dc5, 0x63c6, 0x1, 0x0);
        gbc.writeMem(0x7b0e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1bcd);
        EXPECT(gbc.pc(), 0x7b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 014F
        gbc.setState(0xcc7d, 0x6809, 0x8660, 0x79a6, 0x4370, 0xd70c, 0x0, 0x1);
        gbc.writeMem(0xcc7d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6809);
        EXPECT(gbc.pc(), 0xcc7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc7d), 0xcb);
        EXPECT(gbc.readMem(0xcc7e), 0xb8);
        // CB B8 0151
        gbc.setState(0x704d, 0xed00, 0xe80, 0xbab4, 0xdcb, 0x15a5, 0x0, 0x1);
        gbc.writeMem(0x704d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xed00);
        EXPECT(gbc.pc(), 0x704f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0152
        gbc.setState(0xbcf4, 0x4f16, 0x5ba0, 0xf7a, 0xfbb9, 0x6d5c, 0x0, 0x0);
        gbc.writeMem(0xbcf4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4f16);
        EXPECT(gbc.pc(), 0xbcf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf4), 0xcb);
        EXPECT(gbc.readMem(0xbcf5), 0xb8);
        // CB B8 0153
        gbc.setState(0x8bcb, 0xaf76, 0x81f0, 0x4f93, 0x7b6, 0xc038, 0x0, 0x0);
        gbc.writeMem(0x8bcb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xaf76);
        EXPECT(gbc.pc(), 0x8bcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bcb), 0xcb);
        EXPECT(gbc.readMem(0x8bcc), 0xb8);
        // CB B8 0154
        gbc.setState(0x6606, 0x2bd1, 0xd700, 0xce0, 0x223, 0xbfa7, 0x0, 0x1);
        gbc.writeMem(0x6606, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2bd1);
        EXPECT(gbc.pc(), 0x6608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0155
        gbc.setState(0x416c, 0x71d2, 0xd990, 0xb043, 0x3b2, 0x2986, 0x0, 0x0);
        gbc.writeMem(0x416c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x71d2);
        EXPECT(gbc.pc(), 0x416e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0156
        gbc.setState(0x96ae, 0x939f, 0x7200, 0xdc42, 0x8db8, 0x63cd, 0x1, 0x1);
        gbc.writeMem(0x96ae, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x939f);
        EXPECT(gbc.pc(), 0x96b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ae), 0xcb);
        EXPECT(gbc.readMem(0x96af), 0xb8);
        // CB B8 0158
        gbc.setState(0xb8a9, 0x6f88, 0xb710, 0x27f1, 0x7461, 0xf473, 0x0, 0x1);
        gbc.writeMem(0xb8a9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6f88);
        EXPECT(gbc.pc(), 0xb8ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a9), 0xcb);
        EXPECT(gbc.readMem(0xb8aa), 0xb8);
        // CB B8 0159
        gbc.setState(0x6087, 0x7e8a, 0x1840, 0x1e70, 0x357b, 0xab0d, 0x0, 0x1);
        gbc.writeMem(0x6087, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7e8a);
        EXPECT(gbc.pc(), 0x6089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 015A
        gbc.setState(0xad69, 0x4ac5, 0x9e10, 0xfde2, 0xbac1, 0xad69, 0x0, 0x1);
        gbc.writeMem(0xad69, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4ac5);
        EXPECT(gbc.pc(), 0xad6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad69), 0xcb);
        EXPECT(gbc.readMem(0xad6a), 0xb8);
        // CB B8 015B
        gbc.setState(0x8ba9, 0x9e0f, 0x1820, 0x81a9, 0x3055, 0x5428, 0x1, 0x0);
        gbc.writeMem(0x8ba9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9e0f);
        EXPECT(gbc.pc(), 0x8bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba9), 0xcb);
        EXPECT(gbc.readMem(0x8baa), 0xb8);
        // CB B8 015C
        gbc.setState(0xe122, 0x7a6, 0x6930, 0x1f06, 0xb217, 0x6fb5, 0x0, 0x0);
        gbc.writeMem(0xe122, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7a6);
        EXPECT(gbc.pc(), 0xe124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe122), 0xcb);
        EXPECT(gbc.readMem(0xe123), 0xb8);
        // CB B8 015D
        gbc.setState(0xac88, 0x5c12, 0xec40, 0xceb0, 0x4037, 0xc2db, 0x0, 0x1);
        gbc.writeMem(0xac88, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5c12);
        EXPECT(gbc.pc(), 0xac8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac88), 0xcb);
        EXPECT(gbc.readMem(0xac89), 0xb8);
        // CB B8 015E
        gbc.setState(0x8218, 0x131b, 0xbbb0, 0xb0e7, 0x3fd, 0xe47b, 0x1, 0x1);
        gbc.writeMem(0x8218, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x131b);
        EXPECT(gbc.pc(), 0x821a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8218), 0xcb);
        EXPECT(gbc.readMem(0x8219), 0xb8);
        // CB B8 015F
        gbc.setState(0x5d4a, 0x449e, 0x60e0, 0x9cbc, 0x3b6, 0x4ff, 0x0, 0x0);
        gbc.writeMem(0x5d4a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x449e);
        EXPECT(gbc.pc(), 0x5d4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0160
        gbc.setState(0xc0ac, 0xac68, 0xfb80, 0x9fa2, 0x4008, 0xfbcd, 0x1, 0x0);
        gbc.writeMem(0xc0ac, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xac68);
        EXPECT(gbc.pc(), 0xc0ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ac), 0xcb);
        EXPECT(gbc.readMem(0xc0ad), 0xb8);
        // CB B8 0161
        gbc.setState(0x59d6, 0x476b, 0x69d0, 0xa3, 0x8cc4, 0x47c5, 0x1, 0x1);
        gbc.writeMem(0x59d6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x476b);
        EXPECT(gbc.pc(), 0x59d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0162
        gbc.setState(0x30, 0x4e77, 0xf070, 0xfc6d, 0x6138, 0x7037, 0x0, 0x0);
        gbc.writeMem(0x30, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4e77);
        EXPECT(gbc.pc(), 0x32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0163
        gbc.setState(0x3432, 0x9a74, 0x73b0, 0x6551, 0xc973, 0x53d7, 0x0, 0x0);
        gbc.writeMem(0x3432, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9a74);
        EXPECT(gbc.pc(), 0x3434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0164
        gbc.setState(0x1919, 0x279e, 0xbb10, 0xe16, 0xe78e, 0x8727, 0x0, 0x1);
        gbc.writeMem(0x1919, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x279e);
        EXPECT(gbc.pc(), 0x191b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0165
        gbc.setState(0xc203, 0x40c7, 0x35f0, 0x771f, 0x247e, 0x9e62, 0x0, 0x0);
        gbc.writeMem(0xc203, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x40c7);
        EXPECT(gbc.pc(), 0xc205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc203), 0xcb);
        EXPECT(gbc.readMem(0xc204), 0xb8);
        // CB B8 0166
        gbc.setState(0x3922, 0xa5b0, 0xdae0, 0xc35a, 0xa871, 0x8bd7, 0x0, 0x0);
        gbc.writeMem(0x3922, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa5b0);
        EXPECT(gbc.pc(), 0x3924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0167
        gbc.setState(0xbe31, 0xb404, 0x6040, 0x7970, 0xd562, 0xf3a5, 0x0, 0x0);
        gbc.writeMem(0xbe31, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb404);
        EXPECT(gbc.pc(), 0xbe33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe31), 0xcb);
        EXPECT(gbc.readMem(0xbe32), 0xb8);
        // CB B8 0168
        gbc.setState(0x8666, 0xed8b, 0x4ac0, 0x9fca, 0x412f, 0x4fe5, 0x0, 0x1);
        gbc.writeMem(0x8666, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xed8b);
        EXPECT(gbc.pc(), 0x8668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8666), 0xcb);
        EXPECT(gbc.readMem(0x8667), 0xb8);
        // CB B8 0169
        gbc.setState(0xc358, 0x4ddd, 0xbcd0, 0xa7d0, 0x2c5c, 0x7582, 0x0, 0x0);
        gbc.writeMem(0xc358, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4ddd);
        EXPECT(gbc.pc(), 0xc35a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc358), 0xcb);
        EXPECT(gbc.readMem(0xc359), 0xb8);
        // CB B8 016A
        gbc.setState(0x821b, 0xd648, 0x7000, 0x50ce, 0xa1f0, 0x7d64, 0x0, 0x1);
        gbc.writeMem(0x821b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd648);
        EXPECT(gbc.pc(), 0x821d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821b), 0xcb);
        EXPECT(gbc.readMem(0x821c), 0xb8);
        // CB B8 016B
        gbc.setState(0x14e4, 0x22b8, 0xd2c0, 0x878e, 0x7b20, 0xc815, 0x1, 0x0);
        gbc.writeMem(0x14e4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x22b8);
        EXPECT(gbc.pc(), 0x14e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 016D
        gbc.setState(0x38be, 0x7daf, 0xbf50, 0x378c, 0x6671, 0xde2f, 0x0, 0x1);
        gbc.writeMem(0x38be, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7daf);
        EXPECT(gbc.pc(), 0x38c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 016E
        gbc.setState(0xe8a6, 0xefd6, 0x13a0, 0x331e, 0xb590, 0xd05a, 0x1, 0x0);
        gbc.writeMem(0xe8a6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xefd6);
        EXPECT(gbc.pc(), 0xe8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a6), 0xcb);
        EXPECT(gbc.readMem(0xe8a7), 0xb8);
        // CB B8 016F
        gbc.setState(0x4ae6, 0xc94, 0xdf50, 0x2a9b, 0x7435, 0x791c, 0x0, 0x0);
        gbc.writeMem(0x4ae6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc94);
        EXPECT(gbc.pc(), 0x4ae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0170
        gbc.setState(0xd1b7, 0xa01b, 0x70d0, 0x3431, 0xfa07, 0x294f, 0x0, 0x1);
        gbc.writeMem(0xd1b7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa01b);
        EXPECT(gbc.pc(), 0xd1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b7), 0xcb);
        EXPECT(gbc.readMem(0xd1b8), 0xb8);
        // CB B8 0171
        gbc.setState(0x233d, 0x8181, 0x2740, 0x13b4, 0x5b7f, 0x3e34, 0x0, 0x0);
        gbc.writeMem(0x233d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8181);
        EXPECT(gbc.pc(), 0x233f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0172
        gbc.setState(0xdbfa, 0x675, 0x1af0, 0xf6b6, 0x18f3, 0xb13b, 0x1, 0x0);
        gbc.writeMem(0xdbfa, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x675);
        EXPECT(gbc.pc(), 0xdbfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbfa), 0xcb);
        EXPECT(gbc.readMem(0xdbfb), 0xb8);
        // CB B8 0173
        gbc.setState(0x35fe, 0xe801, 0x5190, 0xb816, 0x73a4, 0x9b18, 0x1, 0x0);
        gbc.writeMem(0x35fe, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe801);
        EXPECT(gbc.pc(), 0x3600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0174
        gbc.setState(0xc527, 0x1a09, 0xfb0, 0x974b, 0x2345, 0xecf1, 0x1, 0x0);
        gbc.writeMem(0xc527, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1a09);
        EXPECT(gbc.pc(), 0xc529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc527), 0xcb);
        EXPECT(gbc.readMem(0xc528), 0xb8);
        // CB B8 0175
        gbc.setState(0x413f, 0x2335, 0x5560, 0x19fe, 0x3bc, 0x2a03, 0x1, 0x0);
        gbc.writeMem(0x413f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2335);
        EXPECT(gbc.pc(), 0x4141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0176
        gbc.setState(0x5d90, 0xc1d1, 0x6140, 0xb006, 0xe90f, 0xcfec, 0x0, 0x1);
        gbc.writeMem(0x5d90, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc1d1);
        EXPECT(gbc.pc(), 0x5d92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0177
        gbc.setState(0x7286, 0x7cf2, 0x38e0, 0x115e, 0x367, 0xef7e, 0x1, 0x1);
        gbc.writeMem(0x7286, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7cf2);
        EXPECT(gbc.pc(), 0x7288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0178
        gbc.setState(0xb268, 0xcdd6, 0xba70, 0xaea1, 0x4493, 0x7c66, 0x1, 0x0);
        gbc.writeMem(0xb268, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcdd6);
        EXPECT(gbc.pc(), 0xb26a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb268), 0xcb);
        EXPECT(gbc.readMem(0xb269), 0xb8);
        // CB B8 0179
        gbc.setState(0x9dbb, 0x1f74, 0x1630, 0xfc64, 0xa1e3, 0x5bb1, 0x0, 0x1);
        gbc.writeMem(0x9dbb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1f74);
        EXPECT(gbc.pc(), 0x9dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dbb), 0xcb);
        EXPECT(gbc.readMem(0x9dbc), 0xb8);
        // CB B8 017A
        gbc.setState(0x30b7, 0xcd1f, 0x5f80, 0x21e9, 0xe551, 0x134d, 0x1, 0x1);
        gbc.writeMem(0x30b7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcd1f);
        EXPECT(gbc.pc(), 0x30b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 017B
        gbc.setState(0x7638, 0x1c7a, 0xf050, 0x159f, 0x64a3, 0x31bc, 0x0, 0x0);
        gbc.writeMem(0x7638, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1c7a);
        EXPECT(gbc.pc(), 0x763a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 017C
        gbc.setState(0xa313, 0x4a00, 0x74a0, 0x74e5, 0x6a3a, 0x2da5, 0x1, 0x1);
        gbc.writeMem(0xa313, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4a00);
        EXPECT(gbc.pc(), 0xa315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa313), 0xcb);
        EXPECT(gbc.readMem(0xa314), 0xb8);
        // CB B8 017D
        gbc.setState(0x2872, 0xcf88, 0xad70, 0x4e13, 0xfc8c, 0x3561, 0x1, 0x1);
        gbc.writeMem(0x2872, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xcf88);
        EXPECT(gbc.pc(), 0x2874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 017E
        gbc.setState(0x2176, 0xfb99, 0x5690, 0x88a5, 0x5c89, 0x4e62, 0x0, 0x1);
        gbc.writeMem(0x2176, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfb99);
        EXPECT(gbc.pc(), 0x2178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 017F
        gbc.setState(0x9a38, 0xeda6, 0x4070, 0x919b, 0x8340, 0x973b, 0x0, 0x0);
        gbc.writeMem(0x9a38, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xeda6);
        EXPECT(gbc.pc(), 0x9a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a38), 0xcb);
        EXPECT(gbc.readMem(0x9a39), 0xb8);
        // CB B8 0180
        gbc.setState(0xd54c, 0xc6e0, 0xc4c0, 0xd9c9, 0x5c8e, 0xd1c0, 0x1, 0x0);
        gbc.writeMem(0xd54c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc6e0);
        EXPECT(gbc.pc(), 0xd54e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd54c), 0xcb);
        EXPECT(gbc.readMem(0xd54d), 0xb8);
        // CB B8 0181
        gbc.setState(0x295d, 0x1298, 0xa960, 0x6564, 0xf105, 0x6c24, 0x1, 0x0);
        gbc.writeMem(0x295d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1298);
        EXPECT(gbc.pc(), 0x295f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0182
        gbc.setState(0xcc0f, 0x34ce, 0x6a70, 0x37e, 0x9770, 0x63f5, 0x1, 0x1);
        gbc.writeMem(0xcc0f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x34ce);
        EXPECT(gbc.pc(), 0xcc11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc0f), 0xcb);
        EXPECT(gbc.readMem(0xcc10), 0xb8);
        // CB B8 0183
        gbc.setState(0x32d6, 0xb25a, 0xd0e0, 0xc1d6, 0x663e, 0xac25, 0x0, 0x0);
        gbc.writeMem(0x32d6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb25a);
        EXPECT(gbc.pc(), 0x32d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0184
        gbc.setState(0x54e, 0xc014, 0xbe50, 0x5623, 0xda45, 0xa3de, 0x1, 0x0);
        gbc.writeMem(0x54e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc014);
        EXPECT(gbc.pc(), 0x550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0185
        gbc.setState(0x26de, 0x2ace, 0xbbf0, 0xc9bc, 0x1359, 0xa386, 0x0, 0x0);
        gbc.writeMem(0x26de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2ace);
        EXPECT(gbc.pc(), 0x26e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0186
        gbc.setState(0x40b4, 0x2574, 0x8190, 0xd935, 0x677a, 0xbed1, 0x1, 0x1);
        gbc.writeMem(0x40b4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2574);
        EXPECT(gbc.pc(), 0x40b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0187
        gbc.setState(0x49fe, 0xbe31, 0x88e0, 0x511d, 0x398, 0x8394, 0x1, 0x1);
        gbc.writeMem(0x49fe, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbe31);
        EXPECT(gbc.pc(), 0x4a00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0188
        gbc.setState(0x8f69, 0x6902, 0x7000, 0x9549, 0xf367, 0xfd78, 0x1, 0x0);
        gbc.writeMem(0x8f69, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6902);
        EXPECT(gbc.pc(), 0x8f6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f69), 0xcb);
        EXPECT(gbc.readMem(0x8f6a), 0xb8);
        // CB B8 0189
        gbc.setState(0xdc88, 0xd5de, 0x7440, 0xd9c2, 0x24af, 0x5624, 0x0, 0x0);
        gbc.writeMem(0xdc88, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd5de);
        EXPECT(gbc.pc(), 0xdc8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc88), 0xcb);
        EXPECT(gbc.readMem(0xdc89), 0xb8);
        // CB B8 018A
        gbc.setState(0x56fc, 0x46db, 0x9270, 0x5b62, 0xde1f, 0xb37b, 0x1, 0x0);
        gbc.writeMem(0x56fc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x46db);
        EXPECT(gbc.pc(), 0x56fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 018B
        gbc.setState(0x951e, 0xe4f, 0x4140, 0x68b2, 0xb899, 0xd057, 0x1, 0x1);
        gbc.writeMem(0x951e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe4f);
        EXPECT(gbc.pc(), 0x9520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x951e), 0xcb);
        EXPECT(gbc.readMem(0x951f), 0xb8);
        // CB B8 018C
        gbc.setState(0xb831, 0x93b6, 0xc4d0, 0xb9f7, 0xcb01, 0x980a, 0x0, 0x1);
        gbc.writeMem(0xb831, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x93b6);
        EXPECT(gbc.pc(), 0xb833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb831), 0xcb);
        EXPECT(gbc.readMem(0xb832), 0xb8);
        // CB B8 018D
        gbc.setState(0x9453, 0x77ca, 0xa780, 0xd566, 0x8ac9, 0x2368, 0x1, 0x0);
        gbc.writeMem(0x9453, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x77ca);
        EXPECT(gbc.pc(), 0x9455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9453), 0xcb);
        EXPECT(gbc.readMem(0x9454), 0xb8);
        // CB B8 018E
        gbc.setState(0x6f82, 0x9ddf, 0xb9f0, 0xee28, 0xca0c, 0xa29a, 0x1, 0x1);
        gbc.writeMem(0x6f82, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9ddf);
        EXPECT(gbc.pc(), 0x6f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 018F
        gbc.setState(0x1d5c, 0x3060, 0xa020, 0xbfae, 0x10d2, 0x2631, 0x0, 0x0);
        gbc.writeMem(0x1d5c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3060);
        EXPECT(gbc.pc(), 0x1d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0190
        gbc.setState(0x74bd, 0x178c, 0x8210, 0x86df, 0x57c7, 0x7f81, 0x0, 0x1);
        gbc.writeMem(0x74bd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x178c);
        EXPECT(gbc.pc(), 0x74bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0192
        gbc.setState(0x52e0, 0x2681, 0xff20, 0x8cfc, 0x75bc, 0xec67, 0x1, 0x1);
        gbc.writeMem(0x52e0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2681);
        EXPECT(gbc.pc(), 0x52e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0193
        gbc.setState(0x167c, 0xa5e4, 0x2550, 0xf5fb, 0x3e2f, 0xf201, 0x0, 0x0);
        gbc.writeMem(0x167c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa5e4);
        EXPECT(gbc.pc(), 0x167e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0194
        gbc.setState(0x2f46, 0xc708, 0xbee0, 0xf214, 0xb709, 0x4f70, 0x0, 0x0);
        gbc.writeMem(0x2f46, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc708);
        EXPECT(gbc.pc(), 0x2f48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0195
        gbc.setState(0x8825, 0x7158, 0xba00, 0x1c4f, 0xb1de, 0x45ac, 0x1, 0x0);
        gbc.writeMem(0x8825, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7158);
        EXPECT(gbc.pc(), 0x8827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8825), 0xcb);
        EXPECT(gbc.readMem(0x8826), 0xb8);
        // CB B8 0196
        gbc.setState(0xc126, 0xcdee, 0x290, 0x2167, 0xb850, 0x78fa, 0x0, 0x0);
        gbc.writeMem(0xc126, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xcdee);
        EXPECT(gbc.pc(), 0xc128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc126), 0xcb);
        EXPECT(gbc.readMem(0xc127), 0xb8);
        // CB B8 0197
        gbc.setState(0xdfe4, 0x5691, 0xb0c0, 0x9972, 0x7c26, 0xafda, 0x0, 0x0);
        gbc.writeMem(0xdfe4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5691);
        EXPECT(gbc.pc(), 0xdfe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfe4), 0xcb);
        EXPECT(gbc.readMem(0xdfe5), 0xb8);
        // CB B8 0198
        gbc.setState(0x79f, 0x12ec, 0x8e50, 0x6a0d, 0xdee8, 0xc738, 0x1, 0x0);
        gbc.writeMem(0x79f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x12ec);
        EXPECT(gbc.pc(), 0x7a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0199
        gbc.setState(0xe4d9, 0x2cce, 0x14b0, 0xb488, 0xc3a7, 0x9564, 0x0, 0x1);
        gbc.writeMem(0xe4d9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2cce);
        EXPECT(gbc.pc(), 0xe4db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d9), 0xcb);
        EXPECT(gbc.readMem(0xe4da), 0xb8);
        // CB B8 019A
        gbc.setState(0x1a8e, 0x42d2, 0x6840, 0xa580, 0x8878, 0x240c, 0x1, 0x0);
        gbc.writeMem(0x1a8e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x42d2);
        EXPECT(gbc.pc(), 0x1a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 019B
        gbc.setState(0x83bb, 0xabe2, 0x4e70, 0xe6d3, 0xe357, 0xfedc, 0x0, 0x1);
        gbc.writeMem(0x83bb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xabe2);
        EXPECT(gbc.pc(), 0x83bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83bb), 0xcb);
        EXPECT(gbc.readMem(0x83bc), 0xb8);
        // CB B8 019C
        gbc.setState(0x19f9, 0x8e8d, 0x6e40, 0xbf8d, 0x8323, 0x5fbe, 0x1, 0x1);
        gbc.writeMem(0x19f9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8e8d);
        EXPECT(gbc.pc(), 0x19fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 019D
        gbc.setState(0x3fe3, 0xd950, 0xb100, 0xb01, 0x27f7, 0x3250, 0x0, 0x1);
        gbc.writeMem(0x3fe3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd950);
        EXPECT(gbc.pc(), 0x3fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 019E
        gbc.setState(0xbe3a, 0xfcc2, 0xacc0, 0x6d59, 0xe23f, 0xc782, 0x0, 0x1);
        gbc.writeMem(0xbe3a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfcc2);
        EXPECT(gbc.pc(), 0xbe3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe3a), 0xcb);
        EXPECT(gbc.readMem(0xbe3b), 0xb8);
        // CB B8 019F
        gbc.setState(0x218e, 0xa447, 0xcbc0, 0x8603, 0x2bcb, 0xffda, 0x0, 0x0);
        gbc.writeMem(0x218e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa447);
        EXPECT(gbc.pc(), 0x2190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01A1
        gbc.setState(0x334b, 0x4182, 0x67e0, 0x9b56, 0xb983, 0x41b1, 0x1, 0x1);
        gbc.writeMem(0x334b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4182);
        EXPECT(gbc.pc(), 0x334d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01A2
        gbc.setState(0x9dff, 0xc410, 0x4480, 0xe63e, 0x1e70, 0xdc9, 0x0, 0x1);
        gbc.writeMem(0x9dff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc410);
        EXPECT(gbc.pc(), 0x9e01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dff), 0xcb);
        EXPECT(gbc.readMem(0x9e00), 0xb8);
        // CB B8 01A3
        gbc.setState(0x1d9e, 0x9e25, 0xa740, 0x7a58, 0xc204, 0xbac8, 0x0, 0x1);
        gbc.writeMem(0x1d9e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9e25);
        EXPECT(gbc.pc(), 0x1da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01A4
        gbc.setState(0xd304, 0xae02, 0x490, 0x4fd5, 0x2208, 0x1bc6, 0x1, 0x1);
        gbc.writeMem(0xd304, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xae02);
        EXPECT(gbc.pc(), 0xd306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd304), 0xcb);
        EXPECT(gbc.readMem(0xd305), 0xb8);
        // CB B8 01A5
        gbc.setState(0x65be, 0xfb52, 0x5b70, 0x6997, 0x4274, 0xf8cb, 0x1, 0x0);
        gbc.writeMem(0x65be, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfb52);
        EXPECT(gbc.pc(), 0x65c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01A6
        gbc.setState(0x9236, 0x682d, 0x4fd0, 0x8c9, 0x7c63, 0x1b10, 0x0, 0x0);
        gbc.writeMem(0x9236, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x682d);
        EXPECT(gbc.pc(), 0x9238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9236), 0xcb);
        EXPECT(gbc.readMem(0x9237), 0xb8);
        // CB B8 01A7
        gbc.setState(0xa6b0, 0x2e75, 0x4c70, 0xdfe4, 0xa8c0, 0x44b4, 0x0, 0x1);
        gbc.writeMem(0xa6b0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2e75);
        EXPECT(gbc.pc(), 0xa6b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b0), 0xcb);
        EXPECT(gbc.readMem(0xa6b1), 0xb8);
        // CB B8 01A8
        gbc.setState(0x5ce9, 0xb0ae, 0x4a80, 0xc264, 0xad86, 0x19e7, 0x1, 0x1);
        gbc.writeMem(0x5ce9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb0ae);
        EXPECT(gbc.pc(), 0x5ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01A9
        gbc.setState(0x35de, 0x54d2, 0x4950, 0x2ddd, 0x223d, 0x2a2e, 0x1, 0x1);
        gbc.writeMem(0x35de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x54d2);
        EXPECT(gbc.pc(), 0x35e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01AA
        gbc.setState(0x7ea6, 0xa5, 0xbe70, 0xa8e2, 0x18c2, 0xc126, 0x0, 0x1);
        gbc.writeMem(0x7ea6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa5);
        EXPECT(gbc.pc(), 0x7ea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01AB
        gbc.setState(0x585a, 0x8e95, 0x98a0, 0x9281, 0x2bee, 0x5c6e, 0x0, 0x1);
        gbc.writeMem(0x585a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8e95);
        EXPECT(gbc.pc(), 0x585c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01AC
        gbc.setState(0x8dc5, 0xdd98, 0xccc0, 0x2f7b, 0x4a2d, 0xb8a7, 0x1, 0x1);
        gbc.writeMem(0x8dc5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdd98);
        EXPECT(gbc.pc(), 0x8dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc5), 0xcb);
        EXPECT(gbc.readMem(0x8dc6), 0xb8);
        // CB B8 01AE
        gbc.setState(0x1211, 0xebf5, 0x7680, 0xa3e7, 0x1c8, 0x7587, 0x1, 0x0);
        gbc.writeMem(0x1211, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xebf5);
        EXPECT(gbc.pc(), 0x1213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01AF
        gbc.setState(0x1534, 0xee40, 0x3b30, 0xc389, 0x53f2, 0xd8df, 0x1, 0x0);
        gbc.writeMem(0x1534, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xee40);
        EXPECT(gbc.pc(), 0x1536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01B0
        gbc.setState(0x29ab, 0x2a87, 0xb700, 0x1363, 0x6f7a, 0x654f, 0x0, 0x0);
        gbc.writeMem(0x29ab, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2a87);
        EXPECT(gbc.pc(), 0x29ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01B2
        gbc.setState(0x2101, 0x7a76, 0xc610, 0xb22d, 0x871d, 0x769d, 0x0, 0x1);
        gbc.writeMem(0x2101, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7a76);
        EXPECT(gbc.pc(), 0x2103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01B3
        gbc.setState(0x6a49, 0xdb8, 0xaeb0, 0x1114, 0x7172, 0x8ac7, 0x1, 0x1);
        gbc.writeMem(0x6a49, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdb8);
        EXPECT(gbc.pc(), 0x6a4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01B4
        gbc.setState(0x22a5, 0xf1c0, 0x52c0, 0x737, 0xea4d, 0xa294, 0x1, 0x1);
        gbc.writeMem(0x22a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf1c0);
        EXPECT(gbc.pc(), 0x22a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01B5
        gbc.setState(0x7cfb, 0x7e36, 0x2670, 0xf452, 0xcad, 0x9ac9, 0x1, 0x0);
        gbc.writeMem(0x7cfb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7e36);
        EXPECT(gbc.pc(), 0x7cfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01B6
        gbc.setState(0xe101, 0x84cd, 0x7b60, 0xb456, 0x491d, 0x1022, 0x1, 0x1);
        gbc.writeMem(0xe101, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x84cd);
        EXPECT(gbc.pc(), 0xe103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe101), 0xcb);
        EXPECT(gbc.readMem(0xe102), 0xb8);
        // CB B8 01B7
        gbc.setState(0xed6e, 0xb30e, 0x5aa0, 0xa79, 0xb5ae, 0xb537, 0x0, 0x1);
        gbc.writeMem(0xed6e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb30e);
        EXPECT(gbc.pc(), 0xed70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed6e), 0xcb);
        EXPECT(gbc.readMem(0xed6f), 0xb8);
        // CB B8 01B8
        gbc.setState(0xc4a, 0x5786, 0xed40, 0x3c3f, 0x84ab, 0xefdd, 0x0, 0x1);
        gbc.writeMem(0xc4a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5786);
        EXPECT(gbc.pc(), 0xc4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01B9
        gbc.setState(0xec32, 0x92e0, 0x5730, 0x9825, 0x28e2, 0x8c53, 0x1, 0x0);
        gbc.writeMem(0xec32, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x92e0);
        EXPECT(gbc.pc(), 0xec34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec32), 0xcb);
        EXPECT(gbc.readMem(0xec33), 0xb8);
        // CB B8 01BA
        gbc.setState(0x871c, 0xce75, 0xb240, 0x3d4d, 0xb85, 0xe0a9, 0x0, 0x1);
        gbc.writeMem(0x871c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xce75);
        EXPECT(gbc.pc(), 0x871e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x871c), 0xcb);
        EXPECT(gbc.readMem(0x871d), 0xb8);
        // CB B8 01BB
        gbc.setState(0xc84a, 0xe4e1, 0xb340, 0x8bc8, 0xdf5, 0xcb06, 0x0, 0x1);
        gbc.writeMem(0xc84a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe4e1);
        EXPECT(gbc.pc(), 0xc84c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84a), 0xcb);
        EXPECT(gbc.readMem(0xc84b), 0xb8);
        // CB B8 01BC
        gbc.setState(0xa0d9, 0xdb43, 0xebb0, 0xa67c, 0x4c54, 0x5f6f, 0x0, 0x0);
        gbc.writeMem(0xa0d9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdb43);
        EXPECT(gbc.pc(), 0xa0db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d9), 0xcb);
        EXPECT(gbc.readMem(0xa0da), 0xb8);
        // CB B8 01BD
        gbc.setState(0x89e4, 0x9807, 0x4d80, 0x7ed2, 0x8947, 0x45da, 0x1, 0x1);
        gbc.writeMem(0x89e4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9807);
        EXPECT(gbc.pc(), 0x89e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e4), 0xcb);
        EXPECT(gbc.readMem(0x89e5), 0xb8);
        // CB B8 01BE
        gbc.setState(0x9d50, 0x26c1, 0x56c0, 0xb221, 0xe27, 0x2d8a, 0x1, 0x0);
        gbc.writeMem(0x9d50, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x26c1);
        EXPECT(gbc.pc(), 0x9d52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d50), 0xcb);
        EXPECT(gbc.readMem(0x9d51), 0xb8);
        // CB B8 01BF
        gbc.setState(0xcea1, 0x2054, 0xefd0, 0xf9f, 0x4594, 0x1be1, 0x1, 0x0);
        gbc.writeMem(0xcea1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2054);
        EXPECT(gbc.pc(), 0xcea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea1), 0xcb);
        EXPECT(gbc.readMem(0xcea2), 0xb8);
        // CB B8 01C0
        gbc.setState(0x245b, 0x4eaf, 0x6370, 0x1766, 0xb35f, 0x6edb, 0x1, 0x1);
        gbc.writeMem(0x245b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4eaf);
        EXPECT(gbc.pc(), 0x245d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01C1
        gbc.setState(0xd43e, 0x2d43, 0xed90, 0x23d8, 0x4642, 0x83e8, 0x1, 0x1);
        gbc.writeMem(0xd43e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2d43);
        EXPECT(gbc.pc(), 0xd440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43e), 0xcb);
        EXPECT(gbc.readMem(0xd43f), 0xb8);
        // CB B8 01C2
        gbc.setState(0x148c, 0xbc57, 0xd6d0, 0xeeb5, 0x30b6, 0x79a0, 0x1, 0x1);
        gbc.writeMem(0x148c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xbc57);
        EXPECT(gbc.pc(), 0x148e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01C3
        gbc.setState(0x27a8, 0x10d3, 0x5860, 0x19e5, 0xff56, 0xfbf, 0x1, 0x0);
        gbc.writeMem(0x27a8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x10d3);
        EXPECT(gbc.pc(), 0x27aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01C4
        gbc.setState(0x2ac9, 0xfe05, 0x4bb0, 0x9dfe, 0xbeca, 0xdb25, 0x0, 0x1);
        gbc.writeMem(0x2ac9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfe05);
        EXPECT(gbc.pc(), 0x2acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01C5
        gbc.setState(0x9a8, 0xe325, 0xcf80, 0x29ca, 0xe58a, 0xed2a, 0x1, 0x1);
        gbc.writeMem(0x9a8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe325);
        EXPECT(gbc.pc(), 0x9aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01C6
        gbc.setState(0x43e2, 0x13f, 0x5990, 0xa945, 0xe36, 0x4abf, 0x0, 0x1);
        gbc.writeMem(0x43e2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x13f);
        EXPECT(gbc.pc(), 0x43e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01C7
        gbc.setState(0xd798, 0x5c2c, 0xd650, 0xebf0, 0x939d, 0xf211, 0x0, 0x1);
        gbc.writeMem(0xd798, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5c2c);
        EXPECT(gbc.pc(), 0xd79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd798), 0xcb);
        EXPECT(gbc.readMem(0xd799), 0xb8);
        // CB B8 01C8
        gbc.setState(0xdfeb, 0x4ed0, 0xd3f0, 0xf433, 0xe917, 0xcf5f, 0x0, 0x0);
        gbc.writeMem(0xdfeb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4ed0);
        EXPECT(gbc.pc(), 0xdfed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfeb), 0xcb);
        EXPECT(gbc.readMem(0xdfec), 0xb8);
        // CB B8 01C9
        gbc.setState(0x511b, 0x4cd3, 0x2000, 0x4c76, 0x329, 0xd1a, 0x0, 0x1);
        gbc.writeMem(0x511b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4cd3);
        EXPECT(gbc.pc(), 0x511d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01CA
        gbc.setState(0x57c0, 0x5122, 0xf230, 0x76f7, 0xd78, 0x4b42, 0x0, 0x0);
        gbc.writeMem(0x57c0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5122);
        EXPECT(gbc.pc(), 0x57c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01CB
        gbc.setState(0x4bb6, 0xf8e5, 0x81c0, 0x7ef7, 0xe6f3, 0xf0a1, 0x1, 0x0);
        gbc.writeMem(0x4bb6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf8e5);
        EXPECT(gbc.pc(), 0x4bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01CD
        gbc.setState(0x1b06, 0xde4b, 0x22b0, 0xa164, 0x6659, 0x81bc, 0x1, 0x1);
        gbc.writeMem(0x1b06, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xde4b);
        EXPECT(gbc.pc(), 0x1b08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01CE
        gbc.setState(0xea64, 0x639f, 0x5e30, 0x3eb5, 0x867d, 0xb51e, 0x1, 0x1);
        gbc.writeMem(0xea64, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x639f);
        EXPECT(gbc.pc(), 0xea66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea64), 0xcb);
        EXPECT(gbc.readMem(0xea65), 0xb8);
        // CB B8 01CF
        gbc.setState(0x4ad8, 0xb880, 0x690, 0x226, 0x40f9, 0x198d, 0x0, 0x1);
        gbc.writeMem(0x4ad8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb880);
        EXPECT(gbc.pc(), 0x4ada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01D0
        gbc.setState(0x156a, 0x3b00, 0x4700, 0x1956, 0x3c98, 0x8961, 0x1, 0x1);
        gbc.writeMem(0x156a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3b00);
        EXPECT(gbc.pc(), 0x156c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01D1
        gbc.setState(0xcefc, 0x67df, 0xa5a0, 0x8ba7, 0xdd78, 0xc66e, 0x1, 0x0);
        gbc.writeMem(0xcefc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x67df);
        EXPECT(gbc.pc(), 0xcefe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefc), 0xcb);
        EXPECT(gbc.readMem(0xcefd), 0xb8);
        // CB B8 01D2
        gbc.setState(0x76d0, 0x5f57, 0x2060, 0x5fe6, 0x9ba5, 0x6da2, 0x1, 0x0);
        gbc.writeMem(0x76d0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5f57);
        EXPECT(gbc.pc(), 0x76d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01D3
        gbc.setState(0x79d5, 0x77f1, 0xa4c0, 0x9c89, 0x8885, 0x9c84, 0x1, 0x1);
        gbc.writeMem(0x79d5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x77f1);
        EXPECT(gbc.pc(), 0x79d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01D4
        gbc.setState(0x7d07, 0x14bd, 0x33a0, 0x3167, 0xf350, 0x557c, 0x1, 0x1);
        gbc.writeMem(0x7d07, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x14bd);
        EXPECT(gbc.pc(), 0x7d09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01D5
        gbc.setState(0x5040, 0xc348, 0xbe40, 0x613a, 0x705c, 0x7dfb, 0x0, 0x1);
        gbc.writeMem(0x5040, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc348);
        EXPECT(gbc.pc(), 0x5042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01D6
        gbc.setState(0x79b, 0x5fd2, 0x2f10, 0xd87c, 0x160b, 0xbf9f, 0x0, 0x0);
        gbc.writeMem(0x79b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5fd2);
        EXPECT(gbc.pc(), 0x79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01D7
        gbc.setState(0x9602, 0xa250, 0xb760, 0xf3e7, 0x39bd, 0xd31f, 0x1, 0x1);
        gbc.writeMem(0x9602, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa250);
        EXPECT(gbc.pc(), 0x9604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9602), 0xcb);
        EXPECT(gbc.readMem(0x9603), 0xb8);
        // CB B8 01D8
        gbc.setState(0x46c7, 0x94f9, 0xdb0, 0xdd0c, 0xa5d6, 0x80f1, 0x0, 0x0);
        gbc.writeMem(0x46c7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x94f9);
        EXPECT(gbc.pc(), 0x46c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01D9
        gbc.setState(0xef27, 0xa789, 0x7a90, 0x12eb, 0xb496, 0x52cf, 0x0, 0x1);
        gbc.writeMem(0xef27, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa789);
        EXPECT(gbc.pc(), 0xef29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef27), 0xcb);
        EXPECT(gbc.readMem(0xef28), 0xb8);
        // CB B8 01DB
        gbc.setState(0xaca2, 0xe46a, 0x8dd0, 0xa57a, 0x74b9, 0xe019, 0x0, 0x0);
        gbc.writeMem(0xaca2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe46a);
        EXPECT(gbc.pc(), 0xaca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaca2), 0xcb);
        EXPECT(gbc.readMem(0xaca3), 0xb8);
        // CB B8 01DD
        gbc.setState(0xd5bd, 0x1485, 0xca10, 0xd85e, 0xb8d9, 0x82a4, 0x0, 0x1);
        gbc.writeMem(0xd5bd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1485);
        EXPECT(gbc.pc(), 0xd5bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5bd), 0xcb);
        EXPECT(gbc.readMem(0xd5be), 0xb8);
        // CB B8 01DE
        gbc.setState(0x50ac, 0x45e9, 0x3dc0, 0x977c, 0x613a, 0x97fc, 0x0, 0x1);
        gbc.writeMem(0x50ac, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x45e9);
        EXPECT(gbc.pc(), 0x50ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01DF
        gbc.setState(0x719a, 0x4ecf, 0x3770, 0xa9b4, 0xe30c, 0x8467, 0x0, 0x1);
        gbc.writeMem(0x719a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4ecf);
        EXPECT(gbc.pc(), 0x719c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01E0
        gbc.setState(0x272a, 0xe6d8, 0x6c70, 0x665f, 0x9709, 0xeaaa, 0x1, 0x0);
        gbc.writeMem(0x272a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe6d8);
        EXPECT(gbc.pc(), 0x272c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01E1
        gbc.setState(0xac4c, 0x59, 0xb4e0, 0x4519, 0x36bb, 0x8234, 0x0, 0x0);
        gbc.writeMem(0xac4c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x59);
        EXPECT(gbc.pc(), 0xac4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac4c), 0xcb);
        EXPECT(gbc.readMem(0xac4d), 0xb8);
        // CB B8 01E2
        gbc.setState(0x2128, 0x1543, 0xc310, 0xdec3, 0x3e5c, 0xc9a3, 0x0, 0x0);
        gbc.writeMem(0x2128, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1543);
        EXPECT(gbc.pc(), 0x212a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01E3
        gbc.setState(0xb895, 0x278c, 0x4070, 0x40a9, 0xbf6b, 0x7c12, 0x1, 0x0);
        gbc.writeMem(0xb895, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x278c);
        EXPECT(gbc.pc(), 0xb897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb895), 0xcb);
        EXPECT(gbc.readMem(0xb896), 0xb8);
        // CB B8 01E4
        gbc.setState(0x12e6, 0x6db1, 0x5ab0, 0xcd58, 0x4101, 0xf466, 0x0, 0x1);
        gbc.writeMem(0x12e6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6db1);
        EXPECT(gbc.pc(), 0x12e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01E5
        gbc.setState(0x6f4a, 0xd67f, 0xc460, 0xa62f, 0x509a, 0x6623, 0x1, 0x1);
        gbc.writeMem(0x6f4a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd67f);
        EXPECT(gbc.pc(), 0x6f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01E6
        gbc.setState(0x863b, 0x4cb5, 0x8760, 0x7794, 0xed81, 0xd6a8, 0x0, 0x0);
        gbc.writeMem(0x863b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4cb5);
        EXPECT(gbc.pc(), 0x863d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x863b), 0xcb);
        EXPECT(gbc.readMem(0x863c), 0xb8);
        // CB B8 01E7
        gbc.setState(0x3d56, 0x396a, 0x4c40, 0x48f, 0x63ee, 0x2a3, 0x1, 0x0);
        gbc.writeMem(0x3d56, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x396a);
        EXPECT(gbc.pc(), 0x3d58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01E9
        gbc.setState(0xad7e, 0x5063, 0x26b0, 0x401c, 0x1df4, 0x5053, 0x0, 0x0);
        gbc.writeMem(0xad7e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5063);
        EXPECT(gbc.pc(), 0xad80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad7e), 0xcb);
        EXPECT(gbc.readMem(0xad7f), 0xb8);
        // CB B8 01EA
        gbc.setState(0x7141, 0x12c5, 0xf820, 0x101e, 0x5632, 0x3f04, 0x1, 0x1);
        gbc.writeMem(0x7141, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x12c5);
        EXPECT(gbc.pc(), 0x7143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01EB
        gbc.setState(0x9928, 0x7984, 0xbe30, 0x554a, 0xea23, 0x9ffb, 0x1, 0x0);
        gbc.writeMem(0x9928, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7984);
        EXPECT(gbc.pc(), 0x992a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9928), 0xcb);
        EXPECT(gbc.readMem(0x9929), 0xb8);
        // CB B8 01ED
        gbc.setState(0xc1bc, 0xa506, 0xa8f0, 0xaae1, 0x5d7a, 0xeaa6, 0x1, 0x1);
        gbc.writeMem(0xc1bc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa506);
        EXPECT(gbc.pc(), 0xc1be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1bc), 0xcb);
        EXPECT(gbc.readMem(0xc1bd), 0xb8);
        // CB B8 01EE
        gbc.setState(0x82d3, 0x5072, 0xb700, 0x11b1, 0x6f1, 0xb4c1, 0x0, 0x0);
        gbc.writeMem(0x82d3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5072);
        EXPECT(gbc.pc(), 0x82d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d3), 0xcb);
        EXPECT(gbc.readMem(0x82d4), 0xb8);
        // CB B8 01EF
        gbc.setState(0xa29f, 0x8c15, 0x5c30, 0xa4ab, 0xb538, 0xd6c8, 0x1, 0x1);
        gbc.writeMem(0xa29f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8c15);
        EXPECT(gbc.pc(), 0xa2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa29f), 0xcb);
        EXPECT(gbc.readMem(0xa2a0), 0xb8);
        // CB B8 01F0
        gbc.setState(0x7fa3, 0xaead, 0xec30, 0x5112, 0xb458, 0x2c7f, 0x1, 0x0);
        gbc.writeMem(0x7fa3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xaead);
        EXPECT(gbc.pc(), 0x7fa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01F1
        gbc.setState(0xb4ae, 0x9616, 0xc180, 0x52de, 0x9e23, 0x1ff9, 0x1, 0x1);
        gbc.writeMem(0xb4ae, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9616);
        EXPECT(gbc.pc(), 0xb4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ae), 0xcb);
        EXPECT(gbc.readMem(0xb4af), 0xb8);
        // CB B8 01F2
        gbc.setState(0x1f3c, 0x7bb0, 0x4f0, 0x6f9f, 0xc685, 0x68b, 0x0, 0x1);
        gbc.writeMem(0x1f3c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7bb0);
        EXPECT(gbc.pc(), 0x1f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01F3
        gbc.setState(0xda91, 0x9685, 0x94a0, 0xd79a, 0xb225, 0x3953, 0x1, 0x0);
        gbc.writeMem(0xda91, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9685);
        EXPECT(gbc.pc(), 0xda93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda91), 0xcb);
        EXPECT(gbc.readMem(0xda92), 0xb8);
        // CB B8 01F4
        gbc.setState(0xa568, 0xf9be, 0x31b0, 0xa300, 0xfde4, 0x67d, 0x1, 0x1);
        gbc.writeMem(0xa568, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf9be);
        EXPECT(gbc.pc(), 0xa56a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa568), 0xcb);
        EXPECT(gbc.readMem(0xa569), 0xb8);
        // CB B8 01F5
        gbc.setState(0x1c88, 0x213f, 0x6fc0, 0x4ee9, 0x70dc, 0x65df, 0x1, 0x0);
        gbc.writeMem(0x1c88, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x213f);
        EXPECT(gbc.pc(), 0x1c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01F6
        gbc.setState(0xd6dd, 0x9a2d, 0x1ef0, 0x2744, 0x9a16, 0xd04e, 0x1, 0x0);
        gbc.writeMem(0xd6dd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9a2d);
        EXPECT(gbc.pc(), 0xd6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6dd), 0xcb);
        EXPECT(gbc.readMem(0xd6de), 0xb8);
        // CB B8 01F7
        gbc.setState(0x676b, 0xac2d, 0x87e0, 0xa568, 0xabeb, 0xa0fa, 0x0, 0x1);
        gbc.writeMem(0x676b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xac2d);
        EXPECT(gbc.pc(), 0x676d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01F8
        gbc.setState(0x8ace, 0xe73c, 0x2660, 0xa6a4, 0x42f4, 0x9a4f, 0x0, 0x1);
        gbc.writeMem(0x8ace, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe73c);
        EXPECT(gbc.pc(), 0x8ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ace), 0xcb);
        EXPECT(gbc.readMem(0x8acf), 0xb8);
        // CB B8 01FA
        gbc.setState(0x9893, 0xb84b, 0xa380, 0x5a0a, 0xc63e, 0xfecd, 0x1, 0x1);
        gbc.writeMem(0x9893, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb84b);
        EXPECT(gbc.pc(), 0x9895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9893), 0xcb);
        EXPECT(gbc.readMem(0x9894), 0xb8);
        // CB B8 01FB
        gbc.setState(0x7526, 0xdb88, 0xe690, 0xbdff, 0xe212, 0xb96f, 0x1, 0x0);
        gbc.writeMem(0x7526, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdb88);
        EXPECT(gbc.pc(), 0x7528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 01FC
        gbc.setState(0xb84a, 0xa1e4, 0xfa60, 0x4231, 0x853d, 0x3773, 0x0, 0x1);
        gbc.writeMem(0xb84a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa1e4);
        EXPECT(gbc.pc(), 0xb84c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb84a), 0xcb);
        EXPECT(gbc.readMem(0xb84b), 0xb8);
        // CB B8 01FD
        gbc.setState(0x5507, 0x3cc7, 0x12a0, 0xedb8, 0xe163, 0x3b07, 0x1, 0x1);
        gbc.writeMem(0x5507, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3cc7);
        EXPECT(gbc.pc(), 0x5509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 01FE
        gbc.setState(0xe43f, 0x770b, 0xe270, 0x712d, 0xca0e, 0x3c3, 0x1, 0x0);
        gbc.writeMem(0xe43f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x770b);
        EXPECT(gbc.pc(), 0xe441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe43f), 0xcb);
        EXPECT(gbc.readMem(0xe440), 0xb8);
        // CB B8 01FF
        gbc.setState(0x78eb, 0x47d, 0xa270, 0xb542, 0x1aa5, 0xc053, 0x0, 0x1);
        gbc.writeMem(0x78eb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x47d);
        EXPECT(gbc.pc(), 0x78ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0200
        gbc.setState(0xb2e4, 0xa2ee, 0xfc70, 0xbd1b, 0x3216, 0x2332, 0x1, 0x1);
        gbc.writeMem(0xb2e4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa2ee);
        EXPECT(gbc.pc(), 0xb2e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2e4), 0xcb);
        EXPECT(gbc.readMem(0xb2e5), 0xb8);
        // CB B8 0201
        gbc.setState(0x278b, 0xf870, 0x2350, 0xea4e, 0x735e, 0xf044, 0x1, 0x1);
        gbc.writeMem(0x278b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf870);
        EXPECT(gbc.pc(), 0x278d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0202
        gbc.setState(0xded6, 0x9b26, 0xd5a0, 0x6ef5, 0x96eb, 0xb07a, 0x1, 0x1);
        gbc.writeMem(0xded6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9b26);
        EXPECT(gbc.pc(), 0xded8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xded6), 0xcb);
        EXPECT(gbc.readMem(0xded7), 0xb8);
        // CB B8 0203
        gbc.setState(0x74ed, 0xaba8, 0xe1f0, 0x1700, 0xf2a7, 0x7062, 0x0, 0x1);
        gbc.writeMem(0x74ed, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xaba8);
        EXPECT(gbc.pc(), 0x74ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0204
        gbc.setState(0x3c69, 0x94f5, 0xa7c0, 0x1d, 0x786f, 0x9a07, 0x0, 0x0);
        gbc.writeMem(0x3c69, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x94f5);
        EXPECT(gbc.pc(), 0x3c6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0205
        gbc.setState(0x413f, 0xb594, 0x72d0, 0x8295, 0xcc29, 0x5afe, 0x1, 0x1);
        gbc.writeMem(0x413f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb594);
        EXPECT(gbc.pc(), 0x4141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0206
        gbc.setState(0xd627, 0xc06, 0xea10, 0x43ae, 0x3d18, 0xe247, 0x1, 0x1);
        gbc.writeMem(0xd627, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc06);
        EXPECT(gbc.pc(), 0xd629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd627), 0xcb);
        EXPECT(gbc.readMem(0xd628), 0xb8);
        // CB B8 0207
        gbc.setState(0xaeb7, 0xda80, 0xb560, 0xed27, 0xf211, 0xa5e, 0x0, 0x1);
        gbc.writeMem(0xaeb7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xda80);
        EXPECT(gbc.pc(), 0xaeb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb7), 0xcb);
        EXPECT(gbc.readMem(0xaeb8), 0xb8);
        // CB B8 0208
        gbc.setState(0xe183, 0x7efd, 0xf720, 0x5978, 0x7c95, 0x1da, 0x1, 0x0);
        gbc.writeMem(0xe183, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7efd);
        EXPECT(gbc.pc(), 0xe185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe183), 0xcb);
        EXPECT(gbc.readMem(0xe184), 0xb8);
        // CB B8 0209
        gbc.setState(0x5608, 0x5fcb, 0x36f0, 0x4109, 0x9157, 0x526e, 0x0, 0x1);
        gbc.writeMem(0x5608, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5fcb);
        EXPECT(gbc.pc(), 0x560a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 020A
        gbc.setState(0x55ff, 0x844, 0xa780, 0xf097, 0xd37e, 0xd302, 0x1, 0x1);
        gbc.writeMem(0x55ff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x844);
        EXPECT(gbc.pc(), 0x5601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 020B
        gbc.setState(0xc621, 0x8abe, 0xace0, 0xb196, 0x1afd, 0x56b0, 0x0, 0x0);
        gbc.writeMem(0xc621, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8abe);
        EXPECT(gbc.pc(), 0xc623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc621), 0xcb);
        EXPECT(gbc.readMem(0xc622), 0xb8);
        // CB B8 020C
        gbc.setState(0x673d, 0x1d0d, 0xba80, 0x6876, 0x2c47, 0x109, 0x1, 0x0);
        gbc.writeMem(0x673d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1d0d);
        EXPECT(gbc.pc(), 0x673f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 020D
        gbc.setState(0x3395, 0xc883, 0xa430, 0x7f17, 0x175, 0x9aa6, 0x1, 0x0);
        gbc.writeMem(0x3395, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc883);
        EXPECT(gbc.pc(), 0x3397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 020E
        gbc.setState(0x9cad, 0x2380, 0xc7d0, 0xc2c7, 0x1c57, 0x7387, 0x1, 0x1);
        gbc.writeMem(0x9cad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2380);
        EXPECT(gbc.pc(), 0x9caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cad), 0xcb);
        EXPECT(gbc.readMem(0x9cae), 0xb8);
        // CB B8 020F
        gbc.setState(0xa324, 0x35cf, 0x4f70, 0xc7db, 0xece5, 0x9f85, 0x1, 0x1);
        gbc.writeMem(0xa324, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x35cf);
        EXPECT(gbc.pc(), 0xa326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa324), 0xcb);
        EXPECT(gbc.readMem(0xa325), 0xb8);
        // CB B8 0210
        gbc.setState(0x1b35, 0xf81e, 0x76d0, 0xac51, 0xbec1, 0xf5db, 0x0, 0x1);
        gbc.writeMem(0x1b35, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf81e);
        EXPECT(gbc.pc(), 0x1b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0211
        gbc.setState(0x6b50, 0xbab9, 0x4ad0, 0xdd8c, 0x15d3, 0xfef1, 0x1, 0x1);
        gbc.writeMem(0x6b50, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbab9);
        EXPECT(gbc.pc(), 0x6b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0212
        gbc.setState(0x2864, 0xc3b0, 0xa5b0, 0x9a51, 0x2f0d, 0xc55, 0x1, 0x1);
        gbc.writeMem(0x2864, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc3b0);
        EXPECT(gbc.pc(), 0x2866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0213
        gbc.setState(0x71d2, 0x8b32, 0x6de0, 0xbc7a, 0x2b38, 0x46bc, 0x1, 0x1);
        gbc.writeMem(0x71d2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8b32);
        EXPECT(gbc.pc(), 0x71d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0214
        gbc.setState(0x96ad, 0xce45, 0x87f0, 0x3e4a, 0xff0e, 0x52ae, 0x0, 0x1);
        gbc.writeMem(0x96ad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xce45);
        EXPECT(gbc.pc(), 0x96af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ad), 0xcb);
        EXPECT(gbc.readMem(0x96ae), 0xb8);
        // CB B8 0215
        gbc.setState(0x7e8c, 0xa447, 0x29f0, 0x26d2, 0x6577, 0xd2a4, 0x0, 0x0);
        gbc.writeMem(0x7e8c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa447);
        EXPECT(gbc.pc(), 0x7e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0216
        gbc.setState(0x34b9, 0x29b7, 0xe950, 0x1cad, 0x10de, 0x9579, 0x0, 0x0);
        gbc.writeMem(0x34b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x29b7);
        EXPECT(gbc.pc(), 0x34bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0217
        gbc.setState(0x1958, 0xe09b, 0xff80, 0x3c73, 0x14a0, 0x26df, 0x1, 0x0);
        gbc.writeMem(0x1958, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe09b);
        EXPECT(gbc.pc(), 0x195a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0218
        gbc.setState(0xed86, 0xefef, 0xd5f0, 0x6859, 0x7c80, 0xdc83, 0x0, 0x1);
        gbc.writeMem(0xed86, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xefef);
        EXPECT(gbc.pc(), 0xed88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed86), 0xcb);
        EXPECT(gbc.readMem(0xed87), 0xb8);
        // CB B8 0219
        gbc.setState(0x8603, 0x2994, 0xfef0, 0xd9c9, 0x6a2d, 0xe7cf, 0x0, 0x1);
        gbc.writeMem(0x8603, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2994);
        EXPECT(gbc.pc(), 0x8605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8603), 0xcb);
        EXPECT(gbc.readMem(0x8604), 0xb8);
        // CB B8 021A
        gbc.setState(0x4e02, 0x3740, 0xbde0, 0x41c7, 0x372d, 0xc720, 0x0, 0x1);
        gbc.writeMem(0x4e02, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3740);
        EXPECT(gbc.pc(), 0x4e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 021B
        gbc.setState(0xce83, 0x6cbc, 0x1ee0, 0xdc82, 0x72cb, 0xef2e, 0x0, 0x0);
        gbc.writeMem(0xce83, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6cbc);
        EXPECT(gbc.pc(), 0xce85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce83), 0xcb);
        EXPECT(gbc.readMem(0xce84), 0xb8);
        // CB B8 021C
        gbc.setState(0x8773, 0x345a, 0x5610, 0xa4ca, 0xf93f, 0x261f, 0x0, 0x0);
        gbc.writeMem(0x8773, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x345a);
        EXPECT(gbc.pc(), 0x8775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8773), 0xcb);
        EXPECT(gbc.readMem(0x8774), 0xb8);
        // CB B8 021D
        gbc.setState(0x18ce, 0xb167, 0xebd0, 0x8105, 0x5d1e, 0x5ae1, 0x1, 0x0);
        gbc.writeMem(0x18ce, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb167);
        EXPECT(gbc.pc(), 0x18d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 021E
        gbc.setState(0xdbe3, 0xfdea, 0x6ef0, 0xf9ef, 0x34bf, 0xa142, 0x0, 0x0);
        gbc.writeMem(0xdbe3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfdea);
        EXPECT(gbc.pc(), 0xdbe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe3), 0xcb);
        EXPECT(gbc.readMem(0xdbe4), 0xb8);
        // CB B8 021F
        gbc.setState(0xb4d0, 0x30a5, 0xe540, 0xd9d3, 0x1c89, 0x6149, 0x1, 0x1);
        gbc.writeMem(0xb4d0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x30a5);
        EXPECT(gbc.pc(), 0xb4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4d0), 0xcb);
        EXPECT(gbc.readMem(0xb4d1), 0xb8);
        // CB B8 0220
        gbc.setState(0xa99f, 0x8e18, 0xb20, 0x1095, 0xe41f, 0x797, 0x0, 0x1);
        gbc.writeMem(0xa99f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8e18);
        EXPECT(gbc.pc(), 0xa9a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99f), 0xcb);
        EXPECT(gbc.readMem(0xa9a0), 0xb8);
        // CB B8 0221
        gbc.setState(0xa652, 0x8c03, 0xd650, 0x2c52, 0x1ac4, 0xaa5d, 0x0, 0x1);
        gbc.writeMem(0xa652, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8c03);
        EXPECT(gbc.pc(), 0xa654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa652), 0xcb);
        EXPECT(gbc.readMem(0xa653), 0xb8);
        // CB B8 0222
        gbc.setState(0xd618, 0xf477, 0x4f60, 0x1272, 0xb0aa, 0xe5a2, 0x0, 0x1);
        gbc.writeMem(0xd618, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf477);
        EXPECT(gbc.pc(), 0xd61a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd618), 0xcb);
        EXPECT(gbc.readMem(0xd619), 0xb8);
        // CB B8 0223
        gbc.setState(0xd569, 0xe5d9, 0xfd00, 0xc6d2, 0x8ef0, 0xf08e, 0x0, 0x0);
        gbc.writeMem(0xd569, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe5d9);
        EXPECT(gbc.pc(), 0xd56b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd569), 0xcb);
        EXPECT(gbc.readMem(0xd56a), 0xb8);
        // CB B8 0224
        gbc.setState(0xc1fb, 0x281c, 0x4bf0, 0x4f5b, 0xc478, 0x2cb1, 0x1, 0x1);
        gbc.writeMem(0xc1fb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x281c);
        EXPECT(gbc.pc(), 0xc1fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1fb), 0xcb);
        EXPECT(gbc.readMem(0xc1fc), 0xb8);
        // CB B8 0225
        gbc.setState(0x2e64, 0xf46b, 0x8f60, 0x6b46, 0x887c, 0xae79, 0x0, 0x1);
        gbc.writeMem(0x2e64, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf46b);
        EXPECT(gbc.pc(), 0x2e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0226
        gbc.setState(0x84e4, 0xa4c4, 0xc7b0, 0xae09, 0x8f6c, 0x48bb, 0x1, 0x0);
        gbc.writeMem(0x84e4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa4c4);
        EXPECT(gbc.pc(), 0x84e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e4), 0xcb);
        EXPECT(gbc.readMem(0x84e5), 0xb8);
        // CB B8 0228
        gbc.setState(0xe2de, 0xa7d7, 0x3e70, 0x430, 0x574, 0xf681, 0x0, 0x1);
        gbc.writeMem(0xe2de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa7d7);
        EXPECT(gbc.pc(), 0xe2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2de), 0xcb);
        EXPECT(gbc.readMem(0xe2df), 0xb8);
        // CB B8 0229
        gbc.setState(0x7760, 0x2d57, 0x410, 0xf412, 0x3f5b, 0x8bb0, 0x0, 0x0);
        gbc.writeMem(0x7760, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2d57);
        EXPECT(gbc.pc(), 0x7762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 022A
        gbc.setState(0xe6e3, 0xf1b5, 0x2ac0, 0xf0f3, 0xd787, 0xb203, 0x1, 0x1);
        gbc.writeMem(0xe6e3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf1b5);
        EXPECT(gbc.pc(), 0xe6e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e3), 0xcb);
        EXPECT(gbc.readMem(0xe6e4), 0xb8);
        // CB B8 022B
        gbc.setState(0xd55c, 0xe569, 0xf9c0, 0x6875, 0x2556, 0x8629, 0x0, 0x1);
        gbc.writeMem(0xd55c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe569);
        EXPECT(gbc.pc(), 0xd55e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd55c), 0xcb);
        EXPECT(gbc.readMem(0xd55d), 0xb8);
        // CB B8 022D
        gbc.setState(0xec6c, 0xf9cd, 0x7480, 0x57a4, 0xeb89, 0x51f, 0x0, 0x0);
        gbc.writeMem(0xec6c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf9cd);
        EXPECT(gbc.pc(), 0xec6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec6c), 0xcb);
        EXPECT(gbc.readMem(0xec6d), 0xb8);
        // CB B8 022F
        gbc.setState(0x1b8c, 0x8da, 0x9f60, 0x1235, 0x2477, 0xff24, 0x0, 0x1);
        gbc.writeMem(0x1b8c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8da);
        EXPECT(gbc.pc(), 0x1b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0230
        gbc.setState(0x320f, 0xd46e, 0x6af0, 0x9a94, 0x6ca1, 0x857a, 0x1, 0x1);
        gbc.writeMem(0x320f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd46e);
        EXPECT(gbc.pc(), 0x3211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0231
        gbc.setState(0x1f79, 0xef5f, 0xfb50, 0x6422, 0xc6e1, 0x9343, 0x0, 0x0);
        gbc.writeMem(0x1f79, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xef5f);
        EXPECT(gbc.pc(), 0x1f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0232
        gbc.setState(0xe2a5, 0xbd0e, 0x4fc0, 0x2050, 0xe133, 0x8d05, 0x0, 0x0);
        gbc.writeMem(0xe2a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbd0e);
        EXPECT(gbc.pc(), 0xe2a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a5), 0xcb);
        EXPECT(gbc.readMem(0xe2a6), 0xb8);
        // CB B8 0234
        gbc.setState(0xb315, 0x51fc, 0xcd90, 0x3998, 0x9a50, 0x196b, 0x0, 0x1);
        gbc.writeMem(0xb315, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x51fc);
        EXPECT(gbc.pc(), 0xb317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb315), 0xcb);
        EXPECT(gbc.readMem(0xb316), 0xb8);
        // CB B8 0235
        gbc.setState(0xad1b, 0xf9c0, 0xd420, 0xcbfb, 0x83d0, 0xf4e, 0x1, 0x1);
        gbc.writeMem(0xad1b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf9c0);
        EXPECT(gbc.pc(), 0xad1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad1b), 0xcb);
        EXPECT(gbc.readMem(0xad1c), 0xb8);
        // CB B8 0236
        gbc.setState(0x4d8d, 0x7d1c, 0xb6b0, 0x8d6c, 0x63c, 0x628e, 0x0, 0x0);
        gbc.writeMem(0x4d8d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7d1c);
        EXPECT(gbc.pc(), 0x4d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0237
        gbc.setState(0x9729, 0x22e5, 0xb020, 0x1c8b, 0x41a0, 0x8204, 0x0, 0x0);
        gbc.writeMem(0x9729, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x22e5);
        EXPECT(gbc.pc(), 0x972b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9729), 0xcb);
        EXPECT(gbc.readMem(0x972a), 0xb8);
        // CB B8 0238
        gbc.setState(0xd687, 0xa12c, 0xd1c0, 0x5686, 0xbd1d, 0x822e, 0x1, 0x0);
        gbc.writeMem(0xd687, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa12c);
        EXPECT(gbc.pc(), 0xd689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd687), 0xcb);
        EXPECT(gbc.readMem(0xd688), 0xb8);
        // CB B8 0239
        gbc.setState(0x25c4, 0x4265, 0xd0, 0x63b0, 0xf652, 0x94ce, 0x0, 0x1);
        gbc.writeMem(0x25c4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4265);
        EXPECT(gbc.pc(), 0x25c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 023C
        gbc.setState(0xd1ad, 0x8d41, 0xaf90, 0xfca5, 0x556d, 0x7d2f, 0x1, 0x0);
        gbc.writeMem(0xd1ad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8d41);
        EXPECT(gbc.pc(), 0xd1af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ad), 0xcb);
        EXPECT(gbc.readMem(0xd1ae), 0xb8);
        // CB B8 023D
        gbc.setState(0xed83, 0x9716, 0x47a0, 0xed8e, 0x6335, 0xf734, 0x0, 0x0);
        gbc.writeMem(0xed83, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9716);
        EXPECT(gbc.pc(), 0xed85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed83), 0xcb);
        EXPECT(gbc.readMem(0xed84), 0xb8);
        // CB B8 023E
        gbc.setState(0xd05f, 0x3d5a, 0x32f0, 0x39cf, 0x35f8, 0xf01a, 0x1, 0x1);
        gbc.writeMem(0xd05f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3d5a);
        EXPECT(gbc.pc(), 0xd061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd05f), 0xcb);
        EXPECT(gbc.readMem(0xd060), 0xb8);
        // CB B8 023F
        gbc.setState(0xe3a9, 0xa432, 0xdcd0, 0xe02d, 0xd0f4, 0x6f6f, 0x1, 0x0);
        gbc.writeMem(0xe3a9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa432);
        EXPECT(gbc.pc(), 0xe3ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3a9), 0xcb);
        EXPECT(gbc.readMem(0xe3aa), 0xb8);
        // CB B8 0240
        gbc.setState(0xeedb, 0xf2c8, 0x1320, 0x97e1, 0x5276, 0x62b2, 0x0, 0x1);
        gbc.writeMem(0xeedb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf2c8);
        EXPECT(gbc.pc(), 0xeedd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeedb), 0xcb);
        EXPECT(gbc.readMem(0xeedc), 0xb8);
        // CB B8 0241
        gbc.setState(0x44c6, 0xe78f, 0x3f0, 0x7f21, 0x669b, 0x562c, 0x0, 0x0);
        gbc.writeMem(0x44c6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe78f);
        EXPECT(gbc.pc(), 0x44c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0242
        gbc.setState(0xdbef, 0xdbf6, 0xc810, 0x3b25, 0x611e, 0x269, 0x1, 0x0);
        gbc.writeMem(0xdbef, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdbf6);
        EXPECT(gbc.pc(), 0xdbf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbef), 0xcb);
        EXPECT(gbc.readMem(0xdbf0), 0xb8);
        // CB B8 0243
        gbc.setState(0x1def, 0xa85, 0xaac0, 0x42f5, 0xf31a, 0xfad4, 0x1, 0x1);
        gbc.writeMem(0x1def, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa85);
        EXPECT(gbc.pc(), 0x1df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0244
        gbc.setState(0x4a1d, 0x7d3e, 0x2cd0, 0x33c9, 0x90a1, 0x7bab, 0x0, 0x1);
        gbc.writeMem(0x4a1d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7d3e);
        EXPECT(gbc.pc(), 0x4a1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0246
        gbc.setState(0x6264, 0x6c50, 0xb7a0, 0x950, 0x3131, 0xad5c, 0x0, 0x1);
        gbc.writeMem(0x6264, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6c50);
        EXPECT(gbc.pc(), 0x6266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0247
        gbc.setState(0x7d94, 0xef52, 0x8c60, 0x110f, 0xa589, 0xb27c, 0x0, 0x0);
        gbc.writeMem(0x7d94, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xef52);
        EXPECT(gbc.pc(), 0x7d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0249
        gbc.setState(0x82d4, 0xddfa, 0x8d10, 0xab27, 0xcb46, 0x6bd7, 0x0, 0x1);
        gbc.writeMem(0x82d4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xddfa);
        EXPECT(gbc.pc(), 0x82d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d4), 0xcb);
        EXPECT(gbc.readMem(0x82d5), 0xb8);
        // CB B8 024A
        gbc.setState(0xa67a, 0x3062, 0xe350, 0x8eb1, 0xd471, 0xd49c, 0x0, 0x1);
        gbc.writeMem(0xa67a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3062);
        EXPECT(gbc.pc(), 0xa67c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67a), 0xcb);
        EXPECT(gbc.readMem(0xa67b), 0xb8);
        // CB B8 024C
        gbc.setState(0xc58, 0x8891, 0xa660, 0x9d50, 0xc34e, 0x2819, 0x0, 0x1);
        gbc.writeMem(0xc58, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8891);
        EXPECT(gbc.pc(), 0xc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 024D
        gbc.setState(0xbb19, 0x3952, 0xdbe0, 0x5f8d, 0x3da0, 0xc72, 0x0, 0x0);
        gbc.writeMem(0xbb19, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3952);
        EXPECT(gbc.pc(), 0xbb1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb19), 0xcb);
        EXPECT(gbc.readMem(0xbb1a), 0xb8);
        // CB B8 024E
        gbc.setState(0x4c7c, 0x462, 0x2740, 0xa6a0, 0x51c0, 0xfdf2, 0x0, 0x1);
        gbc.writeMem(0x4c7c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x462);
        EXPECT(gbc.pc(), 0x4c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0250
        gbc.setState(0x84, 0xf68e, 0xe920, 0x46f7, 0xec9d, 0xaf0a, 0x1, 0x1);
        gbc.writeMem(0x84, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf68e);
        EXPECT(gbc.pc(), 0x86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0251
        gbc.setState(0x98d9, 0x1355, 0xc1b0, 0x7668, 0xbe56, 0x70ca, 0x1, 0x0);
        gbc.writeMem(0x98d9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1355);
        EXPECT(gbc.pc(), 0x98db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d9), 0xcb);
        EXPECT(gbc.readMem(0x98da), 0xb8);
        // CB B8 0252
        gbc.setState(0x3840, 0x845a, 0xda20, 0x9c35, 0x6c6, 0xaab2, 0x0, 0x0);
        gbc.writeMem(0x3840, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x845a);
        EXPECT(gbc.pc(), 0x3842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0253
        gbc.setState(0xd42e, 0x4a84, 0x3010, 0x9ab0, 0xbec6, 0x83bc, 0x0, 0x0);
        gbc.writeMem(0xd42e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4a84);
        EXPECT(gbc.pc(), 0xd430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd42e), 0xcb);
        EXPECT(gbc.readMem(0xd42f), 0xb8);
        // CB B8 0254
        gbc.setState(0x5e2f, 0x6bb1, 0xd080, 0x3a1a, 0x6838, 0xdf4b, 0x1, 0x0);
        gbc.writeMem(0x5e2f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6bb1);
        EXPECT(gbc.pc(), 0x5e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0255
        gbc.setState(0xcb7c, 0x8e32, 0xc0f0, 0xa16d, 0x2aa3, 0x5b1f, 0x1, 0x0);
        gbc.writeMem(0xcb7c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8e32);
        EXPECT(gbc.pc(), 0xcb7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb7c), 0xcb);
        EXPECT(gbc.readMem(0xcb7d), 0xb8);
        // CB B8 0257
        gbc.setState(0x5711, 0x296e, 0x6e90, 0xb582, 0xa3a5, 0x4099, 0x0, 0x0);
        gbc.writeMem(0x5711, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x296e);
        EXPECT(gbc.pc(), 0x5713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0258
        gbc.setState(0xacd9, 0x54c3, 0x5ca0, 0x4ee8, 0xa17e, 0xd0c5, 0x1, 0x1);
        gbc.writeMem(0xacd9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x54c3);
        EXPECT(gbc.pc(), 0xacdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacd9), 0xcb);
        EXPECT(gbc.readMem(0xacda), 0xb8);
        // CB B8 025A
        gbc.setState(0x7f18, 0x84d9, 0x5990, 0x437a, 0x5226, 0x4a10, 0x1, 0x1);
        gbc.writeMem(0x7f18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x84d9);
        EXPECT(gbc.pc(), 0x7f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 025B
        gbc.setState(0x1f9f, 0x3ba3, 0x1790, 0xaa61, 0xc143, 0xacee, 0x0, 0x0);
        gbc.writeMem(0x1f9f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3ba3);
        EXPECT(gbc.pc(), 0x1fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 025D
        gbc.setState(0x7e57, 0x209f, 0xe320, 0x362b, 0xd60b, 0x6aa4, 0x0, 0x1);
        gbc.writeMem(0x7e57, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x209f);
        EXPECT(gbc.pc(), 0x7e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 025E
        gbc.setState(0xbce1, 0x3ee5, 0x3f00, 0x6329, 0xc465, 0x7edd, 0x0, 0x1);
        gbc.writeMem(0xbce1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3ee5);
        EXPECT(gbc.pc(), 0xbce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce1), 0xcb);
        EXPECT(gbc.readMem(0xbce2), 0xb8);
        // CB B8 025F
        gbc.setState(0x3ce6, 0xcc15, 0x5280, 0xb971, 0x5c43, 0x4a15, 0x0, 0x1);
        gbc.writeMem(0x3ce6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcc15);
        EXPECT(gbc.pc(), 0x3ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0260
        gbc.setState(0x3aab, 0x4a7e, 0xcc50, 0xca8d, 0x1b00, 0xb281, 0x0, 0x1);
        gbc.writeMem(0x3aab, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4a7e);
        EXPECT(gbc.pc(), 0x3aad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0261
        gbc.setState(0x877b, 0xeb87, 0x13c0, 0xcc35, 0x8362, 0xc394, 0x0, 0x1);
        gbc.writeMem(0x877b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xeb87);
        EXPECT(gbc.pc(), 0x877d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877b), 0xcb);
        EXPECT(gbc.readMem(0x877c), 0xb8);
        // CB B8 0262
        gbc.setState(0x6180, 0xba5e, 0x5ce0, 0x808b, 0x1b39, 0xf895, 0x1, 0x0);
        gbc.writeMem(0x6180, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xba5e);
        EXPECT(gbc.pc(), 0x6182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0264
        gbc.setState(0xbf45, 0xb5d3, 0x2990, 0xdcea, 0xd45a, 0x403a, 0x1, 0x1);
        gbc.writeMem(0xbf45, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb5d3);
        EXPECT(gbc.pc(), 0xbf47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf45), 0xcb);
        EXPECT(gbc.readMem(0xbf46), 0xb8);
        // CB B8 0265
        gbc.setState(0x1407, 0x9e3c, 0x2660, 0x9037, 0x6d0, 0xb04c, 0x1, 0x1);
        gbc.writeMem(0x1407, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9e3c);
        EXPECT(gbc.pc(), 0x1409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0266
        gbc.setState(0x67b9, 0x9385, 0x4890, 0x853, 0xfdac, 0x3381, 0x0, 0x1);
        gbc.writeMem(0x67b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9385);
        EXPECT(gbc.pc(), 0x67bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0267
        gbc.setState(0x9d8e, 0x3d10, 0xb730, 0x8c2b, 0x693e, 0x30a0, 0x1, 0x0);
        gbc.writeMem(0x9d8e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3d10);
        EXPECT(gbc.pc(), 0x9d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d8e), 0xcb);
        EXPECT(gbc.readMem(0x9d8f), 0xb8);
        // CB B8 0268
        gbc.setState(0xe034, 0x444e, 0xac40, 0x5e78, 0xaa88, 0x9ff0, 0x1, 0x1);
        gbc.writeMem(0xe034, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x444e);
        EXPECT(gbc.pc(), 0xe036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe034), 0xcb);
        EXPECT(gbc.readMem(0xe035), 0xb8);
        // CB B8 0269
        gbc.setState(0x5a18, 0xa3b3, 0xacd0, 0x4d6c, 0x4a39, 0x1ae5, 0x1, 0x0);
        gbc.writeMem(0x5a18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa3b3);
        EXPECT(gbc.pc(), 0x5a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 026A
        gbc.setState(0xd4fa, 0x5185, 0x2de0, 0x18e1, 0x78f1, 0x6106, 0x0, 0x0);
        gbc.writeMem(0xd4fa, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5185);
        EXPECT(gbc.pc(), 0xd4fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fa), 0xcb);
        EXPECT(gbc.readMem(0xd4fb), 0xb8);
        // CB B8 026B
        gbc.setState(0x4b77, 0x62eb, 0xa540, 0x61a8, 0x8ea4, 0x800e, 0x0, 0x1);
        gbc.writeMem(0x4b77, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x62eb);
        EXPECT(gbc.pc(), 0x4b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 026C
        gbc.setState(0x6575, 0x8f86, 0x3fe0, 0xb700, 0xea57, 0xd976, 0x0, 0x0);
        gbc.writeMem(0x6575, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8f86);
        EXPECT(gbc.pc(), 0x6577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 026D
        gbc.setState(0x36a7, 0xdfd2, 0xf730, 0x6cde, 0x8369, 0x8310, 0x1, 0x1);
        gbc.writeMem(0x36a7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdfd2);
        EXPECT(gbc.pc(), 0x36a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 026F
        gbc.setState(0xb419, 0xcf57, 0x4d80, 0x347b, 0x8e30, 0x48af, 0x1, 0x1);
        gbc.writeMem(0xb419, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xcf57);
        EXPECT(gbc.pc(), 0xb41b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb419), 0xcb);
        EXPECT(gbc.readMem(0xb41a), 0xb8);
        // CB B8 0270
        gbc.setState(0x25fd, 0x8c08, 0xd880, 0x7881, 0x325c, 0xb7f5, 0x0, 0x1);
        gbc.writeMem(0x25fd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8c08);
        EXPECT(gbc.pc(), 0x25ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0272
        gbc.setState(0xc9c1, 0x3820, 0x1790, 0xed50, 0xb867, 0x43a5, 0x0, 0x1);
        gbc.writeMem(0xc9c1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3820);
        EXPECT(gbc.pc(), 0xc9c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c1), 0xcb);
        EXPECT(gbc.readMem(0xc9c2), 0xb8);
        // CB B8 0273
        gbc.setState(0x861b, 0xc1c0, 0x7f50, 0xf001, 0x53e4, 0x2485, 0x0, 0x0);
        gbc.writeMem(0x861b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc1c0);
        EXPECT(gbc.pc(), 0x861d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x861b), 0xcb);
        EXPECT(gbc.readMem(0x861c), 0xb8);
        // CB B8 0274
        gbc.setState(0x6f38, 0x3295, 0x7470, 0xcc16, 0x9c38, 0x794, 0x1, 0x0);
        gbc.writeMem(0x6f38, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3295);
        EXPECT(gbc.pc(), 0x6f3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0275
        gbc.setState(0x17cc, 0xd414, 0x73d0, 0xb043, 0xa9a4, 0xa5db, 0x1, 0x0);
        gbc.writeMem(0x17cc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd414);
        EXPECT(gbc.pc(), 0x17ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0276
        gbc.setState(0x39a4, 0x9e90, 0xb310, 0xa293, 0x1e27, 0xead8, 0x1, 0x0);
        gbc.writeMem(0x39a4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9e90);
        EXPECT(gbc.pc(), 0x39a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0277
        gbc.setState(0xcce0, 0xdeed, 0xf2a0, 0x999c, 0x1214, 0x656, 0x1, 0x1);
        gbc.writeMem(0xcce0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdeed);
        EXPECT(gbc.pc(), 0xcce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce0), 0xcb);
        EXPECT(gbc.readMem(0xcce1), 0xb8);
        // CB B8 0278
        gbc.setState(0xe15a, 0x402e, 0x3d70, 0x7053, 0xde9b, 0x371f, 0x0, 0x1);
        gbc.writeMem(0xe15a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x402e);
        EXPECT(gbc.pc(), 0xe15c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe15a), 0xcb);
        EXPECT(gbc.readMem(0xe15b), 0xb8);
        // CB B8 0279
        gbc.setState(0xb79c, 0x5a84, 0x8cc0, 0x6fc4, 0xeef0, 0x4637, 0x0, 0x0);
        gbc.writeMem(0xb79c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5a84);
        EXPECT(gbc.pc(), 0xb79e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb79c), 0xcb);
        EXPECT(gbc.readMem(0xb79d), 0xb8);
        // CB B8 027A
        gbc.setState(0x1252, 0xfedc, 0x5ec0, 0xbc2d, 0xf420, 0x400f, 0x1, 0x0);
        gbc.writeMem(0x1252, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xfedc);
        EXPECT(gbc.pc(), 0x1254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 027B
        gbc.setState(0xa4b5, 0x4c7f, 0xcfc0, 0x2897, 0xb0b9, 0x23c6, 0x1, 0x0);
        gbc.writeMem(0xa4b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4c7f);
        EXPECT(gbc.pc(), 0xa4b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b5), 0xcb);
        EXPECT(gbc.readMem(0xa4b6), 0xb8);
        // CB B8 027D
        gbc.setState(0x4226, 0x8ccc, 0xd530, 0x93d1, 0xa513, 0x2578, 0x0, 0x0);
        gbc.writeMem(0x4226, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8ccc);
        EXPECT(gbc.pc(), 0x4228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 027E
        gbc.setState(0x22e, 0xcc0a, 0xbf90, 0xb36a, 0xefab, 0xe827, 0x1, 0x0);
        gbc.writeMem(0x22e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcc0a);
        EXPECT(gbc.pc(), 0x230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 027F
        gbc.setState(0xb96c, 0xeb41, 0x44a0, 0x17ca, 0xb731, 0x67d6, 0x0, 0x1);
        gbc.writeMem(0xb96c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xeb41);
        EXPECT(gbc.pc(), 0xb96e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb96c), 0xcb);
        EXPECT(gbc.readMem(0xb96d), 0xb8);
        // CB B8 0280
        gbc.setState(0xd7, 0xfefc, 0xedc0, 0xfff7, 0xf5e1, 0x138b, 0x1, 0x1);
        gbc.writeMem(0xd7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfefc);
        EXPECT(gbc.pc(), 0xd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0281
        gbc.setState(0xb6b1, 0xc59c, 0x49b0, 0xa615, 0x765f, 0x351a, 0x1, 0x1);
        gbc.writeMem(0xb6b1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc59c);
        EXPECT(gbc.pc(), 0xb6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b1), 0xcb);
        EXPECT(gbc.readMem(0xb6b2), 0xb8);
        // CB B8 0282
        gbc.setState(0x8d5e, 0x4d12, 0xbbb0, 0x57f6, 0x4577, 0xedf6, 0x1, 0x0);
        gbc.writeMem(0x8d5e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4d12);
        EXPECT(gbc.pc(), 0x8d60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d5e), 0xcb);
        EXPECT(gbc.readMem(0x8d5f), 0xb8);
        // CB B8 0283
        gbc.setState(0x8ff4, 0xeff, 0x1ab0, 0xdd18, 0xc6f3, 0xcdb3, 0x0, 0x1);
        gbc.writeMem(0x8ff4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xeff);
        EXPECT(gbc.pc(), 0x8ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff4), 0xcb);
        EXPECT(gbc.readMem(0x8ff5), 0xb8);
        // CB B8 0284
        gbc.setState(0x7ea2, 0xb091, 0xb9b0, 0x37aa, 0xe86d, 0x8b9a, 0x1, 0x0);
        gbc.writeMem(0x7ea2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb091);
        EXPECT(gbc.pc(), 0x7ea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0285
        gbc.setState(0x1fa3, 0xbea1, 0xf70, 0x69ce, 0x1b2d, 0xbc2e, 0x0, 0x0);
        gbc.writeMem(0x1fa3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbea1);
        EXPECT(gbc.pc(), 0x1fa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0286
        gbc.setState(0x5101, 0x354b, 0xb430, 0x83ed, 0xd1b0, 0x708a, 0x1, 0x1);
        gbc.writeMem(0x5101, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x354b);
        EXPECT(gbc.pc(), 0x5103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0287
        gbc.setState(0xc44d, 0x9f34, 0x1c60, 0xf057, 0x213, 0x105b, 0x1, 0x1);
        gbc.writeMem(0xc44d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9f34);
        EXPECT(gbc.pc(), 0xc44f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc44d), 0xcb);
        EXPECT(gbc.readMem(0xc44e), 0xb8);
        // CB B8 0288
        gbc.setState(0xc503, 0x3580, 0x8d00, 0x6ad8, 0xd464, 0x94b, 0x0, 0x0);
        gbc.writeMem(0xc503, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3580);
        EXPECT(gbc.pc(), 0xc505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc503), 0xcb);
        EXPECT(gbc.readMem(0xc504), 0xb8);
        // CB B8 028A
        gbc.setState(0x7e13, 0x7157, 0xee10, 0xa796, 0x5d9a, 0x12c, 0x1, 0x1);
        gbc.writeMem(0x7e13, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7157);
        EXPECT(gbc.pc(), 0x7e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 028B
        gbc.setState(0xd868, 0xa3b2, 0x7610, 0xfca4, 0x6286, 0x1977, 0x1, 0x0);
        gbc.writeMem(0xd868, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa3b2);
        EXPECT(gbc.pc(), 0xd86a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd868), 0xcb);
        EXPECT(gbc.readMem(0xd869), 0xb8);
        // CB B8 028C
        gbc.setState(0x8c4a, 0x7096, 0xc830, 0xc0d9, 0x9d54, 0x4f34, 0x1, 0x1);
        gbc.writeMem(0x8c4a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7096);
        EXPECT(gbc.pc(), 0x8c4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4a), 0xcb);
        EXPECT(gbc.readMem(0x8c4b), 0xb8);
        // CB B8 028D
        gbc.setState(0xc8ac, 0xde5e, 0x9930, 0x4e1, 0x7044, 0x399c, 0x0, 0x0);
        gbc.writeMem(0xc8ac, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xde5e);
        EXPECT(gbc.pc(), 0xc8ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ac), 0xcb);
        EXPECT(gbc.readMem(0xc8ad), 0xb8);
        // CB B8 028E
        gbc.setState(0x90fe, 0x8f96, 0xf510, 0x69df, 0x3805, 0x2882, 0x0, 0x0);
        gbc.writeMem(0x90fe, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8f96);
        EXPECT(gbc.pc(), 0x9100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90fe), 0xcb);
        EXPECT(gbc.readMem(0x90ff), 0xb8);
        // CB B8 028F
        gbc.setState(0xb837, 0x5fba, 0xce90, 0x7168, 0x6443, 0x24bf, 0x1, 0x0);
        gbc.writeMem(0xb837, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5fba);
        EXPECT(gbc.pc(), 0xb839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb837), 0xcb);
        EXPECT(gbc.readMem(0xb838), 0xb8);
        // CB B8 0290
        gbc.setState(0x7c01, 0x8bde, 0x7510, 0xae40, 0xbd80, 0xdf0d, 0x1, 0x0);
        gbc.writeMem(0x7c01, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8bde);
        EXPECT(gbc.pc(), 0x7c03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0291
        gbc.setState(0x4ddb, 0xa796, 0x1fe0, 0x6947, 0x97e3, 0x415c, 0x1, 0x0);
        gbc.writeMem(0x4ddb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa796);
        EXPECT(gbc.pc(), 0x4ddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0293
        gbc.setState(0x2496, 0xe894, 0x3290, 0x7345, 0xaabe, 0x31ec, 0x0, 0x0);
        gbc.writeMem(0x2496, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe894);
        EXPECT(gbc.pc(), 0x2498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0294
        gbc.setState(0xaa44, 0xdbfe, 0xb320, 0xbb59, 0xd8cb, 0x64ee, 0x0, 0x1);
        gbc.writeMem(0xaa44, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdbfe);
        EXPECT(gbc.pc(), 0xaa46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa44), 0xcb);
        EXPECT(gbc.readMem(0xaa45), 0xb8);
        // CB B8 0295
        gbc.setState(0x1551, 0x9313, 0x9e40, 0x665c, 0xb2d6, 0x1e63, 0x1, 0x0);
        gbc.writeMem(0x1551, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9313);
        EXPECT(gbc.pc(), 0x1553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0296
        gbc.setState(0x3c39, 0x6848, 0x2770, 0x6e7d, 0xe18a, 0x4a78, 0x0, 0x1);
        gbc.writeMem(0x3c39, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6848);
        EXPECT(gbc.pc(), 0x3c3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0297
        gbc.setState(0x144f, 0xbfa7, 0xe9c0, 0x17ec, 0x38, 0x26ef, 0x1, 0x1);
        gbc.writeMem(0x144f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbfa7);
        EXPECT(gbc.pc(), 0x1451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0298
        gbc.setState(0x9732, 0xb31e, 0x9070, 0xaf, 0xbfbe, 0x383, 0x1, 0x0);
        gbc.writeMem(0x9732, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb31e);
        EXPECT(gbc.pc(), 0x9734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9732), 0xcb);
        EXPECT(gbc.readMem(0x9733), 0xb8);
        // CB B8 0299
        gbc.setState(0x504, 0xadf7, 0x99c0, 0x5422, 0x2e08, 0x756a, 0x0, 0x1);
        gbc.writeMem(0x504, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xadf7);
        EXPECT(gbc.pc(), 0x506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 029A
        gbc.setState(0x4299, 0x5061, 0xe50, 0x73bc, 0xbf97, 0xa625, 0x0, 0x1);
        gbc.writeMem(0x4299, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5061);
        EXPECT(gbc.pc(), 0x429b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 029B
        gbc.setState(0x5a5a, 0x45a2, 0x8510, 0x5ce7, 0x838b, 0x12b7, 0x1, 0x1);
        gbc.writeMem(0x5a5a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x45a2);
        EXPECT(gbc.pc(), 0x5a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 029C
        gbc.setState(0x3cb3, 0xda97, 0xb750, 0xfddd, 0x10b0, 0x9f9a, 0x1, 0x0);
        gbc.writeMem(0x3cb3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xda97);
        EXPECT(gbc.pc(), 0x3cb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 029E
        gbc.setState(0x8f61, 0x826f, 0xa690, 0x18a5, 0xb766, 0x97d2, 0x0, 0x1);
        gbc.writeMem(0x8f61, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x826f);
        EXPECT(gbc.pc(), 0x8f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f61), 0xcb);
        EXPECT(gbc.readMem(0x8f62), 0xb8);
        // CB B8 029F
        gbc.setState(0xdbc3, 0xe937, 0x5da0, 0xd3ae, 0x33ed, 0x702, 0x0, 0x0);
        gbc.writeMem(0xdbc3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe937);
        EXPECT(gbc.pc(), 0xdbc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc3), 0xcb);
        EXPECT(gbc.readMem(0xdbc4), 0xb8);
        // CB B8 02A0
        gbc.setState(0xbc83, 0xbf5c, 0xca80, 0x2d5f, 0xd29a, 0xb4bb, 0x1, 0x0);
        gbc.writeMem(0xbc83, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbf5c);
        EXPECT(gbc.pc(), 0xbc85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc83), 0xcb);
        EXPECT(gbc.readMem(0xbc84), 0xb8);
        // CB B8 02A1
        gbc.setState(0x7ed2, 0xa78b, 0xcd60, 0x49af, 0x732, 0xf835, 0x0, 0x1);
        gbc.writeMem(0x7ed2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa78b);
        EXPECT(gbc.pc(), 0x7ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02A2
        gbc.setState(0x78f5, 0x3ce6, 0xe9c0, 0x1b7c, 0xb10a, 0xc14b, 0x1, 0x0);
        gbc.writeMem(0x78f5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3ce6);
        EXPECT(gbc.pc(), 0x78f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02A3
        gbc.setState(0x71c3, 0x2816, 0x5e0, 0x1b05, 0x1192, 0xd3c8, 0x0, 0x0);
        gbc.writeMem(0x71c3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2816);
        EXPECT(gbc.pc(), 0x71c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02A4
        gbc.setState(0x9dd0, 0x1bc0, 0x82f0, 0xc36d, 0xac70, 0xc9b0, 0x0, 0x1);
        gbc.writeMem(0x9dd0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1bc0);
        EXPECT(gbc.pc(), 0x9dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd0), 0xcb);
        EXPECT(gbc.readMem(0x9dd1), 0xb8);
        // CB B8 02A5
        gbc.setState(0x7735, 0xa2c3, 0x9630, 0x31d5, 0x7759, 0x8eac, 0x0, 0x0);
        gbc.writeMem(0x7735, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa2c3);
        EXPECT(gbc.pc(), 0x7737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02A6
        gbc.setState(0xd67e, 0x7219, 0x34b0, 0xf505, 0xccba, 0x997f, 0x1, 0x1);
        gbc.writeMem(0xd67e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7219);
        EXPECT(gbc.pc(), 0xd680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd67e), 0xcb);
        EXPECT(gbc.readMem(0xd67f), 0xb8);
        // CB B8 02A7
        gbc.setState(0xc899, 0xcf34, 0x6200, 0xa0e6, 0x78ca, 0x12c7, 0x0, 0x1);
        gbc.writeMem(0xc899, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcf34);
        EXPECT(gbc.pc(), 0xc89b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc899), 0xcb);
        EXPECT(gbc.readMem(0xc89a), 0xb8);
        // CB B8 02A8
        gbc.setState(0x830c, 0x8dcb, 0x37b0, 0x993b, 0x6d6, 0xf75d, 0x0, 0x0);
        gbc.writeMem(0x830c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8dcb);
        EXPECT(gbc.pc(), 0x830e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x830c), 0xcb);
        EXPECT(gbc.readMem(0x830d), 0xb8);
        // CB B8 02A9
        gbc.setState(0xee10, 0x98cd, 0xcc30, 0x2848, 0x23b1, 0x8b00, 0x0, 0x0);
        gbc.writeMem(0xee10, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x98cd);
        EXPECT(gbc.pc(), 0xee12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee10), 0xcb);
        EXPECT(gbc.readMem(0xee11), 0xb8);
        // CB B8 02AA
        gbc.setState(0x1412, 0x427f, 0xdc80, 0x5218, 0xbc25, 0xcd50, 0x1, 0x1);
        gbc.writeMem(0x1412, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x427f);
        EXPECT(gbc.pc(), 0x1414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02AB
        gbc.setState(0x8291, 0x7450, 0xee60, 0xe05d, 0xf934, 0x5bf9, 0x0, 0x0);
        gbc.writeMem(0x8291, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7450);
        EXPECT(gbc.pc(), 0x8293);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8291), 0xcb);
        EXPECT(gbc.readMem(0x8292), 0xb8);
        // CB B8 02AC
        gbc.setState(0x7a04, 0xcc17, 0x440, 0x8b33, 0x9850, 0xf617, 0x1, 0x0);
        gbc.writeMem(0x7a04, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xcc17);
        EXPECT(gbc.pc(), 0x7a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02AD
        gbc.setState(0xee, 0xd781, 0x8d80, 0x1c85, 0x4812, 0xaef6, 0x0, 0x0);
        gbc.writeMem(0xee, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd781);
        EXPECT(gbc.pc(), 0xf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02AE
        gbc.setState(0x640e, 0x7ea3, 0x98e0, 0x378a, 0xe3d, 0x4ab7, 0x0, 0x0);
        gbc.writeMem(0x640e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7ea3);
        EXPECT(gbc.pc(), 0x6410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02AF
        gbc.setState(0x58f4, 0x9de6, 0x2b60, 0xbb30, 0xdf2b, 0x3b8b, 0x1, 0x1);
        gbc.writeMem(0x58f4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9de6);
        EXPECT(gbc.pc(), 0x58f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02B0
        gbc.setState(0x9a09, 0xb05, 0xcb40, 0x7cd2, 0x3b26, 0x8685, 0x1, 0x0);
        gbc.writeMem(0x9a09, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb05);
        EXPECT(gbc.pc(), 0x9a0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a09), 0xcb);
        EXPECT(gbc.readMem(0x9a0a), 0xb8);
        // CB B8 02B1
        gbc.setState(0x3e75, 0xe097, 0x280, 0x3d0f, 0xa2bc, 0xfc52, 0x0, 0x0);
        gbc.writeMem(0x3e75, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe097);
        EXPECT(gbc.pc(), 0x3e77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02B2
        gbc.setState(0xa80d, 0x97ca, 0x3520, 0x46d3, 0xaa6a, 0xd540, 0x0, 0x1);
        gbc.writeMem(0xa80d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x97ca);
        EXPECT(gbc.pc(), 0xa80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa80d), 0xcb);
        EXPECT(gbc.readMem(0xa80e), 0xb8);
        // CB B8 02B3
        gbc.setState(0x6c7, 0xf210, 0xbfb0, 0x2b67, 0xc0c1, 0x5514, 0x1, 0x0);
        gbc.writeMem(0x6c7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf210);
        EXPECT(gbc.pc(), 0x6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02B4
        gbc.setState(0x1ac6, 0xdfae, 0x1dc0, 0xb565, 0xfad1, 0x7f5a, 0x0, 0x1);
        gbc.writeMem(0x1ac6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdfae);
        EXPECT(gbc.pc(), 0x1ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02B5
        gbc.setState(0xdbc5, 0xb3ce, 0x7c80, 0xb409, 0x3c9a, 0x9204, 0x1, 0x0);
        gbc.writeMem(0xdbc5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb3ce);
        EXPECT(gbc.pc(), 0xdbc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc5), 0xcb);
        EXPECT(gbc.readMem(0xdbc6), 0xb8);
        // CB B8 02B6
        gbc.setState(0xdaec, 0x6480, 0x2830, 0x75a0, 0x44ad, 0xbc87, 0x0, 0x0);
        gbc.writeMem(0xdaec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6480);
        EXPECT(gbc.pc(), 0xdaee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaec), 0xcb);
        EXPECT(gbc.readMem(0xdaed), 0xb8);
        // CB B8 02B7
        gbc.setState(0x4480, 0xdc69, 0xf810, 0x9787, 0x672b, 0xa861, 0x0, 0x0);
        gbc.writeMem(0x4480, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdc69);
        EXPECT(gbc.pc(), 0x4482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02B8
        gbc.setState(0x6623, 0xa6b4, 0xf680, 0xd4c0, 0x9986, 0x4409, 0x1, 0x0);
        gbc.writeMem(0x6623, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa6b4);
        EXPECT(gbc.pc(), 0x6625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02B9
        gbc.setState(0x9cb0, 0x24f1, 0xf9b0, 0xc0d3, 0x5bb4, 0xcbe0, 0x0, 0x1);
        gbc.writeMem(0x9cb0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x24f1);
        EXPECT(gbc.pc(), 0x9cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb0), 0xcb);
        EXPECT(gbc.readMem(0x9cb1), 0xb8);
        // CB B8 02BA
        gbc.setState(0x7a3e, 0xba9c, 0x4060, 0x2571, 0x5e7d, 0x4f44, 0x0, 0x1);
        gbc.writeMem(0x7a3e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xba9c);
        EXPECT(gbc.pc(), 0x7a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02BB
        gbc.setState(0x53ed, 0x5a6e, 0xf2a0, 0xea28, 0xdd60, 0x66ce, 0x0, 0x0);
        gbc.writeMem(0x53ed, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5a6e);
        EXPECT(gbc.pc(), 0x53ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02BC
        gbc.setState(0x857e, 0x2911, 0xc020, 0x6e4, 0x4235, 0xcdf0, 0x1, 0x0);
        gbc.writeMem(0x857e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2911);
        EXPECT(gbc.pc(), 0x8580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x857e), 0xcb);
        EXPECT(gbc.readMem(0x857f), 0xb8);
        // CB B8 02BD
        gbc.setState(0xa5bd, 0x17ad, 0xa3f0, 0xdc6, 0x8463, 0xb028, 0x1, 0x0);
        gbc.writeMem(0xa5bd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x17ad);
        EXPECT(gbc.pc(), 0xa5bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5bd), 0xcb);
        EXPECT(gbc.readMem(0xa5be), 0xb8);
        // CB B8 02BE
        gbc.setState(0xd253, 0xfac5, 0x5ee0, 0xc9a9, 0x3f79, 0xaa60, 0x1, 0x0);
        gbc.writeMem(0xd253, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfac5);
        EXPECT(gbc.pc(), 0xd255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd253), 0xcb);
        EXPECT(gbc.readMem(0xd254), 0xb8);
        // CB B8 02BF
        gbc.setState(0x1150, 0xb6d4, 0xa190, 0x411a, 0xa5b1, 0xd45b, 0x0, 0x1);
        gbc.writeMem(0x1150, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb6d4);
        EXPECT(gbc.pc(), 0x1152);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02C0
        gbc.setState(0xd55c, 0xa71d, 0xefb0, 0xc009, 0x9dac, 0xbc95, 0x1, 0x0);
        gbc.writeMem(0xd55c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa71d);
        EXPECT(gbc.pc(), 0xd55e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd55c), 0xcb);
        EXPECT(gbc.readMem(0xd55d), 0xb8);
        // CB B8 02C1
        gbc.setState(0x7a64, 0x5dae, 0xeed0, 0x3c20, 0x9a99, 0xcf59, 0x1, 0x0);
        gbc.writeMem(0x7a64, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5dae);
        EXPECT(gbc.pc(), 0x7a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02C2
        gbc.setState(0x43b1, 0x6881, 0x2580, 0x7ffe, 0x2fd9, 0x95e9, 0x0, 0x0);
        gbc.writeMem(0x43b1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6881);
        EXPECT(gbc.pc(), 0x43b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02C3
        gbc.setState(0x24cb, 0x8aab, 0x33b0, 0x52d4, 0x2d1b, 0x5caf, 0x1, 0x0);
        gbc.writeMem(0x24cb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8aab);
        EXPECT(gbc.pc(), 0x24cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02C4
        gbc.setState(0x731c, 0x8166, 0x5300, 0x6dde, 0xeb6b, 0x5ade, 0x1, 0x1);
        gbc.writeMem(0x731c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8166);
        EXPECT(gbc.pc(), 0x731e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02C5
        gbc.setState(0x1950, 0xdf, 0x5cd0, 0x513e, 0xbb43, 0x23da, 0x0, 0x1);
        gbc.writeMem(0x1950, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdf);
        EXPECT(gbc.pc(), 0x1952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02C6
        gbc.setState(0x81c8, 0xc22c, 0xf830, 0x9544, 0x21ff, 0x9ff0, 0x0, 0x1);
        gbc.writeMem(0x81c8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc22c);
        EXPECT(gbc.pc(), 0x81ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c8), 0xcb);
        EXPECT(gbc.readMem(0x81c9), 0xb8);
        // CB B8 02C7
        gbc.setState(0x4d9e, 0x8cdf, 0xc6b0, 0x6504, 0x4cfa, 0x3271, 0x1, 0x1);
        gbc.writeMem(0x4d9e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8cdf);
        EXPECT(gbc.pc(), 0x4da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02C8
        gbc.setState(0x279f, 0x69c5, 0x9b30, 0x9c7b, 0xfa8a, 0xe328, 0x1, 0x0);
        gbc.writeMem(0x279f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x69c5);
        EXPECT(gbc.pc(), 0x27a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02C9
        gbc.setState(0xbea7, 0x7f8a, 0xe670, 0x5d46, 0x3b4a, 0xc6ba, 0x1, 0x0);
        gbc.writeMem(0xbea7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7f8a);
        EXPECT(gbc.pc(), 0xbea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea7), 0xcb);
        EXPECT(gbc.readMem(0xbea8), 0xb8);
        // CB B8 02CA
        gbc.setState(0xdb4f, 0x9df1, 0xacd0, 0xff30, 0x59d7, 0xcad2, 0x0, 0x0);
        gbc.writeMem(0xdb4f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9df1);
        EXPECT(gbc.pc(), 0xdb51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb4f), 0xcb);
        EXPECT(gbc.readMem(0xdb50), 0xb8);
        // CB B8 02CB
        gbc.setState(0x18e1, 0x4471, 0x160, 0x615a, 0x5487, 0xd368, 0x0, 0x0);
        gbc.writeMem(0x18e1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4471);
        EXPECT(gbc.pc(), 0x18e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02CC
        gbc.setState(0xe86f, 0x6277, 0xb5c0, 0xd96d, 0xaae7, 0xc7c2, 0x0, 0x0);
        gbc.writeMem(0xe86f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6277);
        EXPECT(gbc.pc(), 0xe871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86f), 0xcb);
        EXPECT(gbc.readMem(0xe870), 0xb8);
        // CB B8 02CD
        gbc.setState(0x51c5, 0xc248, 0x6b0, 0x6c41, 0x60b3, 0xacc8, 0x1, 0x0);
        gbc.writeMem(0x51c5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc248);
        EXPECT(gbc.pc(), 0x51c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02CE
        gbc.setState(0xc1ec, 0x8b6b, 0x7c30, 0x3769, 0xa57e, 0x274, 0x1, 0x0);
        gbc.writeMem(0xc1ec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8b6b);
        EXPECT(gbc.pc(), 0xc1ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ec), 0xcb);
        EXPECT(gbc.readMem(0xc1ed), 0xb8);
        // CB B8 02CF
        gbc.setState(0x8b8e, 0xc985, 0x7a90, 0xc92b, 0x316a, 0x3ce1, 0x1, 0x1);
        gbc.writeMem(0x8b8e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc985);
        EXPECT(gbc.pc(), 0x8b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b8e), 0xcb);
        EXPECT(gbc.readMem(0x8b8f), 0xb8);
        // CB B8 02D0
        gbc.setState(0x5ec5, 0xd261, 0x3190, 0x8e03, 0xb3ea, 0x92f9, 0x1, 0x1);
        gbc.writeMem(0x5ec5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd261);
        EXPECT(gbc.pc(), 0x5ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02D1
        gbc.setState(0x4e75, 0xb7cc, 0x4f20, 0xe1d, 0x59f2, 0x6dc0, 0x1, 0x0);
        gbc.writeMem(0x4e75, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb7cc);
        EXPECT(gbc.pc(), 0x4e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02D2
        gbc.setState(0x873d, 0x47c3, 0x6870, 0xf77e, 0xc19e, 0xba5b, 0x1, 0x0);
        gbc.writeMem(0x873d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x47c3);
        EXPECT(gbc.pc(), 0x873f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x873d), 0xcb);
        EXPECT(gbc.readMem(0x873e), 0xb8);
        // CB B8 02D3
        gbc.setState(0xbbc8, 0x42e3, 0x62c0, 0xda35, 0x6b09, 0x2ac7, 0x1, 0x0);
        gbc.writeMem(0xbbc8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x42e3);
        EXPECT(gbc.pc(), 0xbbca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc8), 0xcb);
        EXPECT(gbc.readMem(0xbbc9), 0xb8);
        // CB B8 02D4
        gbc.setState(0x8441, 0x7fb4, 0x4280, 0xa654, 0xf5b7, 0x9d57, 0x0, 0x0);
        gbc.writeMem(0x8441, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7fb4);
        EXPECT(gbc.pc(), 0x8443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8441), 0xcb);
        EXPECT(gbc.readMem(0x8442), 0xb8);
        // CB B8 02D5
        gbc.setState(0x140f, 0xedfe, 0x1960, 0x610d, 0x920d, 0x5739, 0x1, 0x1);
        gbc.writeMem(0x140f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xedfe);
        EXPECT(gbc.pc(), 0x1411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02D6
        gbc.setState(0xd10a, 0xfd44, 0x5b80, 0x5539, 0x50ef, 0x2a67, 0x0, 0x1);
        gbc.writeMem(0xd10a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfd44);
        EXPECT(gbc.pc(), 0xd10c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10a), 0xcb);
        EXPECT(gbc.readMem(0xd10b), 0xb8);
        // CB B8 02D7
        gbc.setState(0xc407, 0x92f7, 0x21b0, 0x1aa2, 0x5cbc, 0xf481, 0x0, 0x1);
        gbc.writeMem(0xc407, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x92f7);
        EXPECT(gbc.pc(), 0xc409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc407), 0xcb);
        EXPECT(gbc.readMem(0xc408), 0xb8);
        // CB B8 02D8
        gbc.setState(0x14a2, 0xc4b5, 0xeef0, 0xc1f7, 0x2a60, 0xe498, 0x1, 0x1);
        gbc.writeMem(0x14a2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc4b5);
        EXPECT(gbc.pc(), 0x14a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02DA
        gbc.setState(0x80cb, 0x9750, 0x8e40, 0xf541, 0xdc78, 0xe09, 0x1, 0x1);
        gbc.writeMem(0x80cb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9750);
        EXPECT(gbc.pc(), 0x80cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80cb), 0xcb);
        EXPECT(gbc.readMem(0x80cc), 0xb8);
        // CB B8 02DB
        gbc.setState(0x69ac, 0x3080, 0xa6e0, 0x726, 0xe2b, 0x60d2, 0x0, 0x0);
        gbc.writeMem(0x69ac, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3080);
        EXPECT(gbc.pc(), 0x69ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02DD
        gbc.setState(0xeb98, 0x9326, 0x4f0, 0xa252, 0xe1da, 0x351a, 0x0, 0x1);
        gbc.writeMem(0xeb98, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9326);
        EXPECT(gbc.pc(), 0xeb9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb98), 0xcb);
        EXPECT(gbc.readMem(0xeb99), 0xb8);
        // CB B8 02DE
        gbc.setState(0xd0ea, 0xe735, 0x4240, 0xfc7d, 0x7a1e, 0xcd1c, 0x1, 0x0);
        gbc.writeMem(0xd0ea, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe735);
        EXPECT(gbc.pc(), 0xd0ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ea), 0xcb);
        EXPECT(gbc.readMem(0xd0eb), 0xb8);
        // CB B8 02DF
        gbc.setState(0x79d8, 0xf765, 0x87f0, 0xe7e9, 0x594, 0xb1d6, 0x0, 0x1);
        gbc.writeMem(0x79d8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf765);
        EXPECT(gbc.pc(), 0x79da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02E0
        gbc.setState(0x2977, 0x8eb1, 0x2130, 0x5cef, 0xdab3, 0xe54, 0x1, 0x0);
        gbc.writeMem(0x2977, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8eb1);
        EXPECT(gbc.pc(), 0x2979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02E1
        gbc.setState(0x7885, 0xca76, 0xf610, 0xec5b, 0xd6ef, 0x6838, 0x0, 0x1);
        gbc.writeMem(0x7885, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xca76);
        EXPECT(gbc.pc(), 0x7887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02E2
        gbc.setState(0x5268, 0x349f, 0xc580, 0xeb28, 0x599f, 0x4a1d, 0x1, 0x1);
        gbc.writeMem(0x5268, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x349f);
        EXPECT(gbc.pc(), 0x526a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02E3
        gbc.setState(0x5b65, 0x929c, 0x9990, 0x1de0, 0xfe3c, 0x9a1c, 0x0, 0x1);
        gbc.writeMem(0x5b65, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x929c);
        EXPECT(gbc.pc(), 0x5b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02E4
        gbc.setState(0xbe43, 0x5419, 0x5cd0, 0x66f7, 0x98f0, 0x218d, 0x0, 0x0);
        gbc.writeMem(0xbe43, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5419);
        EXPECT(gbc.pc(), 0xbe45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe43), 0xcb);
        EXPECT(gbc.readMem(0xbe44), 0xb8);
        // CB B8 02E5
        gbc.setState(0xe1f9, 0x866b, 0xc00, 0xa4cb, 0xf3ba, 0xf833, 0x1, 0x1);
        gbc.writeMem(0xe1f9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x866b);
        EXPECT(gbc.pc(), 0xe1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f9), 0xcb);
        EXPECT(gbc.readMem(0xe1fa), 0xb8);
        // CB B8 02E6
        gbc.setState(0xc364, 0xee47, 0xd0, 0x5252, 0x84a1, 0x477d, 0x0, 0x1);
        gbc.writeMem(0xc364, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xee47);
        EXPECT(gbc.pc(), 0xc366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc364), 0xcb);
        EXPECT(gbc.readMem(0xc365), 0xb8);
        // CB B8 02E7
        gbc.setState(0xcbe0, 0x800c, 0xcd10, 0x830a, 0x6501, 0x4533, 0x0, 0x0);
        gbc.writeMem(0xcbe0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x800c);
        EXPECT(gbc.pc(), 0xcbe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbe0), 0xcb);
        EXPECT(gbc.readMem(0xcbe1), 0xb8);
        // CB B8 02E8
        gbc.setState(0x7192, 0x91d3, 0x2490, 0x7601, 0x4176, 0x39e6, 0x1, 0x0);
        gbc.writeMem(0x7192, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x91d3);
        EXPECT(gbc.pc(), 0x7194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02E9
        gbc.setState(0x7fe4, 0x74a8, 0xd840, 0xce4, 0x2fd1, 0x5faa, 0x1, 0x0);
        gbc.writeMem(0x7fe4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x74a8);
        EXPECT(gbc.pc(), 0x7fe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02EA
        gbc.setState(0xd297, 0x9c78, 0x9900, 0x919a, 0x3dfc, 0x75b5, 0x1, 0x0);
        gbc.writeMem(0xd297, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9c78);
        EXPECT(gbc.pc(), 0xd299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd297), 0xcb);
        EXPECT(gbc.readMem(0xd298), 0xb8);
        // CB B8 02EB
        gbc.setState(0x3aec, 0x1ef8, 0xfa80, 0xd8a, 0x4014, 0xce3, 0x0, 0x0);
        gbc.writeMem(0x3aec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1ef8);
        EXPECT(gbc.pc(), 0x3aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02EC
        gbc.setState(0x82fd, 0x97e3, 0x3090, 0x37e0, 0xf5c2, 0xe8ad, 0x0, 0x0);
        gbc.writeMem(0x82fd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x97e3);
        EXPECT(gbc.pc(), 0x82ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82fd), 0xcb);
        EXPECT(gbc.readMem(0x82fe), 0xb8);
        // CB B8 02ED
        gbc.setState(0x6964, 0xa319, 0x9510, 0x9771, 0xc391, 0x8f7c, 0x0, 0x0);
        gbc.writeMem(0x6964, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa319);
        EXPECT(gbc.pc(), 0x6966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02EE
        gbc.setState(0x6527, 0xaa24, 0xae10, 0x6187, 0xd9c7, 0x205, 0x1, 0x1);
        gbc.writeMem(0x6527, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xaa24);
        EXPECT(gbc.pc(), 0x6529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02EF
        gbc.setState(0x5c1d, 0xebd, 0xddf0, 0x4543, 0x417a, 0x9bcc, 0x1, 0x0);
        gbc.writeMem(0x5c1d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xebd);
        EXPECT(gbc.pc(), 0x5c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02F0
        gbc.setState(0x1b6, 0x3c78, 0xba70, 0x701d, 0xa61c, 0x6c75, 0x1, 0x0);
        gbc.writeMem(0x1b6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3c78);
        EXPECT(gbc.pc(), 0x1b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02F1
        gbc.setState(0x15e7, 0x4a50, 0xd4a0, 0x1e57, 0xb154, 0xd01b, 0x1, 0x0);
        gbc.writeMem(0x15e7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4a50);
        EXPECT(gbc.pc(), 0x15e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02F2
        gbc.setState(0x1622, 0x3c41, 0xbda0, 0x600a, 0x9fcc, 0xae64, 0x0, 0x1);
        gbc.writeMem(0x1622, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3c41);
        EXPECT(gbc.pc(), 0x1624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02F3
        gbc.setState(0x5362, 0x273, 0xf480, 0x59d2, 0x39d2, 0x5112, 0x1, 0x1);
        gbc.writeMem(0x5362, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x273);
        EXPECT(gbc.pc(), 0x5364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02F4
        gbc.setState(0xc59c, 0xe49, 0x52a0, 0x470a, 0xea2c, 0x65d1, 0x0, 0x0);
        gbc.writeMem(0xc59c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe49);
        EXPECT(gbc.pc(), 0xc59e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc59c), 0xcb);
        EXPECT(gbc.readMem(0xc59d), 0xb8);
        // CB B8 02F5
        gbc.setState(0x6641, 0x771b, 0x4d80, 0xf015, 0x84b3, 0x67d1, 0x1, 0x0);
        gbc.writeMem(0x6641, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x771b);
        EXPECT(gbc.pc(), 0x6643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02F6
        gbc.setState(0xbe0c, 0x3ef0, 0x53b0, 0xf62b, 0x2829, 0x2135, 0x0, 0x0);
        gbc.writeMem(0xbe0c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3ef0);
        EXPECT(gbc.pc(), 0xbe0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe0c), 0xcb);
        EXPECT(gbc.readMem(0xbe0d), 0xb8);
        // CB B8 02F7
        gbc.setState(0xe511, 0x179c, 0x91e0, 0x1a0, 0xd449, 0xf284, 0x1, 0x0);
        gbc.writeMem(0xe511, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x179c);
        EXPECT(gbc.pc(), 0xe513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe511), 0xcb);
        EXPECT(gbc.readMem(0xe512), 0xb8);
        // CB B8 02F8
        gbc.setState(0x5a6, 0xb1f, 0xdc60, 0xa6fa, 0x2252, 0x59e7, 0x1, 0x1);
        gbc.writeMem(0x5a6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb1f);
        EXPECT(gbc.pc(), 0x5a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02F9
        gbc.setState(0x1e8f, 0x8686, 0xbb00, 0x881e, 0x83ed, 0x67c8, 0x0, 0x0);
        gbc.writeMem(0x1e8f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8686);
        EXPECT(gbc.pc(), 0x1e91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02FA
        gbc.setState(0x76a5, 0xd605, 0xb1c0, 0xe4e, 0x7740, 0x6f01, 0x1, 0x1);
        gbc.writeMem(0x76a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd605);
        EXPECT(gbc.pc(), 0x76a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02FB
        gbc.setState(0xa3ef, 0x60d7, 0xf7a0, 0xc463, 0x3de4, 0xb227, 0x1, 0x1);
        gbc.writeMem(0xa3ef, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x60d7);
        EXPECT(gbc.pc(), 0xa3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ef), 0xcb);
        EXPECT(gbc.readMem(0xa3f0), 0xb8);
        // CB B8 02FC
        gbc.setState(0x9c38, 0xb045, 0x7eb0, 0x8460, 0x5254, 0xff9f, 0x0, 0x1);
        gbc.writeMem(0x9c38, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb045);
        EXPECT(gbc.pc(), 0x9c3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c38), 0xcb);
        EXPECT(gbc.readMem(0x9c39), 0xb8);
        // CB B8 02FD
        gbc.setState(0x5603, 0x6564, 0x80e0, 0x45d4, 0xd21, 0x8ebe, 0x0, 0x0);
        gbc.writeMem(0x5603, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6564);
        EXPECT(gbc.pc(), 0x5605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 02FE
        gbc.setState(0x42f3, 0x25d3, 0x7cd0, 0x94c0, 0xfd7e, 0x1fa6, 0x1, 0x0);
        gbc.writeMem(0x42f3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x25d3);
        EXPECT(gbc.pc(), 0x42f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 02FF
        gbc.setState(0x4e89, 0x391f, 0xb050, 0x78e9, 0x5d87, 0xc309, 0x0, 0x1);
        gbc.writeMem(0x4e89, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x391f);
        EXPECT(gbc.pc(), 0x4e8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0300
        gbc.setState(0xb316, 0xfb5, 0x74e0, 0x7e23, 0x85d8, 0xfd26, 0x1, 0x0);
        gbc.writeMem(0xb316, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xfb5);
        EXPECT(gbc.pc(), 0xb318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb316), 0xcb);
        EXPECT(gbc.readMem(0xb317), 0xb8);
        // CB B8 0301
        gbc.setState(0xb90e, 0x4cdd, 0x990, 0x1d7f, 0x6930, 0x1624, 0x0, 0x0);
        gbc.writeMem(0xb90e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4cdd);
        EXPECT(gbc.pc(), 0xb910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb90e), 0xcb);
        EXPECT(gbc.readMem(0xb90f), 0xb8);
        // CB B8 0302
        gbc.setState(0xab84, 0x7aec, 0xa210, 0x1050, 0x2d1a, 0x4bc3, 0x1, 0x0);
        gbc.writeMem(0xab84, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7aec);
        EXPECT(gbc.pc(), 0xab86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab84), 0xcb);
        EXPECT(gbc.readMem(0xab85), 0xb8);
        // CB B8 0303
        gbc.setState(0xc1c6, 0x4b42, 0x8e40, 0x3e52, 0xb478, 0x368a, 0x1, 0x1);
        gbc.writeMem(0xc1c6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4b42);
        EXPECT(gbc.pc(), 0xc1c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c6), 0xcb);
        EXPECT(gbc.readMem(0xc1c7), 0xb8);
        // CB B8 0306
        gbc.setState(0x5d63, 0xfc29, 0x19d0, 0x9e62, 0x1cfc, 0xe784, 0x0, 0x0);
        gbc.writeMem(0x5d63, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfc29);
        EXPECT(gbc.pc(), 0x5d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0307
        gbc.setState(0x24b9, 0xddb6, 0x60f0, 0xff04, 0xd163, 0xc94a, 0x1, 0x0);
        gbc.writeMem(0x24b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xddb6);
        EXPECT(gbc.pc(), 0x24bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0308
        gbc.setState(0x75de, 0x5adf, 0xf910, 0x87fd, 0xd612, 0xc5e2, 0x1, 0x1);
        gbc.writeMem(0x75de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5adf);
        EXPECT(gbc.pc(), 0x75e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0309
        gbc.setState(0x4000, 0x7b2e, 0x2630, 0x1d9e, 0x5b04, 0xc41c, 0x0, 0x1);
        gbc.writeMem(0x4000, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7b2e);
        EXPECT(gbc.pc(), 0x4002);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 030A
        gbc.setState(0x90d6, 0x196d, 0xae0, 0x15dc, 0xf96f, 0x9946, 0x0, 0x1);
        gbc.writeMem(0x90d6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x196d);
        EXPECT(gbc.pc(), 0x90d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d6), 0xcb);
        EXPECT(gbc.readMem(0x90d7), 0xb8);
        // CB B8 030B
        gbc.setState(0x538b, 0xe00c, 0xb980, 0x8629, 0xf23, 0xa0cb, 0x0, 0x0);
        gbc.writeMem(0x538b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe00c);
        EXPECT(gbc.pc(), 0x538d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 030C
        gbc.setState(0x56a0, 0x9594, 0x94e0, 0xcabe, 0x4421, 0x6f0e, 0x0, 0x1);
        gbc.writeMem(0x56a0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9594);
        EXPECT(gbc.pc(), 0x56a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 030D
        gbc.setState(0x90a1, 0xe715, 0xdac0, 0x7504, 0x9f8a, 0xad52, 0x0, 0x0);
        gbc.writeMem(0x90a1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe715);
        EXPECT(gbc.pc(), 0x90a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90a1), 0xcb);
        EXPECT(gbc.readMem(0x90a2), 0xb8);
        // CB B8 030E
        gbc.setState(0xbff, 0x5693, 0x8940, 0x4be9, 0x808a, 0x8972, 0x1, 0x1);
        gbc.writeMem(0xbff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5693);
        EXPECT(gbc.pc(), 0xc01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 030F
        gbc.setState(0xd1cb, 0xe506, 0xc790, 0xc84d, 0xf3d4, 0x1d6a, 0x1, 0x0);
        gbc.writeMem(0xd1cb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe506);
        EXPECT(gbc.pc(), 0xd1cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1cb), 0xcb);
        EXPECT(gbc.readMem(0xd1cc), 0xb8);
        // CB B8 0310
        gbc.setState(0xa94f, 0x59ff, 0xce40, 0x5d18, 0x61ea, 0x3f96, 0x0, 0x1);
        gbc.writeMem(0xa94f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x59ff);
        EXPECT(gbc.pc(), 0xa951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa94f), 0xcb);
        EXPECT(gbc.readMem(0xa950), 0xb8);
        // CB B8 0311
        gbc.setState(0xd333, 0xedd7, 0xbba0, 0xc761, 0x3da0, 0xed2d, 0x0, 0x0);
        gbc.writeMem(0xd333, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xedd7);
        EXPECT(gbc.pc(), 0xd335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd333), 0xcb);
        EXPECT(gbc.readMem(0xd334), 0xb8);
        // CB B8 0312
        gbc.setState(0xcd04, 0xb7e2, 0xc410, 0xfaca, 0xf01d, 0xa1e, 0x1, 0x1);
        gbc.writeMem(0xcd04, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb7e2);
        EXPECT(gbc.pc(), 0xcd06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd04), 0xcb);
        EXPECT(gbc.readMem(0xcd05), 0xb8);
        // CB B8 0313
        gbc.setState(0x50f4, 0xff2f, 0xf760, 0xe632, 0x24a, 0xefd5, 0x0, 0x0);
        gbc.writeMem(0x50f4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xff2f);
        EXPECT(gbc.pc(), 0x50f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0314
        gbc.setState(0x61e7, 0xd83c, 0x66b0, 0xc23d, 0x43a3, 0xba53, 0x1, 0x0);
        gbc.writeMem(0x61e7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd83c);
        EXPECT(gbc.pc(), 0x61e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0315
        gbc.setState(0xce37, 0x5e13, 0x27c0, 0xfa86, 0x2d44, 0x3a1b, 0x0, 0x0);
        gbc.writeMem(0xce37, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5e13);
        EXPECT(gbc.pc(), 0xce39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce37), 0xcb);
        EXPECT(gbc.readMem(0xce38), 0xb8);
        // CB B8 0316
        gbc.setState(0xa735, 0x38c, 0xdb30, 0x9534, 0x8acd, 0x4407, 0x1, 0x0);
        gbc.writeMem(0xa735, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x38c);
        EXPECT(gbc.pc(), 0xa737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa735), 0xcb);
        EXPECT(gbc.readMem(0xa736), 0xb8);
        // CB B8 0317
        gbc.setState(0x6748, 0xae9e, 0x2180, 0xab1f, 0xdc64, 0x3d2f, 0x0, 0x0);
        gbc.writeMem(0x6748, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xae9e);
        EXPECT(gbc.pc(), 0x674a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0318
        gbc.setState(0xc479, 0xfc05, 0xf010, 0x1b3a, 0x81fb, 0x6fdf, 0x0, 0x1);
        gbc.writeMem(0xc479, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfc05);
        EXPECT(gbc.pc(), 0xc47b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc479), 0xcb);
        EXPECT(gbc.readMem(0xc47a), 0xb8);
        // CB B8 0319
        gbc.setState(0xabe9, 0xa546, 0xf4a0, 0xee15, 0x758e, 0x1433, 0x0, 0x1);
        gbc.writeMem(0xabe9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa546);
        EXPECT(gbc.pc(), 0xabeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe9), 0xcb);
        EXPECT(gbc.readMem(0xabea), 0xb8);
        // CB B8 031A
        gbc.setState(0xca57, 0xd952, 0x9ec0, 0x2d96, 0x505e, 0xfe80, 0x0, 0x0);
        gbc.writeMem(0xca57, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd952);
        EXPECT(gbc.pc(), 0xca59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca57), 0xcb);
        EXPECT(gbc.readMem(0xca58), 0xb8);
        // CB B8 031B
        gbc.setState(0x12ec, 0xffd7, 0x8b90, 0x1e9c, 0x6dae, 0xa42d, 0x0, 0x1);
        gbc.writeMem(0x12ec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xffd7);
        EXPECT(gbc.pc(), 0x12ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 031C
        gbc.setState(0x977b, 0x9fdc, 0xb3a0, 0xf8bc, 0xad2d, 0x31ad, 0x1, 0x1);
        gbc.writeMem(0x977b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9fdc);
        EXPECT(gbc.pc(), 0x977d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x977b), 0xcb);
        EXPECT(gbc.readMem(0x977c), 0xb8);
        // CB B8 031D
        gbc.setState(0x8148, 0xa957, 0x7ee0, 0x75bc, 0x36bb, 0x19df, 0x1, 0x1);
        gbc.writeMem(0x8148, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa957);
        EXPECT(gbc.pc(), 0x814a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8148), 0xcb);
        EXPECT(gbc.readMem(0x8149), 0xb8);
        // CB B8 031E
        gbc.setState(0xd565, 0x1bd1, 0xdfb0, 0xdb02, 0x15d7, 0x1fae, 0x1, 0x1);
        gbc.writeMem(0xd565, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1bd1);
        EXPECT(gbc.pc(), 0xd567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd565), 0xcb);
        EXPECT(gbc.readMem(0xd566), 0xb8);
        // CB B8 031F
        gbc.setState(0x20b5, 0xfb8, 0x8e20, 0x6208, 0x4d69, 0xae9c, 0x1, 0x1);
        gbc.writeMem(0x20b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xfb8);
        EXPECT(gbc.pc(), 0x20b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0320
        gbc.setState(0x13e1, 0xf32d, 0xd70, 0x3570, 0x6364, 0x2fb8, 0x0, 0x0);
        gbc.writeMem(0x13e1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf32d);
        EXPECT(gbc.pc(), 0x13e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0321
        gbc.setState(0xccc4, 0xd462, 0x3cc0, 0xe5a4, 0x6aae, 0xdad3, 0x1, 0x0);
        gbc.writeMem(0xccc4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd462);
        EXPECT(gbc.pc(), 0xccc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc4), 0xcb);
        EXPECT(gbc.readMem(0xccc5), 0xb8);
        // CB B8 0322
        gbc.setState(0x53a5, 0x9792, 0xdee0, 0x4d61, 0xd0eb, 0x655e, 0x1, 0x0);
        gbc.writeMem(0x53a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9792);
        EXPECT(gbc.pc(), 0x53a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0323
        gbc.setState(0x9195, 0x87cd, 0x94f0, 0xb793, 0xf7d8, 0xd296, 0x1, 0x1);
        gbc.writeMem(0x9195, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x87cd);
        EXPECT(gbc.pc(), 0x9197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9195), 0xcb);
        EXPECT(gbc.readMem(0x9196), 0xb8);
        // CB B8 0324
        gbc.setState(0x41b9, 0xa5af, 0x190, 0x9dd5, 0xcc28, 0xa306, 0x1, 0x0);
        gbc.writeMem(0x41b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa5af);
        EXPECT(gbc.pc(), 0x41bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0325
        gbc.setState(0x2645, 0xc35, 0xe4c0, 0xdee6, 0xa50, 0x4566, 0x1, 0x0);
        gbc.writeMem(0x2645, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc35);
        EXPECT(gbc.pc(), 0x2647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0326
        gbc.setState(0xdc95, 0x7580, 0x1360, 0x7b9e, 0x534, 0x6dab, 0x0, 0x0);
        gbc.writeMem(0xdc95, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7580);
        EXPECT(gbc.pc(), 0xdc97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc95), 0xcb);
        EXPECT(gbc.readMem(0xdc96), 0xb8);
        // CB B8 0327
        gbc.setState(0xec5, 0x96bb, 0x2250, 0x5f9b, 0x8eca, 0x5f37, 0x1, 0x1);
        gbc.writeMem(0xec5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x96bb);
        EXPECT(gbc.pc(), 0xec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0328
        gbc.setState(0xa58, 0xc6bf, 0x7c20, 0xe420, 0x4385, 0x76dd, 0x1, 0x1);
        gbc.writeMem(0xa58, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc6bf);
        EXPECT(gbc.pc(), 0xa5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0329
        gbc.setState(0x37c9, 0x84df, 0x3330, 0x8e6c, 0x957f, 0xd42f, 0x1, 0x0);
        gbc.writeMem(0x37c9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x84df);
        EXPECT(gbc.pc(), 0x37cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 032A
        gbc.setState(0xbda7, 0xe3e9, 0x5f10, 0xb1d2, 0x838b, 0xc768, 0x1, 0x0);
        gbc.writeMem(0xbda7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe3e9);
        EXPECT(gbc.pc(), 0xbda9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda7), 0xcb);
        EXPECT(gbc.readMem(0xbda8), 0xb8);
        // CB B8 032B
        gbc.setState(0x2212, 0x453b, 0x7a80, 0xadeb, 0x3486, 0x3019, 0x0, 0x1);
        gbc.writeMem(0x2212, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x453b);
        EXPECT(gbc.pc(), 0x2214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 032C
        gbc.setState(0x7524, 0xefba, 0xe8c0, 0x1828, 0x9b06, 0x2e8, 0x1, 0x0);
        gbc.writeMem(0x7524, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xefba);
        EXPECT(gbc.pc(), 0x7526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 032D
        gbc.setState(0xef45, 0x565e, 0x9060, 0x111a, 0x3d8d, 0x42b5, 0x0, 0x1);
        gbc.writeMem(0xef45, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x565e);
        EXPECT(gbc.pc(), 0xef47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef45), 0xcb);
        EXPECT(gbc.readMem(0xef46), 0xb8);
        // CB B8 032E
        gbc.setState(0xa571, 0xdbe5, 0xb3f0, 0x3758, 0x6962, 0x7748, 0x1, 0x1);
        gbc.writeMem(0xa571, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdbe5);
        EXPECT(gbc.pc(), 0xa573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa571), 0xcb);
        EXPECT(gbc.readMem(0xa572), 0xb8);
        // CB B8 032F
        gbc.setState(0x5ad7, 0x6330, 0x3af0, 0x4ea2, 0x8696, 0xd06f, 0x0, 0x0);
        gbc.writeMem(0x5ad7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6330);
        EXPECT(gbc.pc(), 0x5ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0330
        gbc.setState(0xa167, 0x3166, 0xf1d0, 0x9bca, 0x3527, 0x5e34, 0x0, 0x0);
        gbc.writeMem(0xa167, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3166);
        EXPECT(gbc.pc(), 0xa169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa167), 0xcb);
        EXPECT(gbc.readMem(0xa168), 0xb8);
        // CB B8 0331
        gbc.setState(0x59f7, 0x9d3d, 0x1a80, 0xed4d, 0x2be4, 0xaa27, 0x1, 0x0);
        gbc.writeMem(0x59f7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9d3d);
        EXPECT(gbc.pc(), 0x59f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0332
        gbc.setState(0x636d, 0x1df2, 0x6250, 0xc004, 0x147, 0xc991, 0x0, 0x1);
        gbc.writeMem(0x636d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1df2);
        EXPECT(gbc.pc(), 0x636f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0333
        gbc.setState(0xb79b, 0x7371, 0x8440, 0x52aa, 0x1067, 0xef59, 0x0, 0x1);
        gbc.writeMem(0xb79b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7371);
        EXPECT(gbc.pc(), 0xb79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb79b), 0xcb);
        EXPECT(gbc.readMem(0xb79c), 0xb8);
        // CB B8 0334
        gbc.setState(0xd211, 0xcbd5, 0xe030, 0x51ea, 0x7d0d, 0x3b5, 0x0, 0x1);
        gbc.writeMem(0xd211, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xcbd5);
        EXPECT(gbc.pc(), 0xd213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd211), 0xcb);
        EXPECT(gbc.readMem(0xd212), 0xb8);
        // CB B8 0335
        gbc.setState(0x3452, 0xc321, 0x9fe0, 0x9d91, 0x7a6f, 0xae59, 0x1, 0x1);
        gbc.writeMem(0x3452, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc321);
        EXPECT(gbc.pc(), 0x3454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0337
        gbc.setState(0x4f5f, 0x90a6, 0x5460, 0x5231, 0xf5b8, 0x4af7, 0x1, 0x0);
        gbc.writeMem(0x4f5f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x90a6);
        EXPECT(gbc.pc(), 0x4f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0338
        gbc.setState(0x8f4e, 0x5706, 0x1780, 0xaeec, 0xf13c, 0xa950, 0x1, 0x0);
        gbc.writeMem(0x8f4e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5706);
        EXPECT(gbc.pc(), 0x8f50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f4e), 0xcb);
        EXPECT(gbc.readMem(0x8f4f), 0xb8);
        // CB B8 0339
        gbc.setState(0x6c65, 0x911f, 0x1a00, 0xed3e, 0xf68a, 0x8e37, 0x0, 0x1);
        gbc.writeMem(0x6c65, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x911f);
        EXPECT(gbc.pc(), 0x6c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 033A
        gbc.setState(0xdb9d, 0x32cd, 0x4380, 0xfa28, 0xcd8b, 0x700e, 0x0, 0x1);
        gbc.writeMem(0xdb9d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x32cd);
        EXPECT(gbc.pc(), 0xdb9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb9d), 0xcb);
        EXPECT(gbc.readMem(0xdb9e), 0xb8);
        // CB B8 033B
        gbc.setState(0x8f8f, 0x2fe0, 0xd0b0, 0x597d, 0x4652, 0xac21, 0x1, 0x0);
        gbc.writeMem(0x8f8f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2fe0);
        EXPECT(gbc.pc(), 0x8f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f8f), 0xcb);
        EXPECT(gbc.readMem(0x8f90), 0xb8);
        // CB B8 033C
        gbc.setState(0x73db, 0x125, 0xee10, 0xc6f8, 0x78b1, 0x16cf, 0x1, 0x1);
        gbc.writeMem(0x73db, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x125);
        EXPECT(gbc.pc(), 0x73dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 033D
        gbc.setState(0x2d0b, 0xb4ca, 0xabb0, 0x87d2, 0xbbff, 0xee8a, 0x0, 0x1);
        gbc.writeMem(0x2d0b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb4ca);
        EXPECT(gbc.pc(), 0x2d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 033E
        gbc.setState(0xc065, 0x60b5, 0x44b0, 0xfa5e, 0x7806, 0x9a23, 0x0, 0x0);
        gbc.writeMem(0xc065, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x60b5);
        EXPECT(gbc.pc(), 0xc067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc065), 0xcb);
        EXPECT(gbc.readMem(0xc066), 0xb8);
        // CB B8 033F
        gbc.setState(0x6f, 0x5958, 0x7490, 0xb758, 0x525c, 0xec8b, 0x1, 0x0);
        gbc.writeMem(0x6f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5958);
        EXPECT(gbc.pc(), 0x71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0340
        gbc.setState(0x9a7d, 0x1fa2, 0xfdb0, 0x58f7, 0xcf49, 0x5ed6, 0x1, 0x0);
        gbc.writeMem(0x9a7d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1fa2);
        EXPECT(gbc.pc(), 0x9a7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a7d), 0xcb);
        EXPECT(gbc.readMem(0x9a7e), 0xb8);
        // CB B8 0341
        gbc.setState(0x2f15, 0x16e8, 0x4800, 0xe546, 0xbcd4, 0x12bf, 0x1, 0x0);
        gbc.writeMem(0x2f15, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x16e8);
        EXPECT(gbc.pc(), 0x2f17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0342
        gbc.setState(0xb72c, 0x271, 0x1ba0, 0xd13d, 0xb85c, 0x64ee, 0x0, 0x0);
        gbc.writeMem(0xb72c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x271);
        EXPECT(gbc.pc(), 0xb72e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb72c), 0xcb);
        EXPECT(gbc.readMem(0xb72d), 0xb8);
        // CB B8 0344
        gbc.setState(0xb571, 0x8076, 0x6a70, 0xb941, 0xd3ac, 0xc640, 0x1, 0x1);
        gbc.writeMem(0xb571, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8076);
        EXPECT(gbc.pc(), 0xb573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb571), 0xcb);
        EXPECT(gbc.readMem(0xb572), 0xb8);
        // CB B8 0345
        gbc.setState(0x4a5d, 0x3e88, 0xf4d0, 0x9317, 0xe775, 0x5fa8, 0x1, 0x0);
        gbc.writeMem(0x4a5d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3e88);
        EXPECT(gbc.pc(), 0x4a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0346
        gbc.setState(0xa061, 0x9b2e, 0x4830, 0x54e0, 0xebad, 0x3aa2, 0x0, 0x1);
        gbc.writeMem(0xa061, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9b2e);
        EXPECT(gbc.pc(), 0xa063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa061), 0xcb);
        EXPECT(gbc.readMem(0xa062), 0xb8);
        // CB B8 0347
        gbc.setState(0x4a7e, 0xe10a, 0x8dc0, 0x5af8, 0x6745, 0x8122, 0x1, 0x0);
        gbc.writeMem(0x4a7e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe10a);
        EXPECT(gbc.pc(), 0x4a80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0348
        gbc.setState(0x4f62, 0x6cc2, 0x3e20, 0x5a46, 0xe1cf, 0xad87, 0x1, 0x1);
        gbc.writeMem(0x4f62, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6cc2);
        EXPECT(gbc.pc(), 0x4f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0349
        gbc.setState(0x11b9, 0xacc3, 0xf3b0, 0x15b6, 0xc2c4, 0xc734, 0x0, 0x1);
        gbc.writeMem(0x11b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xacc3);
        EXPECT(gbc.pc(), 0x11bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 034A
        gbc.setState(0x599a, 0xb179, 0xfee0, 0x6608, 0x46f0, 0x34e2, 0x1, 0x1);
        gbc.writeMem(0x599a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb179);
        EXPECT(gbc.pc(), 0x599c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 034B
        gbc.setState(0x8c95, 0x2c8b, 0x2780, 0x63a, 0x3653, 0xef48, 0x1, 0x1);
        gbc.writeMem(0x8c95, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2c8b);
        EXPECT(gbc.pc(), 0x8c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c95), 0xcb);
        EXPECT(gbc.readMem(0x8c96), 0xb8);
        // CB B8 034C
        gbc.setState(0x1985, 0x1d7, 0x5b40, 0xbdce, 0x671a, 0x76c0, 0x0, 0x0);
        gbc.writeMem(0x1985, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1d7);
        EXPECT(gbc.pc(), 0x1987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 034D
        gbc.setState(0x4c96, 0x97f6, 0x5db0, 0x1fba, 0x303f, 0x8a, 0x0, 0x0);
        gbc.writeMem(0x4c96, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x97f6);
        EXPECT(gbc.pc(), 0x4c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 034E
        gbc.setState(0xac06, 0x4ed, 0x1fc0, 0xa7fa, 0x8a51, 0xef6a, 0x0, 0x1);
        gbc.writeMem(0xac06, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4ed);
        EXPECT(gbc.pc(), 0xac08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac06), 0xcb);
        EXPECT(gbc.readMem(0xac07), 0xb8);
        // CB B8 034F
        gbc.setState(0x8145, 0x2eb9, 0x92c0, 0x3938, 0x564e, 0xa9a0, 0x1, 0x0);
        gbc.writeMem(0x8145, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2eb9);
        EXPECT(gbc.pc(), 0x8147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8145), 0xcb);
        EXPECT(gbc.readMem(0x8146), 0xb8);
        // CB B8 0350
        gbc.setState(0x6ec7, 0xa6bf, 0x4a00, 0x50c2, 0xa73e, 0x7c80, 0x0, 0x1);
        gbc.writeMem(0x6ec7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa6bf);
        EXPECT(gbc.pc(), 0x6ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0351
        gbc.setState(0x6b6f, 0x59e9, 0xf590, 0x279, 0xffe0, 0x5ae0, 0x1, 0x1);
        gbc.writeMem(0x6b6f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x59e9);
        EXPECT(gbc.pc(), 0x6b71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0352
        gbc.setState(0x2cbb, 0xbcb9, 0xc210, 0x790, 0x853e, 0xd6f7, 0x0, 0x0);
        gbc.writeMem(0x2cbb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbcb9);
        EXPECT(gbc.pc(), 0x2cbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0353
        gbc.setState(0x432d, 0x24b3, 0x9220, 0xc187, 0xc126, 0x1688, 0x1, 0x1);
        gbc.writeMem(0x432d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x24b3);
        EXPECT(gbc.pc(), 0x432f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0354
        gbc.setState(0x86da, 0x930f, 0x8350, 0x57a1, 0x36cd, 0xd8ad, 0x0, 0x0);
        gbc.writeMem(0x86da, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x930f);
        EXPECT(gbc.pc(), 0x86dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86da), 0xcb);
        EXPECT(gbc.readMem(0x86db), 0xb8);
        // CB B8 0355
        gbc.setState(0x9dee, 0xb33a, 0x4450, 0xb58e, 0xc560, 0x43d9, 0x0, 0x1);
        gbc.writeMem(0x9dee, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb33a);
        EXPECT(gbc.pc(), 0x9df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dee), 0xcb);
        EXPECT(gbc.readMem(0x9def), 0xb8);
        // CB B8 0356
        gbc.setState(0xcdbf, 0xf1f7, 0x7af0, 0x2f7e, 0xae8f, 0x6e1, 0x0, 0x0);
        gbc.writeMem(0xcdbf, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf1f7);
        EXPECT(gbc.pc(), 0xcdc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdbf), 0xcb);
        EXPECT(gbc.readMem(0xcdc0), 0xb8);
        // CB B8 0357
        gbc.setState(0x607f, 0x674d, 0x3400, 0x3b42, 0x40ce, 0xe247, 0x1, 0x1);
        gbc.writeMem(0x607f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x674d);
        EXPECT(gbc.pc(), 0x6081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0359
        gbc.setState(0x9f37, 0x5575, 0x54b0, 0x1161, 0x1ada, 0xc12, 0x1, 0x1);
        gbc.writeMem(0x9f37, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5575);
        EXPECT(gbc.pc(), 0x9f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f37), 0xcb);
        EXPECT(gbc.readMem(0x9f38), 0xb8);
        // CB B8 035A
        gbc.setState(0x16a6, 0x7773, 0xa5f0, 0x94dd, 0xe751, 0xb438, 0x0, 0x0);
        gbc.writeMem(0x16a6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7773);
        EXPECT(gbc.pc(), 0x16a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 035B
        gbc.setState(0x218e, 0xbbf4, 0xd060, 0x5025, 0x90db, 0x486c, 0x0, 0x0);
        gbc.writeMem(0x218e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbbf4);
        EXPECT(gbc.pc(), 0x2190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 035C
        gbc.setState(0x840d, 0x6b12, 0x15c0, 0xd256, 0x8a3a, 0xb926, 0x0, 0x0);
        gbc.writeMem(0x840d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6b12);
        EXPECT(gbc.pc(), 0x840f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840d), 0xcb);
        EXPECT(gbc.readMem(0x840e), 0xb8);
        // CB B8 035D
        gbc.setState(0x23d, 0x45a4, 0xa130, 0x4497, 0x812f, 0x6018, 0x0, 0x1);
        gbc.writeMem(0x23d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x45a4);
        EXPECT(gbc.pc(), 0x23f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 035E
        gbc.setState(0xec1c, 0xa974, 0xdc10, 0x8371, 0x77ee, 0xf251, 0x1, 0x1);
        gbc.writeMem(0xec1c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa974);
        EXPECT(gbc.pc(), 0xec1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec1c), 0xcb);
        EXPECT(gbc.readMem(0xec1d), 0xb8);
        // CB B8 035F
        gbc.setState(0x3ab, 0x820c, 0xb920, 0x6ca2, 0xade7, 0x313b, 0x0, 0x0);
        gbc.writeMem(0x3ab, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x820c);
        EXPECT(gbc.pc(), 0x3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0360
        gbc.setState(0x4464, 0x8650, 0x6850, 0xc302, 0x8727, 0x7020, 0x1, 0x1);
        gbc.writeMem(0x4464, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8650);
        EXPECT(gbc.pc(), 0x4466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0361
        gbc.setState(0x6c27, 0x6af5, 0x26b0, 0x47f7, 0x41d, 0x56de, 0x0, 0x1);
        gbc.writeMem(0x6c27, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6af5);
        EXPECT(gbc.pc(), 0x6c29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0362
        gbc.setState(0x6cf7, 0x5f29, 0xb1b0, 0x5881, 0xd31d, 0x85d8, 0x1, 0x0);
        gbc.writeMem(0x6cf7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5f29);
        EXPECT(gbc.pc(), 0x6cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0363
        gbc.setState(0x1132, 0x78b9, 0xe310, 0x211c, 0x8c07, 0xeea3, 0x1, 0x1);
        gbc.writeMem(0x1132, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x78b9);
        EXPECT(gbc.pc(), 0x1134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0364
        gbc.setState(0xe58, 0x4583, 0x4380, 0x96e, 0x655, 0x54bd, 0x1, 0x0);
        gbc.writeMem(0xe58, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4583);
        EXPECT(gbc.pc(), 0xe5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0365
        gbc.setState(0x4ae8, 0x26cd, 0x2c20, 0xcd19, 0x4761, 0x9981, 0x1, 0x0);
        gbc.writeMem(0x4ae8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x26cd);
        EXPECT(gbc.pc(), 0x4aea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0366
        gbc.setState(0x8966, 0xee94, 0xd470, 0x7a1e, 0x62c0, 0x234f, 0x1, 0x1);
        gbc.writeMem(0x8966, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xee94);
        EXPECT(gbc.pc(), 0x8968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8966), 0xcb);
        EXPECT(gbc.readMem(0x8967), 0xb8);
        // CB B8 0367
        gbc.setState(0xe6b7, 0x3839, 0xe2f0, 0xc687, 0x9b4f, 0xd464, 0x1, 0x1);
        gbc.writeMem(0xe6b7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3839);
        EXPECT(gbc.pc(), 0xe6b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6b7), 0xcb);
        EXPECT(gbc.readMem(0xe6b8), 0xb8);
        // CB B8 0368
        gbc.setState(0x343, 0xec9d, 0x2230, 0x5d76, 0xc2db, 0x5fbd, 0x1, 0x1);
        gbc.writeMem(0x343, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xec9d);
        EXPECT(gbc.pc(), 0x345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0369
        gbc.setState(0x9683, 0x2e3e, 0x2fd0, 0x1ef7, 0x5b2, 0xb827, 0x1, 0x0);
        gbc.writeMem(0x9683, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2e3e);
        EXPECT(gbc.pc(), 0x9685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9683), 0xcb);
        EXPECT(gbc.readMem(0x9684), 0xb8);
        // CB B8 036A
        gbc.setState(0xd542, 0x56c8, 0xec20, 0x2b98, 0xe91, 0xb2c, 0x1, 0x1);
        gbc.writeMem(0xd542, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x56c8);
        EXPECT(gbc.pc(), 0xd544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd542), 0xcb);
        EXPECT(gbc.readMem(0xd543), 0xb8);
        // CB B8 036B
        gbc.setState(0x77f3, 0x47d4, 0x9d20, 0x88a5, 0xc4a, 0x375c, 0x0, 0x1);
        gbc.writeMem(0x77f3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x47d4);
        EXPECT(gbc.pc(), 0x77f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 036C
        gbc.setState(0xdaf4, 0xe597, 0xd7d0, 0x2ad1, 0x1d58, 0x4edf, 0x0, 0x1);
        gbc.writeMem(0xdaf4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe597);
        EXPECT(gbc.pc(), 0xdaf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf4), 0xcb);
        EXPECT(gbc.readMem(0xdaf5), 0xb8);
        // CB B8 036D
        gbc.setState(0xc167, 0x4817, 0xd850, 0x2800, 0x883b, 0x381f, 0x0, 0x1);
        gbc.writeMem(0xc167, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4817);
        EXPECT(gbc.pc(), 0xc169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc167), 0xcb);
        EXPECT(gbc.readMem(0xc168), 0xb8);
        // CB B8 036E
        gbc.setState(0x2139, 0x32b4, 0x4390, 0xe88d, 0xf387, 0xab78, 0x1, 0x0);
        gbc.writeMem(0x2139, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x32b4);
        EXPECT(gbc.pc(), 0x213b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 036F
        gbc.setState(0xadfb, 0x8421, 0xb4b0, 0x5cb6, 0x11b3, 0xda38, 0x1, 0x1);
        gbc.writeMem(0xadfb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8421);
        EXPECT(gbc.pc(), 0xadfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadfb), 0xcb);
        EXPECT(gbc.readMem(0xadfc), 0xb8);
        // CB B8 0370
        gbc.setState(0x1507, 0x35ff, 0x36d0, 0x6434, 0x1a36, 0x335b, 0x1, 0x1);
        gbc.writeMem(0x1507, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x35ff);
        EXPECT(gbc.pc(), 0x1509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0371
        gbc.setState(0x720, 0x32a8, 0x5d60, 0x5e2f, 0x978a, 0x12a0, 0x0, 0x0);
        gbc.writeMem(0x720, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x32a8);
        EXPECT(gbc.pc(), 0x722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0372
        gbc.setState(0xc9ad, 0x1a7c, 0xdfb0, 0xae3a, 0xe0a7, 0x15c, 0x0, 0x0);
        gbc.writeMem(0xc9ad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1a7c);
        EXPECT(gbc.pc(), 0xc9af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ad), 0xcb);
        EXPECT(gbc.readMem(0xc9ae), 0xb8);
        // CB B8 0373
        gbc.setState(0x38a8, 0x1efb, 0xd520, 0x8d86, 0xc9f4, 0xd110, 0x1, 0x1);
        gbc.writeMem(0x38a8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1efb);
        EXPECT(gbc.pc(), 0x38aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0374
        gbc.setState(0x3504, 0x5b1, 0x9390, 0xe736, 0x4d49, 0xe0e8, 0x0, 0x0);
        gbc.writeMem(0x3504, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5b1);
        EXPECT(gbc.pc(), 0x3506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0375
        gbc.setState(0x666e, 0x3a66, 0xea70, 0x11d3, 0xb493, 0x7c2a, 0x0, 0x1);
        gbc.writeMem(0x666e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3a66);
        EXPECT(gbc.pc(), 0x6670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0376
        gbc.setState(0x5c38, 0xab3b, 0xd6d0, 0xfdd6, 0xd021, 0xe7e1, 0x1, 0x0);
        gbc.writeMem(0x5c38, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xab3b);
        EXPECT(gbc.pc(), 0x5c3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0377
        gbc.setState(0xc7ec, 0x3d67, 0xc470, 0x7e74, 0xa019, 0x818, 0x1, 0x1);
        gbc.writeMem(0xc7ec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3d67);
        EXPECT(gbc.pc(), 0xc7ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ec), 0xcb);
        EXPECT(gbc.readMem(0xc7ed), 0xb8);
        // CB B8 0378
        gbc.setState(0x9443, 0xc2da, 0x3d30, 0x4bd3, 0xe6a9, 0x5a7f, 0x0, 0x0);
        gbc.writeMem(0x9443, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc2da);
        EXPECT(gbc.pc(), 0x9445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9443), 0xcb);
        EXPECT(gbc.readMem(0x9444), 0xb8);
        // CB B8 0379
        gbc.setState(0x5549, 0x7c7b, 0xe100, 0xdd3e, 0x1aa2, 0x2888, 0x0, 0x1);
        gbc.writeMem(0x5549, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7c7b);
        EXPECT(gbc.pc(), 0x554b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 037A
        gbc.setState(0x4f86, 0xce78, 0xeae0, 0x2d42, 0xd040, 0xfcbe, 0x0, 0x1);
        gbc.writeMem(0x4f86, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xce78);
        EXPECT(gbc.pc(), 0x4f88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 037B
        gbc.setState(0x9c86, 0xfd40, 0xaac0, 0x26c6, 0x1059, 0xab96, 0x1, 0x1);
        gbc.writeMem(0x9c86, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfd40);
        EXPECT(gbc.pc(), 0x9c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c86), 0xcb);
        EXPECT(gbc.readMem(0x9c87), 0xb8);
        // CB B8 037C
        gbc.setState(0x14fd, 0x8ba6, 0x2570, 0x476e, 0x9fad, 0x7c68, 0x1, 0x1);
        gbc.writeMem(0x14fd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8ba6);
        EXPECT(gbc.pc(), 0x14ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 037D
        gbc.setState(0x3aab, 0x14e, 0x9e20, 0xdff5, 0xc23b, 0xd5dd, 0x0, 0x1);
        gbc.writeMem(0x3aab, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x14e);
        EXPECT(gbc.pc(), 0x3aad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 037E
        gbc.setState(0xacc4, 0x1af7, 0x5a50, 0xe5a1, 0x20fe, 0xf37a, 0x0, 0x1);
        gbc.writeMem(0xacc4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1af7);
        EXPECT(gbc.pc(), 0xacc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc4), 0xcb);
        EXPECT(gbc.readMem(0xacc5), 0xb8);
        // CB B8 037F
        gbc.setState(0x9b5, 0xf1bf, 0x6ed0, 0x5564, 0xd814, 0xb7e7, 0x1, 0x0);
        gbc.writeMem(0x9b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf1bf);
        EXPECT(gbc.pc(), 0x9b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0380
        gbc.setState(0x3db3, 0x49e1, 0x7c20, 0x32c0, 0x2ba2, 0xde04, 0x1, 0x1);
        gbc.writeMem(0x3db3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x49e1);
        EXPECT(gbc.pc(), 0x3db5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0381
        gbc.setState(0xa079, 0x7211, 0x8300, 0x4df0, 0xc3df, 0x99dc, 0x0, 0x1);
        gbc.writeMem(0xa079, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7211);
        EXPECT(gbc.pc(), 0xa07b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa079), 0xcb);
        EXPECT(gbc.readMem(0xa07a), 0xb8);
        // CB B8 0383
        gbc.setState(0x7abb, 0xa40, 0xb700, 0x7c67, 0x4bc5, 0x3577, 0x0, 0x1);
        gbc.writeMem(0x7abb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa40);
        EXPECT(gbc.pc(), 0x7abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0384
        gbc.setState(0xcef3, 0xf82, 0x7dd0, 0xf9f3, 0x50d7, 0xd878, 0x0, 0x1);
        gbc.writeMem(0xcef3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf82);
        EXPECT(gbc.pc(), 0xcef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcef3), 0xcb);
        EXPECT(gbc.readMem(0xcef4), 0xb8);
        // CB B8 0385
        gbc.setState(0x2e11, 0x8c98, 0xa3f0, 0xf173, 0x3032, 0x237a, 0x1, 0x0);
        gbc.writeMem(0x2e11, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8c98);
        EXPECT(gbc.pc(), 0x2e13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0386
        gbc.setState(0xb8e8, 0x6867, 0x19a0, 0x4102, 0xb67a, 0x4c7d, 0x1, 0x0);
        gbc.writeMem(0xb8e8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6867);
        EXPECT(gbc.pc(), 0xb8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8e8), 0xcb);
        EXPECT(gbc.readMem(0xb8e9), 0xb8);
        // CB B8 0387
        gbc.setState(0x4b01, 0x27fb, 0x6f10, 0x2d73, 0x7dd3, 0x47bc, 0x1, 0x1);
        gbc.writeMem(0x4b01, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x27fb);
        EXPECT(gbc.pc(), 0x4b03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0388
        gbc.setState(0x5449, 0x8e79, 0xee20, 0x539a, 0xbb8f, 0x8dad, 0x0, 0x0);
        gbc.writeMem(0x5449, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8e79);
        EXPECT(gbc.pc(), 0x544b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0389
        gbc.setState(0x6346, 0x72e7, 0x3f10, 0x84b, 0x8241, 0xf0d9, 0x1, 0x0);
        gbc.writeMem(0x6346, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x72e7);
        EXPECT(gbc.pc(), 0x6348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 038A
        gbc.setState(0x32d5, 0x35a7, 0xfee0, 0x46c6, 0xfb19, 0x9dd4, 0x0, 0x1);
        gbc.writeMem(0x32d5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x35a7);
        EXPECT(gbc.pc(), 0x32d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 038B
        gbc.setState(0x48c, 0x91a0, 0x5c70, 0xda4a, 0xb117, 0xa47d, 0x0, 0x0);
        gbc.writeMem(0x48c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x91a0);
        EXPECT(gbc.pc(), 0x48e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 038C
        gbc.setState(0xa879, 0xc50c, 0x8d00, 0x849, 0x5d31, 0x60f6, 0x1, 0x1);
        gbc.writeMem(0xa879, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc50c);
        EXPECT(gbc.pc(), 0xa87b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa879), 0xcb);
        EXPECT(gbc.readMem(0xa87a), 0xb8);
        // CB B8 038D
        gbc.setState(0x1fd1, 0x2e28, 0xf8f0, 0x6797, 0xb54e, 0xa66f, 0x1, 0x1);
        gbc.writeMem(0x1fd1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2e28);
        EXPECT(gbc.pc(), 0x1fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 038E
        gbc.setState(0xb976, 0xbcfc, 0xf420, 0x50f7, 0x90af, 0x3bcf, 0x1, 0x0);
        gbc.writeMem(0xb976, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbcfc);
        EXPECT(gbc.pc(), 0xb978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb976), 0xcb);
        EXPECT(gbc.readMem(0xb977), 0xb8);
        // CB B8 038F
        gbc.setState(0xcb96, 0x469, 0x4950, 0x123f, 0xb357, 0xb582, 0x1, 0x1);
        gbc.writeMem(0xcb96, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x469);
        EXPECT(gbc.pc(), 0xcb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb96), 0xcb);
        EXPECT(gbc.readMem(0xcb97), 0xb8);
        // CB B8 0391
        gbc.setState(0xa9d9, 0x308d, 0x7450, 0x90b0, 0x5d10, 0x7b92, 0x1, 0x1);
        gbc.writeMem(0xa9d9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x308d);
        EXPECT(gbc.pc(), 0xa9db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d9), 0xcb);
        EXPECT(gbc.readMem(0xa9da), 0xb8);
        // CB B8 0392
        gbc.setState(0x9b79, 0x6bb7, 0xaec0, 0xa62f, 0x6d54, 0xcb0, 0x1, 0x0);
        gbc.writeMem(0x9b79, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6bb7);
        EXPECT(gbc.pc(), 0x9b7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b79), 0xcb);
        EXPECT(gbc.readMem(0x9b7a), 0xb8);
        // CB B8 0393
        gbc.setState(0x23f9, 0x4b52, 0x1cf0, 0x9ff7, 0x3953, 0x70d3, 0x1, 0x0);
        gbc.writeMem(0x23f9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4b52);
        EXPECT(gbc.pc(), 0x23fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0394
        gbc.setState(0xd39a, 0x838, 0xb80, 0x8d88, 0x6755, 0x8a0, 0x1, 0x0);
        gbc.writeMem(0xd39a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x838);
        EXPECT(gbc.pc(), 0xd39c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd39a), 0xcb);
        EXPECT(gbc.readMem(0xd39b), 0xb8);
        // CB B8 0395
        gbc.setState(0x9a18, 0x7838, 0x32a0, 0x41f5, 0xd927, 0x84cd, 0x1, 0x1);
        gbc.writeMem(0x9a18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7838);
        EXPECT(gbc.pc(), 0x9a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a18), 0xcb);
        EXPECT(gbc.readMem(0x9a19), 0xb8);
        // CB B8 0396
        gbc.setState(0x3826, 0xb48c, 0x9040, 0x32b1, 0x52f3, 0x81ef, 0x1, 0x0);
        gbc.writeMem(0x3826, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb48c);
        EXPECT(gbc.pc(), 0x3828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 0398
        gbc.setState(0x1234, 0xad2d, 0xe350, 0xc966, 0xff6f, 0x6d82, 0x1, 0x1);
        gbc.writeMem(0x1234, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xad2d);
        EXPECT(gbc.pc(), 0x1236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 0399
        gbc.setState(0x1c84, 0xca25, 0xf350, 0x4eb1, 0x8365, 0x6b66, 0x0, 0x0);
        gbc.writeMem(0x1c84, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xca25);
        EXPECT(gbc.pc(), 0x1c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 039A
        gbc.setState(0xce1f, 0xd144, 0xa3d0, 0x894f, 0xe5b9, 0x6b7, 0x0, 0x0);
        gbc.writeMem(0xce1f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd144);
        EXPECT(gbc.pc(), 0xce21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1f), 0xcb);
        EXPECT(gbc.readMem(0xce20), 0xb8);
        // CB B8 039B
        gbc.setState(0xec76, 0xc77b, 0xd480, 0x2ec7, 0xef06, 0xc1f0, 0x0, 0x0);
        gbc.writeMem(0xec76, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc77b);
        EXPECT(gbc.pc(), 0xec78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec76), 0xcb);
        EXPECT(gbc.readMem(0xec77), 0xb8);
        // CB B8 039C
        gbc.setState(0xadaf, 0x6c9, 0xd700, 0x3020, 0xca27, 0x792b, 0x1, 0x0);
        gbc.writeMem(0xadaf, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6c9);
        EXPECT(gbc.pc(), 0xadb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadaf), 0xcb);
        EXPECT(gbc.readMem(0xadb0), 0xb8);
        // CB B8 039E
        gbc.setState(0xa5cf, 0xbb19, 0x9b80, 0x34ca, 0xce7e, 0x6d2e, 0x0, 0x0);
        gbc.writeMem(0xa5cf, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbb19);
        EXPECT(gbc.pc(), 0xa5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5cf), 0xcb);
        EXPECT(gbc.readMem(0xa5d0), 0xb8);
        // CB B8 039F
        gbc.setState(0x737c, 0xaadc, 0x46d0, 0x755c, 0xae11, 0x418a, 0x0, 0x1);
        gbc.writeMem(0x737c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xaadc);
        EXPECT(gbc.pc(), 0x737e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03A0
        gbc.setState(0x1f14, 0x98a1, 0x61f0, 0x8f36, 0xf30b, 0xfb01, 0x1, 0x1);
        gbc.writeMem(0x1f14, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x98a1);
        EXPECT(gbc.pc(), 0x1f16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03A1
        gbc.setState(0x98d9, 0x3368, 0x55d0, 0xc371, 0x3b1, 0x6445, 0x0, 0x1);
        gbc.writeMem(0x98d9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3368);
        EXPECT(gbc.pc(), 0x98db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d9), 0xcb);
        EXPECT(gbc.readMem(0x98da), 0xb8);
        // CB B8 03A3
        gbc.setState(0x6f0c, 0x5845, 0xfe00, 0x800, 0x1a5a, 0x1ed3, 0x0, 0x0);
        gbc.writeMem(0x6f0c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5845);
        EXPECT(gbc.pc(), 0x6f0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03A4
        gbc.setState(0xb35, 0xc98d, 0x4e90, 0x5a50, 0x4da, 0x76be, 0x1, 0x0);
        gbc.writeMem(0xb35, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc98d);
        EXPECT(gbc.pc(), 0xb37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03A5
        gbc.setState(0xaf11, 0x3fb4, 0x99e0, 0x3abb, 0x8bcf, 0xd8a9, 0x0, 0x1);
        gbc.writeMem(0xaf11, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3fb4);
        EXPECT(gbc.pc(), 0xaf13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf11), 0xcb);
        EXPECT(gbc.readMem(0xaf12), 0xb8);
        // CB B8 03A6
        gbc.setState(0x3bd4, 0x92aa, 0x1020, 0x62b4, 0xfcd8, 0x9540, 0x1, 0x0);
        gbc.writeMem(0x3bd4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x92aa);
        EXPECT(gbc.pc(), 0x3bd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03A7
        gbc.setState(0x33a7, 0x8f78, 0x1330, 0x83a7, 0x4e10, 0x1efd, 0x0, 0x0);
        gbc.writeMem(0x33a7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8f78);
        EXPECT(gbc.pc(), 0x33a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03A8
        gbc.setState(0xd421, 0x98b0, 0x7a30, 0x997e, 0x6274, 0x3a3e, 0x1, 0x0);
        gbc.writeMem(0xd421, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x98b0);
        EXPECT(gbc.pc(), 0xd423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd421), 0xcb);
        EXPECT(gbc.readMem(0xd422), 0xb8);
        // CB B8 03A9
        gbc.setState(0x7bc3, 0x975b, 0x9f40, 0x4bd6, 0xd432, 0x7f64, 0x1, 0x1);
        gbc.writeMem(0x7bc3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x975b);
        EXPECT(gbc.pc(), 0x7bc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03AA
        gbc.setState(0x74c7, 0xdcb2, 0x2fd0, 0xf15d, 0xa0d, 0xaadc, 0x1, 0x1);
        gbc.writeMem(0x74c7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdcb2);
        EXPECT(gbc.pc(), 0x74c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03AB
        gbc.setState(0x30bd, 0x78ba, 0x4530, 0x8fab, 0xfb73, 0x1a5b, 0x1, 0x1);
        gbc.writeMem(0x30bd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x78ba);
        EXPECT(gbc.pc(), 0x30bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03AC
        gbc.setState(0xd91d, 0x76bb, 0x5710, 0xb371, 0xebf2, 0x14d4, 0x0, 0x0);
        gbc.writeMem(0xd91d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x76bb);
        EXPECT(gbc.pc(), 0xd91f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd91d), 0xcb);
        EXPECT(gbc.readMem(0xd91e), 0xb8);
        // CB B8 03AD
        gbc.setState(0x3a63, 0x6d6f, 0x18b0, 0x5f81, 0x10d, 0x7b32, 0x0, 0x0);
        gbc.writeMem(0x3a63, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6d6f);
        EXPECT(gbc.pc(), 0x3a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03AE
        gbc.setState(0x1ed4, 0xd25f, 0xb60, 0x95bd, 0xf637, 0xf17d, 0x0, 0x0);
        gbc.writeMem(0x1ed4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd25f);
        EXPECT(gbc.pc(), 0x1ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03AF
        gbc.setState(0x85d1, 0xaedc, 0xfc80, 0x6bf1, 0xa45a, 0x1c9, 0x0, 0x1);
        gbc.writeMem(0x85d1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xaedc);
        EXPECT(gbc.pc(), 0x85d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d1), 0xcb);
        EXPECT(gbc.readMem(0x85d2), 0xb8);
        // CB B8 03B0
        gbc.setState(0xcc04, 0xe141, 0xc0a0, 0x43cc, 0x4285, 0x6d46, 0x0, 0x0);
        gbc.writeMem(0xcc04, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe141);
        EXPECT(gbc.pc(), 0xcc06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc04), 0xcb);
        EXPECT(gbc.readMem(0xcc05), 0xb8);
        // CB B8 03B1
        gbc.setState(0x7c2e, 0x56f9, 0x9790, 0x6c8e, 0x658, 0xf73b, 0x0, 0x0);
        gbc.writeMem(0x7c2e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x56f9);
        EXPECT(gbc.pc(), 0x7c30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03B3
        gbc.setState(0xcc9d, 0x844a, 0xa030, 0xdc2a, 0xfd61, 0x5f68, 0x0, 0x0);
        gbc.writeMem(0xcc9d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x844a);
        EXPECT(gbc.pc(), 0xcc9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9d), 0xcb);
        EXPECT(gbc.readMem(0xcc9e), 0xb8);
        // CB B8 03B4
        gbc.setState(0x4156, 0xc278, 0x2660, 0x3ca1, 0x9e43, 0xacf4, 0x1, 0x1);
        gbc.writeMem(0x4156, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc278);
        EXPECT(gbc.pc(), 0x4158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03B5
        gbc.setState(0x2712, 0x320, 0x4b50, 0xa050, 0xa5c7, 0x2acc, 0x0, 0x1);
        gbc.writeMem(0x2712, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x320);
        EXPECT(gbc.pc(), 0x2714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03B6
        gbc.setState(0x6b7, 0x7152, 0xff70, 0x714f, 0x214f, 0x19e3, 0x0, 0x1);
        gbc.writeMem(0x6b7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7152);
        EXPECT(gbc.pc(), 0x6b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03B7
        gbc.setState(0x7715, 0xcea6, 0x7d60, 0xc3eb, 0x444f, 0x9612, 0x0, 0x0);
        gbc.writeMem(0x7715, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcea6);
        EXPECT(gbc.pc(), 0x7717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03B8
        gbc.setState(0xe424, 0xa0d4, 0xda50, 0x3674, 0x7b98, 0xb590, 0x0, 0x1);
        gbc.writeMem(0xe424, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa0d4);
        EXPECT(gbc.pc(), 0xe426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe424), 0xcb);
        EXPECT(gbc.readMem(0xe425), 0xb8);
        // CB B8 03B9
        gbc.setState(0xd0ec, 0xe570, 0x40b0, 0x1580, 0x51bb, 0x9750, 0x1, 0x1);
        gbc.writeMem(0xd0ec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe570);
        EXPECT(gbc.pc(), 0xd0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ec), 0xcb);
        EXPECT(gbc.readMem(0xd0ed), 0xb8);
        // CB B8 03BA
        gbc.setState(0xe9ff, 0xc57, 0xf40, 0x48cd, 0xf58c, 0x6d30, 0x1, 0x0);
        gbc.writeMem(0xe9ff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc57);
        EXPECT(gbc.pc(), 0xea01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ff), 0xcb);
        EXPECT(gbc.readMem(0xea00), 0xb8);
        // CB B8 03BB
        gbc.setState(0xa02, 0xbce5, 0xda20, 0x1ecb, 0x225a, 0x8169, 0x1, 0x1);
        gbc.writeMem(0xa02, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xbce5);
        EXPECT(gbc.pc(), 0xa04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03BC
        gbc.setState(0xaa92, 0x8abf, 0xeb70, 0x7ea4, 0x43f1, 0x2cb9, 0x1, 0x1);
        gbc.writeMem(0xaa92, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8abf);
        EXPECT(gbc.pc(), 0xaa94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa92), 0xcb);
        EXPECT(gbc.readMem(0xaa93), 0xb8);
        // CB B8 03BD
        gbc.setState(0xa6b1, 0x44cd, 0xbc30, 0xcb2c, 0x5424, 0x9868, 0x0, 0x0);
        gbc.writeMem(0xa6b1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x44cd);
        EXPECT(gbc.pc(), 0xa6b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b1), 0xcb);
        EXPECT(gbc.readMem(0xa6b2), 0xb8);
        // CB B8 03BE
        gbc.setState(0xa61a, 0xf3b, 0xd440, 0xa623, 0x5257, 0xb182, 0x1, 0x1);
        gbc.writeMem(0xa61a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf3b);
        EXPECT(gbc.pc(), 0xa61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa61a), 0xcb);
        EXPECT(gbc.readMem(0xa61b), 0xb8);
        // CB B8 03BF
        gbc.setState(0x92a5, 0xead, 0xf6b0, 0x7b36, 0x6125, 0x2fe, 0x1, 0x1);
        gbc.writeMem(0x92a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xead);
        EXPECT(gbc.pc(), 0x92a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a5), 0xcb);
        EXPECT(gbc.readMem(0x92a6), 0xb8);
        // CB B8 03C0
        gbc.setState(0xd009, 0xd14, 0xad40, 0x7dc3, 0x2d42, 0x98ad, 0x0, 0x0);
        gbc.writeMem(0xd009, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd14);
        EXPECT(gbc.pc(), 0xd00b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd009), 0xcb);
        EXPECT(gbc.readMem(0xd00a), 0xb8);
        // CB B8 03C1
        gbc.setState(0x2660, 0x9e3, 0x3e40, 0x5f3e, 0xa822, 0x4b70, 0x0, 0x1);
        gbc.writeMem(0x2660, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9e3);
        EXPECT(gbc.pc(), 0x2662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03C2
        gbc.setState(0x6f61, 0x5274, 0x43f0, 0xdb71, 0x27bc, 0x2993, 0x1, 0x0);
        gbc.writeMem(0x6f61, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5274);
        EXPECT(gbc.pc(), 0x6f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03C3
        gbc.setState(0xa82e, 0x2b9, 0x92f0, 0x9f9e, 0x28a4, 0xfa43, 0x0, 0x1);
        gbc.writeMem(0xa82e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2b9);
        EXPECT(gbc.pc(), 0xa830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82e), 0xcb);
        EXPECT(gbc.readMem(0xa82f), 0xb8);
        // CB B8 03C4
        gbc.setState(0x5aa8, 0xd710, 0xb550, 0x64a4, 0x5335, 0x9de4, 0x1, 0x0);
        gbc.writeMem(0x5aa8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd710);
        EXPECT(gbc.pc(), 0x5aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03C5
        gbc.setState(0x1f9d, 0x6269, 0x3300, 0x1c0b, 0x7f99, 0x866d, 0x0, 0x0);
        gbc.writeMem(0x1f9d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6269);
        EXPECT(gbc.pc(), 0x1f9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03C6
        gbc.setState(0x37b5, 0xfe85, 0xb210, 0xa2ae, 0x70de, 0xae33, 0x1, 0x1);
        gbc.writeMem(0x37b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfe85);
        EXPECT(gbc.pc(), 0x37b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03C7
        gbc.setState(0x62ba, 0x949a, 0xba20, 0xc59b, 0xbc1c, 0xef45, 0x1, 0x1);
        gbc.writeMem(0x62ba, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x949a);
        EXPECT(gbc.pc(), 0x62bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03C8
        gbc.setState(0xcb31, 0xfc6b, 0x73a0, 0x40ac, 0xc584, 0x6005, 0x0, 0x1);
        gbc.writeMem(0xcb31, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfc6b);
        EXPECT(gbc.pc(), 0xcb33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb31), 0xcb);
        EXPECT(gbc.readMem(0xcb32), 0xb8);
        // CB B8 03C9
        gbc.setState(0x6eeb, 0xb57a, 0xc090, 0x8ccd, 0x959f, 0x4a3e, 0x0, 0x1);
        gbc.writeMem(0x6eeb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb57a);
        EXPECT(gbc.pc(), 0x6eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03CA
        gbc.setState(0x47d0, 0x7b1b, 0xa1f0, 0x692b, 0x5055, 0xdb0b, 0x0, 0x1);
        gbc.writeMem(0x47d0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7b1b);
        EXPECT(gbc.pc(), 0x47d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03CB
        gbc.setState(0x7247, 0xfafb, 0xa320, 0x404d, 0xb768, 0xaa63, 0x0, 0x0);
        gbc.writeMem(0x7247, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfafb);
        EXPECT(gbc.pc(), 0x7249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03CC
        gbc.setState(0x2d9c, 0xe919, 0x3e90, 0xfce3, 0xac8f, 0x928d, 0x1, 0x1);
        gbc.writeMem(0x2d9c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe919);
        EXPECT(gbc.pc(), 0x2d9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03CD
        gbc.setState(0x5576, 0xc6ae, 0x23c0, 0x304b, 0x9e18, 0x483b, 0x0, 0x1);
        gbc.writeMem(0x5576, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc6ae);
        EXPECT(gbc.pc(), 0x5578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03CE
        gbc.setState(0xa351, 0x573d, 0x5670, 0x358, 0x6a39, 0x1e73, 0x0, 0x1);
        gbc.writeMem(0xa351, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x573d);
        EXPECT(gbc.pc(), 0xa353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa351), 0xcb);
        EXPECT(gbc.readMem(0xa352), 0xb8);
        // CB B8 03CF
        gbc.setState(0x80e5, 0x1539, 0xba0, 0xd05c, 0xa5b9, 0xcc3b, 0x1, 0x1);
        gbc.writeMem(0x80e5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1539);
        EXPECT(gbc.pc(), 0x80e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e5), 0xcb);
        EXPECT(gbc.readMem(0x80e6), 0xb8);
        // CB B8 03D0
        gbc.setState(0x9b78, 0x9b8c, 0x6860, 0x9eb4, 0x7206, 0x9539, 0x0, 0x1);
        gbc.writeMem(0x9b78, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9b8c);
        EXPECT(gbc.pc(), 0x9b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b78), 0xcb);
        EXPECT(gbc.readMem(0x9b79), 0xb8);
        // CB B8 03D1
        gbc.setState(0x5fb0, 0x6c5c, 0xc920, 0xc72, 0x7f74, 0x2982, 0x1, 0x1);
        gbc.writeMem(0x5fb0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6c5c);
        EXPECT(gbc.pc(), 0x5fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03D2
        gbc.setState(0xaf1e, 0x7e9a, 0x6430, 0x3d01, 0x3e2, 0xb0c2, 0x0, 0x0);
        gbc.writeMem(0xaf1e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7e9a);
        EXPECT(gbc.pc(), 0xaf20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1e), 0xcb);
        EXPECT(gbc.readMem(0xaf1f), 0xb8);
        // CB B8 03D3
        gbc.setState(0xdfb6, 0xc266, 0x83a0, 0x4266, 0x6a2b, 0xa5c8, 0x1, 0x0);
        gbc.writeMem(0xdfb6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc266);
        EXPECT(gbc.pc(), 0xdfb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb6), 0xcb);
        EXPECT(gbc.readMem(0xdfb7), 0xb8);
        // CB B8 03D4
        gbc.setState(0x2e93, 0xed37, 0xbed0, 0x73e2, 0x528, 0x426e, 0x1, 0x1);
        gbc.writeMem(0x2e93, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xed37);
        EXPECT(gbc.pc(), 0x2e95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03D5
        gbc.setState(0x3966, 0xf78e, 0x1780, 0x7c24, 0x1e3d, 0x2040, 0x0, 0x1);
        gbc.writeMem(0x3966, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf78e);
        EXPECT(gbc.pc(), 0x3968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03D6
        gbc.setState(0x2fe7, 0xbf22, 0x9ec0, 0x14f6, 0xeb83, 0xe9bd, 0x1, 0x1);
        gbc.writeMem(0x2fe7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xbf22);
        EXPECT(gbc.pc(), 0x2fe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03D7
        gbc.setState(0x8409, 0xad19, 0x7c40, 0xda0c, 0xe26b, 0x3e97, 0x0, 0x1);
        gbc.writeMem(0x8409, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xad19);
        EXPECT(gbc.pc(), 0x840b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8409), 0xcb);
        EXPECT(gbc.readMem(0x840a), 0xb8);
        // CB B8 03D9
        gbc.setState(0x3f20, 0x42bb, 0x7950, 0xe593, 0x24e4, 0x775c, 0x1, 0x0);
        gbc.writeMem(0x3f20, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x42bb);
        EXPECT(gbc.pc(), 0x3f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03DA
        gbc.setState(0x14d4, 0x3c74, 0x160, 0xc1b5, 0xa464, 0xc7fb, 0x0, 0x1);
        gbc.writeMem(0x14d4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3c74);
        EXPECT(gbc.pc(), 0x14d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03DB
        gbc.setState(0x8901, 0xe487, 0xb820, 0x59bd, 0xe723, 0xeca8, 0x0, 0x0);
        gbc.writeMem(0x8901, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe487);
        EXPECT(gbc.pc(), 0x8903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8901), 0xcb);
        EXPECT(gbc.readMem(0x8902), 0xb8);
        // CB B8 03DC
        gbc.setState(0xc418, 0x76e0, 0x30f0, 0xa6b3, 0x7c24, 0x48fc, 0x0, 0x0);
        gbc.writeMem(0xc418, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x76e0);
        EXPECT(gbc.pc(), 0xc41a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc418), 0xcb);
        EXPECT(gbc.readMem(0xc419), 0xb8);
        // CB B8 03DD
        gbc.setState(0x4e18, 0x64ba, 0x1ac0, 0xa238, 0x1b13, 0x46d8, 0x0, 0x0);
        gbc.writeMem(0x4e18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x64ba);
        EXPECT(gbc.pc(), 0x4e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03DF
        gbc.setState(0x7cc3, 0xe474, 0x8a00, 0x584d, 0xa6da, 0xc752, 0x1, 0x0);
        gbc.writeMem(0x7cc3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe474);
        EXPECT(gbc.pc(), 0x7cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03E0
        gbc.setState(0x34e2, 0x9fe7, 0x5210, 0x4bcc, 0xb4bc, 0x3204, 0x0, 0x1);
        gbc.writeMem(0x34e2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9fe7);
        EXPECT(gbc.pc(), 0x34e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03E1
        gbc.setState(0x9b5, 0xa65d, 0x7880, 0xc4c9, 0x2b3d, 0x69d0, 0x1, 0x1);
        gbc.writeMem(0x9b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa65d);
        EXPECT(gbc.pc(), 0x9b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03E2
        gbc.setState(0x42e7, 0xab5e, 0x7440, 0x68ca, 0xc51a, 0x5b4e, 0x0, 0x0);
        gbc.writeMem(0x42e7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xab5e);
        EXPECT(gbc.pc(), 0x42e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03E3
        gbc.setState(0x1ab8, 0xa19c, 0xe0a0, 0x43ef, 0x46b2, 0xc796, 0x0, 0x0);
        gbc.writeMem(0x1ab8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa19c);
        EXPECT(gbc.pc(), 0x1aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B8 03E4
        gbc.setState(0x7c86, 0xe16, 0x7d0, 0xdb0b, 0x375a, 0x1955, 0x1, 0x1);
        gbc.writeMem(0x7c86, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe16);
        EXPECT(gbc.pc(), 0x7c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03E5
        gbc.setState(0x6f54, 0xf571, 0x4130, 0xdf7a, 0x2849, 0xbc79, 0x1, 0x0);
        gbc.writeMem(0x6f54, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf571);
        EXPECT(gbc.pc(), 0x6f56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03E6
        gbc.setState(0x249a, 0xf224, 0x66f0, 0x7ca7, 0x7baf, 0xd94b, 0x1, 0x1);
        gbc.writeMem(0x249a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf224);
        EXPECT(gbc.pc(), 0x249c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B8 03E7
        gbc.setState(0x2002, 0x280a, 0xfda0, 0x9518, 0xce3c, 0xa632, 0x1, 0x0);
        gbc.writeMem(0x2002, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x280a);
        EXPECT(gbc.pc(), 0x2004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
