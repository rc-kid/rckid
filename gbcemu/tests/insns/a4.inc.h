    TEST(gbcemu, opcode_a4) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // A4 0000
        gbc.setState(0x7be7, 0xb342, 0x8c10, 0x5da5, 0x1cb, 0xfa32, 0x0, 0x1);
        gbc.writeMem(0x7be7, { 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb342, gbc.sp());
        EXPECT(0x7be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0001
        gbc.setState(0xd6ef, 0xc4b, 0x7360, 0x28af, 0xcd7a, 0xb97d, 0x0, 0x1);
        gbc.writeMem(0xd6ef, { 0xa4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc4b, gbc.sp());
        EXPECT(0xd6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd6ef));
        // A4 0002
        gbc.setState(0xbe1, 0x7210, 0xb9e0, 0xa8e9, 0x8a2, 0x4419, 0x0, 0x0);
        gbc.writeMem(0xbe1, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7210, gbc.sp());
        EXPECT(0xbe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0004
        gbc.setState(0x5bd6, 0xad39, 0x9170, 0xa78, 0xbdf8, 0xbc4c, 0x1, 0x1);
        gbc.writeMem(0x5bd6, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xad39, gbc.sp());
        EXPECT(0x5bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0005
        gbc.setState(0x7816, 0x32fd, 0x7220, 0xffba, 0x769d, 0x4427, 0x1, 0x0);
        gbc.writeMem(0x7816, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x32fd, gbc.sp());
        EXPECT(0x7817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0006
        gbc.setState(0x66d8, 0x546a, 0x4c20, 0xea88, 0x421e, 0x7a5f, 0x0, 0x1);
        gbc.writeMem(0x66d8, { 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x546a, gbc.sp());
        EXPECT(0x66d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0007
        gbc.setState(0x89fa, 0xb175, 0x89c0, 0x5d0, 0xef76, 0x548b, 0x0, 0x1);
        gbc.writeMem(0x89fa, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb175, gbc.sp());
        EXPECT(0x89fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x89fa));
        // A4 0008
        gbc.setState(0x5307, 0xdafc, 0x9da0, 0xe990, 0xd1b8, 0xcdef, 0x1, 0x1);
        gbc.writeMem(0x5307, { 0xa4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdafc, gbc.sp());
        EXPECT(0x5308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0009
        gbc.setState(0x280e, 0xff6d, 0x38a0, 0x4950, 0xd9ec, 0x5767, 0x0, 0x0);
        gbc.writeMem(0x280e, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xff6d, gbc.sp());
        EXPECT(0x280f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 000A
        gbc.setState(0xe916, 0xc249, 0x1a30, 0xe1aa, 0xfcd1, 0x81b6, 0x1, 0x1);
        gbc.writeMem(0xe916, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc249, gbc.sp());
        EXPECT(0xe917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe916));
        // A4 000B
        gbc.setState(0x5c22, 0xf93b, 0xcb20, 0x1f5d, 0xed7a, 0xfacd, 0x1, 0x0);
        gbc.writeMem(0x5c22, { 0xa4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf93b, gbc.sp());
        EXPECT(0x5c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 000C
        gbc.setState(0xc595, 0x6958, 0x6120, 0xe545, 0xd815, 0xc27c, 0x0, 0x1);
        gbc.writeMem(0xc595, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6958, gbc.sp());
        EXPECT(0xc596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc595));
        // A4 000D
        gbc.setState(0xdf11, 0x6169, 0xed10, 0x9f1d, 0x70bb, 0x3d33, 0x0, 0x0);
        gbc.writeMem(0xdf11, { 0xa4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6169, gbc.sp());
        EXPECT(0xdf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdf11));
        // A4 000E
        gbc.setState(0x7f5b, 0x479d, 0xae10, 0x1721, 0xa5a2, 0x537c, 0x0, 0x0);
        gbc.writeMem(0x7f5b, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x479d, gbc.sp());
        EXPECT(0x7f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 000F
        gbc.setState(0x5175, 0xbf7b, 0x1bd0, 0x3e17, 0xadaf, 0xd42e, 0x0, 0x0);
        gbc.writeMem(0x5175, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbf7b, gbc.sp());
        EXPECT(0x5176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0010
        gbc.setState(0xde46, 0x34e, 0x1cc0, 0x7ad7, 0x6215, 0xffb, 0x1, 0x0);
        gbc.writeMem(0xde46, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x34e, gbc.sp());
        EXPECT(0xde47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xde46));
        // A4 0011
        gbc.setState(0xbf85, 0xa942, 0xe740, 0x7aa4, 0xf6c7, 0x9e01, 0x1, 0x1);
        gbc.writeMem(0xbf85, { 0xa4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa942, gbc.sp());
        EXPECT(0xbf86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbf85));
        // A4 0012
        gbc.setState(0xc2d6, 0xadbc, 0xcb00, 0xeae7, 0x1361, 0xfdd1, 0x0, 0x0);
        gbc.writeMem(0xc2d6, { 0xa4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xadbc, gbc.sp());
        EXPECT(0xc2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc2d6));
        // A4 0013
        gbc.setState(0x1d13, 0xe068, 0x1f90, 0x923f, 0xc25d, 0x7211, 0x0, 0x1);
        gbc.writeMem(0x1d13, { 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe068, gbc.sp());
        EXPECT(0x1d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0014
        gbc.setState(0xd525, 0x506a, 0xa570, 0x7174, 0xdfb3, 0xfeea, 0x0, 0x0);
        gbc.writeMem(0xd525, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x506a, gbc.sp());
        EXPECT(0xd526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd525));
        // A4 0015
        gbc.setState(0xb8a, 0xb34f, 0x1460, 0xf564, 0xf69e, 0x27b7, 0x0, 0x1);
        gbc.writeMem(0xb8a, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb34f, gbc.sp());
        EXPECT(0xb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0016
        gbc.setState(0x6f4a, 0xd6ca, 0xf570, 0x2ec8, 0xdc05, 0x2a4b, 0x1, 0x1);
        gbc.writeMem(0x6f4a, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd6ca, gbc.sp());
        EXPECT(0x6f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0017
        gbc.setState(0xac5f, 0xf242, 0x7f90, 0xacbd, 0xd860, 0xf56e, 0x1, 0x1);
        gbc.writeMem(0xac5f, { 0xa4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf242, gbc.sp());
        EXPECT(0xac60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xac5f));
        // A4 0018
        gbc.setState(0xb76, 0x2ecf, 0xa80, 0xe7aa, 0xe820, 0xfcdb, 0x1, 0x1);
        gbc.writeMem(0xb76, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2ecf, gbc.sp());
        EXPECT(0xb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0019
        gbc.setState(0xd181, 0x1439, 0xa820, 0x58f, 0x6aac, 0x9ba4, 0x1, 0x1);
        gbc.writeMem(0xd181, { 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1439, gbc.sp());
        EXPECT(0xd182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd181));
        // A4 001A
        gbc.setState(0xa744, 0x74aa, 0x8150, 0xd47e, 0xa4e, 0xed60, 0x0, 0x0);
        gbc.writeMem(0xa744, { 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x74aa, gbc.sp());
        EXPECT(0xa745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa744));
        // A4 001B
        gbc.setState(0xcd78, 0x924d, 0x1620, 0x8a55, 0xe369, 0x42a5, 0x0, 0x1);
        gbc.writeMem(0xcd78, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x924d, gbc.sp());
        EXPECT(0xcd79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcd78));
        // A4 001C
        gbc.setState(0x9a92, 0xaf9f, 0x18b0, 0x7775, 0xe096, 0xa59d, 0x0, 0x1);
        gbc.writeMem(0x9a92, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xaf9f, gbc.sp());
        EXPECT(0x9a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9a92));
        // A4 001D
        gbc.setState(0xbd45, 0xfcc1, 0xd150, 0x6633, 0xd27c, 0xad52, 0x1, 0x0);
        gbc.writeMem(0xbd45, { 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfcc1, gbc.sp());
        EXPECT(0xbd46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbd45));
        // A4 001E
        gbc.setState(0xec6b, 0x6944, 0x25f0, 0x7607, 0x7c0, 0x6815, 0x0, 0x0);
        gbc.writeMem(0xec6b, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6944, gbc.sp());
        EXPECT(0xec6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xec6b));
        // A4 001F
        gbc.setState(0xee54, 0xd2a7, 0x8800, 0xeea0, 0x602a, 0x216a, 0x1, 0x0);
        gbc.writeMem(0xee54, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd2a7, gbc.sp());
        EXPECT(0xee55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xee54));
        // A4 0021
        gbc.setState(0xddfb, 0x553d, 0x7bc0, 0x5299, 0x21e7, 0xb224, 0x0, 0x1);
        gbc.writeMem(0xddfb, { 0xa4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x553d, gbc.sp());
        EXPECT(0xddfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xddfb));
        // A4 0023
        gbc.setState(0x4d96, 0x2d58, 0x7e00, 0xfe5b, 0x1716, 0x44ff, 0x0, 0x1);
        gbc.writeMem(0x4d96, { 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2d58, gbc.sp());
        EXPECT(0x4d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0024
        gbc.setState(0xb384, 0x4b5f, 0x11b0, 0xf70e, 0x9815, 0xbf80, 0x0, 0x1);
        gbc.writeMem(0xb384, { 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4b5f, gbc.sp());
        EXPECT(0xb385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb384));
        // A4 0025
        gbc.setState(0xbd6f, 0x2c0a, 0x1ed0, 0x4707, 0xfe18, 0xbcc0, 0x0, 0x1);
        gbc.writeMem(0xbd6f, { 0xa4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2c0a, gbc.sp());
        EXPECT(0xbd70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbd6f));
        // A4 0026
        gbc.setState(0x2d03, 0x2d19, 0x8050, 0xb08a, 0x9d17, 0x8009, 0x0, 0x0);
        gbc.writeMem(0x2d03, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2d19, gbc.sp());
        EXPECT(0x2d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0027
        gbc.setState(0x1766, 0x5ca4, 0x82f0, 0xa8ab, 0x7d65, 0xe686, 0x1, 0x1);
        gbc.writeMem(0x1766, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5ca4, gbc.sp());
        EXPECT(0x1767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0028
        gbc.setState(0x9bc3, 0x3215, 0xe0, 0x3d7d, 0x30e8, 0xde0c, 0x0, 0x1);
        gbc.writeMem(0x9bc3, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3215, gbc.sp());
        EXPECT(0x9bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9bc3));
        // A4 002A
        gbc.setState(0x675d, 0x2797, 0x1a10, 0x9b8d, 0x8580, 0xb808, 0x1, 0x0);
        gbc.writeMem(0x675d, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2797, gbc.sp());
        EXPECT(0x675e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 002B
        gbc.setState(0xed06, 0x8814, 0x3aa0, 0xc033, 0x2a5d, 0xada4, 0x0, 0x1);
        gbc.writeMem(0xed06, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8814, gbc.sp());
        EXPECT(0xed07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xed06));
        // A4 002D
        gbc.setState(0xb585, 0xc6e0, 0x7ca0, 0xb462, 0xe034, 0x30af, 0x0, 0x1);
        gbc.writeMem(0xb585, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc6e0, gbc.sp());
        EXPECT(0xb586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb585));
        // A4 002E
        gbc.setState(0x3889, 0xde38, 0x4fe0, 0x203b, 0x1772, 0x5208, 0x0, 0x1);
        gbc.writeMem(0x3889, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xde38, gbc.sp());
        EXPECT(0x388a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 002F
        gbc.setState(0x5f6a, 0x7b37, 0x86c0, 0x5d14, 0xf870, 0x2ab9, 0x1, 0x0);
        gbc.writeMem(0x5f6a, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7b37, gbc.sp());
        EXPECT(0x5f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0031
        gbc.setState(0xc382, 0x1f6a, 0xc1f0, 0x2fd4, 0x8771, 0x212f, 0x1, 0x0);
        gbc.writeMem(0xc382, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1f6a, gbc.sp());
        EXPECT(0xc383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc382));
        // A4 0032
        gbc.setState(0xc138, 0xf97c, 0xe6d0, 0x8a62, 0xa041, 0x1cdf, 0x1, 0x0);
        gbc.writeMem(0xc138, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf97c, gbc.sp());
        EXPECT(0xc139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc138));
        // A4 0033
        gbc.setState(0xbc56, 0x6a01, 0xb250, 0x7e7d, 0x68be, 0xf983, 0x1, 0x0);
        gbc.writeMem(0xbc56, { 0xa4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6a01, gbc.sp());
        EXPECT(0xbc57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbc56));
        // A4 0034
        gbc.setState(0x6233, 0x6fc5, 0x6e0, 0x279a, 0x6aff, 0xdfd3, 0x0, 0x0);
        gbc.writeMem(0x6233, { 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6fc5, gbc.sp());
        EXPECT(0x6234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0035
        gbc.setState(0x9ff2, 0xbf2, 0xe690, 0x88dd, 0x33cb, 0x9210, 0x0, 0x1);
        gbc.writeMem(0x9ff2, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbf2, gbc.sp());
        EXPECT(0x9ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9ff2));
        // A4 0036
        gbc.setState(0xa449, 0xe190, 0x9cc0, 0x2ec9, 0xe828, 0xc865, 0x0, 0x1);
        gbc.writeMem(0xa449, { 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0xa44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa449));
        // A4 0037
        gbc.setState(0xea9f, 0xbda3, 0x2b40, 0x26a6, 0x6015, 0x2826, 0x0, 0x0);
        gbc.writeMem(0xea9f, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbda3, gbc.sp());
        EXPECT(0xeaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xea9f));
        // A4 0038
        gbc.setState(0x3fb6, 0x8468, 0xdf40, 0xfdfa, 0x2a59, 0x9d71, 0x1, 0x1);
        gbc.writeMem(0x3fb6, { 0xa4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8468, gbc.sp());
        EXPECT(0x3fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0039
        gbc.setState(0x4908, 0xa04e, 0xa8b0, 0xdc26, 0x451f, 0x14f5, 0x0, 0x0);
        gbc.writeMem(0x4908, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa04e, gbc.sp());
        EXPECT(0x4909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 003A
        gbc.setState(0x1c5d, 0x7213, 0xfc0, 0x64e8, 0xa8f, 0x5416, 0x0, 0x1);
        gbc.writeMem(0x1c5d, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7213, gbc.sp());
        EXPECT(0x1c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 003B
        gbc.setState(0xe9d2, 0x80a8, 0x9c30, 0xf67c, 0xbab2, 0xd04c, 0x1, 0x0);
        gbc.writeMem(0xe9d2, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x80a8, gbc.sp());
        EXPECT(0xe9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe9d2));
        // A4 003C
        gbc.setState(0x15c1, 0x8017, 0x1d00, 0xa54c, 0x6a09, 0x6e04, 0x0, 0x0);
        gbc.writeMem(0x15c1, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8017, gbc.sp());
        EXPECT(0x15c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 003D
        gbc.setState(0x7d0a, 0x6a04, 0xce20, 0xce80, 0xafdf, 0x119d, 0x0, 0x1);
        gbc.writeMem(0x7d0a, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6a04, gbc.sp());
        EXPECT(0x7d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 003E
        gbc.setState(0x2ea3, 0x4944, 0x6120, 0xd9fe, 0x6087, 0xbecf, 0x1, 0x1);
        gbc.writeMem(0x2ea3, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4944, gbc.sp());
        EXPECT(0x2ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 003F
        gbc.setState(0xa4b4, 0x1e15, 0xe670, 0x8745, 0x9a39, 0x22e1, 0x0, 0x1);
        gbc.writeMem(0xa4b4, { 0xa4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1e15, gbc.sp());
        EXPECT(0xa4b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa4b4));
        // A4 0040
        gbc.setState(0x6831, 0x2dba, 0x8e00, 0xc063, 0x8c12, 0x96b8, 0x1, 0x1);
        gbc.writeMem(0x6831, { 0xa4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2dba, gbc.sp());
        EXPECT(0x6832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0041
        gbc.setState(0xe156, 0xace2, 0xdfb0, 0x9ae5, 0x3a39, 0x7fc6, 0x0, 0x1);
        gbc.writeMem(0xe156, { 0xa4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xace2, gbc.sp());
        EXPECT(0xe157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe156));
        // A4 0042
        gbc.setState(0xcd4f, 0x59a1, 0x2150, 0x24cc, 0xf55e, 0xe310, 0x0, 0x1);
        gbc.writeMem(0xcd4f, { 0xa4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x59a1, gbc.sp());
        EXPECT(0xcd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcd4f));
        // A4 0043
        gbc.setState(0xce73, 0x33ce, 0xbdb0, 0xc088, 0x83d, 0x10b9, 0x1, 0x0);
        gbc.writeMem(0xce73, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x33ce, gbc.sp());
        EXPECT(0xce74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xce73));
        // A4 0044
        gbc.setState(0x72d9, 0xb1a3, 0xb910, 0xe88c, 0xd6a2, 0xfef5, 0x1, 0x1);
        gbc.writeMem(0x72d9, { 0xa4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb1a3, gbc.sp());
        EXPECT(0x72da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0045
        gbc.setState(0x259b, 0xc8a9, 0x1c70, 0xc879, 0xe672, 0x6189, 0x0, 0x1);
        gbc.writeMem(0x259b, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc8a9, gbc.sp());
        EXPECT(0x259c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0046
        gbc.setState(0xb5d0, 0xce7, 0x65f0, 0xe28c, 0x319d, 0xa5d8, 0x1, 0x0);
        gbc.writeMem(0xb5d0, { 0xa4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xce7, gbc.sp());
        EXPECT(0xb5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb5d0));
        // A4 0047
        gbc.setState(0xcb5a, 0x6f83, 0x3030, 0x6f6, 0xb149, 0xfd72, 0x1, 0x1);
        gbc.writeMem(0xcb5a, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6f83, gbc.sp());
        EXPECT(0xcb5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcb5a));
        // A4 0048
        gbc.setState(0x1a71, 0xdfe, 0xe510, 0xac90, 0xb2c9, 0x2256, 0x0, 0x0);
        gbc.writeMem(0x1a71, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdfe, gbc.sp());
        EXPECT(0x1a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0049
        gbc.setState(0x2672, 0xc4ff, 0x590, 0x959d, 0x7f71, 0x5f3a, 0x0, 0x1);
        gbc.writeMem(0x2672, { 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc4ff, gbc.sp());
        EXPECT(0x2673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 004A
        gbc.setState(0x9787, 0x828a, 0xc2b0, 0x3e7a, 0x87f0, 0xe401, 0x1, 0x1);
        gbc.writeMem(0x9787, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x828a, gbc.sp());
        EXPECT(0x9788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9787));
        // A4 004B
        gbc.setState(0x2cc, 0xa90f, 0xcb20, 0x3e5d, 0x857f, 0xc34b, 0x1, 0x0);
        gbc.writeMem(0x2cc, { 0xa4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa90f, gbc.sp());
        EXPECT(0x2cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 004C
        gbc.setState(0x3444, 0x99cb, 0xb200, 0x3e25, 0x36bf, 0x28cc, 0x0, 0x0);
        gbc.writeMem(0x3444, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x99cb, gbc.sp());
        EXPECT(0x3445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 004D
        gbc.setState(0x1aa1, 0xb654, 0xefe0, 0xb49a, 0xc101, 0x2d6b, 0x0, 0x1);
        gbc.writeMem(0x1aa1, { 0xa4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb654, gbc.sp());
        EXPECT(0x1aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 004F
        gbc.setState(0xbd62, 0x6424, 0xee80, 0xbffd, 0xc047, 0xafdd, 0x1, 0x0);
        gbc.writeMem(0xbd62, { 0xa4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6424, gbc.sp());
        EXPECT(0xbd63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbd62));
        // A4 0050
        gbc.setState(0x821f, 0xd286, 0x84f0, 0x590f, 0x509, 0xcf0c, 0x1, 0x0);
        gbc.writeMem(0x821f, { 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd286, gbc.sp());
        EXPECT(0x8220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x821f));
        // A4 0051
        gbc.setState(0x1b14, 0x6a77, 0x7110, 0x6675, 0xf8d9, 0x16fd, 0x0, 0x1);
        gbc.writeMem(0x1b14, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6a77, gbc.sp());
        EXPECT(0x1b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0053
        gbc.setState(0x1e0f, 0x6b3e, 0x8350, 0x46c2, 0x7a34, 0x71c8, 0x1, 0x1);
        gbc.writeMem(0x1e0f, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6b3e, gbc.sp());
        EXPECT(0x1e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0054
        gbc.setState(0xba9f, 0x399e, 0x7360, 0x90fa, 0x6a2b, 0x3dbd, 0x1, 0x0);
        gbc.writeMem(0xba9f, { 0xa4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x399e, gbc.sp());
        EXPECT(0xbaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xba9f));
        // A4 0055
        gbc.setState(0x83d7, 0x521a, 0x50c0, 0x3389, 0xb361, 0x9e06, 0x1, 0x0);
        gbc.writeMem(0x83d7, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x521a, gbc.sp());
        EXPECT(0x83d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x83d7));
        // A4 0056
        gbc.setState(0xe896, 0xc100, 0x7740, 0xe3c4, 0x37e2, 0x6402, 0x0, 0x1);
        gbc.writeMem(0xe896, { 0xa4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc100, gbc.sp());
        EXPECT(0xe897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe896));
        // A4 0058
        gbc.setState(0x722e, 0x5385, 0xbd60, 0xe243, 0x79f1, 0x3e1c, 0x0, 0x1);
        gbc.writeMem(0x722e, { 0xa4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5385, gbc.sp());
        EXPECT(0x722f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0059
        gbc.setState(0x262, 0xefa9, 0x1ec0, 0x3879, 0x8a5, 0xf531, 0x1, 0x0);
        gbc.writeMem(0x262, { 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xefa9, gbc.sp());
        EXPECT(0x263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 005A
        gbc.setState(0x2ec6, 0xdd11, 0x9800, 0x7dce, 0x84a3, 0xfcad, 0x0, 0x1);
        gbc.writeMem(0x2ec6, { 0xa4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdd11, gbc.sp());
        EXPECT(0x2ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 005B
        gbc.setState(0xb8cf, 0x92ec, 0xdcb0, 0x990b, 0x7b71, 0x5a9, 0x0, 0x1);
        gbc.writeMem(0xb8cf, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x92ec, gbc.sp());
        EXPECT(0xb8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb8cf));
        // A4 005C
        gbc.setState(0xdc8b, 0xf73b, 0x3090, 0x2200, 0xbb56, 0xb54a, 0x1, 0x1);
        gbc.writeMem(0xdc8b, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf73b, gbc.sp());
        EXPECT(0xdc8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdc8b));
        // A4 005D
        gbc.setState(0xadad, 0x3575, 0x3f90, 0x7c69, 0xc9eb, 0x38ab, 0x0, 0x1);
        gbc.writeMem(0xadad, { 0xa4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3575, gbc.sp());
        EXPECT(0xadae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xadad));
        // A4 005E
        gbc.setState(0x7ae0, 0x40f4, 0x7d10, 0x4949, 0xd2b1, 0xdd8b, 0x1, 0x0);
        gbc.writeMem(0x7ae0, { 0xa4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x40f4, gbc.sp());
        EXPECT(0x7ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 005F
        gbc.setState(0xb9a7, 0x819b, 0xf7d0, 0xef54, 0x251f, 0x96fc, 0x0, 0x0);
        gbc.writeMem(0xb9a7, { 0xa4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x819b, gbc.sp());
        EXPECT(0xb9a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb9a7));
        // A4 0060
        gbc.setState(0xcc12, 0x4f33, 0xd690, 0x2a38, 0x489d, 0x8e18, 0x0, 0x1);
        gbc.writeMem(0xcc12, { 0xa4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4f33, gbc.sp());
        EXPECT(0xcc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcc12));
        // A4 0061
        gbc.setState(0x6a51, 0xe400, 0xcf60, 0x3643, 0x9d4a, 0x177a, 0x0, 0x1);
        gbc.writeMem(0x6a51, { 0xa4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe400, gbc.sp());
        EXPECT(0x6a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0062
        gbc.setState(0x8398, 0x85db, 0x3ca0, 0x27bd, 0x1e8f, 0xcab8, 0x0, 0x1);
        gbc.writeMem(0x8398, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x85db, gbc.sp());
        EXPECT(0x8399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8398));
        // A4 0063
        gbc.setState(0x45c5, 0x5527, 0xd260, 0x1b3d, 0x87d7, 0x6d09, 0x0, 0x0);
        gbc.writeMem(0x45c5, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5527, gbc.sp());
        EXPECT(0x45c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0064
        gbc.setState(0x26b4, 0xaae, 0xa7c0, 0x1646, 0x8204, 0xacb5, 0x1, 0x1);
        gbc.writeMem(0x26b4, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xaae, gbc.sp());
        EXPECT(0x26b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0065
        gbc.setState(0x70ab, 0x4add, 0x2ec0, 0xd6d6, 0x1961, 0x9b3a, 0x0, 0x1);
        gbc.writeMem(0x70ab, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4add, gbc.sp());
        EXPECT(0x70ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0066
        gbc.setState(0x36df, 0x116f, 0xe910, 0xd013, 0xa5b2, 0x167a, 0x1, 0x1);
        gbc.writeMem(0x36df, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x116f, gbc.sp());
        EXPECT(0x36e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0067
        gbc.setState(0xc5b3, 0xa01d, 0xfd60, 0x4080, 0x2515, 0x5c9a, 0x0, 0x0);
        gbc.writeMem(0xc5b3, { 0xa4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa01d, gbc.sp());
        EXPECT(0xc5b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc5b3));
        // A4 0068
        gbc.setState(0x60a, 0x935f, 0xed40, 0x67a4, 0xd30e, 0x6545, 0x1, 0x0);
        gbc.writeMem(0x60a, { 0xa4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x935f, gbc.sp());
        EXPECT(0x60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0069
        gbc.setState(0x8ea7, 0xbc65, 0x3b0, 0x78b5, 0x7e37, 0x3c6a, 0x1, 0x0);
        gbc.writeMem(0x8ea7, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbc65, gbc.sp());
        EXPECT(0x8ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8ea7));
        // A4 006A
        gbc.setState(0x1ecc, 0x2d59, 0xbd90, 0xcec4, 0x8ecc, 0x505a, 0x0, 0x0);
        gbc.writeMem(0x1ecc, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2d59, gbc.sp());
        EXPECT(0x1ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 006B
        gbc.setState(0xbd3f, 0x4691, 0x6920, 0x7ba1, 0xc49f, 0x7220, 0x1, 0x0);
        gbc.writeMem(0xbd3f, { 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4691, gbc.sp());
        EXPECT(0xbd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbd3f));
        // A4 006C
        gbc.setState(0x531e, 0xbbed, 0xf730, 0x4a3, 0xea50, 0x6d65, 0x1, 0x0);
        gbc.writeMem(0x531e, { 0xa4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbbed, gbc.sp());
        EXPECT(0x531f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 006D
        gbc.setState(0xb407, 0x1b72, 0xe030, 0x67e4, 0xffc8, 0x3d12, 0x0, 0x0);
        gbc.writeMem(0xb407, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1b72, gbc.sp());
        EXPECT(0xb408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb407));
        // A4 006E
        gbc.setState(0xc5f1, 0xa520, 0xc380, 0x1102, 0xff88, 0x7b54, 0x1, 0x0);
        gbc.writeMem(0xc5f1, { 0xa4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa520, gbc.sp());
        EXPECT(0xc5f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc5f1));
        // A4 006F
        gbc.setState(0xc1f5, 0x8577, 0xecb0, 0xfd09, 0xdc48, 0xe823, 0x1, 0x0);
        gbc.writeMem(0xc1f5, { 0xa4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8577, gbc.sp());
        EXPECT(0xc1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc1f5));
        // A4 0070
        gbc.setState(0x112a, 0x1a6e, 0xfc10, 0xb3, 0x5174, 0x58da, 0x0, 0x0);
        gbc.writeMem(0x112a, { 0xa4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1a6e, gbc.sp());
        EXPECT(0x112b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0071
        gbc.setState(0x8e47, 0xb8f4, 0x4cb0, 0xe77f, 0x921c, 0x1fde, 0x1, 0x0);
        gbc.writeMem(0x8e47, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb8f4, gbc.sp());
        EXPECT(0x8e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8e47));
        // A4 0072
        gbc.setState(0x9197, 0x868a, 0x3b20, 0x3808, 0x6bd5, 0xea5, 0x1, 0x1);
        gbc.writeMem(0x9197, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x868a, gbc.sp());
        EXPECT(0x9198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9197));
        // A4 0073
        gbc.setState(0x449c, 0xffe2, 0xa0a0, 0x5944, 0x52ef, 0xc42e, 0x0, 0x1);
        gbc.writeMem(0x449c, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xffe2, gbc.sp());
        EXPECT(0x449d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0074
        gbc.setState(0xb105, 0x8fe9, 0xd0f0, 0x64d2, 0xa2a2, 0x422b, 0x1, 0x0);
        gbc.writeMem(0xb105, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8fe9, gbc.sp());
        EXPECT(0xb106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb105));
        // A4 0075
        gbc.setState(0x3b5d, 0x5022, 0x56b0, 0xe81c, 0xee41, 0x34d7, 0x1, 0x0);
        gbc.writeMem(0x3b5d, { 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5022, gbc.sp());
        EXPECT(0x3b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0076
        gbc.setState(0x1de0, 0x4e8e, 0x17f0, 0xf9e0, 0xd641, 0x2a7f, 0x0, 0x0);
        gbc.writeMem(0x1de0, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4e8e, gbc.sp());
        EXPECT(0x1de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0077
        gbc.setState(0x3e34, 0x893d, 0x1990, 0x4a5a, 0xb0cb, 0x7236, 0x1, 0x0);
        gbc.writeMem(0x3e34, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x893d, gbc.sp());
        EXPECT(0x3e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0078
        gbc.setState(0xa83a, 0xce89, 0xf730, 0xfaa4, 0x102, 0xd464, 0x1, 0x0);
        gbc.writeMem(0xa83a, { 0xa4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xce89, gbc.sp());
        EXPECT(0xa83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa83a));
        // A4 0079
        gbc.setState(0xa698, 0x5d71, 0x5de0, 0x5edb, 0xdc75, 0x3845, 0x0, 0x0);
        gbc.writeMem(0xa698, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5d71, gbc.sp());
        EXPECT(0xa699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa698));
        // A4 007A
        gbc.setState(0x9d82, 0xcd01, 0x8720, 0x12e5, 0x9a71, 0xd848, 0x0, 0x0);
        gbc.writeMem(0x9d82, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcd01, gbc.sp());
        EXPECT(0x9d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9d82));
        // A4 007B
        gbc.setState(0xb884, 0x4f22, 0xfb60, 0x3029, 0xbc68, 0x7e96, 0x1, 0x0);
        gbc.writeMem(0xb884, { 0xa4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4f22, gbc.sp());
        EXPECT(0xb885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb884));
        // A4 007C
        gbc.setState(0xc8e5, 0x2786, 0xc040, 0xb06f, 0xe8ef, 0xbc5d, 0x0, 0x1);
        gbc.writeMem(0xc8e5, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2786, gbc.sp());
        EXPECT(0xc8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc8e5));
        // A4 007D
        gbc.setState(0xcfad, 0x7bb, 0x5330, 0x5d20, 0xc4b1, 0x970c, 0x1, 0x1);
        gbc.writeMem(0xcfad, { 0xa4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7bb, gbc.sp());
        EXPECT(0xcfae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcfad));
        // A4 007E
        gbc.setState(0x8d44, 0xb8ae, 0xd980, 0xc0cd, 0x6b27, 0xb393, 0x0, 0x1);
        gbc.writeMem(0x8d44, { 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb8ae, gbc.sp());
        EXPECT(0x8d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8d44));
        // A4 007F
        gbc.setState(0x720e, 0xf9bd, 0x3510, 0x39f4, 0x12ff, 0xd086, 0x1, 0x1);
        gbc.writeMem(0x720e, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf9bd, gbc.sp());
        EXPECT(0x720f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0080
        gbc.setState(0x46dc, 0xda9b, 0xdca0, 0x8615, 0x365d, 0x3852, 0x0, 0x1);
        gbc.writeMem(0x46dc, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xda9b, gbc.sp());
        EXPECT(0x46dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0081
        gbc.setState(0x3f7a, 0x9cc6, 0x7ff0, 0xad02, 0x31f, 0xdc60, 0x0, 0x1);
        gbc.writeMem(0x3f7a, { 0xa4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9cc6, gbc.sp());
        EXPECT(0x3f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0082
        gbc.setState(0x67d2, 0xbb43, 0x2d20, 0x138d, 0x749d, 0x36e4, 0x1, 0x1);
        gbc.writeMem(0x67d2, { 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbb43, gbc.sp());
        EXPECT(0x67d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0083
        gbc.setState(0xc518, 0x8acc, 0x30d0, 0x92e5, 0xbec7, 0x79ef, 0x1, 0x0);
        gbc.writeMem(0xc518, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8acc, gbc.sp());
        EXPECT(0xc519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc518));
        // A4 0084
        gbc.setState(0xa45c, 0xa837, 0x4900, 0xf902, 0x350f, 0xc716, 0x1, 0x1);
        gbc.writeMem(0xa45c, { 0xa4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa837, gbc.sp());
        EXPECT(0xa45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa45c));
        // A4 0085
        gbc.setState(0xca26, 0x66da, 0x9280, 0xdc56, 0xbb36, 0x4af7, 0x0, 0x1);
        gbc.writeMem(0xca26, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x66da, gbc.sp());
        EXPECT(0xca27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xca26));
        // A4 0086
        gbc.setState(0x1c19, 0x9a71, 0x79c0, 0xddb0, 0x19ed, 0xd45f, 0x1, 0x0);
        gbc.writeMem(0x1c19, { 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9a71, gbc.sp());
        EXPECT(0x1c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0087
        gbc.setState(0x53fe, 0x500c, 0x8130, 0xe8ab, 0xd844, 0x90a0, 0x1, 0x0);
        gbc.writeMem(0x53fe, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x500c, gbc.sp());
        EXPECT(0x53ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0088
        gbc.setState(0xd1d9, 0x40be, 0x74f0, 0x1f59, 0x7dd2, 0x5033, 0x1, 0x0);
        gbc.writeMem(0xd1d9, { 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x40be, gbc.sp());
        EXPECT(0xd1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd1d9));
        // A4 0089
        gbc.setState(0xdd36, 0xf879, 0xf40, 0x1567, 0x47ad, 0x28c1, 0x0, 0x1);
        gbc.writeMem(0xdd36, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf879, gbc.sp());
        EXPECT(0xdd37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdd36));
        // A4 008A
        gbc.setState(0x1315, 0x1c92, 0xec00, 0x4a1e, 0xfa0a, 0x2bc9, 0x1, 0x1);
        gbc.writeMem(0x1315, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1c92, gbc.sp());
        EXPECT(0x1316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 008B
        gbc.setState(0x69b8, 0x5f31, 0x42c0, 0x640b, 0xfc90, 0xeafa, 0x1, 0x1);
        gbc.writeMem(0x69b8, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5f31, gbc.sp());
        EXPECT(0x69b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 008C
        gbc.setState(0xdecb, 0x1db2, 0xf60, 0x65a5, 0x3f6b, 0x32d9, 0x0, 0x0);
        gbc.writeMem(0xdecb, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1db2, gbc.sp());
        EXPECT(0xdecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdecb));
        // A4 008D
        gbc.setState(0xb871, 0x21cb, 0xf3a0, 0x3d55, 0x3e0f, 0xe346, 0x1, 0x0);
        gbc.writeMem(0xb871, { 0xa4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x21cb, gbc.sp());
        EXPECT(0xb872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb871));
        // A4 008E
        gbc.setState(0xb97, 0xdaa0, 0xbf50, 0x9b23, 0xdc70, 0xe9c3, 0x1, 0x0);
        gbc.writeMem(0xb97, { 0xa4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdaa0, gbc.sp());
        EXPECT(0xb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 008F
        gbc.setState(0x2269, 0x9273, 0x8280, 0x1cfa, 0x4c93, 0x88a8, 0x1, 0x0);
        gbc.writeMem(0x2269, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9273, gbc.sp());
        EXPECT(0x226a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0090
        gbc.setState(0x8279, 0x43cb, 0x230, 0xbb39, 0xd7ad, 0xb6e2, 0x0, 0x0);
        gbc.writeMem(0x8279, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x43cb, gbc.sp());
        EXPECT(0x827a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8279));
        // A4 0091
        gbc.setState(0x2626, 0x9fbe, 0x7a00, 0xea02, 0x3061, 0xd9d5, 0x0, 0x0);
        gbc.writeMem(0x2626, { 0xa4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9fbe, gbc.sp());
        EXPECT(0x2627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0092
        gbc.setState(0xd14a, 0x46c9, 0x34b0, 0x3895, 0xe1e8, 0x7c10, 0x0, 0x1);
        gbc.writeMem(0xd14a, { 0xa4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x46c9, gbc.sp());
        EXPECT(0xd14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd14a));
        // A4 0093
        gbc.setState(0x3514, 0x5dbb, 0x8a50, 0x8b87, 0x45e2, 0x6c16, 0x0, 0x0);
        gbc.writeMem(0x3514, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5dbb, gbc.sp());
        EXPECT(0x3515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0094
        gbc.setState(0x14d9, 0x1073, 0x350, 0x3fce, 0x264e, 0x5710, 0x0, 0x1);
        gbc.writeMem(0x14d9, { 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1073, gbc.sp());
        EXPECT(0x14da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0095
        gbc.setState(0x1861, 0xa375, 0xf4f0, 0x1da4, 0xfeb2, 0xca32, 0x0, 0x1);
        gbc.writeMem(0x1861, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa375, gbc.sp());
        EXPECT(0x1862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0096
        gbc.setState(0x3f48, 0xf950, 0x8440, 0x8a67, 0xbc43, 0x45f6, 0x1, 0x1);
        gbc.writeMem(0x3f48, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf950, gbc.sp());
        EXPECT(0x3f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0097
        gbc.setState(0x3567, 0x919e, 0xdeb0, 0x83f1, 0xdf1f, 0xb274, 0x0, 0x1);
        gbc.writeMem(0x3567, { 0xa4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x919e, gbc.sp());
        EXPECT(0x3568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0098
        gbc.setState(0x8f45, 0x8a78, 0x8a00, 0xbd5d, 0x5856, 0x9033, 0x1, 0x1);
        gbc.writeMem(0x8f45, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8a78, gbc.sp());
        EXPECT(0x8f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8f45));
        // A4 0099
        gbc.setState(0xb48d, 0x1b44, 0xd280, 0x8994, 0x47d6, 0x1148, 0x0, 0x0);
        gbc.writeMem(0xb48d, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1b44, gbc.sp());
        EXPECT(0xb48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb48d));
        // A4 009A
        gbc.setState(0xc0f, 0x9026, 0x5690, 0x3096, 0x64f, 0x7c25, 0x0, 0x1);
        gbc.writeMem(0xc0f, { 0xa4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9026, gbc.sp());
        EXPECT(0xc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 009B
        gbc.setState(0x8544, 0x269c, 0xeea0, 0x7df8, 0xb82b, 0xa16f, 0x1, 0x1);
        gbc.writeMem(0x8544, { 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x269c, gbc.sp());
        EXPECT(0x8545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8544));
        // A4 009C
        gbc.setState(0xe657, 0xa0a4, 0xbc00, 0x8bda, 0x657, 0x7d81, 0x0, 0x0);
        gbc.writeMem(0xe657, { 0xa4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa0a4, gbc.sp());
        EXPECT(0xe658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe657));
        // A4 009D
        gbc.setState(0x68aa, 0xca14, 0xf1e0, 0xcb61, 0x4ab1, 0xddfd, 0x0, 0x1);
        gbc.writeMem(0x68aa, { 0xa4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xca14, gbc.sp());
        EXPECT(0x68ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 009F
        gbc.setState(0xa04a, 0xd45e, 0xd540, 0xc98, 0x2acf, 0x1f6c, 0x0, 0x0);
        gbc.writeMem(0xa04a, { 0xa4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd45e, gbc.sp());
        EXPECT(0xa04b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa04a));
        // A4 00A0
        gbc.setState(0xacfb, 0xa925, 0x96d0, 0x7268, 0xbe3e, 0xe233, 0x0, 0x1);
        gbc.writeMem(0xacfb, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa925, gbc.sp());
        EXPECT(0xacfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xacfb));
        // A4 00A1
        gbc.setState(0x57f9, 0x6a89, 0x92a0, 0x6872, 0xb87a, 0x7c36, 0x1, 0x1);
        gbc.writeMem(0x57f9, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6a89, gbc.sp());
        EXPECT(0x57fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00A2
        gbc.setState(0x1e53, 0x3498, 0x2fb0, 0x1be8, 0x6fe8, 0xa43a, 0x1, 0x1);
        gbc.writeMem(0x1e53, { 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3498, gbc.sp());
        EXPECT(0x1e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00A3
        gbc.setState(0x5cf0, 0x9b71, 0xa2e0, 0xafbc, 0xed66, 0x85d, 0x1, 0x0);
        gbc.writeMem(0x5cf0, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9b71, gbc.sp());
        EXPECT(0x5cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00A4
        gbc.setState(0xe98b, 0x6637, 0xb2f0, 0xc3d3, 0xb424, 0x2d29, 0x0, 0x1);
        gbc.writeMem(0xe98b, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6637, gbc.sp());
        EXPECT(0xe98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe98b));
        // A4 00A5
        gbc.setState(0x57d, 0x9dac, 0x3f30, 0x575b, 0xb08d, 0x35b7, 0x1, 0x0);
        gbc.writeMem(0x57d, { 0xa4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9dac, gbc.sp());
        EXPECT(0x57e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00A6
        gbc.setState(0xaf00, 0xb651, 0xaca0, 0x5d17, 0xd8f, 0xcbd, 0x1, 0x1);
        gbc.writeMem(0xaf00, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb651, gbc.sp());
        EXPECT(0xaf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xaf00));
        // A4 00A7
        gbc.setState(0xca72, 0xbbd4, 0xee00, 0xe55f, 0xbb53, 0x2e58, 0x0, 0x1);
        gbc.writeMem(0xca72, { 0xa4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbbd4, gbc.sp());
        EXPECT(0xca73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xca72));
        // A4 00A8
        gbc.setState(0x49ab, 0x2002, 0xa0f0, 0x2f31, 0x768f, 0x1778, 0x0, 0x1);
        gbc.writeMem(0x49ab, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2002, gbc.sp());
        EXPECT(0x49ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00A9
        gbc.setState(0x4302, 0x651e, 0x2e0, 0xcfe4, 0xdb45, 0x62e8, 0x1, 0x0);
        gbc.writeMem(0x4302, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x651e, gbc.sp());
        EXPECT(0x4303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00AA
        gbc.setState(0x913c, 0x3260, 0x670, 0x3869, 0x5a1f, 0xf076, 0x1, 0x0);
        gbc.writeMem(0x913c, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0x913d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x913c));
        // A4 00AB
        gbc.setState(0x2657, 0xa6ae, 0x8620, 0x9fbc, 0xbc2c, 0x9cfa, 0x1, 0x1);
        gbc.writeMem(0x2657, { 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa6ae, gbc.sp());
        EXPECT(0x2658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00AC
        gbc.setState(0xd42f, 0xdd02, 0x9ce0, 0x9594, 0x7b68, 0x9fa0, 0x0, 0x1);
        gbc.writeMem(0xd42f, { 0xa4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdd02, gbc.sp());
        EXPECT(0xd430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd42f));
        // A4 00AD
        gbc.setState(0x3df3, 0x7ae7, 0x7430, 0xa8c5, 0xc140, 0x9be6, 0x0, 0x1);
        gbc.writeMem(0x3df3, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7ae7, gbc.sp());
        EXPECT(0x3df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00AE
        gbc.setState(0xcee6, 0x8cb3, 0x8650, 0x48f6, 0xb6a5, 0xf63c, 0x1, 0x0);
        gbc.writeMem(0xcee6, { 0xa4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8cb3, gbc.sp());
        EXPECT(0xcee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcee6));
        // A4 00AF
        gbc.setState(0x9f76, 0xb5b, 0xff90, 0x9005, 0x6ba7, 0x9232, 0x1, 0x1);
        gbc.writeMem(0x9f76, { 0xa4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb5b, gbc.sp());
        EXPECT(0x9f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9f76));
        // A4 00B0
        gbc.setState(0xb3c, 0x4dec, 0x7eb0, 0x5328, 0x6929, 0x3749, 0x1, 0x0);
        gbc.writeMem(0xb3c, { 0xa4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4dec, gbc.sp());
        EXPECT(0xb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00B1
        gbc.setState(0x4c86, 0x1814, 0x42a0, 0x5d32, 0xc3d7, 0xb336, 0x1, 0x0);
        gbc.writeMem(0x4c86, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1814, gbc.sp());
        EXPECT(0x4c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00B2
        gbc.setState(0x630f, 0x71ab, 0x1870, 0x978b, 0x1460, 0x49df, 0x0, 0x0);
        gbc.writeMem(0x630f, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x71ab, gbc.sp());
        EXPECT(0x6310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00B4
        gbc.setState(0x8c77, 0x2855, 0xb130, 0xd8b0, 0x1f35, 0xfcd7, 0x1, 0x0);
        gbc.writeMem(0x8c77, { 0xa4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2855, gbc.sp());
        EXPECT(0x8c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8c77));
        // A4 00B5
        gbc.setState(0x8f0a, 0xf0e2, 0xb5e0, 0x2e30, 0x2b8b, 0xdef0, 0x0, 0x0);
        gbc.writeMem(0x8f0a, { 0xa4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf0e2, gbc.sp());
        EXPECT(0x8f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8f0a));
        // A4 00B6
        gbc.setState(0x89a5, 0x7ab5, 0xfda0, 0x27d0, 0x7015, 0x11f8, 0x0, 0x1);
        gbc.writeMem(0x89a5, { 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7ab5, gbc.sp());
        EXPECT(0x89a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x89a5));
        // A4 00B7
        gbc.setState(0x9a13, 0x8c76, 0x9da0, 0x543b, 0xfb2c, 0xc8da, 0x0, 0x0);
        gbc.writeMem(0x9a13, { 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8c76, gbc.sp());
        EXPECT(0x9a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9a13));
        // A4 00B8
        gbc.setState(0x5304, 0xdfa, 0xb460, 0xe3c1, 0x8851, 0xb2ca, 0x0, 0x0);
        gbc.writeMem(0x5304, { 0xa4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdfa, gbc.sp());
        EXPECT(0x5305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00B9
        gbc.setState(0xb56c, 0x610d, 0x11f0, 0xe7cf, 0xa0c2, 0x6727, 0x0, 0x1);
        gbc.writeMem(0xb56c, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x610d, gbc.sp());
        EXPECT(0xb56d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb56c));
        // A4 00BA
        gbc.setState(0x31cb, 0xaa6e, 0xd2b0, 0xdbfc, 0x1849, 0x9738, 0x1, 0x0);
        gbc.writeMem(0x31cb, { 0xa4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaa6e, gbc.sp());
        EXPECT(0x31cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00BC
        gbc.setState(0xd327, 0x2c19, 0x3400, 0xf4fd, 0x6aaa, 0xca22, 0x0, 0x0);
        gbc.writeMem(0xd327, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2c19, gbc.sp());
        EXPECT(0xd328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd327));
        // A4 00BE
        gbc.setState(0xc6dd, 0xad89, 0x6f90, 0xe760, 0xbff0, 0x158b, 0x0, 0x0);
        gbc.writeMem(0xc6dd, { 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xad89, gbc.sp());
        EXPECT(0xc6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc6dd));
        // A4 00BF
        gbc.setState(0x4510, 0xe6f4, 0x3770, 0xa42e, 0x5c99, 0xf94e, 0x0, 0x0);
        gbc.writeMem(0x4510, { 0xa4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe6f4, gbc.sp());
        EXPECT(0x4511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00C0
        gbc.setState(0x865c, 0xed8e, 0x9920, 0x27aa, 0xb5bb, 0x2f1a, 0x0, 0x0);
        gbc.writeMem(0x865c, { 0xa4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xed8e, gbc.sp());
        EXPECT(0x865d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x865c));
        // A4 00C1
        gbc.setState(0x798d, 0xeaf, 0xb390, 0xf00, 0x7ff4, 0x7c24, 0x0, 0x0);
        gbc.writeMem(0x798d, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xeaf, gbc.sp());
        EXPECT(0x798e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00C2
        gbc.setState(0x4968, 0x2086, 0x4290, 0x3eb7, 0x656d, 0x2d24, 0x0, 0x1);
        gbc.writeMem(0x4968, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2086, gbc.sp());
        EXPECT(0x4969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00C3
        gbc.setState(0xa98e, 0xdcb1, 0x3610, 0xd52d, 0x915e, 0x7b9f, 0x0, 0x1);
        gbc.writeMem(0xa98e, { 0xa4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdcb1, gbc.sp());
        EXPECT(0xa98f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa98e));
        // A4 00C5
        gbc.setState(0xaae5, 0x7bb7, 0xde10, 0xc4b4, 0x27aa, 0x4330, 0x1, 0x1);
        gbc.writeMem(0xaae5, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7bb7, gbc.sp());
        EXPECT(0xaae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xaae5));
        // A4 00C6
        gbc.setState(0x3d75, 0x77ee, 0xc000, 0xe263, 0x6a67, 0x9b9f, 0x0, 0x1);
        gbc.writeMem(0x3d75, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x77ee, gbc.sp());
        EXPECT(0x3d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00C7
        gbc.setState(0x1291, 0x51e4, 0x50b0, 0x873a, 0x663d, 0x39bc, 0x0, 0x1);
        gbc.writeMem(0x1291, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x51e4, gbc.sp());
        EXPECT(0x1292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00C8
        gbc.setState(0x964, 0xc3d1, 0x96a0, 0xe0dc, 0xeb43, 0xddb9, 0x1, 0x1);
        gbc.writeMem(0x964, { 0xa4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc3d1, gbc.sp());
        EXPECT(0x965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00C9
        gbc.setState(0x7b14, 0xbee9, 0x9b10, 0x29ac, 0xa194, 0x36b1, 0x0, 0x0);
        gbc.writeMem(0x7b14, { 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbee9, gbc.sp());
        EXPECT(0x7b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00CA
        gbc.setState(0xdfc7, 0x1d50, 0xe360, 0xd6df, 0x3e9e, 0x4b67, 0x1, 0x1);
        gbc.writeMem(0xdfc7, { 0xa4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1d50, gbc.sp());
        EXPECT(0xdfc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdfc7));
        // A4 00CB
        gbc.setState(0x740a, 0x8cde, 0xfd0, 0x4810, 0xbcfa, 0xa1a5, 0x0, 0x1);
        gbc.writeMem(0x740a, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8cde, gbc.sp());
        EXPECT(0x740b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00CC
        gbc.setState(0xd40e, 0xbe75, 0xafd0, 0x8792, 0x825e, 0xdc09, 0x1, 0x0);
        gbc.writeMem(0xd40e, { 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbe75, gbc.sp());
        EXPECT(0xd40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd40e));
        // A4 00CD
        gbc.setState(0x1b7b, 0xd8a2, 0xe380, 0xd1f5, 0xf158, 0x4700, 0x1, 0x0);
        gbc.writeMem(0x1b7b, { 0xa4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd8a2, gbc.sp());
        EXPECT(0x1b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00CE
        gbc.setState(0xe5a8, 0xea8d, 0x9130, 0xb5ca, 0x83df, 0x3c95, 0x0, 0x0);
        gbc.writeMem(0xe5a8, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xea8d, gbc.sp());
        EXPECT(0xe5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe5a8));
        // A4 00CF
        gbc.setState(0x590d, 0x572, 0xf520, 0x9727, 0xd382, 0xc00d, 0x1, 0x1);
        gbc.writeMem(0x590d, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x572, gbc.sp());
        EXPECT(0x590e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00D0
        gbc.setState(0x6f33, 0x7127, 0xf1a0, 0x27ad, 0xd8e, 0x85bc, 0x1, 0x0);
        gbc.writeMem(0x6f33, { 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7127, gbc.sp());
        EXPECT(0x6f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00D1
        gbc.setState(0x90ed, 0x6b6a, 0x8000, 0x2d0f, 0x1987, 0xefcf, 0x1, 0x0);
        gbc.writeMem(0x90ed, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6b6a, gbc.sp());
        EXPECT(0x90ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x90ed));
        // A4 00D2
        gbc.setState(0x7311, 0x8a81, 0xe340, 0x9062, 0x5c15, 0xfaa9, 0x0, 0x1);
        gbc.writeMem(0x7311, { 0xa4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8a81, gbc.sp());
        EXPECT(0x7312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00D3
        gbc.setState(0xc915, 0x3a77, 0x15a0, 0x3461, 0x545c, 0x8996, 0x1, 0x1);
        gbc.writeMem(0xc915, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3a77, gbc.sp());
        EXPECT(0xc916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc915));
        // A4 00D4
        gbc.setState(0x9165, 0x151c, 0xda80, 0x86f5, 0x5085, 0x4974, 0x0, 0x0);
        gbc.writeMem(0x9165, { 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x151c, gbc.sp());
        EXPECT(0x9166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9165));
        // A4 00D5
        gbc.setState(0x8b32, 0x76c2, 0x7bf0, 0xe4e, 0x14a1, 0x3cda, 0x1, 0x0);
        gbc.writeMem(0x8b32, { 0xa4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x76c2, gbc.sp());
        EXPECT(0x8b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8b32));
        // A4 00D6
        gbc.setState(0xca3, 0x6ee3, 0x2260, 0x83bd, 0x2dc4, 0x78da, 0x1, 0x0);
        gbc.writeMem(0xca3, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6ee3, gbc.sp());
        EXPECT(0xca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00D7
        gbc.setState(0x9e57, 0xf41, 0x9760, 0x70ab, 0x4d46, 0xb063, 0x0, 0x0);
        gbc.writeMem(0x9e57, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf41, gbc.sp());
        EXPECT(0x9e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9e57));
        // A4 00D8
        gbc.setState(0x942c, 0xf181, 0x5550, 0xa82e, 0x1c5b, 0xa5a6, 0x0, 0x0);
        gbc.writeMem(0x942c, { 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf181, gbc.sp());
        EXPECT(0x942d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x942c));
        // A4 00D9
        gbc.setState(0xcfbe, 0x5e1f, 0xf490, 0x9f56, 0x4fd9, 0xe7a6, 0x0, 0x0);
        gbc.writeMem(0xcfbe, { 0xa4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5e1f, gbc.sp());
        EXPECT(0xcfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcfbe));
        // A4 00DA
        gbc.setState(0x2ba7, 0x16d1, 0x8ba0, 0x10ae, 0x2f48, 0xf72a, 0x1, 0x1);
        gbc.writeMem(0x2ba7, { 0xa4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x16d1, gbc.sp());
        EXPECT(0x2ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00DB
        gbc.setState(0x1614, 0x1074, 0x3fc0, 0xbca9, 0xb72e, 0x126, 0x0, 0x1);
        gbc.writeMem(0x1614, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1074, gbc.sp());
        EXPECT(0x1615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00DC
        gbc.setState(0xa294, 0x8585, 0x46c0, 0xb9b9, 0xc7b6, 0x33dd, 0x1, 0x1);
        gbc.writeMem(0xa294, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8585, gbc.sp());
        EXPECT(0xa295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa294));
        // A4 00DD
        gbc.setState(0x7b98, 0x9895, 0x1100, 0x76a, 0x69e3, 0x83cd, 0x1, 0x1);
        gbc.writeMem(0x7b98, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9895, gbc.sp());
        EXPECT(0x7b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00DE
        gbc.setState(0x24d6, 0xffd6, 0xe550, 0x34c7, 0x5ee0, 0x4970, 0x0, 0x1);
        gbc.writeMem(0x24d6, { 0xa4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xffd6, gbc.sp());
        EXPECT(0x24d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00DF
        gbc.setState(0xdeda, 0x9548, 0x9710, 0xc01e, 0x87d8, 0x757f, 0x0, 0x0);
        gbc.writeMem(0xdeda, { 0xa4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9548, gbc.sp());
        EXPECT(0xdedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdeda));
        // A4 00E0
        gbc.setState(0x181, 0x25d5, 0xad70, 0x7140, 0x6079, 0x6e62, 0x1, 0x0);
        gbc.writeMem(0x181, { 0xa4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x25d5, gbc.sp());
        EXPECT(0x182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00E1
        gbc.setState(0x6183, 0xeec6, 0x2750, 0x604, 0x6d49, 0x5fdc, 0x0, 0x1);
        gbc.writeMem(0x6183, { 0xa4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xeec6, gbc.sp());
        EXPECT(0x6184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00E2
        gbc.setState(0x185d, 0xf1a2, 0x4450, 0xb339, 0x7f02, 0x8ba3, 0x1, 0x1);
        gbc.writeMem(0x185d, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf1a2, gbc.sp());
        EXPECT(0x185e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00E3
        gbc.setState(0xce2b, 0x3439, 0xd750, 0x680f, 0xc9b, 0x2417, 0x1, 0x1);
        gbc.writeMem(0xce2b, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3439, gbc.sp());
        EXPECT(0xce2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xce2b));
        // A4 00E4
        gbc.setState(0xab3d, 0x8fc1, 0xa970, 0x13e2, 0xc55e, 0xaf7a, 0x0, 0x0);
        gbc.writeMem(0xab3d, { 0xa4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8fc1, gbc.sp());
        EXPECT(0xab3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xab3d));
        // A4 00E5
        gbc.setState(0x3f9f, 0x626a, 0xbdc0, 0xa2eb, 0xa157, 0x9a7f, 0x1, 0x1);
        gbc.writeMem(0x3f9f, { 0xa4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x626a, gbc.sp());
        EXPECT(0x3fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00E6
        gbc.setState(0x5c71, 0x76f4, 0xb620, 0xea12, 0x1966, 0x8a54, 0x1, 0x1);
        gbc.writeMem(0x5c71, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x76f4, gbc.sp());
        EXPECT(0x5c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00E7
        gbc.setState(0x8664, 0x453a, 0xf70, 0x5b87, 0xa2e4, 0xc25c, 0x1, 0x0);
        gbc.writeMem(0x8664, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x453a, gbc.sp());
        EXPECT(0x8665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8664));
        // A4 00E8
        gbc.setState(0xbf10, 0xfdec, 0x6010, 0x2969, 0xf3ca, 0x4dcc, 0x0, 0x0);
        gbc.writeMem(0xbf10, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfdec, gbc.sp());
        EXPECT(0xbf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbf10));
        // A4 00E9
        gbc.setState(0x545e, 0xdbc8, 0xd0c0, 0xfe7e, 0x1565, 0x8147, 0x0, 0x1);
        gbc.writeMem(0x545e, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdbc8, gbc.sp());
        EXPECT(0x545f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00EA
        gbc.setState(0xe94e, 0xacf3, 0x1b00, 0xbdbb, 0x1265, 0xbc98, 0x1, 0x0);
        gbc.writeMem(0xe94e, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xacf3, gbc.sp());
        EXPECT(0xe94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe94e));
        // A4 00EB
        gbc.setState(0x442e, 0xadd8, 0xe00, 0x1a16, 0x4c7, 0x8ade, 0x1, 0x1);
        gbc.writeMem(0x442e, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xadd8, gbc.sp());
        EXPECT(0x442f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00EC
        gbc.setState(0xd27d, 0x405f, 0x7f30, 0x31da, 0x1b2, 0x6729, 0x0, 0x1);
        gbc.writeMem(0xd27d, { 0xa4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x405f, gbc.sp());
        EXPECT(0xd27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd27d));
        // A4 00ED
        gbc.setState(0xaee, 0x3252, 0x2900, 0x40a8, 0x6d9d, 0x5c18, 0x1, 0x1);
        gbc.writeMem(0xaee, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3252, gbc.sp());
        EXPECT(0xaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00EE
        gbc.setState(0xdbc2, 0xfc51, 0x1cf0, 0xcf1e, 0xbf77, 0xc0bc, 0x0, 0x1);
        gbc.writeMem(0xdbc2, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfc51, gbc.sp());
        EXPECT(0xdbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdbc2));
        // A4 00EF
        gbc.setState(0x89b5, 0x55e6, 0x4f60, 0x27e5, 0x99bb, 0xe511, 0x0, 0x1);
        gbc.writeMem(0x89b5, { 0xa4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x55e6, gbc.sp());
        EXPECT(0x89b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x89b5));
        // A4 00F1
        gbc.setState(0xbd05, 0x32b5, 0x48e0, 0xebd8, 0xae6a, 0x1769, 0x1, 0x1);
        gbc.writeMem(0xbd05, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x32b5, gbc.sp());
        EXPECT(0xbd06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbd05));
        // A4 00F2
        gbc.setState(0x6e89, 0xc43c, 0x7360, 0x9d92, 0xc8e4, 0xe9b6, 0x1, 0x1);
        gbc.writeMem(0x6e89, { 0xa4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc43c, gbc.sp());
        EXPECT(0x6e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00F3
        gbc.setState(0x687c, 0xe2a3, 0x3a80, 0xd08f, 0xb36b, 0xdc4c, 0x1, 0x0);
        gbc.writeMem(0x687c, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe2a3, gbc.sp());
        EXPECT(0x687d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00F4
        gbc.setState(0xae26, 0x92fd, 0x52b0, 0xf38c, 0xa577, 0xc10d, 0x1, 0x1);
        gbc.writeMem(0xae26, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x92fd, gbc.sp());
        EXPECT(0xae27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xae26));
        // A4 00F5
        gbc.setState(0xdf38, 0x815b, 0xb8d0, 0x9213, 0xa6ed, 0x59e1, 0x0, 0x0);
        gbc.writeMem(0xdf38, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x815b, gbc.sp());
        EXPECT(0xdf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdf38));
        // A4 00F6
        gbc.setState(0x8a12, 0x80c3, 0xaf90, 0x55c, 0xf073, 0x2055, 0x0, 0x0);
        gbc.writeMem(0x8a12, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x80c3, gbc.sp());
        EXPECT(0x8a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8a12));
        // A4 00F7
        gbc.setState(0x57b6, 0xe40, 0x680, 0x3dcd, 0x5aee, 0xc9f0, 0x0, 0x1);
        gbc.writeMem(0x57b6, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe40, gbc.sp());
        EXPECT(0x57b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00F8
        gbc.setState(0x23b7, 0x6976, 0xfd00, 0x5adc, 0x8b73, 0x57e7, 0x0, 0x0);
        gbc.writeMem(0x23b7, { 0xa4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6976, gbc.sp());
        EXPECT(0x23b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00F9
        gbc.setState(0xb442, 0x83c5, 0x8bc0, 0xaf04, 0xeace, 0x2219, 0x1, 0x0);
        gbc.writeMem(0xb442, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x83c5, gbc.sp());
        EXPECT(0xb443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb442));
        // A4 00FA
        gbc.setState(0x3dfa, 0xa2bc, 0x5370, 0x546c, 0x2f06, 0x540, 0x1, 0x1);
        gbc.writeMem(0x3dfa, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa2bc, gbc.sp());
        EXPECT(0x3dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00FB
        gbc.setState(0xc01b, 0x1a0b, 0x4fa0, 0xf2f3, 0x35d0, 0xee58, 0x0, 0x0);
        gbc.writeMem(0xc01b, { 0xa4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1a0b, gbc.sp());
        EXPECT(0xc01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc01b));
        // A4 00FC
        gbc.setState(0x1ce2, 0xb404, 0x8aa0, 0xe6ec, 0x903, 0xc882, 0x0, 0x0);
        gbc.writeMem(0x1ce2, { 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb404, gbc.sp());
        EXPECT(0x1ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00FD
        gbc.setState(0x1375, 0x3bbc, 0x1b0, 0xd0de, 0x2f98, 0x56f5, 0x0, 0x1);
        gbc.writeMem(0x1375, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3bbc, gbc.sp());
        EXPECT(0x1376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 00FE
        gbc.setState(0xd67b, 0x7020, 0x2d70, 0xa8c0, 0x78c8, 0xedc2, 0x1, 0x1);
        gbc.writeMem(0xd67b, { 0xa4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7020, gbc.sp());
        EXPECT(0xd67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd67b));
        // A4 00FF
        gbc.setState(0xb4a0, 0xe190, 0x2650, 0xd334, 0xe864, 0x2289, 0x0, 0x0);
        gbc.writeMem(0xb4a0, { 0xa4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0xb4a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb4a0));
        // A4 0100
        gbc.setState(0xbf53, 0xebea, 0xc080, 0x106b, 0x3d77, 0xeb72, 0x1, 0x0);
        gbc.writeMem(0xbf53, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xebea, gbc.sp());
        EXPECT(0xbf54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbf53));
        // A4 0101
        gbc.setState(0x9916, 0xaa11, 0xa3f0, 0x1f6d, 0x9069, 0x817f, 0x1, 0x1);
        gbc.writeMem(0x9916, { 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xaa11, gbc.sp());
        EXPECT(0x9917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9916));
        // A4 0102
        gbc.setState(0x6c2b, 0xd34, 0xeba0, 0x963d, 0x654, 0x698, 0x0, 0x0);
        gbc.writeMem(0x6c2b, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd34, gbc.sp());
        EXPECT(0x6c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0103
        gbc.setState(0xa26d, 0x7cb6, 0xf40, 0xadbc, 0x44b8, 0xc3de, 0x1, 0x0);
        gbc.writeMem(0xa26d, { 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7cb6, gbc.sp());
        EXPECT(0xa26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa26d));
        // A4 0104
        gbc.setState(0x34d, 0xaad2, 0x5310, 0xdf08, 0xa1bd, 0x9494, 0x1, 0x0);
        gbc.writeMem(0x34d, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaad2, gbc.sp());
        EXPECT(0x34e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0105
        gbc.setState(0xa327, 0xc7a7, 0xdbc0, 0x1535, 0x2861, 0xbf69, 0x1, 0x1);
        gbc.writeMem(0xa327, { 0xa4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc7a7, gbc.sp());
        EXPECT(0xa328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa327));
        // A4 0106
        gbc.setState(0x9096, 0x862c, 0x23f0, 0x8714, 0x6115, 0x6cfe, 0x0, 0x1);
        gbc.writeMem(0x9096, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x862c, gbc.sp());
        EXPECT(0x9097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9096));
        // A4 0107
        gbc.setState(0x81a5, 0xa747, 0x6220, 0x6eb3, 0x381d, 0x9e82, 0x1, 0x0);
        gbc.writeMem(0x81a5, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa747, gbc.sp());
        EXPECT(0x81a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x81a5));
        // A4 0108
        gbc.setState(0x8d42, 0x3b41, 0xf6b0, 0x3462, 0xbe7, 0x49f9, 0x1, 0x1);
        gbc.writeMem(0x8d42, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3b41, gbc.sp());
        EXPECT(0x8d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8d42));
        // A4 0109
        gbc.setState(0x5474, 0x3506, 0x1950, 0x896b, 0xc823, 0xa51a, 0x0, 0x0);
        gbc.writeMem(0x5474, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3506, gbc.sp());
        EXPECT(0x5475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 010A
        gbc.setState(0x7615, 0x155f, 0x4460, 0xd9ec, 0xbdb0, 0x808d, 0x0, 0x1);
        gbc.writeMem(0x7615, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x155f, gbc.sp());
        EXPECT(0x7616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 010B
        gbc.setState(0xdcbd, 0x64c0, 0x1380, 0xbf6f, 0x4feb, 0xabfd, 0x0, 0x1);
        gbc.writeMem(0xdcbd, { 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x64c0, gbc.sp());
        EXPECT(0xdcbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdcbd));
        // A4 010C
        gbc.setState(0x80ce, 0x598, 0x8e20, 0x3b62, 0x28ed, 0x4525, 0x0, 0x1);
        gbc.writeMem(0x80ce, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x598, gbc.sp());
        EXPECT(0x80cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x80ce));
        // A4 010D
        gbc.setState(0x6a57, 0x9321, 0xed50, 0x184e, 0xb607, 0x8f4f, 0x0, 0x1);
        gbc.writeMem(0x6a57, { 0xa4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9321, gbc.sp());
        EXPECT(0x6a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 010E
        gbc.setState(0x15de, 0xe1d1, 0xd860, 0xfd83, 0x8cac, 0x6713, 0x0, 0x1);
        gbc.writeMem(0x15de, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe1d1, gbc.sp());
        EXPECT(0x15df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 010F
        gbc.setState(0x7645, 0x89b5, 0x2430, 0xf240, 0xdc93, 0xcad5, 0x0, 0x1);
        gbc.writeMem(0x7645, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x89b5, gbc.sp());
        EXPECT(0x7646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0110
        gbc.setState(0x5c9d, 0x7a6, 0x1270, 0x8ac, 0x51b1, 0x6bf7, 0x1, 0x1);
        gbc.writeMem(0x5c9d, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7a6, gbc.sp());
        EXPECT(0x5c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0111
        gbc.setState(0xf27, 0x658a, 0x68b0, 0x4d4e, 0x5f45, 0x9f4f, 0x0, 0x1);
        gbc.writeMem(0xf27, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x658a, gbc.sp());
        EXPECT(0xf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0112
        gbc.setState(0x4218, 0x561c, 0x7980, 0x99aa, 0xd927, 0xe05f, 0x0, 0x1);
        gbc.writeMem(0x4218, { 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x561c, gbc.sp());
        EXPECT(0x4219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0113
        gbc.setState(0x8fcf, 0xe738, 0xa4c0, 0x5ee, 0x4514, 0xf0b9, 0x0, 0x1);
        gbc.writeMem(0x8fcf, { 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe738, gbc.sp());
        EXPECT(0x8fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8fcf));
        // A4 0114
        gbc.setState(0xfd1, 0xf331, 0xef20, 0x9ee1, 0x9f66, 0x6179, 0x1, 0x1);
        gbc.writeMem(0xfd1, { 0xa4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf331, gbc.sp());
        EXPECT(0xfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0115
        gbc.setState(0xd7b2, 0xd7d4, 0x9380, 0x15a7, 0xd1d3, 0x992, 0x0, 0x0);
        gbc.writeMem(0xd7b2, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd7d4, gbc.sp());
        EXPECT(0xd7b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd7b2));
        // A4 0116
        gbc.setState(0xcd, 0xa584, 0x2ca0, 0xcadc, 0xf0dc, 0x6893, 0x0, 0x1);
        gbc.writeMem(0xcd, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa584, gbc.sp());
        EXPECT(0xce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0117
        gbc.setState(0xb0e8, 0x66c4, 0x9fe0, 0x47ae, 0xa38e, 0xb7ba, 0x0, 0x1);
        gbc.writeMem(0xb0e8, { 0xa4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x66c4, gbc.sp());
        EXPECT(0xb0e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb0e8));
        // A4 0118
        gbc.setState(0x604e, 0x298b, 0xcb50, 0xbd90, 0xf662, 0x1d42, 0x1, 0x0);
        gbc.writeMem(0x604e, { 0xa4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x298b, gbc.sp());
        EXPECT(0x604f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0119
        gbc.setState(0xe859, 0xb9f8, 0x4460, 0x8333, 0x954, 0x4644, 0x0, 0x1);
        gbc.writeMem(0xe859, { 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb9f8, gbc.sp());
        EXPECT(0xe85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe859));
        // A4 011A
        gbc.setState(0x9848, 0x8235, 0xe660, 0xc2ef, 0xd7e3, 0x27a5, 0x1, 0x0);
        gbc.writeMem(0x9848, { 0xa4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8235, gbc.sp());
        EXPECT(0x9849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9848));
        // A4 011B
        gbc.setState(0x1ac2, 0x7fc8, 0xa730, 0x2b80, 0xda71, 0x30e2, 0x1, 0x1);
        gbc.writeMem(0x1ac2, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7fc8, gbc.sp());
        EXPECT(0x1ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 011C
        gbc.setState(0xc3a7, 0x4f9c, 0xb370, 0xc824, 0x7a81, 0xa041, 0x1, 0x1);
        gbc.writeMem(0xc3a7, { 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4f9c, gbc.sp());
        EXPECT(0xc3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc3a7));
        // A4 011D
        gbc.setState(0x6e08, 0xdd76, 0x2020, 0x2394, 0xb186, 0x4d11, 0x1, 0x1);
        gbc.writeMem(0x6e08, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdd76, gbc.sp());
        EXPECT(0x6e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 011E
        gbc.setState(0x38e7, 0xc591, 0xf0f0, 0xfc8f, 0xb498, 0x7f27, 0x1, 0x0);
        gbc.writeMem(0x38e7, { 0xa4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc591, gbc.sp());
        EXPECT(0x38e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 011F
        gbc.setState(0x6de2, 0x576f, 0xacf0, 0x172, 0xf438, 0xb89, 0x0, 0x1);
        gbc.writeMem(0x6de2, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x576f, gbc.sp());
        EXPECT(0x6de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0120
        gbc.setState(0x1b54, 0x3435, 0xfee0, 0x8d95, 0xad2f, 0x1009, 0x0, 0x0);
        gbc.writeMem(0x1b54, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3435, gbc.sp());
        EXPECT(0x1b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0121
        gbc.setState(0x3ed6, 0x26ec, 0x3ed0, 0xc2e7, 0xa795, 0x6fc8, 0x0, 0x1);
        gbc.writeMem(0x3ed6, { 0xa4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x26ec, gbc.sp());
        EXPECT(0x3ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0122
        gbc.setState(0x1c99, 0x6f0c, 0x5bf0, 0x377, 0x7f54, 0x974c, 0x1, 0x0);
        gbc.writeMem(0x1c99, { 0xa4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6f0c, gbc.sp());
        EXPECT(0x1c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0124
        gbc.setState(0x82e3, 0x2621, 0xf610, 0xc473, 0x9e04, 0x80e5, 0x0, 0x1);
        gbc.writeMem(0x82e3, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2621, gbc.sp());
        EXPECT(0x82e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x82e3));
        // A4 0125
        gbc.setState(0xc173, 0xd1da, 0xfd80, 0xce19, 0x6ecf, 0x9c53, 0x0, 0x0);
        gbc.writeMem(0xc173, { 0xa4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd1da, gbc.sp());
        EXPECT(0xc174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc173));
        // A4 0126
        gbc.setState(0xb5c4, 0x6be9, 0xe6a0, 0x25fe, 0xff2d, 0xa34b, 0x0, 0x1);
        gbc.writeMem(0xb5c4, { 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6be9, gbc.sp());
        EXPECT(0xb5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb5c4));
        // A4 0127
        gbc.setState(0x6123, 0xbec, 0x1290, 0xee14, 0xa55c, 0x1acb, 0x0, 0x1);
        gbc.writeMem(0x6123, { 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbec, gbc.sp());
        EXPECT(0x6124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0128
        gbc.setState(0x9b19, 0x44e1, 0xc720, 0x3fab, 0x2507, 0xf948, 0x1, 0x1);
        gbc.writeMem(0x9b19, { 0xa4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x44e1, gbc.sp());
        EXPECT(0x9b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9b19));
        // A4 012A
        gbc.setState(0xd2dd, 0x8345, 0x7a50, 0xbd2a, 0xbdbc, 0x2ba4, 0x0, 0x0);
        gbc.writeMem(0xd2dd, { 0xa4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8345, gbc.sp());
        EXPECT(0xd2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd2dd));
        // A4 012B
        gbc.setState(0x4232, 0xa173, 0xea70, 0xf7b, 0x7ad9, 0x5c8e, 0x0, 0x0);
        gbc.writeMem(0x4232, { 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa173, gbc.sp());
        EXPECT(0x4233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 012D
        gbc.setState(0xe27, 0xca54, 0xc590, 0x3dd2, 0x39e5, 0x7695, 0x0, 0x0);
        gbc.writeMem(0xe27, { 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0xe28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 012E
        gbc.setState(0x5062, 0x2bcd, 0x3a80, 0x87ba, 0x1c82, 0x4666, 0x1, 0x0);
        gbc.writeMem(0x5062, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2bcd, gbc.sp());
        EXPECT(0x5063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 012F
        gbc.setState(0xbdc1, 0x95b9, 0x4df0, 0xb84c, 0xe0c6, 0xc68a, 0x1, 0x1);
        gbc.writeMem(0xbdc1, { 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x95b9, gbc.sp());
        EXPECT(0xbdc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbdc1));
        // A4 0130
        gbc.setState(0x1fb1, 0x6a00, 0x7b90, 0x615e, 0x1f75, 0xd9a8, 0x1, 0x1);
        gbc.writeMem(0x1fb1, { 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6a00, gbc.sp());
        EXPECT(0x1fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0131
        gbc.setState(0xd692, 0x786e, 0xc890, 0xddcd, 0x62ce, 0x2aa3, 0x1, 0x0);
        gbc.writeMem(0xd692, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x786e, gbc.sp());
        EXPECT(0xd693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd692));
        // A4 0132
        gbc.setState(0x602f, 0xb490, 0xa7d0, 0x1f86, 0x1cef, 0xd758, 0x1, 0x1);
        gbc.writeMem(0x602f, { 0xa4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb490, gbc.sp());
        EXPECT(0x6030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0133
        gbc.setState(0x52c5, 0x8ad3, 0x7e50, 0x887b, 0x1216, 0xa862, 0x1, 0x0);
        gbc.writeMem(0x52c5, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8ad3, gbc.sp());
        EXPECT(0x52c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0134
        gbc.setState(0x8c51, 0xadf3, 0x8f50, 0xbf8b, 0xb25b, 0x8c06, 0x1, 0x0);
        gbc.writeMem(0x8c51, { 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xadf3, gbc.sp());
        EXPECT(0x8c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8c51));
        // A4 0136
        gbc.setState(0xa3f7, 0x39e9, 0xed80, 0x300b, 0xc0af, 0x8126, 0x1, 0x1);
        gbc.writeMem(0xa3f7, { 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x39e9, gbc.sp());
        EXPECT(0xa3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa3f7));
        // A4 0137
        gbc.setState(0x5537, 0x488, 0x61f0, 0xa7d, 0x4f52, 0x6c1d, 0x1, 0x1);
        gbc.writeMem(0x5537, { 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x488, gbc.sp());
        EXPECT(0x5538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0139
        gbc.setState(0x355e, 0x7bf0, 0x12f0, 0x1fca, 0xbeae, 0x1c8a, 0x1, 0x1);
        gbc.writeMem(0x355e, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7bf0, gbc.sp());
        EXPECT(0x355f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 013A
        gbc.setState(0x8823, 0x5d69, 0xaab0, 0xa7a3, 0x66f2, 0xdc5, 0x0, 0x0);
        gbc.writeMem(0x8823, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5d69, gbc.sp());
        EXPECT(0x8824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8823));
        // A4 013B
        gbc.setState(0xdf7a, 0x3377, 0x2e20, 0xbf66, 0x9446, 0x50f5, 0x1, 0x1);
        gbc.writeMem(0xdf7a, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3377, gbc.sp());
        EXPECT(0xdf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdf7a));
        // A4 013C
        gbc.setState(0x79e1, 0x5a75, 0x8bd0, 0xdb59, 0xc89b, 0x6fa1, 0x0, 0x0);
        gbc.writeMem(0x79e1, { 0xa4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5a75, gbc.sp());
        EXPECT(0x79e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 013D
        gbc.setState(0xdf45, 0x12e4, 0x48f0, 0xceb9, 0x6352, 0xf035, 0x0, 0x1);
        gbc.writeMem(0xdf45, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x12e4, gbc.sp());
        EXPECT(0xdf46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdf45));
        // A4 013E
        gbc.setState(0x7a29, 0x72c, 0xfd70, 0x6431, 0x353, 0xad42, 0x1, 0x1);
        gbc.writeMem(0x7a29, { 0xa4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x72c, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 013F
        gbc.setState(0xdc5a, 0xb1e7, 0x7e20, 0xb549, 0x987a, 0xdfb2, 0x0, 0x0);
        gbc.writeMem(0xdc5a, { 0xa4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb1e7, gbc.sp());
        EXPECT(0xdc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdc5a));
        // A4 0140
        gbc.setState(0xf03, 0x630f, 0x7aa0, 0xf0dc, 0x7bbe, 0x3a1c, 0x1, 0x0);
        gbc.writeMem(0xf03, { 0xa4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x630f, gbc.sp());
        EXPECT(0xf04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0141
        gbc.setState(0x1f5d, 0xcd04, 0xc220, 0xc674, 0x1163, 0x651a, 0x1, 0x1);
        gbc.writeMem(0x1f5d, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcd04, gbc.sp());
        EXPECT(0x1f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0142
        gbc.setState(0xd00c, 0x47a9, 0x95a0, 0xa41b, 0x9e22, 0xf35e, 0x0, 0x0);
        gbc.writeMem(0xd00c, { 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x47a9, gbc.sp());
        EXPECT(0xd00d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd00c));
        // A4 0143
        gbc.setState(0xca7c, 0xfdc4, 0xce10, 0xd409, 0x9f5, 0x35ac, 0x0, 0x1);
        gbc.writeMem(0xca7c, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfdc4, gbc.sp());
        EXPECT(0xca7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xca7c));
        // A4 0144
        gbc.setState(0x3c00, 0xa1e, 0x4030, 0xeb33, 0x8321, 0x2779, 0x0, 0x1);
        gbc.writeMem(0x3c00, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa1e, gbc.sp());
        EXPECT(0x3c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0145
        gbc.setState(0x1d42, 0x1721, 0x4ff0, 0x9bab, 0x9ea, 0xc75, 0x0, 0x1);
        gbc.writeMem(0x1d42, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1721, gbc.sp());
        EXPECT(0x1d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0146
        gbc.setState(0x8abd, 0xfec6, 0xa140, 0xa2d6, 0x18a4, 0x8532, 0x1, 0x0);
        gbc.writeMem(0x8abd, { 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfec6, gbc.sp());
        EXPECT(0x8abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8abd));
        // A4 0147
        gbc.setState(0xa028, 0x9bbc, 0xee70, 0xa4e1, 0xe63f, 0x78d3, 0x0, 0x0);
        gbc.writeMem(0xa028, { 0xa4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9bbc, gbc.sp());
        EXPECT(0xa029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa028));
        // A4 0148
        gbc.setState(0x5d30, 0xf843, 0x4c20, 0xd877, 0x6e07, 0x5e1d, 0x1, 0x1);
        gbc.writeMem(0x5d30, { 0xa4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf843, gbc.sp());
        EXPECT(0x5d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0149
        gbc.setState(0x6ac, 0xcd34, 0xaeb0, 0xd9d4, 0xf2aa, 0xb38, 0x1, 0x0);
        gbc.writeMem(0x6ac, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcd34, gbc.sp());
        EXPECT(0x6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 014A
        gbc.setState(0x87f7, 0x43e5, 0xd9b0, 0x7050, 0xa8fa, 0x5191, 0x1, 0x1);
        gbc.writeMem(0x87f7, { 0xa4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x43e5, gbc.sp());
        EXPECT(0x87f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x87f7));
        // A4 014B
        gbc.setState(0xb1d5, 0x947d, 0x5400, 0x10b5, 0x9a9f, 0xb762, 0x0, 0x1);
        gbc.writeMem(0xb1d5, { 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x947d, gbc.sp());
        EXPECT(0xb1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb1d5));
        // A4 014C
        gbc.setState(0x2861, 0x723b, 0x9400, 0xef66, 0x45fb, 0xa58, 0x1, 0x1);
        gbc.writeMem(0x2861, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x723b, gbc.sp());
        EXPECT(0x2862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 014D
        gbc.setState(0x363f, 0x64c5, 0x3d30, 0xb3c4, 0xf98a, 0x5233, 0x1, 0x0);
        gbc.writeMem(0x363f, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x64c5, gbc.sp());
        EXPECT(0x3640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 014E
        gbc.setState(0x4e9c, 0x7f73, 0x9b70, 0x9409, 0x342c, 0x626a, 0x1, 0x1);
        gbc.writeMem(0x4e9c, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7f73, gbc.sp());
        EXPECT(0x4e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 014F
        gbc.setState(0x1fd3, 0x1f04, 0x1370, 0xad59, 0x47aa, 0x3d0, 0x1, 0x0);
        gbc.writeMem(0x1fd3, { 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1f04, gbc.sp());
        EXPECT(0x1fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0150
        gbc.setState(0x5230, 0x39b9, 0x5a10, 0x3bf7, 0x769e, 0x9b86, 0x0, 0x1);
        gbc.writeMem(0x5230, { 0xa4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x39b9, gbc.sp());
        EXPECT(0x5231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0151
        gbc.setState(0xdf53, 0x3952, 0xf3b0, 0xc39b, 0x64bc, 0xb9af, 0x1, 0x1);
        gbc.writeMem(0xdf53, { 0xa4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3952, gbc.sp());
        EXPECT(0xdf54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdf53));
        // A4 0152
        gbc.setState(0xad43, 0x16a4, 0x3990, 0x68b3, 0xa1c3, 0x45d0, 0x1, 0x1);
        gbc.writeMem(0xad43, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x16a4, gbc.sp());
        EXPECT(0xad44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xad43));
        // A4 0153
        gbc.setState(0x54d1, 0x7655, 0x4bf0, 0xe68e, 0x8dc3, 0xa911, 0x0, 0x1);
        gbc.writeMem(0x54d1, { 0xa4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7655, gbc.sp());
        EXPECT(0x54d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0154
        gbc.setState(0x152e, 0xec9d, 0x8720, 0x5994, 0xc14e, 0x84ba, 0x1, 0x0);
        gbc.writeMem(0x152e, { 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xec9d, gbc.sp());
        EXPECT(0x152f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0155
        gbc.setState(0x4934, 0x5c4f, 0xca20, 0xae08, 0xcd9, 0x4a43, 0x0, 0x1);
        gbc.writeMem(0x4934, { 0xa4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5c4f, gbc.sp());
        EXPECT(0x4935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0156
        gbc.setState(0xda3a, 0x2e3d, 0xbf60, 0x3ded, 0x4e70, 0x6b61, 0x1, 0x1);
        gbc.writeMem(0xda3a, { 0xa4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2e3d, gbc.sp());
        EXPECT(0xda3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xda3a));
        // A4 0157
        gbc.setState(0x705d, 0xd3dd, 0xe5e0, 0xbb7f, 0x263a, 0x9800, 0x1, 0x1);
        gbc.writeMem(0x705d, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd3dd, gbc.sp());
        EXPECT(0x705e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0158
        gbc.setState(0xb87f, 0xb746, 0xa7d0, 0x3d2a, 0xd622, 0xd2e9, 0x0, 0x0);
        gbc.writeMem(0xb87f, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb746, gbc.sp());
        EXPECT(0xb880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb87f));
        // A4 0159
        gbc.setState(0xe540, 0xb2cc, 0x1a40, 0x6d59, 0x925e, 0x784d, 0x0, 0x0);
        gbc.writeMem(0xe540, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb2cc, gbc.sp());
        EXPECT(0xe541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe540));
        // A4 015A
        gbc.setState(0xba59, 0xd94d, 0xee80, 0xa91e, 0xbdbe, 0x446f, 0x0, 0x1);
        gbc.writeMem(0xba59, { 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd94d, gbc.sp());
        EXPECT(0xba5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xba59));
        // A4 015B
        gbc.setState(0x1476, 0x680c, 0x4980, 0x661d, 0x590c, 0xa575, 0x1, 0x1);
        gbc.writeMem(0x1476, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x680c, gbc.sp());
        EXPECT(0x1477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 015C
        gbc.setState(0xd693, 0xd8a0, 0x9da0, 0x9959, 0x5261, 0x38ed, 0x0, 0x0);
        gbc.writeMem(0xd693, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd8a0, gbc.sp());
        EXPECT(0xd694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd693));
        // A4 015D
        gbc.setState(0x6bfa, 0x9cc, 0xc10, 0x69c0, 0x35ed, 0x7ea1, 0x1, 0x0);
        gbc.writeMem(0x6bfa, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9cc, gbc.sp());
        EXPECT(0x6bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 015E
        gbc.setState(0x65a4, 0x4767, 0x3780, 0x8144, 0x9fc0, 0x9267, 0x1, 0x1);
        gbc.writeMem(0x65a4, { 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4767, gbc.sp());
        EXPECT(0x65a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 015F
        gbc.setState(0xa6c, 0x7df0, 0xe3f0, 0x87c1, 0x815a, 0x8a4f, 0x0, 0x1);
        gbc.writeMem(0xa6c, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7df0, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0160
        gbc.setState(0xb429, 0x58b5, 0xad40, 0xc6f9, 0x156b, 0x28d0, 0x1, 0x0);
        gbc.writeMem(0xb429, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x58b5, gbc.sp());
        EXPECT(0xb42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb429));
        // A4 0161
        gbc.setState(0xde30, 0x55a7, 0xe850, 0x944d, 0x867a, 0xe21e, 0x1, 0x0);
        gbc.writeMem(0xde30, { 0xa4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x55a7, gbc.sp());
        EXPECT(0xde31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xde30));
        // A4 0162
        gbc.setState(0xc1b9, 0xa707, 0x7b50, 0xbea7, 0x1a68, 0xe800, 0x1, 0x1);
        gbc.writeMem(0xc1b9, { 0xa4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa707, gbc.sp());
        EXPECT(0xc1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc1b9));
        // A4 0163
        gbc.setState(0x2010, 0xdf63, 0x5700, 0x3abc, 0xb90f, 0x92b1, 0x0, 0x0);
        gbc.writeMem(0x2010, { 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdf63, gbc.sp());
        EXPECT(0x2011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0164
        gbc.setState(0x395, 0x99ed, 0x33e0, 0xf23e, 0x5663, 0xf390, 0x1, 0x0);
        gbc.writeMem(0x395, { 0xa4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x99ed, gbc.sp());
        EXPECT(0x396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0165
        gbc.setState(0x6a6, 0x792b, 0xc900, 0x34d, 0x53bd, 0xb40c, 0x0, 0x1);
        gbc.writeMem(0x6a6, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x792b, gbc.sp());
        EXPECT(0x6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0166
        gbc.setState(0x55e0, 0x1c9d, 0xba30, 0x24f6, 0x2485, 0x60ce, 0x0, 0x0);
        gbc.writeMem(0x55e0, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1c9d, gbc.sp());
        EXPECT(0x55e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0167
        gbc.setState(0x77d7, 0x8a99, 0x9b60, 0xaebd, 0xff65, 0x4c9a, 0x0, 0x1);
        gbc.writeMem(0x77d7, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8a99, gbc.sp());
        EXPECT(0x77d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0168
        gbc.setState(0x7522, 0x39a1, 0x4900, 0x287e, 0x304a, 0x8c09, 0x0, 0x0);
        gbc.writeMem(0x7522, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x39a1, gbc.sp());
        EXPECT(0x7523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 016A
        gbc.setState(0x24bd, 0xe1ae, 0x2ab0, 0xf44a, 0x9b37, 0xf078, 0x1, 0x0);
        gbc.writeMem(0x24bd, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe1ae, gbc.sp());
        EXPECT(0x24be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 016B
        gbc.setState(0x9426, 0xdfd9, 0x1470, 0xdb8c, 0x2ab5, 0x23cb, 0x0, 0x1);
        gbc.writeMem(0x9426, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdfd9, gbc.sp());
        EXPECT(0x9427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9426));
        // A4 016D
        gbc.setState(0x35e2, 0x8c68, 0x2330, 0x399c, 0xaf38, 0x3b24, 0x1, 0x0);
        gbc.writeMem(0x35e2, { 0xa4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8c68, gbc.sp());
        EXPECT(0x35e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 016E
        gbc.setState(0x9f3c, 0x3eed, 0x1ce0, 0xaf18, 0x3cc0, 0x5150, 0x1, 0x1);
        gbc.writeMem(0x9f3c, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3eed, gbc.sp());
        EXPECT(0x9f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9f3c));
        // A4 016F
        gbc.setState(0x2d61, 0xed78, 0x6f80, 0x4b7d, 0xd48d, 0x4724, 0x1, 0x1);
        gbc.writeMem(0x2d61, { 0xa4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xed78, gbc.sp());
        EXPECT(0x2d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0170
        gbc.setState(0xb931, 0x7b95, 0x4e30, 0xf719, 0x777e, 0xba09, 0x0, 0x1);
        gbc.writeMem(0xb931, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7b95, gbc.sp());
        EXPECT(0xb932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb931));
        // A4 0171
        gbc.setState(0x1cb2, 0xedf8, 0x23c0, 0xe77e, 0x6c9c, 0x8b19, 0x0, 0x1);
        gbc.writeMem(0x1cb2, { 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xedf8, gbc.sp());
        EXPECT(0x1cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0172
        gbc.setState(0x8285, 0xe5eb, 0xa20, 0x7444, 0xbf7e, 0xdb52, 0x0, 0x1);
        gbc.writeMem(0x8285, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe5eb, gbc.sp());
        EXPECT(0x8286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8285));
        // A4 0173
        gbc.setState(0xea00, 0x7a6c, 0x1d90, 0x5d85, 0x97bf, 0x53df, 0x1, 0x1);
        gbc.writeMem(0xea00, { 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7a6c, gbc.sp());
        EXPECT(0xea01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xea00));
        // A4 0174
        gbc.setState(0xee5f, 0x9506, 0x5470, 0x34ca, 0xaa9a, 0x20b8, 0x0, 0x1);
        gbc.writeMem(0xee5f, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9506, gbc.sp());
        EXPECT(0xee60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xee5f));
        // A4 0175
        gbc.setState(0xd534, 0x4177, 0x1760, 0x7f88, 0x2e08, 0x4d26, 0x1, 0x1);
        gbc.writeMem(0xd534, { 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4177, gbc.sp());
        EXPECT(0xd535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd534));
        // A4 0177
        gbc.setState(0x645d, 0x610c, 0xda70, 0x9b55, 0xa719, 0x311a, 0x0, 0x0);
        gbc.writeMem(0x645d, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x610c, gbc.sp());
        EXPECT(0x645e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0178
        gbc.setState(0x7092, 0x299e, 0x20b0, 0x33a5, 0x9627, 0x69ef, 0x1, 0x1);
        gbc.writeMem(0x7092, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x299e, gbc.sp());
        EXPECT(0x7093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0179
        gbc.setState(0x1320, 0x459d, 0x7290, 0xe95, 0x758, 0xd9c1, 0x0, 0x0);
        gbc.writeMem(0x1320, { 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x459d, gbc.sp());
        EXPECT(0x1321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 017A
        gbc.setState(0x93e0, 0x6aa0, 0x9530, 0xb92, 0x9d2b, 0x7602, 0x0, 0x0);
        gbc.writeMem(0x93e0, { 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6aa0, gbc.sp());
        EXPECT(0x93e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x93e0));
        // A4 017B
        gbc.setState(0x5f22, 0x8c23, 0xcf60, 0xe6b4, 0x837, 0xe828, 0x1, 0x1);
        gbc.writeMem(0x5f22, { 0xa4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8c23, gbc.sp());
        EXPECT(0x5f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 017C
        gbc.setState(0xb4d6, 0x6198, 0xf230, 0xac0c, 0x32a2, 0x67a9, 0x1, 0x1);
        gbc.writeMem(0xb4d6, { 0xa4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6198, gbc.sp());
        EXPECT(0xb4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb4d6));
        // A4 017D
        gbc.setState(0xa258, 0x34f2, 0xc340, 0x9f02, 0x1f8d, 0x8877, 0x1, 0x0);
        gbc.writeMem(0xa258, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x34f2, gbc.sp());
        EXPECT(0xa259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa258));
        // A4 017E
        gbc.setState(0x48df, 0x690c, 0xb3b0, 0xbdfb, 0x1002, 0xa698, 0x0, 0x1);
        gbc.writeMem(0x48df, { 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x690c, gbc.sp());
        EXPECT(0x48e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 017F
        gbc.setState(0xc850, 0x15d8, 0x3c20, 0x8805, 0x9ce0, 0xc4d6, 0x1, 0x0);
        gbc.writeMem(0xc850, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x15d8, gbc.sp());
        EXPECT(0xc851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc850));
        // A4 0180
        gbc.setState(0xe36b, 0x98ea, 0x5e20, 0x2688, 0x3057, 0xad94, 0x1, 0x1);
        gbc.writeMem(0xe36b, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x98ea, gbc.sp());
        EXPECT(0xe36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe36b));
        // A4 0181
        gbc.setState(0xd68c, 0x764, 0xb860, 0x7d69, 0xbd7b, 0xeb1c, 0x0, 0x1);
        gbc.writeMem(0xd68c, { 0xa4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x764, gbc.sp());
        EXPECT(0xd68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd68c));
        // A4 0182
        gbc.setState(0x33c0, 0x76cd, 0xfe30, 0x660c, 0x1e2f, 0xaa1f, 0x1, 0x1);
        gbc.writeMem(0x33c0, { 0xa4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x76cd, gbc.sp());
        EXPECT(0x33c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0183
        gbc.setState(0x4463, 0xe291, 0xb8e0, 0x1218, 0xddd2, 0xa69e, 0x1, 0x1);
        gbc.writeMem(0x4463, { 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe291, gbc.sp());
        EXPECT(0x4464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0184
        gbc.setState(0xaa35, 0xeeb0, 0xe080, 0xc1ba, 0xb0e, 0x44f6, 0x1, 0x1);
        gbc.writeMem(0xaa35, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xeeb0, gbc.sp());
        EXPECT(0xaa36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xaa35));
        // A4 0185
        gbc.setState(0x8942, 0x79bb, 0xcc20, 0xd210, 0x7c1a, 0x5068, 0x1, 0x0);
        gbc.writeMem(0x8942, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x79bb, gbc.sp());
        EXPECT(0x8943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8942));
        // A4 0186
        gbc.setState(0x1b2a, 0x643d, 0xab60, 0xc9e, 0x1bb1, 0x39e2, 0x1, 0x1);
        gbc.writeMem(0x1b2a, { 0xa4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x643d, gbc.sp());
        EXPECT(0x1b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0187
        gbc.setState(0x436b, 0xa513, 0x5510, 0x385a, 0x680a, 0xec60, 0x0, 0x1);
        gbc.writeMem(0x436b, { 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa513, gbc.sp());
        EXPECT(0x436c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0188
        gbc.setState(0x7497, 0x982b, 0x6d30, 0x3c28, 0x1b71, 0xcd83, 0x1, 0x0);
        gbc.writeMem(0x7497, { 0xa4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x982b, gbc.sp());
        EXPECT(0x7498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0189
        gbc.setState(0x66a7, 0x6504, 0x71b0, 0x25ae, 0x1b85, 0xa814, 0x1, 0x0);
        gbc.writeMem(0x66a7, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6504, gbc.sp());
        EXPECT(0x66a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 018A
        gbc.setState(0x880f, 0xa64c, 0x2ed0, 0xfdc0, 0x4c1e, 0xdc3c, 0x1, 0x1);
        gbc.writeMem(0x880f, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa64c, gbc.sp());
        EXPECT(0x8810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x880f));
        // A4 018B
        gbc.setState(0xc311, 0x454a, 0x45c0, 0xde6, 0x27a0, 0x87d1, 0x0, 0x0);
        gbc.writeMem(0xc311, { 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x454a, gbc.sp());
        EXPECT(0xc312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc311));
        // A4 018C
        gbc.setState(0xa9b3, 0xda72, 0x1100, 0x636, 0xe02a, 0x7da0, 0x1, 0x0);
        gbc.writeMem(0xa9b3, { 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xda72, gbc.sp());
        EXPECT(0xa9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa9b3));
        // A4 018D
        gbc.setState(0x27bd, 0xde01, 0xdad0, 0xa5ea, 0x2f91, 0xe281, 0x0, 0x1);
        gbc.writeMem(0x27bd, { 0xa4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xde01, gbc.sp());
        EXPECT(0x27be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 018E
        gbc.setState(0x5126, 0x7eef, 0x2170, 0xcf45, 0xb713, 0xcbca, 0x1, 0x0);
        gbc.writeMem(0x5126, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7eef, gbc.sp());
        EXPECT(0x5127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 018F
        gbc.setState(0xb105, 0x57da, 0x6be0, 0x1552, 0x3380, 0xd616, 0x1, 0x1);
        gbc.writeMem(0xb105, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x57da, gbc.sp());
        EXPECT(0xb106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb105));
        // A4 0190
        gbc.setState(0x3c2b, 0x1e1e, 0xe330, 0x1307, 0xd845, 0x2ba5, 0x0, 0x1);
        gbc.writeMem(0x3c2b, { 0xa4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1e1e, gbc.sp());
        EXPECT(0x3c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0191
        gbc.setState(0x9951, 0x25f2, 0xfc40, 0x41d, 0xb582, 0x86b6, 0x0, 0x1);
        gbc.writeMem(0x9951, { 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x25f2, gbc.sp());
        EXPECT(0x9952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9951));
        // A4 0192
        gbc.setState(0x9685, 0xcb04, 0xead0, 0xa489, 0x395c, 0x2442, 0x1, 0x0);
        gbc.writeMem(0x9685, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcb04, gbc.sp());
        EXPECT(0x9686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9685));
        // A4 0193
        gbc.setState(0xc3c, 0x361c, 0xd2b0, 0x1d03, 0x69b8, 0x34f5, 0x0, 0x1);
        gbc.writeMem(0xc3c, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x361c, gbc.sp());
        EXPECT(0xc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0194
        gbc.setState(0xb542, 0x14dc, 0xc7a0, 0x1e2b, 0xe80e, 0xc6f, 0x1, 0x1);
        gbc.writeMem(0xb542, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x14dc, gbc.sp());
        EXPECT(0xb543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb542));
        // A4 0195
        gbc.setState(0x4023, 0x648, 0xd40, 0x7092, 0x6cfb, 0x6d84, 0x1, 0x1);
        gbc.writeMem(0x4023, { 0xa4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x648, gbc.sp());
        EXPECT(0x4024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0196
        gbc.setState(0xcc5e, 0x4e45, 0x6990, 0x7a84, 0x792, 0x36ba, 0x1, 0x0);
        gbc.writeMem(0xcc5e, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4e45, gbc.sp());
        EXPECT(0xcc5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcc5e));
        // A4 0197
        gbc.setState(0x19a6, 0xf888, 0xea90, 0x1d89, 0x40a3, 0x3db6, 0x0, 0x0);
        gbc.writeMem(0x19a6, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf888, gbc.sp());
        EXPECT(0x19a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0198
        gbc.setState(0x8b96, 0x95d7, 0x95e0, 0x5e2f, 0x2f5, 0x9803, 0x0, 0x0);
        gbc.writeMem(0x8b96, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x95d7, gbc.sp());
        EXPECT(0x8b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8b96));
        // A4 0199
        gbc.setState(0xe3e3, 0x9bcb, 0xfdc0, 0xd0e5, 0xe70, 0x4229, 0x0, 0x1);
        gbc.writeMem(0xe3e3, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9bcb, gbc.sp());
        EXPECT(0xe3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe3e3));
        // A4 019A
        gbc.setState(0xb439, 0xc91f, 0x4d00, 0xce3d, 0x5db8, 0x3b0, 0x1, 0x1);
        gbc.writeMem(0xb439, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc91f, gbc.sp());
        EXPECT(0xb43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb439));
        // A4 019B
        gbc.setState(0x2bb4, 0x4eae, 0x4440, 0xb1bc, 0x7609, 0x5a8a, 0x1, 0x1);
        gbc.writeMem(0x2bb4, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4eae, gbc.sp());
        EXPECT(0x2bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 019C
        gbc.setState(0x5d83, 0xa78c, 0xf480, 0xb40, 0x6808, 0x30df, 0x0, 0x1);
        gbc.writeMem(0x5d83, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa78c, gbc.sp());
        EXPECT(0x5d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 019D
        gbc.setState(0xb57f, 0x3c61, 0x48f0, 0xba75, 0x67be, 0xefc2, 0x1, 0x0);
        gbc.writeMem(0xb57f, { 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3c61, gbc.sp());
        EXPECT(0xb580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb57f));
        // A4 019E
        gbc.setState(0x85ff, 0xc85e, 0x55b0, 0x7765, 0x1901, 0x538f, 0x1, 0x1);
        gbc.writeMem(0x85ff, { 0xa4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc85e, gbc.sp());
        EXPECT(0x8600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x85ff));
        // A4 019F
        gbc.setState(0xbae2, 0x670b, 0x5f90, 0x8019, 0x862, 0x4ce2, 0x1, 0x1);
        gbc.writeMem(0xbae2, { 0xa4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x670b, gbc.sp());
        EXPECT(0xbae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbae2));
        // A4 01A0
        gbc.setState(0xc9fd, 0x7836, 0xf920, 0xb301, 0xc209, 0x6976, 0x1, 0x1);
        gbc.writeMem(0xc9fd, { 0xa4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7836, gbc.sp());
        EXPECT(0xc9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc9fd));
        // A4 01A1
        gbc.setState(0x9f35, 0xad53, 0x26c0, 0xd416, 0xccae, 0x85cb, 0x1, 0x0);
        gbc.writeMem(0x9f35, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xad53, gbc.sp());
        EXPECT(0x9f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9f35));
        // A4 01A2
        gbc.setState(0xb938, 0x8676, 0xf040, 0x52e2, 0xb423, 0xf76c, 0x0, 0x0);
        gbc.writeMem(0xb938, { 0xa4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8676, gbc.sp());
        EXPECT(0xb939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb938));
        // A4 01A3
        gbc.setState(0x7fb5, 0x4b09, 0x30b0, 0x9443, 0x9af6, 0x4141, 0x1, 0x1);
        gbc.writeMem(0x7fb5, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4b09, gbc.sp());
        EXPECT(0x7fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01A4
        gbc.setState(0x596b, 0xf524, 0x64b0, 0xeb97, 0xbfd3, 0x6074, 0x0, 0x1);
        gbc.writeMem(0x596b, { 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf524, gbc.sp());
        EXPECT(0x596c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01A5
        gbc.setState(0x4d82, 0x2e89, 0x9450, 0xf6ea, 0xe83a, 0xf37e, 0x0, 0x1);
        gbc.writeMem(0x4d82, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2e89, gbc.sp());
        EXPECT(0x4d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01A7
        gbc.setState(0xeae6, 0x2b55, 0x76e0, 0x648e, 0xdce8, 0x3b48, 0x1, 0x1);
        gbc.writeMem(0xeae6, { 0xa4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2b55, gbc.sp());
        EXPECT(0xeae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xeae6));
        // A4 01A8
        gbc.setState(0x4787, 0x7287, 0xf970, 0x35c3, 0xf6ab, 0xf8e2, 0x1, 0x1);
        gbc.writeMem(0x4787, { 0xa4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7287, gbc.sp());
        EXPECT(0x4788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01A9
        gbc.setState(0x3131, 0x17df, 0xa150, 0xf5cd, 0xea16, 0x6254, 0x1, 0x1);
        gbc.writeMem(0x3131, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0x3132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01AA
        gbc.setState(0x3dd4, 0xe8a7, 0xfee0, 0x1e8e, 0x5510, 0x1a78, 0x0, 0x0);
        gbc.writeMem(0x3dd4, { 0xa4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe8a7, gbc.sp());
        EXPECT(0x3dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01AB
        gbc.setState(0xa3e1, 0x8e11, 0xb7f0, 0xd156, 0xd599, 0xb8a8, 0x1, 0x0);
        gbc.writeMem(0xa3e1, { 0xa4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8e11, gbc.sp());
        EXPECT(0xa3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa3e1));
        // A4 01AC
        gbc.setState(0xe8a8, 0x23ae, 0xf380, 0xa8b3, 0x2c51, 0x5fd4, 0x0, 0x0);
        gbc.writeMem(0xe8a8, { 0xa4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x23ae, gbc.sp());
        EXPECT(0xe8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe8a8));
        // A4 01AD
        gbc.setState(0xf96, 0xa929, 0xf260, 0x1197, 0x9a4, 0xba3c, 0x0, 0x0);
        gbc.writeMem(0xf96, { 0xa4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa929, gbc.sp());
        EXPECT(0xf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01AE
        gbc.setState(0xc17b, 0xb6d3, 0x9fa0, 0x42af, 0x9bd0, 0xe0dd, 0x0, 0x1);
        gbc.writeMem(0xc17b, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb6d3, gbc.sp());
        EXPECT(0xc17c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc17b));
        // A4 01AF
        gbc.setState(0x6769, 0xfdc8, 0xd700, 0xb41, 0x9ce2, 0x25df, 0x0, 0x0);
        gbc.writeMem(0x6769, { 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfdc8, gbc.sp());
        EXPECT(0x676a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01B0
        gbc.setState(0xac16, 0x5d38, 0x8ff0, 0xcb19, 0xf391, 0x94e2, 0x0, 0x1);
        gbc.writeMem(0xac16, { 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5d38, gbc.sp());
        EXPECT(0xac17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xac16));
        // A4 01B1
        gbc.setState(0x2df2, 0x8a85, 0xfdf0, 0x95c2, 0x2cb2, 0xe617, 0x1, 0x1);
        gbc.writeMem(0x2df2, { 0xa4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8a85, gbc.sp());
        EXPECT(0x2df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01B2
        gbc.setState(0x647, 0x2a5c, 0x7b00, 0xbb3a, 0xaebd, 0xfae8, 0x1, 0x0);
        gbc.writeMem(0x647, { 0xa4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2a5c, gbc.sp());
        EXPECT(0x648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01B3
        gbc.setState(0x522a, 0x7432, 0x9160, 0x47cf, 0x53ae, 0x1b8e, 0x1, 0x1);
        gbc.writeMem(0x522a, { 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7432, gbc.sp());
        EXPECT(0x522b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01B4
        gbc.setState(0x1455, 0x4e77, 0x6c40, 0xc0a9, 0x93ed, 0x3c72, 0x0, 0x1);
        gbc.writeMem(0x1455, { 0xa4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4e77, gbc.sp());
        EXPECT(0x1456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01B5
        gbc.setState(0xb24c, 0xbbee, 0xc600, 0x8c22, 0x245d, 0x31ed, 0x0, 0x0);
        gbc.writeMem(0xb24c, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbbee, gbc.sp());
        EXPECT(0xb24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb24c));
        // A4 01B6
        gbc.setState(0xe9d8, 0x500b, 0x3210, 0x7f44, 0xe09e, 0x24fc, 0x0, 0x0);
        gbc.writeMem(0xe9d8, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x500b, gbc.sp());
        EXPECT(0xe9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe9d8));
        // A4 01B7
        gbc.setState(0xb21f, 0xf388, 0xc1e0, 0x753c, 0x6467, 0x1e42, 0x0, 0x1);
        gbc.writeMem(0xb21f, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf388, gbc.sp());
        EXPECT(0xb220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb21f));
        // A4 01B8
        gbc.setState(0x5413, 0x425b, 0x63a0, 0x29d3, 0xc624, 0x8141, 0x0, 0x1);
        gbc.writeMem(0x5413, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x425b, gbc.sp());
        EXPECT(0x5414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01B9
        gbc.setState(0x9b20, 0xe2c4, 0xda10, 0x8811, 0xab55, 0x4078, 0x0, 0x0);
        gbc.writeMem(0x9b20, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe2c4, gbc.sp());
        EXPECT(0x9b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9b20));
        // A4 01BA
        gbc.setState(0x84c5, 0x8187, 0x2fc0, 0xc444, 0xa55c, 0xd7c6, 0x0, 0x1);
        gbc.writeMem(0x84c5, { 0xa4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8187, gbc.sp());
        EXPECT(0x84c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x84c5));
        // A4 01BB
        gbc.setState(0xd966, 0x2927, 0x9c90, 0x7281, 0x2a30, 0x4fde, 0x0, 0x1);
        gbc.writeMem(0xd966, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2927, gbc.sp());
        EXPECT(0xd967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd966));
        // A4 01BC
        gbc.setState(0xa512, 0x91bc, 0xc650, 0x790c, 0x1bb6, 0x180c, 0x0, 0x0);
        gbc.writeMem(0xa512, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x91bc, gbc.sp());
        EXPECT(0xa513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa512));
        // A4 01BE
        gbc.setState(0xe498, 0xc1fc, 0xf2a0, 0x7c78, 0x2d5c, 0xfc33, 0x1, 0x0);
        gbc.writeMem(0xe498, { 0xa4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc1fc, gbc.sp());
        EXPECT(0xe499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe498));
        // A4 01BF
        gbc.setState(0x4f06, 0x6de4, 0xdd0, 0xdbd2, 0xdcbe, 0x3db0, 0x0, 0x1);
        gbc.writeMem(0x4f06, { 0xa4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6de4, gbc.sp());
        EXPECT(0x4f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01C0
        gbc.setState(0x25d9, 0x6dd9, 0x3bb0, 0x786f, 0xecdc, 0x525c, 0x0, 0x1);
        gbc.writeMem(0x25d9, { 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6dd9, gbc.sp());
        EXPECT(0x25da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01C1
        gbc.setState(0x8d9d, 0xb946, 0x91c0, 0x479e, 0x8ad, 0xbce6, 0x0, 0x0);
        gbc.writeMem(0x8d9d, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb946, gbc.sp());
        EXPECT(0x8d9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8d9d));
        // A4 01C2
        gbc.setState(0x41d, 0xea62, 0x56f0, 0x405d, 0x850e, 0xbfd3, 0x0, 0x1);
        gbc.writeMem(0x41d, { 0xa4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xea62, gbc.sp());
        EXPECT(0x41e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01C3
        gbc.setState(0x910b, 0x1660, 0x5ce0, 0x631e, 0x432f, 0x4eeb, 0x1, 0x1);
        gbc.writeMem(0x910b, { 0xa4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1660, gbc.sp());
        EXPECT(0x910c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x910b));
        // A4 01C4
        gbc.setState(0x76c6, 0x82d0, 0xdee0, 0x9a4d, 0xdfae, 0xb006, 0x0, 0x1);
        gbc.writeMem(0x76c6, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x82d0, gbc.sp());
        EXPECT(0x76c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01C5
        gbc.setState(0x182f, 0x22ad, 0xe360, 0x7fe7, 0xa852, 0xfb7b, 0x0, 0x1);
        gbc.writeMem(0x182f, { 0xa4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x22ad, gbc.sp());
        EXPECT(0x1830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01C6
        gbc.setState(0x2d55, 0xd578, 0x2fa0, 0x6ef9, 0x63e, 0x7c52, 0x0, 0x1);
        gbc.writeMem(0x2d55, { 0xa4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd578, gbc.sp());
        EXPECT(0x2d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01C7
        gbc.setState(0x16e0, 0xeac9, 0xdc90, 0x4fd7, 0xbf94, 0x8e6b, 0x1, 0x1);
        gbc.writeMem(0x16e0, { 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xeac9, gbc.sp());
        EXPECT(0x16e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01C8
        gbc.setState(0x19fc, 0xaf28, 0x4ea0, 0x1525, 0x8aad, 0x238f, 0x1, 0x0);
        gbc.writeMem(0x19fc, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaf28, gbc.sp());
        EXPECT(0x19fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01C9
        gbc.setState(0x89d5, 0xc56f, 0x1350, 0x3810, 0x5a0e, 0xbd88, 0x0, 0x1);
        gbc.writeMem(0x89d5, { 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc56f, gbc.sp());
        EXPECT(0x89d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x89d5));
        // A4 01CA
        gbc.setState(0xd092, 0xe802, 0x6e30, 0x159c, 0x4e63, 0x54cb, 0x0, 0x0);
        gbc.writeMem(0xd092, { 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe802, gbc.sp());
        EXPECT(0xd093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd092));
        // A4 01CB
        gbc.setState(0xcccb, 0x2078, 0xd920, 0xf2cc, 0x96d6, 0x5b1f, 0x1, 0x0);
        gbc.writeMem(0xcccb, { 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2078, gbc.sp());
        EXPECT(0xcccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcccb));
        // A4 01CC
        gbc.setState(0x44d7, 0xf066, 0xae00, 0x5672, 0xe1d8, 0xbd50, 0x0, 0x1);
        gbc.writeMem(0x44d7, { 0xa4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf066, gbc.sp());
        EXPECT(0x44d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01CD
        gbc.setState(0x2184, 0x93d1, 0x3160, 0xf67d, 0xa1b3, 0x74a4, 0x1, 0x1);
        gbc.writeMem(0x2184, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x93d1, gbc.sp());
        EXPECT(0x2185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01CE
        gbc.setState(0x596d, 0x8c2b, 0x97d0, 0x4bce, 0xe0cf, 0x342f, 0x0, 0x1);
        gbc.writeMem(0x596d, { 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8c2b, gbc.sp());
        EXPECT(0x596e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01CF
        gbc.setState(0xe59e, 0xe433, 0x8ac0, 0x3c6f, 0x6941, 0x8e83, 0x0, 0x0);
        gbc.writeMem(0xe59e, { 0xa4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe433, gbc.sp());
        EXPECT(0xe59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe59e));
        // A4 01D0
        gbc.setState(0x3d0f, 0xad4d, 0xa50, 0xbf0b, 0x1d97, 0x5b66, 0x1, 0x1);
        gbc.writeMem(0x3d0f, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xad4d, gbc.sp());
        EXPECT(0x3d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01D1
        gbc.setState(0xc9c, 0x4c9, 0xfab0, 0xc9ac, 0x8a7c, 0x72b3, 0x1, 0x1);
        gbc.writeMem(0xc9c, { 0xa4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4c9, gbc.sp());
        EXPECT(0xc9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01D2
        gbc.setState(0xe51b, 0x9801, 0xb9f0, 0xdf9a, 0xab79, 0xee4e, 0x1, 0x1);
        gbc.writeMem(0xe51b, { 0xa4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9801, gbc.sp());
        EXPECT(0xe51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe51b));
        // A4 01D3
        gbc.setState(0x5242, 0x894c, 0xfdd0, 0xb4d5, 0x735f, 0x5fbf, 0x1, 0x1);
        gbc.writeMem(0x5242, { 0xa4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x894c, gbc.sp());
        EXPECT(0x5243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01D4
        gbc.setState(0x9715, 0x3c32, 0xdca0, 0x557e, 0x3f76, 0xcd34, 0x0, 0x0);
        gbc.writeMem(0x9715, { 0xa4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3c32, gbc.sp());
        EXPECT(0x9716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9715));
        // A4 01D5
        gbc.setState(0x338d, 0xe7cd, 0xa2f0, 0xdac5, 0x2f02, 0x4193, 0x1, 0x0);
        gbc.writeMem(0x338d, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe7cd, gbc.sp());
        EXPECT(0x338e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01D6
        gbc.setState(0x4eb8, 0x5db2, 0xf760, 0xd00d, 0x1f9e, 0x1d14, 0x0, 0x0);
        gbc.writeMem(0x4eb8, { 0xa4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5db2, gbc.sp());
        EXPECT(0x4eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01D7
        gbc.setState(0x2cef, 0xd896, 0x42c0, 0xbf3c, 0xac3b, 0xd951, 0x1, 0x0);
        gbc.writeMem(0x2cef, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd896, gbc.sp());
        EXPECT(0x2cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01D8
        gbc.setState(0x843c, 0x673e, 0xd440, 0x792, 0xce15, 0x2f4a, 0x0, 0x0);
        gbc.writeMem(0x843c, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x673e, gbc.sp());
        EXPECT(0x843d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x843c));
        // A4 01D9
        gbc.setState(0x8d1b, 0xd415, 0x41f0, 0xc1c, 0x9c27, 0x5d4e, 0x0, 0x0);
        gbc.writeMem(0x8d1b, { 0xa4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd415, gbc.sp());
        EXPECT(0x8d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8d1b));
        // A4 01DA
        gbc.setState(0x1f1b, 0xc57c, 0xcc50, 0x4227, 0xae21, 0xf47b, 0x1, 0x1);
        gbc.writeMem(0x1f1b, { 0xa4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc57c, gbc.sp());
        EXPECT(0x1f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01DB
        gbc.setState(0xcabe, 0x1941, 0x33f0, 0x2bb0, 0x6ba2, 0x6c5b, 0x0, 0x1);
        gbc.writeMem(0xcabe, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1941, gbc.sp());
        EXPECT(0xcabf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcabe));
        // A4 01DC
        gbc.setState(0x25b, 0xc2b, 0xcad0, 0xeeb2, 0x2a60, 0xae3, 0x1, 0x0);
        gbc.writeMem(0x25b, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc2b, gbc.sp());
        EXPECT(0x25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01DD
        gbc.setState(0x9a71, 0x36c5, 0xf1e0, 0xdc9d, 0x4e8a, 0xcbee, 0x1, 0x0);
        gbc.writeMem(0x9a71, { 0xa4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x36c5, gbc.sp());
        EXPECT(0x9a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9a71));
        // A4 01DE
        gbc.setState(0x55cb, 0x3efe, 0xded0, 0xe887, 0xa9ec, 0xcca0, 0x0, 0x1);
        gbc.writeMem(0x55cb, { 0xa4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3efe, gbc.sp());
        EXPECT(0x55cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01DF
        gbc.setState(0x3e7f, 0x7507, 0x1b70, 0x56ca, 0xd341, 0xbe71, 0x0, 0x1);
        gbc.writeMem(0x3e7f, { 0xa4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7507, gbc.sp());
        EXPECT(0x3e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01E0
        gbc.setState(0x58c0, 0x5b27, 0x9ce0, 0xfe4, 0x59b7, 0x9527, 0x0, 0x0);
        gbc.writeMem(0x58c0, { 0xa4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5b27, gbc.sp());
        EXPECT(0x58c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01E1
        gbc.setState(0x8c55, 0xeaa8, 0xfca0, 0x8d96, 0x80e0, 0x4d14, 0x1, 0x1);
        gbc.writeMem(0x8c55, { 0xa4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xeaa8, gbc.sp());
        EXPECT(0x8c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8c55));
        // A4 01E2
        gbc.setState(0xa289, 0xfc49, 0xed80, 0xf4e8, 0xb45f, 0xf3ec, 0x0, 0x1);
        gbc.writeMem(0xa289, { 0xa4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfc49, gbc.sp());
        EXPECT(0xa28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa289));
        // A4 01E3
        gbc.setState(0x2721, 0x9d30, 0x18d0, 0xf131, 0x935, 0x9ad0, 0x1, 0x1);
        gbc.writeMem(0x2721, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9d30, gbc.sp());
        EXPECT(0x2722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01E4
        gbc.setState(0xc830, 0xeb88, 0x2880, 0x1cea, 0x167a, 0x485b, 0x1, 0x0);
        gbc.writeMem(0xc830, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xeb88, gbc.sp());
        EXPECT(0xc831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc830));
        // A4 01E5
        gbc.setState(0x66f8, 0x2665, 0xa3f0, 0x4b81, 0xa424, 0x142b, 0x1, 0x1);
        gbc.writeMem(0x66f8, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2665, gbc.sp());
        EXPECT(0x66f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01E6
        gbc.setState(0xa571, 0x8526, 0x83c0, 0x1226, 0x2393, 0x43ad, 0x1, 0x1);
        gbc.writeMem(0xa571, { 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8526, gbc.sp());
        EXPECT(0xa572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa571));
        // A4 01E7
        gbc.setState(0x22a6, 0x21af, 0xa6d0, 0x7f14, 0xf18f, 0x35fb, 0x0, 0x0);
        gbc.writeMem(0x22a6, { 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x21af, gbc.sp());
        EXPECT(0x22a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01E8
        gbc.setState(0x95b5, 0x4304, 0x41c0, 0x3c16, 0xcbe0, 0xbc03, 0x0, 0x1);
        gbc.writeMem(0x95b5, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4304, gbc.sp());
        EXPECT(0x95b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x95b5));
        // A4 01E9
        gbc.setState(0xd3bc, 0xe3df, 0x4a60, 0x19bd, 0x5c5c, 0xe4e, 0x0, 0x1);
        gbc.writeMem(0xd3bc, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe3df, gbc.sp());
        EXPECT(0xd3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd3bc));
        // A4 01EA
        gbc.setState(0xbee6, 0x55bf, 0x3b70, 0xf03a, 0x1ecf, 0xa940, 0x0, 0x0);
        gbc.writeMem(0xbee6, { 0xa4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x55bf, gbc.sp());
        EXPECT(0xbee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbee6));
        // A4 01EB
        gbc.setState(0xb67a, 0xe59f, 0x2c50, 0x23cb, 0x6cb0, 0xd7cb, 0x1, 0x1);
        gbc.writeMem(0xb67a, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe59f, gbc.sp());
        EXPECT(0xb67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb67a));
        // A4 01EC
        gbc.setState(0xd679, 0x7445, 0x1790, 0x4a5d, 0x1cdc, 0x17b, 0x0, 0x0);
        gbc.writeMem(0xd679, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7445, gbc.sp());
        EXPECT(0xd67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd679));
        // A4 01ED
        gbc.setState(0xccee, 0x7891, 0x6b40, 0xc335, 0x24d5, 0xff45, 0x1, 0x0);
        gbc.writeMem(0xccee, { 0xa4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7891, gbc.sp());
        EXPECT(0xccef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xccee));
        // A4 01EE
        gbc.setState(0xed6a, 0xfe60, 0x5f80, 0x4b19, 0x6119, 0xf691, 0x1, 0x1);
        gbc.writeMem(0xed6a, { 0xa4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfe60, gbc.sp());
        EXPECT(0xed6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xed6a));
        // A4 01F0
        gbc.setState(0x5be6, 0x4632, 0x5600, 0x75dd, 0x79b5, 0x9632, 0x0, 0x1);
        gbc.writeMem(0x5be6, { 0xa4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4632, gbc.sp());
        EXPECT(0x5be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01F1
        gbc.setState(0xb096, 0x22b7, 0x24b0, 0x575e, 0x2748, 0xcb95, 0x1, 0x1);
        gbc.writeMem(0xb096, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x22b7, gbc.sp());
        EXPECT(0xb097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb096));
        // A4 01F2
        gbc.setState(0x999e, 0x4553, 0x9890, 0x34a5, 0xc450, 0x83cd, 0x0, 0x1);
        gbc.writeMem(0x999e, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4553, gbc.sp());
        EXPECT(0x999f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x999e));
        // A4 01F3
        gbc.setState(0x506a, 0xc1a3, 0xc1b0, 0x6855, 0x35f8, 0x95cb, 0x1, 0x1);
        gbc.writeMem(0x506a, { 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc1a3, gbc.sp());
        EXPECT(0x506b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01F4
        gbc.setState(0x61db, 0xaa59, 0x4340, 0x10b8, 0xedad, 0x2a2f, 0x0, 0x0);
        gbc.writeMem(0x61db, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xaa59, gbc.sp());
        EXPECT(0x61dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01F5
        gbc.setState(0x9313, 0x7ac1, 0xfe70, 0x9a02, 0xaf19, 0x36d, 0x1, 0x1);
        gbc.writeMem(0x9313, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7ac1, gbc.sp());
        EXPECT(0x9314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9313));
        // A4 01F6
        gbc.setState(0x7ea6, 0x8d20, 0x1870, 0x58de, 0x1500, 0xe8ea, 0x1, 0x0);
        gbc.writeMem(0x7ea6, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8d20, gbc.sp());
        EXPECT(0x7ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01F7
        gbc.setState(0x86c2, 0xc10f, 0xac50, 0x464e, 0x8e28, 0x649e, 0x1, 0x1);
        gbc.writeMem(0x86c2, { 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc10f, gbc.sp());
        EXPECT(0x86c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x86c2));
        // A4 01F8
        gbc.setState(0x76ad, 0x3f4d, 0x14d0, 0x882a, 0xc544, 0x5e3c, 0x0, 0x1);
        gbc.writeMem(0x76ad, { 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3f4d, gbc.sp());
        EXPECT(0x76ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01F9
        gbc.setState(0xb768, 0x25da, 0xb40, 0x269c, 0x6c78, 0xb80e, 0x0, 0x1);
        gbc.writeMem(0xb768, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x25da, gbc.sp());
        EXPECT(0xb769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb768));
        // A4 01FA
        gbc.setState(0xac28, 0xf46c, 0x5a00, 0x581e, 0xf927, 0xb4de, 0x1, 0x0);
        gbc.writeMem(0xac28, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf46c, gbc.sp());
        EXPECT(0xac29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xac28));
        // A4 01FB
        gbc.setState(0x9c6e, 0x4f7d, 0xfca0, 0x726f, 0x75db, 0x170, 0x0, 0x0);
        gbc.writeMem(0x9c6e, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4f7d, gbc.sp());
        EXPECT(0x9c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9c6e));
        // A4 01FC
        gbc.setState(0x76fe, 0xb7fc, 0xf80, 0x369b, 0xea5f, 0x9243, 0x1, 0x1);
        gbc.writeMem(0x76fe, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb7fc, gbc.sp());
        EXPECT(0x76ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01FD
        gbc.setState(0xedd4, 0xd3c7, 0xacb0, 0xd326, 0xd6e0, 0xc923, 0x0, 0x1);
        gbc.writeMem(0xedd4, { 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd3c7, gbc.sp());
        EXPECT(0xedd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xedd4));
        // A4 01FE
        gbc.setState(0x45ac, 0xdb50, 0x6190, 0x26c3, 0x4d40, 0xd7ab, 0x1, 0x0);
        gbc.writeMem(0x45ac, { 0xa4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdb50, gbc.sp());
        EXPECT(0x45ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 01FF
        gbc.setState(0x7360, 0xb21a, 0x64d0, 0x6a00, 0xf7e4, 0xab19, 0x1, 0x0);
        gbc.writeMem(0x7360, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb21a, gbc.sp());
        EXPECT(0x7361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0200
        gbc.setState(0xaa37, 0x975f, 0xab80, 0xdf8f, 0x4931, 0x6059, 0x0, 0x1);
        gbc.writeMem(0xaa37, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x975f, gbc.sp());
        EXPECT(0xaa38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xaa37));
        // A4 0201
        gbc.setState(0x4e71, 0xba36, 0xf880, 0x8ff3, 0x47f, 0x35dc, 0x1, 0x0);
        gbc.writeMem(0x4e71, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xba36, gbc.sp());
        EXPECT(0x4e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0202
        gbc.setState(0x8255, 0x90b5, 0xdee0, 0x3c0, 0xd27e, 0xdb11, 0x1, 0x0);
        gbc.writeMem(0x8255, { 0xa4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x90b5, gbc.sp());
        EXPECT(0x8256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8255));
        // A4 0203
        gbc.setState(0x6254, 0x99ce, 0x2200, 0xa925, 0x2ed7, 0xf1b8, 0x1, 0x0);
        gbc.writeMem(0x6254, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x99ce, gbc.sp());
        EXPECT(0x6255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0204
        gbc.setState(0x4892, 0x6a80, 0x1d50, 0xf084, 0xdcee, 0x5763, 0x0, 0x1);
        gbc.writeMem(0x4892, { 0xa4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6a80, gbc.sp());
        EXPECT(0x4893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0205
        gbc.setState(0xd765, 0xe94b, 0x2ce0, 0x31c5, 0x97fb, 0x1896, 0x0, 0x1);
        gbc.writeMem(0xd765, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe94b, gbc.sp());
        EXPECT(0xd766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd765));
        // A4 0206
        gbc.setState(0x7146, 0xd7cd, 0x5890, 0xe44d, 0x5575, 0xc6c3, 0x0, 0x0);
        gbc.writeMem(0x7146, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd7cd, gbc.sp());
        EXPECT(0x7147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0207
        gbc.setState(0xc82f, 0xb627, 0xd930, 0xcf9b, 0xd872, 0xfa43, 0x1, 0x0);
        gbc.writeMem(0xc82f, { 0xa4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb627, gbc.sp());
        EXPECT(0xc830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc82f));
        // A4 0208
        gbc.setState(0x6077, 0x1bb6, 0x5fd0, 0x5bef, 0x835a, 0x3d17, 0x1, 0x0);
        gbc.writeMem(0x6077, { 0xa4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1bb6, gbc.sp());
        EXPECT(0x6078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0209
        gbc.setState(0x21df, 0x52ad, 0xb6a0, 0x6bec, 0x3c12, 0x9dd, 0x1, 0x1);
        gbc.writeMem(0x21df, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x52ad, gbc.sp());
        EXPECT(0x21e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 020A
        gbc.setState(0x6072, 0xd7be, 0x4e80, 0x455b, 0x8d4b, 0x2146, 0x0, 0x1);
        gbc.writeMem(0x6072, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd7be, gbc.sp());
        EXPECT(0x6073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 020B
        gbc.setState(0xd86c, 0x147c, 0xb880, 0x3496, 0xbf2f, 0x19cc, 0x0, 0x0);
        gbc.writeMem(0xd86c, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x147c, gbc.sp());
        EXPECT(0xd86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd86c));
        // A4 020C
        gbc.setState(0xbfb2, 0xa50c, 0xfd10, 0xd3c, 0xd6a6, 0x5b83, 0x0, 0x1);
        gbc.writeMem(0xbfb2, { 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa50c, gbc.sp());
        EXPECT(0xbfb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbfb2));
        // A4 020D
        gbc.setState(0xb040, 0x5e17, 0x4ff0, 0x9925, 0xe9d, 0xd44, 0x0, 0x0);
        gbc.writeMem(0xb040, { 0xa4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5e17, gbc.sp());
        EXPECT(0xb041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb040));
        // A4 020E
        gbc.setState(0xc929, 0x9e3b, 0x31a0, 0x2276, 0xe9c0, 0xf56f, 0x1, 0x0);
        gbc.writeMem(0xc929, { 0xa4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9e3b, gbc.sp());
        EXPECT(0xc92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc929));
        // A4 020F
        gbc.setState(0x2f23, 0xf9b4, 0x47f0, 0x946d, 0xe8c7, 0xa88b, 0x1, 0x1);
        gbc.writeMem(0x2f23, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf9b4, gbc.sp());
        EXPECT(0x2f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0210
        gbc.setState(0x4eb8, 0x573f, 0x3c90, 0xb9f5, 0x6366, 0xaaec, 0x0, 0x1);
        gbc.writeMem(0x4eb8, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x573f, gbc.sp());
        EXPECT(0x4eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0211
        gbc.setState(0x255b, 0x6269, 0x7220, 0xd66d, 0x6c92, 0x2c65, 0x0, 0x1);
        gbc.writeMem(0x255b, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6269, gbc.sp());
        EXPECT(0x255c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0212
        gbc.setState(0xb241, 0x8c99, 0xc250, 0x4695, 0xfd65, 0x9814, 0x1, 0x0);
        gbc.writeMem(0xb241, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8c99, gbc.sp());
        EXPECT(0xb242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb241));
        // A4 0213
        gbc.setState(0x603a, 0xbab4, 0x7650, 0x25f, 0xb41b, 0xe89, 0x0, 0x1);
        gbc.writeMem(0x603a, { 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbab4, gbc.sp());
        EXPECT(0x603b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0214
        gbc.setState(0x447d, 0xf51c, 0xf240, 0xcd3a, 0x29cb, 0x47cf, 0x0, 0x1);
        gbc.writeMem(0x447d, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf51c, gbc.sp());
        EXPECT(0x447e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0215
        gbc.setState(0x3779, 0x48fb, 0x7ad0, 0x8f92, 0x7f55, 0x2145, 0x0, 0x0);
        gbc.writeMem(0x3779, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x48fb, gbc.sp());
        EXPECT(0x377a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0216
        gbc.setState(0x7e03, 0x700b, 0xaea0, 0x6cbb, 0xd30b, 0x762d, 0x1, 0x0);
        gbc.writeMem(0x7e03, { 0xa4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x700b, gbc.sp());
        EXPECT(0x7e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0217
        gbc.setState(0xe3d5, 0x68b, 0x570, 0x6806, 0x5c0e, 0x3c67, 0x0, 0x0);
        gbc.writeMem(0xe3d5, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x68b, gbc.sp());
        EXPECT(0xe3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe3d5));
        // A4 0218
        gbc.setState(0x342f, 0xecd1, 0x1c10, 0x9702, 0x6183, 0xdc98, 0x0, 0x1);
        gbc.writeMem(0x342f, { 0xa4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xecd1, gbc.sp());
        EXPECT(0x3430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0219
        gbc.setState(0xef4f, 0x4ee8, 0x1010, 0x608a, 0x3a04, 0xe2a6, 0x0, 0x1);
        gbc.writeMem(0xef4f, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4ee8, gbc.sp());
        EXPECT(0xef50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xef4f));
        // A4 021A
        gbc.setState(0x80e4, 0xbd0c, 0x950, 0xda84, 0x352, 0xe27a, 0x1, 0x1);
        gbc.writeMem(0x80e4, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbd0c, gbc.sp());
        EXPECT(0x80e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x80e4));
        // A4 021C
        gbc.setState(0xb68, 0xc36e, 0x7dc0, 0x4055, 0xd47c, 0x50e8, 0x1, 0x1);
        gbc.writeMem(0xb68, { 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc36e, gbc.sp());
        EXPECT(0xb69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 021D
        gbc.setState(0x2a57, 0x5b1b, 0xf040, 0xe9da, 0xd4fc, 0xbbc4, 0x1, 0x0);
        gbc.writeMem(0x2a57, { 0xa4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5b1b, gbc.sp());
        EXPECT(0x2a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 021E
        gbc.setState(0xde53, 0x36f4, 0x6aa0, 0x6606, 0x89d8, 0x2a60, 0x1, 0x0);
        gbc.writeMem(0xde53, { 0xa4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x36f4, gbc.sp());
        EXPECT(0xde54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xde53));
        // A4 021F
        gbc.setState(0xdfbb, 0xa548, 0xd8a0, 0xdfde, 0xf2a6, 0x5469, 0x0, 0x1);
        gbc.writeMem(0xdfbb, { 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa548, gbc.sp());
        EXPECT(0xdfbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdfbb));
        // A4 0220
        gbc.setState(0x556a, 0x8344, 0x8180, 0xa891, 0x5e75, 0xdfed, 0x0, 0x0);
        gbc.writeMem(0x556a, { 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8344, gbc.sp());
        EXPECT(0x556b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0221
        gbc.setState(0x62d2, 0xc29c, 0x34f0, 0x2e0a, 0xe536, 0x3d14, 0x0, 0x0);
        gbc.writeMem(0x62d2, { 0xa4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc29c, gbc.sp());
        EXPECT(0x62d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0222
        gbc.setState(0xcdb7, 0xeda4, 0x9ec0, 0x26ff, 0x86c2, 0x679c, 0x1, 0x1);
        gbc.writeMem(0xcdb7, { 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xeda4, gbc.sp());
        EXPECT(0xcdb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcdb7));
        // A4 0223
        gbc.setState(0xd1d6, 0xba32, 0x9820, 0x8eb7, 0x6389, 0xdb10, 0x1, 0x1);
        gbc.writeMem(0xd1d6, { 0xa4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xba32, gbc.sp());
        EXPECT(0xd1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd1d6));
        // A4 0224
        gbc.setState(0xbe3f, 0x1692, 0x9400, 0xd0f8, 0x93d2, 0xc946, 0x1, 0x0);
        gbc.writeMem(0xbe3f, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1692, gbc.sp());
        EXPECT(0xbe40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbe3f));
        // A4 0225
        gbc.setState(0x4071, 0x428f, 0xd630, 0xdfad, 0xd85d, 0x2efa, 0x1, 0x0);
        gbc.writeMem(0x4071, { 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x428f, gbc.sp());
        EXPECT(0x4072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0226
        gbc.setState(0x3da6, 0x24a, 0x3850, 0x34d5, 0xef0, 0xc08e, 0x1, 0x0);
        gbc.writeMem(0x3da6, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x24a, gbc.sp());
        EXPECT(0x3da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0227
        gbc.setState(0x19e0, 0xcdb2, 0x9b00, 0x81b1, 0x53a8, 0x591d, 0x1, 0x0);
        gbc.writeMem(0x19e0, { 0xa4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcdb2, gbc.sp());
        EXPECT(0x19e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0228
        gbc.setState(0xc8ac, 0x9a89, 0x8c90, 0xc905, 0x37a9, 0x258d, 0x1, 0x0);
        gbc.writeMem(0xc8ac, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9a89, gbc.sp());
        EXPECT(0xc8ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc8ac));
        // A4 0229
        gbc.setState(0x5279, 0x4bef, 0x13d0, 0xfaac, 0x7bbe, 0xfc9b, 0x1, 0x0);
        gbc.writeMem(0x5279, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4bef, gbc.sp());
        EXPECT(0x527a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 022A
        gbc.setState(0x3d74, 0xcc5a, 0xd630, 0x194d, 0x9fc, 0x8055, 0x0, 0x1);
        gbc.writeMem(0x3d74, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcc5a, gbc.sp());
        EXPECT(0x3d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 022B
        gbc.setState(0x6620, 0xfa9e, 0x9da0, 0x78a1, 0x6746, 0x1c3a, 0x0, 0x0);
        gbc.writeMem(0x6620, { 0xa4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfa9e, gbc.sp());
        EXPECT(0x6621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 022C
        gbc.setState(0x650e, 0x6df3, 0x5fa0, 0xc284, 0xe4ef, 0xaec8, 0x1, 0x0);
        gbc.writeMem(0x650e, { 0xa4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6df3, gbc.sp());
        EXPECT(0x650f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 022D
        gbc.setState(0xad7c, 0x7a6b, 0xcb50, 0x7db5, 0x74a1, 0x69b, 0x0, 0x0);
        gbc.writeMem(0xad7c, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7a6b, gbc.sp());
        EXPECT(0xad7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xad7c));
        // A4 022E
        gbc.setState(0x951a, 0xc361, 0x1230, 0xace9, 0xc6a2, 0x50d2, 0x1, 0x1);
        gbc.writeMem(0x951a, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc361, gbc.sp());
        EXPECT(0x951b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x951a));
        // A4 022F
        gbc.setState(0xe326, 0x8454, 0xe2a0, 0xc171, 0x1d4e, 0x8781, 0x0, 0x0);
        gbc.writeMem(0xe326, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8454, gbc.sp());
        EXPECT(0xe327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe326));
        // A4 0230
        gbc.setState(0x956d, 0x16f1, 0x2480, 0x3281, 0x70bb, 0x416d, 0x0, 0x0);
        gbc.writeMem(0x956d, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x16f1, gbc.sp());
        EXPECT(0x956e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x956d));
        // A4 0231
        gbc.setState(0x532b, 0xdcd1, 0x6d50, 0x115a, 0x6dbc, 0xbad1, 0x0, 0x1);
        gbc.writeMem(0x532b, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdcd1, gbc.sp());
        EXPECT(0x532c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0232
        gbc.setState(0xab1f, 0xfc74, 0xfd80, 0xd45a, 0x4c2b, 0xa692, 0x1, 0x0);
        gbc.writeMem(0xab1f, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfc74, gbc.sp());
        EXPECT(0xab20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xab1f));
        // A4 0233
        gbc.setState(0x2008, 0x4b28, 0xe4f0, 0x4763, 0xc9ff, 0x57c3, 0x1, 0x1);
        gbc.writeMem(0x2008, { 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4b28, gbc.sp());
        EXPECT(0x2009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0234
        gbc.setState(0x5d2d, 0xf24b, 0x2d00, 0x3271, 0x7398, 0xfd6d, 0x1, 0x0);
        gbc.writeMem(0x5d2d, { 0xa4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf24b, gbc.sp());
        EXPECT(0x5d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0235
        gbc.setState(0x7037, 0x2737, 0xa210, 0xfc82, 0xfae5, 0xcc09, 0x1, 0x1);
        gbc.writeMem(0x7037, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2737, gbc.sp());
        EXPECT(0x7038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0236
        gbc.setState(0x1ee0, 0x22bf, 0xee20, 0x5688, 0xf7ff, 0xa42e, 0x0, 0x1);
        gbc.writeMem(0x1ee0, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x22bf, gbc.sp());
        EXPECT(0x1ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0237
        gbc.setState(0xc5b6, 0xbb31, 0xeb40, 0x142a, 0x63b8, 0x3b1d, 0x1, 0x0);
        gbc.writeMem(0xc5b6, { 0xa4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbb31, gbc.sp());
        EXPECT(0xc5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc5b6));
        // A4 0238
        gbc.setState(0x376b, 0x96de, 0x1a50, 0xc361, 0x83e7, 0x511, 0x1, 0x0);
        gbc.writeMem(0x376b, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x96de, gbc.sp());
        EXPECT(0x376c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0239
        gbc.setState(0x94e1, 0x807d, 0xb090, 0x686b, 0x52c4, 0x41a4, 0x0, 0x1);
        gbc.writeMem(0x94e1, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x807d, gbc.sp());
        EXPECT(0x94e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x94e1));
        // A4 023A
        gbc.setState(0xd513, 0x651, 0x88d0, 0x3b8a, 0xc5f5, 0xb8cf, 0x1, 0x1);
        gbc.writeMem(0xd513, { 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x651, gbc.sp());
        EXPECT(0xd514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd513));
        // A4 023B
        gbc.setState(0xcb5b, 0x508f, 0xec10, 0x5d7a, 0x3d50, 0x3bdf, 0x0, 0x1);
        gbc.writeMem(0xcb5b, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x508f, gbc.sp());
        EXPECT(0xcb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcb5b));
        // A4 023C
        gbc.setState(0x1b33, 0x4dba, 0xc40, 0xae0e, 0xe7f0, 0x21e4, 0x0, 0x1);
        gbc.writeMem(0x1b33, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4dba, gbc.sp());
        EXPECT(0x1b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 023D
        gbc.setState(0x6b95, 0x86eb, 0xfcc0, 0x4dc7, 0xc801, 0xef23, 0x0, 0x0);
        gbc.writeMem(0x6b95, { 0xa4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x86eb, gbc.sp());
        EXPECT(0x6b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 023F
        gbc.setState(0x53b5, 0xcba1, 0x8f00, 0xa706, 0x31a6, 0x477a, 0x1, 0x0);
        gbc.writeMem(0x53b5, { 0xa4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcba1, gbc.sp());
        EXPECT(0x53b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0240
        gbc.setState(0x6c78, 0x53d3, 0x7980, 0xfdc2, 0x66b2, 0xbda8, 0x0, 0x1);
        gbc.writeMem(0x6c78, { 0xa4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x53d3, gbc.sp());
        EXPECT(0x6c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0241
        gbc.setState(0x66d2, 0xd431, 0x9e0, 0xbad4, 0x6991, 0xcf56, 0x1, 0x0);
        gbc.writeMem(0x66d2, { 0xa4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd431, gbc.sp());
        EXPECT(0x66d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0242
        gbc.setState(0xd523, 0xa236, 0x97c0, 0xeace, 0x5bb9, 0x6613, 0x1, 0x0);
        gbc.writeMem(0xd523, { 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa236, gbc.sp());
        EXPECT(0xd524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd523));
        // A4 0243
        gbc.setState(0x94c3, 0xbef3, 0x5b30, 0x3d0c, 0x1819, 0x6345, 0x0, 0x1);
        gbc.writeMem(0x94c3, { 0xa4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbef3, gbc.sp());
        EXPECT(0x94c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x94c3));
        // A4 0244
        gbc.setState(0x7b17, 0x5704, 0x1690, 0xaa7, 0x5dd2, 0xa9ab, 0x1, 0x0);
        gbc.writeMem(0x7b17, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5704, gbc.sp());
        EXPECT(0x7b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0245
        gbc.setState(0x7e49, 0xa4b, 0x2840, 0x2d2c, 0x6b64, 0xb457, 0x1, 0x0);
        gbc.writeMem(0x7e49, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa4b, gbc.sp());
        EXPECT(0x7e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0246
        gbc.setState(0x3032, 0x6f43, 0xfe90, 0x8cea, 0xa94, 0xe03b, 0x0, 0x0);
        gbc.writeMem(0x3032, { 0xa4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6f43, gbc.sp());
        EXPECT(0x3033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0247
        gbc.setState(0x7136, 0xb717, 0x6900, 0x18ba, 0x74c8, 0xd2ae, 0x1, 0x0);
        gbc.writeMem(0x7136, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb717, gbc.sp());
        EXPECT(0x7137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0248
        gbc.setState(0xa921, 0xb1f8, 0x4e40, 0xac65, 0x76bd, 0x4533, 0x1, 0x1);
        gbc.writeMem(0xa921, { 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb1f8, gbc.sp());
        EXPECT(0xa922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa921));
        // A4 0249
        gbc.setState(0x580a, 0xbc90, 0xcc30, 0xf5c0, 0x6083, 0xd230, 0x1, 0x1);
        gbc.writeMem(0x580a, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbc90, gbc.sp());
        EXPECT(0x580b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 024A
        gbc.setState(0x4418, 0x4cd9, 0xea00, 0x2065, 0xc2b, 0xae15, 0x0, 0x1);
        gbc.writeMem(0x4418, { 0xa4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4cd9, gbc.sp());
        EXPECT(0x4419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 024B
        gbc.setState(0x2b19, 0xcc41, 0x6ef0, 0x25b9, 0x2f34, 0x23e2, 0x0, 0x1);
        gbc.writeMem(0x2b19, { 0xa4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcc41, gbc.sp());
        EXPECT(0x2b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 024C
        gbc.setState(0xc054, 0x6b77, 0xf90, 0x4476, 0xe20c, 0xa93, 0x0, 0x1);
        gbc.writeMem(0xc054, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6b77, gbc.sp());
        EXPECT(0xc055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc054));
        // A4 024D
        gbc.setState(0xc716, 0xbe3a, 0x28c0, 0xcdca, 0xef01, 0x3de9, 0x1, 0x0);
        gbc.writeMem(0xc716, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbe3a, gbc.sp());
        EXPECT(0xc717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc716));
        // A4 024F
        gbc.setState(0x2e0a, 0x766d, 0x16e0, 0x427a, 0xd357, 0xade2, 0x0, 0x1);
        gbc.writeMem(0x2e0a, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x766d, gbc.sp());
        EXPECT(0x2e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0250
        gbc.setState(0x83f6, 0x659c, 0xf5f0, 0x1085, 0x72c0, 0x9969, 0x0, 0x0);
        gbc.writeMem(0x83f6, { 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x659c, gbc.sp());
        EXPECT(0x83f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x83f6));
        // A4 0252
        gbc.setState(0x91b8, 0xef3f, 0x4f90, 0xf861, 0xa4f1, 0x447d, 0x0, 0x1);
        gbc.writeMem(0x91b8, { 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xef3f, gbc.sp());
        EXPECT(0x91b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x91b8));
        // A4 0253
        gbc.setState(0x44df, 0x8c93, 0x1da0, 0x7f78, 0x3cd4, 0xc36e, 0x1, 0x1);
        gbc.writeMem(0x44df, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8c93, gbc.sp());
        EXPECT(0x44e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0254
        gbc.setState(0x3315, 0x6607, 0xc5c0, 0xdb5b, 0x609e, 0x20b6, 0x0, 0x0);
        gbc.writeMem(0x3315, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6607, gbc.sp());
        EXPECT(0x3316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0255
        gbc.setState(0x963b, 0x8c28, 0x3a90, 0x4340, 0xcd67, 0xaf98, 0x0, 0x0);
        gbc.writeMem(0x963b, { 0xa4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8c28, gbc.sp());
        EXPECT(0x963c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x963b));
        // A4 0256
        gbc.setState(0x7fbc, 0x9c7, 0xe980, 0x26e1, 0xceb8, 0x2a8a, 0x0, 0x1);
        gbc.writeMem(0x7fbc, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9c7, gbc.sp());
        EXPECT(0x7fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0257
        gbc.setState(0x392f, 0x3245, 0xe240, 0x9b51, 0xe3ad, 0x3e6a, 0x0, 0x1);
        gbc.writeMem(0x392f, { 0xa4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3245, gbc.sp());
        EXPECT(0x3930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0258
        gbc.setState(0x5fcb, 0xf40a, 0xfb80, 0x4133, 0x666e, 0xba14, 0x0, 0x0);
        gbc.writeMem(0x5fcb, { 0xa4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf40a, gbc.sp());
        EXPECT(0x5fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0259
        gbc.setState(0x1664, 0x9f54, 0x6ce0, 0xdfa2, 0xd211, 0x28a5, 0x1, 0x1);
        gbc.writeMem(0x1664, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9f54, gbc.sp());
        EXPECT(0x1665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 025A
        gbc.setState(0xdad4, 0xecdf, 0xb730, 0x2f7d, 0xd16a, 0x36c6, 0x0, 0x0);
        gbc.writeMem(0xdad4, { 0xa4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xecdf, gbc.sp());
        EXPECT(0xdad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdad4));
        // A4 025B
        gbc.setState(0x2fbc, 0x1e5b, 0x4ee0, 0x4be5, 0x6bed, 0x4f75, 0x0, 0x0);
        gbc.writeMem(0x2fbc, { 0xa4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1e5b, gbc.sp());
        EXPECT(0x2fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 025C
        gbc.setState(0x485a, 0xe427, 0xffb0, 0x5022, 0x27ba, 0x432d, 0x0, 0x1);
        gbc.writeMem(0x485a, { 0xa4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe427, gbc.sp());
        EXPECT(0x485b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 025D
        gbc.setState(0xe108, 0x672, 0x5cd0, 0xae60, 0x3dcd, 0xf567, 0x1, 0x0);
        gbc.writeMem(0xe108, { 0xa4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x672, gbc.sp());
        EXPECT(0xe109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe108));
        // A4 025E
        gbc.setState(0xe71c, 0x172f, 0x1bb0, 0x906f, 0xbf5b, 0x14fc, 0x0, 0x1);
        gbc.writeMem(0xe71c, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x172f, gbc.sp());
        EXPECT(0xe71d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe71c));
        // A4 025F
        gbc.setState(0x138d, 0x6f1c, 0xec30, 0x9663, 0xc4ef, 0x39d0, 0x0, 0x1);
        gbc.writeMem(0x138d, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6f1c, gbc.sp());
        EXPECT(0x138e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0260
        gbc.setState(0xd4b8, 0xcd4c, 0x4b00, 0xb7fa, 0x3a27, 0xc943, 0x0, 0x1);
        gbc.writeMem(0xd4b8, { 0xa4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcd4c, gbc.sp());
        EXPECT(0xd4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd4b8));
        // A4 0261
        gbc.setState(0xc62a, 0x4764, 0xce60, 0x114a, 0xca2f, 0xe1, 0x1, 0x0);
        gbc.writeMem(0xc62a, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4764, gbc.sp());
        EXPECT(0xc62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc62a));
        // A4 0263
        gbc.setState(0x5621, 0x2777, 0xf80, 0x3765, 0xb0f5, 0x3a1a, 0x1, 0x0);
        gbc.writeMem(0x5621, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2777, gbc.sp());
        EXPECT(0x5622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0264
        gbc.setState(0x3e43, 0x7f89, 0xd5f0, 0xb41c, 0x6f0e, 0xead8, 0x0, 0x0);
        gbc.writeMem(0x3e43, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7f89, gbc.sp());
        EXPECT(0x3e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0265
        gbc.setState(0x17d8, 0xd79d, 0x32b0, 0x3d7d, 0x32b3, 0x790d, 0x0, 0x1);
        gbc.writeMem(0x17d8, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd79d, gbc.sp());
        EXPECT(0x17d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0266
        gbc.setState(0x2344, 0xa80b, 0xb3b0, 0x7d9d, 0xb891, 0x98ec, 0x0, 0x0);
        gbc.writeMem(0x2344, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa80b, gbc.sp());
        EXPECT(0x2345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0267
        gbc.setState(0xb3b3, 0xf863, 0x1920, 0x90f8, 0xa3c1, 0x2c82, 0x1, 0x0);
        gbc.writeMem(0xb3b3, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf863, gbc.sp());
        EXPECT(0xb3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb3b3));
        // A4 0268
        gbc.setState(0xe635, 0xa5c9, 0xa7c0, 0xb388, 0x9dda, 0xe783, 0x0, 0x0);
        gbc.writeMem(0xe635, { 0xa4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa5c9, gbc.sp());
        EXPECT(0xe636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe635));
        // A4 0269
        gbc.setState(0xb3cf, 0xf91, 0x29e0, 0xbcdb, 0xea0f, 0xae6b, 0x1, 0x0);
        gbc.writeMem(0xb3cf, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf91, gbc.sp());
        EXPECT(0xb3d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb3cf));
        // A4 026A
        gbc.setState(0x98a7, 0x7ff2, 0xc890, 0x9237, 0x1f0a, 0x1136, 0x1, 0x0);
        gbc.writeMem(0x98a7, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7ff2, gbc.sp());
        EXPECT(0x98a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x98a7));
        // A4 026B
        gbc.setState(0xe95, 0x7157, 0x8590, 0x8843, 0xa1b0, 0x3562, 0x0, 0x0);
        gbc.writeMem(0xe95, { 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7157, gbc.sp());
        EXPECT(0xe96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 026C
        gbc.setState(0xb59e, 0x713a, 0x88f0, 0x517a, 0x846c, 0xbc31, 0x1, 0x0);
        gbc.writeMem(0xb59e, { 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x713a, gbc.sp());
        EXPECT(0xb59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb59e));
        // A4 026D
        gbc.setState(0xec0b, 0xf82b, 0x1880, 0xa7a4, 0x4a2, 0x897, 0x0, 0x0);
        gbc.writeMem(0xec0b, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf82b, gbc.sp());
        EXPECT(0xec0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xec0b));
        // A4 026E
        gbc.setState(0x9d7b, 0x5c09, 0x81a0, 0x11f1, 0x25e1, 0xa5b, 0x1, 0x0);
        gbc.writeMem(0x9d7b, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5c09, gbc.sp());
        EXPECT(0x9d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9d7b));
        // A4 026F
        gbc.setState(0xe2aa, 0xa045, 0x1630, 0xda67, 0x9bed, 0x6a74, 0x0, 0x1);
        gbc.writeMem(0xe2aa, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa045, gbc.sp());
        EXPECT(0xe2ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe2aa));
        // A4 0270
        gbc.setState(0x6a0, 0xbde3, 0x1970, 0xcd3d, 0x7eee, 0xaa87, 0x0, 0x0);
        gbc.writeMem(0x6a0, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbde3, gbc.sp());
        EXPECT(0x6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0271
        gbc.setState(0x8c53, 0xfc40, 0x3a80, 0xbd39, 0xbbb4, 0x397c, 0x1, 0x1);
        gbc.writeMem(0x8c53, { 0xa4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfc40, gbc.sp());
        EXPECT(0x8c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8c53));
        // A4 0272
        gbc.setState(0x4a5d, 0x10ea, 0x9290, 0x86e3, 0xba1, 0xd59a, 0x1, 0x1);
        gbc.writeMem(0x4a5d, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x10ea, gbc.sp());
        EXPECT(0x4a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0273
        gbc.setState(0x9d0b, 0x2f17, 0x1170, 0xfd10, 0xdd88, 0x72c8, 0x1, 0x1);
        gbc.writeMem(0x9d0b, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2f17, gbc.sp());
        EXPECT(0x9d0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9d0b));
        // A4 0274
        gbc.setState(0xc58b, 0xfbbd, 0x660, 0x6436, 0x46b6, 0x7d6d, 0x1, 0x1);
        gbc.writeMem(0xc58b, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfbbd, gbc.sp());
        EXPECT(0xc58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc58b));
        // A4 0275
        gbc.setState(0x1bf5, 0xbda4, 0xcce0, 0x14a9, 0x13, 0xcc49, 0x1, 0x1);
        gbc.writeMem(0x1bf5, { 0xa4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbda4, gbc.sp());
        EXPECT(0x1bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0276
        gbc.setState(0xc7, 0x7922, 0x9210, 0xf608, 0x5d23, 0xf252, 0x1, 0x0);
        gbc.writeMem(0xc7, { 0xa4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7922, gbc.sp());
        EXPECT(0xc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0277
        gbc.setState(0xb7d6, 0x250a, 0x7d90, 0xb1a0, 0xbdc8, 0x81c9, 0x1, 0x0);
        gbc.writeMem(0xb7d6, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x250a, gbc.sp());
        EXPECT(0xb7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb7d6));
        // A4 0278
        gbc.setState(0xc21a, 0x129f, 0x5850, 0x138d, 0x3d07, 0x90af, 0x1, 0x1);
        gbc.writeMem(0xc21a, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x129f, gbc.sp());
        EXPECT(0xc21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc21a));
        // A4 0279
        gbc.setState(0x636f, 0x4a0a, 0xbd10, 0x868, 0x79fb, 0x1f8c, 0x0, 0x0);
        gbc.writeMem(0x636f, { 0xa4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4a0a, gbc.sp());
        EXPECT(0x6370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 027A
        gbc.setState(0x2812, 0xc60d, 0x7520, 0x7bc7, 0x8c07, 0x32dd, 0x1, 0x1);
        gbc.writeMem(0x2812, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc60d, gbc.sp());
        EXPECT(0x2813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 027B
        gbc.setState(0x1f02, 0x8085, 0xea10, 0x9241, 0x7ed7, 0xb3a0, 0x1, 0x0);
        gbc.writeMem(0x1f02, { 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8085, gbc.sp());
        EXPECT(0x1f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 027C
        gbc.setState(0x8157, 0x266f, 0xaf50, 0xce37, 0x80d8, 0xbae2, 0x0, 0x0);
        gbc.writeMem(0x8157, { 0xa4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x266f, gbc.sp());
        EXPECT(0x8158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8157));
        // A4 027D
        gbc.setState(0xa997, 0xd05, 0x850, 0x1e09, 0x9ee7, 0x9f2c, 0x1, 0x1);
        gbc.writeMem(0xa997, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd05, gbc.sp());
        EXPECT(0xa998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa997));
        // A4 027E
        gbc.setState(0x3f33, 0xc04f, 0xbd70, 0x93a6, 0x20b7, 0x9a8d, 0x0, 0x0);
        gbc.writeMem(0x3f33, { 0xa4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc04f, gbc.sp());
        EXPECT(0x3f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 027F
        gbc.setState(0xebee, 0xb26, 0x9110, 0x3038, 0x2633, 0xbd9e, 0x0, 0x1);
        gbc.writeMem(0xebee, { 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb26, gbc.sp());
        EXPECT(0xebef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xebee));
        // A4 0280
        gbc.setState(0x1554, 0xba84, 0xce60, 0x1f46, 0x984a, 0xd186, 0x1, 0x1);
        gbc.writeMem(0x1554, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xba84, gbc.sp());
        EXPECT(0x1555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0281
        gbc.setState(0x7cd, 0x545d, 0x1020, 0x465b, 0x316b, 0x714b, 0x0, 0x1);
        gbc.writeMem(0x7cd, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x545d, gbc.sp());
        EXPECT(0x7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0282
        gbc.setState(0x5025, 0xf787, 0xdc0, 0x81d2, 0x7cfc, 0xb3f5, 0x0, 0x1);
        gbc.writeMem(0x5025, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf787, gbc.sp());
        EXPECT(0x5026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0283
        gbc.setState(0x9ac6, 0xf06e, 0x52f0, 0xec0a, 0x5602, 0x6f24, 0x1, 0x1);
        gbc.writeMem(0x9ac6, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf06e, gbc.sp());
        EXPECT(0x9ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9ac6));
        // A4 0284
        gbc.setState(0xaf47, 0x5f03, 0xd9c0, 0xf1a5, 0x6011, 0x4a28, 0x0, 0x1);
        gbc.writeMem(0xaf47, { 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5f03, gbc.sp());
        EXPECT(0xaf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xaf47));
        // A4 0285
        gbc.setState(0xe49d, 0x7c1a, 0x3f0, 0xfc04, 0xc7ec, 0x27d3, 0x0, 0x1);
        gbc.writeMem(0xe49d, { 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7c1a, gbc.sp());
        EXPECT(0xe49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe49d));
        // A4 0286
        gbc.setState(0x83ec, 0xe16b, 0xa40, 0xe542, 0xe9fa, 0xa28c, 0x0, 0x1);
        gbc.writeMem(0x83ec, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe16b, gbc.sp());
        EXPECT(0x83ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x83ec));
        // A4 0287
        gbc.setState(0x9d9b, 0x7ac2, 0x6af0, 0x26b0, 0x3cf3, 0xd021, 0x0, 0x1);
        gbc.writeMem(0x9d9b, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7ac2, gbc.sp());
        EXPECT(0x9d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9d9b));
        // A4 0288
        gbc.setState(0x4d93, 0x20a9, 0x2c90, 0x5346, 0x15d8, 0x9be2, 0x1, 0x1);
        gbc.writeMem(0x4d93, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x20a9, gbc.sp());
        EXPECT(0x4d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0289
        gbc.setState(0x436e, 0xbeb7, 0x70b0, 0x8cea, 0xae13, 0xb89b, 0x1, 0x0);
        gbc.writeMem(0x436e, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbeb7, gbc.sp());
        EXPECT(0x436f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 028A
        gbc.setState(0xeb66, 0x622, 0xd0d0, 0xeb1f, 0xd299, 0xe88f, 0x0, 0x1);
        gbc.writeMem(0xeb66, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x622, gbc.sp());
        EXPECT(0xeb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xeb66));
        // A4 028B
        gbc.setState(0xd620, 0x42c8, 0x24b0, 0x27a5, 0x34fc, 0x3c97, 0x1, 0x1);
        gbc.writeMem(0xd620, { 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x42c8, gbc.sp());
        EXPECT(0xd621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd620));
        // A4 028C
        gbc.setState(0x19c2, 0xe0b6, 0xc740, 0xe136, 0x192f, 0x7772, 0x0, 0x1);
        gbc.writeMem(0x19c2, { 0xa4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe0b6, gbc.sp());
        EXPECT(0x19c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 028D
        gbc.setState(0xc820, 0xa582, 0x3750, 0x9cc8, 0x3f9, 0x3ba2, 0x0, 0x1);
        gbc.writeMem(0xc820, { 0xa4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa582, gbc.sp());
        EXPECT(0xc821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc820));
        // A4 028E
        gbc.setState(0x7d92, 0xcea4, 0x71e0, 0x449d, 0xbe18, 0x7a6, 0x0, 0x0);
        gbc.writeMem(0x7d92, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcea4, gbc.sp());
        EXPECT(0x7d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 028F
        gbc.setState(0x601a, 0x2aff, 0x5cd0, 0xce07, 0xbfdd, 0x8d20, 0x1, 0x0);
        gbc.writeMem(0x601a, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2aff, gbc.sp());
        EXPECT(0x601b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0290
        gbc.setState(0x7ac9, 0xa563, 0xec10, 0xdb19, 0x7f78, 0x6dcf, 0x0, 0x0);
        gbc.writeMem(0x7ac9, { 0xa4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa563, gbc.sp());
        EXPECT(0x7aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0291
        gbc.setState(0x9bed, 0xbebd, 0x3d20, 0xe3e3, 0xadc2, 0x632b, 0x1, 0x1);
        gbc.writeMem(0x9bed, { 0xa4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbebd, gbc.sp());
        EXPECT(0x9bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9bed));
        // A4 0292
        gbc.setState(0xba37, 0x6cb1, 0xb840, 0x9358, 0xe88b, 0x97ee, 0x1, 0x0);
        gbc.writeMem(0xba37, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6cb1, gbc.sp());
        EXPECT(0xba38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xba37));
        // A4 0293
        gbc.setState(0xd186, 0x2205, 0x1640, 0xc79a, 0x8c53, 0x2459, 0x1, 0x1);
        gbc.writeMem(0xd186, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2205, gbc.sp());
        EXPECT(0xd187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd186));
        // A4 0295
        gbc.setState(0x9d3, 0x578d, 0x5f30, 0x696b, 0x843e, 0xc4f4, 0x0, 0x0);
        gbc.writeMem(0x9d3, { 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x578d, gbc.sp());
        EXPECT(0x9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0296
        gbc.setState(0x3ee7, 0x14f2, 0xf540, 0x2e80, 0x4097, 0xff99, 0x1, 0x0);
        gbc.writeMem(0x3ee7, { 0xa4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x14f2, gbc.sp());
        EXPECT(0x3ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0297
        gbc.setState(0xc0c0, 0xa348, 0xf0b0, 0x12d9, 0xa58a, 0x49b, 0x1, 0x0);
        gbc.writeMem(0xc0c0, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa348, gbc.sp());
        EXPECT(0xc0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc0c0));
        // A4 0298
        gbc.setState(0xdf63, 0xa00b, 0x1eb0, 0x3b7f, 0x6044, 0x3f51, 0x1, 0x1);
        gbc.writeMem(0xdf63, { 0xa4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa00b, gbc.sp());
        EXPECT(0xdf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdf63));
        // A4 0299
        gbc.setState(0xc890, 0xb7a7, 0x5c10, 0xc01a, 0xb36f, 0x54e, 0x1, 0x0);
        gbc.writeMem(0xc890, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb7a7, gbc.sp());
        EXPECT(0xc891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc890));
        // A4 029A
        gbc.setState(0xd0db, 0x5475, 0x50d0, 0xfb4f, 0x2792, 0x176b, 0x0, 0x1);
        gbc.writeMem(0xd0db, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5475, gbc.sp());
        EXPECT(0xd0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd0db));
        // A4 029B
        gbc.setState(0x1e83, 0x75e6, 0xf140, 0x8ab3, 0xcce7, 0x6e1d, 0x0, 0x1);
        gbc.writeMem(0x1e83, { 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x75e6, gbc.sp());
        EXPECT(0x1e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 029C
        gbc.setState(0x1f33, 0x86aa, 0xb950, 0xf4b4, 0x6510, 0xaa35, 0x0, 0x1);
        gbc.writeMem(0x1f33, { 0xa4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x86aa, gbc.sp());
        EXPECT(0x1f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 029D
        gbc.setState(0x448, 0xb0e8, 0xa390, 0xa521, 0x3f4d, 0xc463, 0x0, 0x0);
        gbc.writeMem(0x448, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb0e8, gbc.sp());
        EXPECT(0x449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 029E
        gbc.setState(0x9383, 0xa953, 0x2710, 0x1e06, 0xca4d, 0x54f2, 0x0, 0x0);
        gbc.writeMem(0x9383, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa953, gbc.sp());
        EXPECT(0x9384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9383));
        // A4 029F
        gbc.setState(0x117f, 0x16ff, 0x71a0, 0x1216, 0x8f01, 0x5d3c, 0x0, 0x0);
        gbc.writeMem(0x117f, { 0xa4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x16ff, gbc.sp());
        EXPECT(0x1180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02A0
        gbc.setState(0xb697, 0xdeb2, 0x80e0, 0xadfb, 0x9179, 0x941b, 0x0, 0x0);
        gbc.writeMem(0xb697, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdeb2, gbc.sp());
        EXPECT(0xb698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb697));
        // A4 02A1
        gbc.setState(0x713f, 0x99b8, 0xd390, 0xf83e, 0xed05, 0x34cf, 0x0, 0x1);
        gbc.writeMem(0x713f, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x99b8, gbc.sp());
        EXPECT(0x7140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02A2
        gbc.setState(0x28dc, 0x8d3d, 0x58a0, 0x5daf, 0xf76d, 0xed05, 0x1, 0x1);
        gbc.writeMem(0x28dc, { 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8d3d, gbc.sp());
        EXPECT(0x28dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02A3
        gbc.setState(0x9f5, 0x4985, 0xfd90, 0x568a, 0xd74f, 0x492, 0x1, 0x0);
        gbc.writeMem(0x9f5, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4985, gbc.sp());
        EXPECT(0x9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02A4
        gbc.setState(0xcb25, 0xb133, 0x880, 0xabc5, 0x2e1b, 0x8aab, 0x1, 0x0);
        gbc.writeMem(0xcb25, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb133, gbc.sp());
        EXPECT(0xcb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcb25));
        // A4 02A5
        gbc.setState(0x13e0, 0x7c85, 0x6470, 0x19ab, 0x6dd6, 0x7a08, 0x0, 0x0);
        gbc.writeMem(0x13e0, { 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7c85, gbc.sp());
        EXPECT(0x13e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02A6
        gbc.setState(0xcef0, 0x7bca, 0xef40, 0xa853, 0x789f, 0x6e47, 0x1, 0x0);
        gbc.writeMem(0xcef0, { 0xa4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7bca, gbc.sp());
        EXPECT(0xcef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcef0));
        // A4 02A8
        gbc.setState(0xd966, 0xb0a3, 0x31d0, 0xc716, 0x2ea1, 0xc8ce, 0x1, 0x0);
        gbc.writeMem(0xd966, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb0a3, gbc.sp());
        EXPECT(0xd967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd966));
        // A4 02A9
        gbc.setState(0x53bf, 0x4411, 0x9f30, 0x83b1, 0xb2a8, 0xec2f, 0x0, 0x1);
        gbc.writeMem(0x53bf, { 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4411, gbc.sp());
        EXPECT(0x53c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02AA
        gbc.setState(0x35f0, 0x605e, 0xac50, 0x799, 0xc842, 0x9d2b, 0x1, 0x1);
        gbc.writeMem(0x35f0, { 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x605e, gbc.sp());
        EXPECT(0x35f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02AB
        gbc.setState(0xd8ce, 0xb60c, 0x53d0, 0xaf0b, 0x972b, 0x769a, 0x1, 0x0);
        gbc.writeMem(0xd8ce, { 0xa4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb60c, gbc.sp());
        EXPECT(0xd8cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd8ce));
        // A4 02AC
        gbc.setState(0x53ec, 0xbeab, 0xdda0, 0x5c1, 0x2086, 0x14c4, 0x0, 0x0);
        gbc.writeMem(0x53ec, { 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbeab, gbc.sp());
        EXPECT(0x53ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02AE
        gbc.setState(0x25f1, 0xb0fa, 0xf980, 0xcce7, 0xfb65, 0x5f5a, 0x1, 0x0);
        gbc.writeMem(0x25f1, { 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb0fa, gbc.sp());
        EXPECT(0x25f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02AF
        gbc.setState(0x16ce, 0xe2c, 0x8ef0, 0xf98, 0x8b63, 0x84a9, 0x0, 0x1);
        gbc.writeMem(0x16ce, { 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe2c, gbc.sp());
        EXPECT(0x16cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02B0
        gbc.setState(0x172a, 0x808, 0xdb90, 0x5a5, 0x97a, 0x962e, 0x0, 0x0);
        gbc.writeMem(0x172a, { 0xa4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x808, gbc.sp());
        EXPECT(0x172b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02B1
        gbc.setState(0xdcde, 0x5a1c, 0x49e0, 0x61a5, 0x2751, 0x75bf, 0x1, 0x0);
        gbc.writeMem(0xdcde, { 0xa4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5a1c, gbc.sp());
        EXPECT(0xdcdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdcde));
        // A4 02B2
        gbc.setState(0x11c8, 0x8de0, 0x3b40, 0x6069, 0x2b8a, 0xca94, 0x0, 0x0);
        gbc.writeMem(0x11c8, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8de0, gbc.sp());
        EXPECT(0x11c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02B3
        gbc.setState(0x2623, 0xda87, 0x3140, 0x6126, 0xcfe3, 0x7cc9, 0x1, 0x0);
        gbc.writeMem(0x2623, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xda87, gbc.sp());
        EXPECT(0x2624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02B4
        gbc.setState(0x54fa, 0x1522, 0xce20, 0xaecc, 0x2758, 0x9bcd, 0x1, 0x0);
        gbc.writeMem(0x54fa, { 0xa4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1522, gbc.sp());
        EXPECT(0x54fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02B5
        gbc.setState(0x52e2, 0xabae, 0x4590, 0x1dfa, 0x3078, 0xa5c3, 0x0, 0x1);
        gbc.writeMem(0x52e2, { 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xabae, gbc.sp());
        EXPECT(0x52e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02B6
        gbc.setState(0xb7b0, 0xb312, 0x6fc0, 0xae53, 0x3abd, 0x68ae, 0x0, 0x0);
        gbc.writeMem(0xb7b0, { 0xa4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb312, gbc.sp());
        EXPECT(0xb7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb7b0));
        // A4 02B7
        gbc.setState(0x978, 0xb2ac, 0x75c0, 0x6959, 0x2fed, 0x8eb3, 0x0, 0x1);
        gbc.writeMem(0x978, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb2ac, gbc.sp());
        EXPECT(0x979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02B8
        gbc.setState(0xc2ae, 0x3629, 0xe010, 0xe074, 0xf0da, 0x4325, 0x0, 0x0);
        gbc.writeMem(0xc2ae, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3629, gbc.sp());
        EXPECT(0xc2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc2ae));
        // A4 02B9
        gbc.setState(0x72a7, 0xe6c5, 0x5e20, 0x4e4b, 0x12e3, 0xf4c8, 0x1, 0x0);
        gbc.writeMem(0x72a7, { 0xa4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe6c5, gbc.sp());
        EXPECT(0x72a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02BA
        gbc.setState(0x1307, 0x5900, 0x3530, 0x6e13, 0xbdc3, 0x1a0a, 0x0, 0x1);
        gbc.writeMem(0x1307, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5900, gbc.sp());
        EXPECT(0x1308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02BB
        gbc.setState(0x5247, 0x3f62, 0xca50, 0x7183, 0xcfa6, 0x6d18, 0x1, 0x1);
        gbc.writeMem(0x5247, { 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3f62, gbc.sp());
        EXPECT(0x5248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02BC
        gbc.setState(0xc08, 0x459c, 0x9970, 0x6a8, 0xc434, 0x7415, 0x1, 0x0);
        gbc.writeMem(0xc08, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x459c, gbc.sp());
        EXPECT(0xc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02BD
        gbc.setState(0x19eb, 0x3819, 0xd270, 0xa1e3, 0x61a, 0x8cc8, 0x1, 0x1);
        gbc.writeMem(0x19eb, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3819, gbc.sp());
        EXPECT(0x19ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02BE
        gbc.setState(0x7955, 0xfd9c, 0x2c30, 0x204d, 0xaf00, 0xfcca, 0x1, 0x1);
        gbc.writeMem(0x7955, { 0xa4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfd9c, gbc.sp());
        EXPECT(0x7956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02BF
        gbc.setState(0x2774, 0xc18b, 0xaa0, 0x60d, 0xd6b8, 0xaac4, 0x0, 0x0);
        gbc.writeMem(0x2774, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc18b, gbc.sp());
        EXPECT(0x2775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02C0
        gbc.setState(0xa06f, 0x9d68, 0x830, 0xb080, 0xe200, 0xe8cf, 0x1, 0x1);
        gbc.writeMem(0xa06f, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9d68, gbc.sp());
        EXPECT(0xa070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa06f));
        // A4 02C1
        gbc.setState(0xab6, 0xf13, 0xe8d0, 0x2b02, 0xc251, 0xd7dc, 0x0, 0x0);
        gbc.writeMem(0xab6, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf13, gbc.sp());
        EXPECT(0xab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02C2
        gbc.setState(0x1d00, 0xbc7b, 0x6870, 0xdcbd, 0xdbe1, 0x61ed, 0x1, 0x0);
        gbc.writeMem(0x1d00, { 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbc7b, gbc.sp());
        EXPECT(0x1d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02C3
        gbc.setState(0xe919, 0xbcfb, 0x8b10, 0x7cc3, 0x5465, 0x1603, 0x1, 0x1);
        gbc.writeMem(0xe919, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbcfb, gbc.sp());
        EXPECT(0xe91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe919));
        // A4 02C4
        gbc.setState(0xc294, 0x3d7a, 0xdcf0, 0xc9f9, 0x6e88, 0x4e70, 0x0, 0x1);
        gbc.writeMem(0xc294, { 0xa4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3d7a, gbc.sp());
        EXPECT(0xc295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc294));
        // A4 02C5
        gbc.setState(0x46b4, 0xb38b, 0x5fe0, 0x3bae, 0xcdc, 0xd76f, 0x1, 0x0);
        gbc.writeMem(0x46b4, { 0xa4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb38b, gbc.sp());
        EXPECT(0x46b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02C6
        gbc.setState(0x9796, 0x61d1, 0x90d0, 0x76e7, 0x75fb, 0xf97c, 0x0, 0x0);
        gbc.writeMem(0x9796, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x61d1, gbc.sp());
        EXPECT(0x9797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9796));
        // A4 02C7
        gbc.setState(0xea95, 0x5caf, 0xaa10, 0x4433, 0xade9, 0x709, 0x1, 0x1);
        gbc.writeMem(0xea95, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5caf, gbc.sp());
        EXPECT(0xea96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xea95));
        // A4 02C8
        gbc.setState(0xd142, 0x1d61, 0xc300, 0x957c, 0x1d42, 0x1092, 0x1, 0x0);
        gbc.writeMem(0xd142, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1d61, gbc.sp());
        EXPECT(0xd143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd142));
        // A4 02C9
        gbc.setState(0xa32f, 0x6d53, 0x5640, 0x6019, 0xa701, 0x640, 0x0, 0x1);
        gbc.writeMem(0xa32f, { 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6d53, gbc.sp());
        EXPECT(0xa330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa32f));
        // A4 02CA
        gbc.setState(0x27f9, 0x450e, 0xc3a0, 0xe416, 0x1faf, 0x96b9, 0x0, 0x0);
        gbc.writeMem(0x27f9, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x450e, gbc.sp());
        EXPECT(0x27fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02CB
        gbc.setState(0xba42, 0x8735, 0xbef0, 0xd4e3, 0x5dda, 0xb504, 0x0, 0x1);
        gbc.writeMem(0xba42, { 0xa4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8735, gbc.sp());
        EXPECT(0xba43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xba42));
        // A4 02CC
        gbc.setState(0x563, 0x873b, 0x6160, 0xe4f, 0x622d, 0x191d, 0x1, 0x1);
        gbc.writeMem(0x563, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x873b, gbc.sp());
        EXPECT(0x564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02CD
        gbc.setState(0x5588, 0x2c1b, 0x7f90, 0xc65d, 0x16c7, 0xb2ee, 0x0, 0x1);
        gbc.writeMem(0x5588, { 0xa4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2c1b, gbc.sp());
        EXPECT(0x5589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02CF
        gbc.setState(0x1ece, 0xf627, 0x69d0, 0xb970, 0x10ee, 0x70eb, 0x0, 0x1);
        gbc.writeMem(0x1ece, { 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf627, gbc.sp());
        EXPECT(0x1ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02D0
        gbc.setState(0x5587, 0x3d69, 0x19b0, 0xd290, 0x4959, 0x4cfe, 0x0, 0x1);
        gbc.writeMem(0x5587, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3d69, gbc.sp());
        EXPECT(0x5588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02D1
        gbc.setState(0xd169, 0x3448, 0x850, 0x76ba, 0x3ac, 0xb247, 0x0, 0x1);
        gbc.writeMem(0xd169, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3448, gbc.sp());
        EXPECT(0xd16a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd169));
        // A4 02D2
        gbc.setState(0x59e0, 0xcab, 0xf880, 0x2d3c, 0xe0a5, 0x2056, 0x1, 0x1);
        gbc.writeMem(0x59e0, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcab, gbc.sp());
        EXPECT(0x59e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02D3
        gbc.setState(0xb6f9, 0x1c59, 0xd530, 0x5f9a, 0xd4a1, 0x8fd6, 0x0, 0x0);
        gbc.writeMem(0xb6f9, { 0xa4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1c59, gbc.sp());
        EXPECT(0xb6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb6f9));
        // A4 02D5
        gbc.setState(0x9468, 0x8134, 0x13f0, 0x585b, 0x3e3a, 0x38cb, 0x1, 0x0);
        gbc.writeMem(0x9468, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8134, gbc.sp());
        EXPECT(0x9469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9468));
        // A4 02D6
        gbc.setState(0xcab4, 0xcac0, 0x4420, 0xd04a, 0x1b20, 0x97e4, 0x1, 0x1);
        gbc.writeMem(0xcab4, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcac0, gbc.sp());
        EXPECT(0xcab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcab4));
        // A4 02D7
        gbc.setState(0x21ab, 0xdf86, 0xbc90, 0x11ef, 0xd010, 0xbac9, 0x0, 0x1);
        gbc.writeMem(0x21ab, { 0xa4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdf86, gbc.sp());
        EXPECT(0x21ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02D8
        gbc.setState(0x39d1, 0xbc8c, 0x4bd0, 0x3406, 0x24cc, 0xa5e6, 0x0, 0x0);
        gbc.writeMem(0x39d1, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbc8c, gbc.sp());
        EXPECT(0x39d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02D9
        gbc.setState(0x2ebe, 0xbcac, 0x6df0, 0xc4c2, 0xf41b, 0x14a9, 0x1, 0x0);
        gbc.writeMem(0x2ebe, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbcac, gbc.sp());
        EXPECT(0x2ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02DA
        gbc.setState(0xe31a, 0xa61d, 0x1940, 0xa3c3, 0xef99, 0x5c6a, 0x1, 0x1);
        gbc.writeMem(0xe31a, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa61d, gbc.sp());
        EXPECT(0xe31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe31a));
        // A4 02DB
        gbc.setState(0x47a, 0xd323, 0x1eb0, 0xd0cb, 0xed5f, 0x7563, 0x0, 0x0);
        gbc.writeMem(0x47a, { 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd323, gbc.sp());
        EXPECT(0x47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02DC
        gbc.setState(0x4dc9, 0x26e8, 0x33a0, 0x9efa, 0x8aed, 0x58c1, 0x1, 0x0);
        gbc.writeMem(0x4dc9, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x26e8, gbc.sp());
        EXPECT(0x4dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02DE
        gbc.setState(0x6ff9, 0xb610, 0xf980, 0x1a20, 0x9429, 0x50ee, 0x0, 0x0);
        gbc.writeMem(0x6ff9, { 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb610, gbc.sp());
        EXPECT(0x6ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02DF
        gbc.setState(0x614c, 0x58c4, 0x50, 0xba8b, 0xc7d, 0x766a, 0x0, 0x1);
        gbc.writeMem(0x614c, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x58c4, gbc.sp());
        EXPECT(0x614d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02E0
        gbc.setState(0xac5d, 0xecb2, 0xb730, 0x4538, 0x4bbb, 0x9c96, 0x0, 0x0);
        gbc.writeMem(0xac5d, { 0xa4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xecb2, gbc.sp());
        EXPECT(0xac5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xac5d));
        // A4 02E1
        gbc.setState(0x53bc, 0x5fe0, 0xe020, 0x5e40, 0x3daa, 0xa0ba, 0x0, 0x0);
        gbc.writeMem(0x53bc, { 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5fe0, gbc.sp());
        EXPECT(0x53bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02E2
        gbc.setState(0xbe02, 0xae26, 0x1260, 0xfa98, 0x4478, 0x7c7f, 0x1, 0x1);
        gbc.writeMem(0xbe02, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xae26, gbc.sp());
        EXPECT(0xbe03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbe02));
        // A4 02E3
        gbc.setState(0x79df, 0x112d, 0xcc30, 0xef4, 0xd937, 0xe7c3, 0x1, 0x1);
        gbc.writeMem(0x79df, { 0xa4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x112d, gbc.sp());
        EXPECT(0x79e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02E4
        gbc.setState(0x28c6, 0xd21b, 0x68d0, 0x8984, 0xcd38, 0xb5c3, 0x1, 0x1);
        gbc.writeMem(0x28c6, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd21b, gbc.sp());
        EXPECT(0x28c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02E5
        gbc.setState(0x2b4, 0x1643, 0xa4e0, 0x990, 0x81ec, 0x640, 0x0, 0x1);
        gbc.writeMem(0x2b4, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1643, gbc.sp());
        EXPECT(0x2b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02E6
        gbc.setState(0x4b2b, 0xf961, 0xe420, 0x3f21, 0xbcf1, 0xdbf2, 0x0, 0x1);
        gbc.writeMem(0x4b2b, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf961, gbc.sp());
        EXPECT(0x4b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02E7
        gbc.setState(0x31e6, 0x3b49, 0x1980, 0x62d6, 0xe824, 0x23b0, 0x0, 0x0);
        gbc.writeMem(0x31e6, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3b49, gbc.sp());
        EXPECT(0x31e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02E8
        gbc.setState(0x6d18, 0x9b, 0x1660, 0x754, 0x3e9, 0xbb82, 0x1, 0x0);
        gbc.writeMem(0x6d18, { 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9b, gbc.sp());
        EXPECT(0x6d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02E9
        gbc.setState(0x4166, 0x77e5, 0xf310, 0xc9ea, 0x72ee, 0xca8b, 0x0, 0x1);
        gbc.writeMem(0x4166, { 0xa4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x77e5, gbc.sp());
        EXPECT(0x4167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02EA
        gbc.setState(0x894a, 0xf605, 0xeff0, 0x5768, 0x38a6, 0xa89f, 0x0, 0x0);
        gbc.writeMem(0x894a, { 0xa4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf605, gbc.sp());
        EXPECT(0x894b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x894a));
        // A4 02EB
        gbc.setState(0x28fb, 0xcd7e, 0xf960, 0x273d, 0x4fc5, 0x63a3, 0x1, 0x1);
        gbc.writeMem(0x28fb, { 0xa4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcd7e, gbc.sp());
        EXPECT(0x28fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02EC
        gbc.setState(0xc5cf, 0x14f7, 0xccf0, 0xc96b, 0xefdc, 0x1e64, 0x0, 0x0);
        gbc.writeMem(0xc5cf, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x14f7, gbc.sp());
        EXPECT(0xc5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc5cf));
        // A4 02ED
        gbc.setState(0x37d8, 0x61bb, 0x5350, 0x6bbc, 0x52ef, 0xe7b, 0x1, 0x1);
        gbc.writeMem(0x37d8, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x61bb, gbc.sp());
        EXPECT(0x37d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02EE
        gbc.setState(0x4496, 0xf213, 0xb800, 0x6b5e, 0x1965, 0x88f2, 0x0, 0x0);
        gbc.writeMem(0x4496, { 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf213, gbc.sp());
        EXPECT(0x4497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02EF
        gbc.setState(0x32ac, 0x67de, 0x92c0, 0x81f8, 0xf01d, 0xfff0, 0x0, 0x1);
        gbc.writeMem(0x32ac, { 0xa4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x67de, gbc.sp());
        EXPECT(0x32ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02F0
        gbc.setState(0xa68e, 0x4364, 0x1b70, 0xd1a3, 0x4706, 0xd987, 0x0, 0x0);
        gbc.writeMem(0xa68e, { 0xa4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4364, gbc.sp());
        EXPECT(0xa68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa68e));
        // A4 02F1
        gbc.setState(0x6278, 0x7b85, 0xc0f0, 0x8ad7, 0xb1d1, 0x6a28, 0x0, 0x0);
        gbc.writeMem(0x6278, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7b85, gbc.sp());
        EXPECT(0x6279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02F2
        gbc.setState(0x2aa8, 0x8dd4, 0x7550, 0x5926, 0x13f3, 0x581d, 0x0, 0x1);
        gbc.writeMem(0x2aa8, { 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8dd4, gbc.sp());
        EXPECT(0x2aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02F4
        gbc.setState(0x25ea, 0xb478, 0x3c00, 0x7150, 0xae6d, 0xb1c3, 0x1, 0x1);
        gbc.writeMem(0x25ea, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb478, gbc.sp());
        EXPECT(0x25eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02F5
        gbc.setState(0xee4f, 0x64e9, 0x8490, 0x7c43, 0x857f, 0xf0bb, 0x1, 0x1);
        gbc.writeMem(0xee4f, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x64e9, gbc.sp());
        EXPECT(0xee50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xee4f));
        // A4 02F6
        gbc.setState(0x5e5, 0x7390, 0x5b10, 0x4faf, 0x236d, 0x20fc, 0x0, 0x0);
        gbc.writeMem(0x5e5, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7390, gbc.sp());
        EXPECT(0x5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02F7
        gbc.setState(0x425f, 0x7f16, 0x59b0, 0xd252, 0x104f, 0x51d1, 0x0, 0x0);
        gbc.writeMem(0x425f, { 0xa4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7f16, gbc.sp());
        EXPECT(0x4260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02F8
        gbc.setState(0x4f28, 0x689f, 0xb4e0, 0x2690, 0xf118, 0xd2a4, 0x1, 0x0);
        gbc.writeMem(0x4f28, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x689f, gbc.sp());
        EXPECT(0x4f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02F9
        gbc.setState(0x5474, 0xa142, 0xf930, 0xdc92, 0x5ba0, 0xfd9, 0x1, 0x1);
        gbc.writeMem(0x5474, { 0xa4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa142, gbc.sp());
        EXPECT(0x5475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02FA
        gbc.setState(0xc874, 0xce37, 0x6c60, 0x3981, 0xe9df, 0x39d4, 0x0, 0x0);
        gbc.writeMem(0xc874, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xce37, gbc.sp());
        EXPECT(0xc875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc874));
        // A4 02FB
        gbc.setState(0xc698, 0xfef8, 0x6860, 0x21aa, 0xbf36, 0x4d9a, 0x0, 0x0);
        gbc.writeMem(0xc698, { 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfef8, gbc.sp());
        EXPECT(0xc699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc698));
        // A4 02FC
        gbc.setState(0xc91, 0x2a1a, 0xab60, 0xde45, 0x5a4d, 0xf49, 0x1, 0x1);
        gbc.writeMem(0xc91, { 0xa4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2a1a, gbc.sp());
        EXPECT(0xc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02FD
        gbc.setState(0x3bdb, 0x3ac4, 0xd010, 0xda59, 0x9408, 0xf516, 0x0, 0x0);
        gbc.writeMem(0x3bdb, { 0xa4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3ac4, gbc.sp());
        EXPECT(0x3bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02FE
        gbc.setState(0x586, 0x5c31, 0x4fa0, 0x877b, 0x1866, 0xfc3, 0x0, 0x1);
        gbc.writeMem(0x586, { 0xa4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5c31, gbc.sp());
        EXPECT(0x587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 02FF
        gbc.setState(0x83, 0xaf13, 0x1c0, 0x7a3, 0x3f6, 0x3627, 0x0, 0x1);
        gbc.writeMem(0x83, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaf13, gbc.sp());
        EXPECT(0x84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0300
        gbc.setState(0x56f5, 0xf639, 0x52a0, 0x1820, 0x45bc, 0x5e43, 0x0, 0x1);
        gbc.writeMem(0x56f5, { 0xa4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf639, gbc.sp());
        EXPECT(0x56f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0301
        gbc.setState(0xcace, 0x1136, 0x1300, 0x187e, 0x7a3, 0xfae6, 0x0, 0x0);
        gbc.writeMem(0xcace, { 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1136, gbc.sp());
        EXPECT(0xcacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcace));
        // A4 0302
        gbc.setState(0xc4ad, 0xdd5b, 0x1de0, 0x4971, 0xf3ec, 0x7f29, 0x0, 0x0);
        gbc.writeMem(0xc4ad, { 0xa4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdd5b, gbc.sp());
        EXPECT(0xc4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc4ad));
        // A4 0303
        gbc.setState(0x9129, 0xe475, 0x1960, 0x725f, 0x8979, 0x5556, 0x0, 0x0);
        gbc.writeMem(0x9129, { 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe475, gbc.sp());
        EXPECT(0x912a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9129));
        // A4 0304
        gbc.setState(0xef3f, 0xbba, 0xb4d0, 0x2fd3, 0xae58, 0xc366, 0x1, 0x1);
        gbc.writeMem(0xef3f, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbba, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xef3f));
        // A4 0305
        gbc.setState(0x7ef0, 0x30e4, 0x84e0, 0xcbff, 0xce67, 0xbc3c, 0x1, 0x0);
        gbc.writeMem(0x7ef0, { 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x30e4, gbc.sp());
        EXPECT(0x7ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0306
        gbc.setState(0x3af1, 0x6f1d, 0x6340, 0xcade, 0xdd13, 0xc7c7, 0x0, 0x0);
        gbc.writeMem(0x3af1, { 0xa4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6f1d, gbc.sp());
        EXPECT(0x3af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0307
        gbc.setState(0x2fe4, 0xfd92, 0x9e90, 0x5ab1, 0xa47, 0xf01b, 0x0, 0x1);
        gbc.writeMem(0x2fe4, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfd92, gbc.sp());
        EXPECT(0x2fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0309
        gbc.setState(0x49f2, 0x380, 0x1040, 0xf914, 0x4933, 0x7525, 0x0, 0x0);
        gbc.writeMem(0x49f2, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x380, gbc.sp());
        EXPECT(0x49f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 030A
        gbc.setState(0x2ece, 0x4e72, 0x3530, 0x5273, 0x862f, 0x41c0, 0x0, 0x0);
        gbc.writeMem(0x2ece, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4e72, gbc.sp());
        EXPECT(0x2ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 030B
        gbc.setState(0xe702, 0xe075, 0x16b0, 0xd9e3, 0xee7f, 0xf194, 0x1, 0x0);
        gbc.writeMem(0xe702, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe075, gbc.sp());
        EXPECT(0xe703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe702));
        // A4 030C
        gbc.setState(0x1af4, 0x3cd, 0xfd80, 0x3db4, 0xc1e5, 0x28d0, 0x1, 0x0);
        gbc.writeMem(0x1af4, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3cd, gbc.sp());
        EXPECT(0x1af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 030D
        gbc.setState(0x4e5c, 0x913f, 0x81e0, 0x774a, 0xef84, 0x61a2, 0x0, 0x1);
        gbc.writeMem(0x4e5c, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x913f, gbc.sp());
        EXPECT(0x4e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 030E
        gbc.setState(0x4005, 0xf541, 0xd660, 0x4dc6, 0xaf1a, 0x71ab, 0x1, 0x0);
        gbc.writeMem(0x4005, { 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf541, gbc.sp());
        EXPECT(0x4006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 030F
        gbc.setState(0xb5e6, 0x312f, 0x16f0, 0xbbf1, 0x17a5, 0x106b, 0x1, 0x0);
        gbc.writeMem(0xb5e6, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x312f, gbc.sp());
        EXPECT(0xb5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb5e6));
        // A4 0310
        gbc.setState(0x61c, 0xf0d9, 0x43b0, 0xd8d3, 0x8d, 0xf19f, 0x1, 0x1);
        gbc.writeMem(0x61c, { 0xa4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf0d9, gbc.sp());
        EXPECT(0x61d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0311
        gbc.setState(0x7aff, 0x664c, 0x3e10, 0xd523, 0xf47a, 0x3b8e, 0x0, 0x1);
        gbc.writeMem(0x7aff, { 0xa4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x664c, gbc.sp());
        EXPECT(0x7b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0312
        gbc.setState(0xa35b, 0x53cb, 0x1a70, 0xcc5d, 0x26b0, 0xc613, 0x0, 0x1);
        gbc.writeMem(0xa35b, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x53cb, gbc.sp());
        EXPECT(0xa35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa35b));
        // A4 0313
        gbc.setState(0x2054, 0x89d4, 0xc4f0, 0xf183, 0x261a, 0xf34a, 0x1, 0x0);
        gbc.writeMem(0x2054, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x89d4, gbc.sp());
        EXPECT(0x2055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0314
        gbc.setState(0xbc11, 0x1b32, 0x3370, 0x7daa, 0x527c, 0x360e, 0x1, 0x0);
        gbc.writeMem(0xbc11, { 0xa4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1b32, gbc.sp());
        EXPECT(0xbc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbc11));
        // A4 0315
        gbc.setState(0x4f1b, 0x7e45, 0xe030, 0x2e43, 0x4dd5, 0x6e70, 0x0, 0x1);
        gbc.writeMem(0x4f1b, { 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7e45, gbc.sp());
        EXPECT(0x4f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0316
        gbc.setState(0x9dc4, 0xc551, 0x4c40, 0xad9f, 0xf195, 0xf9db, 0x0, 0x0);
        gbc.writeMem(0x9dc4, { 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc551, gbc.sp());
        EXPECT(0x9dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9dc4));
        // A4 0318
        gbc.setState(0x52ff, 0xbb28, 0x4650, 0xf04c, 0xc7c8, 0x5228, 0x0, 0x1);
        gbc.writeMem(0x52ff, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbb28, gbc.sp());
        EXPECT(0x5300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0319
        gbc.setState(0xb675, 0x99dd, 0x1370, 0xc905, 0x6e26, 0xb36a, 0x1, 0x1);
        gbc.writeMem(0xb675, { 0xa4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x99dd, gbc.sp());
        EXPECT(0xb676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb675));
        // A4 031A
        gbc.setState(0x58c1, 0xcf12, 0x10b0, 0x5581, 0x9957, 0xb45f, 0x0, 0x0);
        gbc.writeMem(0x58c1, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcf12, gbc.sp());
        EXPECT(0x58c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 031B
        gbc.setState(0x51f9, 0x6c79, 0xcba0, 0x7f01, 0x8e4e, 0xca31, 0x0, 0x0);
        gbc.writeMem(0x51f9, { 0xa4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6c79, gbc.sp());
        EXPECT(0x51fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 031C
        gbc.setState(0xb9ea, 0x3b5e, 0x7110, 0x951a, 0x47a0, 0x2d92, 0x1, 0x0);
        gbc.writeMem(0xb9ea, { 0xa4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3b5e, gbc.sp());
        EXPECT(0xb9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb9ea));
        // A4 031D
        gbc.setState(0xb184, 0xb137, 0xaf20, 0x9a3c, 0x4694, 0xcfc8, 0x0, 0x0);
        gbc.writeMem(0xb184, { 0xa4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb137, gbc.sp());
        EXPECT(0xb185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb184));
        // A4 031E
        gbc.setState(0x3fd, 0xbebb, 0x9950, 0x4eec, 0x2d51, 0xb79b, 0x0, 0x0);
        gbc.writeMem(0x3fd, { 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbebb, gbc.sp());
        EXPECT(0x3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0320
        gbc.setState(0x4243, 0xd8e3, 0xbe70, 0xc405, 0xdda2, 0x4ae4, 0x0, 0x1);
        gbc.writeMem(0x4243, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd8e3, gbc.sp());
        EXPECT(0x4244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0321
        gbc.setState(0x278d, 0x3904, 0x19a0, 0x5610, 0x704a, 0x75c4, 0x0, 0x1);
        gbc.writeMem(0x278d, { 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3904, gbc.sp());
        EXPECT(0x278e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0322
        gbc.setState(0x2ecb, 0x8ba3, 0x3a30, 0xec0, 0x7481, 0xb74e, 0x0, 0x0);
        gbc.writeMem(0x2ecb, { 0xa4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8ba3, gbc.sp());
        EXPECT(0x2ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0323
        gbc.setState(0xdd96, 0x497e, 0xfa80, 0x97b9, 0xfe56, 0xc720, 0x1, 0x0);
        gbc.writeMem(0xdd96, { 0xa4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x497e, gbc.sp());
        EXPECT(0xdd97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdd96));
        // A4 0324
        gbc.setState(0x99bc, 0x11e2, 0x2a50, 0x42c3, 0xb8e9, 0xfa64, 0x0, 0x1);
        gbc.writeMem(0x99bc, { 0xa4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x11e2, gbc.sp());
        EXPECT(0x99bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x99bc));
        // A4 0325
        gbc.setState(0x1ec9, 0x3a90, 0x3330, 0xda47, 0x6e6a, 0xea11, 0x0, 0x1);
        gbc.writeMem(0x1ec9, { 0xa4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3a90, gbc.sp());
        EXPECT(0x1eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0326
        gbc.setState(0x7bc6, 0xa426, 0x72f0, 0x9672, 0x1cb1, 0x973f, 0x1, 0x1);
        gbc.writeMem(0x7bc6, { 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa426, gbc.sp());
        EXPECT(0x7bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0327
        gbc.setState(0x6f5f, 0x7612, 0x8880, 0x683, 0xec28, 0x51d4, 0x0, 0x1);
        gbc.writeMem(0x6f5f, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7612, gbc.sp());
        EXPECT(0x6f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0328
        gbc.setState(0x179, 0xe2c0, 0x7350, 0x70e3, 0x378a, 0x52dd, 0x1, 0x0);
        gbc.writeMem(0x179, { 0xa4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe2c0, gbc.sp());
        EXPECT(0x17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0329
        gbc.setState(0xb638, 0xa614, 0x48d0, 0x350a, 0x7f3a, 0xf8e, 0x0, 0x1);
        gbc.writeMem(0xb638, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa614, gbc.sp());
        EXPECT(0xb639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb638));
        // A4 032A
        gbc.setState(0x3806, 0x7e46, 0x8960, 0xb0e4, 0xe326, 0x81ab, 0x0, 0x1);
        gbc.writeMem(0x3806, { 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7e46, gbc.sp());
        EXPECT(0x3807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 032B
        gbc.setState(0x2f4c, 0xf767, 0x5e00, 0x555d, 0x28b6, 0x5644, 0x0, 0x0);
        gbc.writeMem(0x2f4c, { 0xa4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf767, gbc.sp());
        EXPECT(0x2f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 032C
        gbc.setState(0xab18, 0xd301, 0x1140, 0x3149, 0x6636, 0x9fe8, 0x1, 0x0);
        gbc.writeMem(0xab18, { 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd301, gbc.sp());
        EXPECT(0xab19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xab18));
        // A4 032D
        gbc.setState(0xce13, 0x3e2b, 0x8790, 0xc76e, 0x7e62, 0xd02f, 0x1, 0x0);
        gbc.writeMem(0xce13, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3e2b, gbc.sp());
        EXPECT(0xce14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xce13));
        // A4 032E
        gbc.setState(0x6501, 0x369b, 0xa7a0, 0xfc42, 0x21d6, 0x1cc6, 0x0, 0x1);
        gbc.writeMem(0x6501, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x369b, gbc.sp());
        EXPECT(0x6502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 032F
        gbc.setState(0x46b7, 0x4f0e, 0xf760, 0x9f96, 0x2458, 0x8f21, 0x1, 0x0);
        gbc.writeMem(0x46b7, { 0xa4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4f0e, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0330
        gbc.setState(0xc237, 0x33aa, 0xeb30, 0x3efa, 0xb4d5, 0x5e63, 0x0, 0x0);
        gbc.writeMem(0xc237, { 0xa4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x33aa, gbc.sp());
        EXPECT(0xc238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc237));
        // A4 0331
        gbc.setState(0x2c55, 0x5190, 0x7080, 0xbcf2, 0xcd22, 0xa627, 0x0, 0x1);
        gbc.writeMem(0x2c55, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5190, gbc.sp());
        EXPECT(0x2c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0332
        gbc.setState(0x315c, 0x9eaa, 0x81e0, 0xe731, 0xefb, 0x6706, 0x0, 0x1);
        gbc.writeMem(0x315c, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9eaa, gbc.sp());
        EXPECT(0x315d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0333
        gbc.setState(0x3fc2, 0xccd1, 0xeed0, 0x8afc, 0x1afa, 0xc50b, 0x0, 0x1);
        gbc.writeMem(0x3fc2, { 0xa4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xccd1, gbc.sp());
        EXPECT(0x3fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0334
        gbc.setState(0x1ba4, 0x2a12, 0x9f50, 0xbb95, 0x7ea, 0xb1a0, 0x0, 0x1);
        gbc.writeMem(0x1ba4, { 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2a12, gbc.sp());
        EXPECT(0x1ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0335
        gbc.setState(0xb950, 0xd5a8, 0x66c0, 0xa54b, 0xa13c, 0x472f, 0x0, 0x0);
        gbc.writeMem(0xb950, { 0xa4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd5a8, gbc.sp());
        EXPECT(0xb951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb950));
        // A4 0336
        gbc.setState(0xbedc, 0x2974, 0xebe0, 0x9e7e, 0x4890, 0x59b2, 0x1, 0x1);
        gbc.writeMem(0xbedc, { 0xa4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2974, gbc.sp());
        EXPECT(0xbedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbedc));
        // A4 0338
        gbc.setState(0xd606, 0x848b, 0x7440, 0xdcc6, 0xdcff, 0x162f, 0x1, 0x0);
        gbc.writeMem(0xd606, { 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x848b, gbc.sp());
        EXPECT(0xd607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd606));
        // A4 0339
        gbc.setState(0x6482, 0x7a8c, 0x8b10, 0xc6a, 0x95e9, 0x96ec, 0x0, 0x0);
        gbc.writeMem(0x6482, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7a8c, gbc.sp());
        EXPECT(0x6483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 033A
        gbc.setState(0x8ec, 0xdc71, 0x8720, 0xaff6, 0x9224, 0x7ca8, 0x1, 0x0);
        gbc.writeMem(0x8ec, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdc71, gbc.sp());
        EXPECT(0x8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 033B
        gbc.setState(0x18c6, 0xf535, 0x1030, 0x7cf, 0x243e, 0x1b6a, 0x1, 0x1);
        gbc.writeMem(0x18c6, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf535, gbc.sp());
        EXPECT(0x18c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 033C
        gbc.setState(0x92bc, 0x5708, 0xc950, 0x4bb7, 0x3fe0, 0x1a2a, 0x1, 0x0);
        gbc.writeMem(0x92bc, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5708, gbc.sp());
        EXPECT(0x92bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x92bc));
        // A4 033E
        gbc.setState(0xbf5d, 0xe5ef, 0xc90, 0xc1db, 0x27d3, 0xc913, 0x0, 0x1);
        gbc.writeMem(0xbf5d, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe5ef, gbc.sp());
        EXPECT(0xbf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbf5d));
        // A4 033F
        gbc.setState(0x65eb, 0x35dd, 0x96d0, 0xae91, 0x4507, 0x72cc, 0x1, 0x0);
        gbc.writeMem(0x65eb, { 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x35dd, gbc.sp());
        EXPECT(0x65ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0340
        gbc.setState(0xb330, 0x68ce, 0xabb0, 0xc785, 0xcb81, 0x2b2b, 0x1, 0x0);
        gbc.writeMem(0xb330, { 0xa4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x68ce, gbc.sp());
        EXPECT(0xb331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb330));
        // A4 0341
        gbc.setState(0x6cb6, 0xf324, 0x7590, 0x7de4, 0xcf01, 0xdc22, 0x0, 0x1);
        gbc.writeMem(0x6cb6, { 0xa4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf324, gbc.sp());
        EXPECT(0x6cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0342
        gbc.setState(0x4a71, 0x6e75, 0x2d80, 0x45ca, 0xa6f6, 0x2ace, 0x0, 0x1);
        gbc.writeMem(0x4a71, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6e75, gbc.sp());
        EXPECT(0x4a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0343
        gbc.setState(0x3c45, 0x21fc, 0xf080, 0xc8e0, 0x51b4, 0xc62c, 0x0, 0x1);
        gbc.writeMem(0x3c45, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x21fc, gbc.sp());
        EXPECT(0x3c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0344
        gbc.setState(0xd1ae, 0xd55c, 0x3520, 0xe75d, 0xbfe2, 0x49fa, 0x0, 0x0);
        gbc.writeMem(0xd1ae, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd55c, gbc.sp());
        EXPECT(0xd1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd1ae));
        // A4 0345
        gbc.setState(0x1053, 0x6e7f, 0xf860, 0x65ef, 0x7c73, 0xf920, 0x0, 0x0);
        gbc.writeMem(0x1053, { 0xa4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6e7f, gbc.sp());
        EXPECT(0x1054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0346
        gbc.setState(0xfed, 0xa7f6, 0xce40, 0x6a0b, 0xf1dc, 0x421b, 0x0, 0x0);
        gbc.writeMem(0xfed, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa7f6, gbc.sp());
        EXPECT(0xfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0347
        gbc.setState(0xdf2b, 0x6b8c, 0xa280, 0x9e7a, 0x3fa7, 0x5cd0, 0x0, 0x1);
        gbc.writeMem(0xdf2b, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6b8c, gbc.sp());
        EXPECT(0xdf2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdf2b));
        // A4 0348
        gbc.setState(0x217a, 0x7a24, 0xbf70, 0x2f35, 0x1f0d, 0xcfc3, 0x0, 0x0);
        gbc.writeMem(0x217a, { 0xa4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7a24, gbc.sp());
        EXPECT(0x217b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0349
        gbc.setState(0x6339, 0x82fe, 0x62e0, 0x560c, 0x79cc, 0x53b8, 0x0, 0x0);
        gbc.writeMem(0x6339, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x82fe, gbc.sp());
        EXPECT(0x633a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 034A
        gbc.setState(0xcb49, 0xd06b, 0xd890, 0x6ce, 0xc4b0, 0xce16, 0x1, 0x0);
        gbc.writeMem(0xcb49, { 0xa4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd06b, gbc.sp());
        EXPECT(0xcb4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcb49));
        // A4 034B
        gbc.setState(0xb54d, 0x98de, 0x2380, 0x603c, 0x6daa, 0x9dfa, 0x1, 0x1);
        gbc.writeMem(0xb54d, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x98de, gbc.sp());
        EXPECT(0xb54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb54d));
        // A4 034C
        gbc.setState(0x3f8b, 0x6d0c, 0xc220, 0xf6e, 0xbd0b, 0xae91, 0x0, 0x1);
        gbc.writeMem(0x3f8b, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6d0c, gbc.sp());
        EXPECT(0x3f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 034D
        gbc.setState(0x535b, 0x2610, 0xf610, 0x33e6, 0x507a, 0xbb27, 0x0, 0x0);
        gbc.writeMem(0x535b, { 0xa4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2610, gbc.sp());
        EXPECT(0x535c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 034E
        gbc.setState(0xe418, 0x9c14, 0x40a0, 0xa57b, 0xcafe, 0xf0be, 0x0, 0x0);
        gbc.writeMem(0xe418, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9c14, gbc.sp());
        EXPECT(0xe419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe418));
        // A4 034F
        gbc.setState(0xbd37, 0xe017, 0x7850, 0x992d, 0x5af4, 0xb05c, 0x0, 0x0);
        gbc.writeMem(0xbd37, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe017, gbc.sp());
        EXPECT(0xbd38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbd37));
        // A4 0350
        gbc.setState(0x16b5, 0x9f9, 0xc100, 0xffa6, 0x80f5, 0x9d9a, 0x0, 0x1);
        gbc.writeMem(0x16b5, { 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9f9, gbc.sp());
        EXPECT(0x16b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0351
        gbc.setState(0xe110, 0x900a, 0xc1f0, 0x1dc0, 0xebd6, 0x9e5b, 0x1, 0x0);
        gbc.writeMem(0xe110, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x900a, gbc.sp());
        EXPECT(0xe111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe110));
        // A4 0352
        gbc.setState(0x199e, 0xf3a5, 0xfad0, 0xc721, 0xf7ed, 0x1855, 0x0, 0x0);
        gbc.writeMem(0x199e, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf3a5, gbc.sp());
        EXPECT(0x199f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0353
        gbc.setState(0x9a8d, 0xd514, 0x5f30, 0x1db6, 0x79cd, 0x11df, 0x0, 0x0);
        gbc.writeMem(0x9a8d, { 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd514, gbc.sp());
        EXPECT(0x9a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9a8d));
        // A4 0355
        gbc.setState(0x4f5d, 0xeff8, 0x47d0, 0x796, 0x8f72, 0x8e07, 0x0, 0x0);
        gbc.writeMem(0x4f5d, { 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xeff8, gbc.sp());
        EXPECT(0x4f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0356
        gbc.setState(0x195a, 0xb0ca, 0x7490, 0x293e, 0x1627, 0xfea0, 0x0, 0x1);
        gbc.writeMem(0x195a, { 0xa4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb0ca, gbc.sp());
        EXPECT(0x195b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0357
        gbc.setState(0xd015, 0x7595, 0x17e0, 0xc337, 0x484b, 0xc8f, 0x0, 0x1);
        gbc.writeMem(0xd015, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7595, gbc.sp());
        EXPECT(0xd016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd015));
        // A4 0358
        gbc.setState(0x9408, 0xf927, 0xba10, 0x236d, 0x2e13, 0x6249, 0x1, 0x1);
        gbc.writeMem(0x9408, { 0xa4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf927, gbc.sp());
        EXPECT(0x9409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9408));
        // A4 0359
        gbc.setState(0x8d1e, 0x5269, 0x25d0, 0xc8e0, 0xb12b, 0x912, 0x1, 0x1);
        gbc.writeMem(0x8d1e, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5269, gbc.sp());
        EXPECT(0x8d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8d1e));
        // A4 035A
        gbc.setState(0x828c, 0x105e, 0xf0, 0xd5aa, 0xb040, 0xa4e4, 0x1, 0x1);
        gbc.writeMem(0x828c, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x105e, gbc.sp());
        EXPECT(0x828d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x828c));
        // A4 035B
        gbc.setState(0xcc35, 0x261b, 0xc630, 0x33f4, 0x94b8, 0x6fcc, 0x0, 0x1);
        gbc.writeMem(0xcc35, { 0xa4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x261b, gbc.sp());
        EXPECT(0xcc36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcc35));
        // A4 035C
        gbc.setState(0x63dd, 0x8063, 0x4160, 0x97d5, 0x4be5, 0xcc00, 0x0, 0x1);
        gbc.writeMem(0x63dd, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8063, gbc.sp());
        EXPECT(0x63de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 035D
        gbc.setState(0xa86e, 0x7a7d, 0xcd10, 0x8566, 0xc3cd, 0xbef7, 0x0, 0x0);
        gbc.writeMem(0xa86e, { 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7a7d, gbc.sp());
        EXPECT(0xa86f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa86e));
        // A4 035E
        gbc.setState(0xbe2b, 0x65f1, 0x48d0, 0xb26b, 0x895b, 0xc416, 0x1, 0x1);
        gbc.writeMem(0xbe2b, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x65f1, gbc.sp());
        EXPECT(0xbe2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbe2b));
        // A4 035F
        gbc.setState(0x32dc, 0xc880, 0x3310, 0xc160, 0xa551, 0xd526, 0x1, 0x1);
        gbc.writeMem(0x32dc, { 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc880, gbc.sp());
        EXPECT(0x32dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0360
        gbc.setState(0x531, 0x8ff5, 0x7e50, 0x883d, 0x1c8e, 0xc2c3, 0x0, 0x1);
        gbc.writeMem(0x531, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8ff5, gbc.sp());
        EXPECT(0x532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0361
        gbc.setState(0x723c, 0xc9fc, 0x5310, 0x6cbb, 0x4dbd, 0xdd40, 0x1, 0x0);
        gbc.writeMem(0x723c, { 0xa4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc9fc, gbc.sp());
        EXPECT(0x723d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0362
        gbc.setState(0xad40, 0x7e5, 0x9120, 0x6a5b, 0xe1e2, 0x938e, 0x0, 0x0);
        gbc.writeMem(0xad40, { 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7e5, gbc.sp());
        EXPECT(0xad41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xad40));
        // A4 0363
        gbc.setState(0x7413, 0x6c06, 0x8350, 0x5034, 0x5bd5, 0x2ed7, 0x0, 0x0);
        gbc.writeMem(0x7413, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6c06, gbc.sp());
        EXPECT(0x7414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0364
        gbc.setState(0x715a, 0x60d3, 0xa9a0, 0x95d0, 0x2665, 0xd155, 0x0, 0x1);
        gbc.writeMem(0x715a, { 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x60d3, gbc.sp());
        EXPECT(0x715b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0365
        gbc.setState(0xef96, 0x38b4, 0xd950, 0x1f4f, 0x2ddd, 0x7bec, 0x0, 0x1);
        gbc.writeMem(0xef96, { 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x38b4, gbc.sp());
        EXPECT(0xef97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xef96));
        // A4 0366
        gbc.setState(0x971c, 0xc190, 0x65f0, 0x8b2f, 0x7eb8, 0xaa7d, 0x1, 0x0);
        gbc.writeMem(0x971c, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc190, gbc.sp());
        EXPECT(0x971d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x971c));
        // A4 0367
        gbc.setState(0xb5b2, 0xc049, 0xc200, 0xd559, 0x9da7, 0x5664, 0x0, 0x1);
        gbc.writeMem(0xb5b2, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc049, gbc.sp());
        EXPECT(0xb5b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb5b2));
        // A4 0368
        gbc.setState(0xceae, 0xa4a9, 0xc9f0, 0xdcaf, 0xf931, 0xc7fe, 0x0, 0x0);
        gbc.writeMem(0xceae, { 0xa4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa4a9, gbc.sp());
        EXPECT(0xceaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xceae));
        // A4 0369
        gbc.setState(0xd1ad, 0x41e8, 0x3ad0, 0xcab6, 0x600, 0xf7c8, 0x0, 0x0);
        gbc.writeMem(0xd1ad, { 0xa4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x41e8, gbc.sp());
        EXPECT(0xd1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd1ad));
        // A4 036A
        gbc.setState(0x8d5c, 0x5b8d, 0xbd10, 0xed6d, 0xeb7, 0x6a3, 0x1, 0x0);
        gbc.writeMem(0x8d5c, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5b8d, gbc.sp());
        EXPECT(0x8d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8d5c));
        // A4 036B
        gbc.setState(0x80d5, 0x6831, 0x6440, 0x36d, 0x4fe6, 0x329b, 0x1, 0x0);
        gbc.writeMem(0x80d5, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6831, gbc.sp());
        EXPECT(0x80d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x80d5));
        // A4 036C
        gbc.setState(0x98c0, 0xfb2a, 0xdb70, 0xebd5, 0x2a82, 0x88c9, 0x1, 0x1);
        gbc.writeMem(0x98c0, { 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfb2a, gbc.sp());
        EXPECT(0x98c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x98c0));
        // A4 036D
        gbc.setState(0xb9e5, 0x34eb, 0x6e70, 0x81c6, 0xfa44, 0x628d, 0x0, 0x0);
        gbc.writeMem(0xb9e5, { 0xa4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x34eb, gbc.sp());
        EXPECT(0xb9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb9e5));
        // A4 036E
        gbc.setState(0xd5a1, 0xf73d, 0xec10, 0x15c, 0x781f, 0x4b76, 0x0, 0x0);
        gbc.writeMem(0xd5a1, { 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf73d, gbc.sp());
        EXPECT(0xd5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd5a1));
        // A4 036F
        gbc.setState(0x6ca, 0xe62f, 0xdec0, 0x5f97, 0x4b13, 0xfc73, 0x1, 0x1);
        gbc.writeMem(0x6ca, { 0xa4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe62f, gbc.sp());
        EXPECT(0x6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0370
        gbc.setState(0x9bcb, 0x5930, 0x8570, 0xb75d, 0x1bf, 0x9ee2, 0x0, 0x0);
        gbc.writeMem(0x9bcb, { 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5930, gbc.sp());
        EXPECT(0x9bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9bcb));
        // A4 0371
        gbc.setState(0xeb86, 0xf089, 0xbc80, 0xa3fe, 0xac09, 0x576d, 0x1, 0x0);
        gbc.writeMem(0xeb86, { 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf089, gbc.sp());
        EXPECT(0xeb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xeb86));
        // A4 0372
        gbc.setState(0xcaa8, 0x23a9, 0x9500, 0x800a, 0x9d5e, 0x6d58, 0x0, 0x1);
        gbc.writeMem(0xcaa8, { 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x23a9, gbc.sp());
        EXPECT(0xcaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcaa8));
        // A4 0373
        gbc.setState(0x5ac7, 0x5a3e, 0x6e0, 0x490a, 0x9884, 0xe62a, 0x0, 0x1);
        gbc.writeMem(0x5ac7, { 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5a3e, gbc.sp());
        EXPECT(0x5ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0374
        gbc.setState(0xe043, 0x6fbf, 0x2100, 0xa198, 0xa012, 0xcff0, 0x1, 0x0);
        gbc.writeMem(0xe043, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6fbf, gbc.sp());
        EXPECT(0xe044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe043));
        // A4 0375
        gbc.setState(0x1c2, 0x8515, 0xbfc0, 0x2235, 0x83e4, 0x4448, 0x1, 0x1);
        gbc.writeMem(0x1c2, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8515, gbc.sp());
        EXPECT(0x1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0376
        gbc.setState(0x628c, 0xee71, 0xf100, 0xf1bd, 0x307f, 0xe27c, 0x0, 0x0);
        gbc.writeMem(0x628c, { 0xa4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xee71, gbc.sp());
        EXPECT(0x628d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0377
        gbc.setState(0xebb7, 0x1bb6, 0xefc0, 0x4558, 0x7a52, 0x49fc, 0x1, 0x0);
        gbc.writeMem(0xebb7, { 0xa4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1bb6, gbc.sp());
        EXPECT(0xebb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xebb7));
        // A4 0378
        gbc.setState(0x9afb, 0x4fa2, 0xf050, 0x120d, 0x9b8d, 0x2262, 0x1, 0x0);
        gbc.writeMem(0x9afb, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4fa2, gbc.sp());
        EXPECT(0x9afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9afb));
        // A4 0379
        gbc.setState(0x4799, 0x2359, 0x9730, 0x8aa9, 0xa88, 0xa092, 0x1, 0x1);
        gbc.writeMem(0x4799, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2359, gbc.sp());
        EXPECT(0x479a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 037A
        gbc.setState(0x38d3, 0xb246, 0x4e00, 0x23b, 0x55e6, 0xace2, 0x1, 0x0);
        gbc.writeMem(0x38d3, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb246, gbc.sp());
        EXPECT(0x38d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 037B
        gbc.setState(0x1284, 0xf17d, 0xd950, 0x95a1, 0xa11d, 0xdbb2, 0x1, 0x0);
        gbc.writeMem(0x1284, { 0xa4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf17d, gbc.sp());
        EXPECT(0x1285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 037C
        gbc.setState(0x6398, 0x6fcb, 0x4970, 0x39b9, 0x65b2, 0x9887, 0x0, 0x1);
        gbc.writeMem(0x6398, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6fcb, gbc.sp());
        EXPECT(0x6399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 037D
        gbc.setState(0x61bd, 0x3afa, 0x53d0, 0xbd97, 0xf0c3, 0xcb1f, 0x1, 0x1);
        gbc.writeMem(0x61bd, { 0xa4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3afa, gbc.sp());
        EXPECT(0x61be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 037E
        gbc.setState(0x8484, 0xfd50, 0x62a0, 0xf4c0, 0xe8f0, 0xf883, 0x1, 0x1);
        gbc.writeMem(0x8484, { 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfd50, gbc.sp());
        EXPECT(0x8485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8484));
        // A4 037F
        gbc.setState(0x1b40, 0x1e11, 0xedd0, 0x710b, 0x7003, 0x9bdd, 0x0, 0x0);
        gbc.writeMem(0x1b40, { 0xa4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1e11, gbc.sp());
        EXPECT(0x1b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0380
        gbc.setState(0x685a, 0x51a6, 0x1a20, 0xd4cc, 0xaab, 0x5d1c, 0x1, 0x1);
        gbc.writeMem(0x685a, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x51a6, gbc.sp());
        EXPECT(0x685b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0381
        gbc.setState(0xa46f, 0x7fa1, 0x24b0, 0x8154, 0x5e5b, 0xc292, 0x1, 0x0);
        gbc.writeMem(0xa46f, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7fa1, gbc.sp());
        EXPECT(0xa470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa46f));
        // A4 0382
        gbc.setState(0xbb34, 0xef5f, 0xef90, 0xb38b, 0xd3, 0x86e7, 0x0, 0x1);
        gbc.writeMem(0xbb34, { 0xa4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xef5f, gbc.sp());
        EXPECT(0xbb35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbb34));
        // A4 0383
        gbc.setState(0x3919, 0xa075, 0xc360, 0x4d05, 0xc9cf, 0x6d81, 0x1, 0x0);
        gbc.writeMem(0x3919, { 0xa4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa075, gbc.sp());
        EXPECT(0x391a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0384
        gbc.setState(0xa208, 0x9c62, 0x5340, 0x246e, 0x58fa, 0x53b0, 0x0, 0x0);
        gbc.writeMem(0xa208, { 0xa4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9c62, gbc.sp());
        EXPECT(0xa209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa208));
        // A4 0385
        gbc.setState(0x4c29, 0x7486, 0x5480, 0x2106, 0xe8a6, 0xb45c, 0x0, 0x1);
        gbc.writeMem(0x4c29, { 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7486, gbc.sp());
        EXPECT(0x4c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0386
        gbc.setState(0x711f, 0x8281, 0xc030, 0xae7d, 0x34c3, 0xc2e3, 0x1, 0x0);
        gbc.writeMem(0x711f, { 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8281, gbc.sp());
        EXPECT(0x7120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0388
        gbc.setState(0x14ec, 0xe09c, 0xbcf0, 0xffbe, 0x4e6a, 0x45d7, 0x0, 0x0);
        gbc.writeMem(0x14ec, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe09c, gbc.sp());
        EXPECT(0x14ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0389
        gbc.setState(0xbd8c, 0x401b, 0x9c80, 0xa970, 0x57d7, 0x2124, 0x0, 0x0);
        gbc.writeMem(0xbd8c, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x401b, gbc.sp());
        EXPECT(0xbd8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbd8c));
        // A4 038A
        gbc.setState(0x2e66, 0xf066, 0xfa50, 0x4989, 0x8c7, 0x77f5, 0x1, 0x0);
        gbc.writeMem(0x2e66, { 0xa4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf066, gbc.sp());
        EXPECT(0x2e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 038B
        gbc.setState(0xef42, 0x40c7, 0xd1e0, 0xeee7, 0x8480, 0x895, 0x1, 0x1);
        gbc.writeMem(0xef42, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x40c7, gbc.sp());
        EXPECT(0xef43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xef42));
        // A4 038C
        gbc.setState(0x85bd, 0x509c, 0x5d90, 0x3fe6, 0xe81b, 0xb799, 0x0, 0x1);
        gbc.writeMem(0x85bd, { 0xa4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x509c, gbc.sp());
        EXPECT(0x85be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x85bd));
        // A4 038D
        gbc.setState(0x52f8, 0x6a79, 0xb300, 0xcd2d, 0x556e, 0x2f2b, 0x1, 0x0);
        gbc.writeMem(0x52f8, { 0xa4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6a79, gbc.sp());
        EXPECT(0x52f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 038E
        gbc.setState(0x52e2, 0x374b, 0x5030, 0xf611, 0x9939, 0xeb37, 0x1, 0x1);
        gbc.writeMem(0x52e2, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x374b, gbc.sp());
        EXPECT(0x52e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 038F
        gbc.setState(0xb555, 0x1066, 0x6cc0, 0xfed1, 0xbe9a, 0x1c0b, 0x0, 0x0);
        gbc.writeMem(0xb555, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1066, gbc.sp());
        EXPECT(0xb556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb555));
        // A4 0391
        gbc.setState(0x7b9a, 0xfb33, 0xae30, 0x5c97, 0xf647, 0x7051, 0x1, 0x1);
        gbc.writeMem(0x7b9a, { 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfb33, gbc.sp());
        EXPECT(0x7b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0392
        gbc.setState(0xdd4, 0x514b, 0x4260, 0xcfe8, 0x627e, 0x9a81, 0x1, 0x1);
        gbc.writeMem(0xdd4, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x514b, gbc.sp());
        EXPECT(0xdd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0393
        gbc.setState(0x32a4, 0xaf80, 0x1910, 0x921b, 0x8aa0, 0xaa10, 0x1, 0x0);
        gbc.writeMem(0x32a4, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xaf80, gbc.sp());
        EXPECT(0x32a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0394
        gbc.setState(0xa5f8, 0xba11, 0xa760, 0x9225, 0x395d, 0xebbd, 0x0, 0x0);
        gbc.writeMem(0xa5f8, { 0xa4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xba11, gbc.sp());
        EXPECT(0xa5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa5f8));
        // A4 0395
        gbc.setState(0x632b, 0xe439, 0x2e30, 0xbd65, 0x8fb2, 0xfb7e, 0x1, 0x1);
        gbc.writeMem(0x632b, { 0xa4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe439, gbc.sp());
        EXPECT(0x632c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0396
        gbc.setState(0x34df, 0xf197, 0x1d10, 0xdcd0, 0x2181, 0x8b53, 0x1, 0x1);
        gbc.writeMem(0x34df, { 0xa4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf197, gbc.sp());
        EXPECT(0x34e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0397
        gbc.setState(0x71d9, 0x59a1, 0xb7a0, 0x847d, 0xc87a, 0x4ce9, 0x1, 0x1);
        gbc.writeMem(0x71d9, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x59a1, gbc.sp());
        EXPECT(0x71da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0398
        gbc.setState(0x4fb7, 0x3b3f, 0x5950, 0xb6e7, 0xa325, 0xa9e7, 0x1, 0x1);
        gbc.writeMem(0x4fb7, { 0xa4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3b3f, gbc.sp());
        EXPECT(0x4fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 0399
        gbc.setState(0x410d, 0x3eb4, 0x4d90, 0x5370, 0x7639, 0x1e7, 0x0, 0x0);
        gbc.writeMem(0x410d, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3eb4, gbc.sp());
        EXPECT(0x410e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 039A
        gbc.setState(0x884e, 0x5d1e, 0xabb0, 0x7f7e, 0x1d15, 0xf4bf, 0x1, 0x0);
        gbc.writeMem(0x884e, { 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5d1e, gbc.sp());
        EXPECT(0x884f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x884e));
        // A4 039B
        gbc.setState(0xbc8a, 0xa171, 0xc740, 0x9592, 0xbbd9, 0xf31e, 0x1, 0x0);
        gbc.writeMem(0xbc8a, { 0xa4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa171, gbc.sp());
        EXPECT(0xbc8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbc8a));
        // A4 039C
        gbc.setState(0xe27d, 0x413f, 0xba40, 0x2192, 0x2e4d, 0xeb71, 0x0, 0x0);
        gbc.writeMem(0xe27d, { 0xa4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x413f, gbc.sp());
        EXPECT(0xe27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe27d));
        // A4 039D
        gbc.setState(0xc97, 0xfbaa, 0x7e60, 0x5fcb, 0x9eea, 0x3de4, 0x1, 0x1);
        gbc.writeMem(0xc97, { 0xa4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfbaa, gbc.sp());
        EXPECT(0xc98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 039E
        gbc.setState(0xafa4, 0xb58e, 0x5be0, 0x5835, 0xe06b, 0x6614, 0x0, 0x1);
        gbc.writeMem(0xafa4, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb58e, gbc.sp());
        EXPECT(0xafa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xafa4));
        // A4 03A0
        gbc.setState(0x2055, 0x30f1, 0x9e40, 0x68ed, 0xc1d4, 0x3631, 0x0, 0x1);
        gbc.writeMem(0x2055, { 0xa4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x30f1, gbc.sp());
        EXPECT(0x2056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03A1
        gbc.setState(0xa7a6, 0x9703, 0x9310, 0x441d, 0x5363, 0x54c4, 0x0, 0x1);
        gbc.writeMem(0xa7a6, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9703, gbc.sp());
        EXPECT(0xa7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa7a6));
        // A4 03A2
        gbc.setState(0x4767, 0x75ba, 0x88b0, 0x560e, 0xc02f, 0x774d, 0x0, 0x0);
        gbc.writeMem(0x4767, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x75ba, gbc.sp());
        EXPECT(0x4768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03A4
        gbc.setState(0x7107, 0xf254, 0xe960, 0x2e0f, 0xfaf3, 0xe533, 0x1, 0x1);
        gbc.writeMem(0x7107, { 0xa4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf254, gbc.sp());
        EXPECT(0x7108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03A5
        gbc.setState(0xc7ad, 0x9453, 0x1a0, 0xa132, 0xc5b9, 0xf65a, 0x0, 0x0);
        gbc.writeMem(0xc7ad, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9453, gbc.sp());
        EXPECT(0xc7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc7ad));
        // A4 03A7
        gbc.setState(0xca23, 0xfa7, 0xf3e0, 0x822a, 0xb77f, 0xb382, 0x0, 0x0);
        gbc.writeMem(0xca23, { 0xa4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfa7, gbc.sp());
        EXPECT(0xca24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xca23));
        // A4 03A8
        gbc.setState(0xe8ca, 0x4e21, 0xaf00, 0x461, 0xea10, 0x2bea, 0x0, 0x1);
        gbc.writeMem(0xe8ca, { 0xa4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4e21, gbc.sp());
        EXPECT(0xe8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe8ca));
        // A4 03A9
        gbc.setState(0x848a, 0x957c, 0xc20, 0xef71, 0xa251, 0x9f9b, 0x0, 0x1);
        gbc.writeMem(0x848a, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x957c, gbc.sp());
        EXPECT(0x848b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x848a));
        // A4 03AB
        gbc.setState(0xa2ac, 0x57fb, 0x6040, 0x12ee, 0x6665, 0xeb28, 0x0, 0x1);
        gbc.writeMem(0xa2ac, { 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x57fb, gbc.sp());
        EXPECT(0xa2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa2ac));
        // A4 03AC
        gbc.setState(0x7a7c, 0xa2b7, 0xd170, 0xb04d, 0xab11, 0x7c51, 0x0, 0x0);
        gbc.writeMem(0x7a7c, { 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa2b7, gbc.sp());
        EXPECT(0x7a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03AD
        gbc.setState(0x80e4, 0xbce9, 0x92c0, 0x7172, 0xa238, 0x4476, 0x0, 0x1);
        gbc.writeMem(0x80e4, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbce9, gbc.sp());
        EXPECT(0x80e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x80e4));
        // A4 03AE
        gbc.setState(0x3202, 0xe6c3, 0x94e0, 0x7ca1, 0xce7a, 0xf1ae, 0x1, 0x1);
        gbc.writeMem(0x3202, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe6c3, gbc.sp());
        EXPECT(0x3203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03AF
        gbc.setState(0xd0f, 0xbf2f, 0xf320, 0x5473, 0x1d01, 0xa1c3, 0x1, 0x1);
        gbc.writeMem(0xd0f, { 0xa4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbf2f, gbc.sp());
        EXPECT(0xd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03B0
        gbc.setState(0xdf05, 0x7ca4, 0xe310, 0x5fb2, 0xa48c, 0x39ee, 0x1, 0x0);
        gbc.writeMem(0xdf05, { 0xa4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7ca4, gbc.sp());
        EXPECT(0xdf06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdf05));
        // A4 03B2
        gbc.setState(0x2b8f, 0xdedf, 0x71d0, 0x3136, 0x70b1, 0x85e9, 0x0, 0x0);
        gbc.writeMem(0x2b8f, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdedf, gbc.sp());
        EXPECT(0x2b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03B3
        gbc.setState(0x9062, 0x6a1a, 0x8ac0, 0xddc2, 0x1160, 0x93d4, 0x0, 0x0);
        gbc.writeMem(0x9062, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6a1a, gbc.sp());
        EXPECT(0x9063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9062));
        // A4 03B4
        gbc.setState(0x82c6, 0x473d, 0xcc90, 0xe834, 0x4492, 0x8b7a, 0x1, 0x1);
        gbc.writeMem(0x82c6, { 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x473d, gbc.sp());
        EXPECT(0x82c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x82c6));
        // A4 03B5
        gbc.setState(0xcd38, 0xf2bd, 0xb590, 0x5af1, 0x8d7f, 0xba83, 0x1, 0x1);
        gbc.writeMem(0xcd38, { 0xa4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf2bd, gbc.sp());
        EXPECT(0xcd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcd38));
        // A4 03B6
        gbc.setState(0x3e23, 0xbe08, 0x8270, 0x69be, 0xd220, 0xe512, 0x1, 0x0);
        gbc.writeMem(0x3e23, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbe08, gbc.sp());
        EXPECT(0x3e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03B7
        gbc.setState(0x96e7, 0x799a, 0x9ab0, 0xc16e, 0xe11a, 0xa027, 0x1, 0x0);
        gbc.writeMem(0x96e7, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x799a, gbc.sp());
        EXPECT(0x96e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x96e7));
        // A4 03B8
        gbc.setState(0x882, 0x38b3, 0x3460, 0x47b1, 0x47a, 0x93b1, 0x0, 0x1);
        gbc.writeMem(0x882, { 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x38b3, gbc.sp());
        EXPECT(0x883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03B9
        gbc.setState(0x3e6b, 0x5741, 0x6990, 0xbe4e, 0xa78f, 0x27b5, 0x0, 0x0);
        gbc.writeMem(0x3e6b, { 0xa4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5741, gbc.sp());
        EXPECT(0x3e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03BA
        gbc.setState(0x1960, 0x2662, 0x8ae0, 0x8897, 0x7c1e, 0x85d4, 0x0, 0x0);
        gbc.writeMem(0x1960, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2662, gbc.sp());
        EXPECT(0x1961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03BB
        gbc.setState(0x7109, 0x54ef, 0x8e0, 0xedf2, 0xfb25, 0x59ee, 0x0, 0x1);
        gbc.writeMem(0x7109, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x54ef, gbc.sp());
        EXPECT(0x710a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03BC
        gbc.setState(0x9b48, 0x9c0a, 0x8e0, 0x67f9, 0x7665, 0x537, 0x1, 0x1);
        gbc.writeMem(0x9b48, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9c0a, gbc.sp());
        EXPECT(0x9b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9b48));
        // A4 03BD
        gbc.setState(0x4a90, 0x5a83, 0xe2b0, 0x3a1, 0xba0, 0x51e3, 0x1, 0x0);
        gbc.writeMem(0x4a90, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5a83, gbc.sp());
        EXPECT(0x4a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03BE
        gbc.setState(0x5a79, 0x3de, 0x6c00, 0x8d2, 0x339a, 0x7721, 0x0, 0x1);
        gbc.writeMem(0x5a79, { 0xa4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3de, gbc.sp());
        EXPECT(0x5a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03BF
        gbc.setState(0x2ad0, 0xd04f, 0xcc60, 0xc5d2, 0x468f, 0xff10, 0x1, 0x0);
        gbc.writeMem(0x2ad0, { 0xa4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd04f, gbc.sp());
        EXPECT(0x2ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03C0
        gbc.setState(0xa29f, 0x3f8f, 0xb7d0, 0x12df, 0xad78, 0x5bb2, 0x1, 0x1);
        gbc.writeMem(0xa29f, { 0xa4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3f8f, gbc.sp());
        EXPECT(0xa2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa29f));
        // A4 03C1
        gbc.setState(0x6fdf, 0x4b7a, 0x7010, 0xf376, 0xa95e, 0xb1be, 0x1, 0x0);
        gbc.writeMem(0x6fdf, { 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4b7a, gbc.sp());
        EXPECT(0x6fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03C2
        gbc.setState(0xa59a, 0x27f9, 0xe350, 0xefc, 0xbcc5, 0xf838, 0x1, 0x1);
        gbc.writeMem(0xa59a, { 0xa4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x27f9, gbc.sp());
        EXPECT(0xa59b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa59a));
        // A4 03C3
        gbc.setState(0x487b, 0xea19, 0x84e0, 0x758f, 0xb407, 0x32b2, 0x0, 0x1);
        gbc.writeMem(0x487b, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xea19, gbc.sp());
        EXPECT(0x487c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03C4
        gbc.setState(0x802b, 0xb1b9, 0xb740, 0x5f6b, 0xa6a1, 0xd354, 0x0, 0x1);
        gbc.writeMem(0x802b, { 0xa4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb1b9, gbc.sp());
        EXPECT(0x802c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x802b));
        // A4 03C5
        gbc.setState(0x82c0, 0xe529, 0x4120, 0xdd6c, 0x2e97, 0x7241, 0x0, 0x1);
        gbc.writeMem(0x82c0, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe529, gbc.sp());
        EXPECT(0x82c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x82c0));
        // A4 03C6
        gbc.setState(0x24dd, 0xe5f4, 0xa50, 0xa0c7, 0x638b, 0x8a7d, 0x1, 0x1);
        gbc.writeMem(0x24dd, { 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe5f4, gbc.sp());
        EXPECT(0x24de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03C7
        gbc.setState(0xa4cf, 0x3731, 0x5100, 0x64d2, 0x35a8, 0xdbc0, 0x0, 0x0);
        gbc.writeMem(0xa4cf, { 0xa4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3731, gbc.sp());
        EXPECT(0xa4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa4cf));
        // A4 03C8
        gbc.setState(0x7795, 0x2126, 0x26f0, 0x2b73, 0x35c4, 0x8d71, 0x0, 0x0);
        gbc.writeMem(0x7795, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2126, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03C9
        gbc.setState(0x875e, 0x642d, 0xb770, 0xd142, 0xf879, 0x9a51, 0x0, 0x1);
        gbc.writeMem(0x875e, { 0xa4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x642d, gbc.sp());
        EXPECT(0x875f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x875e));
        // A4 03CA
        gbc.setState(0x8226, 0x8321, 0x18f0, 0xf6fc, 0x7092, 0x5f6, 0x0, 0x1);
        gbc.writeMem(0x8226, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8321, gbc.sp());
        EXPECT(0x8227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8226));
        // A4 03CB
        gbc.setState(0xcb81, 0x780d, 0xbee0, 0x8a50, 0xabb2, 0xc326, 0x0, 0x1);
        gbc.writeMem(0xcb81, { 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x780d, gbc.sp());
        EXPECT(0xcb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcb81));
        // A4 03CC
        gbc.setState(0x692f, 0xd4d7, 0xbcb0, 0xcd51, 0xc898, 0x803, 0x0, 0x0);
        gbc.writeMem(0x692f, { 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd4d7, gbc.sp());
        EXPECT(0x6930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03CD
        gbc.setState(0x140, 0x36bd, 0x8cc0, 0xd6f3, 0x3bd5, 0xd76c, 0x0, 0x0);
        gbc.writeMem(0x140, { 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x36bd, gbc.sp());
        EXPECT(0x141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03CE
        gbc.setState(0xa352, 0xfaa2, 0x2530, 0xb111, 0x5001, 0x1e70, 0x0, 0x0);
        gbc.writeMem(0xa352, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfaa2, gbc.sp());
        EXPECT(0xa353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa352));
        // A4 03CF
        gbc.setState(0xad7e, 0xeddb, 0x8700, 0xcdd0, 0xfd0, 0xef9b, 0x1, 0x0);
        gbc.writeMem(0xad7e, { 0xa4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeddb, gbc.sp());
        EXPECT(0xad7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xad7e));
        // A4 03D0
        gbc.setState(0x335c, 0x7db3, 0x2e70, 0xed64, 0xbe03, 0xbadf, 0x0, 0x1);
        gbc.writeMem(0x335c, { 0xa4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7db3, gbc.sp());
        EXPECT(0x335d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03D1
        gbc.setState(0x80e9, 0x97dd, 0x4f0, 0x445d, 0xdb77, 0xec91, 0x1, 0x1);
        gbc.writeMem(0x80e9, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x97dd, gbc.sp());
        EXPECT(0x80ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x80e9));
        // A4 03D2
        gbc.setState(0x95d5, 0x20f4, 0x71b0, 0xcef4, 0xb0e1, 0x7300, 0x0, 0x0);
        gbc.writeMem(0x95d5, { 0xa4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x20f4, gbc.sp());
        EXPECT(0x95d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x95d5));
        // A4 03D3
        gbc.setState(0xadc9, 0x2436, 0x4ac0, 0x9103, 0x711f, 0xf703, 0x0, 0x1);
        gbc.writeMem(0xadc9, { 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2436, gbc.sp());
        EXPECT(0xadca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xadc9));
        // A4 03D4
        gbc.setState(0x49bd, 0xc3a3, 0x50a0, 0xd049, 0xffb3, 0x406a, 0x1, 0x0);
        gbc.writeMem(0x49bd, { 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc3a3, gbc.sp());
        EXPECT(0x49be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03D6
        gbc.setState(0xcbfb, 0x557a, 0xaf90, 0xa62f, 0x7d30, 0x7c4e, 0x0, 0x0);
        gbc.writeMem(0xcbfb, { 0xa4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x557a, gbc.sp());
        EXPECT(0xcbfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcbfb));
        // A4 03D7
        gbc.setState(0x8b90, 0xb4ef, 0x3da0, 0x387b, 0xd772, 0x75f4, 0x0, 0x0);
        gbc.writeMem(0x8b90, { 0xa4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb4ef, gbc.sp());
        EXPECT(0x8b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8b90));
        // A4 03D8
        gbc.setState(0x6c28, 0x22e5, 0x2540, 0x4cab, 0x50af, 0xf626, 0x1, 0x1);
        gbc.writeMem(0x6c28, { 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x22e5, gbc.sp());
        EXPECT(0x6c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03D9
        gbc.setState(0x61ac, 0x88b8, 0xf150, 0xfc2b, 0x41db, 0x8e4a, 0x0, 0x1);
        gbc.writeMem(0x61ac, { 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x88b8, gbc.sp());
        EXPECT(0x61ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03DA
        gbc.setState(0x98a0, 0xfd73, 0x3400, 0x9eb3, 0xccaf, 0xf0a, 0x1, 0x1);
        gbc.writeMem(0x98a0, { 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfd73, gbc.sp());
        EXPECT(0x98a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x98a0));
        // A4 03DB
        gbc.setState(0x2974, 0x126c, 0x9ca0, 0x624e, 0xc50, 0xf00, 0x1, 0x0);
        gbc.writeMem(0x2974, { 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x126c, gbc.sp());
        EXPECT(0x2975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03DC
        gbc.setState(0xd358, 0x25ab, 0x690, 0x14f9, 0x1fdb, 0x591e, 0x1, 0x0);
        gbc.writeMem(0xd358, { 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x25ab, gbc.sp());
        EXPECT(0xd359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd358));
        // A4 03DD
        gbc.setState(0x1a9b, 0x599c, 0xafb0, 0xed9, 0x2f36, 0x8ae2, 0x1, 0x1);
        gbc.writeMem(0x1a9b, { 0xa4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x599c, gbc.sp());
        EXPECT(0x1a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03DE
        gbc.setState(0xc931, 0xfb66, 0x9220, 0x46e6, 0xa690, 0xb192, 0x1, 0x1);
        gbc.writeMem(0xc931, { 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfb66, gbc.sp());
        EXPECT(0xc932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc931));
        // A4 03DF
        gbc.setState(0xb8f2, 0xc21d, 0x6df0, 0xa604, 0xf68e, 0xb9a9, 0x1, 0x0);
        gbc.writeMem(0xb8f2, { 0xa4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc21d, gbc.sp());
        EXPECT(0xb8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb8f2));
        // A4 03E0
        gbc.setState(0x4e24, 0xb983, 0x5890, 0xdf5c, 0xb5d1, 0x1b52, 0x0, 0x1);
        gbc.writeMem(0x4e24, { 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb983, gbc.sp());
        EXPECT(0x4e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03E1
        gbc.setState(0x40e4, 0xf893, 0xfe20, 0xc2b4, 0x79ee, 0x3b8, 0x0, 0x0);
        gbc.writeMem(0x40e4, { 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf893, gbc.sp());
        EXPECT(0x40e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03E2
        gbc.setState(0x13be, 0x3681, 0xe2b0, 0xe01f, 0xda81, 0xba12, 0x0, 0x1);
        gbc.writeMem(0x13be, { 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3681, gbc.sp());
        EXPECT(0x13bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03E3
        gbc.setState(0x614d, 0xdb5f, 0x1a0, 0xd1c9, 0xd195, 0x770e, 0x0, 0x1);
        gbc.writeMem(0x614d, { 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdb5f, gbc.sp());
        EXPECT(0x614e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03E4
        gbc.setState(0x6afb, 0xbf61, 0x6660, 0x99c9, 0xf584, 0xf678, 0x0, 0x1);
        gbc.writeMem(0x6afb, { 0xa4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbf61, gbc.sp());
        EXPECT(0x6afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03E5
        gbc.setState(0xcfa3, 0xb5c5, 0x6d60, 0xd4be, 0xf48e, 0x34b5, 0x1, 0x0);
        gbc.writeMem(0xcfa3, { 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb5c5, gbc.sp());
        EXPECT(0xcfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xcfa3));
        // A4 03E6
        gbc.setState(0x28b2, 0x4033, 0x6fe0, 0x7b8c, 0x6169, 0xcc50, 0x1, 0x1);
        gbc.writeMem(0x28b2, { 0xa4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4033, gbc.sp());
        EXPECT(0x28b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A4 03E7
        gbc.setState(0x63c1, 0x5ccf, 0xfc20, 0xdaa3, 0x6cfe, 0x2b02, 0x0, 0x1);
        gbc.writeMem(0x63c1, { 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5ccf, gbc.sp());
        EXPECT(0x63c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
