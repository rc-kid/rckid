    TEST(gbcemu, opcode_73) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 73 0000
        gbc.setState(0x8411, 0x4814, 0xb550, 0xa493, 0x99b9, 0xc774, 0x0, 0x1);
        gbc.writeMem(0x8411, { 0x73 });
        gbc.writeMem(0xc774, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4814, gbc.sp());
        EXPECT(0x8412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8411));
        EXPECT(0xb9, gbc.readMem(0xc774));
        // 73 0002
        gbc.setState(0x6ea, 0xccb7, 0x9e20, 0xe198, 0x966b, 0x8ea5, 0x0, 0x1);
        gbc.writeMem(0x6ea, { 0x73 });
        gbc.writeMem(0x8ea5, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xccb7, gbc.sp());
        EXPECT(0x6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8ea5));
        // 73 0006
        gbc.setState(0x481e, 0xea0a, 0x6970, 0xb6ef, 0xe8e8, 0xfc33, 0x1, 0x0);
        gbc.writeMem(0x481e, { 0x73 });
        gbc.writeMem(0xfc33, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xea0a, gbc.sp());
        EXPECT(0x481f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xfc33));
        // 73 0007
        gbc.setState(0xd84e, 0xe5ce, 0x9980, 0x9d9f, 0x9287, 0xd86e, 0x0, 0x0);
        gbc.writeMem(0xd84e, { 0x73 });
        gbc.writeMem(0xd86e, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe5ce, gbc.sp());
        EXPECT(0xd84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd84e));
        EXPECT(0x87, gbc.readMem(0xd86e));
        // 73 0008
        gbc.setState(0x8494, 0xfdb5, 0x8090, 0xa72d, 0xb01, 0x8524, 0x1, 0x0);
        gbc.writeMem(0x8494, { 0x73 });
        gbc.writeMem(0x8524, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfdb5, gbc.sp());
        EXPECT(0x8495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8494));
        EXPECT(0x1, gbc.readMem(0x8524));
        // 73 0009
        gbc.setState(0x81f7, 0x8e0c, 0xd530, 0xa2b, 0xc4de, 0xb951, 0x1, 0x0);
        gbc.writeMem(0x81f7, { 0x73 });
        gbc.writeMem(0xb951, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8e0c, gbc.sp());
        EXPECT(0x81f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x81f7));
        EXPECT(0xde, gbc.readMem(0xb951));
        // 73 000B
        gbc.setState(0x43cc, 0xb2e8, 0x1c90, 0x2de7, 0xe35c, 0x8d4c, 0x0, 0x1);
        gbc.writeMem(0x43cc, { 0x73 });
        gbc.writeMem(0x8d4c, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb2e8, gbc.sp());
        EXPECT(0x43cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8d4c));
        // 73 0012
        gbc.setState(0x3365, 0x73a5, 0x6ca0, 0xc5f1, 0x9560, 0x96d0, 0x1, 0x1);
        gbc.writeMem(0x3365, { 0x73 });
        gbc.writeMem(0x96d0, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x73a5, gbc.sp());
        EXPECT(0x3366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x96d0));
        // 73 0013
        gbc.setState(0xec20, 0xdc52, 0xc40, 0x2fe8, 0x61f5, 0xe72b, 0x1, 0x1);
        gbc.writeMem(0xe72b, { 0x0 });
        gbc.writeMem(0xec20, { 0x73 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdc52, gbc.sp());
        EXPECT(0xec21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe72b));
        EXPECT(0x73, gbc.readMem(0xec20));
        // 73 0015
        gbc.setState(0x8e3f, 0x9fe1, 0x1fe0, 0x1fc4, 0x1e9, 0x895e, 0x1, 0x1);
        gbc.writeMem(0x895e, { 0x0 });
        gbc.writeMem(0x8e3f, { 0x73 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9fe1, gbc.sp());
        EXPECT(0x8e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x895e));
        EXPECT(0x73, gbc.readMem(0x8e3f));
        // 73 001A
        gbc.setState(0xe036, 0x2f42, 0x6250, 0xda7f, 0x6a72, 0xdb18, 0x1, 0x0);
        gbc.writeMem(0xdb18, { 0x0 });
        gbc.writeMem(0xe036, { 0x73 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2f42, gbc.sp());
        EXPECT(0xe037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xdb18));
        EXPECT(0x73, gbc.readMem(0xe036));
        // 73 001B
        gbc.setState(0x9692, 0xa61, 0xd910, 0xcb30, 0x63a8, 0xb983, 0x0, 0x0);
        gbc.writeMem(0x9692, { 0x73 });
        gbc.writeMem(0xb983, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa61, gbc.sp());
        EXPECT(0x9693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9692));
        EXPECT(0xa8, gbc.readMem(0xb983));
        // 73 001D
        gbc.setState(0x4bd6, 0x18b4, 0xe8e0, 0xd7bc, 0x4406, 0xe16d, 0x1, 0x1);
        gbc.writeMem(0x4bd6, { 0x73 });
        gbc.writeMem(0xe16d, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x18b4, gbc.sp());
        EXPECT(0x4bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe16d));
        // 73 001E
        gbc.setState(0xa568, 0x57ec, 0x8590, 0x6406, 0xbe9d, 0xa740, 0x1, 0x0);
        gbc.writeMem(0xa568, { 0x73 });
        gbc.writeMem(0xa740, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x57ec, gbc.sp());
        EXPECT(0xa569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa568));
        EXPECT(0x9d, gbc.readMem(0xa740));
        // 73 0021
        gbc.setState(0x1016, 0xef3, 0x1f30, 0xec7c, 0x6109, 0xd78e, 0x0, 0x1);
        gbc.writeMem(0x1016, { 0x73 });
        gbc.writeMem(0xd78e, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xef3, gbc.sp());
        EXPECT(0x1017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd78e));
        // 73 0026
        gbc.setState(0x8811, 0x2a, 0x740, 0x109c, 0x178b, 0xaccf, 0x0, 0x0);
        gbc.writeMem(0x8811, { 0x73 });
        gbc.writeMem(0xaccf, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2a, gbc.sp());
        EXPECT(0x8812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8811));
        EXPECT(0x8b, gbc.readMem(0xaccf));
        // 73 0028
        gbc.setState(0xeb4a, 0xa535, 0x1770, 0x20a0, 0x8605, 0xa3ac, 0x0, 0x0);
        gbc.writeMem(0xa3ac, { 0x0 });
        gbc.writeMem(0xeb4a, { 0x73 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa535, gbc.sp());
        EXPECT(0xeb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa3ac));
        EXPECT(0x73, gbc.readMem(0xeb4a));
        // 73 002A
        gbc.setState(0x7f66, 0x68a6, 0x370, 0xb8ef, 0xeda3, 0xda74, 0x0, 0x0);
        gbc.writeMem(0x7f66, { 0x73 });
        gbc.writeMem(0xda74, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x68a6, gbc.sp());
        EXPECT(0x7f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xda74));
        // 73 002C
        gbc.setState(0x30e9, 0xfe60, 0x3760, 0x85ab, 0xe72b, 0xcda4, 0x1, 0x1);
        gbc.writeMem(0x30e9, { 0x73 });
        gbc.writeMem(0xcda4, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfe60, gbc.sp());
        EXPECT(0x30ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xcda4));
        // 73 002F
        gbc.setState(0x85f3, 0x20a, 0xa470, 0xa550, 0x8a20, 0xca42, 0x0, 0x1);
        gbc.writeMem(0x85f3, { 0x73 });
        gbc.writeMem(0xca42, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x20a, gbc.sp());
        EXPECT(0x85f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x85f3));
        EXPECT(0x20, gbc.readMem(0xca42));
        // 73 0032
        gbc.setState(0xd559, 0x6fe7, 0x63a0, 0x70cb, 0x42fd, 0xb9dc, 0x0, 0x1);
        gbc.writeMem(0xb9dc, { 0x0 });
        gbc.writeMem(0xd559, { 0x73 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6fe7, gbc.sp());
        EXPECT(0xd55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xb9dc));
        EXPECT(0x73, gbc.readMem(0xd559));
        // 73 0034
        gbc.setState(0xec86, 0x73c0, 0x4aa0, 0x6dfa, 0x870a, 0xcb17, 0x1, 0x1);
        gbc.writeMem(0xcb17, { 0x0 });
        gbc.writeMem(0xec86, { 0x73 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x73c0, gbc.sp());
        EXPECT(0xec87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcb17));
        EXPECT(0x73, gbc.readMem(0xec86));
        // 73 0035
        gbc.setState(0x4db2, 0xff58, 0x6060, 0x6163, 0x49d9, 0xfb6b, 0x1, 0x1);
        gbc.writeMem(0x4db2, { 0x73 });
        gbc.writeMem(0xfb6b, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xff58, gbc.sp());
        EXPECT(0x4db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xfb6b));
        // 73 0036
        gbc.setState(0x4312, 0x91a6, 0x9660, 0xce38, 0xbd63, 0xca8a, 0x0, 0x1);
        gbc.writeMem(0x4312, { 0x73 });
        gbc.writeMem(0xca8a, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x91a6, gbc.sp());
        EXPECT(0x4313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xca8a));
        // 73 003A
        gbc.setState(0x3cb5, 0xe51f, 0x5c80, 0x44ef, 0xe1bf, 0xd5f0, 0x1, 0x0);
        gbc.writeMem(0x3cb5, { 0x73 });
        gbc.writeMem(0xd5f0, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe51f, gbc.sp());
        EXPECT(0x3cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd5f0));
        // 73 003C
        gbc.setState(0xcdd, 0xb0c4, 0xa300, 0x7f77, 0xaf45, 0xead3, 0x1, 0x0);
        gbc.writeMem(0xcdd, { 0x73 });
        gbc.writeMem(0xead3, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb0c4, gbc.sp());
        EXPECT(0xcde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xead3));
        // 73 003D
        gbc.setState(0xb100, 0x464c, 0xf9e0, 0x81d4, 0x18c9, 0xdacf, 0x1, 0x1);
        gbc.writeMem(0xb100, { 0x73 });
        gbc.writeMem(0xdacf, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x464c, gbc.sp());
        EXPECT(0xb101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb100));
        EXPECT(0xc9, gbc.readMem(0xdacf));
        // 73 0040
        gbc.setState(0x566b, 0xd3a4, 0x6440, 0xb668, 0x3a97, 0x882c, 0x0, 0x0);
        gbc.writeMem(0x566b, { 0x73 });
        gbc.writeMem(0x882c, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd3a4, gbc.sp());
        EXPECT(0x566c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x882c));
        // 73 0041
        gbc.setState(0xb4e7, 0x2e89, 0x7ea0, 0x8222, 0x579f, 0x8542, 0x0, 0x0);
        gbc.writeMem(0x8542, { 0x0 });
        gbc.writeMem(0xb4e7, { 0x73 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2e89, gbc.sp());
        EXPECT(0xb4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8542));
        EXPECT(0x73, gbc.readMem(0xb4e7));
        // 73 0043
        gbc.setState(0x9080, 0xf6e1, 0x9290, 0xa28a, 0x9978, 0x8e62, 0x0, 0x0);
        gbc.writeMem(0x8e62, { 0x0 });
        gbc.writeMem(0x9080, { 0x73 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf6e1, gbc.sp());
        EXPECT(0x9081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8e62));
        EXPECT(0x73, gbc.readMem(0x9080));
        // 73 0044
        gbc.setState(0xc29c, 0xd74f, 0x6b60, 0xb8c0, 0x709c, 0x83c8, 0x1, 0x0);
        gbc.writeMem(0x83c8, { 0x0 });
        gbc.writeMem(0xc29c, { 0x73 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd74f, gbc.sp());
        EXPECT(0xc29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x83c8));
        EXPECT(0x73, gbc.readMem(0xc29c));
        // 73 0045
        gbc.setState(0x1cc1, 0x57b7, 0x7d00, 0x8272, 0xa67, 0xef5f, 0x1, 0x1);
        gbc.writeMem(0x1cc1, { 0x73 });
        gbc.writeMem(0xef5f, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x57b7, gbc.sp());
        EXPECT(0x1cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xef5f));
        // 73 0047
        gbc.setState(0xaa2d, 0xe420, 0x700, 0xc0fd, 0xdbf8, 0x851c, 0x0, 0x0);
        gbc.writeMem(0x851c, { 0x0 });
        gbc.writeMem(0xaa2d, { 0x73 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe420, gbc.sp());
        EXPECT(0xaa2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x851c));
        EXPECT(0x73, gbc.readMem(0xaa2d));
        // 73 0048
        gbc.setState(0x3898, 0xe2f8, 0x1190, 0x908, 0xcb02, 0xc6c2, 0x0, 0x1);
        gbc.writeMem(0x3898, { 0x73 });
        gbc.writeMem(0xc6c2, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe2f8, gbc.sp());
        EXPECT(0x3899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xc6c2));
        // 73 004A
        gbc.setState(0x9a91, 0xd5f5, 0xe30, 0x402, 0x22bc, 0xdcde, 0x1, 0x1);
        gbc.writeMem(0x9a91, { 0x73 });
        gbc.writeMem(0xdcde, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd5f5, gbc.sp());
        EXPECT(0x9a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9a91));
        EXPECT(0xbc, gbc.readMem(0xdcde));
        // 73 004D
        gbc.setState(0xd169, 0x75b0, 0x8960, 0x1cc5, 0xa446, 0xab24, 0x0, 0x1);
        gbc.writeMem(0xab24, { 0x0 });
        gbc.writeMem(0xd169, { 0x73 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x75b0, gbc.sp());
        EXPECT(0xd16a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xab24));
        EXPECT(0x73, gbc.readMem(0xd169));
        // 73 004F
        gbc.setState(0xe083, 0x53a1, 0xb550, 0xfec5, 0x594c, 0xcf84, 0x1, 0x0);
        gbc.writeMem(0xcf84, { 0x0 });
        gbc.writeMem(0xe083, { 0x73 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x53a1, gbc.sp());
        EXPECT(0xe084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcf84));
        EXPECT(0x73, gbc.readMem(0xe083));
        // 73 0057
        gbc.setState(0x7ac8, 0xd4bf, 0x7830, 0x7df0, 0x2e35, 0x9431, 0x0, 0x0);
        gbc.writeMem(0x7ac8, { 0x73 });
        gbc.writeMem(0x9431, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd4bf, gbc.sp());
        EXPECT(0x7ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9431));
        // 73 0058
        gbc.setState(0x7b6f, 0xc637, 0x5c0, 0x44d8, 0x2db, 0xcdc5, 0x0, 0x1);
        gbc.writeMem(0x7b6f, { 0x73 });
        gbc.writeMem(0xcdc5, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc637, gbc.sp());
        EXPECT(0x7b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xcdc5));
        // 73 0059
        gbc.setState(0xa02f, 0x3e15, 0xa620, 0xceea, 0x45f1, 0xd0ed, 0x0, 0x0);
        gbc.writeMem(0xa02f, { 0x73 });
        gbc.writeMem(0xd0ed, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3e15, gbc.sp());
        EXPECT(0xa030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa02f));
        EXPECT(0xf1, gbc.readMem(0xd0ed));
        // 73 005A
        gbc.setState(0x6e96, 0xce2b, 0x78e0, 0x8f8c, 0xfc8b, 0x841c, 0x1, 0x1);
        gbc.writeMem(0x6e96, { 0x73 });
        gbc.writeMem(0x841c, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0x6e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x841c));
        // 73 005D
        gbc.setState(0xa19e, 0x8c7a, 0x4d20, 0x8ae2, 0xa879, 0x9f65, 0x1, 0x1);
        gbc.writeMem(0x9f65, { 0x0 });
        gbc.writeMem(0xa19e, { 0x73 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8c7a, gbc.sp());
        EXPECT(0xa19f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9f65));
        EXPECT(0x73, gbc.readMem(0xa19e));
        // 73 0062
        gbc.setState(0x2cd1, 0x543, 0x80, 0x822c, 0x907a, 0xca26, 0x0, 0x1);
        gbc.writeMem(0x2cd1, { 0x73 });
        gbc.writeMem(0xca26, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x543, gbc.sp());
        EXPECT(0x2cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xca26));
        // 73 0064
        gbc.setState(0xe895, 0x4862, 0xe820, 0xaa0f, 0x6beb, 0x9afb, 0x0, 0x0);
        gbc.writeMem(0x9afb, { 0x0 });
        gbc.writeMem(0xe895, { 0x73 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4862, gbc.sp());
        EXPECT(0xe896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9afb));
        EXPECT(0x73, gbc.readMem(0xe895));
        // 73 0065
        gbc.setState(0x400f, 0xf813, 0x22d0, 0xbd, 0xd1c2, 0xc11f, 0x1, 0x0);
        gbc.writeMem(0x400f, { 0x73 });
        gbc.writeMem(0xc11f, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf813, gbc.sp());
        EXPECT(0x4010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc11f));
        // 73 0066
        gbc.setState(0x1878, 0xec8b, 0x8f10, 0xc5cd, 0x460, 0xd12c, 0x1, 0x1);
        gbc.writeMem(0x1878, { 0x73 });
        gbc.writeMem(0xd12c, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xec8b, gbc.sp());
        EXPECT(0x1879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xd12c));
        // 73 0067
        gbc.setState(0x615b, 0x42b, 0x9270, 0x140b, 0xee91, 0xb2e6, 0x0, 0x0);
        gbc.writeMem(0x615b, { 0x73 });
        gbc.writeMem(0xb2e6, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x42b, gbc.sp());
        EXPECT(0x615c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xb2e6));
        // 73 006A
        gbc.setState(0xa0f2, 0xe597, 0xbc10, 0xcd29, 0xa566, 0xd5c2, 0x1, 0x0);
        gbc.writeMem(0xa0f2, { 0x73 });
        gbc.writeMem(0xd5c2, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe597, gbc.sp());
        EXPECT(0xa0f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa0f2));
        EXPECT(0x66, gbc.readMem(0xd5c2));
        // 73 006C
        gbc.setState(0x3f93, 0x64ce, 0x9e80, 0xa4cc, 0xfac0, 0xba19, 0x0, 0x1);
        gbc.writeMem(0x3f93, { 0x73 });
        gbc.writeMem(0xba19, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x64ce, gbc.sp());
        EXPECT(0x3f94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xba19));
        // 73 006D
        gbc.setState(0x96de, 0x203e, 0x1c20, 0x7e67, 0xa019, 0xb440, 0x0, 0x0);
        gbc.writeMem(0x96de, { 0x73 });
        gbc.writeMem(0xb440, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x203e, gbc.sp());
        EXPECT(0x96df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x96de));
        EXPECT(0x19, gbc.readMem(0xb440));
        // 73 006E
        gbc.setState(0x4d8, 0xc7ac, 0xbb60, 0xa204, 0xb0d8, 0xb8ac, 0x0, 0x1);
        gbc.writeMem(0x4d8, { 0x73 });
        gbc.writeMem(0xb8ac, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc7ac, gbc.sp());
        EXPECT(0x4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xb8ac));
        // 73 0070
        gbc.setState(0x42f, 0x7f5d, 0xf820, 0x31a9, 0xb81d, 0xbad5, 0x1, 0x1);
        gbc.writeMem(0x42f, { 0x73 });
        gbc.writeMem(0xbad5, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7f5d, gbc.sp());
        EXPECT(0x430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbad5));
        // 73 0071
        gbc.setState(0xb160, 0xfa80, 0xc730, 0xfe2, 0xc4bd, 0xa3a9, 0x0, 0x0);
        gbc.writeMem(0xa3a9, { 0x0 });
        gbc.writeMem(0xb160, { 0x73 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfa80, gbc.sp());
        EXPECT(0xb161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa3a9));
        EXPECT(0x73, gbc.readMem(0xb160));
        // 73 0072
        gbc.setState(0x40c0, 0xa760, 0x8d60, 0x2264, 0xd321, 0xfe4b, 0x1, 0x1);
        gbc.writeMem(0x40c0, { 0x73 });
        gbc.writeMem(0xfe4b, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa760, gbc.sp());
        EXPECT(0x40c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xfe4b));
        // 73 0073
        gbc.setState(0xd433, 0x429b, 0x2700, 0x2b76, 0x5384, 0x8900, 0x0, 0x0);
        gbc.writeMem(0x8900, { 0x0 });
        gbc.writeMem(0xd433, { 0x73 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x429b, gbc.sp());
        EXPECT(0xd434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8900));
        EXPECT(0x73, gbc.readMem(0xd433));
        // 73 0076
        gbc.setState(0x73f3, 0x7822, 0x2170, 0xf052, 0xb640, 0x9b10, 0x1, 0x1);
        gbc.writeMem(0x73f3, { 0x73 });
        gbc.writeMem(0x9b10, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7822, gbc.sp());
        EXPECT(0x73f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9b10));
        // 73 007D
        gbc.setState(0x6df2, 0x7232, 0xcdb0, 0xf07e, 0x9a37, 0xfdd4, 0x1, 0x0);
        gbc.writeMem(0x6df2, { 0x73 });
        gbc.writeMem(0xfdd4, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0x6df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xfdd4));
        // 73 0082
        gbc.setState(0x10f, 0xbe2c, 0x2ee0, 0xc023, 0x2b9a, 0xe140, 0x0, 0x1);
        gbc.writeMem(0x10f, { 0x73 });
        gbc.writeMem(0xe140, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbe2c, gbc.sp());
        EXPECT(0x110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe140));
        // 73 0083
        gbc.setState(0xeb10, 0x5743, 0xbb50, 0xe889, 0xa8, 0xc708, 0x0, 0x1);
        gbc.writeMem(0xc708, { 0x0 });
        gbc.writeMem(0xeb10, { 0x73 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5743, gbc.sp());
        EXPECT(0xeb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xc708));
        EXPECT(0x73, gbc.readMem(0xeb10));
        // 73 0084
        gbc.setState(0xba0b, 0x6bd9, 0x41f0, 0x1ba, 0x5b3b, 0x9788, 0x1, 0x1);
        gbc.writeMem(0x9788, { 0x0 });
        gbc.writeMem(0xba0b, { 0x73 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6bd9, gbc.sp());
        EXPECT(0xba0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9788));
        EXPECT(0x73, gbc.readMem(0xba0b));
        // 73 0085
        gbc.setState(0x5144, 0x2a1f, 0xaa0, 0xebf9, 0xfcdb, 0xadb1, 0x0, 0x1);
        gbc.writeMem(0x5144, { 0x73 });
        gbc.writeMem(0xadb1, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2a1f, gbc.sp());
        EXPECT(0x5145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xadb1));
        // 73 0087
        gbc.setState(0x5dad, 0x6d67, 0x4a50, 0xdd81, 0xa806, 0xb2eb, 0x0, 0x1);
        gbc.writeMem(0x5dad, { 0x73 });
        gbc.writeMem(0xb2eb, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6d67, gbc.sp());
        EXPECT(0x5dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb2eb));
        // 73 008A
        gbc.setState(0x8e90, 0xf236, 0xe5a0, 0xc464, 0xf84f, 0xfea5, 0x1, 0x1);
        gbc.writeMem(0x8e90, { 0x73 });
        gbc.writeMem(0xfea5, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf236, gbc.sp());
        EXPECT(0x8e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8e90));
        EXPECT(0x4f, gbc.readMem(0xfea5));
        // 73 008C
        gbc.setState(0xa718, 0xaf85, 0x7500, 0x1e4, 0xd44e, 0xa2a7, 0x0, 0x1);
        gbc.writeMem(0xa2a7, { 0x0 });
        gbc.writeMem(0xa718, { 0x73 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xaf85, gbc.sp());
        EXPECT(0xa719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa2a7));
        EXPECT(0x73, gbc.readMem(0xa718));
        // 73 008D
        gbc.setState(0x51d9, 0x71e9, 0x90c0, 0xd282, 0x4d54, 0xacbe, 0x1, 0x1);
        gbc.writeMem(0x51d9, { 0x73 });
        gbc.writeMem(0xacbe, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x71e9, gbc.sp());
        EXPECT(0x51da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xacbe));
        // 73 0090
        gbc.setState(0xadbc, 0x646f, 0x9e00, 0x2974, 0x47f3, 0x8310, 0x0, 0x0);
        gbc.writeMem(0x8310, { 0x0 });
        gbc.writeMem(0xadbc, { 0x73 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x646f, gbc.sp());
        EXPECT(0xadbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8310));
        EXPECT(0x73, gbc.readMem(0xadbc));
        // 73 0092
        gbc.setState(0x1a72, 0xd4dc, 0x5030, 0xd22d, 0xd1d7, 0xf398, 0x1, 0x1);
        gbc.writeMem(0x1a72, { 0x73 });
        gbc.writeMem(0xf398, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd4dc, gbc.sp());
        EXPECT(0x1a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xf398));
        // 73 0095
        gbc.setState(0xe411, 0x3693, 0xdbe0, 0xd3d3, 0x91a4, 0x98ca, 0x1, 0x0);
        gbc.writeMem(0x98ca, { 0x0 });
        gbc.writeMem(0xe411, { 0x73 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3693, gbc.sp());
        EXPECT(0xe412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x98ca));
        EXPECT(0x73, gbc.readMem(0xe411));
        // 73 0096
        gbc.setState(0xe3e9, 0xcda8, 0x3d10, 0x931a, 0x6a73, 0x88d3, 0x0, 0x0);
        gbc.writeMem(0x88d3, { 0x0 });
        gbc.writeMem(0xe3e9, { 0x73 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcda8, gbc.sp());
        EXPECT(0xe3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x88d3));
        EXPECT(0x73, gbc.readMem(0xe3e9));
        // 73 0097
        gbc.setState(0xaae3, 0xac64, 0x1170, 0x9abc, 0x4a1b, 0xd442, 0x1, 0x1);
        gbc.writeMem(0xaae3, { 0x73 });
        gbc.writeMem(0xd442, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xac64, gbc.sp());
        EXPECT(0xaae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xaae3));
        EXPECT(0x1b, gbc.readMem(0xd442));
        // 73 0098
        gbc.setState(0x975e, 0x9597, 0x9280, 0x52f7, 0xab58, 0xad5f, 0x1, 0x0);
        gbc.writeMem(0x975e, { 0x73 });
        gbc.writeMem(0xad5f, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9597, gbc.sp());
        EXPECT(0x975f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x975e));
        EXPECT(0x58, gbc.readMem(0xad5f));
        // 73 0099
        gbc.setState(0xc9a8, 0x8cf9, 0xd000, 0xf367, 0x35, 0xd3a8, 0x1, 0x1);
        gbc.writeMem(0xc9a8, { 0x73 });
        gbc.writeMem(0xd3a8, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8cf9, gbc.sp());
        EXPECT(0xc9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc9a8));
        EXPECT(0x35, gbc.readMem(0xd3a8));
        // 73 009A
        gbc.setState(0xca24, 0x1dd3, 0xfad0, 0x5f2c, 0x7215, 0xf51a, 0x1, 0x1);
        gbc.writeMem(0xca24, { 0x73 });
        gbc.writeMem(0xf51a, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1dd3, gbc.sp());
        EXPECT(0xca25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xca24));
        EXPECT(0x15, gbc.readMem(0xf51a));
        // 73 009B
        gbc.setState(0x67b8, 0x7403, 0x4a00, 0x5c33, 0xb908, 0xdd1f, 0x0, 0x0);
        gbc.writeMem(0x67b8, { 0x73 });
        gbc.writeMem(0xdd1f, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7403, gbc.sp());
        EXPECT(0x67b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xdd1f));
        // 73 009C
        gbc.setState(0x439f, 0xb9cf, 0x14b0, 0x35a9, 0xfca1, 0xdcd4, 0x0, 0x0);
        gbc.writeMem(0x439f, { 0x73 });
        gbc.writeMem(0xdcd4, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb9cf, gbc.sp());
        EXPECT(0x43a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdcd4));
        // 73 009E
        gbc.setState(0x12c2, 0xf8ed, 0xcdc0, 0x80ce, 0x5bea, 0xe759, 0x1, 0x0);
        gbc.writeMem(0x12c2, { 0x73 });
        gbc.writeMem(0xe759, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf8ed, gbc.sp());
        EXPECT(0x12c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xe759));
        // 73 009F
        gbc.setState(0x8f99, 0x8097, 0x3120, 0xfd67, 0xf16f, 0x9934, 0x1, 0x0);
        gbc.writeMem(0x8f99, { 0x73 });
        gbc.writeMem(0x9934, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8097, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8f99));
        EXPECT(0x6f, gbc.readMem(0x9934));
        // 73 00A0
        gbc.setState(0x97d5, 0x878d, 0x5f10, 0x216f, 0xec86, 0xf467, 0x1, 0x0);
        gbc.writeMem(0x97d5, { 0x73 });
        gbc.writeMem(0xf467, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x878d, gbc.sp());
        EXPECT(0x97d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x97d5));
        EXPECT(0x86, gbc.readMem(0xf467));
        // 73 00A1
        gbc.setState(0x43d2, 0x255a, 0x6110, 0x5930, 0x80e0, 0xcef4, 0x0, 0x1);
        gbc.writeMem(0x43d2, { 0x73 });
        gbc.writeMem(0xcef4, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x255a, gbc.sp());
        EXPECT(0x43d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcef4));
        // 73 00A3
        gbc.setState(0x60e4, 0x3a6b, 0xda0, 0xb03b, 0x123e, 0xc8a0, 0x0, 0x1);
        gbc.writeMem(0x60e4, { 0x73 });
        gbc.writeMem(0xc8a0, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3a6b, gbc.sp());
        EXPECT(0x60e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc8a0));
        // 73 00A4
        gbc.setState(0xa31f, 0x2623, 0xbae0, 0x60cd, 0xf835, 0x9526, 0x1, 0x0);
        gbc.writeMem(0x9526, { 0x0 });
        gbc.writeMem(0xa31f, { 0x73 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2623, gbc.sp());
        EXPECT(0xa320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9526));
        EXPECT(0x73, gbc.readMem(0xa31f));
        // 73 00A6
        gbc.setState(0x902, 0xbd03, 0x7980, 0xff93, 0x45f7, 0xbe5a, 0x1, 0x0);
        gbc.writeMem(0x902, { 0x73 });
        gbc.writeMem(0xbe5a, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbd03, gbc.sp());
        EXPECT(0x903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbe5a));
        // 73 00A8
        gbc.setState(0x5ad8, 0xf459, 0x67d0, 0x5967, 0x7c7f, 0xfe88, 0x0, 0x1);
        gbc.writeMem(0x5ad8, { 0x73 });
        gbc.writeMem(0xfe88, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf459, gbc.sp());
        EXPECT(0x5ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xfe88));
        // 73 00A9
        gbc.setState(0x6728, 0x8c08, 0xbe60, 0xe9c, 0x29e0, 0xf4b5, 0x1, 0x0);
        gbc.writeMem(0x6728, { 0x73 });
        gbc.writeMem(0xf4b5, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8c08, gbc.sp());
        EXPECT(0x6729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xf4b5));
        // 73 00AD
        gbc.setState(0x40c6, 0xda61, 0xf5a0, 0x4927, 0x9339, 0x9765, 0x0, 0x0);
        gbc.writeMem(0x40c6, { 0x73 });
        gbc.writeMem(0x9765, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xda61, gbc.sp());
        EXPECT(0x40c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x9765));
        // 73 00AE
        gbc.setState(0x108c, 0xafab, 0x2f60, 0x9492, 0x26c2, 0xc76d, 0x1, 0x0);
        gbc.writeMem(0x108c, { 0x73 });
        gbc.writeMem(0xc76d, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xafab, gbc.sp());
        EXPECT(0x108d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc76d));
        // 73 00AF
        gbc.setState(0x31ae, 0x4534, 0xbd0, 0xc07b, 0x1ec7, 0xeb46, 0x0, 0x0);
        gbc.writeMem(0x31ae, { 0x73 });
        gbc.writeMem(0xeb46, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4534, gbc.sp());
        EXPECT(0x31af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xeb46));
        // 73 00B0
        gbc.setState(0x1d1, 0xff97, 0x2fd0, 0xec35, 0xa446, 0xf7f2, 0x1, 0x0);
        gbc.writeMem(0x1d1, { 0x73 });
        gbc.writeMem(0xf7f2, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xff97, gbc.sp());
        EXPECT(0x1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xf7f2));
        // 73 00B8
        gbc.setState(0x457a, 0x7fc2, 0xec70, 0xc131, 0x8541, 0xabe4, 0x1, 0x0);
        gbc.writeMem(0x457a, { 0x73 });
        gbc.writeMem(0xabe4, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7fc2, gbc.sp());
        EXPECT(0x457b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xabe4));
        // 73 00B9
        gbc.setState(0x4ee7, 0x83dd, 0xb730, 0x746, 0x6d25, 0xcfb8, 0x1, 0x0);
        gbc.writeMem(0x4ee7, { 0x73 });
        gbc.writeMem(0xcfb8, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x83dd, gbc.sp());
        EXPECT(0x4ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcfb8));
        // 73 00BA
        gbc.setState(0x3ed2, 0xbd73, 0x8940, 0xae9a, 0xaf28, 0xaa57, 0x1, 0x0);
        gbc.writeMem(0x3ed2, { 0x73 });
        gbc.writeMem(0xaa57, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbd73, gbc.sp());
        EXPECT(0x3ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xaa57));
        // 73 00BB
        gbc.setState(0x1496, 0x81ff, 0x8690, 0xc1e1, 0xc20a, 0xe601, 0x0, 0x1);
        gbc.writeMem(0x1496, { 0x73 });
        gbc.writeMem(0xe601, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x81ff, gbc.sp());
        EXPECT(0x1497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe601));
        // 73 00BE
        gbc.setState(0x8508, 0x61f2, 0x6910, 0x4b31, 0xd380, 0xa31e, 0x1, 0x0);
        gbc.writeMem(0x8508, { 0x73 });
        gbc.writeMem(0xa31e, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x61f2, gbc.sp());
        EXPECT(0x8509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8508));
        EXPECT(0x80, gbc.readMem(0xa31e));
        // 73 00BF
        gbc.setState(0x1da5, 0x742f, 0xdd70, 0x68f8, 0x5307, 0xcb44, 0x0, 0x1);
        gbc.writeMem(0x1da5, { 0x73 });
        gbc.writeMem(0xcb44, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x742f, gbc.sp());
        EXPECT(0x1da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcb44));
        // 73 00C1
        gbc.setState(0xd0c1, 0xdfba, 0xc810, 0xfc5d, 0x3551, 0x961f, 0x0, 0x1);
        gbc.writeMem(0x961f, { 0x0 });
        gbc.writeMem(0xd0c1, { 0x73 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdfba, gbc.sp());
        EXPECT(0xd0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x961f));
        EXPECT(0x73, gbc.readMem(0xd0c1));
        // 73 00C3
        gbc.setState(0xcaec, 0x4d73, 0x6a50, 0x4429, 0xdbe1, 0xf0a9, 0x1, 0x1);
        gbc.writeMem(0xcaec, { 0x73 });
        gbc.writeMem(0xf0a9, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4d73, gbc.sp());
        EXPECT(0xcaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xcaec));
        EXPECT(0xe1, gbc.readMem(0xf0a9));
        // 73 00CA
        gbc.setState(0xd6de, 0xde1e, 0x6bb0, 0x5442, 0x5bbb, 0xe9ca, 0x1, 0x0);
        gbc.writeMem(0xd6de, { 0x73 });
        gbc.writeMem(0xe9ca, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xde1e, gbc.sp());
        EXPECT(0xd6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd6de));
        EXPECT(0xbb, gbc.readMem(0xe9ca));
        // 73 00CC
        gbc.setState(0xebf9, 0x6e0d, 0x98e0, 0x3660, 0x6b61, 0xbda4, 0x1, 0x0);
        gbc.writeMem(0xbda4, { 0x0 });
        gbc.writeMem(0xebf9, { 0x73 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6e0d, gbc.sp());
        EXPECT(0xebfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbda4));
        EXPECT(0x73, gbc.readMem(0xebf9));
        // 73 00CE
        gbc.setState(0xb244, 0x1a7a, 0xfb80, 0xe806, 0x123, 0xf801, 0x1, 0x0);
        gbc.writeMem(0xb244, { 0x73 });
        gbc.writeMem(0xf801, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1a7a, gbc.sp());
        EXPECT(0xb245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb244));
        EXPECT(0x23, gbc.readMem(0xf801));
        // 73 00D0
        gbc.setState(0xa413, 0xa025, 0xa10, 0x7ce2, 0xfa94, 0xbe43, 0x1, 0x1);
        gbc.writeMem(0xa413, { 0x73 });
        gbc.writeMem(0xbe43, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa025, gbc.sp());
        EXPECT(0xa414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa413));
        EXPECT(0x94, gbc.readMem(0xbe43));
        // 73 00D1
        gbc.setState(0x2405, 0xeb4c, 0x65c0, 0x7f07, 0xb046, 0xb86d, 0x0, 0x1);
        gbc.writeMem(0x2405, { 0x73 });
        gbc.writeMem(0xb86d, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xeb4c, gbc.sp());
        EXPECT(0x2406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xb86d));
        // 73 00D4
        gbc.setState(0xaffb, 0x6b3c, 0xae90, 0xf15c, 0xd9c6, 0xb2bb, 0x0, 0x0);
        gbc.writeMem(0xaffb, { 0x73 });
        gbc.writeMem(0xb2bb, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6b3c, gbc.sp());
        EXPECT(0xaffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xaffb));
        EXPECT(0xc6, gbc.readMem(0xb2bb));
        // 73 00D5
        gbc.setState(0xc86d, 0xc48f, 0x2290, 0xefe8, 0xffb, 0x999a, 0x0, 0x1);
        gbc.writeMem(0x999a, { 0x0 });
        gbc.writeMem(0xc86d, { 0x73 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc48f, gbc.sp());
        EXPECT(0xc86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x999a));
        EXPECT(0x73, gbc.readMem(0xc86d));
        // 73 00D7
        gbc.setState(0xdde4, 0x2650, 0x5b80, 0xd2b1, 0x4a9, 0x83df, 0x1, 0x1);
        gbc.writeMem(0x83df, { 0x0 });
        gbc.writeMem(0xdde4, { 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2650, gbc.sp());
        EXPECT(0xdde5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x83df));
        EXPECT(0x73, gbc.readMem(0xdde4));
        // 73 00D9
        gbc.setState(0x85c2, 0xce44, 0x3c00, 0x3e16, 0x60f4, 0x88c8, 0x1, 0x1);
        gbc.writeMem(0x85c2, { 0x73 });
        gbc.writeMem(0x88c8, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xce44, gbc.sp());
        EXPECT(0x85c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x85c2));
        EXPECT(0xf4, gbc.readMem(0x88c8));
        // 73 00DA
        gbc.setState(0xa33f, 0x213, 0x1a30, 0x3a4c, 0xee70, 0x85f1, 0x1, 0x0);
        gbc.writeMem(0x85f1, { 0x0 });
        gbc.writeMem(0xa33f, { 0x73 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x213, gbc.sp());
        EXPECT(0xa340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x85f1));
        EXPECT(0x73, gbc.readMem(0xa33f));
        // 73 00DD
        gbc.setState(0x22b1, 0xee5b, 0xc3d0, 0x875a, 0xc125, 0x996b, 0x0, 0x1);
        gbc.writeMem(0x22b1, { 0x73 });
        gbc.writeMem(0x996b, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xee5b, gbc.sp());
        EXPECT(0x22b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x996b));
        // 73 00DE
        gbc.setState(0x3d80, 0xc35e, 0xe1c0, 0x7e72, 0x33ec, 0xac33, 0x0, 0x1);
        gbc.writeMem(0x3d80, { 0x73 });
        gbc.writeMem(0xac33, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc35e, gbc.sp());
        EXPECT(0x3d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xac33));
        // 73 00DF
        gbc.setState(0x3f14, 0xba17, 0xc130, 0x549b, 0x2dbb, 0xb980, 0x1, 0x1);
        gbc.writeMem(0x3f14, { 0x73 });
        gbc.writeMem(0xb980, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xba17, gbc.sp());
        EXPECT(0x3f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb980));
        // 73 00E2
        gbc.setState(0xbad6, 0x7377, 0x87a0, 0x249, 0xa870, 0x8d50, 0x1, 0x0);
        gbc.writeMem(0x8d50, { 0x0 });
        gbc.writeMem(0xbad6, { 0x73 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7377, gbc.sp());
        EXPECT(0xbad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x8d50));
        EXPECT(0x73, gbc.readMem(0xbad6));
        // 73 00E5
        gbc.setState(0x61b9, 0xe, 0x5740, 0x5a4d, 0x8f7b, 0xbb2b, 0x0, 0x1);
        gbc.writeMem(0x61b9, { 0x73 });
        gbc.writeMem(0xbb2b, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe, gbc.sp());
        EXPECT(0x61ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbb2b));
        // 73 00E7
        gbc.setState(0x6cf6, 0x8dab, 0xaa60, 0xe2c9, 0x63d4, 0xba82, 0x0, 0x1);
        gbc.writeMem(0x6cf6, { 0x73 });
        gbc.writeMem(0xba82, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8dab, gbc.sp());
        EXPECT(0x6cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xba82));
        // 73 00E8
        gbc.setState(0xa745, 0xae61, 0x9250, 0xcc97, 0x2fa4, 0x8ef3, 0x1, 0x1);
        gbc.writeMem(0x8ef3, { 0x0 });
        gbc.writeMem(0xa745, { 0x73 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xae61, gbc.sp());
        EXPECT(0xa746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8ef3));
        EXPECT(0x73, gbc.readMem(0xa745));
        // 73 00EC
        gbc.setState(0xb154, 0x925, 0xb40, 0x25ab, 0xf729, 0xbb36, 0x1, 0x1);
        gbc.writeMem(0xb154, { 0x73 });
        gbc.writeMem(0xbb36, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x925, gbc.sp());
        EXPECT(0xb155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb154));
        EXPECT(0x29, gbc.readMem(0xbb36));
        // 73 00ED
        gbc.setState(0x79ee, 0xd712, 0xee20, 0x213d, 0x34e4, 0xa844, 0x1, 0x1);
        gbc.writeMem(0x79ee, { 0x73 });
        gbc.writeMem(0xa844, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd712, gbc.sp());
        EXPECT(0x79ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xa844));
        // 73 00EF
        gbc.setState(0x7ae8, 0x733d, 0xb790, 0x935e, 0x538d, 0x92e8, 0x1, 0x1);
        gbc.writeMem(0x7ae8, { 0x73 });
        gbc.writeMem(0x92e8, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x733d, gbc.sp());
        EXPECT(0x7ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x92e8));
        // 73 00F4
        gbc.setState(0x3f87, 0x34bd, 0x44f0, 0x94a0, 0xb1dd, 0x938a, 0x1, 0x1);
        gbc.writeMem(0x3f87, { 0x73 });
        gbc.writeMem(0x938a, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x34bd, gbc.sp());
        EXPECT(0x3f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x938a));
        // 73 00F6
        gbc.setState(0x9831, 0x7947, 0xe750, 0x3828, 0xa167, 0x9e0b, 0x0, 0x0);
        gbc.writeMem(0x9831, { 0x73 });
        gbc.writeMem(0x9e0b, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7947, gbc.sp());
        EXPECT(0x9832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9831));
        EXPECT(0x67, gbc.readMem(0x9e0b));
        // 73 00F9
        gbc.setState(0x9ee1, 0x8337, 0xc1f0, 0xd8bb, 0x9ddf, 0xeaa1, 0x0, 0x0);
        gbc.writeMem(0x9ee1, { 0x73 });
        gbc.writeMem(0xeaa1, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8337, gbc.sp());
        EXPECT(0x9ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9ee1));
        EXPECT(0xdf, gbc.readMem(0xeaa1));
        // 73 00FC
        gbc.setState(0x8a20, 0xd444, 0x3010, 0xfc6c, 0xc302, 0xbf1c, 0x1, 0x1);
        gbc.writeMem(0x8a20, { 0x73 });
        gbc.writeMem(0xbf1c, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd444, gbc.sp());
        EXPECT(0x8a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8a20));
        EXPECT(0x2, gbc.readMem(0xbf1c));
        // 73 00FD
        gbc.setState(0x8db6, 0xe6b4, 0x3a10, 0x1ee4, 0x74f, 0x8bf8, 0x0, 0x1);
        gbc.writeMem(0x8bf8, { 0x0 });
        gbc.writeMem(0x8db6, { 0x73 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe6b4, gbc.sp());
        EXPECT(0x8db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x8bf8));
        EXPECT(0x73, gbc.readMem(0x8db6));
        // 73 00FE
        gbc.setState(0x1acf, 0x49ae, 0x8f70, 0x1ee9, 0xc170, 0x8d55, 0x1, 0x1);
        gbc.writeMem(0x1acf, { 0x73 });
        gbc.writeMem(0x8d55, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x49ae, gbc.sp());
        EXPECT(0x1ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x8d55));
        // 73 00FF
        gbc.setState(0x62ce, 0x5e24, 0x8e10, 0x7701, 0xa2d8, 0xffea, 0x0, 0x1);
        gbc.writeMem(0x62ce, { 0x73 });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5e24, gbc.sp());
        EXPECT(0x62cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xffea));
        // 73 0101
        gbc.setState(0xb97c, 0x550d, 0x3bf0, 0xf2e6, 0xb2b5, 0x90ae, 0x1, 0x0);
        gbc.writeMem(0x90ae, { 0x0 });
        gbc.writeMem(0xb97c, { 0x73 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x550d, gbc.sp());
        EXPECT(0xb97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x90ae));
        EXPECT(0x73, gbc.readMem(0xb97c));
        // 73 0102
        gbc.setState(0xa37, 0xa06b, 0x8da0, 0x7619, 0xde87, 0xb68a, 0x1, 0x1);
        gbc.writeMem(0xa37, { 0x73 });
        gbc.writeMem(0xb68a, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa06b, gbc.sp());
        EXPECT(0xa38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb68a));
        // 73 0106
        gbc.setState(0xb47a, 0xef81, 0x550, 0xfa12, 0x1426, 0x998b, 0x1, 0x0);
        gbc.writeMem(0x998b, { 0x0 });
        gbc.writeMem(0xb47a, { 0x73 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xef81, gbc.sp());
        EXPECT(0xb47b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x998b));
        EXPECT(0x73, gbc.readMem(0xb47a));
        // 73 010A
        gbc.setState(0xd402, 0xa6ca, 0xe590, 0x1929, 0xf5c0, 0x80c3, 0x0, 0x0);
        gbc.writeMem(0x80c3, { 0x0 });
        gbc.writeMem(0xd402, { 0x73 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa6ca, gbc.sp());
        EXPECT(0xd403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x80c3));
        EXPECT(0x73, gbc.readMem(0xd402));
        // 73 010B
        gbc.setState(0x4374, 0xdc72, 0x150, 0x8573, 0xe148, 0xd7b1, 0x0, 0x1);
        gbc.writeMem(0x4374, { 0x73 });
        gbc.writeMem(0xd7b1, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdc72, gbc.sp());
        EXPECT(0x4375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd7b1));
        // 73 010C
        gbc.setState(0xd7dd, 0x5a23, 0x3e70, 0x9d96, 0xcb51, 0xece1, 0x0, 0x0);
        gbc.writeMem(0xd7dd, { 0x73 });
        gbc.writeMem(0xece1, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5a23, gbc.sp());
        EXPECT(0xd7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd7dd));
        EXPECT(0x51, gbc.readMem(0xece1));
        // 73 010F
        gbc.setState(0x4dfb, 0x7144, 0x9b40, 0xffe4, 0x635f, 0xb90f, 0x1, 0x0);
        gbc.writeMem(0x4dfb, { 0x73 });
        gbc.writeMem(0xb90f, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7144, gbc.sp());
        EXPECT(0x4dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xb90f));
        // 73 0110
        gbc.setState(0xded6, 0xb5c3, 0x9340, 0xfd42, 0x4348, 0xff25, 0x0, 0x1);
        gbc.writeMem(0xded6, { 0x73 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb5c3, gbc.sp());
        EXPECT(0xded7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xded6));
        EXPECT(0x48, gbc.readMem(0xff25));
        // 73 0111
        gbc.setState(0x6caf, 0xb98, 0xb5b0, 0xd318, 0x579e, 0xe7dd, 0x1, 0x0);
        gbc.writeMem(0x6caf, { 0x73 });
        gbc.writeMem(0xe7dd, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb98, gbc.sp());
        EXPECT(0x6cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe7dd));
        // 73 0113
        gbc.setState(0xe1be, 0x88ac, 0x6fc0, 0xbe1d, 0x5600, 0xd74a, 0x1, 0x0);
        gbc.writeMem(0xd74a, { 0x0 });
        gbc.writeMem(0xe1be, { 0x73 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x88ac, gbc.sp());
        EXPECT(0xe1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd74a));
        EXPECT(0x73, gbc.readMem(0xe1be));
        // 73 0115
        gbc.setState(0xcf50, 0xbee0, 0x2ba0, 0x7fb, 0xa352, 0xb636, 0x0, 0x1);
        gbc.writeMem(0xb636, { 0x0 });
        gbc.writeMem(0xcf50, { 0x73 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbee0, gbc.sp());
        EXPECT(0xcf51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb636));
        EXPECT(0x73, gbc.readMem(0xcf50));
        // 73 0119
        gbc.setState(0x54ce, 0x6b5b, 0x6b20, 0x2d4f, 0xd4f7, 0xbe62, 0x0, 0x0);
        gbc.writeMem(0x54ce, { 0x73 });
        gbc.writeMem(0xbe62, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6b5b, gbc.sp());
        EXPECT(0x54cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbe62));
        // 73 011A
        gbc.setState(0xc240, 0x8102, 0x5170, 0xafcd, 0x91f7, 0xf7e2, 0x1, 0x1);
        gbc.writeMem(0xc240, { 0x73 });
        gbc.writeMem(0xf7e2, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8102, gbc.sp());
        EXPECT(0xc241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc240));
        EXPECT(0xf7, gbc.readMem(0xf7e2));
        // 73 011C
        gbc.setState(0x1055, 0x3ef8, 0xe8e0, 0x917f, 0xd6, 0xd291, 0x0, 0x1);
        gbc.writeMem(0x1055, { 0x73 });
        gbc.writeMem(0xd291, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3ef8, gbc.sp());
        EXPECT(0x1056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd291));
        // 73 011E
        gbc.setState(0xb49e, 0xfbb, 0x1d50, 0x4e7b, 0x33e8, 0xa6ab, 0x0, 0x1);
        gbc.writeMem(0xa6ab, { 0x0 });
        gbc.writeMem(0xb49e, { 0x73 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfbb, gbc.sp());
        EXPECT(0xb49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xa6ab));
        EXPECT(0x73, gbc.readMem(0xb49e));
        // 73 011F
        gbc.setState(0x1404, 0xf8f7, 0x5710, 0x5fe9, 0x8146, 0x87aa, 0x0, 0x1);
        gbc.writeMem(0x1404, { 0x73 });
        gbc.writeMem(0x87aa, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf8f7, gbc.sp());
        EXPECT(0x1405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x87aa));
        // 73 0122
        gbc.setState(0x88e0, 0xd8cf, 0xdc20, 0x92e6, 0xf84a, 0xf52d, 0x1, 0x0);
        gbc.writeMem(0x88e0, { 0x73 });
        gbc.writeMem(0xf52d, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd8cf, gbc.sp());
        EXPECT(0x88e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x88e0));
        EXPECT(0x4a, gbc.readMem(0xf52d));
        // 73 0123
        gbc.setState(0x2c55, 0xb93d, 0x2160, 0x6e77, 0x3d46, 0xa2aa, 0x0, 0x0);
        gbc.writeMem(0x2c55, { 0x73 });
        gbc.writeMem(0xa2aa, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb93d, gbc.sp());
        EXPECT(0x2c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xa2aa));
        // 73 0127
        gbc.setState(0x54f3, 0x37fa, 0x9d00, 0x2501, 0x3e2f, 0x83b6, 0x1, 0x0);
        gbc.writeMem(0x54f3, { 0x73 });
        gbc.writeMem(0x83b6, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x37fa, gbc.sp());
        EXPECT(0x54f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x83b6));
        // 73 012A
        gbc.setState(0xe87e, 0xda1d, 0x3b50, 0xb2fb, 0x8cb8, 0xe5a2, 0x1, 0x0);
        gbc.writeMem(0xe5a2, { 0x0 });
        gbc.writeMem(0xe87e, { 0x73 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xda1d, gbc.sp());
        EXPECT(0xe87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xe5a2));
        EXPECT(0x73, gbc.readMem(0xe87e));
        // 73 012B
        gbc.setState(0xc760, 0x406d, 0xe440, 0x7e89, 0x6b0, 0xb42d, 0x1, 0x0);
        gbc.writeMem(0xb42d, { 0x0 });
        gbc.writeMem(0xc760, { 0x73 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x406d, gbc.sp());
        EXPECT(0xc761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb42d));
        EXPECT(0x73, gbc.readMem(0xc760));
        // 73 012C
        gbc.setState(0xc991, 0xebf, 0xb90, 0xba1d, 0xc959, 0x8eba, 0x1, 0x0);
        gbc.writeMem(0x8eba, { 0x0 });
        gbc.writeMem(0xc991, { 0x73 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xebf, gbc.sp());
        EXPECT(0xc992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x8eba));
        EXPECT(0x73, gbc.readMem(0xc991));
        // 73 012E
        gbc.setState(0xe37a, 0x6712, 0x4840, 0xff84, 0xc829, 0xd2ee, 0x0, 0x0);
        gbc.writeMem(0xd2ee, { 0x0 });
        gbc.writeMem(0xe37a, { 0x73 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6712, gbc.sp());
        EXPECT(0xe37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd2ee));
        EXPECT(0x73, gbc.readMem(0xe37a));
        // 73 012F
        gbc.setState(0xeac8, 0xc3b7, 0x40f0, 0x3a78, 0x79ee, 0x9997, 0x1, 0x1);
        gbc.writeMem(0x9997, { 0x0 });
        gbc.writeMem(0xeac8, { 0x73 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc3b7, gbc.sp());
        EXPECT(0xeac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9997));
        EXPECT(0x73, gbc.readMem(0xeac8));
        // 73 0131
        gbc.setState(0x54fe, 0x6936, 0x9440, 0x7afc, 0xddeb, 0xd463, 0x1, 0x1);
        gbc.writeMem(0x54fe, { 0x73 });
        gbc.writeMem(0xd463, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6936, gbc.sp());
        EXPECT(0x54ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xd463));
        // 73 0132
        gbc.setState(0xa9da, 0x7aa5, 0xfa20, 0x8bae, 0x12f3, 0xf554, 0x1, 0x1);
        gbc.writeMem(0xa9da, { 0x73 });
        gbc.writeMem(0xf554, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7aa5, gbc.sp());
        EXPECT(0xa9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa9da));
        EXPECT(0xf3, gbc.readMem(0xf554));
        // 73 0137
        gbc.setState(0xc96f, 0x2dc1, 0xbe40, 0xe52, 0xfd71, 0x9532, 0x1, 0x0);
        gbc.writeMem(0x9532, { 0x0 });
        gbc.writeMem(0xc96f, { 0x73 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2dc1, gbc.sp());
        EXPECT(0xc970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9532));
        EXPECT(0x73, gbc.readMem(0xc96f));
        // 73 013A
        gbc.setState(0x5ee5, 0xe802, 0xc720, 0x5e37, 0xcd73, 0x9c84, 0x1, 0x0);
        gbc.writeMem(0x5ee5, { 0x73 });
        gbc.writeMem(0x9c84, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe802, gbc.sp());
        EXPECT(0x5ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9c84));
        // 73 013D
        gbc.setState(0xa06b, 0x4218, 0x52e0, 0xf2ae, 0xc004, 0x9722, 0x1, 0x0);
        gbc.writeMem(0x9722, { 0x0 });
        gbc.writeMem(0xa06b, { 0x73 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4218, gbc.sp());
        EXPECT(0xa06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9722));
        EXPECT(0x73, gbc.readMem(0xa06b));
        // 73 0141
        gbc.setState(0x92c7, 0x6d1c, 0x3f90, 0x5ea4, 0x1a25, 0x8317, 0x0, 0x0);
        gbc.writeMem(0x8317, { 0x0 });
        gbc.writeMem(0x92c7, { 0x73 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6d1c, gbc.sp());
        EXPECT(0x92c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8317));
        EXPECT(0x73, gbc.readMem(0x92c7));
        // 73 0142
        gbc.setState(0x60fe, 0xf79d, 0x5390, 0xa729, 0x3aab, 0x85cc, 0x0, 0x1);
        gbc.writeMem(0x60fe, { 0x73 });
        gbc.writeMem(0x85cc, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf79d, gbc.sp());
        EXPECT(0x60ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x85cc));
        // 73 0143
        gbc.setState(0x4649, 0xca46, 0x3310, 0xa4c3, 0xd88a, 0x8e2f, 0x1, 0x0);
        gbc.writeMem(0x4649, { 0x73 });
        gbc.writeMem(0x8e2f, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xca46, gbc.sp());
        EXPECT(0x464a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8e2f));
        // 73 0149
        gbc.setState(0x9859, 0x619c, 0x1350, 0xa315, 0x265d, 0x9c47, 0x0, 0x1);
        gbc.writeMem(0x9859, { 0x73 });
        gbc.writeMem(0x9c47, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x619c, gbc.sp());
        EXPECT(0x985a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9859));
        EXPECT(0x5d, gbc.readMem(0x9c47));
        // 73 014B
        gbc.setState(0xfcd, 0x5843, 0x5ac0, 0xe454, 0x5a81, 0xdea5, 0x0, 0x1);
        gbc.writeMem(0xfcd, { 0x73 });
        gbc.writeMem(0xdea5, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5843, gbc.sp());
        EXPECT(0xfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdea5));
        // 73 014C
        gbc.setState(0x4a, 0xdec, 0x690, 0x35c0, 0xa88d, 0xebb9, 0x0, 0x1);
        gbc.writeMem(0x4a, { 0x73 });
        gbc.writeMem(0xebb9, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdec, gbc.sp());
        EXPECT(0x4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xebb9));
        // 73 014E
        gbc.setState(0xcbe5, 0xe52a, 0x3d20, 0x757e, 0x18af, 0x8e12, 0x1, 0x0);
        gbc.writeMem(0x8e12, { 0x0 });
        gbc.writeMem(0xcbe5, { 0x73 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe52a, gbc.sp());
        EXPECT(0xcbe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x8e12));
        EXPECT(0x73, gbc.readMem(0xcbe5));
        // 73 014F
        gbc.setState(0xc7df, 0x5ea3, 0x1400, 0xb73f, 0xd9ae, 0xf972, 0x1, 0x0);
        gbc.writeMem(0xc7df, { 0x73 });
        gbc.writeMem(0xf972, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5ea3, gbc.sp());
        EXPECT(0xc7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc7df));
        EXPECT(0xae, gbc.readMem(0xf972));
        // 73 0150
        gbc.setState(0x4a, 0xb7e0, 0xdac0, 0xa58d, 0xd555, 0xf793, 0x0, 0x1);
        gbc.writeMem(0x4a, { 0x73 });
        gbc.writeMem(0xf793, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb7e0, gbc.sp());
        EXPECT(0x4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xf793));
        // 73 0153
        gbc.setState(0x149a, 0x51e4, 0x8100, 0xeee0, 0xd9a9, 0xaf1d, 0x0, 0x1);
        gbc.writeMem(0x149a, { 0x73 });
        gbc.writeMem(0xaf1d, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x51e4, gbc.sp());
        EXPECT(0x149b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xaf1d));
        // 73 0154
        gbc.setState(0xbec9, 0x6eec, 0x1000, 0x4fce, 0xf815, 0xf784, 0x1, 0x1);
        gbc.writeMem(0xbec9, { 0x73 });
        gbc.writeMem(0xf784, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6eec, gbc.sp());
        EXPECT(0xbeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xbec9));
        EXPECT(0x15, gbc.readMem(0xf784));
        // 73 0157
        gbc.setState(0x27b8, 0x2703, 0xdd80, 0x1f2a, 0xa72f, 0xe4c5, 0x0, 0x1);
        gbc.writeMem(0x27b8, { 0x73 });
        gbc.writeMem(0xe4c5, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2703, gbc.sp());
        EXPECT(0x27b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe4c5));
        // 73 0158
        gbc.setState(0xc903, 0xdd51, 0x5d90, 0xcd3a, 0x6d3f, 0xbbae, 0x0, 0x0);
        gbc.writeMem(0xbbae, { 0x0 });
        gbc.writeMem(0xc903, { 0x73 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdd51, gbc.sp());
        EXPECT(0xc904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbbae));
        EXPECT(0x73, gbc.readMem(0xc903));
        // 73 0159
        gbc.setState(0xa8c9, 0xb487, 0xeb90, 0xf222, 0x9e3d, 0xace1, 0x1, 0x1);
        gbc.writeMem(0xa8c9, { 0x73 });
        gbc.writeMem(0xace1, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb487, gbc.sp());
        EXPECT(0xa8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa8c9));
        EXPECT(0x3d, gbc.readMem(0xace1));
        // 73 015A
        gbc.setState(0xd79a, 0xe6db, 0x4a10, 0x155a, 0xdfbf, 0xf372, 0x0, 0x1);
        gbc.writeMem(0xd79a, { 0x73 });
        gbc.writeMem(0xf372, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe6db, gbc.sp());
        EXPECT(0xd79b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd79a));
        EXPECT(0xbf, gbc.readMem(0xf372));
        // 73 015B
        gbc.setState(0x7ba0, 0xb5c0, 0x29a0, 0xe1f, 0x2563, 0x8bd5, 0x0, 0x1);
        gbc.writeMem(0x7ba0, { 0x73 });
        gbc.writeMem(0x8bd5, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb5c0, gbc.sp());
        EXPECT(0x7ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x8bd5));
        // 73 015C
        gbc.setState(0x6d53, 0x889e, 0xb010, 0x409c, 0xf6d5, 0xd97a, 0x0, 0x1);
        gbc.writeMem(0x6d53, { 0x73 });
        gbc.writeMem(0xd97a, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x889e, gbc.sp());
        EXPECT(0x6d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd97a));
        // 73 015D
        gbc.setState(0xa8d0, 0xaed3, 0xd2a0, 0xc0e8, 0xb783, 0xf6f5, 0x1, 0x1);
        gbc.writeMem(0xa8d0, { 0x73 });
        gbc.writeMem(0xf6f5, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xaed3, gbc.sp());
        EXPECT(0xa8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa8d0));
        EXPECT(0x83, gbc.readMem(0xf6f5));
        // 73 015F
        gbc.setState(0x45dd, 0xf5f, 0x6a70, 0x130c, 0xb3df, 0xcf37, 0x1, 0x1);
        gbc.writeMem(0x45dd, { 0x73 });
        gbc.writeMem(0xcf37, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf5f, gbc.sp());
        EXPECT(0x45de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xcf37));
        // 73 0161
        gbc.setState(0x157c, 0xd29d, 0xa2e0, 0x6071, 0xd387, 0x99a6, 0x1, 0x0);
        gbc.writeMem(0x157c, { 0x73 });
        gbc.writeMem(0x99a6, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd29d, gbc.sp());
        EXPECT(0x157d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x99a6));
        // 73 0163
        gbc.setState(0x37c3, 0x9943, 0x2bc0, 0xaac3, 0x73a1, 0xac14, 0x0, 0x0);
        gbc.writeMem(0x37c3, { 0x73 });
        gbc.writeMem(0xac14, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9943, gbc.sp());
        EXPECT(0x37c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xac14));
        // 73 0165
        gbc.setState(0x943a, 0xc435, 0x1580, 0xaf36, 0xc4b1, 0xc26b, 0x0, 0x1);
        gbc.writeMem(0x943a, { 0x73 });
        gbc.writeMem(0xc26b, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc435, gbc.sp());
        EXPECT(0x943b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x943a));
        EXPECT(0xb1, gbc.readMem(0xc26b));
        // 73 0166
        gbc.setState(0x76dd, 0x558b, 0x5b80, 0xf75d, 0x11ee, 0xd314, 0x1, 0x0);
        gbc.writeMem(0x76dd, { 0x73 });
        gbc.writeMem(0xd314, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x558b, gbc.sp());
        EXPECT(0x76de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xd314));
        // 73 0167
        gbc.setState(0x66be, 0xab98, 0x44a0, 0x7793, 0x6e75, 0xeced, 0x0, 0x0);
        gbc.writeMem(0x66be, { 0x73 });
        gbc.writeMem(0xeced, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xab98, gbc.sp());
        EXPECT(0x66bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xeced));
        // 73 0168
        gbc.setState(0x8207, 0xc280, 0x74c0, 0x9325, 0x78e0, 0xc2ba, 0x1, 0x1);
        gbc.writeMem(0x8207, { 0x73 });
        gbc.writeMem(0xc2ba, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc280, gbc.sp());
        EXPECT(0x8208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8207));
        EXPECT(0xe0, gbc.readMem(0xc2ba));
        // 73 0169
        gbc.setState(0xdd2f, 0xe026, 0xc680, 0x86fc, 0x5d4, 0x89f1, 0x0, 0x1);
        gbc.writeMem(0x89f1, { 0x0 });
        gbc.writeMem(0xdd2f, { 0x73 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe026, gbc.sp());
        EXPECT(0xdd30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x89f1));
        EXPECT(0x73, gbc.readMem(0xdd2f));
        // 73 016A
        gbc.setState(0x6e2, 0xa15d, 0xd990, 0xdce8, 0x54bc, 0xcf01, 0x1, 0x1);
        gbc.writeMem(0x6e2, { 0x73 });
        gbc.writeMem(0xcf01, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa15d, gbc.sp());
        EXPECT(0x6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcf01));
        // 73 016B
        gbc.setState(0x5522, 0x7189, 0xb590, 0x670, 0x4b12, 0xd90b, 0x1, 0x1);
        gbc.writeMem(0x5522, { 0x73 });
        gbc.writeMem(0xd90b, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7189, gbc.sp());
        EXPECT(0x5523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xd90b));
        // 73 016D
        gbc.setState(0xd4ee, 0x8730, 0xbcc0, 0x9562, 0x2f73, 0xd672, 0x0, 0x1);
        gbc.writeMem(0xd4ee, { 0x73 });
        gbc.writeMem(0xd672, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8730, gbc.sp());
        EXPECT(0xd4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd4ee));
        EXPECT(0x73, gbc.readMem(0xd672));
        // 73 016E
        gbc.setState(0x72f7, 0x9c2c, 0x4c40, 0xe75f, 0x66cf, 0xf0ce, 0x0, 0x0);
        gbc.writeMem(0x72f7, { 0x73 });
        gbc.writeMem(0xf0ce, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9c2c, gbc.sp());
        EXPECT(0x72f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xf0ce));
        // 73 0171
        gbc.setState(0x396b, 0x12de, 0x80d0, 0x2503, 0xad4a, 0x994e, 0x0, 0x0);
        gbc.writeMem(0x396b, { 0x73 });
        gbc.writeMem(0x994e, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x12de, gbc.sp());
        EXPECT(0x396c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x994e));
        // 73 0172
        gbc.setState(0xa623, 0x404b, 0x7d70, 0xc327, 0x57c9, 0x83ff, 0x1, 0x0);
        gbc.writeMem(0x83ff, { 0x0 });
        gbc.writeMem(0xa623, { 0x73 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x404b, gbc.sp());
        EXPECT(0xa624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x83ff));
        EXPECT(0x73, gbc.readMem(0xa623));
        // 73 017B
        gbc.setState(0x3394, 0x2818, 0x49c0, 0x51f9, 0x360c, 0x95b9, 0x0, 0x0);
        gbc.writeMem(0x3394, { 0x73 });
        gbc.writeMem(0x95b9, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2818, gbc.sp());
        EXPECT(0x3395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x95b9));
        // 73 017C
        gbc.setState(0x6a5f, 0x2b6b, 0x9020, 0xa42e, 0x45b1, 0xf350, 0x0, 0x1);
        gbc.writeMem(0x6a5f, { 0x73 });
        gbc.writeMem(0xf350, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2b6b, gbc.sp());
        EXPECT(0x6a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xf350));
        // 73 017F
        gbc.setState(0x3805, 0xd1d4, 0x26e0, 0xc638, 0x4a83, 0xbc43, 0x0, 0x1);
        gbc.writeMem(0x3805, { 0x73 });
        gbc.writeMem(0xbc43, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd1d4, gbc.sp());
        EXPECT(0x3806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xbc43));
        // 73 0181
        gbc.setState(0x279c, 0xba99, 0x89e0, 0x6b03, 0x9eae, 0xd1e7, 0x0, 0x0);
        gbc.writeMem(0x279c, { 0x73 });
        gbc.writeMem(0xd1e7, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xba99, gbc.sp());
        EXPECT(0x279d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xd1e7));
        // 73 0182
        gbc.setState(0x30cd, 0x8e20, 0x6db0, 0x41a5, 0xa355, 0xfbd8, 0x1, 0x1);
        gbc.writeMem(0x30cd, { 0x73 });
        gbc.writeMem(0xfbd8, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8e20, gbc.sp());
        EXPECT(0x30ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xfbd8));
        // 73 0183
        gbc.setState(0x5868, 0x4039, 0xd7e0, 0xf0b9, 0x3aac, 0xa947, 0x1, 0x1);
        gbc.writeMem(0x5868, { 0x73 });
        gbc.writeMem(0xa947, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4039, gbc.sp());
        EXPECT(0x5869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa947));
        // 73 0185
        gbc.setState(0x6939, 0xda05, 0x6790, 0xada8, 0x85c5, 0xd542, 0x1, 0x0);
        gbc.writeMem(0x6939, { 0x73 });
        gbc.writeMem(0xd542, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xda05, gbc.sp());
        EXPECT(0x693a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd542));
        // 73 0187
        gbc.setState(0x5faf, 0xa08a, 0x33a0, 0x9914, 0xea08, 0xe2e9, 0x1, 0x0);
        gbc.writeMem(0x5faf, { 0x73 });
        gbc.writeMem(0xe2e9, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa08a, gbc.sp());
        EXPECT(0x5fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xe2e9));
        // 73 0188
        gbc.setState(0x31a6, 0x6409, 0x4d00, 0x423e, 0xf4fe, 0xef01, 0x0, 0x1);
        gbc.writeMem(0x31a6, { 0x73 });
        gbc.writeMem(0xef01, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6409, gbc.sp());
        EXPECT(0x31a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xef01));
        // 73 018C
        gbc.setState(0xefe2, 0x6a93, 0x97b0, 0x8672, 0xff7c, 0x86a9, 0x1, 0x0);
        gbc.writeMem(0x86a9, { 0x0 });
        gbc.writeMem(0xefe2, { 0x73 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6a93, gbc.sp());
        EXPECT(0xefe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x86a9));
        EXPECT(0x73, gbc.readMem(0xefe2));
        // 73 018D
        gbc.setState(0x86d, 0x4cd1, 0x770, 0x92d1, 0x4e6b, 0x9120, 0x0, 0x1);
        gbc.writeMem(0x86d, { 0x73 });
        gbc.writeMem(0x9120, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4cd1, gbc.sp());
        EXPECT(0x86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x9120));
        // 73 018E
        gbc.setState(0xa018, 0x6e0a, 0x17c0, 0xc984, 0xdbea, 0x8fd1, 0x0, 0x0);
        gbc.writeMem(0x8fd1, { 0x0 });
        gbc.writeMem(0xa018, { 0x73 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6e0a, gbc.sp());
        EXPECT(0xa019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x8fd1));
        EXPECT(0x73, gbc.readMem(0xa018));
        // 73 0191
        gbc.setState(0x501a, 0x6529, 0xb680, 0x26ad, 0xc1e0, 0x8b76, 0x1, 0x1);
        gbc.writeMem(0x501a, { 0x73 });
        gbc.writeMem(0x8b76, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6529, gbc.sp());
        EXPECT(0x501b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8b76));
        // 73 0192
        gbc.setState(0x267e, 0xfec3, 0x3370, 0xab6c, 0x8e1e, 0x9df4, 0x1, 0x0);
        gbc.writeMem(0x267e, { 0x73 });
        gbc.writeMem(0x9df4, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfec3, gbc.sp());
        EXPECT(0x267f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x9df4));
        // 73 0193
        gbc.setState(0x37a6, 0xefbd, 0xb310, 0x2d40, 0xeca9, 0xdd37, 0x1, 0x1);
        gbc.writeMem(0x37a6, { 0x73 });
        gbc.writeMem(0xdd37, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xefbd, gbc.sp());
        EXPECT(0x37a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xdd37));
        // 73 0194
        gbc.setState(0x861c, 0x1534, 0x3d20, 0x148, 0x84b, 0x8c86, 0x0, 0x1);
        gbc.writeMem(0x861c, { 0x73 });
        gbc.writeMem(0x8c86, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1534, gbc.sp());
        EXPECT(0x861d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x861c));
        EXPECT(0x4b, gbc.readMem(0x8c86));
        // 73 0197
        gbc.setState(0x3dc2, 0xc50, 0xfbc0, 0xf67e, 0xc12c, 0xa794, 0x1, 0x1);
        gbc.writeMem(0x3dc2, { 0x73 });
        gbc.writeMem(0xa794, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc50, gbc.sp());
        EXPECT(0x3dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa794));
        // 73 0198
        gbc.setState(0x579, 0xe3cf, 0x46b0, 0x48cb, 0x5f91, 0x8d9c, 0x0, 0x1);
        gbc.writeMem(0x579, { 0x73 });
        gbc.writeMem(0x8d9c, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe3cf, gbc.sp());
        EXPECT(0x57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8d9c));
        // 73 0199
        gbc.setState(0x9dbe, 0xdd45, 0x61c0, 0x17fa, 0xfe7, 0x96a9, 0x0, 0x1);
        gbc.writeMem(0x96a9, { 0x0 });
        gbc.writeMem(0x9dbe, { 0x73 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdd45, gbc.sp());
        EXPECT(0x9dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x96a9));
        EXPECT(0x73, gbc.readMem(0x9dbe));
        // 73 019B
        gbc.setState(0xdad, 0x80a7, 0xafc0, 0xb445, 0xaa06, 0xec79, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0x73 });
        gbc.writeMem(0xec79, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x80a7, gbc.sp());
        EXPECT(0xdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xec79));
        // 73 019E
        gbc.setState(0x2547, 0x40b6, 0xca40, 0x5978, 0x8c9a, 0xfae6, 0x0, 0x1);
        gbc.writeMem(0x2547, { 0x73 });
        gbc.writeMem(0xfae6, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x40b6, gbc.sp());
        EXPECT(0x2548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xfae6));
        // 73 01A5
        gbc.setState(0xdfc5, 0x712f, 0xeb00, 0x3a14, 0xb929, 0xea9e, 0x1, 0x1);
        gbc.writeMem(0xdfc5, { 0x73 });
        gbc.writeMem(0xea9e, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x712f, gbc.sp());
        EXPECT(0xdfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xdfc5));
        EXPECT(0x29, gbc.readMem(0xea9e));
        // 73 01A6
        gbc.setState(0x1771, 0xc7a, 0x98f0, 0xd6ed, 0x562e, 0xe96d, 0x0, 0x1);
        gbc.writeMem(0x1771, { 0x73 });
        gbc.writeMem(0xe96d, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc7a, gbc.sp());
        EXPECT(0x1772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe96d));
        // 73 01AA
        gbc.setState(0x2596, 0xf168, 0x7c90, 0x39dc, 0x9465, 0xe51c, 0x1, 0x1);
        gbc.writeMem(0x2596, { 0x73 });
        gbc.writeMem(0xe51c, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf168, gbc.sp());
        EXPECT(0x2597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe51c));
        // 73 01AC
        gbc.setState(0x288c, 0x2f25, 0x17c0, 0x41de, 0x87b1, 0xcedb, 0x0, 0x1);
        gbc.writeMem(0x288c, { 0x73 });
        gbc.writeMem(0xcedb, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2f25, gbc.sp());
        EXPECT(0x288d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xcedb));
        // 73 01AE
        gbc.setState(0xcede, 0xac3a, 0xdbd0, 0xc483, 0x3c35, 0xba54, 0x0, 0x1);
        gbc.writeMem(0xba54, { 0x0 });
        gbc.writeMem(0xcede, { 0x73 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xac3a, gbc.sp());
        EXPECT(0xcedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xba54));
        EXPECT(0x73, gbc.readMem(0xcede));
        // 73 01B1
        gbc.setState(0x3cd4, 0xfc91, 0x1d20, 0xb4cd, 0xa3e7, 0xef47, 0x1, 0x1);
        gbc.writeMem(0x3cd4, { 0x73 });
        gbc.writeMem(0xef47, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfc91, gbc.sp());
        EXPECT(0x3cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xef47));
        // 73 01B2
        gbc.setState(0x17f1, 0xd2fc, 0xf8a0, 0x8f22, 0x9fee, 0xcfae, 0x1, 0x0);
        gbc.writeMem(0x17f1, { 0x73 });
        gbc.writeMem(0xcfae, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd2fc, gbc.sp());
        EXPECT(0x17f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xcfae));
        // 73 01B4
        gbc.setState(0x20d1, 0x14c5, 0x4770, 0xaf59, 0xc466, 0x92d4, 0x0, 0x0);
        gbc.writeMem(0x20d1, { 0x73 });
        gbc.writeMem(0x92d4, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x14c5, gbc.sp());
        EXPECT(0x20d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x92d4));
        // 73 01B5
        gbc.setState(0x14c5, 0x4e25, 0x15a0, 0x9a5d, 0xdcf5, 0xe911, 0x1, 0x0);
        gbc.writeMem(0x14c5, { 0x73 });
        gbc.writeMem(0xe911, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4e25, gbc.sp());
        EXPECT(0x14c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe911));
        // 73 01B9
        gbc.setState(0x6474, 0x349c, 0x37e0, 0xd8a4, 0x135d, 0xe1f0, 0x1, 0x1);
        gbc.writeMem(0x6474, { 0x73 });
        gbc.writeMem(0xe1f0, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x349c, gbc.sp());
        EXPECT(0x6475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe1f0));
        // 73 01BA
        gbc.setState(0x9799, 0xebb1, 0x6c20, 0x9fda, 0x76ad, 0xf98d, 0x1, 0x1);
        gbc.writeMem(0x9799, { 0x73 });
        gbc.writeMem(0xf98d, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xebb1, gbc.sp());
        EXPECT(0x979a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9799));
        EXPECT(0xad, gbc.readMem(0xf98d));
        // 73 01BB
        gbc.setState(0xc637, 0x6168, 0xc5e0, 0xb51b, 0x801d, 0xc215, 0x0, 0x0);
        gbc.writeMem(0xc215, { 0x0 });
        gbc.writeMem(0xc637, { 0x73 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0xc638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc215));
        EXPECT(0x73, gbc.readMem(0xc637));
        // 73 01BC
        gbc.setState(0x51d, 0x1409, 0xc300, 0x741b, 0x6de1, 0xbd3e, 0x0, 0x0);
        gbc.writeMem(0x51d, { 0x73 });
        gbc.writeMem(0xbd3e, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1409, gbc.sp());
        EXPECT(0x51e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xbd3e));
        // 73 01BE
        gbc.setState(0xc8, 0x6023, 0xf60, 0xc77a, 0x3588, 0xfe55, 0x0, 0x0);
        gbc.writeMem(0xc8, { 0x73 });
        gbc.writeMem(0xfe55, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6023, gbc.sp());
        EXPECT(0xc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xfe55));
        // 73 01BF
        gbc.setState(0x1f6d, 0x9165, 0x900, 0xd79d, 0xfd77, 0xca49, 0x0, 0x1);
        gbc.writeMem(0x1f6d, { 0x73 });
        gbc.writeMem(0xca49, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9165, gbc.sp());
        EXPECT(0x1f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xca49));
        // 73 01C0
        gbc.setState(0xe476, 0xef92, 0x45f0, 0xa8ee, 0xbc7e, 0x92a4, 0x1, 0x1);
        gbc.writeMem(0x92a4, { 0x0 });
        gbc.writeMem(0xe476, { 0x73 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xef92, gbc.sp());
        EXPECT(0xe477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x92a4));
        EXPECT(0x73, gbc.readMem(0xe476));
        // 73 01C1
        gbc.setState(0x6212, 0xdbba, 0x6040, 0xf06a, 0x8fe0, 0xe699, 0x1, 0x1);
        gbc.writeMem(0x6212, { 0x73 });
        gbc.writeMem(0xe699, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdbba, gbc.sp());
        EXPECT(0x6213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe699));
        // 73 01C3
        gbc.setState(0x16d8, 0x1a0d, 0xb480, 0xc848, 0xa70f, 0xcec4, 0x1, 0x1);
        gbc.writeMem(0x16d8, { 0x73 });
        gbc.writeMem(0xcec4, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1a0d, gbc.sp());
        EXPECT(0x16d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xcec4));
        // 73 01C5
        gbc.setState(0xca03, 0x98fb, 0x5840, 0xfd9, 0xc244, 0xfce1, 0x0, 0x1);
        gbc.writeMem(0xca03, { 0x73 });
        gbc.writeMem(0xfce1, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x98fb, gbc.sp());
        EXPECT(0xca04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xca03));
        EXPECT(0x44, gbc.readMem(0xfce1));
        // 73 01C6
        gbc.setState(0x78ba, 0x4e69, 0xbc50, 0x5630, 0x992a, 0x962d, 0x0, 0x0);
        gbc.writeMem(0x78ba, { 0x73 });
        gbc.writeMem(0x962d, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4e69, gbc.sp());
        EXPECT(0x78bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x962d));
        // 73 01C7
        gbc.setState(0x56a0, 0xc75c, 0x6990, 0xd04c, 0x20b3, 0x9770, 0x1, 0x1);
        gbc.writeMem(0x56a0, { 0x73 });
        gbc.writeMem(0x9770, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc75c, gbc.sp());
        EXPECT(0x56a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9770));
        // 73 01CA
        gbc.setState(0x3398, 0xe4bd, 0xd040, 0xdb6f, 0x870d, 0xab61, 0x0, 0x0);
        gbc.writeMem(0x3398, { 0x73 });
        gbc.writeMem(0xab61, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe4bd, gbc.sp());
        EXPECT(0x3399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xab61));
        // 73 01CB
        gbc.setState(0xc950, 0x679, 0xbe40, 0x734a, 0xf3a, 0xf9dd, 0x1, 0x0);
        gbc.writeMem(0xc950, { 0x73 });
        gbc.writeMem(0xf9dd, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x679, gbc.sp());
        EXPECT(0xc951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc950));
        EXPECT(0x3a, gbc.readMem(0xf9dd));
        // 73 01CE
        gbc.setState(0x11ab, 0x89da, 0x88c0, 0x19b3, 0x14a8, 0xc838, 0x1, 0x1);
        gbc.writeMem(0x11ab, { 0x73 });
        gbc.writeMem(0xc838, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x89da, gbc.sp());
        EXPECT(0x11ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xc838));
        // 73 01CF
        gbc.setState(0xb2e6, 0x2bc0, 0x60d0, 0x47f7, 0x68e8, 0xb76c, 0x0, 0x0);
        gbc.writeMem(0xb2e6, { 0x73 });
        gbc.writeMem(0xb76c, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2bc0, gbc.sp());
        EXPECT(0xb2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb2e6));
        EXPECT(0xe8, gbc.readMem(0xb76c));
        // 73 01D0
        gbc.setState(0x3594, 0xeb04, 0x2c00, 0x36be, 0x87b5, 0xfc60, 0x0, 0x1);
        gbc.writeMem(0x3594, { 0x73 });
        gbc.writeMem(0xfc60, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xeb04, gbc.sp());
        EXPECT(0x3595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xfc60));
        // 73 01D2
        gbc.setState(0x7d99, 0x9d98, 0xf7e0, 0x9e5b, 0x4f11, 0xd517, 0x0, 0x0);
        gbc.writeMem(0x7d99, { 0x73 });
        gbc.writeMem(0xd517, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9d98, gbc.sp());
        EXPECT(0x7d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd517));
        // 73 01D6
        gbc.setState(0x5160, 0xe50e, 0xdee0, 0x33ff, 0xb63b, 0xa0f2, 0x1, 0x1);
        gbc.writeMem(0x5160, { 0x73 });
        gbc.writeMem(0xa0f2, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe50e, gbc.sp());
        EXPECT(0x5161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa0f2));
        // 73 01D7
        gbc.setState(0xa7d, 0x5b09, 0xbe60, 0xc263, 0xb400, 0x67b3, 0x1, 0x0);
        gbc.writeMem(0xa7d, { 0x73 });
        gbc.writeMem(0x67b3, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5b09, gbc.sp());
        EXPECT(0xa7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 73 01D9
        gbc.setState(0x4199, 0x3476, 0xce30, 0x7e87, 0x619b, 0xe6f9, 0x1, 0x0);
        gbc.writeMem(0x4199, { 0x73 });
        gbc.writeMem(0xe6f9, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3476, gbc.sp());
        EXPECT(0x419a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe6f9));
        // 73 01DC
        gbc.setState(0x87a9, 0x1ccc, 0xf9b0, 0xb106, 0x81fd, 0xfb48, 0x1, 0x1);
        gbc.writeMem(0x87a9, { 0x73 });
        gbc.writeMem(0xfb48, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1ccc, gbc.sp());
        EXPECT(0x87aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x87a9));
        EXPECT(0xfd, gbc.readMem(0xfb48));
        // 73 01DD
        gbc.setState(0xc426, 0x5f28, 0xa210, 0xe34a, 0x2d9b, 0xa406, 0x1, 0x1);
        gbc.writeMem(0xa406, { 0x0 });
        gbc.writeMem(0xc426, { 0x73 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5f28, gbc.sp());
        EXPECT(0xc427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa406));
        EXPECT(0x73, gbc.readMem(0xc426));
        // 73 01DE
        gbc.setState(0xe0e7, 0xc2ab, 0x2660, 0xcf19, 0x63a3, 0xfe9a, 0x0, 0x1);
        gbc.writeMem(0xe0e7, { 0x73 });
        gbc.writeMem(0xfe9a, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc2ab, gbc.sp());
        EXPECT(0xe0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xe0e7));
        EXPECT(0xa3, gbc.readMem(0xfe9a));
        // 73 01E0
        gbc.setState(0xef7d, 0x85f9, 0x72b0, 0x7f29, 0x4390, 0xf01a, 0x0, 0x0);
        gbc.writeMem(0xef7d, { 0x73 });
        gbc.writeMem(0xf01a, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x85f9, gbc.sp());
        EXPECT(0xef7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xef7d));
        EXPECT(0x90, gbc.readMem(0xf01a));
        // 73 01E1
        gbc.setState(0xa268, 0x7c7c, 0xe490, 0x1e3a, 0x568c, 0xebdb, 0x1, 0x0);
        gbc.writeMem(0xa268, { 0x73 });
        gbc.writeMem(0xebdb, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7c7c, gbc.sp());
        EXPECT(0xa269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa268));
        EXPECT(0x8c, gbc.readMem(0xebdb));
        // 73 01E2
        gbc.setState(0xe020, 0x96f5, 0x84b0, 0xaf22, 0x48fe, 0x95fe, 0x0, 0x0);
        gbc.writeMem(0x95fe, { 0x0 });
        gbc.writeMem(0xe020, { 0x73 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x96f5, gbc.sp());
        EXPECT(0xe021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x95fe));
        EXPECT(0x73, gbc.readMem(0xe020));
        // 73 01E3
        gbc.setState(0x56b6, 0xa55c, 0x6c40, 0x49f5, 0x9db4, 0xf78a, 0x0, 0x0);
        gbc.writeMem(0x56b6, { 0x73 });
        gbc.writeMem(0xf78a, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa55c, gbc.sp());
        EXPECT(0x56b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xf78a));
        // 73 01E4
        gbc.setState(0x92a, 0x8a6e, 0x30e0, 0x1a64, 0xd4b6, 0xb9f7, 0x1, 0x0);
        gbc.writeMem(0x92a, { 0x73 });
        gbc.writeMem(0xb9f7, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8a6e, gbc.sp());
        EXPECT(0x92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb9f7));
        // 73 01E5
        gbc.setState(0x8b8e, 0x7a69, 0x4ae0, 0xf48a, 0xcea3, 0xa422, 0x1, 0x0);
        gbc.writeMem(0x8b8e, { 0x73 });
        gbc.writeMem(0xa422, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7a69, gbc.sp());
        EXPECT(0x8b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8b8e));
        EXPECT(0xa3, gbc.readMem(0xa422));
        // 73 01E6
        gbc.setState(0xb627, 0x1a29, 0x5880, 0x1592, 0xbcae, 0x97ee, 0x0, 0x1);
        gbc.writeMem(0x97ee, { 0x0 });
        gbc.writeMem(0xb627, { 0x73 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1a29, gbc.sp());
        EXPECT(0xb628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x97ee));
        EXPECT(0x73, gbc.readMem(0xb627));
        // 73 01E7
        gbc.setState(0x71d3, 0x37d5, 0x42b0, 0x6010, 0xfbb4, 0xaf7b, 0x1, 0x1);
        gbc.writeMem(0x71d3, { 0x73 });
        gbc.writeMem(0xaf7b, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x37d5, gbc.sp());
        EXPECT(0x71d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xaf7b));
        // 73 01EB
        gbc.setState(0x4997, 0x484b, 0x22b0, 0xeaa6, 0x345b, 0xb280, 0x0, 0x0);
        gbc.writeMem(0x4997, { 0x73 });
        gbc.writeMem(0xb280, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x484b, gbc.sp());
        EXPECT(0x4998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb280));
        // 73 01EE
        gbc.setState(0x2ad, 0xea70, 0x92c0, 0x4175, 0xed2e, 0xf7f7, 0x1, 0x0);
        gbc.writeMem(0x2ad, { 0x73 });
        gbc.writeMem(0xf7f7, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xea70, gbc.sp());
        EXPECT(0x2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xf7f7));
        // 73 01F2
        gbc.setState(0x4a9c, 0xf2a4, 0xef00, 0xa0d5, 0xa12d, 0x8253, 0x0, 0x0);
        gbc.writeMem(0x4a9c, { 0x73 });
        gbc.writeMem(0x8253, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf2a4, gbc.sp());
        EXPECT(0x4a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8253));
        // 73 01F3
        gbc.setState(0x728e, 0x3921, 0x6860, 0xab61, 0x3f84, 0xb01d, 0x1, 0x0);
        gbc.writeMem(0x728e, { 0x73 });
        gbc.writeMem(0xb01d, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3921, gbc.sp());
        EXPECT(0x728f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xb01d));
        // 73 01F4
        gbc.setState(0x5591, 0x21ae, 0x8ca0, 0x5d53, 0xd40c, 0xfb26, 0x0, 0x1);
        gbc.writeMem(0x5591, { 0x73 });
        gbc.writeMem(0xfb26, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x21ae, gbc.sp());
        EXPECT(0x5592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xfb26));
        // 73 01F5
        gbc.setState(0xa7fc, 0x2729, 0xa670, 0x6f86, 0x3fa3, 0x82b0, 0x0, 0x1);
        gbc.writeMem(0x82b0, { 0x0 });
        gbc.writeMem(0xa7fc, { 0x73 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2729, gbc.sp());
        EXPECT(0xa7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x82b0));
        EXPECT(0x73, gbc.readMem(0xa7fc));
        // 73 01F6
        gbc.setState(0x5d65, 0x187b, 0x5a80, 0xeb56, 0xe32e, 0xef7f, 0x0, 0x0);
        gbc.writeMem(0x5d65, { 0x73 });
        gbc.writeMem(0xef7f, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x187b, gbc.sp());
        EXPECT(0x5d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xef7f));
        // 73 01F7
        gbc.setState(0xa8c4, 0xa66e, 0x9040, 0xe06d, 0x3783, 0x9995, 0x0, 0x0);
        gbc.writeMem(0x9995, { 0x0 });
        gbc.writeMem(0xa8c4, { 0x73 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa66e, gbc.sp());
        EXPECT(0xa8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x9995));
        EXPECT(0x73, gbc.readMem(0xa8c4));
        // 73 01F8
        gbc.setState(0x7f4a, 0x9b6b, 0xa750, 0xb00a, 0x6f, 0xf14b, 0x0, 0x0);
        gbc.writeMem(0x7f4a, { 0x73 });
        gbc.writeMem(0xf14b, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9b6b, gbc.sp());
        EXPECT(0x7f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xf14b));
        // 73 01F9
        gbc.setState(0xa1bd, 0x1d8d, 0xac50, 0x331a, 0x2f4a, 0xf506, 0x0, 0x1);
        gbc.writeMem(0xa1bd, { 0x73 });
        gbc.writeMem(0xf506, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1d8d, gbc.sp());
        EXPECT(0xa1be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa1bd));
        EXPECT(0x4a, gbc.readMem(0xf506));
        // 73 01FA
        gbc.setState(0x35f0, 0xeb44, 0x6040, 0xa033, 0x31f2, 0xdfd7, 0x0, 0x1);
        gbc.writeMem(0x35f0, { 0x73 });
        gbc.writeMem(0xdfd7, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xeb44, gbc.sp());
        EXPECT(0x35f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xdfd7));
        // 73 01FE
        gbc.setState(0x59c5, 0x3871, 0x3a90, 0xf188, 0xbfba, 0xe8b7, 0x1, 0x1);
        gbc.writeMem(0x59c5, { 0x73 });
        gbc.writeMem(0xe8b7, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3871, gbc.sp());
        EXPECT(0x59c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xe8b7));
        // 73 0201
        gbc.setState(0x2f45, 0x8eb4, 0xdea0, 0x8f67, 0x1ebe, 0xb052, 0x1, 0x1);
        gbc.writeMem(0x2f45, { 0x73 });
        gbc.writeMem(0xb052, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8eb4, gbc.sp());
        EXPECT(0x2f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xb052));
        // 73 0206
        gbc.setState(0xa83f, 0x1d9b, 0x1180, 0x1a5b, 0xfbee, 0x8898, 0x1, 0x1);
        gbc.writeMem(0x8898, { 0x0 });
        gbc.writeMem(0xa83f, { 0x73 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1d9b, gbc.sp());
        EXPECT(0xa840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x8898));
        EXPECT(0x73, gbc.readMem(0xa83f));
        // 73 0208
        gbc.setState(0xd0b9, 0xfc76, 0x1320, 0x947e, 0x1df5, 0xe422, 0x1, 0x1);
        gbc.writeMem(0xd0b9, { 0x73 });
        gbc.writeMem(0xe422, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfc76, gbc.sp());
        EXPECT(0xd0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd0b9));
        EXPECT(0xf5, gbc.readMem(0xe422));
        // 73 020A
        gbc.setState(0x711b, 0xc983, 0xf2a0, 0xa45, 0x728b, 0xd917, 0x1, 0x0);
        gbc.writeMem(0x711b, { 0x73 });
        gbc.writeMem(0xd917, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc983, gbc.sp());
        EXPECT(0x711c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xd917));
        // 73 020B
        gbc.setState(0x698f, 0xac23, 0xab40, 0x5187, 0x4f49, 0xf76c, 0x0, 0x0);
        gbc.writeMem(0x698f, { 0x73 });
        gbc.writeMem(0xf76c, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xac23, gbc.sp());
        EXPECT(0x6990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xf76c));
        // 73 020D
        gbc.setState(0x4f0a, 0xb62e, 0xe610, 0x126e, 0x4475, 0x9565, 0x1, 0x1);
        gbc.writeMem(0x4f0a, { 0x73 });
        gbc.writeMem(0x9565, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb62e, gbc.sp());
        EXPECT(0x4f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9565));
        // 73 020E
        gbc.setState(0xa75c, 0x431, 0xdef0, 0x6174, 0x9878, 0x9b7e, 0x1, 0x0);
        gbc.writeMem(0x9b7e, { 0x0 });
        gbc.writeMem(0xa75c, { 0x73 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x431, gbc.sp());
        EXPECT(0xa75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9b7e));
        EXPECT(0x73, gbc.readMem(0xa75c));
        // 73 020F
        gbc.setState(0xae2f, 0x783e, 0xb2a0, 0x978d, 0x6aa4, 0xabc5, 0x1, 0x0);
        gbc.writeMem(0xabc5, { 0x0 });
        gbc.writeMem(0xae2f, { 0x73 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x783e, gbc.sp());
        EXPECT(0xae30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xabc5));
        EXPECT(0x73, gbc.readMem(0xae2f));
        // 73 0210
        gbc.setState(0xc5df, 0x7a69, 0x7310, 0x9f89, 0x3c65, 0xef39, 0x1, 0x1);
        gbc.writeMem(0xc5df, { 0x73 });
        gbc.writeMem(0xef39, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7a69, gbc.sp());
        EXPECT(0xc5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc5df));
        EXPECT(0x65, gbc.readMem(0xef39));
        // 73 0212
        gbc.setState(0xca1e, 0x987f, 0x3430, 0x88c2, 0x4879, 0xf3f1, 0x0, 0x0);
        gbc.writeMem(0xca1e, { 0x73 });
        gbc.writeMem(0xf3f1, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x987f, gbc.sp());
        EXPECT(0xca1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xca1e));
        EXPECT(0x79, gbc.readMem(0xf3f1));
        // 73 0213
        gbc.setState(0x201d, 0x56cc, 0x2330, 0x9ea9, 0x792e, 0xae0c, 0x0, 0x0);
        gbc.writeMem(0x201d, { 0x73 });
        gbc.writeMem(0xae0c, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x56cc, gbc.sp());
        EXPECT(0x201e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xae0c));
        // 73 0217
        gbc.setState(0xba49, 0x1eba, 0xf320, 0x402d, 0x6cf8, 0xc3c5, 0x0, 0x0);
        gbc.writeMem(0xba49, { 0x73 });
        gbc.writeMem(0xc3c5, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1eba, gbc.sp());
        EXPECT(0xba4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xba49));
        EXPECT(0xf8, gbc.readMem(0xc3c5));
        // 73 0219
        gbc.setState(0xdf72, 0x2920, 0xeaa0, 0x6bfc, 0xba53, 0x8a2a, 0x0, 0x1);
        gbc.writeMem(0x8a2a, { 0x0 });
        gbc.writeMem(0xdf72, { 0x73 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2920, gbc.sp());
        EXPECT(0xdf73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8a2a));
        EXPECT(0x73, gbc.readMem(0xdf72));
        // 73 021A
        gbc.setState(0xaf4f, 0x9b1e, 0xe590, 0xfd9d, 0x30d5, 0xcf62, 0x0, 0x1);
        gbc.writeMem(0xaf4f, { 0x73 });
        gbc.writeMem(0xcf62, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9b1e, gbc.sp());
        EXPECT(0xaf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xaf4f));
        EXPECT(0xd5, gbc.readMem(0xcf62));
        // 73 0221
        gbc.setState(0xc2fa, 0xb143, 0x19b0, 0x72d7, 0x8452, 0xc788, 0x0, 0x0);
        gbc.writeMem(0xc2fa, { 0x73 });
        gbc.writeMem(0xc788, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb143, gbc.sp());
        EXPECT(0xc2fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc2fa));
        EXPECT(0x52, gbc.readMem(0xc788));
        // 73 0225
        gbc.setState(0x4e7, 0xe2bf, 0xab30, 0x9d97, 0x4aa3, 0xfbe2, 0x1, 0x0);
        gbc.writeMem(0x4e7, { 0x73 });
        gbc.writeMem(0xfbe2, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe2bf, gbc.sp());
        EXPECT(0x4e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xfbe2));
        // 73 0226
        gbc.setState(0x9514, 0x7c5a, 0x8c0, 0x45db, 0x19d3, 0xf6b9, 0x1, 0x0);
        gbc.writeMem(0x9514, { 0x73 });
        gbc.writeMem(0xf6b9, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7c5a, gbc.sp());
        EXPECT(0x9515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9514));
        EXPECT(0xd3, gbc.readMem(0xf6b9));
        // 73 0228
        gbc.setState(0x9316, 0x730, 0xf660, 0xd0e7, 0xed45, 0xf8fd, 0x1, 0x0);
        gbc.writeMem(0x9316, { 0x73 });
        gbc.writeMem(0xf8fd, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x730, gbc.sp());
        EXPECT(0x9317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9316));
        EXPECT(0x45, gbc.readMem(0xf8fd));
        // 73 022D
        gbc.setState(0xed3e, 0x486, 0x1be0, 0x3663, 0xdde5, 0x943c, 0x1, 0x0);
        gbc.writeMem(0x943c, { 0x0 });
        gbc.writeMem(0xed3e, { 0x73 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x486, gbc.sp());
        EXPECT(0xed3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x943c));
        EXPECT(0x73, gbc.readMem(0xed3e));
        // 73 0230
        gbc.setState(0xb70c, 0x954c, 0xe550, 0x493, 0xa82d, 0xd05b, 0x1, 0x0);
        gbc.writeMem(0xb70c, { 0x73 });
        gbc.writeMem(0xd05b, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x954c, gbc.sp());
        EXPECT(0xb70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb70c));
        EXPECT(0x2d, gbc.readMem(0xd05b));
        // 73 0232
        gbc.setState(0x41c, 0xb94, 0x98d0, 0x6827, 0xe6a4, 0xf423, 0x1, 0x1);
        gbc.writeMem(0x41c, { 0x73 });
        gbc.writeMem(0xf423, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb94, gbc.sp());
        EXPECT(0x41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xf423));
        // 73 0233
        gbc.setState(0x5684, 0x2df0, 0xabd0, 0x73ea, 0xbcd5, 0xee06, 0x0, 0x0);
        gbc.writeMem(0x5684, { 0x73 });
        gbc.writeMem(0xee06, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2df0, gbc.sp());
        EXPECT(0x5685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xee06));
        // 73 0234
        gbc.setState(0x18a2, 0x5e08, 0xb700, 0x8bed, 0xcf16, 0xed53, 0x1, 0x1);
        gbc.writeMem(0x18a2, { 0x73 });
        gbc.writeMem(0xed53, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5e08, gbc.sp());
        EXPECT(0x18a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xed53));
        // 73 0235
        gbc.setState(0xe2e, 0x5612, 0x8220, 0x64fb, 0x2f7c, 0x8a1f, 0x0, 0x0);
        gbc.writeMem(0xe2e, { 0x73 });
        gbc.writeMem(0x8a1f, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5612, gbc.sp());
        EXPECT(0xe2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x8a1f));
        // 73 0236
        gbc.setState(0xcc6d, 0x4077, 0x1d40, 0xe52c, 0xc0b0, 0xe96d, 0x0, 0x0);
        gbc.writeMem(0xcc6d, { 0x73 });
        gbc.writeMem(0xe96d, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4077, gbc.sp());
        EXPECT(0xcc6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xcc6d));
        EXPECT(0xb0, gbc.readMem(0xe96d));
        // 73 0238
        gbc.setState(0xc328, 0xff59, 0x2cb0, 0xadf6, 0x31, 0xe85e, 0x0, 0x0);
        gbc.writeMem(0xc328, { 0x73 });
        gbc.writeMem(0xe85e, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xff59, gbc.sp());
        EXPECT(0xc329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc328));
        EXPECT(0x31, gbc.readMem(0xe85e));
        // 73 0239
        gbc.setState(0x817b, 0x1ab7, 0x22d0, 0x351b, 0x7728, 0xbc72, 0x1, 0x0);
        gbc.writeMem(0x817b, { 0x73 });
        gbc.writeMem(0xbc72, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1ab7, gbc.sp());
        EXPECT(0x817c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x817b));
        EXPECT(0x28, gbc.readMem(0xbc72));
        // 73 023B
        gbc.setState(0xd45, 0xbaad, 0x3e10, 0x2d17, 0x61e4, 0x8a0a, 0x0, 0x0);
        gbc.writeMem(0xd45, { 0x73 });
        gbc.writeMem(0x8a0a, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbaad, gbc.sp());
        EXPECT(0xd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x8a0a));
        // 73 023C
        gbc.setState(0x3e68, 0x8e9e, 0x3dd0, 0x6d5a, 0x357a, 0xd24c, 0x1, 0x1);
        gbc.writeMem(0x3e68, { 0x73 });
        gbc.writeMem(0xd24c, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8e9e, gbc.sp());
        EXPECT(0x3e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd24c));
        // 73 023E
        gbc.setState(0xbf5d, 0x3afa, 0xc8e0, 0x5944, 0x67f0, 0xce2d, 0x0, 0x0);
        gbc.writeMem(0xbf5d, { 0x73 });
        gbc.writeMem(0xce2d, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3afa, gbc.sp());
        EXPECT(0xbf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xbf5d));
        EXPECT(0xf0, gbc.readMem(0xce2d));
        // 73 023F
        gbc.setState(0x7a20, 0x7b3a, 0xbc80, 0x5da4, 0x618c, 0x8e87, 0x1, 0x1);
        gbc.writeMem(0x7a20, { 0x73 });
        gbc.writeMem(0x8e87, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7b3a, gbc.sp());
        EXPECT(0x7a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8e87));
        // 73 0240
        gbc.setState(0xe4ac, 0x82ca, 0x7920, 0x308d, 0xc957, 0xa9d6, 0x1, 0x0);
        gbc.writeMem(0xa9d6, { 0x0 });
        gbc.writeMem(0xe4ac, { 0x73 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x82ca, gbc.sp());
        EXPECT(0xe4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa9d6));
        EXPECT(0x73, gbc.readMem(0xe4ac));
        // 73 0241
        gbc.setState(0x2cfb, 0x27cb, 0xb0d0, 0x8811, 0x3c0a, 0xbadb, 0x0, 0x1);
        gbc.writeMem(0x2cfb, { 0x73 });
        gbc.writeMem(0xbadb, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x27cb, gbc.sp());
        EXPECT(0x2cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbadb));
        // 73 0242
        gbc.setState(0x22bf, 0x76a5, 0x3770, 0xd3f1, 0x23c8, 0xbdab, 0x1, 0x1);
        gbc.writeMem(0x22bf, { 0x73 });
        gbc.writeMem(0xbdab, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x76a5, gbc.sp());
        EXPECT(0x22c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbdab));
        // 73 0245
        gbc.setState(0x618c, 0x532c, 0x1970, 0xe374, 0x7a8f, 0xb054, 0x0, 0x1);
        gbc.writeMem(0x618c, { 0x73 });
        gbc.writeMem(0xb054, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x532c, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb054));
        // 73 0246
        gbc.setState(0xb7a6, 0xf258, 0x4570, 0xc657, 0x620b, 0xe893, 0x1, 0x0);
        gbc.writeMem(0xb7a6, { 0x73 });
        gbc.writeMem(0xe893, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf258, gbc.sp());
        EXPECT(0xb7a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb7a6));
        EXPECT(0xb, gbc.readMem(0xe893));
        // 73 0247
        gbc.setState(0x63d2, 0x7930, 0xe8f0, 0x9472, 0xd553, 0xd634, 0x1, 0x0);
        gbc.writeMem(0x63d2, { 0x73 });
        gbc.writeMem(0xd634, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7930, gbc.sp());
        EXPECT(0x63d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd634));
        // 73 024B
        gbc.setState(0x866f, 0xd9d2, 0xd9b0, 0x5ba1, 0xbc57, 0xe65f, 0x1, 0x0);
        gbc.writeMem(0x866f, { 0x73 });
        gbc.writeMem(0xe65f, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd9d2, gbc.sp());
        EXPECT(0x8670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x866f));
        EXPECT(0x57, gbc.readMem(0xe65f));
        // 73 024D
        gbc.setState(0x5929, 0x4e8a, 0x96a0, 0xe75d, 0x7371, 0x804c, 0x0, 0x1);
        gbc.writeMem(0x5929, { 0x73 });
        gbc.writeMem(0x804c, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4e8a, gbc.sp());
        EXPECT(0x592a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x804c));
        // 73 024E
        gbc.setState(0xa1b2, 0xd1a3, 0x5cd0, 0xf598, 0x7903, 0xea69, 0x0, 0x1);
        gbc.writeMem(0xa1b2, { 0x73 });
        gbc.writeMem(0xea69, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd1a3, gbc.sp());
        EXPECT(0xa1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa1b2));
        EXPECT(0x3, gbc.readMem(0xea69));
        // 73 024F
        gbc.setState(0xa4eb, 0xf854, 0x7610, 0x5a9b, 0x50cb, 0xc978, 0x1, 0x0);
        gbc.writeMem(0xa4eb, { 0x73 });
        gbc.writeMem(0xc978, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf854, gbc.sp());
        EXPECT(0xa4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa4eb));
        EXPECT(0xcb, gbc.readMem(0xc978));
        // 73 0251
        gbc.setState(0x275b, 0x7ae6, 0xb4f0, 0x638a, 0x216a, 0xf31c, 0x0, 0x0);
        gbc.writeMem(0x275b, { 0x73 });
        gbc.writeMem(0xf31c, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7ae6, gbc.sp());
        EXPECT(0x275c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xf31c));
        // 73 0252
        gbc.setState(0x9745, 0xb0ab, 0x94b0, 0x3844, 0x1962, 0x8521, 0x0, 0x0);
        gbc.writeMem(0x8521, { 0x0 });
        gbc.writeMem(0x9745, { 0x73 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb0ab, gbc.sp());
        EXPECT(0x9746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x8521));
        EXPECT(0x73, gbc.readMem(0x9745));
        // 73 0255
        gbc.setState(0xb699, 0xe6c5, 0xe560, 0x2fd4, 0x541, 0xbd4d, 0x1, 0x1);
        gbc.writeMem(0xb699, { 0x73 });
        gbc.writeMem(0xbd4d, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe6c5, gbc.sp());
        EXPECT(0xb69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb699));
        EXPECT(0x41, gbc.readMem(0xbd4d));
        // 73 025A
        gbc.setState(0xab90, 0xd2f8, 0x4ed0, 0x6224, 0x1e09, 0xb040, 0x1, 0x0);
        gbc.writeMem(0xab90, { 0x73 });
        gbc.writeMem(0xb040, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd2f8, gbc.sp());
        EXPECT(0xab91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xab90));
        EXPECT(0x9, gbc.readMem(0xb040));
        // 73 025C
        gbc.setState(0xc6e5, 0x9953, 0x2d90, 0x1f8a, 0x6a08, 0xeef0, 0x0, 0x0);
        gbc.writeMem(0xc6e5, { 0x73 });
        gbc.writeMem(0xeef0, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9953, gbc.sp());
        EXPECT(0xc6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc6e5));
        EXPECT(0x8, gbc.readMem(0xeef0));
        // 73 025D
        gbc.setState(0x2fad, 0x119d, 0x4300, 0x6bb7, 0x5f39, 0xc6e4, 0x1, 0x0);
        gbc.writeMem(0x2fad, { 0x73 });
        gbc.writeMem(0xc6e4, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x119d, gbc.sp());
        EXPECT(0x2fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xc6e4));
        // 73 0261
        gbc.setState(0x4011, 0x9641, 0x8fd0, 0x3564, 0xb19f, 0x9ce0, 0x1, 0x0);
        gbc.writeMem(0x4011, { 0x73 });
        gbc.writeMem(0x9ce0, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9641, gbc.sp());
        EXPECT(0x4012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9ce0));
        // 73 0263
        gbc.setState(0x59f4, 0x6195, 0xcb40, 0x439b, 0xd116, 0xc3c5, 0x1, 0x0);
        gbc.writeMem(0x59f4, { 0x73 });
        gbc.writeMem(0xc3c5, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6195, gbc.sp());
        EXPECT(0x59f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc3c5));
        // 73 0264
        gbc.setState(0xc167, 0x6e0d, 0xa640, 0xe172, 0x38c9, 0xaef2, 0x0, 0x1);
        gbc.writeMem(0xaef2, { 0x0 });
        gbc.writeMem(0xc167, { 0x73 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6e0d, gbc.sp());
        EXPECT(0xc168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xaef2));
        EXPECT(0x73, gbc.readMem(0xc167));
        // 73 0269
        gbc.setState(0xa5cd, 0x8470, 0x7c10, 0x1616, 0xeb7f, 0xd8aa, 0x0, 0x0);
        gbc.writeMem(0xa5cd, { 0x73 });
        gbc.writeMem(0xd8aa, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8470, gbc.sp());
        EXPECT(0xa5ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa5cd));
        EXPECT(0x7f, gbc.readMem(0xd8aa));
        // 73 026B
        gbc.setState(0x220, 0xf88b, 0x61a0, 0x776c, 0xfec2, 0xdd4e, 0x0, 0x1);
        gbc.writeMem(0x220, { 0x73 });
        gbc.writeMem(0xdd4e, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0x221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdd4e));
        // 73 026D
        gbc.setState(0x7844, 0x6ee5, 0x4e0, 0x7b25, 0x5aa7, 0x8f50, 0x0, 0x0);
        gbc.writeMem(0x7844, { 0x73 });
        gbc.writeMem(0x8f50, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6ee5, gbc.sp());
        EXPECT(0x7845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8f50));
        // 73 026F
        gbc.setState(0x47b1, 0xc8a, 0x1360, 0xb6e9, 0xbb03, 0xfa06, 0x1, 0x0);
        gbc.writeMem(0x47b1, { 0x73 });
        gbc.writeMem(0xfa06, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc8a, gbc.sp());
        EXPECT(0x47b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xfa06));
        // 73 0270
        gbc.setState(0xdd8d, 0x23fc, 0x87f0, 0x8f45, 0x53ca, 0xaa17, 0x1, 0x1);
        gbc.writeMem(0xaa17, { 0x0 });
        gbc.writeMem(0xdd8d, { 0x73 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x23fc, gbc.sp());
        EXPECT(0xdd8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xaa17));
        EXPECT(0x73, gbc.readMem(0xdd8d));
        // 73 0271
        gbc.setState(0x5ecb, 0x506b, 0x9a40, 0xff9, 0x5c03, 0x8c11, 0x1, 0x0);
        gbc.writeMem(0x5ecb, { 0x73 });
        gbc.writeMem(0x8c11, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x506b, gbc.sp());
        EXPECT(0x5ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8c11));
        // 73 0272
        gbc.setState(0x667, 0x28f, 0xd480, 0xc69a, 0x6ee5, 0xadd6, 0x1, 0x0);
        gbc.writeMem(0x667, { 0x73 });
        gbc.writeMem(0xadd6, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x28f, gbc.sp());
        EXPECT(0x668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xadd6));
        // 73 0274
        gbc.setState(0x3159, 0xc924, 0x69c0, 0x44d6, 0xcf9b, 0xdad7, 0x0, 0x1);
        gbc.writeMem(0x3159, { 0x73 });
        gbc.writeMem(0xdad7, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc924, gbc.sp());
        EXPECT(0x315a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdad7));
        // 73 0276
        gbc.setState(0x899, 0x200b, 0xed70, 0x85ea, 0xada1, 0xfe9a, 0x1, 0x0);
        gbc.writeMem(0x899, { 0x73 });
        gbc.writeMem(0xfe9a, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x200b, gbc.sp());
        EXPECT(0x89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xfe9a));
        // 73 0277
        gbc.setState(0x4339, 0x4d7a, 0x5b90, 0x7e62, 0x9f47, 0xec18, 0x0, 0x0);
        gbc.writeMem(0x4339, { 0x73 });
        gbc.writeMem(0xec18, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4d7a, gbc.sp());
        EXPECT(0x433a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xec18));
        // 73 0279
        gbc.setState(0x8a73, 0x5c57, 0x70b0, 0xa543, 0x4b45, 0xb2f1, 0x1, 0x0);
        gbc.writeMem(0x8a73, { 0x73 });
        gbc.writeMem(0xb2f1, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5c57, gbc.sp());
        EXPECT(0x8a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8a73));
        EXPECT(0x45, gbc.readMem(0xb2f1));
        // 73 027B
        gbc.setState(0x8125, 0x429d, 0x3bd0, 0xc45a, 0xac0c, 0xd036, 0x0, 0x0);
        gbc.writeMem(0x8125, { 0x73 });
        gbc.writeMem(0xd036, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x429d, gbc.sp());
        EXPECT(0x8126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8125));
        EXPECT(0xc, gbc.readMem(0xd036));
        // 73 027C
        gbc.setState(0x8861, 0xe2db, 0xd010, 0xdd72, 0x9993, 0xa4d1, 0x0, 0x0);
        gbc.writeMem(0x8861, { 0x73 });
        gbc.writeMem(0xa4d1, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe2db, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8861));
        EXPECT(0x93, gbc.readMem(0xa4d1));
        // 73 027F
        gbc.setState(0xbcb8, 0x70d8, 0x2520, 0x811c, 0x4af5, 0x976f, 0x1, 0x1);
        gbc.writeMem(0x976f, { 0x0 });
        gbc.writeMem(0xbcb8, { 0x73 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x70d8, gbc.sp());
        EXPECT(0xbcb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x976f));
        EXPECT(0x73, gbc.readMem(0xbcb8));
        // 73 0280
        gbc.setState(0x9580, 0x5f6f, 0x250, 0xd7b1, 0x7694, 0xaf85, 0x1, 0x0);
        gbc.writeMem(0x9580, { 0x73 });
        gbc.writeMem(0xaf85, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0x9581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9580));
        EXPECT(0x94, gbc.readMem(0xaf85));
        // 73 0282
        gbc.setState(0x2219, 0xf4cd, 0x2920, 0xf122, 0x440b, 0xc32b, 0x0, 0x0);
        gbc.writeMem(0x2219, { 0x73 });
        gbc.writeMem(0xc32b, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf4cd, gbc.sp());
        EXPECT(0x221a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc32b));
        // 73 0283
        gbc.setState(0x9130, 0x162d, 0xa4d0, 0x9165, 0x9d7e, 0xb3f5, 0x1, 0x1);
        gbc.writeMem(0x9130, { 0x73 });
        gbc.writeMem(0xb3f5, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x162d, gbc.sp());
        EXPECT(0x9131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9130));
        EXPECT(0x7e, gbc.readMem(0xb3f5));
        // 73 0289
        gbc.setState(0xdcb8, 0xf438, 0x3cc0, 0xa48a, 0x49c0, 0xa5aa, 0x0, 0x0);
        gbc.writeMem(0xa5aa, { 0x0 });
        gbc.writeMem(0xdcb8, { 0x73 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf438, gbc.sp());
        EXPECT(0xdcb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa5aa));
        EXPECT(0x73, gbc.readMem(0xdcb8));
        // 73 028C
        gbc.setState(0xed56, 0x5796, 0x7ad0, 0x933a, 0xa9fe, 0xb0ac, 0x0, 0x0);
        gbc.writeMem(0xb0ac, { 0x0 });
        gbc.writeMem(0xed56, { 0x73 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5796, gbc.sp());
        EXPECT(0xed57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb0ac));
        EXPECT(0x73, gbc.readMem(0xed56));
        // 73 028E
        gbc.setState(0x4100, 0xf25c, 0xec60, 0x6834, 0x9c76, 0xa160, 0x0, 0x1);
        gbc.writeMem(0x4100, { 0x73 });
        gbc.writeMem(0xa160, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf25c, gbc.sp());
        EXPECT(0x4101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa160));
        // 73 0290
        gbc.setState(0x67c, 0x9b34, 0xac40, 0x2de1, 0x9c21, 0xe471, 0x0, 0x0);
        gbc.writeMem(0x67c, { 0x73 });
        gbc.writeMem(0xe471, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9b34, gbc.sp());
        EXPECT(0x67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe471));
        // 73 0291
        gbc.setState(0x5603, 0x30b5, 0xb7d0, 0xb7cb, 0x5bdf, 0x8c9a, 0x0, 0x0);
        gbc.writeMem(0x5603, { 0x73 });
        gbc.writeMem(0x8c9a, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x30b5, gbc.sp());
        EXPECT(0x5604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8c9a));
        // 73 0293
        gbc.setState(0xd2a7, 0x99f6, 0xe9e0, 0x27a9, 0x5d52, 0xc7b6, 0x0, 0x0);
        gbc.writeMem(0xc7b6, { 0x0 });
        gbc.writeMem(0xd2a7, { 0x73 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x99f6, gbc.sp());
        EXPECT(0xd2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc7b6));
        EXPECT(0x73, gbc.readMem(0xd2a7));
        // 73 0294
        gbc.setState(0x6d5c, 0xcedc, 0x7290, 0x5e8b, 0x8189, 0xe5ff, 0x0, 0x1);
        gbc.writeMem(0x6d5c, { 0x73 });
        gbc.writeMem(0xe5ff, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcedc, gbc.sp());
        EXPECT(0x6d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe5ff));
        // 73 0298
        gbc.setState(0xbc9, 0x98ca, 0x1a00, 0x16c8, 0x616e, 0xd30a, 0x1, 0x0);
        gbc.writeMem(0xbc9, { 0x73 });
        gbc.writeMem(0xd30a, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x98ca, gbc.sp());
        EXPECT(0xbca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd30a));
        // 73 029B
        gbc.setState(0x567a, 0x46a6, 0x1060, 0xdbd9, 0x4c21, 0xf8fb, 0x1, 0x0);
        gbc.writeMem(0x567a, { 0x73 });
        gbc.writeMem(0xf8fb, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x46a6, gbc.sp());
        EXPECT(0x567b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xf8fb));
        // 73 029C
        gbc.setState(0x40e2, 0xb0fd, 0x2ab0, 0x1484, 0x20a, 0xbcbb, 0x0, 0x0);
        gbc.writeMem(0x40e2, { 0x73 });
        gbc.writeMem(0xbcbb, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb0fd, gbc.sp());
        EXPECT(0x40e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbcbb));
        // 73 029F
        gbc.setState(0xd209, 0xbea4, 0x9010, 0x75b6, 0xc8bd, 0xe918, 0x0, 0x0);
        gbc.writeMem(0xd209, { 0x73 });
        gbc.writeMem(0xe918, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbea4, gbc.sp());
        EXPECT(0xd20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd209));
        EXPECT(0xbd, gbc.readMem(0xe918));
        // 73 02A1
        gbc.setState(0x3edf, 0x24d, 0x8dd0, 0x1dc0, 0xd862, 0xed33, 0x1, 0x1);
        gbc.writeMem(0x3edf, { 0x73 });
        gbc.writeMem(0xed33, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x24d, gbc.sp());
        EXPECT(0x3ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xed33));
        // 73 02A5
        gbc.setState(0x564c, 0x2397, 0x91b0, 0xf2a0, 0xd851, 0xe291, 0x1, 0x0);
        gbc.writeMem(0x564c, { 0x73 });
        gbc.writeMem(0xe291, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2397, gbc.sp());
        EXPECT(0x564d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe291));
        // 73 02A7
        gbc.setState(0x986f, 0xdcc, 0x2460, 0xdf80, 0x64e9, 0xf08e, 0x1, 0x0);
        gbc.writeMem(0x986f, { 0x73 });
        gbc.writeMem(0xf08e, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdcc, gbc.sp());
        EXPECT(0x9870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x986f));
        EXPECT(0xe9, gbc.readMem(0xf08e));
        // 73 02A9
        gbc.setState(0x330, 0x61ec, 0xf80, 0x6a23, 0xc3b4, 0x939b, 0x1, 0x0);
        gbc.writeMem(0x330, { 0x73 });
        gbc.writeMem(0x939b, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x61ec, gbc.sp());
        EXPECT(0x331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x939b));
        // 73 02AB
        gbc.setState(0xcccf, 0xf9a7, 0xac0, 0x2376, 0xf83, 0xcf31, 0x1, 0x0);
        gbc.writeMem(0xcccf, { 0x73 });
        gbc.writeMem(0xcf31, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf9a7, gbc.sp());
        EXPECT(0xccd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xcccf));
        EXPECT(0x83, gbc.readMem(0xcf31));
        // 73 02AC
        gbc.setState(0x1f2e, 0x793f, 0x50c0, 0x21b, 0xdcba, 0xa5f0, 0x0, 0x0);
        gbc.writeMem(0x1f2e, { 0x73 });
        gbc.writeMem(0xa5f0, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x793f, gbc.sp());
        EXPECT(0x1f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xa5f0));
        // 73 02AE
        gbc.setState(0x7367, 0x6d1d, 0xc020, 0xfc78, 0x3c8d, 0x9ade, 0x1, 0x1);
        gbc.writeMem(0x7367, { 0x73 });
        gbc.writeMem(0x9ade, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6d1d, gbc.sp());
        EXPECT(0x7368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9ade));
        // 73 02AF
        gbc.setState(0x7e40, 0x48a, 0x6610, 0x760e, 0xbfb3, 0xb4aa, 0x0, 0x1);
        gbc.writeMem(0x7e40, { 0x73 });
        gbc.writeMem(0xb4aa, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x48a, gbc.sp());
        EXPECT(0x7e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb4aa));
        // 73 02B0
        gbc.setState(0x2f, 0x10ed, 0xae40, 0xff85, 0x454f, 0x80f5, 0x1, 0x1);
        gbc.writeMem(0x2f, { 0x73 });
        gbc.writeMem(0x80f5, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x10ed, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x80f5));
        // 73 02B2
        gbc.setState(0x48bc, 0xfa91, 0xef10, 0xd975, 0xaaaf, 0xa694, 0x0, 0x0);
        gbc.writeMem(0x48bc, { 0x73 });
        gbc.writeMem(0xa694, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfa91, gbc.sp());
        EXPECT(0x48bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xa694));
        // 73 02B3
        gbc.setState(0x8a6d, 0x5058, 0x75a0, 0x211c, 0x56b4, 0x9a58, 0x0, 0x1);
        gbc.writeMem(0x8a6d, { 0x73 });
        gbc.writeMem(0x9a58, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5058, gbc.sp());
        EXPECT(0x8a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8a6d));
        EXPECT(0xb4, gbc.readMem(0x9a58));
        // 73 02B5
        gbc.setState(0xcd07, 0xe9f8, 0x3750, 0x2875, 0x7795, 0x8a8a, 0x1, 0x0);
        gbc.writeMem(0x8a8a, { 0x0 });
        gbc.writeMem(0xcd07, { 0x73 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe9f8, gbc.sp());
        EXPECT(0xcd08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8a8a));
        EXPECT(0x73, gbc.readMem(0xcd07));
        // 73 02B7
        gbc.setState(0x2088, 0xad81, 0x7030, 0x7c8d, 0x505c, 0xd305, 0x1, 0x0);
        gbc.writeMem(0x2088, { 0x73 });
        gbc.writeMem(0xd305, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xad81, gbc.sp());
        EXPECT(0x2089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xd305));
        // 73 02B8
        gbc.setState(0xaa40, 0x895, 0x150, 0x3fb6, 0x3743, 0xe9e8, 0x0, 0x0);
        gbc.writeMem(0xaa40, { 0x73 });
        gbc.writeMem(0xe9e8, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x895, gbc.sp());
        EXPECT(0xaa41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xaa40));
        EXPECT(0x43, gbc.readMem(0xe9e8));
        // 73 02BC
        gbc.setState(0xc50, 0x4fd6, 0xba60, 0x9da1, 0x4645, 0x83aa, 0x1, 0x1);
        gbc.writeMem(0xc50, { 0x73 });
        gbc.writeMem(0x83aa, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4fd6, gbc.sp());
        EXPECT(0xc51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x83aa));
        // 73 02BE
        gbc.setState(0x48dc, 0xd67, 0x1580, 0xcf6c, 0xe2e, 0xae0c, 0x0, 0x0);
        gbc.writeMem(0x48dc, { 0x73 });
        gbc.writeMem(0xae0c, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd67, gbc.sp());
        EXPECT(0x48dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xae0c));
        // 73 02C0
        gbc.setState(0x5e8b, 0xe7bf, 0xd9d0, 0x5ab9, 0xb042, 0x833d, 0x0, 0x0);
        gbc.writeMem(0x5e8b, { 0x73 });
        gbc.writeMem(0x833d, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe7bf, gbc.sp());
        EXPECT(0x5e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x833d));
        // 73 02C2
        gbc.setState(0xf9e, 0xcaac, 0xb330, 0x8588, 0x2ae2, 0xbcc1, 0x1, 0x1);
        gbc.writeMem(0xf9e, { 0x73 });
        gbc.writeMem(0xbcc1, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcaac, gbc.sp());
        EXPECT(0xf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbcc1));
        // 73 02C4
        gbc.setState(0xd32f, 0x698, 0xcdb0, 0x4442, 0xdc45, 0xc6c3, 0x1, 0x1);
        gbc.writeMem(0xc6c3, { 0x0 });
        gbc.writeMem(0xd32f, { 0x73 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x698, gbc.sp());
        EXPECT(0xd330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xc6c3));
        EXPECT(0x73, gbc.readMem(0xd32f));
        // 73 02CA
        gbc.setState(0xc998, 0x5249, 0xf0e0, 0x945c, 0x1219, 0x8d57, 0x1, 0x0);
        gbc.writeMem(0x8d57, { 0x0 });
        gbc.writeMem(0xc998, { 0x73 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5249, gbc.sp());
        EXPECT(0xc999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8d57));
        EXPECT(0x73, gbc.readMem(0xc998));
        // 73 02CF
        gbc.setState(0x4652, 0xf83, 0xb560, 0x625b, 0x1512, 0xb366, 0x1, 0x0);
        gbc.writeMem(0x4652, { 0x73 });
        gbc.writeMem(0xb366, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf83, gbc.sp());
        EXPECT(0x4653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb366));
        // 73 02D4
        gbc.setState(0x180d, 0x525e, 0x3600, 0x3feb, 0x4662, 0xced9, 0x0, 0x1);
        gbc.writeMem(0x180d, { 0x73 });
        gbc.writeMem(0xced9, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x525e, gbc.sp());
        EXPECT(0x180e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xced9));
        // 73 02D6
        gbc.setState(0xb256, 0xa961, 0x3600, 0xbb47, 0x6b7d, 0xdb10, 0x0, 0x0);
        gbc.writeMem(0xb256, { 0x73 });
        gbc.writeMem(0xdb10, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa961, gbc.sp());
        EXPECT(0xb257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb256));
        EXPECT(0x7d, gbc.readMem(0xdb10));
        // 73 02DD
        gbc.setState(0xd7b, 0x3845, 0xf450, 0xe250, 0xbeef, 0xe635, 0x0, 0x0);
        gbc.writeMem(0xd7b, { 0x73 });
        gbc.writeMem(0xe635, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3845, gbc.sp());
        EXPECT(0xd7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xe635));
        // 73 02E0
        gbc.setState(0x598f, 0x3ff1, 0x6020, 0x7c25, 0x2816, 0xb228, 0x1, 0x0);
        gbc.writeMem(0x598f, { 0x73 });
        gbc.writeMem(0xb228, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3ff1, gbc.sp());
        EXPECT(0x5990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb228));
        // 73 02E1
        gbc.setState(0x6428, 0x58cf, 0x8c10, 0x57b6, 0x2f15, 0xdb77, 0x0, 0x1);
        gbc.writeMem(0x6428, { 0x73 });
        gbc.writeMem(0xdb77, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x58cf, gbc.sp());
        EXPECT(0x6429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdb77));
        // 73 02E3
        gbc.setState(0xcdb3, 0x3cd4, 0x2fc0, 0x78d9, 0x85d0, 0x8219, 0x1, 0x0);
        gbc.writeMem(0x8219, { 0x0 });
        gbc.writeMem(0xcdb3, { 0x73 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3cd4, gbc.sp());
        EXPECT(0xcdb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8219));
        EXPECT(0x73, gbc.readMem(0xcdb3));
        // 73 02E6
        gbc.setState(0x4f37, 0xc3bd, 0x6670, 0xd2f7, 0xba2b, 0xd420, 0x1, 0x0);
        gbc.writeMem(0x4f37, { 0x73 });
        gbc.writeMem(0xd420, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc3bd, gbc.sp());
        EXPECT(0x4f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd420));
        // 73 02E8
        gbc.setState(0xd0d0, 0xa66d, 0xf830, 0x4e84, 0x575d, 0xab1d, 0x0, 0x1);
        gbc.writeMem(0xab1d, { 0x0 });
        gbc.writeMem(0xd0d0, { 0x73 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa66d, gbc.sp());
        EXPECT(0xd0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xab1d));
        EXPECT(0x73, gbc.readMem(0xd0d0));
        // 73 02E9
        gbc.setState(0x537d, 0x32a6, 0xfc40, 0xfb1a, 0xb11c, 0xb53c, 0x1, 0x1);
        gbc.writeMem(0x537d, { 0x73 });
        gbc.writeMem(0xb53c, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x32a6, gbc.sp());
        EXPECT(0x537e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb53c));
        // 73 02EA
        gbc.setState(0xe0b, 0x6873, 0x7c10, 0xd636, 0x27a2, 0x8d1b, 0x0, 0x1);
        gbc.writeMem(0xe0b, { 0x73 });
        gbc.writeMem(0x8d1b, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6873, gbc.sp());
        EXPECT(0xe0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8d1b));
        // 73 02EB
        gbc.setState(0xea0b, 0xc7cc, 0x7f00, 0x5a73, 0x756b, 0xc359, 0x0, 0x1);
        gbc.writeMem(0xc359, { 0x0 });
        gbc.writeMem(0xea0b, { 0x73 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc7cc, gbc.sp());
        EXPECT(0xea0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xc359));
        EXPECT(0x73, gbc.readMem(0xea0b));
        // 73 02EE
        gbc.setState(0x3f24, 0xd986, 0xdef0, 0xdfdf, 0xa3cf, 0xd49d, 0x0, 0x0);
        gbc.writeMem(0x3f24, { 0x73 });
        gbc.writeMem(0xd49d, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd986, gbc.sp());
        EXPECT(0x3f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd49d));
        // 73 02EF
        gbc.setState(0xea7d, 0xcaac, 0x96d0, 0xa8d1, 0x2d0c, 0xb2c9, 0x0, 0x0);
        gbc.writeMem(0xb2c9, { 0x0 });
        gbc.writeMem(0xea7d, { 0x73 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcaac, gbc.sp());
        EXPECT(0xea7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb2c9));
        EXPECT(0x73, gbc.readMem(0xea7d));
        // 73 02F2
        gbc.setState(0x948f, 0xd47b, 0xe060, 0xe5b0, 0xc8c1, 0xaa57, 0x1, 0x1);
        gbc.writeMem(0x948f, { 0x73 });
        gbc.writeMem(0xaa57, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd47b, gbc.sp());
        EXPECT(0x9490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x948f));
        EXPECT(0xc1, gbc.readMem(0xaa57));
        // 73 02F5
        gbc.setState(0x398b, 0xe9f6, 0x71d0, 0x1a61, 0xa945, 0x9c9f, 0x1, 0x1);
        gbc.writeMem(0x398b, { 0x73 });
        gbc.writeMem(0x9c9f, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe9f6, gbc.sp());
        EXPECT(0x398c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9c9f));
        // 73 02FA
        gbc.setState(0xe997, 0xd31, 0xf3f0, 0x5309, 0xb1dd, 0x9784, 0x0, 0x0);
        gbc.writeMem(0x9784, { 0x0 });
        gbc.writeMem(0xe997, { 0x73 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd31, gbc.sp());
        EXPECT(0xe998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9784));
        EXPECT(0x73, gbc.readMem(0xe997));
        // 73 02FD
        gbc.setState(0xc9ce, 0x97d6, 0x90c0, 0x3823, 0xe869, 0xa4cd, 0x1, 0x0);
        gbc.writeMem(0xa4cd, { 0x0 });
        gbc.writeMem(0xc9ce, { 0x73 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x97d6, gbc.sp());
        EXPECT(0xc9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa4cd));
        EXPECT(0x73, gbc.readMem(0xc9ce));
        // 73 02FF
        gbc.setState(0xb1db, 0xb08a, 0x29c0, 0x108c, 0xff39, 0xafde, 0x1, 0x0);
        gbc.writeMem(0xafde, { 0x0 });
        gbc.writeMem(0xb1db, { 0x73 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb08a, gbc.sp());
        EXPECT(0xb1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xafde));
        EXPECT(0x73, gbc.readMem(0xb1db));
        // 73 0301
        gbc.setState(0x93a0, 0x4208, 0xdf00, 0x1b20, 0xc8c3, 0xad26, 0x0, 0x1);
        gbc.writeMem(0x93a0, { 0x73 });
        gbc.writeMem(0xad26, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4208, gbc.sp());
        EXPECT(0x93a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x93a0));
        EXPECT(0xc3, gbc.readMem(0xad26));
        // 73 0302
        gbc.setState(0xb7c3, 0x2631, 0xb390, 0x88c2, 0xf431, 0xc84b, 0x0, 0x1);
        gbc.writeMem(0xb7c3, { 0x73 });
        gbc.writeMem(0xc84b, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2631, gbc.sp());
        EXPECT(0xb7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb7c3));
        EXPECT(0x31, gbc.readMem(0xc84b));
        // 73 030A
        gbc.setState(0x5afe, 0xc6d3, 0x7f80, 0xfb1d, 0xaa83, 0xa2b9, 0x0, 0x1);
        gbc.writeMem(0x5afe, { 0x73 });
        gbc.writeMem(0xa2b9, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc6d3, gbc.sp());
        EXPECT(0x5aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xa2b9));
        // 73 030F
        gbc.setState(0x3c2f, 0x69b1, 0xdf40, 0xb9e6, 0x5b9e, 0xb765, 0x0, 0x0);
        gbc.writeMem(0x3c2f, { 0x73 });
        gbc.writeMem(0xb765, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x69b1, gbc.sp());
        EXPECT(0x3c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb765));
        // 73 0310
        gbc.setState(0xaee6, 0xc4fd, 0xcf00, 0xb5c0, 0x8fab, 0x888e, 0x0, 0x1);
        gbc.writeMem(0x888e, { 0x0 });
        gbc.writeMem(0xaee6, { 0x73 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc4fd, gbc.sp());
        EXPECT(0xaee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x888e));
        EXPECT(0x73, gbc.readMem(0xaee6));
        // 73 0313
        gbc.setState(0xaf08, 0x46c5, 0xf0d0, 0x74c3, 0xa820, 0xaa10, 0x1, 0x0);
        gbc.writeMem(0xaa10, { 0x0 });
        gbc.writeMem(0xaf08, { 0x73 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x46c5, gbc.sp());
        EXPECT(0xaf09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaa10));
        EXPECT(0x73, gbc.readMem(0xaf08));
        // 73 0314
        gbc.setState(0x3728, 0x1dd8, 0x5650, 0xf403, 0x1d40, 0xe2ab, 0x0, 0x0);
        gbc.writeMem(0x3728, { 0x73 });
        gbc.writeMem(0xe2ab, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1dd8, gbc.sp());
        EXPECT(0x3729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe2ab));
        // 73 0316
        gbc.setState(0x91ad, 0xe7f0, 0x6f20, 0xb1cc, 0xf2ad, 0xfaa9, 0x0, 0x0);
        gbc.writeMem(0x91ad, { 0x73 });
        gbc.writeMem(0xfaa9, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe7f0, gbc.sp());
        EXPECT(0x91ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x91ad));
        EXPECT(0xad, gbc.readMem(0xfaa9));
        // 73 0317
        gbc.setState(0x3c1f, 0x475c, 0x2640, 0xd66e, 0x26c9, 0xb023, 0x0, 0x1);
        gbc.writeMem(0x3c1f, { 0x73 });
        gbc.writeMem(0xb023, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x475c, gbc.sp());
        EXPECT(0x3c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb023));
        // 73 031A
        gbc.setState(0xcdc4, 0x3910, 0x98c0, 0x57e9, 0x8105, 0xf447, 0x0, 0x0);
        gbc.writeMem(0xcdc4, { 0x73 });
        gbc.writeMem(0xf447, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3910, gbc.sp());
        EXPECT(0xcdc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xcdc4));
        EXPECT(0x5, gbc.readMem(0xf447));
        // 73 031B
        gbc.setState(0x7616, 0xbea8, 0xe70, 0x8386, 0x3a30, 0xfb48, 0x0, 0x0);
        gbc.writeMem(0x7616, { 0x73 });
        gbc.writeMem(0xfb48, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbea8, gbc.sp());
        EXPECT(0x7617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xfb48));
        // 73 0322
        gbc.setState(0x1ee6, 0x88dd, 0x76b0, 0x2b1d, 0x9118, 0xdc58, 0x0, 0x0);
        gbc.writeMem(0x1ee6, { 0x73 });
        gbc.writeMem(0xdc58, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x88dd, gbc.sp());
        EXPECT(0x1ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xdc58));
        // 73 0328
        gbc.setState(0xeb21, 0x226, 0x1170, 0xae92, 0xcdb7, 0x9ccc, 0x1, 0x0);
        gbc.writeMem(0x9ccc, { 0x0 });
        gbc.writeMem(0xeb21, { 0x73 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x226, gbc.sp());
        EXPECT(0xeb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9ccc));
        EXPECT(0x73, gbc.readMem(0xeb21));
        // 73 0329
        gbc.setState(0xab03, 0x29ec, 0x2510, 0x1aed, 0xfc1f, 0xcf32, 0x0, 0x1);
        gbc.writeMem(0xab03, { 0x73 });
        gbc.writeMem(0xcf32, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x29ec, gbc.sp());
        EXPECT(0xab04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xab03));
        EXPECT(0x1f, gbc.readMem(0xcf32));
        // 73 032B
        gbc.setState(0x6311, 0x3262, 0xc3d0, 0x467b, 0x5939, 0xbc0f, 0x1, 0x1);
        gbc.writeMem(0x6311, { 0x73 });
        gbc.writeMem(0xbc0f, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3262, gbc.sp());
        EXPECT(0x6312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xbc0f));
        // 73 032C
        gbc.setState(0xc7dd, 0xeba0, 0xe6f0, 0x4780, 0x165f, 0x9ca8, 0x0, 0x0);
        gbc.writeMem(0x9ca8, { 0x0 });
        gbc.writeMem(0xc7dd, { 0x73 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xeba0, gbc.sp());
        EXPECT(0xc7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x9ca8));
        EXPECT(0x73, gbc.readMem(0xc7dd));
        // 73 032E
        gbc.setState(0xd289, 0x519f, 0xd0f0, 0x6842, 0xdfb2, 0xe040, 0x1, 0x0);
        gbc.writeMem(0xd289, { 0x73 });
        gbc.writeMem(0xe040, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x519f, gbc.sp());
        EXPECT(0xd28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd289));
        EXPECT(0xb2, gbc.readMem(0xe040));
        // 73 0333
        gbc.setState(0x770c, 0x5ed8, 0x45f0, 0xa308, 0x60c7, 0x9987, 0x1, 0x1);
        gbc.writeMem(0x770c, { 0x73 });
        gbc.writeMem(0x9987, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5ed8, gbc.sp());
        EXPECT(0x770d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9987));
        // 73 0334
        gbc.setState(0x54df, 0xf188, 0x11a0, 0xbfac, 0x97, 0xef27, 0x1, 0x0);
        gbc.writeMem(0x54df, { 0x73 });
        gbc.writeMem(0xef27, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf188, gbc.sp());
        EXPECT(0x54e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xef27));
        // 73 0336
        gbc.setState(0x1b7a, 0xbe54, 0x7ec0, 0x1c52, 0x5750, 0xc4fc, 0x0, 0x0);
        gbc.writeMem(0x1b7a, { 0x73 });
        gbc.writeMem(0xc4fc, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbe54, gbc.sp());
        EXPECT(0x1b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc4fc));
        // 73 0337
        gbc.setState(0xd83a, 0xfcec, 0xf8e0, 0x9c3a, 0x32f9, 0xba48, 0x1, 0x0);
        gbc.writeMem(0xba48, { 0x0 });
        gbc.writeMem(0xd83a, { 0x73 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfcec, gbc.sp());
        EXPECT(0xd83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xba48));
        EXPECT(0x73, gbc.readMem(0xd83a));
        // 73 0338
        gbc.setState(0x5c37, 0xee67, 0x73a0, 0x3816, 0x5683, 0x9dde, 0x1, 0x0);
        gbc.writeMem(0x5c37, { 0x73 });
        gbc.writeMem(0x9dde, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xee67, gbc.sp());
        EXPECT(0x5c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x9dde));
        // 73 033A
        gbc.setState(0xa1fd, 0xdc36, 0xb070, 0xb15d, 0x701a, 0xeaa9, 0x0, 0x0);
        gbc.writeMem(0xa1fd, { 0x73 });
        gbc.writeMem(0xeaa9, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdc36, gbc.sp());
        EXPECT(0xa1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa1fd));
        EXPECT(0x1a, gbc.readMem(0xeaa9));
        // 73 033D
        gbc.setState(0x239c, 0xfa58, 0x53b0, 0xa128, 0x1163, 0xe2c4, 0x0, 0x0);
        gbc.writeMem(0x239c, { 0x73 });
        gbc.writeMem(0xe2c4, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfa58, gbc.sp());
        EXPECT(0x239d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xe2c4));
        // 73 033E
        gbc.setState(0x505c, 0x93fc, 0x6930, 0x75d9, 0x5351, 0xa2a9, 0x1, 0x1);
        gbc.writeMem(0x505c, { 0x73 });
        gbc.writeMem(0xa2a9, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x93fc, gbc.sp());
        EXPECT(0x505d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa2a9));
        // 73 033F
        gbc.setState(0xcddc, 0xf67c, 0x3a00, 0xf356, 0x1e42, 0x9a8c, 0x0, 0x1);
        gbc.writeMem(0x9a8c, { 0x0 });
        gbc.writeMem(0xcddc, { 0x73 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf67c, gbc.sp());
        EXPECT(0xcddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9a8c));
        EXPECT(0x73, gbc.readMem(0xcddc));
        // 73 0340
        gbc.setState(0xd306, 0xd64, 0x4840, 0x8e90, 0xf287, 0xdacf, 0x0, 0x1);
        gbc.writeMem(0xd306, { 0x73 });
        gbc.writeMem(0xdacf, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd64, gbc.sp());
        EXPECT(0xd307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd306));
        EXPECT(0x87, gbc.readMem(0xdacf));
        // 73 0343
        gbc.setState(0x41f1, 0x20e1, 0x9480, 0xef6c, 0x6357, 0xcf6d, 0x0, 0x0);
        gbc.writeMem(0x41f1, { 0x73 });
        gbc.writeMem(0xcf6d, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x20e1, gbc.sp());
        EXPECT(0x41f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcf6d));
        // 73 0344
        gbc.setState(0xcdde, 0x7996, 0xb5c0, 0x94aa, 0x2338, 0xd825, 0x1, 0x1);
        gbc.writeMem(0xcdde, { 0x73 });
        gbc.writeMem(0xd825, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7996, gbc.sp());
        EXPECT(0xcddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xcdde));
        EXPECT(0x38, gbc.readMem(0xd825));
        // 73 0349
        gbc.setState(0xef4f, 0xb847, 0xeff0, 0xf91a, 0xaab7, 0xded4, 0x1, 0x1);
        gbc.writeMem(0xded4, { 0x0 });
        gbc.writeMem(0xef4f, { 0x73 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb847, gbc.sp());
        EXPECT(0xef50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xded4));
        EXPECT(0x73, gbc.readMem(0xef4f));
        // 73 034B
        gbc.setState(0x796c, 0xaac3, 0x2ec0, 0xa85e, 0x92b, 0xa00d, 0x1, 0x0);
        gbc.writeMem(0x796c, { 0x73 });
        gbc.writeMem(0xa00d, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaac3, gbc.sp());
        EXPECT(0x796d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa00d));
        // 73 034D
        gbc.setState(0xc1fd, 0x8a1e, 0x2140, 0xf07d, 0x4b47, 0xb23d, 0x1, 0x0);
        gbc.writeMem(0xb23d, { 0x0 });
        gbc.writeMem(0xc1fd, { 0x73 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8a1e, gbc.sp());
        EXPECT(0xc1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb23d));
        EXPECT(0x73, gbc.readMem(0xc1fd));
        // 73 034E
        gbc.setState(0xb4e3, 0xb395, 0x5600, 0x82aa, 0xebed, 0xc574, 0x0, 0x0);
        gbc.writeMem(0xb4e3, { 0x73 });
        gbc.writeMem(0xc574, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb395, gbc.sp());
        EXPECT(0xb4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb4e3));
        EXPECT(0xed, gbc.readMem(0xc574));
        // 73 034F
        gbc.setState(0x3eb7, 0x6c9c, 0x140, 0xde51, 0x95b9, 0xf871, 0x1, 0x1);
        gbc.writeMem(0x3eb7, { 0x73 });
        gbc.writeMem(0xf871, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6c9c, gbc.sp());
        EXPECT(0x3eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xf871));
        // 73 0350
        gbc.setState(0xac9f, 0x4634, 0x1260, 0x4504, 0xe07c, 0xa321, 0x1, 0x0);
        gbc.writeMem(0xa321, { 0x0 });
        gbc.writeMem(0xac9f, { 0x73 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4634, gbc.sp());
        EXPECT(0xaca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa321));
        EXPECT(0x73, gbc.readMem(0xac9f));
        // 73 0352
        gbc.setState(0x320f, 0x1179, 0xe4d0, 0x1977, 0x30a5, 0x92dd, 0x0, 0x0);
        gbc.writeMem(0x320f, { 0x73 });
        gbc.writeMem(0x92dd, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1179, gbc.sp());
        EXPECT(0x3210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x92dd));
        // 73 0355
        gbc.setState(0xcd93, 0xe43, 0x8950, 0xf2c, 0xf318, 0x98ef, 0x1, 0x1);
        gbc.writeMem(0x98ef, { 0x0 });
        gbc.writeMem(0xcd93, { 0x73 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe43, gbc.sp());
        EXPECT(0xcd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x98ef));
        EXPECT(0x73, gbc.readMem(0xcd93));
        // 73 0357
        gbc.setState(0x6b15, 0x5075, 0x34d0, 0x5285, 0x378, 0x820a, 0x1, 0x0);
        gbc.writeMem(0x6b15, { 0x73 });
        gbc.writeMem(0x820a, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5075, gbc.sp());
        EXPECT(0x6b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x820a));
        // 73 0358
        gbc.setState(0x561b, 0x84f3, 0x5f80, 0x7633, 0xed2f, 0x8150, 0x0, 0x1);
        gbc.writeMem(0x561b, { 0x73 });
        gbc.writeMem(0x8150, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x84f3, gbc.sp());
        EXPECT(0x561c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8150));
        // 73 0361
        gbc.setState(0xb1aa, 0x9c87, 0xedb0, 0x4e8e, 0xf3c5, 0xdff9, 0x1, 0x1);
        gbc.writeMem(0xb1aa, { 0x73 });
        gbc.writeMem(0xdff9, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9c87, gbc.sp());
        EXPECT(0xb1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb1aa));
        EXPECT(0xc5, gbc.readMem(0xdff9));
        // 73 0363
        gbc.setState(0xc29f, 0x6307, 0x81a0, 0xaa66, 0xbfbd, 0x828d, 0x1, 0x1);
        gbc.writeMem(0x828d, { 0x0 });
        gbc.writeMem(0xc29f, { 0x73 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6307, gbc.sp());
        EXPECT(0xc2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x828d));
        EXPECT(0x73, gbc.readMem(0xc29f));
        // 73 0368
        gbc.setState(0x3252, 0x3e1b, 0xfd90, 0x11eb, 0xae77, 0xb3e1, 0x1, 0x1);
        gbc.writeMem(0x3252, { 0x73 });
        gbc.writeMem(0xb3e1, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3e1b, gbc.sp());
        EXPECT(0x3253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb3e1));
        // 73 0369
        gbc.setState(0xb4c3, 0xd57b, 0x5070, 0x9d3f, 0xcc2d, 0x8d67, 0x1, 0x0);
        gbc.writeMem(0x8d67, { 0x0 });
        gbc.writeMem(0xb4c3, { 0x73 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd57b, gbc.sp());
        EXPECT(0xb4c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8d67));
        EXPECT(0x73, gbc.readMem(0xb4c3));
        // 73 036A
        gbc.setState(0x422c, 0x794e, 0xdcd0, 0x8156, 0xe113, 0xd0e0, 0x1, 0x0);
        gbc.writeMem(0x422c, { 0x73 });
        gbc.writeMem(0xd0e0, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x794e, gbc.sp());
        EXPECT(0x422d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd0e0));
        // 73 036E
        gbc.setState(0x969b, 0x4c21, 0xbfe0, 0xa664, 0x9116, 0xc011, 0x1, 0x0);
        gbc.writeMem(0x969b, { 0x73 });
        gbc.writeMem(0xc011, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4c21, gbc.sp());
        EXPECT(0x969c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x969b));
        EXPECT(0x16, gbc.readMem(0xc011));
        // 73 0374
        gbc.setState(0x32a1, 0xeb1d, 0x8bf0, 0xef55, 0x1230, 0xfde0, 0x0, 0x0);
        gbc.writeMem(0x32a1, { 0x73 });
        gbc.writeMem(0xfde0, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xeb1d, gbc.sp());
        EXPECT(0x32a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xfde0));
        // 73 037A
        gbc.setState(0x3f2b, 0x7bf4, 0x4da0, 0x8946, 0x3267, 0xcef4, 0x0, 0x0);
        gbc.writeMem(0x3f2b, { 0x73 });
        gbc.writeMem(0xcef4, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7bf4, gbc.sp());
        EXPECT(0x3f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xcef4));
        // 73 037C
        gbc.setState(0x111a, 0x69c4, 0x74f0, 0xb94a, 0xd54d, 0xcf1b, 0x1, 0x1);
        gbc.writeMem(0x111a, { 0x73 });
        gbc.writeMem(0xcf1b, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x69c4, gbc.sp());
        EXPECT(0x111b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcf1b));
        // 73 037D
        gbc.setState(0x1c60, 0x56e7, 0xa790, 0x5f58, 0x2f4c, 0x8b26, 0x1, 0x1);
        gbc.writeMem(0x1c60, { 0x73 });
        gbc.writeMem(0x8b26, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x56e7, gbc.sp());
        EXPECT(0x1c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8b26));
        // 73 037F
        gbc.setState(0x8f0f, 0xd595, 0x9a00, 0x37fb, 0x3866, 0x8b18, 0x1, 0x0);
        gbc.writeMem(0x8b18, { 0x0 });
        gbc.writeMem(0x8f0f, { 0x73 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd595, gbc.sp());
        EXPECT(0x8f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8b18));
        EXPECT(0x73, gbc.readMem(0x8f0f));
        // 73 0381
        gbc.setState(0xa1ce, 0xbfbe, 0x7e90, 0x1214, 0x43e7, 0xffec, 0x0, 0x0);
        gbc.writeMem(0xa1ce, { 0x73 });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbfbe, gbc.sp());
        EXPECT(0xa1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa1ce));
        EXPECT(0xe7, gbc.readMem(0xffec));
        // 73 0382
        gbc.setState(0xd4b7, 0x7790, 0xe040, 0x723, 0x745a, 0xf7a5, 0x0, 0x1);
        gbc.writeMem(0xd4b7, { 0x73 });
        gbc.writeMem(0xf7a5, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7790, gbc.sp());
        EXPECT(0xd4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd4b7));
        EXPECT(0x5a, gbc.readMem(0xf7a5));
        // 73 0385
        gbc.setState(0xe216, 0x2e08, 0xeeb0, 0x7837, 0x63, 0xbfbc, 0x0, 0x0);
        gbc.writeMem(0xbfbc, { 0x0 });
        gbc.writeMem(0xe216, { 0x73 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2e08, gbc.sp());
        EXPECT(0xe217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xbfbc));
        EXPECT(0x73, gbc.readMem(0xe216));
        // 73 0386
        gbc.setState(0xb79e, 0x7909, 0x360, 0xea30, 0xb9c4, 0xeeef, 0x1, 0x0);
        gbc.writeMem(0xb79e, { 0x73 });
        gbc.writeMem(0xeeef, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7909, gbc.sp());
        EXPECT(0xb79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb79e));
        EXPECT(0xc4, gbc.readMem(0xeeef));
        // 73 0387
        gbc.setState(0x7220, 0x49ce, 0x5ca0, 0xd072, 0xfc3b, 0xd4fc, 0x0, 0x1);
        gbc.writeMem(0x7220, { 0x73 });
        gbc.writeMem(0xd4fc, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x49ce, gbc.sp());
        EXPECT(0x7221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd4fc));
        // 73 0388
        gbc.setState(0x5d76, 0xdab6, 0x20, 0x1420, 0x5843, 0xbe30, 0x1, 0x1);
        gbc.writeMem(0x5d76, { 0x73 });
        gbc.writeMem(0xbe30, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdab6, gbc.sp());
        EXPECT(0x5d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbe30));
        // 73 0389
        gbc.setState(0xecc0, 0xfbea, 0x6950, 0xd360, 0x5698, 0x8014, 0x1, 0x0);
        gbc.writeMem(0x8014, { 0x0 });
        gbc.writeMem(0xecc0, { 0x73 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfbea, gbc.sp());
        EXPECT(0xecc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8014));
        EXPECT(0x73, gbc.readMem(0xecc0));
        // 73 038D
        gbc.setState(0x5fe, 0x1ec8, 0xca70, 0xeaf9, 0x8a4c, 0xeee7, 0x1, 0x1);
        gbc.writeMem(0x5fe, { 0x73 });
        gbc.writeMem(0xeee7, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1ec8, gbc.sp());
        EXPECT(0x5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xeee7));
        // 73 038E
        gbc.setState(0xe481, 0x12c5, 0x8cd0, 0xe99a, 0xa6e, 0xc9f0, 0x1, 0x0);
        gbc.writeMem(0xc9f0, { 0x0 });
        gbc.writeMem(0xe481, { 0x73 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x12c5, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc9f0));
        EXPECT(0x73, gbc.readMem(0xe481));
        // 73 0390
        gbc.setState(0x9d0e, 0xe28c, 0x7120, 0x16f0, 0x85b0, 0x84b1, 0x0, 0x1);
        gbc.writeMem(0x84b1, { 0x0 });
        gbc.writeMem(0x9d0e, { 0x73 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe28c, gbc.sp());
        EXPECT(0x9d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x84b1));
        EXPECT(0x73, gbc.readMem(0x9d0e));
        // 73 0391
        gbc.setState(0x5ed9, 0x105b, 0xbc80, 0xa403, 0x83fb, 0xbbd5, 0x0, 0x0);
        gbc.writeMem(0x5ed9, { 0x73 });
        gbc.writeMem(0xbbd5, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x105b, gbc.sp());
        EXPECT(0x5eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xbbd5));
        // 73 0392
        gbc.setState(0x395e, 0x3cf, 0xbd70, 0xa564, 0x9639, 0xa9f0, 0x0, 0x0);
        gbc.writeMem(0x395e, { 0x73 });
        gbc.writeMem(0xa9f0, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3cf, gbc.sp());
        EXPECT(0x395f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa9f0));
        // 73 0395
        gbc.setState(0x7180, 0xbb78, 0x3a10, 0x2bdc, 0xa846, 0xc027, 0x0, 0x1);
        gbc.writeMem(0x7180, { 0x73 });
        gbc.writeMem(0xc027, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbb78, gbc.sp());
        EXPECT(0x7181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xc027));
        // 73 0396
        gbc.setState(0xdea8, 0xe672, 0x170, 0xb6de, 0xa2eb, 0xaf7b, 0x0, 0x1);
        gbc.writeMem(0xaf7b, { 0x0 });
        gbc.writeMem(0xdea8, { 0x73 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe672, gbc.sp());
        EXPECT(0xdea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xaf7b));
        EXPECT(0x73, gbc.readMem(0xdea8));
        // 73 0397
        gbc.setState(0x51e0, 0x4eb3, 0x4be0, 0x4600, 0xa092, 0xfdb6, 0x1, 0x0);
        gbc.writeMem(0x51e0, { 0x73 });
        gbc.writeMem(0xfdb6, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4eb3, gbc.sp());
        EXPECT(0x51e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xfdb6));
        // 73 0398
        gbc.setState(0xe65b, 0x4623, 0xcd60, 0x6c31, 0xe79f, 0xa0ad, 0x1, 0x0);
        gbc.writeMem(0xa0ad, { 0x0 });
        gbc.writeMem(0xe65b, { 0x73 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4623, gbc.sp());
        EXPECT(0xe65c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa0ad));
        EXPECT(0x73, gbc.readMem(0xe65b));
        // 73 039B
        gbc.setState(0x7f7c, 0xc724, 0xd6c0, 0xe5c3, 0x85ce, 0x986a, 0x1, 0x1);
        gbc.writeMem(0x7f7c, { 0x73 });
        gbc.writeMem(0x986a, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc724, gbc.sp());
        EXPECT(0x7f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x986a));
        // 73 039C
        gbc.setState(0xa693, 0x7699, 0xcfa0, 0x8f77, 0x4f93, 0xe734, 0x1, 0x0);
        gbc.writeMem(0xa693, { 0x73 });
        gbc.writeMem(0xe734, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7699, gbc.sp());
        EXPECT(0xa694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa693));
        EXPECT(0x93, gbc.readMem(0xe734));
        // 73 039D
        gbc.setState(0xe168, 0x448f, 0xd420, 0x26f9, 0xdee7, 0xa22f, 0x1, 0x1);
        gbc.writeMem(0xa22f, { 0x0 });
        gbc.writeMem(0xe168, { 0x73 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x448f, gbc.sp());
        EXPECT(0xe169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa22f));
        EXPECT(0x73, gbc.readMem(0xe168));
        // 73 039E
        gbc.setState(0x64a4, 0xd20d, 0x1380, 0x5448, 0xd846, 0xf97c, 0x1, 0x0);
        gbc.writeMem(0x64a4, { 0x73 });
        gbc.writeMem(0xf97c, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd20d, gbc.sp());
        EXPECT(0x64a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xf97c));
        // 73 03A1
        gbc.setState(0xa76, 0x2dfd, 0x62a0, 0x4c84, 0xc983, 0xd4d2, 0x0, 0x1);
        gbc.writeMem(0xa76, { 0x73 });
        gbc.writeMem(0xd4d2, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2dfd, gbc.sp());
        EXPECT(0xa77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xd4d2));
        // 73 03A2
        gbc.setState(0x3432, 0x16d7, 0x2b20, 0xf2ba, 0x5915, 0xe74a, 0x1, 0x0);
        gbc.writeMem(0x3432, { 0x73 });
        gbc.writeMem(0xe74a, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x16d7, gbc.sp());
        EXPECT(0x3433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe74a));
        // 73 03A4
        gbc.setState(0x78c0, 0x6183, 0x31a0, 0x597, 0xa274, 0x9313, 0x1, 0x1);
        gbc.writeMem(0x78c0, { 0x73 });
        gbc.writeMem(0x9313, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6183, gbc.sp());
        EXPECT(0x78c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9313));
        // 73 03A5
        gbc.setState(0x5af9, 0xbceb, 0x1ab0, 0xc567, 0xeecf, 0xd5d2, 0x0, 0x0);
        gbc.writeMem(0x5af9, { 0x73 });
        gbc.writeMem(0xd5d2, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbceb, gbc.sp());
        EXPECT(0x5afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd5d2));
        // 73 03A6
        gbc.setState(0x20dc, 0xc8ba, 0x8ee0, 0x9236, 0xe63b, 0xf932, 0x0, 0x1);
        gbc.writeMem(0x20dc, { 0x73 });
        gbc.writeMem(0xf932, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc8ba, gbc.sp());
        EXPECT(0x20dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xf932));
        // 73 03A7
        gbc.setState(0xbc29, 0x435a, 0xf8b0, 0x98b9, 0xceaf, 0xc29f, 0x1, 0x0);
        gbc.writeMem(0xbc29, { 0x73 });
        gbc.writeMem(0xc29f, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x435a, gbc.sp());
        EXPECT(0xbc2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xbc29));
        EXPECT(0xaf, gbc.readMem(0xc29f));
        // 73 03AC
        gbc.setState(0xcffa, 0x39b3, 0x26b0, 0x3409, 0xb847, 0xb291, 0x1, 0x0);
        gbc.writeMem(0xb291, { 0x0 });
        gbc.writeMem(0xcffa, { 0x73 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x39b3, gbc.sp());
        EXPECT(0xcffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb291));
        EXPECT(0x73, gbc.readMem(0xcffa));
        // 73 03B3
        gbc.setState(0xa79f, 0xba8c, 0x3440, 0xbc1b, 0x4a5f, 0x811c, 0x0, 0x1);
        gbc.writeMem(0x811c, { 0x0 });
        gbc.writeMem(0xa79f, { 0x73 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xba8c, gbc.sp());
        EXPECT(0xa7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x811c));
        EXPECT(0x73, gbc.readMem(0xa79f));
        // 73 03B5
        gbc.setState(0xca11, 0xa846, 0x6f10, 0x3192, 0x874c, 0x9178, 0x0, 0x0);
        gbc.writeMem(0x9178, { 0x0 });
        gbc.writeMem(0xca11, { 0x73 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa846, gbc.sp());
        EXPECT(0xca12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9178));
        EXPECT(0x73, gbc.readMem(0xca11));
        // 73 03B6
        gbc.setState(0xce72, 0x2f61, 0x1a10, 0x669a, 0x99e6, 0x8b53, 0x0, 0x0);
        gbc.writeMem(0x8b53, { 0x0 });
        gbc.writeMem(0xce72, { 0x73 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2f61, gbc.sp());
        EXPECT(0xce73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8b53));
        EXPECT(0x73, gbc.readMem(0xce72));
        // 73 03BB
        gbc.setState(0x3f4d, 0x8d77, 0xe290, 0xc494, 0x539e, 0xc1bb, 0x0, 0x0);
        gbc.writeMem(0x3f4d, { 0x73 });
        gbc.writeMem(0xc1bb, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8d77, gbc.sp());
        EXPECT(0x3f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc1bb));
        // 73 03BC
        gbc.setState(0x343d, 0xc306, 0x1d80, 0x2b98, 0x653f, 0x9413, 0x0, 0x1);
        gbc.writeMem(0x343d, { 0x73 });
        gbc.writeMem(0x9413, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc306, gbc.sp());
        EXPECT(0x343e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9413));
        // 73 03BE
        gbc.setState(0x883a, 0x81b, 0x8e50, 0x2ffd, 0xb055, 0xfe32, 0x0, 0x1);
        gbc.writeMem(0x883a, { 0x73 });
        gbc.writeMem(0xfe32, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x81b, gbc.sp());
        EXPECT(0x883b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x883a));
        EXPECT(0x55, gbc.readMem(0xfe32));
        // 73 03C1
        gbc.setState(0x1929, 0x8042, 0xf220, 0x6ab5, 0xa18a, 0xf8a4, 0x1, 0x0);
        gbc.writeMem(0x1929, { 0x73 });
        gbc.writeMem(0xf8a4, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8042, gbc.sp());
        EXPECT(0x192a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xf8a4));
        // 73 03C2
        gbc.setState(0xd8c8, 0x3f01, 0xe30, 0xc559, 0xdd95, 0xb0c8, 0x1, 0x0);
        gbc.writeMem(0xb0c8, { 0x0 });
        gbc.writeMem(0xd8c8, { 0x73 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3f01, gbc.sp());
        EXPECT(0xd8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb0c8));
        EXPECT(0x73, gbc.readMem(0xd8c8));
        // 73 03C3
        gbc.setState(0xbef2, 0x3e1e, 0x35b0, 0x8642, 0x7d43, 0x9ade, 0x1, 0x0);
        gbc.writeMem(0x9ade, { 0x0 });
        gbc.writeMem(0xbef2, { 0x73 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3e1e, gbc.sp());
        EXPECT(0xbef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9ade));
        EXPECT(0x73, gbc.readMem(0xbef2));
        // 73 03C5
        gbc.setState(0x385, 0xf2a8, 0xdf00, 0xea89, 0x98aa, 0xd15d, 0x0, 0x0);
        gbc.writeMem(0x385, { 0x73 });
        gbc.writeMem(0xd15d, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf2a8, gbc.sp());
        EXPECT(0x386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xd15d));
        // 73 03C9
        gbc.setState(0x6d39, 0x495c, 0x5cc0, 0x1e90, 0xaf1c, 0xc4b2, 0x0, 0x1);
        gbc.writeMem(0x6d39, { 0x73 });
        gbc.writeMem(0xc4b2, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x495c, gbc.sp());
        EXPECT(0x6d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xc4b2));
        // 73 03CB
        gbc.setState(0x22f1, 0xee92, 0x7520, 0xe327, 0x8caf, 0xf170, 0x0, 0x1);
        gbc.writeMem(0x22f1, { 0x73 });
        gbc.writeMem(0xf170, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xee92, gbc.sp());
        EXPECT(0x22f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xf170));
        // 73 03CC
        gbc.setState(0x6a53, 0x3e09, 0x4af0, 0xa85f, 0xe2ef, 0xc418, 0x1, 0x1);
        gbc.writeMem(0x6a53, { 0x73 });
        gbc.writeMem(0xc418, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3e09, gbc.sp());
        EXPECT(0x6a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xc418));
        // 73 03CD
        gbc.setState(0x50bb, 0x15f9, 0x880, 0xc060, 0xb86e, 0xfc5b, 0x0, 0x1);
        gbc.writeMem(0x50bb, { 0x73 });
        gbc.writeMem(0xfc5b, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x15f9, gbc.sp());
        EXPECT(0x50bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xfc5b));
        // 73 03D0
        gbc.setState(0x18d1, 0xeb46, 0x5260, 0x6355, 0x22ed, 0x828d, 0x1, 0x1);
        gbc.writeMem(0x18d1, { 0x73 });
        gbc.writeMem(0x828d, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xeb46, gbc.sp());
        EXPECT(0x18d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x828d));
        // 73 03D1
        gbc.setState(0x5b95, 0x8778, 0x2920, 0xf123, 0x3be2, 0xeb8f, 0x0, 0x0);
        gbc.writeMem(0x5b95, { 0x73 });
        gbc.writeMem(0xeb8f, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8778, gbc.sp());
        EXPECT(0x5b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xeb8f));
        // 73 03D2
        gbc.setState(0x5a39, 0x4f75, 0x1ef0, 0x28e3, 0xbe69, 0xe905, 0x0, 0x1);
        gbc.writeMem(0x5a39, { 0x73 });
        gbc.writeMem(0xe905, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4f75, gbc.sp());
        EXPECT(0x5a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe905));
        // 73 03D3
        gbc.setState(0x3f45, 0xdc21, 0xdc0, 0xd03d, 0xe87f, 0xfee9, 0x0, 0x1);
        gbc.writeMem(0x3f45, { 0x73 });
        gbc.writeMem(0xfee9, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdc21, gbc.sp());
        EXPECT(0x3f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xfee9));
        // 73 03D4
        gbc.setState(0x3fd2, 0x4236, 0x2ae0, 0x61ad, 0x4f7c, 0x8f21, 0x0, 0x1);
        gbc.writeMem(0x3fd2, { 0x73 });
        gbc.writeMem(0x8f21, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4236, gbc.sp());
        EXPECT(0x3fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x8f21));
        // 73 03D6
        gbc.setState(0x2699, 0x513a, 0xefe0, 0x296a, 0x3b7b, 0xe905, 0x1, 0x1);
        gbc.writeMem(0x2699, { 0x73 });
        gbc.writeMem(0xe905, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x513a, gbc.sp());
        EXPECT(0x269a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe905));
        // 73 03DC
        gbc.setState(0x2059, 0x847c, 0xfde0, 0x1f00, 0xf147, 0xf371, 0x0, 0x0);
        gbc.writeMem(0x2059, { 0x73 });
        gbc.writeMem(0xf371, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x847c, gbc.sp());
        EXPECT(0x205a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xf371));
        // 73 03E2
        gbc.setState(0x5bbb, 0x1884, 0x2f20, 0x7469, 0xeda2, 0xa932, 0x1, 0x1);
        gbc.writeMem(0x5bbb, { 0x73 });
        gbc.writeMem(0xa932, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1884, gbc.sp());
        EXPECT(0x5bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa932));
        // 73 03E4
        gbc.setState(0xd21, 0x6b18, 0x25c0, 0x693f, 0x3de7, 0xdb8c, 0x0, 0x1);
        gbc.writeMem(0xd21, { 0x73 });
        gbc.writeMem(0xdb8c, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6b18, gbc.sp());
        EXPECT(0xd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xdb8c));
    }
