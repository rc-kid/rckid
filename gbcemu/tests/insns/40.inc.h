    TEST(gbcemu, opcode_40) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 40 0000
        gbc.setState(0xa677, 0x2077, 0x4710, 0x6b28, 0x904e, 0xe809, 0x1, 0x0);
        gbc.writeMem(0xa677, { 0x40 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2077, gbc.sp());
        EXPECT(0xa678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa677));
        // 40 0001
        gbc.setState(0xa1f7, 0xb7dc, 0xd4c0, 0xafd7, 0xf07, 0xc214, 0x0, 0x1);
        gbc.writeMem(0xa1f7, { 0x40 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb7dc, gbc.sp());
        EXPECT(0xa1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa1f7));
        // 40 0002
        gbc.setState(0xd04, 0x1aa, 0x7340, 0xaa4e, 0x1cef, 0xf18a, 0x0, 0x1);
        gbc.writeMem(0xd04, { 0x40 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1aa, gbc.sp());
        EXPECT(0xd05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0003
        gbc.setState(0x6e39, 0x4c9a, 0x9910, 0x2863, 0x287, 0xe6dc, 0x0, 0x0);
        gbc.writeMem(0x6e39, { 0x40 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4c9a, gbc.sp());
        EXPECT(0x6e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0004
        gbc.setState(0x88b5, 0xb451, 0x8a20, 0x8c7, 0x6aea, 0x6deb, 0x1, 0x0);
        gbc.writeMem(0x88b5, { 0x40 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb451, gbc.sp());
        EXPECT(0x88b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x88b5));
        // 40 0005
        gbc.setState(0x2b88, 0x438b, 0xa410, 0xe107, 0x64c8, 0x2677, 0x1, 0x1);
        gbc.writeMem(0x2b88, { 0x40 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x438b, gbc.sp());
        EXPECT(0x2b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0006
        gbc.setState(0xed09, 0xe24f, 0xf7e0, 0xb6d4, 0xa5e, 0x5cbd, 0x0, 0x1);
        gbc.writeMem(0xed09, { 0x40 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe24f, gbc.sp());
        EXPECT(0xed0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xed09));
        // 40 0007
        gbc.setState(0x53e7, 0x7bd6, 0xd3f0, 0xd618, 0x8fb7, 0xa36d, 0x1, 0x1);
        gbc.writeMem(0x53e7, { 0x40 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7bd6, gbc.sp());
        EXPECT(0x53e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0008
        gbc.setState(0xa9cf, 0xdc0c, 0x220, 0x696c, 0xa393, 0xe10, 0x0, 0x0);
        gbc.writeMem(0xa9cf, { 0x40 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdc0c, gbc.sp());
        EXPECT(0xa9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa9cf));
        // 40 0009
        gbc.setState(0x7661, 0xc3dd, 0x2710, 0xfdf, 0xabe4, 0xe3b4, 0x1, 0x1);
        gbc.writeMem(0x7661, { 0x40 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc3dd, gbc.sp());
        EXPECT(0x7662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 000A
        gbc.setState(0xdf01, 0x37a3, 0xf140, 0xd20d, 0x52d1, 0x4f2c, 0x0, 0x0);
        gbc.writeMem(0xdf01, { 0x40 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x37a3, gbc.sp());
        EXPECT(0xdf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdf01));
        // 40 000B
        gbc.setState(0x9d38, 0x7aae, 0x8c70, 0xf2c, 0x9d49, 0x14fb, 0x1, 0x0);
        gbc.writeMem(0x9d38, { 0x40 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7aae, gbc.sp());
        EXPECT(0x9d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9d38));
        // 40 000C
        gbc.setState(0x95ed, 0x4adf, 0x9990, 0x3af0, 0x26ed, 0x411d, 0x1, 0x1);
        gbc.writeMem(0x95ed, { 0x40 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4adf, gbc.sp());
        EXPECT(0x95ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x95ed));
        // 40 000D
        gbc.setState(0x3037, 0x7c85, 0x75c0, 0xe13a, 0xdaf2, 0xd187, 0x1, 0x1);
        gbc.writeMem(0x3037, { 0x40 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7c85, gbc.sp());
        EXPECT(0x3038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 000E
        gbc.setState(0xae39, 0x8866, 0xbe30, 0xa435, 0x9b9b, 0x3b51, 0x1, 0x0);
        gbc.writeMem(0xae39, { 0x40 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8866, gbc.sp());
        EXPECT(0xae3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xae39));
        // 40 000F
        gbc.setState(0x3de4, 0x1a1, 0xde10, 0x3faf, 0xc1c5, 0x5cb7, 0x0, 0x0);
        gbc.writeMem(0x3de4, { 0x40 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1a1, gbc.sp());
        EXPECT(0x3de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0010
        gbc.setState(0x355d, 0x7396, 0xcce0, 0xd4bc, 0xa85f, 0x794f, 0x0, 0x1);
        gbc.writeMem(0x355d, { 0x40 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7396, gbc.sp());
        EXPECT(0x355e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0011
        gbc.setState(0xa502, 0xe80a, 0x6a00, 0xf585, 0xbae0, 0x7346, 0x1, 0x0);
        gbc.writeMem(0xa502, { 0x40 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe80a, gbc.sp());
        EXPECT(0xa503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa502));
        // 40 0012
        gbc.setState(0xe76f, 0xb1f1, 0x3040, 0x8962, 0x2e51, 0x15, 0x0, 0x1);
        gbc.writeMem(0xe76f, { 0x40 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb1f1, gbc.sp());
        EXPECT(0xe770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe76f));
        // 40 0014
        gbc.setState(0xda5b, 0x5cb4, 0x5ee0, 0x54dc, 0x138f, 0x3b6d, 0x1, 0x1);
        gbc.writeMem(0xda5b, { 0x40 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5cb4, gbc.sp());
        EXPECT(0xda5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xda5b));
        // 40 0015
        gbc.setState(0x6d4c, 0x7d8e, 0xcce0, 0xeeb2, 0xc0b, 0xf2f3, 0x0, 0x1);
        gbc.writeMem(0x6d4c, { 0x40 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7d8e, gbc.sp());
        EXPECT(0x6d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0016
        gbc.setState(0xe446, 0xb0e4, 0xa5a0, 0xfe6f, 0x35a3, 0x559c, 0x1, 0x1);
        gbc.writeMem(0xe446, { 0x40 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb0e4, gbc.sp());
        EXPECT(0xe447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe446));
        // 40 0017
        gbc.setState(0x6e9c, 0xe07a, 0x1ab0, 0xff95, 0x7387, 0xa60f, 0x1, 0x1);
        gbc.writeMem(0x6e9c, { 0x40 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe07a, gbc.sp());
        EXPECT(0x6e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0018
        gbc.setState(0xed05, 0xaf19, 0x68b0, 0xc5ee, 0xa23c, 0xf4b, 0x0, 0x0);
        gbc.writeMem(0xed05, { 0x40 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xaf19, gbc.sp());
        EXPECT(0xed06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xed05));
        // 40 001A
        gbc.setState(0x3ec3, 0x6216, 0x7820, 0x184a, 0x1be5, 0xc553, 0x1, 0x0);
        gbc.writeMem(0x3ec3, { 0x40 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6216, gbc.sp());
        EXPECT(0x3ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 001B
        gbc.setState(0x86a5, 0x276f, 0x1260, 0xc46e, 0xfec4, 0xb02a, 0x1, 0x1);
        gbc.writeMem(0x86a5, { 0x40 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x276f, gbc.sp());
        EXPECT(0x86a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x86a5));
        // 40 001C
        gbc.setState(0xaf6a, 0xe51a, 0xb190, 0x3a5a, 0xcbce, 0xefb, 0x0, 0x1);
        gbc.writeMem(0xaf6a, { 0x40 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe51a, gbc.sp());
        EXPECT(0xaf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xaf6a));
        // 40 001D
        gbc.setState(0x736e, 0xfd16, 0x3320, 0x65ef, 0xaa4b, 0x821d, 0x1, 0x1);
        gbc.writeMem(0x736e, { 0x40 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfd16, gbc.sp());
        EXPECT(0x736f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 001E
        gbc.setState(0x630, 0xbaa, 0x32f0, 0x54e0, 0x3e34, 0x2352, 0x0, 0x1);
        gbc.writeMem(0x630, { 0x40 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbaa, gbc.sp());
        EXPECT(0x631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 001F
        gbc.setState(0x7295, 0x37a, 0x4bb0, 0xa776, 0xabb1, 0x799f, 0x1, 0x0);
        gbc.writeMem(0x7295, { 0x40 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x37a, gbc.sp());
        EXPECT(0x7296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0020
        gbc.setState(0x8096, 0x8373, 0xa910, 0x4bc2, 0x8fba, 0xd58b, 0x1, 0x1);
        gbc.writeMem(0x8096, { 0x40 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8373, gbc.sp());
        EXPECT(0x8097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8096));
        // 40 0021
        gbc.setState(0xb047, 0x50c5, 0x7980, 0x6d05, 0x89e, 0xb16b, 0x0, 0x1);
        gbc.writeMem(0xb047, { 0x40 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x50c5, gbc.sp());
        EXPECT(0xb048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb047));
        // 40 0022
        gbc.setState(0x82c0, 0xff3d, 0x59f0, 0x3b6d, 0x69c7, 0x91f4, 0x1, 0x0);
        gbc.writeMem(0x82c0, { 0x40 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xff3d, gbc.sp());
        EXPECT(0x82c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x82c0));
        // 40 0023
        gbc.setState(0x5778, 0x6d2a, 0x8be0, 0xd90e, 0xc49d, 0xa4d1, 0x1, 0x0);
        gbc.writeMem(0x5778, { 0x40 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6d2a, gbc.sp());
        EXPECT(0x5779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0024
        gbc.setState(0xc6e4, 0xa72e, 0xf920, 0xadf3, 0x7178, 0xd066, 0x1, 0x1);
        gbc.writeMem(0xc6e4, { 0x40 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa72e, gbc.sp());
        EXPECT(0xc6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc6e4));
        // 40 0025
        gbc.setState(0x10e2, 0xb9cc, 0x4240, 0x43e6, 0xdc15, 0x8d10, 0x0, 0x1);
        gbc.writeMem(0x10e2, { 0x40 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb9cc, gbc.sp());
        EXPECT(0x10e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0026
        gbc.setState(0x3a62, 0xd210, 0x9d80, 0xcc06, 0x5e5f, 0xd2f7, 0x0, 0x1);
        gbc.writeMem(0x3a62, { 0x40 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd210, gbc.sp());
        EXPECT(0x3a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0027
        gbc.setState(0xe686, 0x6d3d, 0x130, 0x6d3a, 0xf3b8, 0xf20c, 0x0, 0x1);
        gbc.writeMem(0xe686, { 0x40 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6d3d, gbc.sp());
        EXPECT(0xe687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe686));
        // 40 0028
        gbc.setState(0x8f33, 0x28ab, 0x51d0, 0x19aa, 0xa347, 0x791f, 0x1, 0x0);
        gbc.writeMem(0x8f33, { 0x40 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x28ab, gbc.sp());
        EXPECT(0x8f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8f33));
        // 40 0029
        gbc.setState(0x80bb, 0x2ed8, 0xc3d0, 0xefdc, 0x717b, 0x41ab, 0x1, 0x0);
        gbc.writeMem(0x80bb, { 0x40 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2ed8, gbc.sp());
        EXPECT(0x80bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x80bb));
        // 40 002A
        gbc.setState(0xb27e, 0x11f1, 0x51d0, 0xad80, 0x6abd, 0x2559, 0x0, 0x1);
        gbc.writeMem(0xb27e, { 0x40 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x11f1, gbc.sp());
        EXPECT(0xb27f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb27e));
        // 40 002B
        gbc.setState(0x674c, 0xf323, 0x7d0, 0xd74e, 0xd550, 0x3dfe, 0x0, 0x1);
        gbc.writeMem(0x674c, { 0x40 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf323, gbc.sp());
        EXPECT(0x674d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 002E
        gbc.setState(0xeb6d, 0x25a8, 0xa6c0, 0xd518, 0x9a3b, 0x64d8, 0x0, 0x1);
        gbc.writeMem(0xeb6d, { 0x40 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x25a8, gbc.sp());
        EXPECT(0xeb6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xeb6d));
        // 40 002F
        gbc.setState(0x8e1b, 0xc041, 0xae10, 0x349a, 0xf583, 0x9185, 0x1, 0x1);
        gbc.writeMem(0x8e1b, { 0x40 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc041, gbc.sp());
        EXPECT(0x8e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8e1b));
        // 40 0030
        gbc.setState(0x2e75, 0x4d13, 0xc1a0, 0x973, 0x7951, 0xcb97, 0x1, 0x1);
        gbc.writeMem(0x2e75, { 0x40 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4d13, gbc.sp());
        EXPECT(0x2e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0031
        gbc.setState(0xa610, 0x1c62, 0x51e0, 0x12ae, 0x5425, 0x7104, 0x0, 0x0);
        gbc.writeMem(0xa610, { 0x40 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1c62, gbc.sp());
        EXPECT(0xa611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa610));
        // 40 0032
        gbc.setState(0x3224, 0xe110, 0x9510, 0x2617, 0xd52d, 0xecf0, 0x1, 0x0);
        gbc.writeMem(0x3224, { 0x40 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe110, gbc.sp());
        EXPECT(0x3225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0033
        gbc.setState(0xc2bc, 0x2df6, 0x2e20, 0xda3, 0x7e33, 0xd6e7, 0x1, 0x1);
        gbc.writeMem(0xc2bc, { 0x40 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2df6, gbc.sp());
        EXPECT(0xc2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc2bc));
        // 40 0035
        gbc.setState(0x8027, 0xb67e, 0xa180, 0x45e4, 0xeaa2, 0x1f8b, 0x1, 0x0);
        gbc.writeMem(0x8027, { 0x40 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb67e, gbc.sp());
        EXPECT(0x8028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8027));
        // 40 0036
        gbc.setState(0x1c02, 0xbd6a, 0x64f0, 0xc7c2, 0x1dca, 0x6dc1, 0x1, 0x0);
        gbc.writeMem(0x1c02, { 0x40 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbd6a, gbc.sp());
        EXPECT(0x1c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0037
        gbc.setState(0x7b15, 0xc48c, 0x4760, 0x22f3, 0x4bc7, 0x46f2, 0x0, 0x1);
        gbc.writeMem(0x7b15, { 0x40 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc48c, gbc.sp());
        EXPECT(0x7b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0038
        gbc.setState(0x32d3, 0x57ce, 0x46d0, 0xf83f, 0x67b1, 0xccb, 0x0, 0x0);
        gbc.writeMem(0x32d3, { 0x40 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x57ce, gbc.sp());
        EXPECT(0x32d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0039
        gbc.setState(0x3e05, 0x7988, 0x1c50, 0x5322, 0x5ed4, 0x4e47, 0x1, 0x1);
        gbc.writeMem(0x3e05, { 0x40 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7988, gbc.sp());
        EXPECT(0x3e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 003A
        gbc.setState(0x5d4c, 0xb48, 0x7190, 0x29c, 0x7d5e, 0xc410, 0x0, 0x1);
        gbc.writeMem(0x5d4c, { 0x40 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb48, gbc.sp());
        EXPECT(0x5d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 003B
        gbc.setState(0xc02e, 0x997e, 0x9900, 0xe4ae, 0x4d87, 0xfa1f, 0x0, 0x0);
        gbc.writeMem(0xc02e, { 0x40 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x997e, gbc.sp());
        EXPECT(0xc02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc02e));
        // 40 003C
        gbc.setState(0xa357, 0xf26e, 0x87f0, 0x7f27, 0x6942, 0xafb6, 0x0, 0x1);
        gbc.writeMem(0xa357, { 0x40 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf26e, gbc.sp());
        EXPECT(0xa358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa357));
        // 40 003D
        gbc.setState(0x3e55, 0xc7e4, 0x12f0, 0xa9c4, 0x6cbf, 0x5060, 0x0, 0x1);
        gbc.writeMem(0x3e55, { 0x40 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc7e4, gbc.sp());
        EXPECT(0x3e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 003E
        gbc.setState(0xb673, 0xaaed, 0xfef0, 0xc8cb, 0xf8d7, 0x155d, 0x1, 0x1);
        gbc.writeMem(0xb673, { 0x40 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xaaed, gbc.sp());
        EXPECT(0xb674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb673));
        // 40 003F
        gbc.setState(0xcd9e, 0x238f, 0xf2d0, 0xb87a, 0x2c11, 0xbca7, 0x0, 0x0);
        gbc.writeMem(0xcd9e, { 0x40 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x238f, gbc.sp());
        EXPECT(0xcd9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcd9e));
        // 40 0040
        gbc.setState(0x6760, 0xae99, 0xf500, 0xc4cc, 0x2d2a, 0xef74, 0x1, 0x0);
        gbc.writeMem(0x6760, { 0x40 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xae99, gbc.sp());
        EXPECT(0x6761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0041
        gbc.setState(0x6884, 0xe6cd, 0x7a20, 0xb6b5, 0x2bbc, 0xb54d, 0x1, 0x1);
        gbc.writeMem(0x6884, { 0x40 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe6cd, gbc.sp());
        EXPECT(0x6885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0042
        gbc.setState(0x8c28, 0xed41, 0xddb0, 0x3dd3, 0xaa97, 0x151e, 0x0, 0x0);
        gbc.writeMem(0x8c28, { 0x40 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xed41, gbc.sp());
        EXPECT(0x8c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8c28));
        // 40 0043
        gbc.setState(0x5e8d, 0x3a83, 0xdb40, 0x5d7c, 0x7a8e, 0x9ed7, 0x1, 0x0);
        gbc.writeMem(0x5e8d, { 0x40 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3a83, gbc.sp());
        EXPECT(0x5e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0045
        gbc.setState(0x9db3, 0x8e3e, 0xa220, 0xd6ce, 0x7b06, 0xea59, 0x1, 0x0);
        gbc.writeMem(0x9db3, { 0x40 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8e3e, gbc.sp());
        EXPECT(0x9db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9db3));
        // 40 0046
        gbc.setState(0x7f5b, 0x5118, 0xbe80, 0x1eaf, 0x49a2, 0xf050, 0x1, 0x0);
        gbc.writeMem(0x7f5b, { 0x40 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5118, gbc.sp());
        EXPECT(0x7f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0047
        gbc.setState(0xda22, 0x10b4, 0x9920, 0xfc3b, 0x7e24, 0xa281, 0x1, 0x1);
        gbc.writeMem(0xda22, { 0x40 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x10b4, gbc.sp());
        EXPECT(0xda23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xda22));
        // 40 0048
        gbc.setState(0x73bb, 0xc2eb, 0x3b80, 0x653e, 0x67, 0x6432, 0x0, 0x0);
        gbc.writeMem(0x73bb, { 0x40 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc2eb, gbc.sp());
        EXPECT(0x73bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0049
        gbc.setState(0xa697, 0x2db8, 0xadd0, 0xe1cf, 0x5053, 0x468e, 0x1, 0x1);
        gbc.writeMem(0xa697, { 0x40 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2db8, gbc.sp());
        EXPECT(0xa698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa697));
        // 40 004A
        gbc.setState(0x4822, 0x98d5, 0x3d70, 0x91f4, 0x3207, 0x133d, 0x0, 0x1);
        gbc.writeMem(0x4822, { 0x40 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x98d5, gbc.sp());
        EXPECT(0x4823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 004B
        gbc.setState(0x42b0, 0xb708, 0x86a0, 0x69d5, 0x4707, 0x8d89, 0x0, 0x1);
        gbc.writeMem(0x42b0, { 0x40 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb708, gbc.sp());
        EXPECT(0x42b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 004C
        gbc.setState(0x47a6, 0x191c, 0x5040, 0x567c, 0x6df4, 0x8ec0, 0x0, 0x1);
        gbc.writeMem(0x47a6, { 0x40 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x191c, gbc.sp());
        EXPECT(0x47a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 004D
        gbc.setState(0x435c, 0x9ac3, 0x10b0, 0x2c46, 0xa96, 0x86b6, 0x1, 0x0);
        gbc.writeMem(0x435c, { 0x40 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9ac3, gbc.sp());
        EXPECT(0x435d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 004E
        gbc.setState(0x65f7, 0x84c, 0xb0, 0x7042, 0x3645, 0x4dc7, 0x0, 0x1);
        gbc.writeMem(0x65f7, { 0x40 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x84c, gbc.sp());
        EXPECT(0x65f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 004F
        gbc.setState(0xc1b5, 0xd8d1, 0x8ec0, 0x92bf, 0xb5be, 0xcad9, 0x0, 0x0);
        gbc.writeMem(0xc1b5, { 0x40 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd8d1, gbc.sp());
        EXPECT(0xc1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc1b5));
        // 40 0050
        gbc.setState(0xc4ed, 0x41af, 0x3550, 0x29aa, 0x259f, 0xdadb, 0x1, 0x0);
        gbc.writeMem(0xc4ed, { 0x40 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x41af, gbc.sp());
        EXPECT(0xc4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc4ed));
        // 40 0051
        gbc.setState(0x48db, 0x86ba, 0x5f0, 0x77da, 0xc164, 0xbfc7, 0x0, 0x0);
        gbc.writeMem(0x48db, { 0x40 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x86ba, gbc.sp());
        EXPECT(0x48dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0052
        gbc.setState(0xef87, 0xec30, 0x6180, 0x97d9, 0xc8fb, 0x708b, 0x1, 0x0);
        gbc.writeMem(0xef87, { 0x40 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xec30, gbc.sp());
        EXPECT(0xef88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xef87));
        // 40 0053
        gbc.setState(0xbcbb, 0x3edd, 0xba30, 0x15a8, 0xc260, 0xfd52, 0x1, 0x1);
        gbc.writeMem(0xbcbb, { 0x40 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3edd, gbc.sp());
        EXPECT(0xbcbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbcbb));
        // 40 0054
        gbc.setState(0xde1c, 0xc3a3, 0x830, 0xbb53, 0x72a2, 0x9699, 0x0, 0x0);
        gbc.writeMem(0xde1c, { 0x40 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc3a3, gbc.sp());
        EXPECT(0xde1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xde1c));
        // 40 0055
        gbc.setState(0x5ddc, 0x27d7, 0xe5a0, 0x4b95, 0x26b3, 0xe6df, 0x1, 0x1);
        gbc.writeMem(0x5ddc, { 0x40 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x27d7, gbc.sp());
        EXPECT(0x5ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0056
        gbc.setState(0x205e, 0x4ab, 0x2330, 0x4782, 0xb82c, 0x935b, 0x0, 0x0);
        gbc.writeMem(0x205e, { 0x40 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4ab, gbc.sp());
        EXPECT(0x205f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0057
        gbc.setState(0x6bda, 0xad44, 0x6d80, 0x86ac, 0xc828, 0xe883, 0x1, 0x0);
        gbc.writeMem(0x6bda, { 0x40 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xad44, gbc.sp());
        EXPECT(0x6bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0058
        gbc.setState(0x7993, 0x6137, 0xaef0, 0x2f2d, 0x4444, 0x5c11, 0x0, 0x0);
        gbc.writeMem(0x7993, { 0x40 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6137, gbc.sp());
        EXPECT(0x7994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0059
        gbc.setState(0xc4db, 0x3efb, 0xad00, 0x2ebd, 0x8faf, 0x9e7d, 0x1, 0x0);
        gbc.writeMem(0xc4db, { 0x40 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3efb, gbc.sp());
        EXPECT(0xc4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc4db));
        // 40 005A
        gbc.setState(0xcc7d, 0x97c4, 0xb4f0, 0x3a64, 0xfb42, 0x7d8a, 0x1, 0x0);
        gbc.writeMem(0xcc7d, { 0x40 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x97c4, gbc.sp());
        EXPECT(0xcc7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcc7d));
        // 40 005B
        gbc.setState(0x2b73, 0xe67, 0x3740, 0x5b78, 0xc266, 0x61ee, 0x0, 0x0);
        gbc.writeMem(0x2b73, { 0x40 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe67, gbc.sp());
        EXPECT(0x2b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 005C
        gbc.setState(0x8be6, 0x7e7e, 0x8230, 0x810f, 0x8483, 0xfd5e, 0x0, 0x0);
        gbc.writeMem(0x8be6, { 0x40 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7e7e, gbc.sp());
        EXPECT(0x8be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8be6));
        // 40 005D
        gbc.setState(0x4215, 0xd48b, 0xa290, 0x4f0a, 0x1ab4, 0xea4d, 0x1, 0x0);
        gbc.writeMem(0x4215, { 0x40 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd48b, gbc.sp());
        EXPECT(0x4216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 005E
        gbc.setState(0xd384, 0x5e36, 0x61a0, 0xa8cd, 0x1fa7, 0x652f, 0x1, 0x0);
        gbc.writeMem(0xd384, { 0x40 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5e36, gbc.sp());
        EXPECT(0xd385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd384));
        // 40 005F
        gbc.setState(0x11af, 0x9ca3, 0xc890, 0x603b, 0xb5d8, 0xe9e5, 0x0, 0x0);
        gbc.writeMem(0x11af, { 0x40 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9ca3, gbc.sp());
        EXPECT(0x11b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0060
        gbc.setState(0x6c1c, 0xcdb8, 0xf8e0, 0xfe96, 0x4d42, 0x1390, 0x0, 0x1);
        gbc.writeMem(0x6c1c, { 0x40 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcdb8, gbc.sp());
        EXPECT(0x6c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0061
        gbc.setState(0x4372, 0x6231, 0x97d0, 0x2c67, 0x1328, 0x4b93, 0x1, 0x1);
        gbc.writeMem(0x4372, { 0x40 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6231, gbc.sp());
        EXPECT(0x4373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0062
        gbc.setState(0x44d9, 0x1a5c, 0xfef0, 0x5170, 0xc8c9, 0xc210, 0x0, 0x0);
        gbc.writeMem(0x44d9, { 0x40 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1a5c, gbc.sp());
        EXPECT(0x44da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0063
        gbc.setState(0xb7bd, 0xea9a, 0x28e0, 0x3609, 0xccb3, 0x3a56, 0x1, 0x1);
        gbc.writeMem(0xb7bd, { 0x40 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xea9a, gbc.sp());
        EXPECT(0xb7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb7bd));
        // 40 0064
        gbc.setState(0x8736, 0x21ab, 0xbc90, 0x168c, 0x10ce, 0x393d, 0x1, 0x0);
        gbc.writeMem(0x8736, { 0x40 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x21ab, gbc.sp());
        EXPECT(0x8737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8736));
        // 40 0065
        gbc.setState(0x2f49, 0xb982, 0xa0e0, 0x7f55, 0x3aca, 0xfd95, 0x0, 0x1);
        gbc.writeMem(0x2f49, { 0x40 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb982, gbc.sp());
        EXPECT(0x2f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0066
        gbc.setState(0x3fd0, 0xecba, 0x67c0, 0x5658, 0xa8f3, 0xec2e, 0x0, 0x0);
        gbc.writeMem(0x3fd0, { 0x40 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xecba, gbc.sp());
        EXPECT(0x3fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0067
        gbc.setState(0x5b4b, 0x3e1a, 0x9460, 0x5f02, 0xea70, 0xb9c1, 0x0, 0x0);
        gbc.writeMem(0x5b4b, { 0x40 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3e1a, gbc.sp());
        EXPECT(0x5b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0068
        gbc.setState(0x9b5c, 0x1339, 0x4750, 0x60e3, 0x561c, 0x132, 0x1, 0x0);
        gbc.writeMem(0x9b5c, { 0x40 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1339, gbc.sp());
        EXPECT(0x9b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9b5c));
        // 40 0069
        gbc.setState(0xe9a5, 0x90a0, 0x7ca0, 0x1df5, 0xbae1, 0xdb04, 0x1, 0x1);
        gbc.writeMem(0xe9a5, { 0x40 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x90a0, gbc.sp());
        EXPECT(0xe9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe9a5));
        // 40 006A
        gbc.setState(0xb3de, 0xfaea, 0x8ff0, 0xbdfb, 0xafef, 0x723c, 0x1, 0x1);
        gbc.writeMem(0xb3de, { 0x40 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfaea, gbc.sp());
        EXPECT(0xb3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb3de));
        // 40 006B
        gbc.setState(0xeb2c, 0x85ac, 0x2d40, 0xb9cf, 0x2122, 0x7910, 0x0, 0x0);
        gbc.writeMem(0xeb2c, { 0x40 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x85ac, gbc.sp());
        EXPECT(0xeb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xeb2c));
        // 40 006C
        gbc.setState(0x5cb1, 0x54c9, 0xfb90, 0xba1a, 0xd05b, 0xfb72, 0x0, 0x0);
        gbc.writeMem(0x5cb1, { 0x40 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x54c9, gbc.sp());
        EXPECT(0x5cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 006D
        gbc.setState(0xd813, 0x3c24, 0xa270, 0xc6ff, 0xe3eb, 0x7a93, 0x1, 0x0);
        gbc.writeMem(0xd813, { 0x40 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3c24, gbc.sp());
        EXPECT(0xd814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd813));
        // 40 006E
        gbc.setState(0x456d, 0xe768, 0x7380, 0xd1d9, 0xa8b, 0x8993, 0x1, 0x0);
        gbc.writeMem(0x456d, { 0x40 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe768, gbc.sp());
        EXPECT(0x456e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 006F
        gbc.setState(0xde82, 0x95c4, 0x3f30, 0x423f, 0xbfce, 0x2438, 0x1, 0x1);
        gbc.writeMem(0xde82, { 0x40 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x95c4, gbc.sp());
        EXPECT(0xde83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xde82));
        // 40 0070
        gbc.setState(0x3437, 0xd0fa, 0xf170, 0x6dd0, 0x26d3, 0xf161, 0x1, 0x0);
        gbc.writeMem(0x3437, { 0x40 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd0fa, gbc.sp());
        EXPECT(0x3438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0072
        gbc.setState(0xbdc8, 0x4335, 0xeb30, 0x7cbb, 0x3350, 0x691, 0x0, 0x0);
        gbc.writeMem(0xbdc8, { 0x40 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4335, gbc.sp());
        EXPECT(0xbdc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbdc8));
        // 40 0073
        gbc.setState(0xbdfe, 0x3b80, 0x29c0, 0xdf03, 0x7754, 0xb7a0, 0x1, 0x1);
        gbc.writeMem(0xbdfe, { 0x40 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3b80, gbc.sp());
        EXPECT(0xbdff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbdfe));
        // 40 0074
        gbc.setState(0x349d, 0x39d, 0x3f70, 0x4481, 0x292d, 0xeb0f, 0x1, 0x1);
        gbc.writeMem(0x349d, { 0x40 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x39d, gbc.sp());
        EXPECT(0x349e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0075
        gbc.setState(0x3ad, 0x5671, 0xba80, 0xc3a, 0xfced, 0x4cc6, 0x1, 0x1);
        gbc.writeMem(0x3ad, { 0x40 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5671, gbc.sp());
        EXPECT(0x3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0076
        gbc.setState(0xde6f, 0xfaf5, 0x1cf0, 0xe095, 0x82d3, 0x3f5f, 0x1, 0x1);
        gbc.writeMem(0xde6f, { 0x40 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfaf5, gbc.sp());
        EXPECT(0xde70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xde6f));
        // 40 0077
        gbc.setState(0x77cc, 0xdac8, 0xe6d0, 0x1162, 0xbe43, 0xecbc, 0x0, 0x1);
        gbc.writeMem(0x77cc, { 0x40 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdac8, gbc.sp());
        EXPECT(0x77cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0078
        gbc.setState(0x8261, 0xafc0, 0x4450, 0x8ffa, 0xef56, 0x854b, 0x1, 0x1);
        gbc.writeMem(0x8261, { 0x40 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xafc0, gbc.sp());
        EXPECT(0x8262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8261));
        // 40 007B
        gbc.setState(0x918a, 0xa76c, 0x4870, 0xe665, 0x9849, 0x7087, 0x0, 0x0);
        gbc.writeMem(0x918a, { 0x40 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa76c, gbc.sp());
        EXPECT(0x918b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x918a));
        // 40 007C
        gbc.setState(0xc03f, 0x39fc, 0xaa00, 0xb49d, 0x98d0, 0x2fb0, 0x1, 0x0);
        gbc.writeMem(0xc03f, { 0x40 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0xc040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc03f));
        // 40 007E
        gbc.setState(0xa21c, 0xbadd, 0x2070, 0x1ba7, 0xf440, 0xcfe9, 0x0, 0x0);
        gbc.writeMem(0xa21c, { 0x40 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbadd, gbc.sp());
        EXPECT(0xa21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa21c));
        // 40 007F
        gbc.setState(0x3538, 0x80f8, 0x1260, 0x83c1, 0x90db, 0xdfb4, 0x1, 0x0);
        gbc.writeMem(0x3538, { 0x40 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x80f8, gbc.sp());
        EXPECT(0x3539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0080
        gbc.setState(0x8f8b, 0x4de0, 0x9bb0, 0x2eb2, 0xeecb, 0x6754, 0x1, 0x0);
        gbc.writeMem(0x8f8b, { 0x40 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4de0, gbc.sp());
        EXPECT(0x8f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8f8b));
        // 40 0081
        gbc.setState(0x4920, 0xf071, 0x4f80, 0x93b, 0xc4fe, 0xe3fc, 0x1, 0x0);
        gbc.writeMem(0x4920, { 0x40 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf071, gbc.sp());
        EXPECT(0x4921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0082
        gbc.setState(0xcc7d, 0xad82, 0x5d40, 0x56d7, 0x1e9f, 0xbe3b, 0x1, 0x1);
        gbc.writeMem(0xcc7d, { 0x40 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xad82, gbc.sp());
        EXPECT(0xcc7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcc7d));
        // 40 0083
        gbc.setState(0xed44, 0x38f1, 0x8260, 0xbadb, 0x9ec1, 0xf003, 0x0, 0x0);
        gbc.writeMem(0xed44, { 0x40 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x38f1, gbc.sp());
        EXPECT(0xed45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xed44));
        // 40 0084
        gbc.setState(0x6687, 0x1895, 0x5150, 0xa955, 0x7bb6, 0xfe75, 0x0, 0x1);
        gbc.writeMem(0x6687, { 0x40 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1895, gbc.sp());
        EXPECT(0x6688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0085
        gbc.setState(0x5982, 0x7d26, 0x9e90, 0xf839, 0x7697, 0x726a, 0x0, 0x0);
        gbc.writeMem(0x5982, { 0x40 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7d26, gbc.sp());
        EXPECT(0x5983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0086
        gbc.setState(0x4bd0, 0xcbd6, 0xc6c0, 0x4418, 0xa645, 0x8d3, 0x1, 0x1);
        gbc.writeMem(0x4bd0, { 0x40 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcbd6, gbc.sp());
        EXPECT(0x4bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0087
        gbc.setState(0xa1ba, 0xb142, 0x92e0, 0x3cb6, 0xc5b7, 0x6660, 0x0, 0x0);
        gbc.writeMem(0xa1ba, { 0x40 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb142, gbc.sp());
        EXPECT(0xa1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa1ba));
        // 40 0089
        gbc.setState(0x239a, 0x66da, 0x250, 0x326c, 0x31a, 0x6f92, 0x1, 0x0);
        gbc.writeMem(0x239a, { 0x40 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x66da, gbc.sp());
        EXPECT(0x239b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 008A
        gbc.setState(0xb248, 0x2bb4, 0xe210, 0xdb84, 0x68a4, 0x8f08, 0x0, 0x0);
        gbc.writeMem(0xb248, { 0x40 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2bb4, gbc.sp());
        EXPECT(0xb249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb248));
        // 40 008B
        gbc.setState(0xae99, 0xda5b, 0x1700, 0x2bbe, 0x86e6, 0x2eeb, 0x1, 0x1);
        gbc.writeMem(0xae99, { 0x40 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xda5b, gbc.sp());
        EXPECT(0xae9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xae99));
        // 40 008C
        gbc.setState(0x3e9, 0xa757, 0x70e0, 0x6fbd, 0x41f2, 0x7c89, 0x0, 0x1);
        gbc.writeMem(0x3e9, { 0x40 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa757, gbc.sp());
        EXPECT(0x3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 008D
        gbc.setState(0x4802, 0x5a3e, 0x7760, 0x1b92, 0xbc22, 0x2ed1, 0x0, 0x0);
        gbc.writeMem(0x4802, { 0x40 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5a3e, gbc.sp());
        EXPECT(0x4803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 008E
        gbc.setState(0xa922, 0x7aa5, 0x76e0, 0x8871, 0xa657, 0xd2a6, 0x1, 0x0);
        gbc.writeMem(0xa922, { 0x40 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7aa5, gbc.sp());
        EXPECT(0xa923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa922));
        // 40 008F
        gbc.setState(0x4496, 0x900f, 0x98f0, 0x6e7d, 0x712f, 0xd842, 0x1, 0x1);
        gbc.writeMem(0x4496, { 0x40 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x900f, gbc.sp());
        EXPECT(0x4497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0090
        gbc.setState(0xce63, 0x95ab, 0xeee0, 0x76fc, 0xecfc, 0x1a0c, 0x1, 0x1);
        gbc.writeMem(0xce63, { 0x40 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x95ab, gbc.sp());
        EXPECT(0xce64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xce63));
        // 40 0092
        gbc.setState(0x8b72, 0x7862, 0x33c0, 0xfc76, 0xca56, 0xda6, 0x1, 0x0);
        gbc.writeMem(0x8b72, { 0x40 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7862, gbc.sp());
        EXPECT(0x8b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8b72));
        // 40 0093
        gbc.setState(0xa6cf, 0x7cac, 0x4650, 0x73a2, 0xa8f0, 0xface, 0x0, 0x0);
        gbc.writeMem(0xa6cf, { 0x40 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7cac, gbc.sp());
        EXPECT(0xa6d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa6cf));
        // 40 0094
        gbc.setState(0x6641, 0x9bc0, 0x47e0, 0xcf9d, 0x3174, 0x8bee, 0x1, 0x1);
        gbc.writeMem(0x6641, { 0x40 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9bc0, gbc.sp());
        EXPECT(0x6642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0095
        gbc.setState(0x5b15, 0x5185, 0xed90, 0xa147, 0xf168, 0xf416, 0x0, 0x0);
        gbc.writeMem(0x5b15, { 0x40 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5185, gbc.sp());
        EXPECT(0x5b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0096
        gbc.setState(0x1eae, 0xf98, 0x1010, 0xe6a1, 0x2ab3, 0x556b, 0x1, 0x0);
        gbc.writeMem(0x1eae, { 0x40 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf98, gbc.sp());
        EXPECT(0x1eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0097
        gbc.setState(0xd097, 0x5003, 0xf830, 0x5cac, 0x3bd3, 0x4ac9, 0x0, 0x0);
        gbc.writeMem(0xd097, { 0x40 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5003, gbc.sp());
        EXPECT(0xd098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd097));
        // 40 0099
        gbc.setState(0xcbc8, 0xf8de, 0xac70, 0xadc4, 0x439, 0xe45f, 0x1, 0x0);
        gbc.writeMem(0xcbc8, { 0x40 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf8de, gbc.sp());
        EXPECT(0xcbc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcbc8));
        // 40 009A
        gbc.setState(0xa59f, 0xe492, 0x58e0, 0xfa7e, 0x88d6, 0xc6bb, 0x0, 0x1);
        gbc.writeMem(0xa59f, { 0x40 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe492, gbc.sp());
        EXPECT(0xa5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa59f));
        // 40 009B
        gbc.setState(0x2fd2, 0xeac0, 0x6520, 0x3834, 0x44d1, 0x8df2, 0x1, 0x1);
        gbc.writeMem(0x2fd2, { 0x40 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xeac0, gbc.sp());
        EXPECT(0x2fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 009C
        gbc.setState(0x157e, 0x1ed9, 0xed0, 0x9ab8, 0xa87c, 0x821f, 0x1, 0x0);
        gbc.writeMem(0x157e, { 0x40 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1ed9, gbc.sp());
        EXPECT(0x157f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 009D
        gbc.setState(0xa213, 0x9d6, 0xb1c0, 0xd859, 0xc4e6, 0xe7f1, 0x0, 0x0);
        gbc.writeMem(0xa213, { 0x40 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9d6, gbc.sp());
        EXPECT(0xa214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa213));
        // 40 009E
        gbc.setState(0x34f6, 0x106, 0x37a0, 0x6e0d, 0xbcc8, 0xd6c2, 0x1, 0x0);
        gbc.writeMem(0x34f6, { 0x40 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x106, gbc.sp());
        EXPECT(0x34f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 009F
        gbc.setState(0x9459, 0xd489, 0xd130, 0x37bc, 0xaeb2, 0xe2dd, 0x1, 0x1);
        gbc.writeMem(0x9459, { 0x40 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd489, gbc.sp());
        EXPECT(0x945a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9459));
        // 40 00A0
        gbc.setState(0x9f78, 0xdf8f, 0x1da0, 0x7371, 0x9230, 0x4ebb, 0x0, 0x0);
        gbc.writeMem(0x9f78, { 0x40 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdf8f, gbc.sp());
        EXPECT(0x9f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9f78));
        // 40 00A1
        gbc.setState(0x35f5, 0x7570, 0x2e80, 0xa285, 0xabf5, 0xe8d8, 0x0, 0x1);
        gbc.writeMem(0x35f5, { 0x40 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7570, gbc.sp());
        EXPECT(0x35f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00A2
        gbc.setState(0xca36, 0xd086, 0xee50, 0xb8bf, 0x6dca, 0xcf45, 0x1, 0x1);
        gbc.writeMem(0xca36, { 0x40 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd086, gbc.sp());
        EXPECT(0xca37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xca36));
        // 40 00A3
        gbc.setState(0x2a61, 0xea4b, 0xd8b0, 0xc51, 0x8a53, 0xad27, 0x1, 0x0);
        gbc.writeMem(0x2a61, { 0x40 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xea4b, gbc.sp());
        EXPECT(0x2a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00A4
        gbc.setState(0x6373, 0x851a, 0x6720, 0x4ac4, 0x16a8, 0x6f68, 0x1, 0x1);
        gbc.writeMem(0x6373, { 0x40 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x851a, gbc.sp());
        EXPECT(0x6374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00A5
        gbc.setState(0x550, 0xfcee, 0xee70, 0xd6de, 0x44d6, 0x875e, 0x1, 0x1);
        gbc.writeMem(0x550, { 0x40 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfcee, gbc.sp());
        EXPECT(0x551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00A6
        gbc.setState(0x6ac8, 0xb381, 0x1c50, 0x7855, 0xab10, 0xfab, 0x1, 0x1);
        gbc.writeMem(0x6ac8, { 0x40 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb381, gbc.sp());
        EXPECT(0x6ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00A7
        gbc.setState(0x5602, 0xe9d1, 0x94e0, 0x36f2, 0x137, 0xf425, 0x0, 0x1);
        gbc.writeMem(0x5602, { 0x40 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe9d1, gbc.sp());
        EXPECT(0x5603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00A8
        gbc.setState(0x48b3, 0x8ae8, 0xa150, 0xc844, 0x8dec, 0xd010, 0x1, 0x0);
        gbc.writeMem(0x48b3, { 0x40 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8ae8, gbc.sp());
        EXPECT(0x48b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00A9
        gbc.setState(0x6d74, 0x33c5, 0xc8f0, 0x829e, 0xa0e8, 0x6c7e, 0x0, 0x0);
        gbc.writeMem(0x6d74, { 0x40 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x33c5, gbc.sp());
        EXPECT(0x6d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00AA
        gbc.setState(0xdce6, 0x9bb8, 0x3550, 0xd1fb, 0xce89, 0xcaf7, 0x0, 0x0);
        gbc.writeMem(0xdce6, { 0x40 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9bb8, gbc.sp());
        EXPECT(0xdce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdce6));
        // 40 00AB
        gbc.setState(0x1e41, 0x5a61, 0xf460, 0xd6fe, 0x4a58, 0x2fa2, 0x0, 0x1);
        gbc.writeMem(0x1e41, { 0x40 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5a61, gbc.sp());
        EXPECT(0x1e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00AC
        gbc.setState(0x5693, 0x31d1, 0x4290, 0xbed3, 0xc03d, 0xa64, 0x1, 0x0);
        gbc.writeMem(0x5693, { 0x40 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x31d1, gbc.sp());
        EXPECT(0x5694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00AD
        gbc.setState(0x43bb, 0x11ea, 0x2440, 0x8180, 0xa09a, 0xdc59, 0x1, 0x0);
        gbc.writeMem(0x43bb, { 0x40 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x11ea, gbc.sp());
        EXPECT(0x43bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00AE
        gbc.setState(0xaf93, 0x5c73, 0xa410, 0xc2aa, 0xb71d, 0x383c, 0x0, 0x1);
        gbc.writeMem(0xaf93, { 0x40 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5c73, gbc.sp());
        EXPECT(0xaf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xaf93));
        // 40 00AF
        gbc.setState(0xe9fd, 0xf01f, 0xcbb0, 0xd6e3, 0xbe06, 0xee95, 0x1, 0x0);
        gbc.writeMem(0xe9fd, { 0x40 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0xe9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe9fd));
        // 40 00B0
        gbc.setState(0x3794, 0x8775, 0x81b0, 0xd471, 0xbcc2, 0x5770, 0x0, 0x0);
        gbc.writeMem(0x3794, { 0x40 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8775, gbc.sp());
        EXPECT(0x3795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00B2
        gbc.setState(0x3a39, 0x25cb, 0x5790, 0xdc82, 0xd93d, 0xe44d, 0x1, 0x1);
        gbc.writeMem(0x3a39, { 0x40 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x25cb, gbc.sp());
        EXPECT(0x3a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00B3
        gbc.setState(0xbaaf, 0xde9, 0xe560, 0x953, 0x782a, 0x89c4, 0x0, 0x1);
        gbc.writeMem(0xbaaf, { 0x40 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xde9, gbc.sp());
        EXPECT(0xbab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbaaf));
        // 40 00B4
        gbc.setState(0x5b02, 0x7e25, 0x65b0, 0x20eb, 0xc18f, 0xc926, 0x1, 0x1);
        gbc.writeMem(0x5b02, { 0x40 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7e25, gbc.sp());
        EXPECT(0x5b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00B5
        gbc.setState(0x5738, 0x71d9, 0x16a0, 0x8185, 0x26c2, 0x2d26, 0x0, 0x1);
        gbc.writeMem(0x5738, { 0x40 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x71d9, gbc.sp());
        EXPECT(0x5739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00B6
        gbc.setState(0xb12b, 0x47cc, 0xd480, 0xb1e5, 0x9062, 0x2ee8, 0x0, 0x1);
        gbc.writeMem(0xb12b, { 0x40 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x47cc, gbc.sp());
        EXPECT(0xb12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb12b));
        // 40 00B7
        gbc.setState(0x78ba, 0xb6a9, 0x5930, 0x7730, 0xdd7f, 0xb688, 0x1, 0x1);
        gbc.writeMem(0x78ba, { 0x40 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb6a9, gbc.sp());
        EXPECT(0x78bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00B8
        gbc.setState(0xa62c, 0x283, 0x2d80, 0x6e44, 0x598f, 0x3c93, 0x1, 0x1);
        gbc.writeMem(0xa62c, { 0x40 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x283, gbc.sp());
        EXPECT(0xa62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa62c));
        // 40 00BA
        gbc.setState(0x8720, 0xf51d, 0x3240, 0x6a84, 0x9fc2, 0x5200, 0x1, 0x0);
        gbc.writeMem(0x8720, { 0x40 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf51d, gbc.sp());
        EXPECT(0x8721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8720));
        // 40 00BB
        gbc.setState(0x1f66, 0x583c, 0x1340, 0x7437, 0x2890, 0xe177, 0x1, 0x0);
        gbc.writeMem(0x1f66, { 0x40 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x583c, gbc.sp());
        EXPECT(0x1f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00BC
        gbc.setState(0xdd18, 0xb1c1, 0xa640, 0xb42a, 0x6428, 0xae43, 0x0, 0x0);
        gbc.writeMem(0xdd18, { 0x40 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb1c1, gbc.sp());
        EXPECT(0xdd19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdd18));
        // 40 00BD
        gbc.setState(0x42fb, 0x5a7, 0xc60, 0x5263, 0x7419, 0x64f3, 0x0, 0x1);
        gbc.writeMem(0x42fb, { 0x40 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5a7, gbc.sp());
        EXPECT(0x42fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00BE
        gbc.setState(0x2056, 0x91de, 0xbe50, 0x4c6b, 0x63c0, 0x4a93, 0x1, 0x1);
        gbc.writeMem(0x2056, { 0x40 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x91de, gbc.sp());
        EXPECT(0x2057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00BF
        gbc.setState(0x366a, 0xb6b2, 0x9960, 0xb962, 0xfff, 0x3dc4, 0x1, 0x0);
        gbc.writeMem(0x366a, { 0x40 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb6b2, gbc.sp());
        EXPECT(0x366b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00C0
        gbc.setState(0x9c1f, 0xab3c, 0xcbe0, 0x975, 0x880c, 0xd2bc, 0x0, 0x1);
        gbc.writeMem(0x9c1f, { 0x40 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xab3c, gbc.sp());
        EXPECT(0x9c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9c1f));
        // 40 00C2
        gbc.setState(0x3b34, 0x4b4c, 0x88f0, 0x6934, 0x4d8, 0x8285, 0x1, 0x1);
        gbc.writeMem(0x3b34, { 0x40 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4b4c, gbc.sp());
        EXPECT(0x3b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00C3
        gbc.setState(0xa7cb, 0x15ec, 0xe560, 0x470e, 0xb598, 0x3aa3, 0x1, 0x0);
        gbc.writeMem(0xa7cb, { 0x40 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x15ec, gbc.sp());
        EXPECT(0xa7cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa7cb));
        // 40 00C4
        gbc.setState(0xcff4, 0x9480, 0x3520, 0x918, 0x11db, 0x4f0f, 0x1, 0x0);
        gbc.writeMem(0xcff4, { 0x40 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9480, gbc.sp());
        EXPECT(0xcff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcff4));
        // 40 00C5
        gbc.setState(0x420e, 0x5c0a, 0x6c40, 0xa91c, 0xc72e, 0x55f4, 0x1, 0x1);
        gbc.writeMem(0x420e, { 0x40 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5c0a, gbc.sp());
        EXPECT(0x420f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00C6
        gbc.setState(0x5445, 0xcc67, 0xadc0, 0x4378, 0x2d72, 0xb594, 0x0, 0x1);
        gbc.writeMem(0x5445, { 0x40 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcc67, gbc.sp());
        EXPECT(0x5446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00C7
        gbc.setState(0xd0fc, 0x67fd, 0x54d0, 0x5cbc, 0x1c57, 0xc1f7, 0x1, 0x1);
        gbc.writeMem(0xd0fc, { 0x40 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x67fd, gbc.sp());
        EXPECT(0xd0fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd0fc));
        // 40 00C8
        gbc.setState(0xebe0, 0xa5e0, 0xe4a0, 0xf77b, 0xdf9d, 0x16d8, 0x1, 0x1);
        gbc.writeMem(0xebe0, { 0x40 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa5e0, gbc.sp());
        EXPECT(0xebe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xebe0));
        // 40 00C9
        gbc.setState(0xfb6, 0xd674, 0x4f40, 0x22fb, 0x1e37, 0xff57, 0x0, 0x1);
        gbc.writeMem(0xfb6, { 0x40 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd674, gbc.sp());
        EXPECT(0xfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00CA
        gbc.setState(0x904e, 0x4a0f, 0x2220, 0x2855, 0xdb3e, 0x2d50, 0x0, 0x0);
        gbc.writeMem(0x904e, { 0x40 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4a0f, gbc.sp());
        EXPECT(0x904f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x904e));
        // 40 00CC
        gbc.setState(0xd10c, 0x87c3, 0xc1f0, 0x8a5e, 0xcc3e, 0x2b3, 0x0, 0x0);
        gbc.writeMem(0xd10c, { 0x40 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x87c3, gbc.sp());
        EXPECT(0xd10d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd10c));
        // 40 00CD
        gbc.setState(0x70f5, 0x307e, 0x3b80, 0xe420, 0x28e1, 0xabca, 0x0, 0x1);
        gbc.writeMem(0x70f5, { 0x40 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x307e, gbc.sp());
        EXPECT(0x70f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00CE
        gbc.setState(0x72a8, 0xb43a, 0xc5f0, 0x1ea8, 0x23c, 0xdaa5, 0x1, 0x0);
        gbc.writeMem(0x72a8, { 0x40 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb43a, gbc.sp());
        EXPECT(0x72a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00D0
        gbc.setState(0x7d98, 0xe292, 0xe440, 0x92fd, 0x6d0a, 0xbf20, 0x1, 0x1);
        gbc.writeMem(0x7d98, { 0x40 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe292, gbc.sp());
        EXPECT(0x7d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00D1
        gbc.setState(0x45d, 0xc554, 0xb2c0, 0xb6ca, 0xec7b, 0x261d, 0x0, 0x0);
        gbc.writeMem(0x45d, { 0x40 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc554, gbc.sp());
        EXPECT(0x45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00D2
        gbc.setState(0xcd64, 0x10c7, 0x6490, 0x3e88, 0x8a52, 0x1ba0, 0x1, 0x1);
        gbc.writeMem(0xcd64, { 0x40 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x10c7, gbc.sp());
        EXPECT(0xcd65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcd64));
        // 40 00D3
        gbc.setState(0x5d7c, 0xa8a, 0xc580, 0x5ef, 0x1803, 0x8b0b, 0x1, 0x1);
        gbc.writeMem(0x5d7c, { 0x40 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa8a, gbc.sp());
        EXPECT(0x5d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00D4
        gbc.setState(0x664b, 0xbc18, 0xd280, 0x928c, 0x3f0c, 0xbb92, 0x0, 0x1);
        gbc.writeMem(0x664b, { 0x40 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbc18, gbc.sp());
        EXPECT(0x664c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00D5
        gbc.setState(0x6a76, 0x8c7d, 0xeaf0, 0xd455, 0x657a, 0x582c, 0x1, 0x1);
        gbc.writeMem(0x6a76, { 0x40 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8c7d, gbc.sp());
        EXPECT(0x6a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00D6
        gbc.setState(0x8051, 0x4307, 0x1060, 0xe174, 0x6d11, 0xc742, 0x1, 0x1);
        gbc.writeMem(0x8051, { 0x40 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4307, gbc.sp());
        EXPECT(0x8052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8051));
        // 40 00D7
        gbc.setState(0xa69e, 0xf976, 0xf0a0, 0x6f49, 0x8820, 0xa216, 0x0, 0x0);
        gbc.writeMem(0xa69e, { 0x40 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf976, gbc.sp());
        EXPECT(0xa69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa69e));
        // 40 00D9
        gbc.setState(0xe07b, 0xf2fd, 0xa880, 0x4a1b, 0xca7f, 0xd901, 0x1, 0x1);
        gbc.writeMem(0xe07b, { 0x40 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf2fd, gbc.sp());
        EXPECT(0xe07c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe07b));
        // 40 00DA
        gbc.setState(0xdf56, 0x6d94, 0xc920, 0x276, 0x785f, 0x4696, 0x0, 0x1);
        gbc.writeMem(0xdf56, { 0x40 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6d94, gbc.sp());
        EXPECT(0xdf57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdf56));
        // 40 00DB
        gbc.setState(0xb587, 0x2d4a, 0x8170, 0x8f94, 0x2612, 0xfcb, 0x0, 0x0);
        gbc.writeMem(0xb587, { 0x40 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2d4a, gbc.sp());
        EXPECT(0xb588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb587));
        // 40 00DC
        gbc.setState(0x89fd, 0x5044, 0xf750, 0xb7c9, 0x75e4, 0xd4e4, 0x0, 0x0);
        gbc.writeMem(0x89fd, { 0x40 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5044, gbc.sp());
        EXPECT(0x89fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x89fd));
        // 40 00DD
        gbc.setState(0x3e14, 0x88ca, 0x5b80, 0xeaaa, 0xcef9, 0x1989, 0x0, 0x0);
        gbc.writeMem(0x3e14, { 0x40 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x88ca, gbc.sp());
        EXPECT(0x3e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00DE
        gbc.setState(0xa8d9, 0x1a3c, 0xabc0, 0xa4db, 0x5920, 0x97ce, 0x0, 0x1);
        gbc.writeMem(0xa8d9, { 0x40 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1a3c, gbc.sp());
        EXPECT(0xa8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa8d9));
        // 40 00DF
        gbc.setState(0x925, 0xf552, 0x1ae0, 0x485a, 0x511a, 0x3675, 0x1, 0x1);
        gbc.writeMem(0x925, { 0x40 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf552, gbc.sp());
        EXPECT(0x926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00E0
        gbc.setState(0xbfa0, 0x981e, 0x9000, 0xd085, 0xb48e, 0x658e, 0x0, 0x0);
        gbc.writeMem(0xbfa0, { 0x40 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x981e, gbc.sp());
        EXPECT(0xbfa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbfa0));
        // 40 00E1
        gbc.setState(0xb7da, 0xc162, 0x95d0, 0x4f32, 0x2d2c, 0x21a0, 0x1, 0x1);
        gbc.writeMem(0xb7da, { 0x40 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc162, gbc.sp());
        EXPECT(0xb7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb7da));
        // 40 00E3
        gbc.setState(0xd68a, 0x4697, 0xcbf0, 0xa8ec, 0x24fe, 0x1ffa, 0x0, 0x1);
        gbc.writeMem(0xd68a, { 0x40 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4697, gbc.sp());
        EXPECT(0xd68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd68a));
        // 40 00E4
        gbc.setState(0x375e, 0xeb37, 0xe000, 0x3937, 0x96c1, 0xfe5e, 0x1, 0x1);
        gbc.writeMem(0x375e, { 0x40 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeb37, gbc.sp());
        EXPECT(0x375f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00E5
        gbc.setState(0x73e4, 0x6275, 0xbc20, 0x4516, 0x6e98, 0x1d0b, 0x1, 0x0);
        gbc.writeMem(0x73e4, { 0x40 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6275, gbc.sp());
        EXPECT(0x73e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00E6
        gbc.setState(0x87a, 0xbebb, 0x2760, 0xdd63, 0xc262, 0xcc74, 0x0, 0x0);
        gbc.writeMem(0x87a, { 0x40 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbebb, gbc.sp());
        EXPECT(0x87b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00E7
        gbc.setState(0xdd20, 0x791d, 0x4df0, 0x33a6, 0xb9bc, 0x7ba9, 0x1, 0x1);
        gbc.writeMem(0xdd20, { 0x40 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x791d, gbc.sp());
        EXPECT(0xdd21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdd20));
        // 40 00E8
        gbc.setState(0xd515, 0xafc5, 0x5a0, 0x4da0, 0xbcee, 0x129d, 0x1, 0x1);
        gbc.writeMem(0xd515, { 0x40 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xafc5, gbc.sp());
        EXPECT(0xd516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd515));
        // 40 00E9
        gbc.setState(0x12bb, 0xc392, 0xdc20, 0x9b4f, 0xbcda, 0xe146, 0x0, 0x0);
        gbc.writeMem(0x12bb, { 0x40 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc392, gbc.sp());
        EXPECT(0x12bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00EA
        gbc.setState(0x230f, 0xd24c, 0xbde0, 0x3512, 0x91e4, 0xc03e, 0x0, 0x1);
        gbc.writeMem(0x230f, { 0x40 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd24c, gbc.sp());
        EXPECT(0x2310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00EB
        gbc.setState(0xc5e7, 0xe0c5, 0x38e0, 0x8e77, 0xf743, 0x1369, 0x0, 0x1);
        gbc.writeMem(0xc5e7, { 0x40 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe0c5, gbc.sp());
        EXPECT(0xc5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc5e7));
        // 40 00EC
        gbc.setState(0x168f, 0xd4ee, 0x97f0, 0x6b5d, 0x2457, 0xa3b, 0x0, 0x0);
        gbc.writeMem(0x168f, { 0x40 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd4ee, gbc.sp());
        EXPECT(0x1690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00ED
        gbc.setState(0x562e, 0x3d32, 0x26e0, 0xaca8, 0xffa9, 0xe1fb, 0x1, 0x0);
        gbc.writeMem(0x562e, { 0x40 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3d32, gbc.sp());
        EXPECT(0x562f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00EE
        gbc.setState(0xf5a, 0x94d, 0x2940, 0x3a9a, 0x8718, 0x9793, 0x1, 0x0);
        gbc.writeMem(0xf5a, { 0x40 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x94d, gbc.sp());
        EXPECT(0xf5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00EF
        gbc.setState(0x75ac, 0x5d18, 0x52d0, 0x46d1, 0xe965, 0x68f8, 0x0, 0x0);
        gbc.writeMem(0x75ac, { 0x40 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5d18, gbc.sp());
        EXPECT(0x75ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00F0
        gbc.setState(0x612a, 0x71ff, 0x49a0, 0xfd44, 0xa228, 0x7c3f, 0x0, 0x0);
        gbc.writeMem(0x612a, { 0x40 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x71ff, gbc.sp());
        EXPECT(0x612b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00F1
        gbc.setState(0x2100, 0x670f, 0x5b10, 0x7594, 0x8f21, 0xd220, 0x0, 0x0);
        gbc.writeMem(0x2100, { 0x40 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x670f, gbc.sp());
        EXPECT(0x2101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00F2
        gbc.setState(0x33c3, 0xaf4c, 0x3910, 0x79ec, 0xf32, 0xc07d, 0x0, 0x0);
        gbc.writeMem(0x33c3, { 0x40 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xaf4c, gbc.sp());
        EXPECT(0x33c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00F4
        gbc.setState(0xc140, 0x5e33, 0xf990, 0xce48, 0x7f76, 0x6172, 0x0, 0x0);
        gbc.writeMem(0xc140, { 0x40 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5e33, gbc.sp());
        EXPECT(0xc141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc140));
        // 40 00F5
        gbc.setState(0x513e, 0xceb4, 0xbb80, 0xd101, 0x3d9, 0x4626, 0x0, 0x0);
        gbc.writeMem(0x513e, { 0x40 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xceb4, gbc.sp());
        EXPECT(0x513f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00F6
        gbc.setState(0x9539, 0x9fbb, 0xfa50, 0xf2a9, 0x9d80, 0x5dcc, 0x0, 0x1);
        gbc.writeMem(0x9539, { 0x40 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9fbb, gbc.sp());
        EXPECT(0x953a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9539));
        // 40 00F7
        gbc.setState(0xd6b7, 0xeb33, 0xbd20, 0xa7b0, 0x2df1, 0x2095, 0x1, 0x1);
        gbc.writeMem(0xd6b7, { 0x40 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xeb33, gbc.sp());
        EXPECT(0xd6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd6b7));
        // 40 00F8
        gbc.setState(0x7735, 0x8e7, 0x4760, 0x617c, 0x71f7, 0x8a88, 0x0, 0x0);
        gbc.writeMem(0x7735, { 0x40 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8e7, gbc.sp());
        EXPECT(0x7736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00F9
        gbc.setState(0x4c94, 0x6d83, 0xb760, 0xafc6, 0x6b06, 0x557b, 0x0, 0x0);
        gbc.writeMem(0x4c94, { 0x40 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6d83, gbc.sp());
        EXPECT(0x4c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00FA
        gbc.setState(0x1269, 0xd489, 0x69c0, 0x6c8e, 0x5029, 0xe7ad, 0x1, 0x0);
        gbc.writeMem(0x1269, { 0x40 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd489, gbc.sp());
        EXPECT(0x126a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00FB
        gbc.setState(0xe30c, 0x1b00, 0xc680, 0x1c36, 0x2c65, 0xa0a1, 0x1, 0x1);
        gbc.writeMem(0xe30c, { 0x40 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1b00, gbc.sp());
        EXPECT(0xe30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe30c));
        // 40 00FC
        gbc.setState(0x1d4a, 0x9164, 0xab90, 0x55ad, 0xe741, 0xccc0, 0x1, 0x1);
        gbc.writeMem(0x1d4a, { 0x40 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9164, gbc.sp());
        EXPECT(0x1d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 00FD
        gbc.setState(0x23f5, 0x3277, 0x8700, 0xb4, 0x29a0, 0x6ac7, 0x1, 0x1);
        gbc.writeMem(0x23f5, { 0x40 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3277, gbc.sp());
        EXPECT(0x23f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00FE
        gbc.setState(0x39a6, 0x3ba4, 0x9700, 0x4be1, 0xe912, 0x78b8, 0x0, 0x0);
        gbc.writeMem(0x39a6, { 0x40 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3ba4, gbc.sp());
        EXPECT(0x39a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 00FF
        gbc.setState(0x7e7, 0x1d45, 0x9760, 0xcfc0, 0x4336, 0x2e45, 0x0, 0x0);
        gbc.writeMem(0x7e7, { 0x40 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1d45, gbc.sp());
        EXPECT(0x7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0101
        gbc.setState(0xe82, 0x2b30, 0x7320, 0x894a, 0x646c, 0x4529, 0x0, 0x0);
        gbc.writeMem(0xe82, { 0x40 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2b30, gbc.sp());
        EXPECT(0xe83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0102
        gbc.setState(0x1012, 0xdbdc, 0x75f0, 0x141, 0x7a92, 0x9767, 0x1, 0x1);
        gbc.writeMem(0x1012, { 0x40 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdbdc, gbc.sp());
        EXPECT(0x1013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0103
        gbc.setState(0xe8ee, 0xb29, 0xb7b0, 0xd358, 0x6366, 0x83d8, 0x0, 0x1);
        gbc.writeMem(0xe8ee, { 0x40 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb29, gbc.sp());
        EXPECT(0xe8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe8ee));
        // 40 0104
        gbc.setState(0xede2, 0x6ef1, 0x2710, 0x6490, 0xd9b5, 0xed5c, 0x1, 0x1);
        gbc.writeMem(0xede2, { 0x40 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6ef1, gbc.sp());
        EXPECT(0xede3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xede2));
        // 40 0105
        gbc.setState(0x3595, 0xb7d5, 0x4aa0, 0x853b, 0x7546, 0xd6e2, 0x0, 0x1);
        gbc.writeMem(0x3595, { 0x40 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb7d5, gbc.sp());
        EXPECT(0x3596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0106
        gbc.setState(0x821a, 0xfe67, 0xf110, 0xbe07, 0x5c6c, 0x87dc, 0x0, 0x0);
        gbc.writeMem(0x821a, { 0x40 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfe67, gbc.sp());
        EXPECT(0x821b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x821a));
        // 40 0107
        gbc.setState(0x5327, 0x1877, 0xa290, 0xaf44, 0xead2, 0x74bd, 0x0, 0x0);
        gbc.writeMem(0x5327, { 0x40 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1877, gbc.sp());
        EXPECT(0x5328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0108
        gbc.setState(0x9992, 0x9528, 0xc770, 0xdd6a, 0x6ae, 0x109e, 0x1, 0x1);
        gbc.writeMem(0x9992, { 0x40 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9528, gbc.sp());
        EXPECT(0x9993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9992));
        // 40 0109
        gbc.setState(0x382a, 0x4965, 0x9e50, 0x32ef, 0xdb39, 0x96f0, 0x1, 0x1);
        gbc.writeMem(0x382a, { 0x40 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4965, gbc.sp());
        EXPECT(0x382b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 010A
        gbc.setState(0x23b7, 0xbec4, 0xefa0, 0xe2cf, 0xe73d, 0x8ca0, 0x0, 0x0);
        gbc.writeMem(0x23b7, { 0x40 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbec4, gbc.sp());
        EXPECT(0x23b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 010C
        gbc.setState(0x3b7f, 0x9f3a, 0x61c0, 0x6e8c, 0x705, 0x4332, 0x0, 0x0);
        gbc.writeMem(0x3b7f, { 0x40 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9f3a, gbc.sp());
        EXPECT(0x3b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 010D
        gbc.setState(0x8315, 0x17bf, 0xc080, 0x8e9c, 0x9cfa, 0xbb17, 0x0, 0x1);
        gbc.writeMem(0x8315, { 0x40 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x17bf, gbc.sp());
        EXPECT(0x8316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8315));
        // 40 010E
        gbc.setState(0x1810, 0x9348, 0x4fa0, 0xa71a, 0x190, 0x4e45, 0x0, 0x1);
        gbc.writeMem(0x1810, { 0x40 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9348, gbc.sp());
        EXPECT(0x1811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 010F
        gbc.setState(0x9402, 0xd2b1, 0xe60, 0xf5d6, 0xbb13, 0x8784, 0x0, 0x1);
        gbc.writeMem(0x9402, { 0x40 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd2b1, gbc.sp());
        EXPECT(0x9403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9402));
        // 40 0110
        gbc.setState(0x3fda, 0xe430, 0x62e0, 0x1946, 0xd132, 0x5df2, 0x0, 0x0);
        gbc.writeMem(0x3fda, { 0x40 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe430, gbc.sp());
        EXPECT(0x3fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0111
        gbc.setState(0x6a4e, 0xf4b, 0x580, 0xd66c, 0x1df7, 0x4465, 0x1, 0x0);
        gbc.writeMem(0x6a4e, { 0x40 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf4b, gbc.sp());
        EXPECT(0x6a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0112
        gbc.setState(0x1a04, 0x4400, 0x770, 0xe473, 0x1d25, 0x3a23, 0x1, 0x1);
        gbc.writeMem(0x1a04, { 0x40 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4400, gbc.sp());
        EXPECT(0x1a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0113
        gbc.setState(0x434, 0xb3d2, 0xd30, 0xaaee, 0x8f84, 0xecbd, 0x0, 0x0);
        gbc.writeMem(0x434, { 0x40 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb3d2, gbc.sp());
        EXPECT(0x435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0115
        gbc.setState(0xe95b, 0xd163, 0x6520, 0xc02f, 0xd89f, 0xe3a8, 0x1, 0x1);
        gbc.writeMem(0xe95b, { 0x40 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd163, gbc.sp());
        EXPECT(0xe95c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe95b));
        // 40 0116
        gbc.setState(0x5b52, 0x1cf5, 0x5280, 0x5380, 0x6533, 0xfd0e, 0x0, 0x1);
        gbc.writeMem(0x5b52, { 0x40 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1cf5, gbc.sp());
        EXPECT(0x5b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0117
        gbc.setState(0x1028, 0x107b, 0x8670, 0xd8df, 0x3cf5, 0xdc89, 0x1, 0x0);
        gbc.writeMem(0x1028, { 0x40 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x107b, gbc.sp());
        EXPECT(0x1029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0118
        gbc.setState(0x6611, 0xb80a, 0x30a0, 0x451d, 0xc034, 0xfc50, 0x0, 0x0);
        gbc.writeMem(0x6611, { 0x40 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb80a, gbc.sp());
        EXPECT(0x6612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0119
        gbc.setState(0x6f6f, 0x710, 0xd1c0, 0xd37a, 0x5d67, 0xb69, 0x1, 0x0);
        gbc.writeMem(0x6f6f, { 0x40 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x710, gbc.sp());
        EXPECT(0x6f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 011A
        gbc.setState(0x8907, 0xea11, 0x1210, 0xcb01, 0x845b, 0xe8ed, 0x0, 0x1);
        gbc.writeMem(0x8907, { 0x40 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xea11, gbc.sp());
        EXPECT(0x8908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8907));
        // 40 011B
        gbc.setState(0xc685, 0xff4f, 0xd0, 0x1553, 0x7750, 0xe000, 0x0, 0x0);
        gbc.writeMem(0xc685, { 0x40 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xff4f, gbc.sp());
        EXPECT(0xc686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc685));
        // 40 011C
        gbc.setState(0xa39a, 0xd1d9, 0xff20, 0xbfeb, 0x5f8, 0x95f1, 0x1, 0x1);
        gbc.writeMem(0xa39a, { 0x40 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd1d9, gbc.sp());
        EXPECT(0xa39b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa39a));
        // 40 011D
        gbc.setState(0xb4b6, 0x1ba7, 0xe6c0, 0x91e7, 0x9309, 0xad43, 0x0, 0x0);
        gbc.writeMem(0xb4b6, { 0x40 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1ba7, gbc.sp());
        EXPECT(0xb4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb4b6));
        // 40 011E
        gbc.setState(0x4329, 0x1915, 0x7a30, 0x4d30, 0x7d08, 0xd9c8, 0x0, 0x1);
        gbc.writeMem(0x4329, { 0x40 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1915, gbc.sp());
        EXPECT(0x432a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 011F
        gbc.setState(0xaa0b, 0x4960, 0xb140, 0x63be, 0x1c43, 0x1202, 0x0, 0x0);
        gbc.writeMem(0xaa0b, { 0x40 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4960, gbc.sp());
        EXPECT(0xaa0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xaa0b));
        // 40 0120
        gbc.setState(0x5ecb, 0x5c1a, 0x7a70, 0xef15, 0x38f7, 0x646e, 0x0, 0x1);
        gbc.writeMem(0x5ecb, { 0x40 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5c1a, gbc.sp());
        EXPECT(0x5ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0121
        gbc.setState(0x496a, 0xd2d0, 0x6670, 0x9638, 0x5830, 0xf18, 0x1, 0x1);
        gbc.writeMem(0x496a, { 0x40 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd2d0, gbc.sp());
        EXPECT(0x496b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0122
        gbc.setState(0xcc3e, 0x802e, 0x1930, 0x9698, 0x37ed, 0x3702, 0x1, 0x0);
        gbc.writeMem(0xcc3e, { 0x40 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x802e, gbc.sp());
        EXPECT(0xcc3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcc3e));
        // 40 0123
        gbc.setState(0x224c, 0xbf57, 0x5b00, 0xf873, 0xed68, 0xd910, 0x0, 0x0);
        gbc.writeMem(0x224c, { 0x40 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbf57, gbc.sp());
        EXPECT(0x224d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0124
        gbc.setState(0x7bc3, 0x356, 0x53b0, 0xb238, 0xd7ad, 0x9543, 0x0, 0x1);
        gbc.writeMem(0x7bc3, { 0x40 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x356, gbc.sp());
        EXPECT(0x7bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0125
        gbc.setState(0x7d00, 0xea3d, 0x2900, 0x72f3, 0x846d, 0x1140, 0x1, 0x0);
        gbc.writeMem(0x7d00, { 0x40 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xea3d, gbc.sp());
        EXPECT(0x7d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0126
        gbc.setState(0x3b62, 0x6d50, 0xc710, 0xeb32, 0x4adb, 0x9411, 0x0, 0x1);
        gbc.writeMem(0x3b62, { 0x40 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6d50, gbc.sp());
        EXPECT(0x3b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0127
        gbc.setState(0x1bc1, 0x608f, 0x7540, 0x3a86, 0xe9c8, 0x7553, 0x1, 0x0);
        gbc.writeMem(0x1bc1, { 0x40 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x608f, gbc.sp());
        EXPECT(0x1bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0128
        gbc.setState(0x3d3e, 0x2501, 0xa320, 0xbc62, 0x5ec2, 0xf9b0, 0x0, 0x1);
        gbc.writeMem(0x3d3e, { 0x40 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2501, gbc.sp());
        EXPECT(0x3d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0129
        gbc.setState(0x36fc, 0xcdbf, 0xd090, 0xbeb9, 0x7ec9, 0xdb7d, 0x0, 0x1);
        gbc.writeMem(0x36fc, { 0x40 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcdbf, gbc.sp());
        EXPECT(0x36fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 012A
        gbc.setState(0xd4a1, 0x5a72, 0x10a0, 0xbbdc, 0x290, 0x74bb, 0x0, 0x1);
        gbc.writeMem(0xd4a1, { 0x40 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5a72, gbc.sp());
        EXPECT(0xd4a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd4a1));
        // 40 012C
        gbc.setState(0x12a5, 0xbb4a, 0x3450, 0xdb94, 0xd59e, 0x47db, 0x1, 0x0);
        gbc.writeMem(0x12a5, { 0x40 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbb4a, gbc.sp());
        EXPECT(0x12a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 012D
        gbc.setState(0x82ba, 0x56b6, 0xca30, 0x56d8, 0x9da7, 0x9906, 0x0, 0x1);
        gbc.writeMem(0x82ba, { 0x40 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x56b6, gbc.sp());
        EXPECT(0x82bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x82ba));
        // 40 012E
        gbc.setState(0x88fa, 0x9e3f, 0x6f10, 0xb8d3, 0x6d7f, 0x41a9, 0x1, 0x0);
        gbc.writeMem(0x88fa, { 0x40 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9e3f, gbc.sp());
        EXPECT(0x88fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x88fa));
        // 40 012F
        gbc.setState(0xa69c, 0x828b, 0x1720, 0xad60, 0x35b2, 0xb89c, 0x0, 0x1);
        gbc.writeMem(0xa69c, { 0x40 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x828b, gbc.sp());
        EXPECT(0xa69d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa69c));
        // 40 0130
        gbc.setState(0xc8c, 0x5a10, 0x5060, 0xe0d6, 0x8873, 0x4605, 0x1, 0x1);
        gbc.writeMem(0xc8c, { 0x40 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5a10, gbc.sp());
        EXPECT(0xc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0131
        gbc.setState(0xa235, 0x2ec1, 0x4800, 0xd337, 0x2d4c, 0xb5ac, 0x0, 0x0);
        gbc.writeMem(0xa235, { 0x40 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2ec1, gbc.sp());
        EXPECT(0xa236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa235));
        // 40 0132
        gbc.setState(0x3433, 0xb969, 0x6790, 0xf555, 0xc415, 0x24fd, 0x0, 0x1);
        gbc.writeMem(0x3433, { 0x40 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb969, gbc.sp());
        EXPECT(0x3434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0133
        gbc.setState(0x147d, 0x3f2e, 0x4330, 0x3b81, 0x46f0, 0xecde, 0x0, 0x1);
        gbc.writeMem(0x147d, { 0x40 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3f2e, gbc.sp());
        EXPECT(0x147e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0134
        gbc.setState(0x6d60, 0xa3a0, 0x1f20, 0x465c, 0x4e95, 0xedac, 0x1, 0x0);
        gbc.writeMem(0x6d60, { 0x40 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa3a0, gbc.sp());
        EXPECT(0x6d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0135
        gbc.setState(0x5568, 0xa8be, 0x95a0, 0x4a7f, 0x8f7c, 0x9877, 0x0, 0x0);
        gbc.writeMem(0x5568, { 0x40 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa8be, gbc.sp());
        EXPECT(0x5569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0136
        gbc.setState(0x6f44, 0xa89a, 0xfa70, 0xea7f, 0x4058, 0xfdd1, 0x1, 0x0);
        gbc.writeMem(0x6f44, { 0x40 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa89a, gbc.sp());
        EXPECT(0x6f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0137
        gbc.setState(0xd8e0, 0x50dc, 0xc0c0, 0x3880, 0x25df, 0x71b8, 0x1, 0x1);
        gbc.writeMem(0xd8e0, { 0x40 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x50dc, gbc.sp());
        EXPECT(0xd8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd8e0));
        // 40 0138
        gbc.setState(0x5892, 0xa99b, 0xb3b0, 0xbd3e, 0x24ca, 0xd30c, 0x1, 0x1);
        gbc.writeMem(0x5892, { 0x40 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa99b, gbc.sp());
        EXPECT(0x5893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0139
        gbc.setState(0xb8, 0xd51c, 0x6820, 0xc1be, 0x3dca, 0xff32, 0x0, 0x1);
        gbc.writeMem(0xb8, { 0x40 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd51c, gbc.sp());
        EXPECT(0xb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 013A
        gbc.setState(0xec38, 0x64ae, 0x4880, 0x51dd, 0x8a00, 0x1411, 0x0, 0x0);
        gbc.writeMem(0xec38, { 0x40 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x64ae, gbc.sp());
        EXPECT(0xec39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xec38));
        // 40 013B
        gbc.setState(0x2919, 0x9cb1, 0x42e0, 0xc176, 0xba97, 0x6586, 0x1, 0x1);
        gbc.writeMem(0x2919, { 0x40 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9cb1, gbc.sp());
        EXPECT(0x291a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 013C
        gbc.setState(0x654b, 0xa484, 0x30d0, 0x44ef, 0x7527, 0xaf89, 0x0, 0x1);
        gbc.writeMem(0x654b, { 0x40 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa484, gbc.sp());
        EXPECT(0x654c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 013D
        gbc.setState(0x2810, 0x6a99, 0x2920, 0x1b36, 0xee9e, 0x1488, 0x0, 0x1);
        gbc.writeMem(0x2810, { 0x40 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6a99, gbc.sp());
        EXPECT(0x2811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 013E
        gbc.setState(0x7c7e, 0x9cbc, 0xae50, 0xc841, 0xd49f, 0xd72b, 0x0, 0x0);
        gbc.writeMem(0x7c7e, { 0x40 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9cbc, gbc.sp());
        EXPECT(0x7c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 013F
        gbc.setState(0x25f1, 0xaf0f, 0xf830, 0xeda1, 0x5618, 0x176d, 0x0, 0x0);
        gbc.writeMem(0x25f1, { 0x40 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xaf0f, gbc.sp());
        EXPECT(0x25f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0140
        gbc.setState(0x6eb4, 0x51b4, 0x9430, 0x2b44, 0xd551, 0xa42f, 0x1, 0x1);
        gbc.writeMem(0x6eb4, { 0x40 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x51b4, gbc.sp());
        EXPECT(0x6eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0141
        gbc.setState(0xb51d, 0xc6c9, 0x9180, 0x6576, 0xb122, 0x8f71, 0x1, 0x1);
        gbc.writeMem(0xb51d, { 0x40 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc6c9, gbc.sp());
        EXPECT(0xb51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb51d));
        // 40 0142
        gbc.setState(0xc0bd, 0xe30c, 0xb6e0, 0xce84, 0x5585, 0xf1d1, 0x1, 0x0);
        gbc.writeMem(0xc0bd, { 0x40 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe30c, gbc.sp());
        EXPECT(0xc0be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc0bd));
        // 40 0143
        gbc.setState(0x3aaf, 0xe7e7, 0x44d0, 0x660b, 0xed1, 0x12c2, 0x0, 0x1);
        gbc.writeMem(0x3aaf, { 0x40 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe7e7, gbc.sp());
        EXPECT(0x3ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0144
        gbc.setState(0x19da, 0x3333, 0x2420, 0x3a0b, 0xbb3, 0x4f15, 0x0, 0x1);
        gbc.writeMem(0x19da, { 0x40 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3333, gbc.sp());
        EXPECT(0x19db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0145
        gbc.setState(0xd3f3, 0xb281, 0x74f0, 0x1db, 0xfe1a, 0xf3a3, 0x0, 0x1);
        gbc.writeMem(0xd3f3, { 0x40 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb281, gbc.sp());
        EXPECT(0xd3f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd3f3));
        // 40 0146
        gbc.setState(0x2438, 0x314d, 0xe740, 0x6b00, 0xe659, 0xe66a, 0x1, 0x1);
        gbc.writeMem(0x2438, { 0x40 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x314d, gbc.sp());
        EXPECT(0x2439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0147
        gbc.setState(0x66cb, 0xdf12, 0x280, 0x1bdf, 0x6a3e, 0x2075, 0x0, 0x1);
        gbc.writeMem(0x66cb, { 0x40 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdf12, gbc.sp());
        EXPECT(0x66cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0148
        gbc.setState(0x5bb, 0xa0ba, 0x3c90, 0xcec7, 0xd093, 0x4a0d, 0x1, 0x1);
        gbc.writeMem(0x5bb, { 0x40 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa0ba, gbc.sp());
        EXPECT(0x5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0149
        gbc.setState(0x7100, 0x54ef, 0x5c40, 0x8a7f, 0xedff, 0x589a, 0x1, 0x1);
        gbc.writeMem(0x7100, { 0x40 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x54ef, gbc.sp());
        EXPECT(0x7101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 014A
        gbc.setState(0x15bb, 0xf740, 0x7490, 0x9033, 0x2d1, 0x67cc, 0x1, 0x0);
        gbc.writeMem(0x15bb, { 0x40 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf740, gbc.sp());
        EXPECT(0x15bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 014B
        gbc.setState(0xedb5, 0xe160, 0x28f0, 0x5473, 0xe102, 0x4669, 0x1, 0x0);
        gbc.writeMem(0xedb5, { 0x40 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe160, gbc.sp());
        EXPECT(0xedb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xedb5));
        // 40 014C
        gbc.setState(0x55d1, 0x6200, 0xc340, 0xca35, 0x2a9b, 0x25b, 0x0, 0x0);
        gbc.writeMem(0x55d1, { 0x40 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6200, gbc.sp());
        EXPECT(0x55d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 014D
        gbc.setState(0xdeb9, 0x5c54, 0x5120, 0x9e29, 0xc410, 0x2c7, 0x0, 0x1);
        gbc.writeMem(0xdeb9, { 0x40 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5c54, gbc.sp());
        EXPECT(0xdeba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdeb9));
        // 40 014E
        gbc.setState(0x8665, 0x8de3, 0x8b10, 0x607a, 0x249d, 0x91e1, 0x0, 0x0);
        gbc.writeMem(0x8665, { 0x40 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8de3, gbc.sp());
        EXPECT(0x8666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8665));
        // 40 0150
        gbc.setState(0x6a85, 0xebb5, 0x1390, 0x9a71, 0x915e, 0xa05, 0x1, 0x0);
        gbc.writeMem(0x6a85, { 0x40 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xebb5, gbc.sp());
        EXPECT(0x6a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0151
        gbc.setState(0xb91b, 0x9163, 0x8c60, 0x2b57, 0x130e, 0xd189, 0x0, 0x0);
        gbc.writeMem(0xb91b, { 0x40 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9163, gbc.sp());
        EXPECT(0xb91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb91b));
        // 40 0152
        gbc.setState(0xca23, 0x2b8d, 0x84d0, 0xcf58, 0x5289, 0x94f2, 0x0, 0x1);
        gbc.writeMem(0xca23, { 0x40 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2b8d, gbc.sp());
        EXPECT(0xca24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xca23));
        // 40 0153
        gbc.setState(0x3f24, 0xf346, 0x1e90, 0x8a1f, 0x5aba, 0xf646, 0x0, 0x0);
        gbc.writeMem(0x3f24, { 0x40 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf346, gbc.sp());
        EXPECT(0x3f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0154
        gbc.setState(0x5493, 0xcd25, 0x5d70, 0x2d19, 0xd315, 0x55e5, 0x1, 0x0);
        gbc.writeMem(0x5493, { 0x40 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcd25, gbc.sp());
        EXPECT(0x5494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0155
        gbc.setState(0xe8ad, 0x57d8, 0xa960, 0x6f17, 0x25e5, 0x9554, 0x0, 0x0);
        gbc.writeMem(0xe8ad, { 0x40 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x57d8, gbc.sp());
        EXPECT(0xe8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe8ad));
        // 40 0156
        gbc.setState(0xde37, 0x4ce3, 0xb9c0, 0x475d, 0xe00, 0x44e3, 0x1, 0x0);
        gbc.writeMem(0xde37, { 0x40 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4ce3, gbc.sp());
        EXPECT(0xde38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xde37));
        // 40 0157
        gbc.setState(0xa02e, 0xa36a, 0xb80, 0x54c7, 0x4a25, 0x490f, 0x1, 0x1);
        gbc.writeMem(0xa02e, { 0x40 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa36a, gbc.sp());
        EXPECT(0xa02f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa02e));
        // 40 0158
        gbc.setState(0xab81, 0xcac5, 0x41d0, 0xe39d, 0xd0ca, 0xb266, 0x1, 0x0);
        gbc.writeMem(0xab81, { 0x40 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcac5, gbc.sp());
        EXPECT(0xab82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xab81));
        // 40 0159
        gbc.setState(0x815c, 0x83ff, 0x4ab0, 0x2c3, 0xf5f1, 0x1791, 0x1, 0x1);
        gbc.writeMem(0x815c, { 0x40 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x83ff, gbc.sp());
        EXPECT(0x815d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x815c));
        // 40 015A
        gbc.setState(0x9a90, 0xcbeb, 0xb0e0, 0x9cdb, 0x727d, 0xed88, 0x1, 0x1);
        gbc.writeMem(0x9a90, { 0x40 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcbeb, gbc.sp());
        EXPECT(0x9a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9a90));
        // 40 015B
        gbc.setState(0x1685, 0x9a14, 0xd7d0, 0xef42, 0x8a75, 0x5d29, 0x1, 0x1);
        gbc.writeMem(0x1685, { 0x40 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9a14, gbc.sp());
        EXPECT(0x1686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 015C
        gbc.setState(0xc1fc, 0xf03c, 0x9570, 0x6932, 0xbbee, 0xce31, 0x1, 0x1);
        gbc.writeMem(0xc1fc, { 0x40 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf03c, gbc.sp());
        EXPECT(0xc1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc1fc));
        // 40 015D
        gbc.setState(0xbbf2, 0x5d3a, 0xac40, 0x36f8, 0x5f55, 0x865d, 0x0, 0x0);
        gbc.writeMem(0xbbf2, { 0x40 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5d3a, gbc.sp());
        EXPECT(0xbbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbbf2));
        // 40 015E
        gbc.setState(0xb501, 0x86cc, 0xa2c0, 0xeb78, 0x4ebd, 0x9b38, 0x1, 0x1);
        gbc.writeMem(0xb501, { 0x40 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x86cc, gbc.sp());
        EXPECT(0xb502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb501));
        // 40 015F
        gbc.setState(0xb8eb, 0x8b5, 0x1c00, 0xc756, 0x5ba1, 0xb9d1, 0x0, 0x0);
        gbc.writeMem(0xb8eb, { 0x40 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8b5, gbc.sp());
        EXPECT(0xb8ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb8eb));
        // 40 0160
        gbc.setState(0x45d, 0xf4ad, 0x44f0, 0xd2d7, 0xd21e, 0x2718, 0x0, 0x1);
        gbc.writeMem(0x45d, { 0x40 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf4ad, gbc.sp());
        EXPECT(0x45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0161
        gbc.setState(0x252f, 0x428b, 0xc8e0, 0xda7, 0xfd9f, 0x874d, 0x0, 0x0);
        gbc.writeMem(0x252f, { 0x40 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x428b, gbc.sp());
        EXPECT(0x2530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0162
        gbc.setState(0xa444, 0x8c6e, 0x1160, 0xa77c, 0x1c5, 0xaa77, 0x0, 0x0);
        gbc.writeMem(0xa444, { 0x40 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8c6e, gbc.sp());
        EXPECT(0xa445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa444));
        // 40 0163
        gbc.setState(0x6a8c, 0x6cc5, 0x6070, 0x4013, 0xd195, 0x6aa0, 0x0, 0x0);
        gbc.writeMem(0x6a8c, { 0x40 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6cc5, gbc.sp());
        EXPECT(0x6a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0164
        gbc.setState(0xcf03, 0xbf7d, 0xd350, 0xbb7f, 0x5f14, 0xcf24, 0x0, 0x0);
        gbc.writeMem(0xcf03, { 0x40 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbf7d, gbc.sp());
        EXPECT(0xcf04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcf03));
        // 40 0165
        gbc.setState(0x987c, 0xed, 0x4d60, 0xe782, 0xd52, 0x5cc, 0x0, 0x0);
        gbc.writeMem(0x987c, { 0x40 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xed, gbc.sp());
        EXPECT(0x987d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x987c));
        // 40 0166
        gbc.setState(0x572c, 0xff71, 0x56e0, 0xe236, 0x49ff, 0x440a, 0x0, 0x0);
        gbc.writeMem(0x572c, { 0x40 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xff71, gbc.sp());
        EXPECT(0x572d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0167
        gbc.setState(0x5c8, 0xce7d, 0x1310, 0xa26d, 0x8f45, 0x6041, 0x1, 0x1);
        gbc.writeMem(0x5c8, { 0x40 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xce7d, gbc.sp());
        EXPECT(0x5c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0169
        gbc.setState(0x5fe1, 0x792, 0x2540, 0xd969, 0x398b, 0x4cc6, 0x1, 0x1);
        gbc.writeMem(0x5fe1, { 0x40 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x792, gbc.sp());
        EXPECT(0x5fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 016A
        gbc.setState(0x40ce, 0x9631, 0xf9e0, 0x235b, 0xf03a, 0x1f6f, 0x1, 0x0);
        gbc.writeMem(0x40ce, { 0x40 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9631, gbc.sp());
        EXPECT(0x40cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 016B
        gbc.setState(0x5086, 0xf288, 0x5280, 0xf389, 0x48dc, 0x946b, 0x1, 0x0);
        gbc.writeMem(0x5086, { 0x40 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf288, gbc.sp());
        EXPECT(0x5087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 016C
        gbc.setState(0xb077, 0xa4f2, 0x9d00, 0xf085, 0xc372, 0xd5e4, 0x1, 0x0);
        gbc.writeMem(0xb077, { 0x40 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa4f2, gbc.sp());
        EXPECT(0xb078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb077));
        // 40 016D
        gbc.setState(0xba95, 0x5ea7, 0x8180, 0xa435, 0xb159, 0xb55f, 0x1, 0x1);
        gbc.writeMem(0xba95, { 0x40 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5ea7, gbc.sp());
        EXPECT(0xba96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xba95));
        // 40 016E
        gbc.setState(0x353d, 0x5d1e, 0xfa70, 0x4120, 0x77bc, 0x2d2c, 0x1, 0x1);
        gbc.writeMem(0x353d, { 0x40 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5d1e, gbc.sp());
        EXPECT(0x353e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 016F
        gbc.setState(0x7f09, 0xefab, 0xc1c0, 0x7bdd, 0xe857, 0x91b5, 0x0, 0x0);
        gbc.writeMem(0x7f09, { 0x40 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xefab, gbc.sp());
        EXPECT(0x7f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0170
        gbc.setState(0x582, 0x83f9, 0x7220, 0x713a, 0x205d, 0xaa75, 0x1, 0x1);
        gbc.writeMem(0x582, { 0x40 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x83f9, gbc.sp());
        EXPECT(0x583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0171
        gbc.setState(0xc54c, 0x40d9, 0x2e70, 0xf476, 0x9c04, 0x9224, 0x0, 0x0);
        gbc.writeMem(0xc54c, { 0x40 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x40d9, gbc.sp());
        EXPECT(0xc54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc54c));
        // 40 0172
        gbc.setState(0x5d37, 0x7bc4, 0xbf90, 0x1dfe, 0xee34, 0x6270, 0x1, 0x0);
        gbc.writeMem(0x5d37, { 0x40 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7bc4, gbc.sp());
        EXPECT(0x5d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0174
        gbc.setState(0x502e, 0xfb6, 0x3b80, 0x11d3, 0x5ac2, 0x3ef5, 0x1, 0x0);
        gbc.writeMem(0x502e, { 0x40 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfb6, gbc.sp());
        EXPECT(0x502f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0175
        gbc.setState(0x2b89, 0x4862, 0x8c70, 0xa7e4, 0x14ba, 0x4a50, 0x0, 0x1);
        gbc.writeMem(0x2b89, { 0x40 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4862, gbc.sp());
        EXPECT(0x2b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0176
        gbc.setState(0x34e1, 0xb2c2, 0x2610, 0x1c7b, 0xf3c3, 0x2ae9, 0x1, 0x0);
        gbc.writeMem(0x34e1, { 0x40 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb2c2, gbc.sp());
        EXPECT(0x34e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0177
        gbc.setState(0xa4bc, 0x7232, 0x20f0, 0x505e, 0xb43a, 0xd20, 0x0, 0x0);
        gbc.writeMem(0xa4bc, { 0x40 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0xa4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa4bc));
        // 40 0178
        gbc.setState(0xd18, 0xc237, 0xa8b0, 0x7026, 0x2e87, 0x9673, 0x1, 0x0);
        gbc.writeMem(0xd18, { 0x40 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc237, gbc.sp());
        EXPECT(0xd19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0179
        gbc.setState(0xd59e, 0x5b38, 0xd9c0, 0x51ce, 0xef5, 0x48cd, 0x1, 0x1);
        gbc.writeMem(0xd59e, { 0x40 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5b38, gbc.sp());
        EXPECT(0xd59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd59e));
        // 40 017B
        gbc.setState(0xef9, 0xdcef, 0xdb30, 0x6bcb, 0x1909, 0x7eee, 0x1, 0x1);
        gbc.writeMem(0xef9, { 0x40 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdcef, gbc.sp());
        EXPECT(0xefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 017C
        gbc.setState(0xeec8, 0xf162, 0xab00, 0x1ba3, 0x6c2f, 0x3013, 0x1, 0x1);
        gbc.writeMem(0xeec8, { 0x40 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf162, gbc.sp());
        EXPECT(0xeec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xeec8));
        // 40 017D
        gbc.setState(0x1f6c, 0x944, 0xe4d0, 0xaad1, 0x73fe, 0x42aa, 0x0, 0x1);
        gbc.writeMem(0x1f6c, { 0x40 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x944, gbc.sp());
        EXPECT(0x1f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 017E
        gbc.setState(0x1e71, 0xe29, 0x9db0, 0xe326, 0x8941, 0x58bf, 0x0, 0x1);
        gbc.writeMem(0x1e71, { 0x40 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe29, gbc.sp());
        EXPECT(0x1e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 017F
        gbc.setState(0x3426, 0xe1d1, 0xbc40, 0x7dc3, 0x48a7, 0xcf8a, 0x0, 0x1);
        gbc.writeMem(0x3426, { 0x40 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe1d1, gbc.sp());
        EXPECT(0x3427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0180
        gbc.setState(0x9f1, 0x7ee8, 0xc8a0, 0x9a7e, 0x7047, 0x6683, 0x1, 0x0);
        gbc.writeMem(0x9f1, { 0x40 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7ee8, gbc.sp());
        EXPECT(0x9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0181
        gbc.setState(0xc92e, 0xf835, 0x83d0, 0x4ad5, 0x3606, 0x4d3d, 0x0, 0x0);
        gbc.writeMem(0xc92e, { 0x40 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf835, gbc.sp());
        EXPECT(0xc92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc92e));
        // 40 0182
        gbc.setState(0x4c28, 0xa495, 0x8fb0, 0xeb6f, 0x10bd, 0x3e3c, 0x1, 0x1);
        gbc.writeMem(0x4c28, { 0x40 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa495, gbc.sp());
        EXPECT(0x4c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0183
        gbc.setState(0xb767, 0x1f78, 0x1260, 0xc1e0, 0xd193, 0xb4ca, 0x0, 0x1);
        gbc.writeMem(0xb767, { 0x40 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1f78, gbc.sp());
        EXPECT(0xb768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb767));
        // 40 0184
        gbc.setState(0x4905, 0x8452, 0x7fa0, 0x5e3, 0x8c98, 0xeb40, 0x1, 0x0);
        gbc.writeMem(0x4905, { 0x40 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8452, gbc.sp());
        EXPECT(0x4906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0185
        gbc.setState(0x729e, 0xdecc, 0x5dc0, 0x11b0, 0x4d6c, 0x15c5, 0x1, 0x1);
        gbc.writeMem(0x729e, { 0x40 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdecc, gbc.sp());
        EXPECT(0x729f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0186
        gbc.setState(0x2ae8, 0xc77, 0xd220, 0xf178, 0x134, 0xbd31, 0x1, 0x0);
        gbc.writeMem(0x2ae8, { 0x40 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc77, gbc.sp());
        EXPECT(0x2ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0187
        gbc.setState(0xc203, 0x8af7, 0xbc00, 0x8608, 0x28c5, 0x2b8b, 0x1, 0x1);
        gbc.writeMem(0xc203, { 0x40 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8af7, gbc.sp());
        EXPECT(0xc204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc203));
        // 40 0189
        gbc.setState(0x1210, 0xff1f, 0x2b30, 0x4190, 0xa463, 0x1907, 0x1, 0x1);
        gbc.writeMem(0x1210, { 0x40 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xff1f, gbc.sp());
        EXPECT(0x1211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 018A
        gbc.setState(0xa691, 0x8057, 0x6280, 0xda9f, 0x649e, 0x689e, 0x0, 0x1);
        gbc.writeMem(0xa691, { 0x40 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8057, gbc.sp());
        EXPECT(0xa692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa691));
        // 40 018B
        gbc.setState(0x6d9b, 0xe669, 0x7a60, 0x6a0f, 0x3b4, 0x4849, 0x1, 0x1);
        gbc.writeMem(0x6d9b, { 0x40 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe669, gbc.sp());
        EXPECT(0x6d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 018C
        gbc.setState(0xec0a, 0x8366, 0x6a50, 0x2937, 0xf243, 0x7e2b, 0x0, 0x0);
        gbc.writeMem(0xec0a, { 0x40 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8366, gbc.sp());
        EXPECT(0xec0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xec0a));
        // 40 018D
        gbc.setState(0xd5ba, 0xe2e9, 0x7ee0, 0x8667, 0xb70e, 0x6a2a, 0x1, 0x0);
        gbc.writeMem(0xd5ba, { 0x40 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe2e9, gbc.sp());
        EXPECT(0xd5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd5ba));
        // 40 018E
        gbc.setState(0x8538, 0x866d, 0xf990, 0x6d8, 0x9350, 0x7fda, 0x1, 0x1);
        gbc.writeMem(0x8538, { 0x40 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x866d, gbc.sp());
        EXPECT(0x8539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8538));
        // 40 018F
        gbc.setState(0x4a85, 0xe40c, 0xa40, 0x9a1d, 0x61fd, 0xe652, 0x1, 0x1);
        gbc.writeMem(0x4a85, { 0x40 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe40c, gbc.sp());
        EXPECT(0x4a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0191
        gbc.setState(0xcb8, 0x27f2, 0x3d20, 0xcd8e, 0x8008, 0x163b, 0x0, 0x0);
        gbc.writeMem(0xcb8, { 0x40 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x27f2, gbc.sp());
        EXPECT(0xcb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0193
        gbc.setState(0xaa48, 0x2a6f, 0xe0d0, 0xe6d5, 0xa0d1, 0x3ade, 0x1, 0x1);
        gbc.writeMem(0xaa48, { 0x40 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2a6f, gbc.sp());
        EXPECT(0xaa49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xaa48));
        // 40 0194
        gbc.setState(0x6156, 0xcb60, 0x7140, 0x55ba, 0xfd37, 0x564c, 0x1, 0x0);
        gbc.writeMem(0x6156, { 0x40 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcb60, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0195
        gbc.setState(0x4a91, 0x1868, 0x6630, 0xe528, 0x858f, 0xca90, 0x1, 0x0);
        gbc.writeMem(0x4a91, { 0x40 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1868, gbc.sp());
        EXPECT(0x4a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0197
        gbc.setState(0xccd8, 0xefee, 0x6580, 0x430f, 0x47a3, 0x4919, 0x1, 0x0);
        gbc.writeMem(0xccd8, { 0x40 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xefee, gbc.sp());
        EXPECT(0xccd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xccd8));
        // 40 0198
        gbc.setState(0x13ca, 0x6e85, 0x8f70, 0x208, 0xf143, 0x6e9e, 0x1, 0x0);
        gbc.writeMem(0x13ca, { 0x40 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6e85, gbc.sp());
        EXPECT(0x13cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0199
        gbc.setState(0x2006, 0xc136, 0xa6d0, 0xa369, 0x4392, 0x50b3, 0x0, 0x1);
        gbc.writeMem(0x2006, { 0x40 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc136, gbc.sp());
        EXPECT(0x2007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 019A
        gbc.setState(0xb85e, 0x92af, 0x18c0, 0xc1e5, 0x8b75, 0xb1b3, 0x1, 0x0);
        gbc.writeMem(0xb85e, { 0x40 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x92af, gbc.sp());
        EXPECT(0xb85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb85e));
        // 40 019B
        gbc.setState(0xb813, 0x2bd3, 0x8f60, 0x1bf1, 0x6b9f, 0xf30d, 0x0, 0x1);
        gbc.writeMem(0xb813, { 0x40 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2bd3, gbc.sp());
        EXPECT(0xb814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb813));
        // 40 019C
        gbc.setState(0xa036, 0x9c05, 0x7250, 0x2e96, 0xc20d, 0x93b9, 0x1, 0x1);
        gbc.writeMem(0xa036, { 0x40 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9c05, gbc.sp());
        EXPECT(0xa037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa036));
        // 40 019D
        gbc.setState(0x8454, 0xf510, 0xcb90, 0xe42, 0xe330, 0x2032, 0x0, 0x0);
        gbc.writeMem(0x8454, { 0x40 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf510, gbc.sp());
        EXPECT(0x8455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8454));
        // 40 019E
        gbc.setState(0x162e, 0x22ad, 0x9e90, 0x3731, 0x5e3b, 0x71c4, 0x0, 0x1);
        gbc.writeMem(0x162e, { 0x40 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x22ad, gbc.sp());
        EXPECT(0x162f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 019F
        gbc.setState(0x73b0, 0x5c0b, 0xa260, 0x419, 0xd1, 0x7d8c, 0x0, 0x0);
        gbc.writeMem(0x73b0, { 0x40 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5c0b, gbc.sp());
        EXPECT(0x73b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01A0
        gbc.setState(0x399c, 0x8d50, 0x80, 0x61d8, 0x1084, 0xe978, 0x0, 0x1);
        gbc.writeMem(0x399c, { 0x40 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8d50, gbc.sp());
        EXPECT(0x399d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01A1
        gbc.setState(0x4e4a, 0x6c1a, 0x85d0, 0x1db2, 0x63b5, 0x6e42, 0x0, 0x1);
        gbc.writeMem(0x4e4a, { 0x40 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6c1a, gbc.sp());
        EXPECT(0x4e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01A2
        gbc.setState(0x42c6, 0x5dea, 0x7e80, 0x3250, 0xa2e0, 0x6cac, 0x0, 0x0);
        gbc.writeMem(0x42c6, { 0x40 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5dea, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01A3
        gbc.setState(0xeeb, 0x14ad, 0x260, 0x4c83, 0xba70, 0x234e, 0x0, 0x1);
        gbc.writeMem(0xeeb, { 0x40 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x14ad, gbc.sp());
        EXPECT(0xeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01A4
        gbc.setState(0x3f18, 0xa89d, 0xbc60, 0x3377, 0x1c3e, 0x1758, 0x1, 0x0);
        gbc.writeMem(0x3f18, { 0x40 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa89d, gbc.sp());
        EXPECT(0x3f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01A5
        gbc.setState(0xe13f, 0x33f6, 0xe3a0, 0xa26e, 0x807a, 0xe2b4, 0x1, 0x1);
        gbc.writeMem(0xe13f, { 0x40 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x33f6, gbc.sp());
        EXPECT(0xe140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe13f));
        // 40 01A6
        gbc.setState(0x7962, 0x5fb2, 0x2b90, 0x9286, 0x7412, 0xfadd, 0x1, 0x1);
        gbc.writeMem(0x7962, { 0x40 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5fb2, gbc.sp());
        EXPECT(0x7963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01A7
        gbc.setState(0x814f, 0x3d09, 0xe8f0, 0xfeed, 0x3f47, 0x5d0f, 0x0, 0x0);
        gbc.writeMem(0x814f, { 0x40 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3d09, gbc.sp());
        EXPECT(0x8150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x814f));
        // 40 01A8
        gbc.setState(0x2dd1, 0x3ca7, 0x69a0, 0xddcd, 0xa6f8, 0x9447, 0x0, 0x1);
        gbc.writeMem(0x2dd1, { 0x40 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3ca7, gbc.sp());
        EXPECT(0x2dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01A9
        gbc.setState(0x967, 0xafba, 0xdd40, 0x5481, 0x9b42, 0x1bc2, 0x0, 0x1);
        gbc.writeMem(0x967, { 0x40 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xafba, gbc.sp());
        EXPECT(0x968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01AA
        gbc.setState(0xb276, 0xda1, 0x9360, 0x1fc0, 0x6b53, 0xbd8, 0x1, 0x1);
        gbc.writeMem(0xb276, { 0x40 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xda1, gbc.sp());
        EXPECT(0xb277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb276));
        // 40 01AB
        gbc.setState(0x688f, 0x8027, 0x6430, 0x3b6e, 0xc928, 0xc3ec, 0x0, 0x1);
        gbc.writeMem(0x688f, { 0x40 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8027, gbc.sp());
        EXPECT(0x6890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01AC
        gbc.setState(0xa53e, 0x551d, 0x7e80, 0x983e, 0xd7dc, 0x3f8c, 0x1, 0x0);
        gbc.writeMem(0xa53e, { 0x40 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x551d, gbc.sp());
        EXPECT(0xa53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa53e));
        // 40 01AD
        gbc.setState(0x1717, 0x79c3, 0x2540, 0x47de, 0x592c, 0x5578, 0x1, 0x1);
        gbc.writeMem(0x1717, { 0x40 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x79c3, gbc.sp());
        EXPECT(0x1718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01AE
        gbc.setState(0x3f4, 0x552b, 0x7600, 0x462, 0x7a0e, 0x4e84, 0x0, 0x1);
        gbc.writeMem(0x3f4, { 0x40 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x552b, gbc.sp());
        EXPECT(0x3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01AF
        gbc.setState(0xcc19, 0x1ebe, 0x27c0, 0xdb82, 0xc6f6, 0x28dc, 0x1, 0x0);
        gbc.writeMem(0xcc19, { 0x40 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1ebe, gbc.sp());
        EXPECT(0xcc1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcc19));
        // 40 01B0
        gbc.setState(0xbbbd, 0xe363, 0x9da0, 0xb774, 0x5464, 0x110c, 0x0, 0x0);
        gbc.writeMem(0xbbbd, { 0x40 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe363, gbc.sp());
        EXPECT(0xbbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbbbd));
        // 40 01B1
        gbc.setState(0xa9e5, 0x1bcf, 0xf770, 0xc3df, 0x80ea, 0x965b, 0x0, 0x1);
        gbc.writeMem(0xa9e5, { 0x40 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1bcf, gbc.sp());
        EXPECT(0xa9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa9e5));
        // 40 01B3
        gbc.setState(0x5266, 0xf575, 0xa0b0, 0x76fe, 0x8bab, 0x5eba, 0x1, 0x0);
        gbc.writeMem(0x5266, { 0x40 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf575, gbc.sp());
        EXPECT(0x5267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01B4
        gbc.setState(0xe2fa, 0x2a7c, 0xe080, 0xfef0, 0x101b, 0xca68, 0x0, 0x1);
        gbc.writeMem(0xe2fa, { 0x40 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2a7c, gbc.sp());
        EXPECT(0xe2fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe2fa));
        // 40 01B5
        gbc.setState(0x6c28, 0xe59a, 0x58e0, 0xcdab, 0x7693, 0x4596, 0x0, 0x1);
        gbc.writeMem(0x6c28, { 0x40 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe59a, gbc.sp());
        EXPECT(0x6c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01B6
        gbc.setState(0xa7e8, 0x85b, 0x23e0, 0xa8fc, 0xd31e, 0xcf33, 0x0, 0x0);
        gbc.writeMem(0xa7e8, { 0x40 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x85b, gbc.sp());
        EXPECT(0xa7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa7e8));
        // 40 01B7
        gbc.setState(0x3650, 0x496b, 0x7650, 0x4c66, 0x40d3, 0x63c4, 0x0, 0x0);
        gbc.writeMem(0x3650, { 0x40 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x496b, gbc.sp());
        EXPECT(0x3651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01B9
        gbc.setState(0xe877, 0x6be6, 0x1ba0, 0xc9c2, 0x68b8, 0x9bfc, 0x0, 0x1);
        gbc.writeMem(0xe877, { 0x40 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6be6, gbc.sp());
        EXPECT(0xe878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe877));
        // 40 01BA
        gbc.setState(0x4223, 0xb47d, 0x2620, 0xbfa3, 0x76d2, 0xb070, 0x0, 0x1);
        gbc.writeMem(0x4223, { 0x40 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb47d, gbc.sp());
        EXPECT(0x4224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01BB
        gbc.setState(0x8ab7, 0xfada, 0x53c0, 0xa163, 0x15b5, 0x2185, 0x0, 0x0);
        gbc.writeMem(0x8ab7, { 0x40 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfada, gbc.sp());
        EXPECT(0x8ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8ab7));
        // 40 01BC
        gbc.setState(0xa5b8, 0xd6f7, 0xb040, 0x3b2a, 0xb31d, 0x6c04, 0x1, 0x1);
        gbc.writeMem(0xa5b8, { 0x40 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd6f7, gbc.sp());
        EXPECT(0xa5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa5b8));
        // 40 01BD
        gbc.setState(0xe8e0, 0xfc67, 0x82e0, 0xf961, 0xeb1e, 0x7c51, 0x1, 0x0);
        gbc.writeMem(0xe8e0, { 0x40 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfc67, gbc.sp());
        EXPECT(0xe8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe8e0));
        // 40 01BE
        gbc.setState(0x3cf0, 0x8c54, 0x310, 0x4be8, 0xa58b, 0x35ca, 0x1, 0x1);
        gbc.writeMem(0x3cf0, { 0x40 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8c54, gbc.sp());
        EXPECT(0x3cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01BF
        gbc.setState(0x4e5d, 0xad39, 0x8100, 0x3788, 0x6fdf, 0xb723, 0x0, 0x1);
        gbc.writeMem(0x4e5d, { 0x40 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xad39, gbc.sp());
        EXPECT(0x4e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01C0
        gbc.setState(0x52e2, 0x64b5, 0xe390, 0xad8b, 0x4995, 0x9c35, 0x0, 0x1);
        gbc.writeMem(0x52e2, { 0x40 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x64b5, gbc.sp());
        EXPECT(0x52e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01C1
        gbc.setState(0xa1d2, 0x8c27, 0xa840, 0xc5ae, 0xd58f, 0x48e1, 0x1, 0x0);
        gbc.writeMem(0xa1d2, { 0x40 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8c27, gbc.sp());
        EXPECT(0xa1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa1d2));
        // 40 01C2
        gbc.setState(0x35c1, 0xe7ec, 0xfd00, 0x86cc, 0xb50f, 0x7fcb, 0x1, 0x0);
        gbc.writeMem(0x35c1, { 0x40 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe7ec, gbc.sp());
        EXPECT(0x35c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01C3
        gbc.setState(0x6dda, 0xecc8, 0x7c20, 0xda2c, 0x87be, 0x7a17, 0x0, 0x1);
        gbc.writeMem(0x6dda, { 0x40 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xecc8, gbc.sp());
        EXPECT(0x6ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01C4
        gbc.setState(0xb5b5, 0xb53d, 0x1d40, 0x1cfa, 0xc0f4, 0x4fec, 0x1, 0x1);
        gbc.writeMem(0xb5b5, { 0x40 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb53d, gbc.sp());
        EXPECT(0xb5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb5b5));
        // 40 01C5
        gbc.setState(0x808b, 0x954f, 0xafa0, 0x343d, 0x3066, 0xf02b, 0x1, 0x0);
        gbc.writeMem(0x808b, { 0x40 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x954f, gbc.sp());
        EXPECT(0x808c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x808b));
        // 40 01C6
        gbc.setState(0x64ae, 0xe7c8, 0x6b70, 0x55c, 0xaab5, 0xfff1, 0x1, 0x1);
        gbc.writeMem(0x64ae, { 0x40 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe7c8, gbc.sp());
        EXPECT(0x64af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01C7
        gbc.setState(0xc476, 0xcbb8, 0xc190, 0x1079, 0x4eeb, 0xfccf, 0x1, 0x1);
        gbc.writeMem(0xc476, { 0x40 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcbb8, gbc.sp());
        EXPECT(0xc477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc476));
        // 40 01C8
        gbc.setState(0x1fe4, 0x41be, 0x5730, 0xe691, 0xdfc3, 0x186f, 0x0, 0x0);
        gbc.writeMem(0x1fe4, { 0x40 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x41be, gbc.sp());
        EXPECT(0x1fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01CA
        gbc.setState(0xa663, 0x3a06, 0xb080, 0xc65d, 0x11b1, 0x8101, 0x0, 0x0);
        gbc.writeMem(0xa663, { 0x40 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3a06, gbc.sp());
        EXPECT(0xa664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa663));
        // 40 01CB
        gbc.setState(0xc28c, 0xc94a, 0x7190, 0xf140, 0x6d10, 0x135c, 0x0, 0x0);
        gbc.writeMem(0xc28c, { 0x40 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc94a, gbc.sp());
        EXPECT(0xc28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc28c));
        // 40 01CC
        gbc.setState(0xa201, 0xff06, 0xd0d0, 0x66a6, 0x806, 0x1b80, 0x0, 0x0);
        gbc.writeMem(0xa201, { 0x40 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xff06, gbc.sp());
        EXPECT(0xa202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa201));
        // 40 01CD
        gbc.setState(0x1af7, 0x8d8f, 0x1300, 0xc012, 0xa2b9, 0xa875, 0x1, 0x0);
        gbc.writeMem(0x1af7, { 0x40 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8d8f, gbc.sp());
        EXPECT(0x1af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01CE
        gbc.setState(0x671d, 0xf3e1, 0x3510, 0xd5cb, 0x75dc, 0x7b5c, 0x1, 0x0);
        gbc.writeMem(0x671d, { 0x40 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf3e1, gbc.sp());
        EXPECT(0x671e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01CF
        gbc.setState(0x2ce2, 0x8757, 0x2170, 0x8059, 0x504b, 0x9eec, 0x1, 0x1);
        gbc.writeMem(0x2ce2, { 0x40 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8757, gbc.sp());
        EXPECT(0x2ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01D0
        gbc.setState(0x4a35, 0x364, 0x88b0, 0x7ee3, 0x1599, 0x3ab4, 0x1, 0x0);
        gbc.writeMem(0x4a35, { 0x40 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x364, gbc.sp());
        EXPECT(0x4a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01D1
        gbc.setState(0xd94b, 0xb032, 0x15d0, 0x70cf, 0x202b, 0xa9fb, 0x1, 0x0);
        gbc.writeMem(0xd94b, { 0x40 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb032, gbc.sp());
        EXPECT(0xd94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd94b));
        // 40 01D2
        gbc.setState(0x1ec, 0x606c, 0x8e30, 0x81e9, 0xe251, 0x3f8c, 0x1, 0x1);
        gbc.writeMem(0x1ec, { 0x40 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x606c, gbc.sp());
        EXPECT(0x1ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01D3
        gbc.setState(0x7860, 0xe9df, 0xd750, 0x3993, 0x18ba, 0xe385, 0x1, 0x0);
        gbc.writeMem(0x7860, { 0x40 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe9df, gbc.sp());
        EXPECT(0x7861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01D4
        gbc.setState(0x4ae5, 0x33cf, 0xcb50, 0x5b08, 0xeccd, 0x6d92, 0x1, 0x0);
        gbc.writeMem(0x4ae5, { 0x40 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x33cf, gbc.sp());
        EXPECT(0x4ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01D5
        gbc.setState(0x207, 0x61f3, 0xa6a0, 0xb0c8, 0x60f8, 0x96ee, 0x0, 0x1);
        gbc.writeMem(0x207, { 0x40 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x61f3, gbc.sp());
        EXPECT(0x208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01D6
        gbc.setState(0xa880, 0xe78d, 0xf7d0, 0xc894, 0xf4bd, 0xed24, 0x0, 0x1);
        gbc.writeMem(0xa880, { 0x40 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe78d, gbc.sp());
        EXPECT(0xa881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa880));
        // 40 01D7
        gbc.setState(0xb49, 0x398, 0x2b20, 0xabd0, 0xaf9b, 0x11ae, 0x0, 0x0);
        gbc.writeMem(0xb49, { 0x40 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x398, gbc.sp());
        EXPECT(0xb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01D8
        gbc.setState(0x7b2e, 0x968f, 0x3390, 0x7be2, 0xe90, 0x165, 0x1, 0x0);
        gbc.writeMem(0x7b2e, { 0x40 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x968f, gbc.sp());
        EXPECT(0x7b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01D9
        gbc.setState(0x7acc, 0x3fe, 0xb60, 0xeac3, 0xfe38, 0x6b69, 0x0, 0x0);
        gbc.writeMem(0x7acc, { 0x40 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3fe, gbc.sp());
        EXPECT(0x7acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01DA
        gbc.setState(0x1541, 0xfe4b, 0x460, 0xa8d8, 0x598f, 0xa4c7, 0x1, 0x0);
        gbc.writeMem(0x1541, { 0x40 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfe4b, gbc.sp());
        EXPECT(0x1542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01DB
        gbc.setState(0x6b36, 0xa2b, 0x4d30, 0x5ae9, 0xe462, 0x1132, 0x0, 0x1);
        gbc.writeMem(0x6b36, { 0x40 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa2b, gbc.sp());
        EXPECT(0x6b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01DC
        gbc.setState(0x3850, 0xeeb3, 0x7500, 0xbd8e, 0xe49, 0x2282, 0x0, 0x1);
        gbc.writeMem(0x3850, { 0x40 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xeeb3, gbc.sp());
        EXPECT(0x3851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01DD
        gbc.setState(0x9436, 0xc053, 0xe630, 0x7af, 0x2440, 0x3640, 0x0, 0x1);
        gbc.writeMem(0x9436, { 0x40 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc053, gbc.sp());
        EXPECT(0x9437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9436));
        // 40 01DE
        gbc.setState(0x7214, 0xbcd4, 0x5f40, 0x8cb, 0xfbe2, 0x7467, 0x1, 0x1);
        gbc.writeMem(0x7214, { 0x40 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbcd4, gbc.sp());
        EXPECT(0x7215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01DF
        gbc.setState(0xa4f7, 0x5131, 0xe0, 0x80d4, 0x12c4, 0xfa80, 0x1, 0x1);
        gbc.writeMem(0xa4f7, { 0x40 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5131, gbc.sp());
        EXPECT(0xa4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa4f7));
        // 40 01E0
        gbc.setState(0xd08a, 0x48e6, 0x9350, 0xfb97, 0xef41, 0xc6ad, 0x1, 0x0);
        gbc.writeMem(0xd08a, { 0x40 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x48e6, gbc.sp());
        EXPECT(0xd08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd08a));
        // 40 01E1
        gbc.setState(0x99ab, 0x7699, 0x8d00, 0x90f0, 0x8511, 0xed9f, 0x1, 0x0);
        gbc.writeMem(0x99ab, { 0x40 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7699, gbc.sp());
        EXPECT(0x99ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x99ab));
        // 40 01E2
        gbc.setState(0x795f, 0xa003, 0x17c0, 0x83ca, 0xb8d5, 0xa68a, 0x0, 0x0);
        gbc.writeMem(0x795f, { 0x40 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa003, gbc.sp());
        EXPECT(0x7960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01E3
        gbc.setState(0xdc16, 0x646b, 0x410, 0x28f3, 0xb3ff, 0x5c69, 0x0, 0x0);
        gbc.writeMem(0xdc16, { 0x40 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x646b, gbc.sp());
        EXPECT(0xdc17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdc16));
        // 40 01E4
        gbc.setState(0x8a48, 0xf331, 0x1320, 0x9c2, 0x44b3, 0x3981, 0x1, 0x1);
        gbc.writeMem(0x8a48, { 0x40 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf331, gbc.sp());
        EXPECT(0x8a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8a48));
        // 40 01E5
        gbc.setState(0xdc56, 0xd4c6, 0x3140, 0x9583, 0x74f3, 0x7f2f, 0x1, 0x0);
        gbc.writeMem(0xdc56, { 0x40 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd4c6, gbc.sp());
        EXPECT(0xdc57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdc56));
        // 40 01E6
        gbc.setState(0x5e56, 0xf09, 0x1880, 0xda2a, 0xe2fa, 0x9cd8, 0x1, 0x1);
        gbc.writeMem(0x5e56, { 0x40 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf09, gbc.sp());
        EXPECT(0x5e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01E7
        gbc.setState(0x8eb5, 0x122, 0x35e0, 0xd96b, 0x607f, 0xf579, 0x1, 0x0);
        gbc.writeMem(0x8eb5, { 0x40 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x122, gbc.sp());
        EXPECT(0x8eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8eb5));
        // 40 01E8
        gbc.setState(0x407c, 0x329, 0x1930, 0x4576, 0x640d, 0x24c0, 0x0, 0x1);
        gbc.writeMem(0x407c, { 0x40 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x329, gbc.sp());
        EXPECT(0x407d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01EA
        gbc.setState(0xd39d, 0xb871, 0xf780, 0x2936, 0xc9f2, 0x7232, 0x1, 0x1);
        gbc.writeMem(0xd39d, { 0x40 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb871, gbc.sp());
        EXPECT(0xd39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd39d));
        // 40 01EB
        gbc.setState(0xa34a, 0xb994, 0x7cf0, 0x7320, 0x5aa1, 0xba0, 0x1, 0x0);
        gbc.writeMem(0xa34a, { 0x40 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb994, gbc.sp());
        EXPECT(0xa34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa34a));
        // 40 01EC
        gbc.setState(0xa3e4, 0xc36c, 0x6220, 0xb985, 0x8685, 0x3f9b, 0x0, 0x1);
        gbc.writeMem(0xa3e4, { 0x40 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc36c, gbc.sp());
        EXPECT(0xa3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa3e4));
        // 40 01ED
        gbc.setState(0xd43d, 0x2af9, 0x8410, 0xc5c7, 0x4d41, 0x3ead, 0x1, 0x0);
        gbc.writeMem(0xd43d, { 0x40 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2af9, gbc.sp());
        EXPECT(0xd43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd43d));
        // 40 01EE
        gbc.setState(0x5193, 0x62f9, 0xd960, 0x9350, 0x8098, 0xa650, 0x0, 0x0);
        gbc.writeMem(0x5193, { 0x40 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x62f9, gbc.sp());
        EXPECT(0x5194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01EF
        gbc.setState(0x1d4f, 0x78be, 0xe730, 0xbea, 0x533, 0x7b00, 0x0, 0x1);
        gbc.writeMem(0x1d4f, { 0x40 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x78be, gbc.sp());
        EXPECT(0x1d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01F1
        gbc.setState(0x477b, 0xa1ee, 0x9580, 0x3434, 0x459b, 0x1642, 0x0, 0x0);
        gbc.writeMem(0x477b, { 0x40 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa1ee, gbc.sp());
        EXPECT(0x477c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01F2
        gbc.setState(0xc90e, 0x1e96, 0xda20, 0x71d, 0x5693, 0x7434, 0x1, 0x0);
        gbc.writeMem(0xc90e, { 0x40 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1e96, gbc.sp());
        EXPECT(0xc90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc90e));
        // 40 01F3
        gbc.setState(0x67c, 0x9622, 0xf50, 0x3313, 0x4ad7, 0x7e3f, 0x0, 0x0);
        gbc.writeMem(0x67c, { 0x40 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9622, gbc.sp());
        EXPECT(0x67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01F4
        gbc.setState(0xd8cc, 0xb8b5, 0x4e0, 0x8690, 0x4baf, 0x9137, 0x0, 0x1);
        gbc.writeMem(0xd8cc, { 0x40 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb8b5, gbc.sp());
        EXPECT(0xd8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd8cc));
        // 40 01F5
        gbc.setState(0xa81c, 0x7763, 0xa740, 0xa0f6, 0xdcb8, 0x11b2, 0x0, 0x0);
        gbc.writeMem(0xa81c, { 0x40 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7763, gbc.sp());
        EXPECT(0xa81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa81c));
        // 40 01F6
        gbc.setState(0x704c, 0x3761, 0x22e0, 0xbe5f, 0xd5d0, 0x33c2, 0x1, 0x0);
        gbc.writeMem(0x704c, { 0x40 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3761, gbc.sp());
        EXPECT(0x704d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01F7
        gbc.setState(0xa5bf, 0x1837, 0xc6e0, 0xe772, 0x4275, 0x161a, 0x1, 0x1);
        gbc.writeMem(0xa5bf, { 0x40 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1837, gbc.sp());
        EXPECT(0xa5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa5bf));
        // 40 01F8
        gbc.setState(0x62fb, 0x922c, 0xb3f0, 0x9f93, 0x42e3, 0x1c08, 0x0, 0x0);
        gbc.writeMem(0x62fb, { 0x40 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x922c, gbc.sp());
        EXPECT(0x62fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01F9
        gbc.setState(0xab1d, 0xe564, 0x42f0, 0xbd0f, 0xbf3f, 0x4fc9, 0x1, 0x1);
        gbc.writeMem(0xab1d, { 0x40 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe564, gbc.sp());
        EXPECT(0xab1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xab1d));
        // 40 01FA
        gbc.setState(0xea64, 0x6b60, 0x1070, 0x5b16, 0x9748, 0xd542, 0x0, 0x1);
        gbc.writeMem(0xea64, { 0x40 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6b60, gbc.sp());
        EXPECT(0xea65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xea64));
        // 40 01FB
        gbc.setState(0xdb69, 0xa40, 0x49d0, 0x5620, 0xbf9b, 0x2f4a, 0x1, 0x0);
        gbc.writeMem(0xdb69, { 0x40 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa40, gbc.sp());
        EXPECT(0xdb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdb69));
        // 40 01FC
        gbc.setState(0x4bae, 0x3191, 0x7b30, 0x6c8, 0x462d, 0x6c2f, 0x1, 0x1);
        gbc.writeMem(0x4bae, { 0x40 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3191, gbc.sp());
        EXPECT(0x4baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01FD
        gbc.setState(0x1fce, 0x1751, 0x72a0, 0x7b92, 0xb76a, 0xf763, 0x0, 0x0);
        gbc.writeMem(0x1fce, { 0x40 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1751, gbc.sp());
        EXPECT(0x1fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 01FE
        gbc.setState(0x5a0a, 0x200f, 0x33d0, 0xf163, 0xc28f, 0xd01d, 0x0, 0x0);
        gbc.writeMem(0x5a0a, { 0x40 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x200f, gbc.sp());
        EXPECT(0x5a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 01FF
        gbc.setState(0x5b7a, 0x4d15, 0xffe0, 0x3250, 0xf0c8, 0x50e7, 0x0, 0x1);
        gbc.writeMem(0x5b7a, { 0x40 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4d15, gbc.sp());
        EXPECT(0x5b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0200
        gbc.setState(0xdbc1, 0x144f, 0xde50, 0x3a7d, 0x2cbe, 0xf4f6, 0x0, 0x1);
        gbc.writeMem(0xdbc1, { 0x40 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x144f, gbc.sp());
        EXPECT(0xdbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdbc1));
        // 40 0201
        gbc.setState(0x691b, 0x7a56, 0xbeb0, 0xd596, 0x5b28, 0x78f5, 0x1, 0x1);
        gbc.writeMem(0x691b, { 0x40 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7a56, gbc.sp());
        EXPECT(0x691c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0202
        gbc.setState(0x67d9, 0xfe56, 0x87b0, 0x7a68, 0x7559, 0x1524, 0x1, 0x1);
        gbc.writeMem(0x67d9, { 0x40 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfe56, gbc.sp());
        EXPECT(0x67da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0203
        gbc.setState(0xafa3, 0x498a, 0x3890, 0x9678, 0x3b0e, 0xeb0f, 0x1, 0x0);
        gbc.writeMem(0xafa3, { 0x40 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0xafa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xafa3));
        // 40 0204
        gbc.setState(0xd56a, 0xeccc, 0xf440, 0x6e55, 0x9d8c, 0xbef0, 0x0, 0x1);
        gbc.writeMem(0xd56a, { 0x40 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xeccc, gbc.sp());
        EXPECT(0xd56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd56a));
        // 40 0205
        gbc.setState(0xe0ab, 0x340a, 0x68c0, 0x8b0b, 0x9115, 0x7c45, 0x1, 0x1);
        gbc.writeMem(0xe0ab, { 0x40 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x340a, gbc.sp());
        EXPECT(0xe0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe0ab));
        // 40 0206
        gbc.setState(0x8b23, 0x1314, 0x1ab0, 0xe1f, 0x2803, 0x170a, 0x1, 0x1);
        gbc.writeMem(0x8b23, { 0x40 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1314, gbc.sp());
        EXPECT(0x8b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8b23));
        // 40 0207
        gbc.setState(0xe527, 0xef7d, 0x88e0, 0x3a1a, 0xe896, 0xf9c7, 0x1, 0x1);
        gbc.writeMem(0xe527, { 0x40 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xef7d, gbc.sp());
        EXPECT(0xe528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe527));
        // 40 0208
        gbc.setState(0x272d, 0xfe00, 0xad20, 0xb313, 0xea90, 0x957e, 0x0, 0x0);
        gbc.writeMem(0x272d, { 0x40 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfe00, gbc.sp());
        EXPECT(0x272e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0209
        gbc.setState(0x2e9, 0xf99a, 0xa880, 0x98fa, 0x62dd, 0xa982, 0x0, 0x1);
        gbc.writeMem(0x2e9, { 0x40 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf99a, gbc.sp());
        EXPECT(0x2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 020A
        gbc.setState(0x1cec, 0x389e, 0x7510, 0xc8e7, 0xd07a, 0x7301, 0x1, 0x0);
        gbc.writeMem(0x1cec, { 0x40 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x389e, gbc.sp());
        EXPECT(0x1ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 020B
        gbc.setState(0x7b3d, 0x9b61, 0xa500, 0xe74, 0x6ce0, 0x7371, 0x0, 0x1);
        gbc.writeMem(0x7b3d, { 0x40 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9b61, gbc.sp());
        EXPECT(0x7b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 020C
        gbc.setState(0xae87, 0x2104, 0x79b0, 0x5d3c, 0xe264, 0xa587, 0x1, 0x1);
        gbc.writeMem(0xae87, { 0x40 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2104, gbc.sp());
        EXPECT(0xae88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xae87));
        // 40 020D
        gbc.setState(0x2837, 0x288f, 0x4150, 0xb9f3, 0x1d1d, 0x94fd, 0x0, 0x0);
        gbc.writeMem(0x2837, { 0x40 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x288f, gbc.sp());
        EXPECT(0x2838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 020F
        gbc.setState(0x7397, 0x4d86, 0x6a50, 0x281a, 0xc08d, 0xece, 0x0, 0x0);
        gbc.writeMem(0x7397, { 0x40 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4d86, gbc.sp());
        EXPECT(0x7398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0210
        gbc.setState(0x2cd, 0xfbc7, 0xa9d0, 0xf4fe, 0x861c, 0x2667, 0x0, 0x0);
        gbc.writeMem(0x2cd, { 0x40 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfbc7, gbc.sp());
        EXPECT(0x2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0211
        gbc.setState(0xa06d, 0x232e, 0xbf50, 0xe475, 0x6c9, 0xa8a2, 0x1, 0x1);
        gbc.writeMem(0xa06d, { 0x40 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x232e, gbc.sp());
        EXPECT(0xa06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa06d));
        // 40 0213
        gbc.setState(0x5d43, 0x6db4, 0x28e0, 0xef2c, 0xaa82, 0x4d71, 0x0, 0x0);
        gbc.writeMem(0x5d43, { 0x40 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6db4, gbc.sp());
        EXPECT(0x5d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0214
        gbc.setState(0x7cf6, 0x97d7, 0x9500, 0x7400, 0x46d7, 0x226b, 0x1, 0x0);
        gbc.writeMem(0x7cf6, { 0x40 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x97d7, gbc.sp());
        EXPECT(0x7cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0215
        gbc.setState(0xc40c, 0x13cb, 0x9980, 0x5fab, 0xc1ca, 0x30e6, 0x0, 0x0);
        gbc.writeMem(0xc40c, { 0x40 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x13cb, gbc.sp());
        EXPECT(0xc40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc40c));
        // 40 0216
        gbc.setState(0x34ee, 0x50c3, 0xba50, 0xe131, 0x1e6a, 0x86a1, 0x1, 0x1);
        gbc.writeMem(0x34ee, { 0x40 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x50c3, gbc.sp());
        EXPECT(0x34ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0217
        gbc.setState(0x9184, 0xc865, 0x9e10, 0x95cd, 0xebfe, 0xc1c8, 0x1, 0x0);
        gbc.writeMem(0x9184, { 0x40 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc865, gbc.sp());
        EXPECT(0x9185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9184));
        // 40 0218
        gbc.setState(0xaf22, 0xcafe, 0xc670, 0xcbd5, 0xc0d8, 0xa653, 0x0, 0x0);
        gbc.writeMem(0xaf22, { 0x40 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcafe, gbc.sp());
        EXPECT(0xaf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xaf22));
        // 40 0219
        gbc.setState(0x10a4, 0xacdf, 0x5690, 0x5bd3, 0xbed4, 0x3d60, 0x0, 0x0);
        gbc.writeMem(0x10a4, { 0x40 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xacdf, gbc.sp());
        EXPECT(0x10a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 021A
        gbc.setState(0xd06e, 0x34b0, 0x9d10, 0x231a, 0x7a44, 0x5e43, 0x0, 0x0);
        gbc.writeMem(0xd06e, { 0x40 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x34b0, gbc.sp());
        EXPECT(0xd06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd06e));
        // 40 021B
        gbc.setState(0xd0f9, 0x7699, 0x9270, 0x6a88, 0xbaae, 0xa5f0, 0x0, 0x0);
        gbc.writeMem(0xd0f9, { 0x40 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7699, gbc.sp());
        EXPECT(0xd0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd0f9));
        // 40 021C
        gbc.setState(0x6f22, 0x11f, 0x6b00, 0xb9fe, 0x94a7, 0x79d4, 0x1, 0x0);
        gbc.writeMem(0x6f22, { 0x40 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x11f, gbc.sp());
        EXPECT(0x6f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 021D
        gbc.setState(0xec7b, 0x3ac8, 0x4170, 0x2647, 0x854a, 0xc170, 0x1, 0x0);
        gbc.writeMem(0xec7b, { 0x40 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3ac8, gbc.sp());
        EXPECT(0xec7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xec7b));
        // 40 021E
        gbc.setState(0x33a6, 0x7155, 0x8c70, 0x222b, 0x348d, 0xef08, 0x0, 0x1);
        gbc.writeMem(0x33a6, { 0x40 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7155, gbc.sp());
        EXPECT(0x33a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 021F
        gbc.setState(0x1dd, 0x966e, 0x70c0, 0x4c9c, 0x6d0d, 0x7763, 0x0, 0x1);
        gbc.writeMem(0x1dd, { 0x40 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x966e, gbc.sp());
        EXPECT(0x1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0220
        gbc.setState(0xa0c4, 0x5f1c, 0x2780, 0x8dd0, 0x881, 0x717b, 0x0, 0x1);
        gbc.writeMem(0xa0c4, { 0x40 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5f1c, gbc.sp());
        EXPECT(0xa0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa0c4));
        // 40 0221
        gbc.setState(0xd787, 0xc24c, 0x4f0, 0x2466, 0xfd2, 0x1186, 0x1, 0x0);
        gbc.writeMem(0xd787, { 0x40 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc24c, gbc.sp());
        EXPECT(0xd788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd787));
        // 40 0222
        gbc.setState(0x671e, 0x47d2, 0x1700, 0x9fc5, 0x216f, 0xb330, 0x1, 0x1);
        gbc.writeMem(0x671e, { 0x40 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x47d2, gbc.sp());
        EXPECT(0x671f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0223
        gbc.setState(0x26fa, 0x9fee, 0xd8a0, 0xda25, 0x8423, 0x688e, 0x0, 0x1);
        gbc.writeMem(0x26fa, { 0x40 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9fee, gbc.sp());
        EXPECT(0x26fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0224
        gbc.setState(0xef20, 0xfbbb, 0xf930, 0x5263, 0x9263, 0x662, 0x1, 0x0);
        gbc.writeMem(0xef20, { 0x40 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfbbb, gbc.sp());
        EXPECT(0xef21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xef20));
        // 40 0225
        gbc.setState(0x346d, 0x4a9a, 0x6bb0, 0xd3be, 0xdc99, 0xb5c1, 0x1, 0x0);
        gbc.writeMem(0x346d, { 0x40 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4a9a, gbc.sp());
        EXPECT(0x346e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0226
        gbc.setState(0xd162, 0x3407, 0x860, 0x85ee, 0x85db, 0x3e80, 0x0, 0x0);
        gbc.writeMem(0xd162, { 0x40 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3407, gbc.sp());
        EXPECT(0xd163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd162));
        // 40 0227
        gbc.setState(0xbbfe, 0x5963, 0x5f30, 0x72e8, 0x13d6, 0xa0c0, 0x0, 0x0);
        gbc.writeMem(0xbbfe, { 0x40 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5963, gbc.sp());
        EXPECT(0xbbff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbbfe));
        // 40 0228
        gbc.setState(0x9908, 0x1f11, 0xea60, 0x3ffc, 0x8e12, 0x35af, 0x1, 0x1);
        gbc.writeMem(0x9908, { 0x40 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1f11, gbc.sp());
        EXPECT(0x9909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9908));
        // 40 0229
        gbc.setState(0x42bf, 0x645c, 0x22a0, 0x612d, 0x8436, 0xba8c, 0x1, 0x1);
        gbc.writeMem(0x42bf, { 0x40 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x645c, gbc.sp());
        EXPECT(0x42c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 022B
        gbc.setState(0xbd1d, 0x68ba, 0x9dd0, 0xad8d, 0x7c82, 0x5201, 0x1, 0x1);
        gbc.writeMem(0xbd1d, { 0x40 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x68ba, gbc.sp());
        EXPECT(0xbd1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbd1d));
        // 40 022C
        gbc.setState(0xcf96, 0x3b97, 0xbbe0, 0x37ad, 0x7d0, 0x20be, 0x0, 0x0);
        gbc.writeMem(0xcf96, { 0x40 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3b97, gbc.sp());
        EXPECT(0xcf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcf96));
        // 40 022E
        gbc.setState(0x69e9, 0xf5b4, 0xe650, 0xf469, 0x23fd, 0x143, 0x0, 0x1);
        gbc.writeMem(0x69e9, { 0x40 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf5b4, gbc.sp());
        EXPECT(0x69ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 022F
        gbc.setState(0x976, 0x202d, 0x39b0, 0x5a43, 0xaf7e, 0x73f0, 0x0, 0x1);
        gbc.writeMem(0x976, { 0x40 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x202d, gbc.sp());
        EXPECT(0x977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0230
        gbc.setState(0x4876, 0xf561, 0x4a50, 0x35bf, 0x10b5, 0xd43, 0x0, 0x1);
        gbc.writeMem(0x4876, { 0x40 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf561, gbc.sp());
        EXPECT(0x4877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0232
        gbc.setState(0x2554, 0x7613, 0xf6b0, 0x6618, 0x5abd, 0xcff2, 0x0, 0x0);
        gbc.writeMem(0x2554, { 0x40 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7613, gbc.sp());
        EXPECT(0x2555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0233
        gbc.setState(0xe8c0, 0xd0e2, 0xf5e0, 0x71d7, 0xbc9a, 0x8ef8, 0x1, 0x0);
        gbc.writeMem(0xe8c0, { 0x40 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd0e2, gbc.sp());
        EXPECT(0xe8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe8c0));
        // 40 0234
        gbc.setState(0xde02, 0x9498, 0xfa10, 0xaea8, 0xc1af, 0x347f, 0x0, 0x0);
        gbc.writeMem(0xde02, { 0x40 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9498, gbc.sp());
        EXPECT(0xde03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xde02));
        // 40 0235
        gbc.setState(0x993e, 0xe968, 0x67f0, 0x5e66, 0xea45, 0xe7f2, 0x0, 0x1);
        gbc.writeMem(0x993e, { 0x40 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe968, gbc.sp());
        EXPECT(0x993f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x993e));
        // 40 0236
        gbc.setState(0x76b, 0x899a, 0xa4f0, 0x3c80, 0x4fa2, 0xe86, 0x1, 0x0);
        gbc.writeMem(0x76b, { 0x40 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x899a, gbc.sp());
        EXPECT(0x76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0237
        gbc.setState(0xc743, 0x4aaa, 0x4940, 0xa72e, 0xb6c2, 0x2dea, 0x0, 0x1);
        gbc.writeMem(0xc743, { 0x40 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4aaa, gbc.sp());
        EXPECT(0xc744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc743));
        // 40 0238
        gbc.setState(0xc961, 0xfed, 0x21d0, 0xde4a, 0x84b8, 0x24f0, 0x0, 0x1);
        gbc.writeMem(0xc961, { 0x40 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfed, gbc.sp());
        EXPECT(0xc962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc961));
        // 40 0239
        gbc.setState(0x5989, 0x94ec, 0x3e30, 0x111b, 0xbb59, 0x162c, 0x0, 0x0);
        gbc.writeMem(0x5989, { 0x40 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x94ec, gbc.sp());
        EXPECT(0x598a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 023A
        gbc.setState(0xab9d, 0xc373, 0x2010, 0x2a9a, 0xba8e, 0xc85, 0x1, 0x1);
        gbc.writeMem(0xab9d, { 0x40 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc373, gbc.sp());
        EXPECT(0xab9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xab9d));
        // 40 023B
        gbc.setState(0x2205, 0xd8df, 0x7e0, 0xcead, 0xf9b9, 0x33f5, 0x1, 0x0);
        gbc.writeMem(0x2205, { 0x40 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd8df, gbc.sp());
        EXPECT(0x2206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 023C
        gbc.setState(0x974c, 0xfa1d, 0xdc40, 0x424a, 0x30c2, 0x7f24, 0x1, 0x1);
        gbc.writeMem(0x974c, { 0x40 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfa1d, gbc.sp());
        EXPECT(0x974d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x974c));
        // 40 023D
        gbc.setState(0x10b8, 0x3cfe, 0xb5a0, 0x8de5, 0xc590, 0xa7bf, 0x1, 0x1);
        gbc.writeMem(0x10b8, { 0x40 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3cfe, gbc.sp());
        EXPECT(0x10b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 023E
        gbc.setState(0x1763, 0xb60b, 0x6db0, 0x343a, 0x3fe6, 0x732e, 0x0, 0x1);
        gbc.writeMem(0x1763, { 0x40 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb60b, gbc.sp());
        EXPECT(0x1764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 023F
        gbc.setState(0x5648, 0x340c, 0x26b0, 0x24f8, 0xab5, 0x1de1, 0x1, 0x0);
        gbc.writeMem(0x5648, { 0x40 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x340c, gbc.sp());
        EXPECT(0x5649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0240
        gbc.setState(0x809f, 0xb827, 0xfbc0, 0x9c5e, 0xb60c, 0xb4f, 0x1, 0x1);
        gbc.writeMem(0x809f, { 0x40 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb827, gbc.sp());
        EXPECT(0x80a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x809f));
        // 40 0241
        gbc.setState(0x270a, 0xead, 0xc850, 0x5257, 0x87d8, 0xe61b, 0x0, 0x0);
        gbc.writeMem(0x270a, { 0x40 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xead, gbc.sp());
        EXPECT(0x270b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0242
        gbc.setState(0x2097, 0x5d0a, 0xfe60, 0x40b0, 0x7292, 0x2d94, 0x1, 0x0);
        gbc.writeMem(0x2097, { 0x40 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5d0a, gbc.sp());
        EXPECT(0x2098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0243
        gbc.setState(0xeb9a, 0xd30d, 0x1d90, 0xc6e4, 0x8dac, 0x2bea, 0x1, 0x1);
        gbc.writeMem(0xeb9a, { 0x40 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd30d, gbc.sp());
        EXPECT(0xeb9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xeb9a));
        // 40 0244
        gbc.setState(0xafb5, 0x8fba, 0x89d0, 0x5208, 0x4c7f, 0xc8e6, 0x0, 0x0);
        gbc.writeMem(0xafb5, { 0x40 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8fba, gbc.sp());
        EXPECT(0xafb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xafb5));
        // 40 0245
        gbc.setState(0xdd90, 0xfee2, 0x4170, 0x9f18, 0xcd4c, 0x18c8, 0x0, 0x0);
        gbc.writeMem(0xdd90, { 0x40 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfee2, gbc.sp());
        EXPECT(0xdd91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdd90));
        // 40 0246
        gbc.setState(0xcb9c, 0x842, 0x9c70, 0xe26d, 0x9c69, 0x7415, 0x0, 0x0);
        gbc.writeMem(0xcb9c, { 0x40 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x842, gbc.sp());
        EXPECT(0xcb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcb9c));
        // 40 0247
        gbc.setState(0x3f2b, 0x42e4, 0xf420, 0xf124, 0x4e9d, 0x2a4a, 0x1, 0x1);
        gbc.writeMem(0x3f2b, { 0x40 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x42e4, gbc.sp());
        EXPECT(0x3f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0248
        gbc.setState(0x3900, 0xe039, 0xc460, 0x1713, 0x98a1, 0x858f, 0x0, 0x0);
        gbc.writeMem(0x3900, { 0x40 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe039, gbc.sp());
        EXPECT(0x3901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0249
        gbc.setState(0x1a4d, 0xcd54, 0xe8e0, 0x3d35, 0x89f1, 0x75d8, 0x1, 0x0);
        gbc.writeMem(0x1a4d, { 0x40 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcd54, gbc.sp());
        EXPECT(0x1a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 024A
        gbc.setState(0xd8ee, 0x8eeb, 0xdbd0, 0x6bee, 0x336b, 0xb0a9, 0x0, 0x0);
        gbc.writeMem(0xd8ee, { 0x40 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8eeb, gbc.sp());
        EXPECT(0xd8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd8ee));
        // 40 024B
        gbc.setState(0x7efb, 0x6491, 0xaa80, 0x4c5, 0x8cb2, 0x6ab9, 0x1, 0x1);
        gbc.writeMem(0x7efb, { 0x40 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6491, gbc.sp());
        EXPECT(0x7efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 024C
        gbc.setState(0x7b17, 0xe75a, 0xe8b0, 0x4530, 0x16ca, 0xc43e, 0x1, 0x1);
        gbc.writeMem(0x7b17, { 0x40 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe75a, gbc.sp());
        EXPECT(0x7b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 024D
        gbc.setState(0xc375, 0x59f4, 0x7c40, 0xb610, 0x7d6f, 0x8139, 0x0, 0x1);
        gbc.writeMem(0xc375, { 0x40 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x59f4, gbc.sp());
        EXPECT(0xc376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc375));
        // 40 024E
        gbc.setState(0xbd6a, 0xe8b2, 0x51a0, 0x916e, 0x808f, 0xeed1, 0x0, 0x0);
        gbc.writeMem(0xbd6a, { 0x40 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe8b2, gbc.sp());
        EXPECT(0xbd6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbd6a));
        // 40 024F
        gbc.setState(0xdd33, 0xab0, 0x5e20, 0x9c67, 0xbb99, 0xf40d, 0x0, 0x0);
        gbc.writeMem(0xdd33, { 0x40 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xab0, gbc.sp());
        EXPECT(0xdd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdd33));
        // 40 0250
        gbc.setState(0x905d, 0x3d74, 0xff70, 0xee6c, 0xfb5d, 0x9d3f, 0x1, 0x1);
        gbc.writeMem(0x905d, { 0x40 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3d74, gbc.sp());
        EXPECT(0x905e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x905d));
        // 40 0251
        gbc.setState(0x4545, 0x4c37, 0x4640, 0xc88f, 0x8c9b, 0x62b7, 0x0, 0x0);
        gbc.writeMem(0x4545, { 0x40 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4c37, gbc.sp());
        EXPECT(0x4546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0252
        gbc.setState(0xafcf, 0xb7da, 0xf200, 0xf06b, 0xd300, 0xef96, 0x1, 0x1);
        gbc.writeMem(0xafcf, { 0x40 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb7da, gbc.sp());
        EXPECT(0xafd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xafcf));
        // 40 0253
        gbc.setState(0x5d83, 0x31c2, 0xf590, 0x176b, 0xf596, 0xf6a3, 0x1, 0x0);
        gbc.writeMem(0x5d83, { 0x40 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x31c2, gbc.sp());
        EXPECT(0x5d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0254
        gbc.setState(0x76e2, 0xfd58, 0xb180, 0xaa7e, 0x593e, 0x53fb, 0x1, 0x1);
        gbc.writeMem(0x76e2, { 0x40 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfd58, gbc.sp());
        EXPECT(0x76e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0256
        gbc.setState(0x1d36, 0xe178, 0x0, 0x95e8, 0xc3eb, 0xee83, 0x1, 0x1);
        gbc.writeMem(0x1d36, { 0x40 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe178, gbc.sp());
        EXPECT(0x1d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0257
        gbc.setState(0x5c87, 0x43d4, 0x7170, 0x6274, 0x139b, 0xe75d, 0x0, 0x1);
        gbc.writeMem(0x5c87, { 0x40 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x43d4, gbc.sp());
        EXPECT(0x5c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0259
        gbc.setState(0xebe6, 0xf454, 0x1390, 0x5157, 0x62b3, 0xa523, 0x0, 0x0);
        gbc.writeMem(0xebe6, { 0x40 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf454, gbc.sp());
        EXPECT(0xebe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xebe6));
        // 40 025A
        gbc.setState(0x6a10, 0xd7a4, 0x4bd0, 0xb201, 0x842b, 0x4dfa, 0x0, 0x0);
        gbc.writeMem(0x6a10, { 0x40 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd7a4, gbc.sp());
        EXPECT(0x6a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 025C
        gbc.setState(0x85bb, 0xd48f, 0xdbb0, 0x29f2, 0xe55c, 0x3af5, 0x1, 0x1);
        gbc.writeMem(0x85bb, { 0x40 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd48f, gbc.sp());
        EXPECT(0x85bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x85bb));
        // 40 025D
        gbc.setState(0x1723, 0x41f7, 0x1940, 0x56c8, 0x1cc6, 0x30d4, 0x0, 0x1);
        gbc.writeMem(0x1723, { 0x40 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x41f7, gbc.sp());
        EXPECT(0x1724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 025E
        gbc.setState(0x3d84, 0x71d9, 0x7c20, 0x7469, 0xd5b4, 0xac5d, 0x0, 0x1);
        gbc.writeMem(0x3d84, { 0x40 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x71d9, gbc.sp());
        EXPECT(0x3d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0260
        gbc.setState(0x240, 0x8ac, 0x7d60, 0x6946, 0xb329, 0xdf0b, 0x1, 0x0);
        gbc.writeMem(0x240, { 0x40 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8ac, gbc.sp());
        EXPECT(0x241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0261
        gbc.setState(0x293a, 0x84f3, 0x9ec0, 0xb0f6, 0xbfd, 0x2929, 0x0, 0x0);
        gbc.writeMem(0x293a, { 0x40 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x84f3, gbc.sp());
        EXPECT(0x293b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0262
        gbc.setState(0xd418, 0xaad4, 0x2960, 0xf549, 0xf9e0, 0xda10, 0x0, 0x1);
        gbc.writeMem(0xd418, { 0x40 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xaad4, gbc.sp());
        EXPECT(0xd419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd418));
        // 40 0263
        gbc.setState(0x4f45, 0xc374, 0xcfd0, 0xd18e, 0x4e56, 0xb65, 0x0, 0x1);
        gbc.writeMem(0x4f45, { 0x40 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc374, gbc.sp());
        EXPECT(0x4f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0264
        gbc.setState(0xe7c7, 0x998f, 0x6c0, 0xd696, 0x4338, 0x6eb1, 0x1, 0x1);
        gbc.writeMem(0xe7c7, { 0x40 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x998f, gbc.sp());
        EXPECT(0xe7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe7c7));
        // 40 0265
        gbc.setState(0x1a9, 0x1d5b, 0xf270, 0x33e, 0x7b0e, 0xcf30, 0x1, 0x0);
        gbc.writeMem(0x1a9, { 0x40 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1d5b, gbc.sp());
        EXPECT(0x1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0266
        gbc.setState(0xd23c, 0xdebe, 0xa010, 0xe0b7, 0x79f5, 0x6cc9, 0x1, 0x1);
        gbc.writeMem(0xd23c, { 0x40 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdebe, gbc.sp());
        EXPECT(0xd23d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd23c));
        // 40 0267
        gbc.setState(0x9eb9, 0x1792, 0xaee0, 0x3d9, 0x13f8, 0x3f91, 0x1, 0x1);
        gbc.writeMem(0x9eb9, { 0x40 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1792, gbc.sp());
        EXPECT(0x9eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9eb9));
        // 40 0268
        gbc.setState(0xa2d1, 0x2fad, 0xb530, 0x677c, 0xb559, 0xa558, 0x0, 0x0);
        gbc.writeMem(0xa2d1, { 0x40 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2fad, gbc.sp());
        EXPECT(0xa2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa2d1));
        // 40 0269
        gbc.setState(0x3998, 0xff14, 0x8f00, 0x74df, 0x1d24, 0x4404, 0x1, 0x1);
        gbc.writeMem(0x3998, { 0x40 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xff14, gbc.sp());
        EXPECT(0x3999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 026A
        gbc.setState(0xa1c2, 0x88b, 0x3070, 0x9ef5, 0xf084, 0xddcf, 0x1, 0x0);
        gbc.writeMem(0xa1c2, { 0x40 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x88b, gbc.sp());
        EXPECT(0xa1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa1c2));
        // 40 026B
        gbc.setState(0xe4ec, 0xed7d, 0x7c20, 0xc398, 0x7b2, 0xe92c, 0x1, 0x0);
        gbc.writeMem(0xe4ec, { 0x40 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xed7d, gbc.sp());
        EXPECT(0xe4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe4ec));
        // 40 026C
        gbc.setState(0x718d, 0x8388, 0x1d60, 0xda91, 0x4918, 0xaeda, 0x1, 0x0);
        gbc.writeMem(0x718d, { 0x40 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8388, gbc.sp());
        EXPECT(0x718e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 026D
        gbc.setState(0x3da5, 0xa436, 0xee60, 0xbdb1, 0x82c3, 0x4d93, 0x1, 0x0);
        gbc.writeMem(0x3da5, { 0x40 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa436, gbc.sp());
        EXPECT(0x3da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 026E
        gbc.setState(0xb001, 0x50f0, 0xa880, 0xdac6, 0xac37, 0xaca0, 0x1, 0x1);
        gbc.writeMem(0xb001, { 0x40 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x50f0, gbc.sp());
        EXPECT(0xb002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb001));
        // 40 026F
        gbc.setState(0xbe97, 0x1724, 0xd670, 0xd23a, 0x5e59, 0x38a3, 0x0, 0x0);
        gbc.writeMem(0xbe97, { 0x40 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1724, gbc.sp());
        EXPECT(0xbe98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbe97));
        // 40 0270
        gbc.setState(0xc705, 0xf125, 0x9450, 0xb0ef, 0x57fc, 0x3e62, 0x1, 0x1);
        gbc.writeMem(0xc705, { 0x40 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf125, gbc.sp());
        EXPECT(0xc706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc705));
        // 40 0271
        gbc.setState(0x1688, 0x133b, 0xbec0, 0x69b2, 0xc54f, 0xb528, 0x1, 0x1);
        gbc.writeMem(0x1688, { 0x40 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x133b, gbc.sp());
        EXPECT(0x1689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0272
        gbc.setState(0x6b19, 0xc55d, 0xea30, 0x1bf8, 0x7db, 0xba8, 0x1, 0x0);
        gbc.writeMem(0x6b19, { 0x40 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc55d, gbc.sp());
        EXPECT(0x6b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0273
        gbc.setState(0x7c92, 0xe658, 0x65a0, 0x45aa, 0x57d, 0x5d42, 0x0, 0x0);
        gbc.writeMem(0x7c92, { 0x40 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe658, gbc.sp());
        EXPECT(0x7c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0274
        gbc.setState(0x7ff7, 0xde72, 0x1130, 0x4459, 0x4fdc, 0xa3eb, 0x1, 0x0);
        gbc.writeMem(0x7ff7, { 0x40 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xde72, gbc.sp());
        EXPECT(0x7ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0275
        gbc.setState(0xd66e, 0x70a0, 0x7ea0, 0xb753, 0x829a, 0x45e2, 0x0, 0x1);
        gbc.writeMem(0xd66e, { 0x40 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x70a0, gbc.sp());
        EXPECT(0xd66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd66e));
        // 40 0276
        gbc.setState(0xc895, 0x701f, 0x7580, 0x8ee2, 0x1a52, 0x6da4, 0x1, 0x0);
        gbc.writeMem(0xc895, { 0x40 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x701f, gbc.sp());
        EXPECT(0xc896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc895));
        // 40 0277
        gbc.setState(0x89ee, 0x3c43, 0xcd20, 0x8062, 0xc279, 0xd11f, 0x0, 0x1);
        gbc.writeMem(0x89ee, { 0x40 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3c43, gbc.sp());
        EXPECT(0x89ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x89ee));
        // 40 0278
        gbc.setState(0xa811, 0x6413, 0x52f0, 0xf5e, 0x5572, 0xa6e6, 0x0, 0x0);
        gbc.writeMem(0xa811, { 0x40 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6413, gbc.sp());
        EXPECT(0xa812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa811));
        // 40 0279
        gbc.setState(0x7a5d, 0xef48, 0xde20, 0xafed, 0x80e6, 0x8443, 0x1, 0x1);
        gbc.writeMem(0x7a5d, { 0x40 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xef48, gbc.sp());
        EXPECT(0x7a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 027A
        gbc.setState(0xb9f9, 0x483, 0xa000, 0x7d6c, 0x60f0, 0x5d64, 0x1, 0x0);
        gbc.writeMem(0xb9f9, { 0x40 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x483, gbc.sp());
        EXPECT(0xb9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb9f9));
        // 40 027B
        gbc.setState(0x8dc9, 0xddf5, 0x56a0, 0xe2c0, 0x4417, 0xfe50, 0x0, 0x0);
        gbc.writeMem(0x8dc9, { 0x40 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xddf5, gbc.sp());
        EXPECT(0x8dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8dc9));
        // 40 027C
        gbc.setState(0x82b2, 0xd56d, 0xc7b0, 0x955d, 0x72c3, 0x5229, 0x0, 0x0);
        gbc.writeMem(0x82b2, { 0x40 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd56d, gbc.sp());
        EXPECT(0x82b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x82b2));
        // 40 027D
        gbc.setState(0xc6e0, 0x1800, 0xe6e0, 0x78dc, 0x29de, 0x4b24, 0x0, 0x1);
        gbc.writeMem(0xc6e0, { 0x40 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1800, gbc.sp());
        EXPECT(0xc6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc6e0));
        // 40 027E
        gbc.setState(0xdcde, 0xbd9f, 0x2dc0, 0x394f, 0xce3, 0xb499, 0x1, 0x1);
        gbc.writeMem(0xdcde, { 0x40 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbd9f, gbc.sp());
        EXPECT(0xdcdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdcde));
        // 40 027F
        gbc.setState(0x24d8, 0x60fa, 0xc330, 0x8aab, 0x7565, 0x7516, 0x1, 0x0);
        gbc.writeMem(0x24d8, { 0x40 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x60fa, gbc.sp());
        EXPECT(0x24d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0280
        gbc.setState(0x3fea, 0xaea4, 0xa6f0, 0xdc9f, 0xe844, 0x5b38, 0x0, 0x1);
        gbc.writeMem(0x3fea, { 0x40 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaea4, gbc.sp());
        EXPECT(0x3feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0281
        gbc.setState(0x2ad4, 0xef80, 0x4890, 0xdfee, 0x2ec2, 0x6cb8, 0x1, 0x1);
        gbc.writeMem(0x2ad4, { 0x40 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xef80, gbc.sp());
        EXPECT(0x2ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0282
        gbc.setState(0x819a, 0x99f1, 0x5360, 0x503c, 0x5e7, 0x1a3b, 0x0, 0x0);
        gbc.writeMem(0x819a, { 0x40 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x99f1, gbc.sp());
        EXPECT(0x819b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x819a));
        // 40 0283
        gbc.setState(0xe22, 0x1373, 0x11e0, 0xf8cc, 0x22f1, 0xd964, 0x0, 0x1);
        gbc.writeMem(0xe22, { 0x40 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1373, gbc.sp());
        EXPECT(0xe23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0284
        gbc.setState(0x1de4, 0x7a1e, 0x4800, 0xa0d4, 0x34ab, 0xe854, 0x1, 0x1);
        gbc.writeMem(0x1de4, { 0x40 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7a1e, gbc.sp());
        EXPECT(0x1de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0285
        gbc.setState(0x3841, 0xcec0, 0xa2c0, 0x1203, 0x3912, 0x655b, 0x0, 0x0);
        gbc.writeMem(0x3841, { 0x40 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcec0, gbc.sp());
        EXPECT(0x3842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0287
        gbc.setState(0x111b, 0x57e1, 0xd110, 0xa9e0, 0xbcf3, 0xf849, 0x0, 0x1);
        gbc.writeMem(0x111b, { 0x40 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x57e1, gbc.sp());
        EXPECT(0x111c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0288
        gbc.setState(0xb81a, 0x70a, 0x9e90, 0x1b12, 0x8471, 0x9fd8, 0x1, 0x0);
        gbc.writeMem(0xb81a, { 0x40 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x70a, gbc.sp());
        EXPECT(0xb81b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb81a));
        // 40 0289
        gbc.setState(0xb92b, 0xcdea, 0x51c0, 0xf31b, 0x5592, 0x44f, 0x0, 0x1);
        gbc.writeMem(0xb92b, { 0x40 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcdea, gbc.sp());
        EXPECT(0xb92c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb92b));
        // 40 028A
        gbc.setState(0x917d, 0x74db, 0xbcc0, 0x1c58, 0xc533, 0x6691, 0x1, 0x0);
        gbc.writeMem(0x917d, { 0x40 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x74db, gbc.sp());
        EXPECT(0x917e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x917d));
        // 40 028B
        gbc.setState(0xde6d, 0x66b6, 0x6490, 0xd32c, 0xb5f9, 0xee2, 0x0, 0x1);
        gbc.writeMem(0xde6d, { 0x40 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x66b6, gbc.sp());
        EXPECT(0xde6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xde6d));
        // 40 028C
        gbc.setState(0xdbe1, 0xe0e4, 0x23c0, 0x9fe7, 0x1fd2, 0xdcfa, 0x0, 0x1);
        gbc.writeMem(0xdbe1, { 0x40 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe0e4, gbc.sp());
        EXPECT(0xdbe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdbe1));
        // 40 028D
        gbc.setState(0xa73f, 0xea4b, 0x20, 0xb121, 0xe718, 0x6b5c, 0x1, 0x0);
        gbc.writeMem(0xa73f, { 0x40 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xea4b, gbc.sp());
        EXPECT(0xa740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa73f));
        // 40 028E
        gbc.setState(0xacb2, 0xbe6e, 0xd430, 0x44a2, 0xc707, 0x15, 0x1, 0x1);
        gbc.writeMem(0xacb2, { 0x40 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbe6e, gbc.sp());
        EXPECT(0xacb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xacb2));
        // 40 028F
        gbc.setState(0x2ba0, 0xb6a2, 0xa810, 0x8891, 0x58f2, 0x7ede, 0x0, 0x1);
        gbc.writeMem(0x2ba0, { 0x40 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb6a2, gbc.sp());
        EXPECT(0x2ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0291
        gbc.setState(0x85be, 0xbae1, 0x4d10, 0x821b, 0xc296, 0x4566, 0x1, 0x1);
        gbc.writeMem(0x85be, { 0x40 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbae1, gbc.sp());
        EXPECT(0x85bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x85be));
        // 40 0292
        gbc.setState(0xac59, 0xb211, 0x1f70, 0xd44c, 0x45a7, 0x2afd, 0x1, 0x0);
        gbc.writeMem(0xac59, { 0x40 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb211, gbc.sp());
        EXPECT(0xac5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xac59));
        // 40 0293
        gbc.setState(0x7b22, 0x4453, 0x27e0, 0x87b4, 0xfc46, 0xeec9, 0x0, 0x1);
        gbc.writeMem(0x7b22, { 0x40 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4453, gbc.sp());
        EXPECT(0x7b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0294
        gbc.setState(0xb7d, 0x3a39, 0x5cf0, 0x3042, 0xa3ad, 0x2b68, 0x0, 0x1);
        gbc.writeMem(0xb7d, { 0x40 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3a39, gbc.sp());
        EXPECT(0xb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0295
        gbc.setState(0x8948, 0xadf1, 0x2550, 0x54d, 0xbf4c, 0x4668, 0x1, 0x1);
        gbc.writeMem(0x8948, { 0x40 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xadf1, gbc.sp());
        EXPECT(0x8949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8948));
        // 40 0296
        gbc.setState(0x6f9a, 0xf56a, 0x7f80, 0xfcf, 0x2b92, 0xb37f, 0x1, 0x0);
        gbc.writeMem(0x6f9a, { 0x40 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf56a, gbc.sp());
        EXPECT(0x6f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0297
        gbc.setState(0xac05, 0xf61c, 0xe7f0, 0x82a4, 0x20fd, 0x6698, 0x1, 0x1);
        gbc.writeMem(0xac05, { 0x40 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf61c, gbc.sp());
        EXPECT(0xac06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xac05));
        // 40 0298
        gbc.setState(0x85a3, 0xd4a4, 0x340, 0x4f28, 0xc4ca, 0x73eb, 0x1, 0x1);
        gbc.writeMem(0x85a3, { 0x40 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd4a4, gbc.sp());
        EXPECT(0x85a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x85a3));
        // 40 0299
        gbc.setState(0x6f1c, 0xc08f, 0x7f00, 0x102f, 0x12e6, 0xdefe, 0x1, 0x1);
        gbc.writeMem(0x6f1c, { 0x40 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc08f, gbc.sp());
        EXPECT(0x6f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 029A
        gbc.setState(0x57f1, 0xc770, 0x8860, 0x7c5a, 0x3558, 0x8b9e, 0x1, 0x0);
        gbc.writeMem(0x57f1, { 0x40 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc770, gbc.sp());
        EXPECT(0x57f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 029B
        gbc.setState(0xbb7e, 0x5888, 0x4f40, 0xf81e, 0xb2ed, 0x2719, 0x1, 0x1);
        gbc.writeMem(0xbb7e, { 0x40 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5888, gbc.sp());
        EXPECT(0xbb7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbb7e));
        // 40 029C
        gbc.setState(0x5fdd, 0x8474, 0xeb20, 0x3193, 0xcc40, 0xf819, 0x0, 0x0);
        gbc.writeMem(0x5fdd, { 0x40 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8474, gbc.sp());
        EXPECT(0x5fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 029D
        gbc.setState(0x2c52, 0x4731, 0x22e0, 0xba70, 0xcb0d, 0x3274, 0x0, 0x0);
        gbc.writeMem(0x2c52, { 0x40 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4731, gbc.sp());
        EXPECT(0x2c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 029E
        gbc.setState(0x8b1f, 0x8bfe, 0xf1d0, 0x8b12, 0x294a, 0x6beb, 0x1, 0x0);
        gbc.writeMem(0x8b1f, { 0x40 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8bfe, gbc.sp());
        EXPECT(0x8b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8b1f));
        // 40 029F
        gbc.setState(0x9d07, 0x8bdb, 0x4bb0, 0x5034, 0xbdde, 0xc889, 0x0, 0x0);
        gbc.writeMem(0x9d07, { 0x40 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8bdb, gbc.sp());
        EXPECT(0x9d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9d07));
        // 40 02A0
        gbc.setState(0xd42e, 0xfad1, 0xf250, 0xe3b1, 0x2a43, 0xff01, 0x1, 0x0);
        gbc.writeMem(0xd42e, { 0x40 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfad1, gbc.sp());
        EXPECT(0xd42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd42e));
        // 40 02A1
        gbc.setState(0xa332, 0x2fca, 0x42e0, 0x1f10, 0x35d6, 0xc657, 0x1, 0x0);
        gbc.writeMem(0xa332, { 0x40 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2fca, gbc.sp());
        EXPECT(0xa333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa332));
        // 40 02A3
        gbc.setState(0xb4a8, 0x3570, 0x43f0, 0x3b4a, 0x43d2, 0x29e0, 0x0, 0x1);
        gbc.writeMem(0xb4a8, { 0x40 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3570, gbc.sp());
        EXPECT(0xb4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb4a8));
        // 40 02A5
        gbc.setState(0xdcb9, 0x235e, 0x9fc0, 0xd48c, 0x7a86, 0x37c9, 0x0, 0x1);
        gbc.writeMem(0xdcb9, { 0x40 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x235e, gbc.sp());
        EXPECT(0xdcba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdcb9));
        // 40 02A6
        gbc.setState(0xec2b, 0x8b8d, 0xa740, 0xa4a5, 0x3374, 0xa28e, 0x1, 0x0);
        gbc.writeMem(0xec2b, { 0x40 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8b8d, gbc.sp());
        EXPECT(0xec2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xec2b));
        // 40 02A7
        gbc.setState(0x9d61, 0x19b2, 0x8770, 0xa343, 0x7896, 0x7c10, 0x1, 0x1);
        gbc.writeMem(0x9d61, { 0x40 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x19b2, gbc.sp());
        EXPECT(0x9d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9d61));
        // 40 02A8
        gbc.setState(0x1aed, 0xcbbf, 0x6f50, 0x1390, 0xbe32, 0x3806, 0x0, 0x0);
        gbc.writeMem(0x1aed, { 0x40 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcbbf, gbc.sp());
        EXPECT(0x1aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02A9
        gbc.setState(0x5a95, 0xc468, 0xc430, 0x222f, 0xa9e, 0x3a8d, 0x0, 0x1);
        gbc.writeMem(0x5a95, { 0x40 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc468, gbc.sp());
        EXPECT(0x5a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02AA
        gbc.setState(0xac5f, 0x5e4a, 0xb600, 0x6919, 0x7e40, 0x16e0, 0x1, 0x0);
        gbc.writeMem(0xac5f, { 0x40 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5e4a, gbc.sp());
        EXPECT(0xac60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xac5f));
        // 40 02AB
        gbc.setState(0x3a1a, 0xf636, 0x2c90, 0x44d6, 0xfad3, 0x3bc5, 0x1, 0x0);
        gbc.writeMem(0x3a1a, { 0x40 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf636, gbc.sp());
        EXPECT(0x3a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02AC
        gbc.setState(0x821, 0x7236, 0x6c00, 0xc962, 0x12d9, 0xf371, 0x0, 0x0);
        gbc.writeMem(0x821, { 0x40 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7236, gbc.sp());
        EXPECT(0x822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02AD
        gbc.setState(0x5a31, 0x60b9, 0xe0e0, 0xd882, 0xa5ed, 0xc1fe, 0x0, 0x1);
        gbc.writeMem(0x5a31, { 0x40 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x60b9, gbc.sp());
        EXPECT(0x5a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02AE
        gbc.setState(0x3b25, 0x3696, 0x54c0, 0x217a, 0x3717, 0xa945, 0x1, 0x1);
        gbc.writeMem(0x3b25, { 0x40 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3696, gbc.sp());
        EXPECT(0x3b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02B0
        gbc.setState(0xd99b, 0x9a44, 0xc8a0, 0xf209, 0xff63, 0xce43, 0x1, 0x0);
        gbc.writeMem(0xd99b, { 0x40 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9a44, gbc.sp());
        EXPECT(0xd99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd99b));
        // 40 02B1
        gbc.setState(0x89d7, 0x3362, 0x82d0, 0xced7, 0xf1ee, 0x3e7a, 0x0, 0x0);
        gbc.writeMem(0x89d7, { 0x40 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3362, gbc.sp());
        EXPECT(0x89d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x89d7));
        // 40 02B2
        gbc.setState(0x12f5, 0x41ce, 0xa820, 0x8d5, 0x477f, 0x69a4, 0x1, 0x0);
        gbc.writeMem(0x12f5, { 0x40 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x41ce, gbc.sp());
        EXPECT(0x12f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02B3
        gbc.setState(0x71b, 0x28f2, 0x8920, 0xe6f8, 0x2799, 0xb027, 0x0, 0x0);
        gbc.writeMem(0x71b, { 0x40 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x28f2, gbc.sp());
        EXPECT(0x71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02B4
        gbc.setState(0x5846, 0x5b22, 0xa9f0, 0xf607, 0x8b71, 0x199e, 0x1, 0x0);
        gbc.writeMem(0x5846, { 0x40 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5b22, gbc.sp());
        EXPECT(0x5847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02B5
        gbc.setState(0x4380, 0x72f9, 0xf460, 0x6355, 0xdc97, 0x7ba, 0x0, 0x1);
        gbc.writeMem(0x4380, { 0x40 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x72f9, gbc.sp());
        EXPECT(0x4381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02B7
        gbc.setState(0xdf, 0x44b0, 0xc6d0, 0x540b, 0xc632, 0x8931, 0x0, 0x1);
        gbc.writeMem(0xdf, { 0x40 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x44b0, gbc.sp());
        EXPECT(0xe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02B8
        gbc.setState(0xb9f3, 0x5205, 0xb3e0, 0xbb17, 0xfd96, 0xc172, 0x0, 0x1);
        gbc.writeMem(0xb9f3, { 0x40 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5205, gbc.sp());
        EXPECT(0xb9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb9f3));
        // 40 02B9
        gbc.setState(0xa261, 0x8cef, 0x2550, 0x841e, 0x54fb, 0x866a, 0x0, 0x1);
        gbc.writeMem(0xa261, { 0x40 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8cef, gbc.sp());
        EXPECT(0xa262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa261));
        // 40 02BA
        gbc.setState(0x2612, 0xb37c, 0xc660, 0x58f4, 0xccca, 0xc0df, 0x0, 0x1);
        gbc.writeMem(0x2612, { 0x40 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb37c, gbc.sp());
        EXPECT(0x2613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02BB
        gbc.setState(0xed8e, 0x8f98, 0x3340, 0xab08, 0x963a, 0xe491, 0x0, 0x0);
        gbc.writeMem(0xed8e, { 0x40 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8f98, gbc.sp());
        EXPECT(0xed8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xed8e));
        // 40 02BC
        gbc.setState(0x5263, 0x9369, 0x790, 0x869, 0x4481, 0x5fa4, 0x0, 0x1);
        gbc.writeMem(0x5263, { 0x40 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9369, gbc.sp());
        EXPECT(0x5264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02BD
        gbc.setState(0xb4f0, 0x2a59, 0x8260, 0xa801, 0x9235, 0xe473, 0x0, 0x0);
        gbc.writeMem(0xb4f0, { 0x40 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2a59, gbc.sp());
        EXPECT(0xb4f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb4f0));
        // 40 02BE
        gbc.setState(0x8985, 0x99f3, 0x1780, 0xb282, 0x3237, 0xd09d, 0x1, 0x1);
        gbc.writeMem(0x8985, { 0x40 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x99f3, gbc.sp());
        EXPECT(0x8986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8985));
        // 40 02C0
        gbc.setState(0xe6e6, 0x4b29, 0xcc30, 0x8186, 0x4032, 0xc96a, 0x1, 0x1);
        gbc.writeMem(0xe6e6, { 0x40 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4b29, gbc.sp());
        EXPECT(0xe6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe6e6));
        // 40 02C1
        gbc.setState(0x570, 0x1f42, 0x46e0, 0x5321, 0xcf2a, 0xaeff, 0x1, 0x1);
        gbc.writeMem(0x570, { 0x40 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1f42, gbc.sp());
        EXPECT(0x571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02C2
        gbc.setState(0x91c4, 0xe40f, 0x3db0, 0x106, 0x24c5, 0x76f6, 0x1, 0x1);
        gbc.writeMem(0x91c4, { 0x40 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe40f, gbc.sp());
        EXPECT(0x91c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x91c4));
        // 40 02C3
        gbc.setState(0x3bb0, 0x8fed, 0x2690, 0xee3d, 0xe9d9, 0xc710, 0x0, 0x0);
        gbc.writeMem(0x3bb0, { 0x40 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8fed, gbc.sp());
        EXPECT(0x3bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02C5
        gbc.setState(0x252b, 0xe3a7, 0x6190, 0x3f84, 0x6ee1, 0xc918, 0x0, 0x0);
        gbc.writeMem(0x252b, { 0x40 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe3a7, gbc.sp());
        EXPECT(0x252c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02C6
        gbc.setState(0x23c6, 0x77cb, 0xb1e0, 0xf93d, 0x65ac, 0x5f22, 0x0, 0x0);
        gbc.writeMem(0x23c6, { 0x40 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x77cb, gbc.sp());
        EXPECT(0x23c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02C7
        gbc.setState(0xae76, 0xc31c, 0x9540, 0xdc53, 0xcfc8, 0x24fa, 0x1, 0x0);
        gbc.writeMem(0xae76, { 0x40 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc31c, gbc.sp());
        EXPECT(0xae77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xae76));
        // 40 02C8
        gbc.setState(0x1afb, 0xc0b8, 0x42c0, 0xbd93, 0xec17, 0x4fd8, 0x0, 0x1);
        gbc.writeMem(0x1afb, { 0x40 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc0b8, gbc.sp());
        EXPECT(0x1afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02C9
        gbc.setState(0x63d9, 0x698c, 0xd250, 0x50a4, 0x5047, 0x7ea5, 0x0, 0x1);
        gbc.writeMem(0x63d9, { 0x40 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x698c, gbc.sp());
        EXPECT(0x63da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02CA
        gbc.setState(0xaccf, 0xd107, 0x9d70, 0xd0c7, 0xe1a3, 0x116e, 0x0, 0x1);
        gbc.writeMem(0xaccf, { 0x40 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd107, gbc.sp());
        EXPECT(0xacd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xaccf));
        // 40 02CB
        gbc.setState(0x6fc5, 0x4b0f, 0x98a0, 0x7958, 0x503d, 0xf764, 0x0, 0x1);
        gbc.writeMem(0x6fc5, { 0x40 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4b0f, gbc.sp());
        EXPECT(0x6fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02CC
        gbc.setState(0x4d2e, 0xf971, 0x1ab0, 0xe0ba, 0x7c41, 0x5cf0, 0x0, 0x0);
        gbc.writeMem(0x4d2e, { 0x40 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf971, gbc.sp());
        EXPECT(0x4d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02CD
        gbc.setState(0x4076, 0x8659, 0x6380, 0x490, 0x6e1b, 0x870d, 0x0, 0x1);
        gbc.writeMem(0x4076, { 0x40 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8659, gbc.sp());
        EXPECT(0x4077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02CE
        gbc.setState(0x838c, 0x267d, 0xc180, 0x1fff, 0x6a8e, 0xccd3, 0x1, 0x0);
        gbc.writeMem(0x838c, { 0x40 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x267d, gbc.sp());
        EXPECT(0x838d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x838c));
        // 40 02CF
        gbc.setState(0x6d80, 0xfefb, 0xc050, 0xec8d, 0x5db1, 0x80cf, 0x0, 0x0);
        gbc.writeMem(0x6d80, { 0x40 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfefb, gbc.sp());
        EXPECT(0x6d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02D0
        gbc.setState(0xd3c1, 0xb29b, 0x9040, 0x39ae, 0xaf1e, 0x4ef2, 0x0, 0x0);
        gbc.writeMem(0xd3c1, { 0x40 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb29b, gbc.sp());
        EXPECT(0xd3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd3c1));
        // 40 02D1
        gbc.setState(0x5ac9, 0x5d41, 0x6280, 0xe971, 0x26f0, 0x4e98, 0x1, 0x1);
        gbc.writeMem(0x5ac9, { 0x40 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5d41, gbc.sp());
        EXPECT(0x5aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02D2
        gbc.setState(0x848e, 0x7adc, 0x5e10, 0xdd8a, 0xf6f2, 0x8b4d, 0x1, 0x0);
        gbc.writeMem(0x848e, { 0x40 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7adc, gbc.sp());
        EXPECT(0x848f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x848e));
        // 40 02D3
        gbc.setState(0x5b4e, 0xbcae, 0x6dc0, 0x1580, 0x83da, 0xeb79, 0x1, 0x1);
        gbc.writeMem(0x5b4e, { 0x40 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbcae, gbc.sp());
        EXPECT(0x5b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02D4
        gbc.setState(0xbb00, 0x6a05, 0xe820, 0xc66e, 0xa7ac, 0xd997, 0x0, 0x0);
        gbc.writeMem(0xbb00, { 0x40 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6a05, gbc.sp());
        EXPECT(0xbb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbb00));
        // 40 02D5
        gbc.setState(0xd243, 0x9222, 0xcc90, 0x2ba, 0x880b, 0x528d, 0x1, 0x1);
        gbc.writeMem(0xd243, { 0x40 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9222, gbc.sp());
        EXPECT(0xd244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd243));
        // 40 02D6
        gbc.setState(0xebbd, 0x1a2d, 0x8c50, 0xc115, 0xce4c, 0x6b12, 0x1, 0x0);
        gbc.writeMem(0xebbd, { 0x40 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1a2d, gbc.sp());
        EXPECT(0xebbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xebbd));
        // 40 02D7
        gbc.setState(0x12c9, 0xc769, 0x5500, 0x3d19, 0xbff3, 0x4101, 0x1, 0x1);
        gbc.writeMem(0x12c9, { 0x40 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc769, gbc.sp());
        EXPECT(0x12ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02D8
        gbc.setState(0x5e37, 0x1e5b, 0xca0, 0xdbf4, 0xbc9, 0xa3ac, 0x0, 0x0);
        gbc.writeMem(0x5e37, { 0x40 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1e5b, gbc.sp());
        EXPECT(0x5e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02D9
        gbc.setState(0x4244, 0x36f9, 0x58d0, 0x91d9, 0x4d8b, 0x2d03, 0x1, 0x1);
        gbc.writeMem(0x4244, { 0x40 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x36f9, gbc.sp());
        EXPECT(0x4245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02DA
        gbc.setState(0x6526, 0x1717, 0x11d0, 0x1938, 0xd25, 0xaeec, 0x1, 0x0);
        gbc.writeMem(0x6526, { 0x40 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1717, gbc.sp());
        EXPECT(0x6527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02DB
        gbc.setState(0xc6d0, 0xc235, 0x50e0, 0xa54b, 0x483a, 0xae4b, 0x0, 0x1);
        gbc.writeMem(0xc6d0, { 0x40 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc235, gbc.sp());
        EXPECT(0xc6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc6d0));
        // 40 02DC
        gbc.setState(0xb22d, 0xe462, 0x2730, 0x2728, 0xce86, 0x3848, 0x0, 0x0);
        gbc.writeMem(0xb22d, { 0x40 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe462, gbc.sp());
        EXPECT(0xb22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb22d));
        // 40 02DD
        gbc.setState(0xeba2, 0x4708, 0x9e70, 0xf747, 0x2911, 0x9f64, 0x0, 0x1);
        gbc.writeMem(0xeba2, { 0x40 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4708, gbc.sp());
        EXPECT(0xeba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xeba2));
        // 40 02DE
        gbc.setState(0x2c8f, 0xe853, 0xea0, 0xb29b, 0xbb0b, 0x8259, 0x1, 0x0);
        gbc.writeMem(0x2c8f, { 0x40 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe853, gbc.sp());
        EXPECT(0x2c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02DF
        gbc.setState(0x384d, 0x5c87, 0xe750, 0xaffe, 0x665c, 0x85bd, 0x0, 0x1);
        gbc.writeMem(0x384d, { 0x40 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5c87, gbc.sp());
        EXPECT(0x384e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02E0
        gbc.setState(0x1610, 0x8c6b, 0xe070, 0xabf4, 0x1d4e, 0x275f, 0x0, 0x0);
        gbc.writeMem(0x1610, { 0x40 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8c6b, gbc.sp());
        EXPECT(0x1611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02E1
        gbc.setState(0xc3ce, 0xef73, 0x1df0, 0x2933, 0xca8, 0x13c, 0x0, 0x0);
        gbc.writeMem(0xc3ce, { 0x40 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xef73, gbc.sp());
        EXPECT(0xc3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc3ce));
        // 40 02E2
        gbc.setState(0x4e32, 0x584, 0xe800, 0xe293, 0xb44a, 0xc5e, 0x1, 0x1);
        gbc.writeMem(0x4e32, { 0x40 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x584, gbc.sp());
        EXPECT(0x4e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02E3
        gbc.setState(0xce24, 0xc3ab, 0x4c0, 0x3beb, 0x79b0, 0x7bc9, 0x0, 0x0);
        gbc.writeMem(0xce24, { 0x40 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc3ab, gbc.sp());
        EXPECT(0xce25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xce24));
        // 40 02E4
        gbc.setState(0x2d37, 0x30a1, 0x4d20, 0xa7ce, 0x4ce1, 0xbe32, 0x1, 0x0);
        gbc.writeMem(0x2d37, { 0x40 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x30a1, gbc.sp());
        EXPECT(0x2d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02E5
        gbc.setState(0x7cb5, 0xe5fe, 0x9eb0, 0xe4c6, 0x7ea1, 0x8c35, 0x0, 0x0);
        gbc.writeMem(0x7cb5, { 0x40 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe5fe, gbc.sp());
        EXPECT(0x7cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02E6
        gbc.setState(0x8b02, 0xb937, 0x64e0, 0xc6a1, 0xeec5, 0x88e0, 0x0, 0x0);
        gbc.writeMem(0x8b02, { 0x40 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb937, gbc.sp());
        EXPECT(0x8b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8b02));
        // 40 02E7
        gbc.setState(0x888e, 0xf582, 0x1060, 0xd447, 0x6a21, 0x217a, 0x1, 0x0);
        gbc.writeMem(0x888e, { 0x40 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf582, gbc.sp());
        EXPECT(0x888f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x888e));
        // 40 02E8
        gbc.setState(0x8194, 0xcc9a, 0xf510, 0xf5b2, 0x6d7a, 0x9dc6, 0x0, 0x0);
        gbc.writeMem(0x8194, { 0x40 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcc9a, gbc.sp());
        EXPECT(0x8195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8194));
        // 40 02EA
        gbc.setState(0x39b7, 0xa3f8, 0xae70, 0x8ef, 0x594d, 0xa9a4, 0x1, 0x1);
        gbc.writeMem(0x39b7, { 0x40 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa3f8, gbc.sp());
        EXPECT(0x39b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02EB
        gbc.setState(0x822a, 0xaa7f, 0x7100, 0x9b48, 0x7d87, 0x2b44, 0x1, 0x0);
        gbc.writeMem(0x822a, { 0x40 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xaa7f, gbc.sp());
        EXPECT(0x822b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x822a));
        // 40 02EC
        gbc.setState(0xb5a, 0x9b02, 0x1b90, 0x2fd7, 0x498b, 0xee33, 0x0, 0x0);
        gbc.writeMem(0xb5a, { 0x40 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9b02, gbc.sp());
        EXPECT(0xb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02ED
        gbc.setState(0xcfc9, 0x5150, 0x16b0, 0x3e8b, 0xd189, 0xcde0, 0x1, 0x0);
        gbc.writeMem(0xcfc9, { 0x40 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5150, gbc.sp());
        EXPECT(0xcfca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcfc9));
        // 40 02EE
        gbc.setState(0x1201, 0xbbd0, 0x6950, 0x2c65, 0x7dd3, 0x7161, 0x0, 0x1);
        gbc.writeMem(0x1201, { 0x40 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbbd0, gbc.sp());
        EXPECT(0x1202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02EF
        gbc.setState(0x83e, 0xec28, 0xf870, 0x9496, 0x709b, 0x6d68, 0x0, 0x1);
        gbc.writeMem(0x83e, { 0x40 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xec28, gbc.sp());
        EXPECT(0x83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02F0
        gbc.setState(0x36c4, 0xd51d, 0xda90, 0xa1c5, 0xf16d, 0x2167, 0x1, 0x0);
        gbc.writeMem(0x36c4, { 0x40 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd51d, gbc.sp());
        EXPECT(0x36c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02F1
        gbc.setState(0x61b5, 0x7ae2, 0x53e0, 0x7ab, 0x51a6, 0x624f, 0x0, 0x0);
        gbc.writeMem(0x61b5, { 0x40 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7ae2, gbc.sp());
        EXPECT(0x61b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02F2
        gbc.setState(0x1b77, 0x5c2a, 0xeef0, 0xbaf4, 0xeb87, 0x99b4, 0x0, 0x1);
        gbc.writeMem(0x1b77, { 0x40 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5c2a, gbc.sp());
        EXPECT(0x1b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02F3
        gbc.setState(0x823, 0xe32b, 0x1720, 0xa587, 0x80e5, 0x4d6b, 0x1, 0x1);
        gbc.writeMem(0x823, { 0x40 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe32b, gbc.sp());
        EXPECT(0x824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02F4
        gbc.setState(0xd9e4, 0xa8d7, 0xeb60, 0x4818, 0x7367, 0xff64, 0x1, 0x1);
        gbc.writeMem(0xd9e4, { 0x40 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa8d7, gbc.sp());
        EXPECT(0xd9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd9e4));
        // 40 02F5
        gbc.setState(0xeba7, 0x486c, 0xdd60, 0xd6ad, 0x3ddd, 0xd652, 0x0, 0x0);
        gbc.writeMem(0xeba7, { 0x40 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x486c, gbc.sp());
        EXPECT(0xeba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xeba7));
        // 40 02F6
        gbc.setState(0x741f, 0x115f, 0xab90, 0x97b1, 0x237c, 0xe6bc, 0x1, 0x1);
        gbc.writeMem(0x741f, { 0x40 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x115f, gbc.sp());
        EXPECT(0x7420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02F7
        gbc.setState(0xe3a6, 0x1035, 0xc360, 0x3933, 0x56a, 0x6726, 0x1, 0x0);
        gbc.writeMem(0xe3a6, { 0x40 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1035, gbc.sp());
        EXPECT(0xe3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe3a6));
        // 40 02F8
        gbc.setState(0x56e2, 0xe197, 0xda0, 0xaa59, 0xaa8c, 0x4104, 0x1, 0x1);
        gbc.writeMem(0x56e2, { 0x40 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe197, gbc.sp());
        EXPECT(0x56e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02F9
        gbc.setState(0x5c7, 0x8bc, 0x3830, 0x3709, 0xb82f, 0x9e9b, 0x1, 0x0);
        gbc.writeMem(0x5c7, { 0x40 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8bc, gbc.sp());
        EXPECT(0x5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02FA
        gbc.setState(0xf2f, 0x5a4b, 0x3fc0, 0x24e7, 0xd15a, 0x5d36, 0x0, 0x0);
        gbc.writeMem(0xf2f, { 0x40 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5a4b, gbc.sp());
        EXPECT(0xf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 02FB
        gbc.setState(0x69af, 0x9143, 0x9670, 0x3c9b, 0xdd8a, 0xb933, 0x0, 0x1);
        gbc.writeMem(0x69af, { 0x40 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9143, gbc.sp());
        EXPECT(0x69b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02FC
        gbc.setState(0xef3a, 0x93d3, 0x140, 0x1af3, 0x679d, 0xccf9, 0x1, 0x0);
        gbc.writeMem(0xef3a, { 0x40 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x93d3, gbc.sp());
        EXPECT(0xef3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xef3a));
        // 40 02FD
        gbc.setState(0xbee6, 0xc4c9, 0x47a0, 0x2af3, 0x59e5, 0xa488, 0x0, 0x0);
        gbc.writeMem(0xbee6, { 0x40 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc4c9, gbc.sp());
        EXPECT(0xbee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbee6));
        // 40 02FE
        gbc.setState(0x4a5a, 0x38b5, 0x9770, 0x4fb2, 0x93c2, 0x7a26, 0x1, 0x0);
        gbc.writeMem(0x4a5a, { 0x40 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x38b5, gbc.sp());
        EXPECT(0x4a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 02FF
        gbc.setState(0x187d, 0x5245, 0x4820, 0x6a97, 0x6e44, 0xaa7e, 0x1, 0x0);
        gbc.writeMem(0x187d, { 0x40 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5245, gbc.sp());
        EXPECT(0x187e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0300
        gbc.setState(0x6c8, 0xfe16, 0xd8b0, 0xee5c, 0x22b0, 0xe608, 0x0, 0x1);
        gbc.writeMem(0x6c8, { 0x40 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfe16, gbc.sp());
        EXPECT(0x6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0301
        gbc.setState(0x8e03, 0xd2c6, 0x2f00, 0x9453, 0x5792, 0xd7bd, 0x0, 0x1);
        gbc.writeMem(0x8e03, { 0x40 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd2c6, gbc.sp());
        EXPECT(0x8e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8e03));
        // 40 0302
        gbc.setState(0x4bdd, 0x5b32, 0xc4e0, 0x22df, 0x7e07, 0xca31, 0x0, 0x1);
        gbc.writeMem(0x4bdd, { 0x40 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5b32, gbc.sp());
        EXPECT(0x4bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0303
        gbc.setState(0xc500, 0x19fb, 0x850, 0xfcc, 0xdfb2, 0x28c4, 0x0, 0x1);
        gbc.writeMem(0xc500, { 0x40 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x19fb, gbc.sp());
        EXPECT(0xc501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc500));
        // 40 0304
        gbc.setState(0x583, 0xc818, 0x9cd0, 0x65b4, 0x4b07, 0xae41, 0x1, 0x1);
        gbc.writeMem(0x583, { 0x40 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc818, gbc.sp());
        EXPECT(0x584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0305
        gbc.setState(0xcba7, 0x2e2e, 0xf960, 0xd7dd, 0xf80d, 0xf2ac, 0x0, 0x1);
        gbc.writeMem(0xcba7, { 0x40 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2e2e, gbc.sp());
        EXPECT(0xcba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcba7));
        // 40 0306
        gbc.setState(0xa362, 0xb8c3, 0x4630, 0xe6af, 0xe69e, 0xd8fb, 0x1, 0x0);
        gbc.writeMem(0xa362, { 0x40 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb8c3, gbc.sp());
        EXPECT(0xa363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa362));
        // 40 0307
        gbc.setState(0x789c, 0x367e, 0x8b0, 0x515d, 0x4e5f, 0x65d9, 0x0, 0x0);
        gbc.writeMem(0x789c, { 0x40 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x367e, gbc.sp());
        EXPECT(0x789d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0308
        gbc.setState(0x6fb, 0xe04a, 0x53d0, 0xdc7f, 0x7c8f, 0xa632, 0x0, 0x0);
        gbc.writeMem(0x6fb, { 0x40 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe04a, gbc.sp());
        EXPECT(0x6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0309
        gbc.setState(0xe35, 0x30ca, 0xb530, 0x18ae, 0x7807, 0x1439, 0x1, 0x0);
        gbc.writeMem(0xe35, { 0x40 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x30ca, gbc.sp());
        EXPECT(0xe36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 030B
        gbc.setState(0x493a, 0xa79c, 0x41e0, 0x830b, 0xb3db, 0x72a9, 0x1, 0x0);
        gbc.writeMem(0x493a, { 0x40 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa79c, gbc.sp());
        EXPECT(0x493b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 030C
        gbc.setState(0x99f7, 0x47d8, 0x5a10, 0x765d, 0xf9e7, 0x8e98, 0x0, 0x1);
        gbc.writeMem(0x99f7, { 0x40 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x47d8, gbc.sp());
        EXPECT(0x99f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x99f7));
        // 40 030E
        gbc.setState(0xcdff, 0x6f74, 0xe170, 0xe27c, 0xca9, 0x8816, 0x1, 0x0);
        gbc.writeMem(0xcdff, { 0x40 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6f74, gbc.sp());
        EXPECT(0xce00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcdff));
        // 40 030F
        gbc.setState(0x30a, 0x4bd3, 0x9630, 0x3145, 0xef3d, 0x2f9, 0x1, 0x0);
        gbc.writeMem(0x30a, { 0x40 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4bd3, gbc.sp());
        EXPECT(0x30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0310
        gbc.setState(0xc3a7, 0x3538, 0x4cc0, 0xd4bc, 0x570d, 0x7c02, 0x1, 0x1);
        gbc.writeMem(0xc3a7, { 0x40 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3538, gbc.sp());
        EXPECT(0xc3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc3a7));
        // 40 0311
        gbc.setState(0x9b61, 0xf6fd, 0xeec0, 0x6bad, 0x3c01, 0x7abb, 0x1, 0x1);
        gbc.writeMem(0x9b61, { 0x40 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf6fd, gbc.sp());
        EXPECT(0x9b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9b61));
        // 40 0312
        gbc.setState(0x3b03, 0xd152, 0x4490, 0x2b55, 0xc089, 0x7ca1, 0x1, 0x0);
        gbc.writeMem(0x3b03, { 0x40 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd152, gbc.sp());
        EXPECT(0x3b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0313
        gbc.setState(0x5cd7, 0x8210, 0xe9f0, 0xc7e9, 0xea8b, 0x267d, 0x0, 0x1);
        gbc.writeMem(0x5cd7, { 0x40 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8210, gbc.sp());
        EXPECT(0x5cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0314
        gbc.setState(0xc54a, 0x7bc0, 0x7b50, 0x8de3, 0x52b2, 0x70ab, 0x0, 0x0);
        gbc.writeMem(0xc54a, { 0x40 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7bc0, gbc.sp());
        EXPECT(0xc54b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc54a));
        // 40 0315
        gbc.setState(0x1486, 0xf6e, 0x3e60, 0x6c7, 0x62e0, 0x7048, 0x1, 0x0);
        gbc.writeMem(0x1486, { 0x40 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf6e, gbc.sp());
        EXPECT(0x1487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0316
        gbc.setState(0x3de2, 0x1a12, 0x23e0, 0x8c24, 0xc7ed, 0x40b5, 0x1, 0x0);
        gbc.writeMem(0x3de2, { 0x40 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1a12, gbc.sp());
        EXPECT(0x3de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0317
        gbc.setState(0x6002, 0x217a, 0xa660, 0x2257, 0x7b30, 0x28fe, 0x1, 0x1);
        gbc.writeMem(0x6002, { 0x40 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x217a, gbc.sp());
        EXPECT(0x6003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0318
        gbc.setState(0x8fc4, 0x7175, 0x5800, 0x6da6, 0x8432, 0xf94c, 0x0, 0x0);
        gbc.writeMem(0x8fc4, { 0x40 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7175, gbc.sp());
        EXPECT(0x8fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8fc4));
        // 40 0319
        gbc.setState(0x71a8, 0x8fee, 0x3410, 0x9601, 0xc514, 0xb4ee, 0x0, 0x1);
        gbc.writeMem(0x71a8, { 0x40 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8fee, gbc.sp());
        EXPECT(0x71a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 031A
        gbc.setState(0x532a, 0x95b7, 0xdb40, 0x3c18, 0x84cf, 0x7eba, 0x0, 0x1);
        gbc.writeMem(0x532a, { 0x40 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x95b7, gbc.sp());
        EXPECT(0x532b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 031B
        gbc.setState(0xb9a8, 0x8f73, 0x85b0, 0x76e6, 0x3c33, 0x5163, 0x1, 0x1);
        gbc.writeMem(0xb9a8, { 0x40 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8f73, gbc.sp());
        EXPECT(0xb9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb9a8));
        // 40 031C
        gbc.setState(0xac08, 0xc71e, 0x2560, 0x4285, 0xfdf8, 0x63a, 0x0, 0x1);
        gbc.writeMem(0xac08, { 0x40 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc71e, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xac08));
        // 40 031D
        gbc.setState(0x8666, 0x77fa, 0xf270, 0x2930, 0x1bd9, 0xc01a, 0x0, 0x0);
        gbc.writeMem(0x8666, { 0x40 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x77fa, gbc.sp());
        EXPECT(0x8667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8666));
        // 40 031E
        gbc.setState(0x676c, 0x343b, 0xf920, 0x34e5, 0x52d0, 0xd48f, 0x1, 0x1);
        gbc.writeMem(0x676c, { 0x40 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x343b, gbc.sp());
        EXPECT(0x676d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0320
        gbc.setState(0x9cc1, 0xb87c, 0x6250, 0xfdd2, 0x4204, 0xc800, 0x0, 0x1);
        gbc.writeMem(0x9cc1, { 0x40 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb87c, gbc.sp());
        EXPECT(0x9cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9cc1));
        // 40 0321
        gbc.setState(0xe1de, 0x27fc, 0xd410, 0x3d5a, 0x3f44, 0xcb0c, 0x1, 0x1);
        gbc.writeMem(0xe1de, { 0x40 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x27fc, gbc.sp());
        EXPECT(0xe1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe1de));
        // 40 0322
        gbc.setState(0xb23a, 0x7ec6, 0xeb0, 0x7a82, 0xa866, 0xa0a3, 0x1, 0x0);
        gbc.writeMem(0xb23a, { 0x40 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7ec6, gbc.sp());
        EXPECT(0xb23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb23a));
        // 40 0323
        gbc.setState(0xd792, 0xeed7, 0xdae0, 0xeb09, 0xca5b, 0xb5b, 0x1, 0x1);
        gbc.writeMem(0xd792, { 0x40 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xeed7, gbc.sp());
        EXPECT(0xd793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd792));
        // 40 0324
        gbc.setState(0xe58, 0x7de5, 0x1850, 0x78b5, 0x43d8, 0x2456, 0x1, 0x0);
        gbc.writeMem(0xe58, { 0x40 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7de5, gbc.sp());
        EXPECT(0xe59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0325
        gbc.setState(0x3dfb, 0x5c7c, 0x1790, 0x9f5b, 0xcc1f, 0xf92b, 0x1, 0x1);
        gbc.writeMem(0x3dfb, { 0x40 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5c7c, gbc.sp());
        EXPECT(0x3dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0326
        gbc.setState(0x6e87, 0x6768, 0xf2c0, 0xa095, 0x8080, 0x5944, 0x1, 0x1);
        gbc.writeMem(0x6e87, { 0x40 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6768, gbc.sp());
        EXPECT(0x6e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0327
        gbc.setState(0x93d9, 0x532f, 0x55d0, 0xfb15, 0xb227, 0x2bd0, 0x1, 0x1);
        gbc.writeMem(0x93d9, { 0x40 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x532f, gbc.sp());
        EXPECT(0x93da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x93d9));
        // 40 0328
        gbc.setState(0x994f, 0xc3da, 0xb70, 0x9709, 0xf5f, 0x25f1, 0x0, 0x1);
        gbc.writeMem(0x994f, { 0x40 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc3da, gbc.sp());
        EXPECT(0x9950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x994f));
        // 40 0329
        gbc.setState(0xe07f, 0x1ae, 0xa680, 0x7372, 0x19b8, 0x16d5, 0x0, 0x0);
        gbc.writeMem(0xe07f, { 0x40 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1ae, gbc.sp());
        EXPECT(0xe080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe07f));
        // 40 032A
        gbc.setState(0x3367, 0xc884, 0xbc60, 0x3db5, 0x476, 0x2b83, 0x0, 0x0);
        gbc.writeMem(0x3367, { 0x40 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc884, gbc.sp());
        EXPECT(0x3368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 032B
        gbc.setState(0x7321, 0xdb30, 0xdaa0, 0xfb3a, 0x528b, 0xb9db, 0x1, 0x1);
        gbc.writeMem(0x7321, { 0x40 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdb30, gbc.sp());
        EXPECT(0x7322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 032C
        gbc.setState(0xd04e, 0x65ec, 0x47e0, 0x1c77, 0x81a6, 0xa750, 0x0, 0x0);
        gbc.writeMem(0xd04e, { 0x40 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x65ec, gbc.sp());
        EXPECT(0xd04f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd04e));
        // 40 032D
        gbc.setState(0xc7b1, 0x31c3, 0x7cf0, 0xe1a6, 0xc58e, 0xadc1, 0x0, 0x1);
        gbc.writeMem(0xc7b1, { 0x40 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x31c3, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc7b1));
        // 40 032E
        gbc.setState(0xbbe6, 0x79b1, 0x650, 0x3cc1, 0x8a79, 0x9432, 0x1, 0x0);
        gbc.writeMem(0xbbe6, { 0x40 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x79b1, gbc.sp());
        EXPECT(0xbbe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbbe6));
        // 40 032F
        gbc.setState(0x26c2, 0xa65d, 0x6710, 0x4551, 0x770a, 0x453f, 0x1, 0x0);
        gbc.writeMem(0x26c2, { 0x40 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa65d, gbc.sp());
        EXPECT(0x26c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0330
        gbc.setState(0xb04a, 0x2d2a, 0x42b0, 0x6ec2, 0xc84f, 0xc7f0, 0x0, 0x0);
        gbc.writeMem(0xb04a, { 0x40 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2d2a, gbc.sp());
        EXPECT(0xb04b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb04a));
        // 40 0331
        gbc.setState(0xbb71, 0xbd3c, 0xc330, 0x8a52, 0x9d05, 0x39cb, 0x0, 0x1);
        gbc.writeMem(0xbb71, { 0x40 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbd3c, gbc.sp());
        EXPECT(0xbb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbb71));
        // 40 0332
        gbc.setState(0x1a6, 0x4e99, 0x6df0, 0x31, 0xcda6, 0x6901, 0x0, 0x0);
        gbc.writeMem(0x1a6, { 0x40 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4e99, gbc.sp());
        EXPECT(0x1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0333
        gbc.setState(0x2554, 0x7558, 0x77e0, 0xfe58, 0xdaa9, 0x21a7, 0x1, 0x0);
        gbc.writeMem(0x2554, { 0x40 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7558, gbc.sp());
        EXPECT(0x2555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0334
        gbc.setState(0x54e6, 0x45a0, 0x1dd0, 0xa51e, 0x8731, 0x8769, 0x0, 0x0);
        gbc.writeMem(0x54e6, { 0x40 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x45a0, gbc.sp());
        EXPECT(0x54e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0335
        gbc.setState(0xbc50, 0xd5ca, 0x7390, 0xfe36, 0xe556, 0xb5c0, 0x0, 0x0);
        gbc.writeMem(0xbc50, { 0x40 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd5ca, gbc.sp());
        EXPECT(0xbc51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbc50));
        // 40 0336
        gbc.setState(0xe057, 0x2931, 0x9280, 0x23ac, 0x720b, 0x62ad, 0x0, 0x0);
        gbc.writeMem(0xe057, { 0x40 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2931, gbc.sp());
        EXPECT(0xe058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe057));
        // 40 0338
        gbc.setState(0xd632, 0x8acc, 0x6320, 0xb564, 0x3cf7, 0x5846, 0x1, 0x1);
        gbc.writeMem(0xd632, { 0x40 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8acc, gbc.sp());
        EXPECT(0xd633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd632));
        // 40 0339
        gbc.setState(0xd62, 0xd88a, 0xf670, 0xd0fc, 0x8af5, 0x9030, 0x1, 0x1);
        gbc.writeMem(0xd62, { 0x40 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd88a, gbc.sp());
        EXPECT(0xd63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 033A
        gbc.setState(0xcffb, 0x7825, 0x4280, 0x3978, 0x9b77, 0x28a7, 0x1, 0x0);
        gbc.writeMem(0xcffb, { 0x40 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7825, gbc.sp());
        EXPECT(0xcffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcffb));
        // 40 033B
        gbc.setState(0x22a0, 0xb8c8, 0x8fa0, 0x127d, 0xb7b5, 0x975c, 0x0, 0x1);
        gbc.writeMem(0x22a0, { 0x40 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb8c8, gbc.sp());
        EXPECT(0x22a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 033C
        gbc.setState(0x6ba3, 0xdb91, 0xc0f0, 0xbc4, 0x806e, 0xa179, 0x0, 0x1);
        gbc.writeMem(0x6ba3, { 0x40 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdb91, gbc.sp());
        EXPECT(0x6ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 033D
        gbc.setState(0xcb72, 0x9664, 0x8ec0, 0x7307, 0x6860, 0xa77a, 0x1, 0x1);
        gbc.writeMem(0xcb72, { 0x40 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9664, gbc.sp());
        EXPECT(0xcb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcb72));
        // 40 033E
        gbc.setState(0xb681, 0x9af1, 0x50f0, 0xb724, 0x958, 0xac27, 0x0, 0x1);
        gbc.writeMem(0xb681, { 0x40 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9af1, gbc.sp());
        EXPECT(0xb682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb681));
        // 40 033F
        gbc.setState(0x64e7, 0x8f63, 0x1af0, 0x850b, 0xebfc, 0xe0fb, 0x1, 0x0);
        gbc.writeMem(0x64e7, { 0x40 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8f63, gbc.sp());
        EXPECT(0x64e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0340
        gbc.setState(0xbe80, 0xd671, 0x7250, 0xdd28, 0xd072, 0x1f21, 0x1, 0x0);
        gbc.writeMem(0xbe80, { 0x40 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd671, gbc.sp());
        EXPECT(0xbe81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbe80));
        // 40 0341
        gbc.setState(0x3990, 0xc4c6, 0x6000, 0x1670, 0x4b2c, 0x1f81, 0x1, 0x0);
        gbc.writeMem(0x3990, { 0x40 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc4c6, gbc.sp());
        EXPECT(0x3991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0342
        gbc.setState(0xc50a, 0xf781, 0xb6b0, 0xc733, 0xeda1, 0x4aeb, 0x1, 0x0);
        gbc.writeMem(0xc50a, { 0x40 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf781, gbc.sp());
        EXPECT(0xc50b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc50a));
        // 40 0343
        gbc.setState(0x5ae6, 0x8eca, 0xe200, 0x2fa6, 0x9fc, 0xc424, 0x0, 0x1);
        gbc.writeMem(0x5ae6, { 0x40 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8eca, gbc.sp());
        EXPECT(0x5ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0344
        gbc.setState(0x9cec, 0xdac0, 0xd4b0, 0x7e86, 0x5b07, 0x1f87, 0x0, 0x1);
        gbc.writeMem(0x9cec, { 0x40 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdac0, gbc.sp());
        EXPECT(0x9ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9cec));
        // 40 0345
        gbc.setState(0x98f, 0x2fad, 0x7ff0, 0xa567, 0x1189, 0xde86, 0x0, 0x0);
        gbc.writeMem(0x98f, { 0x40 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2fad, gbc.sp());
        EXPECT(0x990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0346
        gbc.setState(0x352c, 0x991e, 0xf1d0, 0xf669, 0x13c0, 0x38e2, 0x1, 0x1);
        gbc.writeMem(0x352c, { 0x40 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x991e, gbc.sp());
        EXPECT(0x352d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0347
        gbc.setState(0xbe91, 0xdc25, 0xb3f0, 0xb02c, 0xa2e2, 0xccfa, 0x1, 0x0);
        gbc.writeMem(0xbe91, { 0x40 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdc25, gbc.sp());
        EXPECT(0xbe92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xbe91));
        // 40 0348
        gbc.setState(0xbba, 0x5c2f, 0x1e60, 0x8638, 0x4562, 0x78fe, 0x0, 0x1);
        gbc.writeMem(0xbba, { 0x40 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5c2f, gbc.sp());
        EXPECT(0xbbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0349
        gbc.setState(0x9be4, 0xfeaa, 0x7990, 0x1316, 0xa59d, 0x42c9, 0x1, 0x1);
        gbc.writeMem(0x9be4, { 0x40 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfeaa, gbc.sp());
        EXPECT(0x9be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9be4));
        // 40 034A
        gbc.setState(0x91a2, 0x7b50, 0xdd80, 0xe4f, 0x7dcb, 0x6043, 0x1, 0x1);
        gbc.writeMem(0x91a2, { 0x40 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7b50, gbc.sp());
        EXPECT(0x91a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x91a2));
        // 40 034B
        gbc.setState(0xdbff, 0x5bdd, 0xec50, 0xc99f, 0xcd54, 0xd1f9, 0x0, 0x1);
        gbc.writeMem(0xdbff, { 0x40 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5bdd, gbc.sp());
        EXPECT(0xdc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdbff));
        // 40 034C
        gbc.setState(0x439f, 0x4e42, 0x26d0, 0x2091, 0xc6c5, 0x6601, 0x1, 0x1);
        gbc.writeMem(0x439f, { 0x40 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4e42, gbc.sp());
        EXPECT(0x43a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 034D
        gbc.setState(0xe60, 0x8866, 0x1c00, 0xf7d, 0x7e02, 0x45ca, 0x0, 0x1);
        gbc.writeMem(0xe60, { 0x40 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8866, gbc.sp());
        EXPECT(0xe61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 034E
        gbc.setState(0xb482, 0x1bde, 0x5390, 0xa186, 0xe598, 0xa37f, 0x0, 0x0);
        gbc.writeMem(0xb482, { 0x40 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1bde, gbc.sp());
        EXPECT(0xb483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb482));
        // 40 034F
        gbc.setState(0xd203, 0xbb60, 0xa390, 0x1681, 0x6030, 0xc12, 0x1, 0x1);
        gbc.writeMem(0xd203, { 0x40 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbb60, gbc.sp());
        EXPECT(0xd204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd203));
        // 40 0350
        gbc.setState(0x4c30, 0x1143, 0xd480, 0x6785, 0x7bf5, 0xb640, 0x0, 0x0);
        gbc.writeMem(0x4c30, { 0x40 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1143, gbc.sp());
        EXPECT(0x4c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0351
        gbc.setState(0xea1f, 0x2ca4, 0x57c0, 0x5b4f, 0x72bd, 0xb935, 0x0, 0x1);
        gbc.writeMem(0xea1f, { 0x40 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2ca4, gbc.sp());
        EXPECT(0xea20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xea1f));
        // 40 0352
        gbc.setState(0x9561, 0x4ebe, 0xe5e0, 0x4481, 0xa11, 0x219c, 0x1, 0x0);
        gbc.writeMem(0x9561, { 0x40 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4ebe, gbc.sp());
        EXPECT(0x9562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9561));
        // 40 0353
        gbc.setState(0x7d84, 0xcc73, 0x4150, 0xb4f0, 0x526e, 0xe5d3, 0x0, 0x0);
        gbc.writeMem(0x7d84, { 0x40 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcc73, gbc.sp());
        EXPECT(0x7d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0354
        gbc.setState(0xab5c, 0xf8d1, 0xff90, 0x3490, 0x8be9, 0x627a, 0x0, 0x1);
        gbc.writeMem(0xab5c, { 0x40 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf8d1, gbc.sp());
        EXPECT(0xab5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xab5c));
        // 40 0355
        gbc.setState(0x6780, 0x877d, 0x8870, 0x43f7, 0x46b3, 0x2ce3, 0x0, 0x0);
        gbc.writeMem(0x6780, { 0x40 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x877d, gbc.sp());
        EXPECT(0x6781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0356
        gbc.setState(0xa317, 0x60f6, 0x8750, 0xcb6c, 0x2df0, 0x331a, 0x0, 0x1);
        gbc.writeMem(0xa317, { 0x40 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x60f6, gbc.sp());
        EXPECT(0xa318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa317));
        // 40 0357
        gbc.setState(0xa7ce, 0x84ba, 0xa150, 0x3629, 0x1ad4, 0x84db, 0x1, 0x0);
        gbc.writeMem(0xa7ce, { 0x40 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x84ba, gbc.sp());
        EXPECT(0xa7cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa7ce));
        // 40 0358
        gbc.setState(0x2f65, 0xffa4, 0x3e0, 0x4e85, 0x88da, 0x94fd, 0x1, 0x1);
        gbc.writeMem(0x2f65, { 0x40 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xffa4, gbc.sp());
        EXPECT(0x2f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0359
        gbc.setState(0xdb01, 0x828f, 0x9b40, 0x13aa, 0x731, 0x621b, 0x1, 0x1);
        gbc.writeMem(0xdb01, { 0x40 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x828f, gbc.sp());
        EXPECT(0xdb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdb01));
        // 40 035A
        gbc.setState(0xca0b, 0xd08d, 0xcf30, 0x35c1, 0x719, 0xbe77, 0x0, 0x1);
        gbc.writeMem(0xca0b, { 0x40 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd08d, gbc.sp());
        EXPECT(0xca0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xca0b));
        // 40 035B
        gbc.setState(0x4f59, 0x3cf9, 0xe8f0, 0x58fe, 0x3ac7, 0x6617, 0x1, 0x1);
        gbc.writeMem(0x4f59, { 0x40 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3cf9, gbc.sp());
        EXPECT(0x4f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 035C
        gbc.setState(0xa364, 0xf552, 0xbba0, 0x63c6, 0x6886, 0x76ad, 0x0, 0x1);
        gbc.writeMem(0xa364, { 0x40 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf552, gbc.sp());
        EXPECT(0xa365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa364));
        // 40 035D
        gbc.setState(0x21a2, 0x1b72, 0xd630, 0x7389, 0xc973, 0x8a26, 0x0, 0x1);
        gbc.writeMem(0x21a2, { 0x40 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1b72, gbc.sp());
        EXPECT(0x21a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 035E
        gbc.setState(0x5d29, 0xfc86, 0x8f10, 0xefd7, 0x6a5b, 0xec33, 0x1, 0x0);
        gbc.writeMem(0x5d29, { 0x40 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfc86, gbc.sp());
        EXPECT(0x5d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 035F
        gbc.setState(0xec59, 0x9650, 0xafd0, 0xa532, 0x68a1, 0x8a22, 0x1, 0x1);
        gbc.writeMem(0xec59, { 0x40 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9650, gbc.sp());
        EXPECT(0xec5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xec59));
        // 40 0360
        gbc.setState(0x40e2, 0x45ed, 0xbbb0, 0x5125, 0x5cc6, 0xeff6, 0x0, 0x0);
        gbc.writeMem(0x40e2, { 0x40 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x45ed, gbc.sp());
        EXPECT(0x40e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0361
        gbc.setState(0x7a21, 0xed30, 0x1220, 0x4c9a, 0xa862, 0x826c, 0x0, 0x1);
        gbc.writeMem(0x7a21, { 0x40 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xed30, gbc.sp());
        EXPECT(0x7a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0362
        gbc.setState(0x4685, 0x5de, 0x32a0, 0x74ea, 0xa00f, 0xa941, 0x1, 0x0);
        gbc.writeMem(0x4685, { 0x40 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5de, gbc.sp());
        EXPECT(0x4686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0363
        gbc.setState(0x47d0, 0xbbb8, 0xeaf0, 0x12a9, 0x9101, 0xcdfc, 0x0, 0x0);
        gbc.writeMem(0x47d0, { 0x40 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbbb8, gbc.sp());
        EXPECT(0x47d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0364
        gbc.setState(0x2d87, 0xec3a, 0x7380, 0x18d1, 0x412c, 0x8aa0, 0x0, 0x0);
        gbc.writeMem(0x2d87, { 0x40 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xec3a, gbc.sp());
        EXPECT(0x2d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0365
        gbc.setState(0xb57b, 0x2f, 0x4e00, 0x4010, 0x530, 0xa22a, 0x0, 0x1);
        gbc.writeMem(0xb57b, { 0x40 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2f, gbc.sp());
        EXPECT(0xb57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb57b));
        // 40 0366
        gbc.setState(0x45b5, 0x145, 0x5d80, 0xaa7a, 0x49a1, 0x4e31, 0x0, 0x0);
        gbc.writeMem(0x45b5, { 0x40 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x145, gbc.sp());
        EXPECT(0x45b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0367
        gbc.setState(0x8fb, 0xfb09, 0x37b0, 0xf0ce, 0x5ee0, 0xe37d, 0x1, 0x0);
        gbc.writeMem(0x8fb, { 0x40 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfb09, gbc.sp());
        EXPECT(0x8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0368
        gbc.setState(0x55fa, 0x2e60, 0xb450, 0x402f, 0x5271, 0x5615, 0x0, 0x0);
        gbc.writeMem(0x55fa, { 0x40 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2e60, gbc.sp());
        EXPECT(0x55fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0369
        gbc.setState(0xa318, 0x3f1e, 0x2c00, 0x4be2, 0xf358, 0x1eda, 0x1, 0x0);
        gbc.writeMem(0xa318, { 0x40 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3f1e, gbc.sp());
        EXPECT(0xa319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa318));
        // 40 036A
        gbc.setState(0xc239, 0xa4fa, 0xe960, 0xa1f5, 0x43e9, 0xa994, 0x1, 0x1);
        gbc.writeMem(0xc239, { 0x40 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa4fa, gbc.sp());
        EXPECT(0xc23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc239));
        // 40 036B
        gbc.setState(0x6cb9, 0x9b4f, 0xc900, 0xc7d7, 0xe94, 0xa6dd, 0x1, 0x1);
        gbc.writeMem(0x6cb9, { 0x40 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9b4f, gbc.sp());
        EXPECT(0x6cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 036C
        gbc.setState(0x8e6, 0x2ea, 0xdf10, 0xb704, 0xa1db, 0x3819, 0x0, 0x0);
        gbc.writeMem(0x8e6, { 0x40 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2ea, gbc.sp());
        EXPECT(0x8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 036D
        gbc.setState(0x8d70, 0xf232, 0x61d0, 0x7730, 0xd1dc, 0xe1e4, 0x0, 0x0);
        gbc.writeMem(0x8d70, { 0x40 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf232, gbc.sp());
        EXPECT(0x8d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8d70));
        // 40 036E
        gbc.setState(0x6dd, 0x4d33, 0xcfb0, 0x9a53, 0x93e, 0x2ad3, 0x1, 0x0);
        gbc.writeMem(0x6dd, { 0x40 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4d33, gbc.sp());
        EXPECT(0x6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 036F
        gbc.setState(0x52a2, 0xe4a0, 0x5950, 0x3cd2, 0x39f4, 0x9292, 0x1, 0x1);
        gbc.writeMem(0x52a2, { 0x40 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe4a0, gbc.sp());
        EXPECT(0x52a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0370
        gbc.setState(0x83dc, 0x7fbd, 0x3cf0, 0x253, 0xe5d6, 0x2fd9, 0x0, 0x0);
        gbc.writeMem(0x83dc, { 0x40 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7fbd, gbc.sp());
        EXPECT(0x83dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x83dc));
        // 40 0371
        gbc.setState(0x23f7, 0x716e, 0x1100, 0xcefd, 0x37a5, 0xa7d5, 0x1, 0x0);
        gbc.writeMem(0x23f7, { 0x40 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x716e, gbc.sp());
        EXPECT(0x23f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0372
        gbc.setState(0xafad, 0xcf3, 0x5fc0, 0xea30, 0xb9e, 0x6dee, 0x0, 0x1);
        gbc.writeMem(0xafad, { 0x40 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcf3, gbc.sp());
        EXPECT(0xafae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xafad));
        // 40 0373
        gbc.setState(0x9740, 0x9641, 0x6150, 0xccce, 0x73c1, 0x649f, 0x1, 0x1);
        gbc.writeMem(0x9740, { 0x40 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9641, gbc.sp());
        EXPECT(0x9741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9740));
        // 40 0374
        gbc.setState(0xb5c5, 0xb7e4, 0x4380, 0xc4f1, 0x1d2, 0x3291, 0x0, 0x0);
        gbc.writeMem(0xb5c5, { 0x40 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb7e4, gbc.sp());
        EXPECT(0xb5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb5c5));
        // 40 0375
        gbc.setState(0x4be5, 0x55c8, 0x5e30, 0x6603, 0xfb66, 0xd942, 0x1, 0x0);
        gbc.writeMem(0x4be5, { 0x40 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x55c8, gbc.sp());
        EXPECT(0x4be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0376
        gbc.setState(0xc9a8, 0x67c4, 0x83d0, 0xcbe6, 0xec0d, 0xbf6, 0x1, 0x1);
        gbc.writeMem(0xc9a8, { 0x40 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x67c4, gbc.sp());
        EXPECT(0xc9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc9a8));
        // 40 0377
        gbc.setState(0x2f68, 0xb82d, 0xc0f0, 0x5e4f, 0xac23, 0x6c52, 0x0, 0x0);
        gbc.writeMem(0x2f68, { 0x40 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb82d, gbc.sp());
        EXPECT(0x2f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0378
        gbc.setState(0xcd0e, 0x5409, 0x1720, 0x91e7, 0x7bcb, 0x33b3, 0x0, 0x0);
        gbc.writeMem(0xcd0e, { 0x40 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5409, gbc.sp());
        EXPECT(0xcd0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcd0e));
        // 40 0379
        gbc.setState(0x983, 0x5ef7, 0x6e40, 0xdc0a, 0xa7a9, 0x786e, 0x0, 0x0);
        gbc.writeMem(0x983, { 0x40 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5ef7, gbc.sp());
        EXPECT(0x984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 037A
        gbc.setState(0x67d, 0xb88f, 0xf050, 0x3b9d, 0xc8b7, 0x9e6e, 0x0, 0x0);
        gbc.writeMem(0x67d, { 0x40 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb88f, gbc.sp());
        EXPECT(0x67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 037B
        gbc.setState(0x2335, 0x3408, 0xc6a0, 0x9741, 0xb3e1, 0xceb9, 0x0, 0x1);
        gbc.writeMem(0x2335, { 0x40 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3408, gbc.sp());
        EXPECT(0x2336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 037C
        gbc.setState(0xc759, 0xab15, 0x740, 0x3737, 0x7b50, 0xeed9, 0x0, 0x0);
        gbc.writeMem(0xc759, { 0x40 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xab15, gbc.sp());
        EXPECT(0xc75a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc759));
        // 40 037D
        gbc.setState(0x18d6, 0x3b9b, 0x48d0, 0x213b, 0x5b7a, 0x4722, 0x1, 0x0);
        gbc.writeMem(0x18d6, { 0x40 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3b9b, gbc.sp());
        EXPECT(0x18d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 037E
        gbc.setState(0xf17, 0xb64d, 0xcf50, 0xcc00, 0xa8be, 0x892, 0x1, 0x1);
        gbc.writeMem(0xf17, { 0x40 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb64d, gbc.sp());
        EXPECT(0xf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 037F
        gbc.setState(0xd771, 0xde26, 0x7c0, 0xe729, 0x13e5, 0xfa1e, 0x0, 0x0);
        gbc.writeMem(0xd771, { 0x40 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xde26, gbc.sp());
        EXPECT(0xd772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd771));
        // 40 0380
        gbc.setState(0xb864, 0xbb0b, 0x6b30, 0xdc55, 0x4f3c, 0xc846, 0x0, 0x1);
        gbc.writeMem(0xb864, { 0x40 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbb0b, gbc.sp());
        EXPECT(0xb865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb864));
        // 40 0381
        gbc.setState(0xd69d, 0xfbda, 0xa710, 0x3ad, 0x34eb, 0xec6a, 0x0, 0x1);
        gbc.writeMem(0xd69d, { 0x40 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfbda, gbc.sp());
        EXPECT(0xd69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd69d));
        // 40 0382
        gbc.setState(0xd772, 0x56dd, 0x3260, 0xcd84, 0xb403, 0xc45d, 0x0, 0x0);
        gbc.writeMem(0xd772, { 0x40 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x56dd, gbc.sp());
        EXPECT(0xd773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd772));
        // 40 0384
        gbc.setState(0xea43, 0xe66f, 0xeae0, 0xb421, 0xe933, 0xc3cf, 0x1, 0x0);
        gbc.writeMem(0xea43, { 0x40 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe66f, gbc.sp());
        EXPECT(0xea44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xea43));
        // 40 0385
        gbc.setState(0xd165, 0xfb1a, 0xa50, 0xe6dd, 0xd61, 0xca13, 0x0, 0x1);
        gbc.writeMem(0xd165, { 0x40 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfb1a, gbc.sp());
        EXPECT(0xd166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd165));
        // 40 0386
        gbc.setState(0x4ee3, 0xd117, 0x810, 0x733b, 0x5dc2, 0x8704, 0x1, 0x1);
        gbc.writeMem(0x4ee3, { 0x40 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd117, gbc.sp());
        EXPECT(0x4ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0388
        gbc.setState(0xa3d7, 0xe162, 0xad60, 0x1ada, 0x3e70, 0x797f, 0x0, 0x1);
        gbc.writeMem(0xa3d7, { 0x40 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe162, gbc.sp());
        EXPECT(0xa3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa3d7));
        // 40 0389
        gbc.setState(0x39f8, 0x4b29, 0xd1c0, 0x9753, 0x27d2, 0x2db0, 0x0, 0x1);
        gbc.writeMem(0x39f8, { 0x40 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4b29, gbc.sp());
        EXPECT(0x39f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 038A
        gbc.setState(0x766c, 0x3f26, 0x5e30, 0xfad2, 0x32bb, 0x47c8, 0x0, 0x1);
        gbc.writeMem(0x766c, { 0x40 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3f26, gbc.sp());
        EXPECT(0x766d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 038B
        gbc.setState(0x867c, 0x2608, 0x86c0, 0xbfb4, 0x16c7, 0xbb42, 0x0, 0x1);
        gbc.writeMem(0x867c, { 0x40 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2608, gbc.sp());
        EXPECT(0x867d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x867c));
        // 40 038C
        gbc.setState(0xed8e, 0x5e2f, 0x8d90, 0x4bdb, 0x4d97, 0x9d0f, 0x1, 0x1);
        gbc.writeMem(0xed8e, { 0x40 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5e2f, gbc.sp());
        EXPECT(0xed8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xed8e));
        // 40 038D
        gbc.setState(0xec1b, 0x135a, 0xae90, 0xc8ed, 0x4b06, 0x2c25, 0x1, 0x1);
        gbc.writeMem(0xec1b, { 0x40 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x135a, gbc.sp());
        EXPECT(0xec1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xec1b));
        // 40 038E
        gbc.setState(0x9fe, 0xd77a, 0x2f70, 0x72b0, 0x6e15, 0x1989, 0x0, 0x1);
        gbc.writeMem(0x9fe, { 0x40 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd77a, gbc.sp());
        EXPECT(0x9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 038F
        gbc.setState(0x2e13, 0x8f24, 0x6220, 0x2c78, 0xa4fc, 0x2853, 0x1, 0x1);
        gbc.writeMem(0x2e13, { 0x40 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8f24, gbc.sp());
        EXPECT(0x2e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0390
        gbc.setState(0x50a2, 0x3e73, 0xe4f0, 0x73e3, 0xa47b, 0xf02, 0x0, 0x0);
        gbc.writeMem(0x50a2, { 0x40 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3e73, gbc.sp());
        EXPECT(0x50a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0391
        gbc.setState(0x4044, 0x82b6, 0x9270, 0x912a, 0xa7c1, 0xdc5f, 0x1, 0x0);
        gbc.writeMem(0x4044, { 0x40 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x82b6, gbc.sp());
        EXPECT(0x4045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0392
        gbc.setState(0x17c1, 0xffda, 0x19a0, 0x3f7f, 0x25d, 0xcb96, 0x1, 0x1);
        gbc.writeMem(0x17c1, { 0x40 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xffda, gbc.sp());
        EXPECT(0x17c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 0393
        gbc.setState(0x7f7a, 0x2169, 0xca90, 0xa13c, 0x283, 0xafaf, 0x1, 0x0);
        gbc.writeMem(0x7f7a, { 0x40 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2169, gbc.sp());
        EXPECT(0x7f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0394
        gbc.setState(0xb157, 0xc7f6, 0xaba0, 0x55b5, 0x5775, 0x4301, 0x1, 0x1);
        gbc.writeMem(0xb157, { 0x40 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc7f6, gbc.sp());
        EXPECT(0xb158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb157));
        // 40 0395
        gbc.setState(0x3447, 0x171b, 0xccb0, 0x1772, 0xee29, 0x60b6, 0x0, 0x1);
        gbc.writeMem(0x3447, { 0x40 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x171b, gbc.sp());
        EXPECT(0x3448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0396
        gbc.setState(0x2940, 0x4f89, 0xf2f0, 0x79a8, 0x9d04, 0xfa4e, 0x0, 0x1);
        gbc.writeMem(0x2940, { 0x40 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4f89, gbc.sp());
        EXPECT(0x2941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 0397
        gbc.setState(0x82e6, 0x590a, 0x21e0, 0x656e, 0x84f0, 0x12e, 0x0, 0x1);
        gbc.writeMem(0x82e6, { 0x40 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x590a, gbc.sp());
        EXPECT(0x82e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x82e6));
        // 40 0399
        gbc.setState(0x975, 0x8193, 0x9e90, 0x58cc, 0xdb38, 0xf856, 0x1, 0x0);
        gbc.writeMem(0x975, { 0x40 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8193, gbc.sp());
        EXPECT(0x976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 039A
        gbc.setState(0x5ea, 0xbe2d, 0xfae0, 0x4239, 0x988e, 0x3d2e, 0x0, 0x0);
        gbc.writeMem(0x5ea, { 0x40 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbe2d, gbc.sp());
        EXPECT(0x5eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 039B
        gbc.setState(0x4410, 0x9dd6, 0xa510, 0xe14c, 0xc2f1, 0xcc24, 0x0, 0x0);
        gbc.writeMem(0x4410, { 0x40 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9dd6, gbc.sp());
        EXPECT(0x4411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 039C
        gbc.setState(0xb4da, 0xd82f, 0x8ef0, 0xdd8a, 0xb6c7, 0x8388, 0x0, 0x1);
        gbc.writeMem(0xb4da, { 0x40 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd82f, gbc.sp());
        EXPECT(0xb4db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb4da));
        // 40 039E
        gbc.setState(0xb525, 0xb482, 0xac50, 0x9146, 0x3930, 0x3ced, 0x1, 0x0);
        gbc.writeMem(0xb525, { 0x40 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb482, gbc.sp());
        EXPECT(0xb526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb525));
        // 40 039F
        gbc.setState(0x612c, 0x4f81, 0xbcd0, 0x78d8, 0x7eff, 0x33e9, 0x0, 0x1);
        gbc.writeMem(0x612c, { 0x40 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4f81, gbc.sp());
        EXPECT(0x612d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03A0
        gbc.setState(0xc469, 0xe0af, 0x68a0, 0xca7e, 0xde30, 0xb6e6, 0x1, 0x0);
        gbc.writeMem(0xc469, { 0x40 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe0af, gbc.sp());
        EXPECT(0xc46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc469));
        // 40 03A1
        gbc.setState(0xd473, 0x7827, 0xd840, 0xdfab, 0x2843, 0x5fc4, 0x0, 0x1);
        gbc.writeMem(0xd473, { 0x40 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7827, gbc.sp());
        EXPECT(0xd474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd473));
        // 40 03A2
        gbc.setState(0xcf42, 0xe49d, 0xf4e0, 0xb58e, 0xf1bc, 0xd68b, 0x1, 0x0);
        gbc.writeMem(0xcf42, { 0x40 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe49d, gbc.sp());
        EXPECT(0xcf43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xcf42));
        // 40 03A3
        gbc.setState(0xddc5, 0x83c6, 0xd030, 0x49bf, 0x6d0d, 0x6b70, 0x1, 0x0);
        gbc.writeMem(0xddc5, { 0x40 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x83c6, gbc.sp());
        EXPECT(0xddc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xddc5));
        // 40 03A4
        gbc.setState(0x9879, 0x682f, 0xf5d0, 0x7eb2, 0xc9e9, 0xdc96, 0x0, 0x1);
        gbc.writeMem(0x9879, { 0x40 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x682f, gbc.sp());
        EXPECT(0x987a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9879));
        // 40 03A5
        gbc.setState(0x62a2, 0xb24d, 0xb930, 0xaab, 0xc26e, 0x2b00, 0x0, 0x0);
        gbc.writeMem(0x62a2, { 0x40 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb24d, gbc.sp());
        EXPECT(0x62a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03A6
        gbc.setState(0xb1cd, 0xb40b, 0xdda0, 0xb711, 0x61a5, 0xeaa9, 0x0, 0x0);
        gbc.writeMem(0xb1cd, { 0x40 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb40b, gbc.sp());
        EXPECT(0xb1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb1cd));
        // 40 03A7
        gbc.setState(0x7f5e, 0xa7ce, 0xac90, 0x44c2, 0x6eed, 0xee8a, 0x0, 0x0);
        gbc.writeMem(0x7f5e, { 0x40 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa7ce, gbc.sp());
        EXPECT(0x7f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03A8
        gbc.setState(0x5fc5, 0x9fe3, 0x3800, 0xb13b, 0xc324, 0x9d83, 0x0, 0x1);
        gbc.writeMem(0x5fc5, { 0x40 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9fe3, gbc.sp());
        EXPECT(0x5fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03A9
        gbc.setState(0xaed0, 0x6b0a, 0xd6f0, 0x9d6e, 0x2692, 0x3b4c, 0x0, 0x0);
        gbc.writeMem(0xaed0, { 0x40 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6b0a, gbc.sp());
        EXPECT(0xaed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xaed0));
        // 40 03AA
        gbc.setState(0x6db7, 0x5bcc, 0x7d80, 0xa5fa, 0x2076, 0xfe6b, 0x1, 0x0);
        gbc.writeMem(0x6db7, { 0x40 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5bcc, gbc.sp());
        EXPECT(0x6db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03AC
        gbc.setState(0x1f, 0x5cb5, 0xf630, 0xd732, 0xda6a, 0xbb38, 0x1, 0x0);
        gbc.writeMem(0x1f, { 0x40 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5cb5, gbc.sp());
        EXPECT(0x20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03AD
        gbc.setState(0x51cb, 0xaaea, 0x47f0, 0xf665, 0xc436, 0x4e9, 0x0, 0x1);
        gbc.writeMem(0x51cb, { 0x40 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xaaea, gbc.sp());
        EXPECT(0x51cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03AE
        gbc.setState(0x20c3, 0x225a, 0x2560, 0x3bed, 0xe413, 0x2f62, 0x1, 0x0);
        gbc.writeMem(0x20c3, { 0x40 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x225a, gbc.sp());
        EXPECT(0x20c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03AF
        gbc.setState(0xd0a6, 0x724e, 0xfea0, 0xd69e, 0xc7b2, 0x60cf, 0x1, 0x0);
        gbc.writeMem(0xd0a6, { 0x40 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x724e, gbc.sp());
        EXPECT(0xd0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd0a6));
        // 40 03B0
        gbc.setState(0x98c7, 0x86a6, 0x3a10, 0x670c, 0xa176, 0xa07d, 0x0, 0x1);
        gbc.writeMem(0x98c7, { 0x40 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x86a6, gbc.sp());
        EXPECT(0x98c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x98c7));
        // 40 03B1
        gbc.setState(0x940b, 0x8623, 0x4ca0, 0x80ec, 0xb230, 0x9db, 0x1, 0x0);
        gbc.writeMem(0x940b, { 0x40 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8623, gbc.sp());
        EXPECT(0x940c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x940b));
        // 40 03B2
        gbc.setState(0x4804, 0xc59, 0x3a60, 0x4e1f, 0x6604, 0xbc2f, 0x1, 0x0);
        gbc.writeMem(0x4804, { 0x40 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc59, gbc.sp());
        EXPECT(0x4805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03B3
        gbc.setState(0x826f, 0x33c4, 0xf5e0, 0x52d9, 0xd179, 0xa245, 0x1, 0x0);
        gbc.writeMem(0x826f, { 0x40 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x33c4, gbc.sp());
        EXPECT(0x8270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x826f));
        // 40 03B4
        gbc.setState(0x7ed8, 0xe653, 0x7160, 0xa422, 0x9700, 0xfc05, 0x0, 0x1);
        gbc.writeMem(0x7ed8, { 0x40 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe653, gbc.sp());
        EXPECT(0x7ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03B5
        gbc.setState(0x7128, 0x9af, 0x8c80, 0x6a8c, 0xebda, 0x7389, 0x1, 0x0);
        gbc.writeMem(0x7128, { 0x40 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9af, gbc.sp());
        EXPECT(0x7129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03B6
        gbc.setState(0xa3e5, 0x47b0, 0xf300, 0xee8b, 0x34f7, 0x7c7c, 0x1, 0x1);
        gbc.writeMem(0xa3e5, { 0x40 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x47b0, gbc.sp());
        EXPECT(0xa3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa3e5));
        // 40 03B7
        gbc.setState(0xe115, 0x9b1a, 0x5660, 0xbaf7, 0x719a, 0xdf9f, 0x1, 0x0);
        gbc.writeMem(0xe115, { 0x40 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9b1a, gbc.sp());
        EXPECT(0xe116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe115));
        // 40 03B8
        gbc.setState(0x3e61, 0x5b8f, 0x6380, 0x9559, 0x1028, 0x107d, 0x1, 0x0);
        gbc.writeMem(0x3e61, { 0x40 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5b8f, gbc.sp());
        EXPECT(0x3e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03B9
        gbc.setState(0xae3b, 0xbdcc, 0x30, 0x327c, 0x8c82, 0x61b6, 0x1, 0x0);
        gbc.writeMem(0xae3b, { 0x40 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbdcc, gbc.sp());
        EXPECT(0xae3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xae3b));
        // 40 03BA
        gbc.setState(0xeb6c, 0xf575, 0xe940, 0x350b, 0x7aed, 0xbf61, 0x1, 0x0);
        gbc.writeMem(0xeb6c, { 0x40 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf575, gbc.sp());
        EXPECT(0xeb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xeb6c));
        // 40 03BB
        gbc.setState(0x3b9d, 0x7105, 0x5830, 0x51d2, 0xd072, 0xcbfd, 0x1, 0x0);
        gbc.writeMem(0x3b9d, { 0x40 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7105, gbc.sp());
        EXPECT(0x3b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03BC
        gbc.setState(0x462, 0xf3c3, 0x2770, 0x36c4, 0x9aa7, 0x6eb5, 0x1, 0x1);
        gbc.writeMem(0x462, { 0x40 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf3c3, gbc.sp());
        EXPECT(0x463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03BD
        gbc.setState(0xc3f3, 0xbc4d, 0xa3a0, 0x61fa, 0x9e3b, 0xab8e, 0x1, 0x0);
        gbc.writeMem(0xc3f3, { 0x40 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbc4d, gbc.sp());
        EXPECT(0xc3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc3f3));
        // 40 03BE
        gbc.setState(0x79b3, 0x6c3c, 0x4fd0, 0x3f9f, 0xb63f, 0xd5c1, 0x1, 0x0);
        gbc.writeMem(0x79b3, { 0x40 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6c3c, gbc.sp());
        EXPECT(0x79b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03BF
        gbc.setState(0x6b30, 0x5998, 0xa550, 0x2e69, 0x8a79, 0x11ff, 0x1, 0x1);
        gbc.writeMem(0x6b30, { 0x40 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5998, gbc.sp());
        EXPECT(0x6b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03C0
        gbc.setState(0x437, 0xec54, 0xbc10, 0x29f5, 0x7eb4, 0xb077, 0x0, 0x0);
        gbc.writeMem(0x437, { 0x40 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xec54, gbc.sp());
        EXPECT(0x438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03C1
        gbc.setState(0x8dcb, 0x26ac, 0x99d0, 0x4987, 0xc2d4, 0xd0ed, 0x1, 0x1);
        gbc.writeMem(0x8dcb, { 0x40 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x26ac, gbc.sp());
        EXPECT(0x8dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8dcb));
        // 40 03C2
        gbc.setState(0x86df, 0x244b, 0x9b0, 0x6f93, 0x3c29, 0x2633, 0x0, 0x1);
        gbc.writeMem(0x86df, { 0x40 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x244b, gbc.sp());
        EXPECT(0x86e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x86df));
        // 40 03C4
        gbc.setState(0x3333, 0x3881, 0x8330, 0xb1fd, 0xf39a, 0xdfbf, 0x0, 0x0);
        gbc.writeMem(0x3333, { 0x40 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3881, gbc.sp());
        EXPECT(0x3334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03C5
        gbc.setState(0x7bb6, 0x4883, 0x2a20, 0xb400, 0xad7a, 0xcf8, 0x0, 0x1);
        gbc.writeMem(0x7bb6, { 0x40 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4883, gbc.sp());
        EXPECT(0x7bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03C6
        gbc.setState(0x9413, 0xece, 0x7a80, 0xeda9, 0x36ac, 0x3b9f, 0x1, 0x1);
        gbc.writeMem(0x9413, { 0x40 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xece, gbc.sp());
        EXPECT(0x9414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9413));
        // 40 03C7
        gbc.setState(0xd0db, 0xc25b, 0xacc0, 0x8647, 0x3ebb, 0x71be, 0x1, 0x1);
        gbc.writeMem(0xd0db, { 0x40 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc25b, gbc.sp());
        EXPECT(0xd0dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd0db));
        // 40 03C8
        gbc.setState(0xadc0, 0x3109, 0x8330, 0x6c77, 0xbf7a, 0x421f, 0x0, 0x1);
        gbc.writeMem(0xadc0, { 0x40 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3109, gbc.sp());
        EXPECT(0xadc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xadc0));
        // 40 03C9
        gbc.setState(0x8893, 0xb276, 0x2f10, 0xce5d, 0xc2d8, 0x2679, 0x1, 0x1);
        gbc.writeMem(0x8893, { 0x40 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb276, gbc.sp());
        EXPECT(0x8894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8893));
        // 40 03CA
        gbc.setState(0xdfb7, 0x4be7, 0x4e70, 0xa04, 0xb395, 0x7123, 0x1, 0x0);
        gbc.writeMem(0xdfb7, { 0x40 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4be7, gbc.sp());
        EXPECT(0xdfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xdfb7));
        // 40 03CB
        gbc.setState(0x8688, 0x48c4, 0x8f70, 0x98a4, 0x9952, 0x7ec3, 0x0, 0x1);
        gbc.writeMem(0x8688, { 0x40 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x48c4, gbc.sp());
        EXPECT(0x8689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8688));
        // 40 03CC
        gbc.setState(0x727c, 0xb35, 0x2d20, 0x6884, 0x42be, 0x3dfa, 0x1, 0x0);
        gbc.writeMem(0x727c, { 0x40 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb35, gbc.sp());
        EXPECT(0x727d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03CD
        gbc.setState(0x4065, 0x9184, 0x6fb0, 0x546d, 0xc359, 0xf2a4, 0x1, 0x0);
        gbc.writeMem(0x4065, { 0x40 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9184, gbc.sp());
        EXPECT(0x4066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03CE
        gbc.setState(0x7a01, 0x28ef, 0xab80, 0xe7b5, 0xfc4e, 0x27df, 0x0, 0x0);
        gbc.writeMem(0x7a01, { 0x40 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x28ef, gbc.sp());
        EXPECT(0x7a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03CF
        gbc.setState(0xcef, 0xd78d, 0xfe30, 0xde35, 0xf07f, 0xab2a, 0x1, 0x0);
        gbc.writeMem(0xcef, { 0x40 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd78d, gbc.sp());
        EXPECT(0xcf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03D0
        gbc.setState(0x2e4c, 0xe1d3, 0xe230, 0x9a8e, 0x8fff, 0x8564, 0x1, 0x0);
        gbc.writeMem(0x2e4c, { 0x40 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe1d3, gbc.sp());
        EXPECT(0x2e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03D1
        gbc.setState(0x149e, 0x94f3, 0x6ae0, 0x258e, 0x740a, 0xc30b, 0x0, 0x0);
        gbc.writeMem(0x149e, { 0x40 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x94f3, gbc.sp());
        EXPECT(0x149f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03D2
        gbc.setState(0xd568, 0xeee7, 0xfe50, 0xe33b, 0x560a, 0x7e32, 0x0, 0x0);
        gbc.writeMem(0xd568, { 0x40 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xeee7, gbc.sp());
        EXPECT(0xd569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd568));
        // 40 03D3
        gbc.setState(0x709f, 0x93d3, 0x330, 0x6808, 0x830d, 0x508c, 0x1, 0x1);
        gbc.writeMem(0x709f, { 0x40 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x93d3, gbc.sp());
        EXPECT(0x70a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03D4
        gbc.setState(0x9d89, 0xbe0f, 0xfe20, 0x3526, 0xa23a, 0xaa52, 0x1, 0x1);
        gbc.writeMem(0x9d89, { 0x40 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbe0f, gbc.sp());
        EXPECT(0x9d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9d89));
        // 40 03D5
        gbc.setState(0x29e3, 0xc1f0, 0x5ce0, 0x8132, 0x35dd, 0x199a, 0x1, 0x1);
        gbc.writeMem(0x29e3, { 0x40 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc1f0, gbc.sp());
        EXPECT(0x29e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03D6
        gbc.setState(0x53ef, 0xf01a, 0x3dc0, 0x67ab, 0x6334, 0xa235, 0x1, 0x1);
        gbc.writeMem(0x53ef, { 0x40 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf01a, gbc.sp());
        EXPECT(0x53f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03D7
        gbc.setState(0x3b5d, 0x8229, 0xdbc0, 0x6b9c, 0x2f64, 0x2127, 0x0, 0x0);
        gbc.writeMem(0x3b5d, { 0x40 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8229, gbc.sp());
        EXPECT(0x3b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03D8
        gbc.setState(0xb149, 0x4be4, 0xaef0, 0xf03b, 0x4143, 0xa69, 0x1, 0x1);
        gbc.writeMem(0xb149, { 0x40 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4be4, gbc.sp());
        EXPECT(0xb14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb149));
        // 40 03D9
        gbc.setState(0x3ef9, 0xa243, 0x6cd0, 0x646e, 0xa8ec, 0x1376, 0x1, 0x1);
        gbc.writeMem(0x3ef9, { 0x40 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa243, gbc.sp());
        EXPECT(0x3efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03DA
        gbc.setState(0x8289, 0xb6dd, 0x8f20, 0x5bc4, 0x46e6, 0xc9f2, 0x0, 0x1);
        gbc.writeMem(0x8289, { 0x40 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb6dd, gbc.sp());
        EXPECT(0x828a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8289));
        // 40 03DB
        gbc.setState(0x8824, 0x4346, 0xb2e0, 0xd304, 0x806, 0x4989, 0x0, 0x0);
        gbc.writeMem(0x8824, { 0x40 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4346, gbc.sp());
        EXPECT(0x8825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8824));
        // 40 03DC
        gbc.setState(0x7d22, 0x9e6b, 0x21e0, 0x2736, 0x887e, 0xfc74, 0x0, 0x0);
        gbc.writeMem(0x7d22, { 0x40 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9e6b, gbc.sp());
        EXPECT(0x7d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03DD
        gbc.setState(0xe502, 0x1f2a, 0x8010, 0x12a4, 0x9e01, 0x9db, 0x0, 0x1);
        gbc.writeMem(0xe502, { 0x40 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1f2a, gbc.sp());
        EXPECT(0xe503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe502));
        // 40 03DE
        gbc.setState(0x7074, 0x6b6f, 0x4f20, 0x7d3, 0xd10e, 0xdabf, 0x1, 0x1);
        gbc.writeMem(0x7074, { 0x40 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6b6f, gbc.sp());
        EXPECT(0x7075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03DF
        gbc.setState(0x8941, 0xf9cc, 0x7750, 0x2c22, 0x9587, 0x66a7, 0x1, 0x0);
        gbc.writeMem(0x8941, { 0x40 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf9cc, gbc.sp());
        EXPECT(0x8942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8941));
        // 40 03E0
        gbc.setState(0xd7d2, 0x165, 0x15b0, 0x2987, 0xe48c, 0x649b, 0x0, 0x0);
        gbc.writeMem(0xd7d2, { 0x40 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x165, gbc.sp());
        EXPECT(0xd7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd7d2));
        // 40 03E1
        gbc.setState(0x980, 0x1e84, 0x8170, 0xfb3b, 0x3ec3, 0x9c05, 0x0, 0x0);
        gbc.writeMem(0x980, { 0x40 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1e84, gbc.sp());
        EXPECT(0x981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03E2
        gbc.setState(0xbf8, 0x2b9, 0x7f0, 0xa7d, 0xe78d, 0xc7bb, 0x0, 0x1);
        gbc.writeMem(0xbf8, { 0x40 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2b9, gbc.sp());
        EXPECT(0xbf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03E3
        gbc.setState(0x162a, 0xd088, 0xb580, 0xdece, 0x5463, 0xcb48, 0x1, 0x1);
        gbc.writeMem(0x162a, { 0x40 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd088, gbc.sp());
        EXPECT(0x162b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 40 03E4
        gbc.setState(0xadc1, 0x9fa6, 0x4b90, 0x8e0e, 0x29ff, 0xdd87, 0x0, 0x1);
        gbc.writeMem(0xadc1, { 0x40 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9fa6, gbc.sp());
        EXPECT(0xadc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xadc1));
        // 40 03E5
        gbc.setState(0x880a, 0x5b37, 0xb180, 0x44d, 0x9f0b, 0xe821, 0x0, 0x1);
        gbc.writeMem(0x880a, { 0x40 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5b37, gbc.sp());
        EXPECT(0x880b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x880a));
        // 40 03E6
        gbc.setState(0x14e, 0xb8fa, 0x7710, 0x7c6, 0x2c64, 0x8b26, 0x1, 0x1);
        gbc.writeMem(0x14e, { 0x40 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb8fa, gbc.sp());
        EXPECT(0x14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 40 03E7
        gbc.setState(0x3beb, 0xb684, 0xf70, 0x8a67, 0xc6d3, 0xe9f8, 0x0, 0x0);
        gbc.writeMem(0x3beb, { 0x40 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb684, gbc.sp());
        EXPECT(0x3bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
