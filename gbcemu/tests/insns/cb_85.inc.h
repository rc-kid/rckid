    TEST(gbcemu, opcode_cb_85) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 85 0000
        gbc.setState(0x5541, 0xe21, 0xdba0, 0x6e71, 0x8c67, 0xf2ae, 0x0, 0x0);
        gbc.writeMem(0x5541, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe21, gbc.sp());
        EXPECT(0x5543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0001
        gbc.setState(0x175d, 0x96d, 0x6e10, 0xa2a1, 0x8df4, 0x8182, 0x0, 0x1);
        gbc.writeMem(0x175d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x96d, gbc.sp());
        EXPECT(0x175f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0002
        gbc.setState(0xeeff, 0x2de0, 0xab10, 0x5ec2, 0x770a, 0x15da, 0x1, 0x0);
        gbc.writeMem(0xeeff, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2de0, gbc.sp());
        EXPECT(0xef01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeff));
        EXPECT(0x85, gbc.readMem(0xef00));
        // CB 85 0003
        gbc.setState(0x1ab9, 0x807c, 0x8180, 0x24e0, 0xc6a5, 0xeef0, 0x0, 0x0);
        gbc.writeMem(0x1ab9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x807c, gbc.sp());
        EXPECT(0x1abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0004
        gbc.setState(0x9f20, 0x393b, 0xa930, 0x9f93, 0x302d, 0xda40, 0x1, 0x1);
        gbc.writeMem(0x9f20, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x393b, gbc.sp());
        EXPECT(0x9f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f20));
        EXPECT(0x85, gbc.readMem(0x9f21));
        // CB 85 0005
        gbc.setState(0xbcac, 0xb453, 0xba30, 0x9314, 0x8272, 0x84a, 0x1, 0x1);
        gbc.writeMem(0xbcac, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb453, gbc.sp());
        EXPECT(0xbcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcac));
        EXPECT(0x85, gbc.readMem(0xbcad));
        // CB 85 0006
        gbc.setState(0xae02, 0x5d70, 0x3920, 0x92dd, 0x44ff, 0xf5f0, 0x0, 0x1);
        gbc.writeMem(0xae02, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5d70, gbc.sp());
        EXPECT(0xae04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae02));
        EXPECT(0x85, gbc.readMem(0xae03));
        // CB 85 0007
        gbc.setState(0xcc0e, 0x403, 0xb230, 0x6b33, 0x55c8, 0xb9fb, 0x0, 0x0);
        gbc.writeMem(0xcc0e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x403, gbc.sp());
        EXPECT(0xcc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0e));
        EXPECT(0x85, gbc.readMem(0xcc0f));
        // CB 85 0008
        gbc.setState(0xae3c, 0x5d1d, 0xbcf0, 0xbb08, 0x1f7e, 0xed2e, 0x1, 0x0);
        gbc.writeMem(0xae3c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5d1d, gbc.sp());
        EXPECT(0xae3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3c));
        EXPECT(0x85, gbc.readMem(0xae3d));
        // CB 85 0009
        gbc.setState(0x1aed, 0x2976, 0xe530, 0xa8e1, 0xb185, 0x4b2c, 0x1, 0x1);
        gbc.writeMem(0x1aed, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2976, gbc.sp());
        EXPECT(0x1aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 000A
        gbc.setState(0xae9c, 0x8ede, 0x76e0, 0x858, 0x5bdb, 0xf8cc, 0x0, 0x1);
        gbc.writeMem(0xae9c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8ede, gbc.sp());
        EXPECT(0xae9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae9c));
        EXPECT(0x85, gbc.readMem(0xae9d));
        // CB 85 000B
        gbc.setState(0x18a7, 0x6b57, 0xebe0, 0x82aa, 0xeb55, 0xaa24, 0x1, 0x0);
        gbc.writeMem(0x18a7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6b57, gbc.sp());
        EXPECT(0x18a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 000C
        gbc.setState(0x9a9, 0xac61, 0x8cc0, 0x5b7d, 0x8471, 0xda98, 0x0, 0x1);
        gbc.writeMem(0x9a9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xac61, gbc.sp());
        EXPECT(0x9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 000D
        gbc.setState(0xd802, 0xdb13, 0x26c0, 0x3fe9, 0xf073, 0x3b2a, 0x0, 0x0);
        gbc.writeMem(0xd802, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdb13, gbc.sp());
        EXPECT(0xd804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd802));
        EXPECT(0x85, gbc.readMem(0xd803));
        // CB 85 000E
        gbc.setState(0x2559, 0x3127, 0x3ee0, 0xf033, 0xefd4, 0xc8c0, 0x0, 0x0);
        gbc.writeMem(0x2559, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3127, gbc.sp());
        EXPECT(0x255b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0010
        gbc.setState(0xea4a, 0x950d, 0x8f90, 0xa4bd, 0x6f5d, 0xc714, 0x1, 0x1);
        gbc.writeMem(0xea4a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x950d, gbc.sp());
        EXPECT(0xea4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4a));
        EXPECT(0x85, gbc.readMem(0xea4b));
        // CB 85 0011
        gbc.setState(0x591a, 0xbb8a, 0xcc50, 0x9353, 0xef1c, 0x8e5b, 0x0, 0x1);
        gbc.writeMem(0x591a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbb8a, gbc.sp());
        EXPECT(0x591c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0012
        gbc.setState(0x6312, 0xb46e, 0x6970, 0xf039, 0xc919, 0x7764, 0x0, 0x0);
        gbc.writeMem(0x6312, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb46e, gbc.sp());
        EXPECT(0x6314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0013
        gbc.setState(0xe18c, 0xb441, 0xbbe0, 0xe179, 0x560a, 0x341e, 0x1, 0x1);
        gbc.writeMem(0xe18c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb441, gbc.sp());
        EXPECT(0xe18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18c));
        EXPECT(0x85, gbc.readMem(0xe18d));
        // CB 85 0014
        gbc.setState(0x8baf, 0xa20d, 0x2a90, 0x80d0, 0x15a8, 0xb17b, 0x1, 0x0);
        gbc.writeMem(0x8baf, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0x8bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8baf));
        EXPECT(0x85, gbc.readMem(0x8bb0));
        // CB 85 0015
        gbc.setState(0x67dd, 0x30c2, 0xae60, 0x5511, 0x6a0e, 0xa153, 0x1, 0x1);
        gbc.writeMem(0x67dd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x30c2, gbc.sp());
        EXPECT(0x67df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0016
        gbc.setState(0x753d, 0xf25f, 0x8800, 0x5164, 0x74c3, 0x9660, 0x0, 0x1);
        gbc.writeMem(0x753d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf25f, gbc.sp());
        EXPECT(0x753f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0017
        gbc.setState(0xeba2, 0x74b4, 0x6c40, 0x8404, 0x956a, 0xe8d3, 0x1, 0x1);
        gbc.writeMem(0xeba2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x74b4, gbc.sp());
        EXPECT(0xeba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba2));
        EXPECT(0x85, gbc.readMem(0xeba3));
        // CB 85 0018
        gbc.setState(0xa250, 0x9acf, 0x4de0, 0x2353, 0x2ee2, 0x6764, 0x0, 0x1);
        gbc.writeMem(0xa250, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9acf, gbc.sp());
        EXPECT(0xa252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa250));
        EXPECT(0x85, gbc.readMem(0xa251));
        // CB 85 0019
        gbc.setState(0x9ad1, 0x5c52, 0x6b30, 0x27a3, 0x80a4, 0x83ab, 0x0, 0x0);
        gbc.writeMem(0x9ad1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5c52, gbc.sp());
        EXPECT(0x9ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad1));
        EXPECT(0x85, gbc.readMem(0x9ad2));
        // CB 85 001A
        gbc.setState(0x5ba2, 0x2baf, 0x3f60, 0x346c, 0xf3f0, 0x11c9, 0x1, 0x1);
        gbc.writeMem(0x5ba2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2baf, gbc.sp());
        EXPECT(0x5ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 001B
        gbc.setState(0x8aef, 0x7eb, 0x9500, 0x468, 0xd477, 0xe7ba, 0x0, 0x0);
        gbc.writeMem(0x8aef, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7eb, gbc.sp());
        EXPECT(0x8af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aef));
        EXPECT(0x85, gbc.readMem(0x8af0));
        // CB 85 001C
        gbc.setState(0x3c69, 0x6805, 0x5c10, 0x59e2, 0xea9e, 0x543e, 0x1, 0x1);
        gbc.writeMem(0x3c69, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6805, gbc.sp());
        EXPECT(0x3c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 001D
        gbc.setState(0xb3cb, 0x733c, 0x5d50, 0x7a3b, 0x6c28, 0x647b, 0x0, 0x0);
        gbc.writeMem(0xb3cb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x733c, gbc.sp());
        EXPECT(0xb3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cb));
        EXPECT(0x85, gbc.readMem(0xb3cc));
        // CB 85 001E
        gbc.setState(0x3899, 0xad90, 0x7a40, 0xa4cf, 0xe990, 0x3086, 0x1, 0x0);
        gbc.writeMem(0x3899, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xad90, gbc.sp());
        EXPECT(0x389b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 001F
        gbc.setState(0xb31a, 0xbad3, 0xab90, 0x715c, 0x530, 0xb0f1, 0x0, 0x1);
        gbc.writeMem(0xb31a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbad3, gbc.sp());
        EXPECT(0xb31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31a));
        EXPECT(0x85, gbc.readMem(0xb31b));
        // CB 85 0020
        gbc.setState(0x751f, 0xfa2c, 0x3360, 0x8825, 0x6aba, 0x4828, 0x1, 0x0);
        gbc.writeMem(0x751f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfa2c, gbc.sp());
        EXPECT(0x7521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0021
        gbc.setState(0x96e6, 0xf8a5, 0x6400, 0x18db, 0x71f0, 0x32b7, 0x1, 0x1);
        gbc.writeMem(0x96e6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf8a5, gbc.sp());
        EXPECT(0x96e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e6));
        EXPECT(0x85, gbc.readMem(0x96e7));
        // CB 85 0022
        gbc.setState(0x2987, 0x266f, 0x9230, 0x623d, 0xba72, 0xeeb7, 0x1, 0x0);
        gbc.writeMem(0x2987, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x266f, gbc.sp());
        EXPECT(0x2989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0023
        gbc.setState(0x8b8e, 0x4d6b, 0x3c40, 0x23c8, 0x8a5b, 0x6ec7, 0x0, 0x0);
        gbc.writeMem(0x8b8e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4d6b, gbc.sp());
        EXPECT(0x8b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b8e));
        EXPECT(0x85, gbc.readMem(0x8b8f));
        // CB 85 0024
        gbc.setState(0x9c01, 0x5636, 0x1950, 0x3b49, 0x531a, 0x3889, 0x0, 0x1);
        gbc.writeMem(0x9c01, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5636, gbc.sp());
        EXPECT(0x9c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c01));
        EXPECT(0x85, gbc.readMem(0x9c02));
        // CB 85 0025
        gbc.setState(0xa814, 0x1d51, 0x3380, 0x98c2, 0xc9ec, 0x8ebc, 0x0, 0x1);
        gbc.writeMem(0xa814, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1d51, gbc.sp());
        EXPECT(0xa816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa814));
        EXPECT(0x85, gbc.readMem(0xa815));
        // CB 85 0026
        gbc.setState(0xa623, 0x82f3, 0x68a0, 0xca40, 0xb029, 0x532d, 0x0, 0x0);
        gbc.writeMem(0xa623, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x82f3, gbc.sp());
        EXPECT(0xa625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa623));
        EXPECT(0x85, gbc.readMem(0xa624));
        // CB 85 0027
        gbc.setState(0xa452, 0xa852, 0x4d60, 0x6f13, 0xdd27, 0xdac3, 0x0, 0x0);
        gbc.writeMem(0xa452, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa852, gbc.sp());
        EXPECT(0xa454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa452));
        EXPECT(0x85, gbc.readMem(0xa453));
        // CB 85 0028
        gbc.setState(0xb3ef, 0x8e1f, 0x2e10, 0x3255, 0x7f1e, 0x41f1, 0x1, 0x0);
        gbc.writeMem(0xb3ef, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8e1f, gbc.sp());
        EXPECT(0xb3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ef));
        EXPECT(0x85, gbc.readMem(0xb3f0));
        // CB 85 002A
        gbc.setState(0x633e, 0x6829, 0xa90, 0x8ae8, 0x70a2, 0x8cc8, 0x1, 0x0);
        gbc.writeMem(0x633e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6829, gbc.sp());
        EXPECT(0x6340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 002B
        gbc.setState(0xaaec, 0x4b99, 0x2cf0, 0xa451, 0x8dbf, 0xfe96, 0x1, 0x0);
        gbc.writeMem(0xaaec, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4b99, gbc.sp());
        EXPECT(0xaaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaec));
        EXPECT(0x85, gbc.readMem(0xaaed));
        // CB 85 002C
        gbc.setState(0xcdb9, 0x48f8, 0xa010, 0x9346, 0xee31, 0xe574, 0x1, 0x1);
        gbc.writeMem(0xcdb9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x48f8, gbc.sp());
        EXPECT(0xcdbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb9));
        EXPECT(0x85, gbc.readMem(0xcdba));
        // CB 85 002D
        gbc.setState(0x7c19, 0x32e, 0x7070, 0xa120, 0xb226, 0x253a, 0x0, 0x0);
        gbc.writeMem(0x7c19, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x32e, gbc.sp());
        EXPECT(0x7c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 002E
        gbc.setState(0x7206, 0x2823, 0x9010, 0x678a, 0x4323, 0x546, 0x1, 0x1);
        gbc.writeMem(0x7206, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2823, gbc.sp());
        EXPECT(0x7208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 002F
        gbc.setState(0x9c57, 0xd44b, 0x8d50, 0x57cd, 0xf19c, 0xb38f, 0x0, 0x1);
        gbc.writeMem(0x9c57, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd44b, gbc.sp());
        EXPECT(0x9c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c57));
        EXPECT(0x85, gbc.readMem(0x9c58));
        // CB 85 0030
        gbc.setState(0x8ca7, 0x7013, 0x5dc0, 0x80be, 0xb229, 0xe389, 0x0, 0x0);
        gbc.writeMem(0x8ca7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7013, gbc.sp());
        EXPECT(0x8ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca7));
        EXPECT(0x85, gbc.readMem(0x8ca8));
        // CB 85 0031
        gbc.setState(0x8a96, 0x9f8, 0x3330, 0x25aa, 0xcd93, 0x5ef2, 0x1, 0x0);
        gbc.writeMem(0x8a96, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9f8, gbc.sp());
        EXPECT(0x8a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a96));
        EXPECT(0x85, gbc.readMem(0x8a97));
        // CB 85 0032
        gbc.setState(0x8cba, 0xf359, 0x3cd0, 0x16a, 0xe6ca, 0xd43, 0x1, 0x0);
        gbc.writeMem(0x8cba, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf359, gbc.sp());
        EXPECT(0x8cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cba));
        EXPECT(0x85, gbc.readMem(0x8cbb));
        // CB 85 0033
        gbc.setState(0x6f9a, 0x6168, 0x75a0, 0x3b5f, 0x553f, 0x424c, 0x0, 0x0);
        gbc.writeMem(0x6f9a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0x6f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0035
        gbc.setState(0x44b6, 0x5fad, 0xfe90, 0x9723, 0xb5f2, 0x4b17, 0x0, 0x1);
        gbc.writeMem(0x44b6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5fad, gbc.sp());
        EXPECT(0x44b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0036
        gbc.setState(0x1406, 0xd05, 0x9d60, 0xe52b, 0x1d2a, 0x619b, 0x1, 0x1);
        gbc.writeMem(0x1406, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd05, gbc.sp());
        EXPECT(0x1408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0037
        gbc.setState(0x8a28, 0x149a, 0xb6e0, 0x525c, 0xffbf, 0xd1e2, 0x1, 0x0);
        gbc.writeMem(0x8a28, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x149a, gbc.sp());
        EXPECT(0x8a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a28));
        EXPECT(0x85, gbc.readMem(0x8a29));
        // CB 85 0038
        gbc.setState(0x72d, 0xa029, 0xbbf0, 0x772a, 0x2ad5, 0xbcc, 0x0, 0x0);
        gbc.writeMem(0x72d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa029, gbc.sp());
        EXPECT(0x72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0039
        gbc.setState(0xca66, 0xc34, 0xe930, 0x9c74, 0x1132, 0x15e9, 0x0, 0x1);
        gbc.writeMem(0xca66, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc34, gbc.sp());
        EXPECT(0xca68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca66));
        EXPECT(0x85, gbc.readMem(0xca67));
        // CB 85 003A
        gbc.setState(0x5824, 0x8bd9, 0xdd40, 0xdae3, 0x21a4, 0xb100, 0x1, 0x0);
        gbc.writeMem(0x5824, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8bd9, gbc.sp());
        EXPECT(0x5826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 003B
        gbc.setState(0x6707, 0xe11c, 0x9240, 0xeaba, 0xe7d0, 0x2f2a, 0x1, 0x0);
        gbc.writeMem(0x6707, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe11c, gbc.sp());
        EXPECT(0x6709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 003C
        gbc.setState(0x96b5, 0x8e06, 0x4ea0, 0xfc14, 0xb1e2, 0xc67f, 0x0, 0x1);
        gbc.writeMem(0x96b5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8e06, gbc.sp());
        EXPECT(0x96b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b5));
        EXPECT(0x85, gbc.readMem(0x96b6));
        // CB 85 003D
        gbc.setState(0x3257, 0xd5d9, 0x87b0, 0x192f, 0xb95a, 0xaf7c, 0x0, 0x1);
        gbc.writeMem(0x3257, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd5d9, gbc.sp());
        EXPECT(0x3259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 003E
        gbc.setState(0xa40d, 0xaed6, 0x7010, 0x2ffe, 0x3f14, 0x5076, 0x1, 0x1);
        gbc.writeMem(0xa40d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaed6, gbc.sp());
        EXPECT(0xa40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40d));
        EXPECT(0x85, gbc.readMem(0xa40e));
        // CB 85 003F
        gbc.setState(0x27a9, 0x6714, 0x8da0, 0xec1a, 0x3cd3, 0xd1, 0x1, 0x0);
        gbc.writeMem(0x27a9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6714, gbc.sp());
        EXPECT(0x27ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0040
        gbc.setState(0x3270, 0x7eb9, 0xa230, 0xb9d9, 0x12bd, 0xf629, 0x1, 0x0);
        gbc.writeMem(0x3270, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7eb9, gbc.sp());
        EXPECT(0x3272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0041
        gbc.setState(0x1968, 0xce12, 0x8940, 0x56a6, 0x38e7, 0xccd3, 0x0, 0x0);
        gbc.writeMem(0x1968, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xce12, gbc.sp());
        EXPECT(0x196a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0042
        gbc.setState(0x175b, 0x7a05, 0x76b0, 0x5d53, 0x61a2, 0x21df, 0x0, 0x1);
        gbc.writeMem(0x175b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7a05, gbc.sp());
        EXPECT(0x175d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0043
        gbc.setState(0xab90, 0x2cca, 0x580, 0x438c, 0xc499, 0xdc27, 0x1, 0x1);
        gbc.writeMem(0xab90, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2cca, gbc.sp());
        EXPECT(0xab92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab90));
        EXPECT(0x85, gbc.readMem(0xab91));
        // CB 85 0044
        gbc.setState(0xa3bf, 0x2650, 0x2960, 0x470d, 0x468a, 0x16af, 0x1, 0x1);
        gbc.writeMem(0xa3bf, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2650, gbc.sp());
        EXPECT(0xa3c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3bf));
        EXPECT(0x85, gbc.readMem(0xa3c0));
        // CB 85 0045
        gbc.setState(0x436d, 0x57b, 0x9470, 0xce1a, 0x4616, 0x2529, 0x0, 0x1);
        gbc.writeMem(0x436d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x57b, gbc.sp());
        EXPECT(0x436f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0046
        gbc.setState(0x7f26, 0xbb79, 0xbbc0, 0x52c6, 0x9488, 0xb61a, 0x0, 0x1);
        gbc.writeMem(0x7f26, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbb79, gbc.sp());
        EXPECT(0x7f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0047
        gbc.setState(0x262a, 0x1d16, 0xe300, 0x4748, 0xab4c, 0xe397, 0x0, 0x1);
        gbc.writeMem(0x262a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1d16, gbc.sp());
        EXPECT(0x262c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0048
        gbc.setState(0xe67c, 0xc556, 0xfba0, 0xb3ba, 0x6a06, 0xe4a9, 0x0, 0x1);
        gbc.writeMem(0xe67c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc556, gbc.sp());
        EXPECT(0xe67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe67c));
        EXPECT(0x85, gbc.readMem(0xe67d));
        // CB 85 0049
        gbc.setState(0x8199, 0x15b2, 0x8960, 0x4332, 0xd256, 0x179c, 0x0, 0x0);
        gbc.writeMem(0x8199, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x15b2, gbc.sp());
        EXPECT(0x819b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8199));
        EXPECT(0x85, gbc.readMem(0x819a));
        // CB 85 004A
        gbc.setState(0xbd05, 0xaf5f, 0x22d0, 0x6a94, 0x1c46, 0x43a3, 0x0, 0x1);
        gbc.writeMem(0xbd05, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaf5f, gbc.sp());
        EXPECT(0xbd07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd05));
        EXPECT(0x85, gbc.readMem(0xbd06));
        // CB 85 004B
        gbc.setState(0x206f, 0x97ea, 0xf210, 0x8a1c, 0x5783, 0xbfb, 0x1, 0x1);
        gbc.writeMem(0x206f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x97ea, gbc.sp());
        EXPECT(0x2071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 004C
        gbc.setState(0x365c, 0xf307, 0xefe0, 0x96d0, 0x3c14, 0x4877, 0x0, 0x1);
        gbc.writeMem(0x365c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf307, gbc.sp());
        EXPECT(0x365e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 004D
        gbc.setState(0xa2dd, 0xeb32, 0x30, 0xab82, 0xfb0d, 0x9585, 0x0, 0x1);
        gbc.writeMem(0xa2dd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xeb32, gbc.sp());
        EXPECT(0xa2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2dd));
        EXPECT(0x85, gbc.readMem(0xa2de));
        // CB 85 004E
        gbc.setState(0x3a08, 0x4cf4, 0xa760, 0xa11c, 0xc113, 0xd203, 0x0, 0x1);
        gbc.writeMem(0x3a08, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4cf4, gbc.sp());
        EXPECT(0x3a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 004F
        gbc.setState(0x6e57, 0xcfc1, 0xc850, 0x4d62, 0x8003, 0x3eac, 0x0, 0x0);
        gbc.writeMem(0x6e57, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcfc1, gbc.sp());
        EXPECT(0x6e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0050
        gbc.setState(0x4267, 0x718a, 0xa160, 0xd517, 0xe072, 0xa46, 0x1, 0x0);
        gbc.writeMem(0x4267, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x718a, gbc.sp());
        EXPECT(0x4269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0051
        gbc.setState(0x412c, 0x82ea, 0x6910, 0xb4eb, 0x2d2c, 0xc858, 0x0, 0x1);
        gbc.writeMem(0x412c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x82ea, gbc.sp());
        EXPECT(0x412e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0052
        gbc.setState(0x21fc, 0x21b8, 0xc480, 0x9772, 0x35c2, 0xa95a, 0x0, 0x1);
        gbc.writeMem(0x21fc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x21b8, gbc.sp());
        EXPECT(0x21fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0053
        gbc.setState(0x1ce, 0x3bfd, 0xe630, 0x7e56, 0xb18d, 0xb9cc, 0x1, 0x0);
        gbc.writeMem(0x1ce, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3bfd, gbc.sp());
        EXPECT(0x1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0054
        gbc.setState(0x408a, 0xed40, 0x8a0, 0xbd69, 0xae91, 0xa569, 0x1, 0x1);
        gbc.writeMem(0x408a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xed40, gbc.sp());
        EXPECT(0x408c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0055
        gbc.setState(0xda71, 0xf316, 0xa560, 0xb034, 0x1aff, 0x1a85, 0x0, 0x1);
        gbc.writeMem(0xda71, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf316, gbc.sp());
        EXPECT(0xda73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda71));
        EXPECT(0x85, gbc.readMem(0xda72));
        // CB 85 0056
        gbc.setState(0x2d2, 0x466f, 0xfc00, 0xd6a, 0x6cd0, 0x3bc, 0x1, 0x1);
        gbc.writeMem(0x2d2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x466f, gbc.sp());
        EXPECT(0x2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0058
        gbc.setState(0x83a6, 0xdd6d, 0x54a0, 0xde86, 0x184d, 0x9256, 0x0, 0x1);
        gbc.writeMem(0x83a6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdd6d, gbc.sp());
        EXPECT(0x83a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a6));
        EXPECT(0x85, gbc.readMem(0x83a7));
        // CB 85 0059
        gbc.setState(0xa6f5, 0x488b, 0xc970, 0xa963, 0xdda5, 0x6974, 0x0, 0x0);
        gbc.writeMem(0xa6f5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x488b, gbc.sp());
        EXPECT(0xa6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f5));
        EXPECT(0x85, gbc.readMem(0xa6f6));
        // CB 85 005A
        gbc.setState(0xdb74, 0x6498, 0xa640, 0xb0f4, 0x177e, 0xbb41, 0x1, 0x1);
        gbc.writeMem(0xdb74, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6498, gbc.sp());
        EXPECT(0xdb76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb74));
        EXPECT(0x85, gbc.readMem(0xdb75));
        // CB 85 005B
        gbc.setState(0x394c, 0x101c, 0xee30, 0x42d1, 0x2e73, 0xcede, 0x0, 0x0);
        gbc.writeMem(0x394c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x101c, gbc.sp());
        EXPECT(0x394e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 005C
        gbc.setState(0x5d, 0xc8d7, 0x3750, 0x8945, 0x4001, 0xaccc, 0x1, 0x0);
        gbc.writeMem(0x5d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc8d7, gbc.sp());
        EXPECT(0x5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 005D
        gbc.setState(0xa276, 0x85d8, 0x54f0, 0x69df, 0x2a76, 0xb5e, 0x0, 0x1);
        gbc.writeMem(0xa276, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x85d8, gbc.sp());
        EXPECT(0xa278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa276));
        EXPECT(0x85, gbc.readMem(0xa277));
        // CB 85 005E
        gbc.setState(0x4e41, 0x25ba, 0x9110, 0xf348, 0x57f9, 0xff85, 0x1, 0x0);
        gbc.writeMem(0x4e41, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x25ba, gbc.sp());
        EXPECT(0x4e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 005F
        gbc.setState(0xec94, 0xede, 0x3b00, 0x5477, 0xf110, 0xb035, 0x1, 0x1);
        gbc.writeMem(0xec94, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xede, gbc.sp());
        EXPECT(0xec96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec94));
        EXPECT(0x85, gbc.readMem(0xec95));
        // CB 85 0060
        gbc.setState(0x7f48, 0xc4e5, 0x2680, 0x3358, 0x24bb, 0x29f3, 0x0, 0x0);
        gbc.writeMem(0x7f48, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc4e5, gbc.sp());
        EXPECT(0x7f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0061
        gbc.setState(0xe2fb, 0x7e0e, 0xf420, 0x5de7, 0xe75a, 0x8532, 0x0, 0x1);
        gbc.writeMem(0xe2fb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7e0e, gbc.sp());
        EXPECT(0xe2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fb));
        EXPECT(0x85, gbc.readMem(0xe2fc));
        // CB 85 0062
        gbc.setState(0x81b5, 0x1528, 0x80, 0xf5b0, 0x46c, 0x9450, 0x1, 0x0);
        gbc.writeMem(0x81b5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1528, gbc.sp());
        EXPECT(0x81b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b5));
        EXPECT(0x85, gbc.readMem(0x81b6));
        // CB 85 0063
        gbc.setState(0x3db5, 0x8b8e, 0x45a0, 0xcb1f, 0x90d5, 0xfaeb, 0x1, 0x0);
        gbc.writeMem(0x3db5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8b8e, gbc.sp());
        EXPECT(0x3db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0064
        gbc.setState(0x7e49, 0x3f52, 0x2c20, 0xadf3, 0x7933, 0xb24e, 0x0, 0x1);
        gbc.writeMem(0x7e49, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3f52, gbc.sp());
        EXPECT(0x7e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0065
        gbc.setState(0x22a9, 0xfc16, 0x93e0, 0x9f5d, 0x5620, 0x3b5d, 0x0, 0x1);
        gbc.writeMem(0x22a9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfc16, gbc.sp());
        EXPECT(0x22ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0066
        gbc.setState(0x8ab0, 0x9235, 0x8e10, 0x1586, 0xdba7, 0x91a9, 0x0, 0x1);
        gbc.writeMem(0x8ab0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9235, gbc.sp());
        EXPECT(0x8ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab0));
        EXPECT(0x85, gbc.readMem(0x8ab1));
        // CB 85 0067
        gbc.setState(0x7db6, 0x9fe4, 0x2810, 0xdba4, 0xff2d, 0x34a, 0x0, 0x1);
        gbc.writeMem(0x7db6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9fe4, gbc.sp());
        EXPECT(0x7db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0068
        gbc.setState(0xd35c, 0x696d, 0xd910, 0x1c7b, 0x610, 0x1fd9, 0x0, 0x0);
        gbc.writeMem(0xd35c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x696d, gbc.sp());
        EXPECT(0xd35e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd35c));
        EXPECT(0x85, gbc.readMem(0xd35d));
        // CB 85 0069
        gbc.setState(0x12f6, 0xc84d, 0x9ef0, 0xf7fb, 0x71fa, 0xae57, 0x0, 0x1);
        gbc.writeMem(0x12f6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc84d, gbc.sp());
        EXPECT(0x12f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 006A
        gbc.setState(0x1b91, 0x8c87, 0x3ca0, 0xb803, 0xb225, 0x729c, 0x1, 0x0);
        gbc.writeMem(0x1b91, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8c87, gbc.sp());
        EXPECT(0x1b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 006B
        gbc.setState(0x191e, 0x9f77, 0xf910, 0x9868, 0x562a, 0x68e5, 0x0, 0x1);
        gbc.writeMem(0x191e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9f77, gbc.sp());
        EXPECT(0x1920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 006C
        gbc.setState(0xbed7, 0xa3bb, 0xf570, 0x824, 0xc3f7, 0x6785, 0x1, 0x1);
        gbc.writeMem(0xbed7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa3bb, gbc.sp());
        EXPECT(0xbed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed7));
        EXPECT(0x85, gbc.readMem(0xbed8));
        // CB 85 006D
        gbc.setState(0x1025, 0xbbb2, 0x9e0, 0x7afe, 0xa5c, 0x63cd, 0x0, 0x0);
        gbc.writeMem(0x1025, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbbb2, gbc.sp());
        EXPECT(0x1027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 006E
        gbc.setState(0xb063, 0x700a, 0xe290, 0xde32, 0x627, 0x2ee6, 0x1, 0x1);
        gbc.writeMem(0xb063, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x700a, gbc.sp());
        EXPECT(0xb065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb063));
        EXPECT(0x85, gbc.readMem(0xb064));
        // CB 85 006F
        gbc.setState(0x4c43, 0x4bde, 0x9df0, 0x2705, 0x7515, 0x62a7, 0x1, 0x0);
        gbc.writeMem(0x4c43, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4bde, gbc.sp());
        EXPECT(0x4c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0070
        gbc.setState(0x1734, 0x4bce, 0x4f70, 0xee4, 0x781b, 0xd37a, 0x1, 0x0);
        gbc.writeMem(0x1734, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4bce, gbc.sp());
        EXPECT(0x1736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0071
        gbc.setState(0x8671, 0x8b5c, 0xe40, 0x4716, 0x7a55, 0x1b5c, 0x0, 0x1);
        gbc.writeMem(0x8671, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8b5c, gbc.sp());
        EXPECT(0x8673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8671));
        EXPECT(0x85, gbc.readMem(0x8672));
        // CB 85 0072
        gbc.setState(0x4066, 0xab08, 0x2190, 0xc710, 0x8e7f, 0x6bd6, 0x1, 0x0);
        gbc.writeMem(0x4066, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xab08, gbc.sp());
        EXPECT(0x4068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0073
        gbc.setState(0x54a, 0x7547, 0xeb00, 0xa5c5, 0xfb3e, 0x2903, 0x0, 0x1);
        gbc.writeMem(0x54a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7547, gbc.sp());
        EXPECT(0x54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0074
        gbc.setState(0xe7f5, 0x114c, 0x70d0, 0xd848, 0xd804, 0xf90e, 0x1, 0x0);
        gbc.writeMem(0xe7f5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x114c, gbc.sp());
        EXPECT(0xe7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f5));
        EXPECT(0x85, gbc.readMem(0xe7f6));
        // CB 85 0075
        gbc.setState(0x6a1f, 0x5189, 0xec20, 0xb20d, 0xedbf, 0x1e66, 0x0, 0x1);
        gbc.writeMem(0x6a1f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5189, gbc.sp());
        EXPECT(0x6a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0077
        gbc.setState(0x3b01, 0x36c7, 0xd290, 0xda28, 0xb5f3, 0x9593, 0x0, 0x0);
        gbc.writeMem(0x3b01, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x36c7, gbc.sp());
        EXPECT(0x3b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0078
        gbc.setState(0x4d96, 0x2f60, 0x37f0, 0xe430, 0x91aa, 0xa582, 0x0, 0x1);
        gbc.writeMem(0x4d96, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2f60, gbc.sp());
        EXPECT(0x4d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0079
        gbc.setState(0x3302, 0xe8e9, 0x5320, 0x5e9b, 0xcc4d, 0x31b9, 0x1, 0x0);
        gbc.writeMem(0x3302, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe8e9, gbc.sp());
        EXPECT(0x3304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 007A
        gbc.setState(0xa0a8, 0xfe35, 0xf0a0, 0x4804, 0x5073, 0xf243, 0x1, 0x0);
        gbc.writeMem(0xa0a8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfe35, gbc.sp());
        EXPECT(0xa0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a8));
        EXPECT(0x85, gbc.readMem(0xa0a9));
        // CB 85 007B
        gbc.setState(0x2bc6, 0xa59b, 0x180, 0xa8b1, 0x614, 0x57ac, 0x1, 0x1);
        gbc.writeMem(0x2bc6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa59b, gbc.sp());
        EXPECT(0x2bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 007C
        gbc.setState(0xc046, 0xd65, 0x9780, 0x2895, 0x3a8f, 0x5fac, 0x1, 0x1);
        gbc.writeMem(0xc046, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd65, gbc.sp());
        EXPECT(0xc048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc046));
        EXPECT(0x85, gbc.readMem(0xc047));
        // CB 85 007D
        gbc.setState(0xeb4b, 0xdeff, 0x75d0, 0x2f72, 0x3f5a, 0x2deb, 0x0, 0x1);
        gbc.writeMem(0xeb4b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdeff, gbc.sp());
        EXPECT(0xeb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4b));
        EXPECT(0x85, gbc.readMem(0xeb4c));
        // CB 85 007E
        gbc.setState(0x9f64, 0xa35, 0x16d0, 0x587a, 0x595c, 0xf10b, 0x0, 0x1);
        gbc.writeMem(0x9f64, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa35, gbc.sp());
        EXPECT(0x9f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f64));
        EXPECT(0x85, gbc.readMem(0x9f65));
        // CB 85 007F
        gbc.setState(0xa296, 0x3b68, 0x7a60, 0x4250, 0xb967, 0xf007, 0x0, 0x1);
        gbc.writeMem(0xa296, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3b68, gbc.sp());
        EXPECT(0xa298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa296));
        EXPECT(0x85, gbc.readMem(0xa297));
        // CB 85 0080
        gbc.setState(0x303e, 0x5896, 0x1d40, 0x3c55, 0x6dbb, 0x786c, 0x0, 0x0);
        gbc.writeMem(0x303e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5896, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0081
        gbc.setState(0x2997, 0xcce3, 0x8ea0, 0x33b5, 0x3ced, 0xb7a9, 0x0, 0x0);
        gbc.writeMem(0x2997, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcce3, gbc.sp());
        EXPECT(0x2999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0082
        gbc.setState(0xd233, 0x2b8c, 0xd8f0, 0x957c, 0x44bf, 0xe51f, 0x1, 0x0);
        gbc.writeMem(0xd233, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2b8c, gbc.sp());
        EXPECT(0xd235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd233));
        EXPECT(0x85, gbc.readMem(0xd234));
        // CB 85 0083
        gbc.setState(0x544b, 0x7a9d, 0x9910, 0xbed, 0x987d, 0xf82c, 0x0, 0x0);
        gbc.writeMem(0x544b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7a9d, gbc.sp());
        EXPECT(0x544d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0084
        gbc.setState(0x3bfc, 0x5839, 0xea50, 0xdfdf, 0x9b2d, 0x774, 0x1, 0x1);
        gbc.writeMem(0x3bfc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5839, gbc.sp());
        EXPECT(0x3bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0085
        gbc.setState(0x80c7, 0x7e5f, 0x2000, 0x3781, 0x3262, 0x5ea1, 0x0, 0x0);
        gbc.writeMem(0x80c7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7e5f, gbc.sp());
        EXPECT(0x80c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c7));
        EXPECT(0x85, gbc.readMem(0x80c8));
        // CB 85 0086
        gbc.setState(0x44b2, 0x545f, 0xa450, 0x4e03, 0x2fa6, 0x8aa2, 0x0, 0x1);
        gbc.writeMem(0x44b2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x545f, gbc.sp());
        EXPECT(0x44b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0087
        gbc.setState(0xfae, 0x39da, 0x5450, 0xad2e, 0xc95c, 0x33a1, 0x0, 0x1);
        gbc.writeMem(0xfae, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x39da, gbc.sp());
        EXPECT(0xfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0088
        gbc.setState(0xd4d, 0xcf6e, 0x5d30, 0x2bb8, 0x80c6, 0x6655, 0x0, 0x0);
        gbc.writeMem(0xd4d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcf6e, gbc.sp());
        EXPECT(0xd4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0089
        gbc.setState(0x5b20, 0x6bdd, 0xf50, 0xf375, 0xae2, 0xa7a4, 0x0, 0x1);
        gbc.writeMem(0x5b20, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6bdd, gbc.sp());
        EXPECT(0x5b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 008A
        gbc.setState(0x5f03, 0x918f, 0x7d70, 0xe3ca, 0xb1cb, 0x8f82, 0x0, 0x0);
        gbc.writeMem(0x5f03, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x918f, gbc.sp());
        EXPECT(0x5f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 008C
        gbc.setState(0x75d, 0x6c14, 0x99f0, 0x86b1, 0xb580, 0x1e12, 0x1, 0x1);
        gbc.writeMem(0x75d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6c14, gbc.sp());
        EXPECT(0x75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 008D
        gbc.setState(0x7bc3, 0x7da8, 0xd4b0, 0x53e3, 0x1df6, 0xc86a, 0x1, 0x1);
        gbc.writeMem(0x7bc3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7da8, gbc.sp());
        EXPECT(0x7bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 008E
        gbc.setState(0x4d42, 0x9383, 0x3ca0, 0x651b, 0x60e0, 0xd6e0, 0x0, 0x1);
        gbc.writeMem(0x4d42, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9383, gbc.sp());
        EXPECT(0x4d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 008F
        gbc.setState(0x275c, 0x21fc, 0xad00, 0x1ab3, 0x68de, 0x3079, 0x1, 0x1);
        gbc.writeMem(0x275c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x21fc, gbc.sp());
        EXPECT(0x275e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0090
        gbc.setState(0xec4c, 0x4d6d, 0xa780, 0xd42e, 0x4522, 0x2bc3, 0x1, 0x1);
        gbc.writeMem(0xec4c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4d6d, gbc.sp());
        EXPECT(0xec4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4c));
        EXPECT(0x85, gbc.readMem(0xec4d));
        // CB 85 0091
        gbc.setState(0x7a42, 0xbc15, 0x2b10, 0xde1e, 0x81f5, 0x3e5f, 0x1, 0x1);
        gbc.writeMem(0x7a42, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbc15, gbc.sp());
        EXPECT(0x7a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0092
        gbc.setState(0x2fc9, 0x6a0c, 0x8bc0, 0xf122, 0xeba3, 0xdff5, 0x1, 0x0);
        gbc.writeMem(0x2fc9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6a0c, gbc.sp());
        EXPECT(0x2fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0093
        gbc.setState(0x9985, 0x5bb9, 0x8960, 0xbd23, 0x93fc, 0x4962, 0x1, 0x0);
        gbc.writeMem(0x9985, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5bb9, gbc.sp());
        EXPECT(0x9987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9985));
        EXPECT(0x85, gbc.readMem(0x9986));
        // CB 85 0094
        gbc.setState(0x3692, 0x922f, 0xd2c0, 0x6079, 0xbb28, 0x13de, 0x0, 0x0);
        gbc.writeMem(0x3692, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x922f, gbc.sp());
        EXPECT(0x3694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0095
        gbc.setState(0x903b, 0x4d5b, 0xe400, 0x9df3, 0x73a1, 0x69e, 0x0, 0x1);
        gbc.writeMem(0x903b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4d5b, gbc.sp());
        EXPECT(0x903d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903b));
        EXPECT(0x85, gbc.readMem(0x903c));
        // CB 85 0096
        gbc.setState(0x7bcd, 0x1fcb, 0xbf0, 0x329e, 0xf704, 0xe275, 0x1, 0x0);
        gbc.writeMem(0x7bcd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1fcb, gbc.sp());
        EXPECT(0x7bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0097
        gbc.setState(0x98df, 0xdab4, 0x75e0, 0x5c74, 0xd76e, 0x7261, 0x0, 0x0);
        gbc.writeMem(0x98df, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdab4, gbc.sp());
        EXPECT(0x98e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98df));
        EXPECT(0x85, gbc.readMem(0x98e0));
        // CB 85 0098
        gbc.setState(0x5803, 0x7e0c, 0x9230, 0xe1d8, 0xfd2, 0x869c, 0x0, 0x1);
        gbc.writeMem(0x5803, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7e0c, gbc.sp());
        EXPECT(0x5805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0099
        gbc.setState(0x9188, 0x505f, 0x8630, 0x8ba5, 0x449d, 0x2ea1, 0x1, 0x0);
        gbc.writeMem(0x9188, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x505f, gbc.sp());
        EXPECT(0x918a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9188));
        EXPECT(0x85, gbc.readMem(0x9189));
        // CB 85 009A
        gbc.setState(0x22c7, 0x9767, 0xff0, 0xe25c, 0x641c, 0xe344, 0x1, 0x1);
        gbc.writeMem(0x22c7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9767, gbc.sp());
        EXPECT(0x22c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 009B
        gbc.setState(0x6e59, 0xec77, 0xd710, 0xab04, 0x47e8, 0x2098, 0x0, 0x0);
        gbc.writeMem(0x6e59, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xec77, gbc.sp());
        EXPECT(0x6e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 009C
        gbc.setState(0xc9be, 0x4e01, 0xc960, 0xffc2, 0x9b79, 0xcc25, 0x0, 0x1);
        gbc.writeMem(0xc9be, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4e01, gbc.sp());
        EXPECT(0xc9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9be));
        EXPECT(0x85, gbc.readMem(0xc9bf));
        // CB 85 009D
        gbc.setState(0x431d, 0x9626, 0xbaf0, 0xf991, 0xd27d, 0x7adc, 0x0, 0x1);
        gbc.writeMem(0x431d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9626, gbc.sp());
        EXPECT(0x431f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 009E
        gbc.setState(0xbe56, 0x9efc, 0x540, 0xc551, 0xa7de, 0x8b16, 0x1, 0x0);
        gbc.writeMem(0xbe56, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9efc, gbc.sp());
        EXPECT(0xbe58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe56));
        EXPECT(0x85, gbc.readMem(0xbe57));
        // CB 85 009F
        gbc.setState(0x78ec, 0x590d, 0x86c0, 0xbbb3, 0x3e68, 0x6e7, 0x1, 0x1);
        gbc.writeMem(0x78ec, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x590d, gbc.sp());
        EXPECT(0x78ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00A0
        gbc.setState(0xd82e, 0x2ac4, 0x2100, 0x4198, 0x3ef4, 0xf2eb, 0x0, 0x1);
        gbc.writeMem(0xd82e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2ac4, gbc.sp());
        EXPECT(0xd830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82e));
        EXPECT(0x85, gbc.readMem(0xd82f));
        // CB 85 00A1
        gbc.setState(0x8dad, 0x7fae, 0x2a10, 0x8047, 0x3493, 0x18c1, 0x1, 0x1);
        gbc.writeMem(0x8dad, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7fae, gbc.sp());
        EXPECT(0x8daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dad));
        EXPECT(0x85, gbc.readMem(0x8dae));
        // CB 85 00A2
        gbc.setState(0x3b49, 0xbd04, 0x25c0, 0xd437, 0x2169, 0x9f97, 0x0, 0x0);
        gbc.writeMem(0x3b49, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbd04, gbc.sp());
        EXPECT(0x3b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00A3
        gbc.setState(0x6e69, 0x1125, 0x5960, 0x4eaf, 0xedd7, 0x942b, 0x0, 0x0);
        gbc.writeMem(0x6e69, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1125, gbc.sp());
        EXPECT(0x6e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00A4
        gbc.setState(0xdac7, 0xdf08, 0x9420, 0xe5ac, 0x1fa2, 0xf0ca, 0x1, 0x1);
        gbc.writeMem(0xdac7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdf08, gbc.sp());
        EXPECT(0xdac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac7));
        EXPECT(0x85, gbc.readMem(0xdac8));
        // CB 85 00A5
        gbc.setState(0xdd5c, 0x28f6, 0x4e80, 0x2f74, 0xf4a2, 0x5998, 0x1, 0x1);
        gbc.writeMem(0xdd5c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x28f6, gbc.sp());
        EXPECT(0xdd5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5c));
        EXPECT(0x85, gbc.readMem(0xdd5d));
        // CB 85 00A6
        gbc.setState(0x6f07, 0x66f4, 0x8040, 0x4fe6, 0x3a3e, 0xc00a, 0x1, 0x1);
        gbc.writeMem(0x6f07, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x66f4, gbc.sp());
        EXPECT(0x6f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00A7
        gbc.setState(0xbe7b, 0x18fb, 0xe260, 0xa45f, 0xf896, 0x7615, 0x1, 0x1);
        gbc.writeMem(0xbe7b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x18fb, gbc.sp());
        EXPECT(0xbe7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7b));
        EXPECT(0x85, gbc.readMem(0xbe7c));
        // CB 85 00A8
        gbc.setState(0x2374, 0x36f2, 0xcb40, 0x52bb, 0x747e, 0x7906, 0x1, 0x1);
        gbc.writeMem(0x2374, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x36f2, gbc.sp());
        EXPECT(0x2376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00A9
        gbc.setState(0x3256, 0x73a, 0x8910, 0xe818, 0x43a0, 0xa454, 0x1, 0x0);
        gbc.writeMem(0x3256, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x73a, gbc.sp());
        EXPECT(0x3258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00AA
        gbc.setState(0xd0a2, 0xfae8, 0xb90, 0x19a6, 0x1f43, 0x7941, 0x0, 0x0);
        gbc.writeMem(0xd0a2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfae8, gbc.sp());
        EXPECT(0xd0a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a2));
        EXPECT(0x85, gbc.readMem(0xd0a3));
        // CB 85 00AB
        gbc.setState(0x261d, 0xa284, 0x64f0, 0xfce, 0xd0c1, 0xe3db, 0x0, 0x1);
        gbc.writeMem(0x261d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa284, gbc.sp());
        EXPECT(0x261f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00AC
        gbc.setState(0xe2dc, 0x45a3, 0xdad0, 0xe76b, 0x8019, 0x3533, 0x0, 0x1);
        gbc.writeMem(0xe2dc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x45a3, gbc.sp());
        EXPECT(0xe2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2dc));
        EXPECT(0x85, gbc.readMem(0xe2dd));
        // CB 85 00AD
        gbc.setState(0x53c8, 0xaa23, 0x2450, 0x2e82, 0xc72a, 0xfd0d, 0x0, 0x0);
        gbc.writeMem(0x53c8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaa23, gbc.sp());
        EXPECT(0x53ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00AE
        gbc.setState(0xd0da, 0xfebd, 0x1b40, 0x1c4d, 0x20e2, 0x484a, 0x0, 0x0);
        gbc.writeMem(0xd0da, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfebd, gbc.sp());
        EXPECT(0xd0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0da));
        EXPECT(0x85, gbc.readMem(0xd0db));
        // CB 85 00AF
        gbc.setState(0xb12e, 0x2986, 0x5c60, 0x9c75, 0x84db, 0xb893, 0x0, 0x0);
        gbc.writeMem(0xb12e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2986, gbc.sp());
        EXPECT(0xb130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12e));
        EXPECT(0x85, gbc.readMem(0xb12f));
        // CB 85 00B0
        gbc.setState(0xe773, 0xe528, 0xa1e0, 0x53f5, 0x11b6, 0xc41a, 0x0, 0x0);
        gbc.writeMem(0xe773, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe528, gbc.sp());
        EXPECT(0xe775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe773));
        EXPECT(0x85, gbc.readMem(0xe774));
        // CB 85 00B1
        gbc.setState(0xe8d5, 0xf1ca, 0x2f10, 0x76d3, 0x702, 0xd4cb, 0x1, 0x1);
        gbc.writeMem(0xe8d5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf1ca, gbc.sp());
        EXPECT(0xe8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d5));
        EXPECT(0x85, gbc.readMem(0xe8d6));
        // CB 85 00B2
        gbc.setState(0xe9ea, 0x359e, 0xdaf0, 0xffd3, 0xaec, 0x28ce, 0x1, 0x1);
        gbc.writeMem(0xe9ea, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x359e, gbc.sp());
        EXPECT(0xe9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ea));
        EXPECT(0x85, gbc.readMem(0xe9eb));
        // CB 85 00B3
        gbc.setState(0x783e, 0xd771, 0xf6c0, 0x3c24, 0x4c9e, 0xfc82, 0x0, 0x1);
        gbc.writeMem(0x783e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd771, gbc.sp());
        EXPECT(0x7840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00B4
        gbc.setState(0x52e0, 0x1d66, 0xc00, 0x5793, 0xc3ee, 0x9caa, 0x1, 0x0);
        gbc.writeMem(0x52e0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1d66, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00B5
        gbc.setState(0x775a, 0x7f3d, 0xcfa0, 0x589c, 0x6240, 0x2cf6, 0x1, 0x1);
        gbc.writeMem(0x775a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7f3d, gbc.sp());
        EXPECT(0x775c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00B6
        gbc.setState(0x6889, 0xd764, 0x7ea0, 0x495c, 0xa967, 0x7b84, 0x1, 0x0);
        gbc.writeMem(0x6889, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd764, gbc.sp());
        EXPECT(0x688b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00B7
        gbc.setState(0x3972, 0x3675, 0xccb0, 0xea6c, 0xeeb7, 0x2f4d, 0x0, 0x0);
        gbc.writeMem(0x3972, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3675, gbc.sp());
        EXPECT(0x3974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00B8
        gbc.setState(0x6624, 0xf42e, 0x4d10, 0xd6d2, 0x6911, 0xe783, 0x0, 0x0);
        gbc.writeMem(0x6624, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf42e, gbc.sp());
        EXPECT(0x6626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00B9
        gbc.setState(0x908f, 0xcb72, 0x620, 0xcfc7, 0x915, 0xa696, 0x0, 0x0);
        gbc.writeMem(0x908f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcb72, gbc.sp());
        EXPECT(0x9091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908f));
        EXPECT(0x85, gbc.readMem(0x9090));
        // CB 85 00BA
        gbc.setState(0x789, 0x64ec, 0xa300, 0xa28, 0xd17d, 0xda28, 0x0, 0x0);
        gbc.writeMem(0x789, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x64ec, gbc.sp());
        EXPECT(0x78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00BB
        gbc.setState(0x3de7, 0xf76c, 0xac70, 0x743f, 0x155b, 0x3842, 0x1, 0x0);
        gbc.writeMem(0x3de7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf76c, gbc.sp());
        EXPECT(0x3de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00BC
        gbc.setState(0x400e, 0xaa83, 0x3ff0, 0xb277, 0x8ee8, 0xa57b, 0x1, 0x1);
        gbc.writeMem(0x400e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xaa83, gbc.sp());
        EXPECT(0x4010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00BD
        gbc.setState(0x543f, 0xc45e, 0x39a0, 0x8b0e, 0x9dcf, 0x74d4, 0x0, 0x0);
        gbc.writeMem(0x543f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc45e, gbc.sp());
        EXPECT(0x5441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00BE
        gbc.setState(0x513b, 0xc2fa, 0x55b0, 0xf267, 0xb859, 0x7ca7, 0x1, 0x0);
        gbc.writeMem(0x513b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc2fa, gbc.sp());
        EXPECT(0x513d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00C0
        gbc.setState(0x7b5e, 0x5cdf, 0x8380, 0x47df, 0xc959, 0x291f, 0x1, 0x1);
        gbc.writeMem(0x7b5e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5cdf, gbc.sp());
        EXPECT(0x7b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00C1
        gbc.setState(0x3d8f, 0x9a14, 0xc550, 0xa20, 0xa019, 0xe654, 0x1, 0x0);
        gbc.writeMem(0x3d8f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9a14, gbc.sp());
        EXPECT(0x3d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00C2
        gbc.setState(0xb78e, 0x8b06, 0xff80, 0xd7c7, 0x2f79, 0xd1a5, 0x0, 0x0);
        gbc.writeMem(0xb78e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8b06, gbc.sp());
        EXPECT(0xb790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78e));
        EXPECT(0x85, gbc.readMem(0xb78f));
        // CB 85 00C4
        gbc.setState(0xaba8, 0xe56c, 0xe8f0, 0xe17d, 0xdd8b, 0x5d1c, 0x1, 0x1);
        gbc.writeMem(0xaba8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe56c, gbc.sp());
        EXPECT(0xabaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaba8));
        EXPECT(0x85, gbc.readMem(0xaba9));
        // CB 85 00C5
        gbc.setState(0x11af, 0xfec8, 0x7c80, 0x3780, 0xf40b, 0x1e84, 0x1, 0x1);
        gbc.writeMem(0x11af, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfec8, gbc.sp());
        EXPECT(0x11b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00C6
        gbc.setState(0x8323, 0x3ef5, 0xf600, 0x7fb2, 0xe191, 0xfc2, 0x1, 0x0);
        gbc.writeMem(0x8323, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3ef5, gbc.sp());
        EXPECT(0x8325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8323));
        EXPECT(0x85, gbc.readMem(0x8324));
        // CB 85 00C7
        gbc.setState(0xa64e, 0xc3e3, 0x3fa0, 0x4867, 0x1e3b, 0xeaff, 0x0, 0x0);
        gbc.writeMem(0xa64e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc3e3, gbc.sp());
        EXPECT(0xa650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64e));
        EXPECT(0x85, gbc.readMem(0xa64f));
        // CB 85 00C9
        gbc.setState(0x338d, 0xa22e, 0xbd20, 0x54f3, 0x2324, 0xe50b, 0x1, 0x1);
        gbc.writeMem(0x338d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa22e, gbc.sp());
        EXPECT(0x338f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00CA
        gbc.setState(0xa6ec, 0x9e, 0xac10, 0x8579, 0x74d6, 0x2f7, 0x1, 0x0);
        gbc.writeMem(0xa6ec, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9e, gbc.sp());
        EXPECT(0xa6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ec));
        EXPECT(0x85, gbc.readMem(0xa6ed));
        // CB 85 00CB
        gbc.setState(0x92da, 0x91c5, 0xf910, 0xf1c, 0xd63e, 0x87ca, 0x1, 0x0);
        gbc.writeMem(0x92da, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x91c5, gbc.sp());
        EXPECT(0x92dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92da));
        EXPECT(0x85, gbc.readMem(0x92db));
        // CB 85 00CC
        gbc.setState(0xd15f, 0x96ce, 0x9e90, 0x69fc, 0x6c0c, 0x2f9f, 0x0, 0x1);
        gbc.writeMem(0xd15f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x96ce, gbc.sp());
        EXPECT(0xd161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15f));
        EXPECT(0x85, gbc.readMem(0xd160));
        // CB 85 00CD
        gbc.setState(0x1ed0, 0xbf47, 0x7ff0, 0xd5e7, 0x1f6b, 0xace5, 0x1, 0x0);
        gbc.writeMem(0x1ed0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbf47, gbc.sp());
        EXPECT(0x1ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00CE
        gbc.setState(0x677a, 0x6bf9, 0x69f0, 0xfc75, 0x9e3a, 0xb2ad, 0x1, 0x1);
        gbc.writeMem(0x677a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6bf9, gbc.sp());
        EXPECT(0x677c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00CF
        gbc.setState(0x378c, 0x54f9, 0x9560, 0x2a96, 0xd413, 0x2982, 0x0, 0x1);
        gbc.writeMem(0x378c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x54f9, gbc.sp());
        EXPECT(0x378e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00D0
        gbc.setState(0x247a, 0x50db, 0x1130, 0x8632, 0x4030, 0x60f, 0x0, 0x0);
        gbc.writeMem(0x247a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x50db, gbc.sp());
        EXPECT(0x247c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00D1
        gbc.setState(0x633a, 0xb04, 0x4f50, 0xd453, 0x171f, 0x1784, 0x0, 0x1);
        gbc.writeMem(0x633a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb04, gbc.sp());
        EXPECT(0x633c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00D2
        gbc.setState(0x889a, 0xe3aa, 0x9de0, 0x4d86, 0x937c, 0xb721, 0x1, 0x1);
        gbc.writeMem(0x889a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe3aa, gbc.sp());
        EXPECT(0x889c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889a));
        EXPECT(0x85, gbc.readMem(0x889b));
        // CB 85 00D3
        gbc.setState(0xad48, 0x11f0, 0xeee0, 0xbd0a, 0x3bb1, 0xbece, 0x1, 0x1);
        gbc.writeMem(0xad48, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x11f0, gbc.sp());
        EXPECT(0xad4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad48));
        EXPECT(0x85, gbc.readMem(0xad49));
        // CB 85 00D4
        gbc.setState(0xc2ad, 0x7eb1, 0x7f50, 0xae0d, 0x51ea, 0x6d8d, 0x1, 0x0);
        gbc.writeMem(0xc2ad, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7eb1, gbc.sp());
        EXPECT(0xc2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ad));
        EXPECT(0x85, gbc.readMem(0xc2ae));
        // CB 85 00D5
        gbc.setState(0x6bbb, 0x7f38, 0x9870, 0xfde, 0xe1e4, 0xad49, 0x0, 0x0);
        gbc.writeMem(0x6bbb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7f38, gbc.sp());
        EXPECT(0x6bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00D6
        gbc.setState(0x8cdd, 0x1068, 0xcbf0, 0x5450, 0x3a8f, 0x5274, 0x0, 0x1);
        gbc.writeMem(0x8cdd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1068, gbc.sp());
        EXPECT(0x8cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cdd));
        EXPECT(0x85, gbc.readMem(0x8cde));
        // CB 85 00D7
        gbc.setState(0x7d46, 0x93be, 0x5ff0, 0x1b73, 0xc02, 0x12cd, 0x0, 0x0);
        gbc.writeMem(0x7d46, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x93be, gbc.sp());
        EXPECT(0x7d48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00D8
        gbc.setState(0x6d13, 0xa8b0, 0xa40, 0x3274, 0x54cf, 0xf60f, 0x0, 0x0);
        gbc.writeMem(0x6d13, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa8b0, gbc.sp());
        EXPECT(0x6d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00D9
        gbc.setState(0x779a, 0x4ac1, 0x4b60, 0x7212, 0x2a8c, 0xb7be, 0x1, 0x0);
        gbc.writeMem(0x779a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4ac1, gbc.sp());
        EXPECT(0x779c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00DB
        gbc.setState(0x69f, 0x49bd, 0xdac0, 0x367d, 0x2b00, 0x48ce, 0x1, 0x1);
        gbc.writeMem(0x69f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x49bd, gbc.sp());
        EXPECT(0x6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00DC
        gbc.setState(0x18, 0xe871, 0x480, 0xa0e, 0xe091, 0xd4ac, 0x0, 0x0);
        gbc.writeMem(0x18, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe871, gbc.sp());
        EXPECT(0x1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00DD
        gbc.setState(0xaaaf, 0xe72a, 0xbbf0, 0xd40f, 0x1ec8, 0x4be6, 0x1, 0x0);
        gbc.writeMem(0xaaaf, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe72a, gbc.sp());
        EXPECT(0xaab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaaf));
        EXPECT(0x85, gbc.readMem(0xaab0));
        // CB 85 00DE
        gbc.setState(0xbe48, 0xfd9d, 0x2470, 0x7f7a, 0x57e3, 0xba78, 0x1, 0x1);
        gbc.writeMem(0xbe48, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfd9d, gbc.sp());
        EXPECT(0xbe4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe48));
        EXPECT(0x85, gbc.readMem(0xbe49));
        // CB 85 00DF
        gbc.setState(0x1d53, 0x9a47, 0x97b0, 0x82a, 0xa3e6, 0xf056, 0x0, 0x0);
        gbc.writeMem(0x1d53, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9a47, gbc.sp());
        EXPECT(0x1d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00E0
        gbc.setState(0x59dd, 0x5d1, 0x7980, 0x188, 0x207c, 0x1a32, 0x1, 0x1);
        gbc.writeMem(0x59dd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5d1, gbc.sp());
        EXPECT(0x59df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00E1
        gbc.setState(0x7892, 0xc287, 0x20f0, 0x8d9f, 0xe60b, 0xd7a6, 0x1, 0x0);
        gbc.writeMem(0x7892, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc287, gbc.sp());
        EXPECT(0x7894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00E2
        gbc.setState(0x45a2, 0x510, 0xdf20, 0x56f1, 0xaf4a, 0xfd0, 0x1, 0x0);
        gbc.writeMem(0x45a2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x510, gbc.sp());
        EXPECT(0x45a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00E3
        gbc.setState(0xe0fe, 0xb526, 0x2250, 0xb568, 0x3eba, 0x82fa, 0x0, 0x1);
        gbc.writeMem(0xe0fe, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb526, gbc.sp());
        EXPECT(0xe100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0fe));
        EXPECT(0x85, gbc.readMem(0xe0ff));
        // CB 85 00E4
        gbc.setState(0x5c0a, 0xfa96, 0x3720, 0x80d0, 0x8aa9, 0x2874, 0x1, 0x1);
        gbc.writeMem(0x5c0a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfa96, gbc.sp());
        EXPECT(0x5c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00E5
        gbc.setState(0xc7eb, 0x8312, 0xa2b0, 0xf6c, 0x9e3, 0x22c3, 0x0, 0x0);
        gbc.writeMem(0xc7eb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8312, gbc.sp());
        EXPECT(0xc7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7eb));
        EXPECT(0x85, gbc.readMem(0xc7ec));
        // CB 85 00E6
        gbc.setState(0xe55b, 0x7c91, 0x17e0, 0x5393, 0x717, 0xd1ca, 0x0, 0x1);
        gbc.writeMem(0xe55b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7c91, gbc.sp());
        EXPECT(0xe55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55b));
        EXPECT(0x85, gbc.readMem(0xe55c));
        // CB 85 00E7
        gbc.setState(0x7aba, 0x2ce1, 0x8930, 0x40c0, 0x64de, 0xc852, 0x1, 0x0);
        gbc.writeMem(0x7aba, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2ce1, gbc.sp());
        EXPECT(0x7abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00E8
        gbc.setState(0x4595, 0xb123, 0xfe0, 0xed78, 0x37fa, 0x53a5, 0x1, 0x1);
        gbc.writeMem(0x4595, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb123, gbc.sp());
        EXPECT(0x4597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00E9
        gbc.setState(0x63fb, 0x502d, 0xdaf0, 0x44f5, 0x8d42, 0x8072, 0x1, 0x0);
        gbc.writeMem(0x63fb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x502d, gbc.sp());
        EXPECT(0x63fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00EA
        gbc.setState(0x8b34, 0xc614, 0x6ce0, 0x1d10, 0xc9e3, 0xa91b, 0x1, 0x1);
        gbc.writeMem(0x8b34, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc614, gbc.sp());
        EXPECT(0x8b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b34));
        EXPECT(0x85, gbc.readMem(0x8b35));
        // CB 85 00EB
        gbc.setState(0x15bd, 0x9016, 0x6f10, 0xbbc9, 0xd211, 0x7287, 0x1, 0x1);
        gbc.writeMem(0x15bd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9016, gbc.sp());
        EXPECT(0x15bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00EC
        gbc.setState(0xae99, 0xf67c, 0x2d80, 0x8567, 0x7eaf, 0xea24, 0x0, 0x1);
        gbc.writeMem(0xae99, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf67c, gbc.sp());
        EXPECT(0xae9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae99));
        EXPECT(0x85, gbc.readMem(0xae9a));
        // CB 85 00ED
        gbc.setState(0xdb78, 0x78e8, 0x4150, 0x39db, 0xc069, 0x1e81, 0x1, 0x0);
        gbc.writeMem(0xdb78, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x78e8, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb78));
        EXPECT(0x85, gbc.readMem(0xdb79));
        // CB 85 00EE
        gbc.setState(0xaae5, 0x7853, 0xdbc0, 0x219c, 0x456, 0x7bf5, 0x0, 0x0);
        gbc.writeMem(0xaae5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7853, gbc.sp());
        EXPECT(0xaae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae5));
        EXPECT(0x85, gbc.readMem(0xaae6));
        // CB 85 00EF
        gbc.setState(0x34cb, 0x7f58, 0x8520, 0x7381, 0x29a0, 0x9f8c, 0x1, 0x0);
        gbc.writeMem(0x34cb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7f58, gbc.sp());
        EXPECT(0x34cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00F0
        gbc.setState(0x9de8, 0x7d92, 0x2a80, 0xe289, 0x8b75, 0xf0e4, 0x1, 0x1);
        gbc.writeMem(0x9de8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7d92, gbc.sp());
        EXPECT(0x9dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de8));
        EXPECT(0x85, gbc.readMem(0x9de9));
        // CB 85 00F1
        gbc.setState(0x6a4c, 0x7417, 0x7240, 0x25b3, 0x6d29, 0x22d2, 0x1, 0x1);
        gbc.writeMem(0x6a4c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7417, gbc.sp());
        EXPECT(0x6a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00F2
        gbc.setState(0xdb43, 0xc2ea, 0xb0c0, 0x966, 0x44dd, 0xcdc3, 0x1, 0x1);
        gbc.writeMem(0xdb43, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc2ea, gbc.sp());
        EXPECT(0xdb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb43));
        EXPECT(0x85, gbc.readMem(0xdb44));
        // CB 85 00F3
        gbc.setState(0x7684, 0x3033, 0x8320, 0xf5df, 0x64dd, 0xa566, 0x1, 0x1);
        gbc.writeMem(0x7684, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3033, gbc.sp());
        EXPECT(0x7686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00F5
        gbc.setState(0xdf35, 0xcc36, 0xe4d0, 0x78c5, 0xcaa8, 0x2aa2, 0x1, 0x0);
        gbc.writeMem(0xdf35, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcc36, gbc.sp());
        EXPECT(0xdf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf35));
        EXPECT(0x85, gbc.readMem(0xdf36));
        // CB 85 00F6
        gbc.setState(0xdf82, 0xe09e, 0xcfa0, 0x27a9, 0xde8f, 0x7df8, 0x0, 0x0);
        gbc.writeMem(0xdf82, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe09e, gbc.sp());
        EXPECT(0xdf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf82));
        EXPECT(0x85, gbc.readMem(0xdf83));
        // CB 85 00F7
        gbc.setState(0x5417, 0xc2d7, 0x17e0, 0xccd5, 0x2637, 0x8b69, 0x0, 0x1);
        gbc.writeMem(0x5417, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc2d7, gbc.sp());
        EXPECT(0x5419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 00F8
        gbc.setState(0xe4b0, 0x822b, 0x1740, 0x99e4, 0xda38, 0x5369, 0x0, 0x0);
        gbc.writeMem(0xe4b0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x822b, gbc.sp());
        EXPECT(0xe4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b0));
        EXPECT(0x85, gbc.readMem(0xe4b1));
        // CB 85 00F9
        gbc.setState(0xeb4c, 0x1852, 0x12d0, 0x7e18, 0x8759, 0x1deb, 0x1, 0x1);
        gbc.writeMem(0xeb4c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1852, gbc.sp());
        EXPECT(0xeb4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4c));
        EXPECT(0x85, gbc.readMem(0xeb4d));
        // CB 85 00FA
        gbc.setState(0xd504, 0x38c8, 0x53a0, 0x8d13, 0x57e4, 0x4133, 0x0, 0x1);
        gbc.writeMem(0xd504, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x38c8, gbc.sp());
        EXPECT(0xd506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd504));
        EXPECT(0x85, gbc.readMem(0xd505));
        // CB 85 00FB
        gbc.setState(0x7b22, 0x66c9, 0x7dd0, 0x962d, 0x705e, 0xb9db, 0x1, 0x1);
        gbc.writeMem(0x7b22, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x66c9, gbc.sp());
        EXPECT(0x7b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00FC
        gbc.setState(0x1f70, 0x6f87, 0x25d0, 0x98c, 0xa4d7, 0x1bcd, 0x0, 0x0);
        gbc.writeMem(0x1f70, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6f87, gbc.sp());
        EXPECT(0x1f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00FD
        gbc.setState(0xad59, 0xce83, 0xfc30, 0x3f7a, 0xe701, 0x41f, 0x0, 0x1);
        gbc.writeMem(0xad59, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xce83, gbc.sp());
        EXPECT(0xad5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad59));
        EXPECT(0x85, gbc.readMem(0xad5a));
        // CB 85 00FE
        gbc.setState(0x1797, 0x9c51, 0x950, 0x4ba, 0x7558, 0xf511, 0x1, 0x0);
        gbc.writeMem(0x1797, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9c51, gbc.sp());
        EXPECT(0x1799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 00FF
        gbc.setState(0xa6b7, 0xcf81, 0x1e60, 0x3584, 0x22b3, 0x6342, 0x1, 0x0);
        gbc.writeMem(0xa6b7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcf81, gbc.sp());
        EXPECT(0xa6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b7));
        EXPECT(0x85, gbc.readMem(0xa6b8));
        // CB 85 0100
        gbc.setState(0xb6ce, 0xd0e9, 0xba50, 0xce12, 0xb84a, 0xefc8, 0x1, 0x0);
        gbc.writeMem(0xb6ce, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd0e9, gbc.sp());
        EXPECT(0xb6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ce));
        EXPECT(0x85, gbc.readMem(0xb6cf));
        // CB 85 0101
        gbc.setState(0xe22c, 0xd1a2, 0x9c10, 0xeaa8, 0xc1d2, 0x54e1, 0x0, 0x0);
        gbc.writeMem(0xe22c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd1a2, gbc.sp());
        EXPECT(0xe22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22c));
        EXPECT(0x85, gbc.readMem(0xe22d));
        // CB 85 0102
        gbc.setState(0xb9e8, 0x1fc5, 0x3f0, 0xd096, 0x672f, 0x694e, 0x0, 0x0);
        gbc.writeMem(0xb9e8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1fc5, gbc.sp());
        EXPECT(0xb9ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e8));
        EXPECT(0x85, gbc.readMem(0xb9e9));
        // CB 85 0103
        gbc.setState(0x3342, 0x753c, 0x98d0, 0x78b7, 0xb64d, 0xc7c, 0x0, 0x0);
        gbc.writeMem(0x3342, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x753c, gbc.sp());
        EXPECT(0x3344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0104
        gbc.setState(0x104d, 0x5e91, 0x9b0, 0xd2c2, 0xa59f, 0x3e3e, 0x1, 0x0);
        gbc.writeMem(0x104d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5e91, gbc.sp());
        EXPECT(0x104f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0105
        gbc.setState(0xefd0, 0xcf3b, 0xf2c0, 0xafcc, 0xed7c, 0x1490, 0x0, 0x1);
        gbc.writeMem(0xefd0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcf3b, gbc.sp());
        EXPECT(0xefd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd0));
        EXPECT(0x85, gbc.readMem(0xefd1));
        // CB 85 0106
        gbc.setState(0xb195, 0x8693, 0xef10, 0xf87a, 0x8599, 0x4b2d, 0x0, 0x1);
        gbc.writeMem(0xb195, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8693, gbc.sp());
        EXPECT(0xb197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb195));
        EXPECT(0x85, gbc.readMem(0xb196));
        // CB 85 0107
        gbc.setState(0x2ae9, 0xafc3, 0x0, 0xdcd6, 0x5c5a, 0x6d32, 0x1, 0x0);
        gbc.writeMem(0x2ae9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xafc3, gbc.sp());
        EXPECT(0x2aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0108
        gbc.setState(0xcc3a, 0x1be4, 0xf250, 0xefe8, 0x4c4, 0x58f6, 0x0, 0x1);
        gbc.writeMem(0xcc3a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1be4, gbc.sp());
        EXPECT(0xcc3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3a));
        EXPECT(0x85, gbc.readMem(0xcc3b));
        // CB 85 0109
        gbc.setState(0xac68, 0x7f68, 0x6970, 0x4701, 0xdd32, 0xbf79, 0x1, 0x1);
        gbc.writeMem(0xac68, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7f68, gbc.sp());
        EXPECT(0xac6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac68));
        EXPECT(0x85, gbc.readMem(0xac69));
        // CB 85 010A
        gbc.setState(0xdb81, 0x5214, 0x5070, 0xeb1d, 0x9997, 0xcd13, 0x0, 0x1);
        gbc.writeMem(0xdb81, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5214, gbc.sp());
        EXPECT(0xdb83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb81));
        EXPECT(0x85, gbc.readMem(0xdb82));
        // CB 85 010C
        gbc.setState(0x14fa, 0xc5f1, 0x6300, 0x203c, 0xc795, 0xfbac, 0x0, 0x0);
        gbc.writeMem(0x14fa, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc5f1, gbc.sp());
        EXPECT(0x14fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 010D
        gbc.setState(0xac7c, 0x9df3, 0x78f0, 0xa132, 0x45ef, 0x5218, 0x0, 0x0);
        gbc.writeMem(0xac7c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9df3, gbc.sp());
        EXPECT(0xac7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7c));
        EXPECT(0x85, gbc.readMem(0xac7d));
        // CB 85 010F
        gbc.setState(0x15d4, 0xfa5c, 0x1040, 0x886e, 0xec0b, 0x7841, 0x0, 0x0);
        gbc.writeMem(0x15d4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfa5c, gbc.sp());
        EXPECT(0x15d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0110
        gbc.setState(0x7e09, 0x5fc8, 0xa990, 0xba0f, 0xf24f, 0xa53b, 0x1, 0x1);
        gbc.writeMem(0x7e09, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5fc8, gbc.sp());
        EXPECT(0x7e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0111
        gbc.setState(0x4db9, 0x2eb6, 0x8890, 0xb707, 0x814d, 0x6aa9, 0x1, 0x1);
        gbc.writeMem(0x4db9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2eb6, gbc.sp());
        EXPECT(0x4dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0112
        gbc.setState(0xd833, 0x56ff, 0xe0b0, 0x813a, 0xb100, 0x8045, 0x1, 0x0);
        gbc.writeMem(0xd833, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x56ff, gbc.sp());
        EXPECT(0xd835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd833));
        EXPECT(0x85, gbc.readMem(0xd834));
        // CB 85 0113
        gbc.setState(0x4fcb, 0x6d0c, 0x4500, 0xe7ef, 0x56b7, 0x7199, 0x0, 0x1);
        gbc.writeMem(0x4fcb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6d0c, gbc.sp());
        EXPECT(0x4fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0114
        gbc.setState(0x7d16, 0x3ef1, 0xafe0, 0x5a6d, 0x65bb, 0x47c7, 0x0, 0x1);
        gbc.writeMem(0x7d16, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3ef1, gbc.sp());
        EXPECT(0x7d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0115
        gbc.setState(0xe49b, 0x59f5, 0xb990, 0x3fca, 0xc50b, 0x8253, 0x0, 0x0);
        gbc.writeMem(0xe49b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x59f5, gbc.sp());
        EXPECT(0xe49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49b));
        EXPECT(0x85, gbc.readMem(0xe49c));
        // CB 85 0116
        gbc.setState(0x9f89, 0x275, 0xb90, 0xbb69, 0xc7d, 0x5710, 0x1, 0x0);
        gbc.writeMem(0x9f89, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x275, gbc.sp());
        EXPECT(0x9f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f89));
        EXPECT(0x85, gbc.readMem(0x9f8a));
        // CB 85 0117
        gbc.setState(0x837f, 0xc35e, 0x8290, 0xd50, 0x919a, 0x52d0, 0x1, 0x0);
        gbc.writeMem(0x837f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc35e, gbc.sp());
        EXPECT(0x8381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837f));
        EXPECT(0x85, gbc.readMem(0x8380));
        // CB 85 0118
        gbc.setState(0x83f5, 0x450c, 0x1ee0, 0xfa6e, 0xa311, 0xc8e, 0x0, 0x1);
        gbc.writeMem(0x83f5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x450c, gbc.sp());
        EXPECT(0x83f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f5));
        EXPECT(0x85, gbc.readMem(0x83f6));
        // CB 85 0119
        gbc.setState(0xd4db, 0x22c9, 0xdc0, 0xff21, 0xd469, 0x43b5, 0x0, 0x1);
        gbc.writeMem(0xd4db, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x22c9, gbc.sp());
        EXPECT(0xd4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4db));
        EXPECT(0x85, gbc.readMem(0xd4dc));
        // CB 85 011A
        gbc.setState(0xa0e2, 0x74b2, 0x43a0, 0xb4f0, 0xbc4a, 0xa09d, 0x0, 0x0);
        gbc.writeMem(0xa0e2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x74b2, gbc.sp());
        EXPECT(0xa0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e2));
        EXPECT(0x85, gbc.readMem(0xa0e3));
        // CB 85 011B
        gbc.setState(0xcb93, 0x88d5, 0xfc00, 0x787a, 0x9db5, 0x11f3, 0x0, 0x0);
        gbc.writeMem(0xcb93, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x88d5, gbc.sp());
        EXPECT(0xcb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb93));
        EXPECT(0x85, gbc.readMem(0xcb94));
        // CB 85 011C
        gbc.setState(0x67f1, 0x901b, 0x8890, 0xa1f1, 0x7d7e, 0x1c18, 0x0, 0x1);
        gbc.writeMem(0x67f1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x901b, gbc.sp());
        EXPECT(0x67f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 011D
        gbc.setState(0xd469, 0x16b9, 0x9e30, 0xe35d, 0xa681, 0x7c3, 0x1, 0x1);
        gbc.writeMem(0xd469, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x16b9, gbc.sp());
        EXPECT(0xd46b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd469));
        EXPECT(0x85, gbc.readMem(0xd46a));
        // CB 85 011E
        gbc.setState(0x37b8, 0x9b12, 0x8180, 0x4bc, 0x649, 0x4d45, 0x0, 0x1);
        gbc.writeMem(0x37b8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9b12, gbc.sp());
        EXPECT(0x37ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 011F
        gbc.setState(0x958a, 0x646b, 0x7910, 0xd2f8, 0x8d1e, 0x6072, 0x0, 0x1);
        gbc.writeMem(0x958a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x646b, gbc.sp());
        EXPECT(0x958c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x958a));
        EXPECT(0x85, gbc.readMem(0x958b));
        // CB 85 0120
        gbc.setState(0xa110, 0x112f, 0xbd30, 0x623c, 0xcc5c, 0xbc37, 0x0, 0x0);
        gbc.writeMem(0xa110, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x112f, gbc.sp());
        EXPECT(0xa112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa110));
        EXPECT(0x85, gbc.readMem(0xa111));
        // CB 85 0121
        gbc.setState(0x8d98, 0x6ae7, 0x20b0, 0x98c1, 0x64a7, 0x9a02, 0x0, 0x1);
        gbc.writeMem(0x8d98, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6ae7, gbc.sp());
        EXPECT(0x8d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d98));
        EXPECT(0x85, gbc.readMem(0x8d99));
        // CB 85 0122
        gbc.setState(0xbc44, 0xbf35, 0x3310, 0xa4fe, 0x673a, 0xbde8, 0x1, 0x0);
        gbc.writeMem(0xbc44, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbf35, gbc.sp());
        EXPECT(0xbc46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc44));
        EXPECT(0x85, gbc.readMem(0xbc45));
        // CB 85 0123
        gbc.setState(0x5098, 0x637a, 0xb2e0, 0x581c, 0x500f, 0xb4db, 0x0, 0x1);
        gbc.writeMem(0x5098, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x637a, gbc.sp());
        EXPECT(0x509a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0124
        gbc.setState(0xaeb4, 0x669, 0x7f0, 0xf3e5, 0x9f47, 0x5998, 0x1, 0x1);
        gbc.writeMem(0xaeb4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x669, gbc.sp());
        EXPECT(0xaeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb4));
        EXPECT(0x85, gbc.readMem(0xaeb5));
        // CB 85 0125
        gbc.setState(0xb761, 0x3d6b, 0xf900, 0xf50, 0x544f, 0xd731, 0x1, 0x1);
        gbc.writeMem(0xb761, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3d6b, gbc.sp());
        EXPECT(0xb763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb761));
        EXPECT(0x85, gbc.readMem(0xb762));
        // CB 85 0126
        gbc.setState(0x9260, 0x43db, 0xf070, 0x243c, 0x3ad7, 0x6743, 0x0, 0x1);
        gbc.writeMem(0x9260, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x43db, gbc.sp());
        EXPECT(0x9262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9260));
        EXPECT(0x85, gbc.readMem(0x9261));
        // CB 85 0127
        gbc.setState(0x9871, 0x1a7, 0x7f60, 0x8bf1, 0xb88d, 0xe656, 0x1, 0x0);
        gbc.writeMem(0x9871, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1a7, gbc.sp());
        EXPECT(0x9873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9871));
        EXPECT(0x85, gbc.readMem(0x9872));
        // CB 85 0128
        gbc.setState(0x1836, 0xd1ba, 0xaaf0, 0x1c6f, 0xb265, 0x125d, 0x1, 0x1);
        gbc.writeMem(0x1836, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd1ba, gbc.sp());
        EXPECT(0x1838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0129
        gbc.setState(0xaabe, 0xc16, 0xb470, 0x1a9a, 0xb674, 0x18b0, 0x1, 0x0);
        gbc.writeMem(0xaabe, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc16, gbc.sp());
        EXPECT(0xaac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabe));
        EXPECT(0x85, gbc.readMem(0xaabf));
        // CB 85 012A
        gbc.setState(0x2fd4, 0x6b3a, 0x4af0, 0xb1c7, 0x9f4, 0xebb5, 0x0, 0x1);
        gbc.writeMem(0x2fd4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6b3a, gbc.sp());
        EXPECT(0x2fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 012B
        gbc.setState(0x8071, 0x7ebe, 0xf30, 0x28a4, 0x967e, 0x8de8, 0x1, 0x1);
        gbc.writeMem(0x8071, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7ebe, gbc.sp());
        EXPECT(0x8073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8071));
        EXPECT(0x85, gbc.readMem(0x8072));
        // CB 85 012C
        gbc.setState(0x30d, 0xaf78, 0x4880, 0xb76, 0xd271, 0x580b, 0x1, 0x1);
        gbc.writeMem(0x30d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xaf78, gbc.sp());
        EXPECT(0x30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 012D
        gbc.setState(0x1076, 0x114f, 0xb9a0, 0xff46, 0x8716, 0xcc9d, 0x1, 0x0);
        gbc.writeMem(0x1076, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x114f, gbc.sp());
        EXPECT(0x1078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 012E
        gbc.setState(0x10c8, 0x8059, 0x9f00, 0x4d3b, 0xdace, 0xb4e9, 0x1, 0x1);
        gbc.writeMem(0x10c8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8059, gbc.sp());
        EXPECT(0x10ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 012F
        gbc.setState(0xd975, 0x8aed, 0x93a0, 0xf0aa, 0xb60c, 0xc865, 0x1, 0x1);
        gbc.writeMem(0xd975, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8aed, gbc.sp());
        EXPECT(0xd977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd975));
        EXPECT(0x85, gbc.readMem(0xd976));
        // CB 85 0130
        gbc.setState(0xc43f, 0x5184, 0x69c0, 0x810, 0x5fce, 0xe469, 0x1, 0x1);
        gbc.writeMem(0xc43f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5184, gbc.sp());
        EXPECT(0xc441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43f));
        EXPECT(0x85, gbc.readMem(0xc440));
        // CB 85 0131
        gbc.setState(0x5d03, 0x29b2, 0x9470, 0xbdb8, 0xefcc, 0x25d6, 0x0, 0x0);
        gbc.writeMem(0x5d03, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x29b2, gbc.sp());
        EXPECT(0x5d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0132
        gbc.setState(0x553b, 0x64b3, 0x7060, 0x4150, 0x515f, 0xc671, 0x0, 0x0);
        gbc.writeMem(0x553b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x64b3, gbc.sp());
        EXPECT(0x553d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0133
        gbc.setState(0x15a5, 0x4b15, 0xb480, 0x2b4c, 0xdb3f, 0x38e1, 0x0, 0x1);
        gbc.writeMem(0x15a5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4b15, gbc.sp());
        EXPECT(0x15a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0134
        gbc.setState(0xc500, 0xbefa, 0xa040, 0xcb22, 0xd006, 0xe8ae, 0x1, 0x1);
        gbc.writeMem(0xc500, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbefa, gbc.sp());
        EXPECT(0xc502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc500));
        EXPECT(0x85, gbc.readMem(0xc501));
        // CB 85 0135
        gbc.setState(0x3628, 0xab31, 0xad90, 0x4b57, 0xea74, 0x62df, 0x0, 0x0);
        gbc.writeMem(0x3628, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xab31, gbc.sp());
        EXPECT(0x362a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0136
        gbc.setState(0xbdb5, 0x470a, 0x37d0, 0xfc92, 0x8269, 0x5f6f, 0x1, 0x0);
        gbc.writeMem(0xbdb5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x470a, gbc.sp());
        EXPECT(0xbdb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb5));
        EXPECT(0x85, gbc.readMem(0xbdb6));
        // CB 85 0137
        gbc.setState(0x71e3, 0xf5e6, 0xede0, 0x51e1, 0x50ef, 0x3ffe, 0x1, 0x1);
        gbc.writeMem(0x71e3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf5e6, gbc.sp());
        EXPECT(0x71e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0138
        gbc.setState(0xa0f2, 0xf050, 0xb0a0, 0x863f, 0x9012, 0xfb, 0x1, 0x0);
        gbc.writeMem(0xa0f2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf050, gbc.sp());
        EXPECT(0xa0f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f2));
        EXPECT(0x85, gbc.readMem(0xa0f3));
        // CB 85 0139
        gbc.setState(0x8929, 0xdd51, 0xa480, 0x5adc, 0xe6e8, 0x8bf4, 0x1, 0x0);
        gbc.writeMem(0x8929, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdd51, gbc.sp());
        EXPECT(0x892b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8929));
        EXPECT(0x85, gbc.readMem(0x892a));
        // CB 85 013A
        gbc.setState(0x1259, 0xc065, 0x4230, 0xd979, 0x5cd, 0xb35a, 0x0, 0x1);
        gbc.writeMem(0x1259, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc065, gbc.sp());
        EXPECT(0x125b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 013B
        gbc.setState(0xe1c5, 0xee49, 0xa2f0, 0x3aba, 0x38b0, 0xf3de, 0x0, 0x1);
        gbc.writeMem(0xe1c5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xee49, gbc.sp());
        EXPECT(0xe1c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c5));
        EXPECT(0x85, gbc.readMem(0xe1c6));
        // CB 85 013C
        gbc.setState(0xd614, 0x4c8b, 0x8680, 0x23b5, 0x4308, 0xe323, 0x0, 0x0);
        gbc.writeMem(0xd614, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4c8b, gbc.sp());
        EXPECT(0xd616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd614));
        EXPECT(0x85, gbc.readMem(0xd615));
        // CB 85 013D
        gbc.setState(0xd926, 0xc051, 0x7600, 0x1057, 0x99bd, 0x4cb9, 0x1, 0x0);
        gbc.writeMem(0xd926, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc051, gbc.sp());
        EXPECT(0xd928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd926));
        EXPECT(0x85, gbc.readMem(0xd927));
        // CB 85 013E
        gbc.setState(0xed20, 0x5464, 0x69a0, 0xabbc, 0xbc8e, 0x14db, 0x0, 0x0);
        gbc.writeMem(0xed20, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5464, gbc.sp());
        EXPECT(0xed22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed20));
        EXPECT(0x85, gbc.readMem(0xed21));
        // CB 85 013F
        gbc.setState(0x7830, 0x7572, 0x24f0, 0x56be, 0x28f0, 0xc385, 0x0, 0x1);
        gbc.writeMem(0x7830, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7572, gbc.sp());
        EXPECT(0x7832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0142
        gbc.setState(0xe920, 0xf660, 0x9aa0, 0x5971, 0xad05, 0x91b1, 0x0, 0x1);
        gbc.writeMem(0xe920, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf660, gbc.sp());
        EXPECT(0xe922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe920));
        EXPECT(0x85, gbc.readMem(0xe921));
        // CB 85 0143
        gbc.setState(0x5c43, 0x6258, 0xd7c0, 0x9e87, 0xcbd1, 0x7d75, 0x0, 0x0);
        gbc.writeMem(0x5c43, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6258, gbc.sp());
        EXPECT(0x5c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0144
        gbc.setState(0xc778, 0x210b, 0x2dc0, 0x4b2e, 0xf13f, 0x7ec9, 0x0, 0x1);
        gbc.writeMem(0xc778, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x210b, gbc.sp());
        EXPECT(0xc77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc778));
        EXPECT(0x85, gbc.readMem(0xc779));
        // CB 85 0145
        gbc.setState(0x71d4, 0x827d, 0xd1c0, 0xf021, 0x74d9, 0x6742, 0x1, 0x1);
        gbc.writeMem(0x71d4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x827d, gbc.sp());
        EXPECT(0x71d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0146
        gbc.setState(0xa34c, 0x619c, 0xf840, 0x674d, 0x1644, 0x8b7d, 0x0, 0x1);
        gbc.writeMem(0xa34c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x619c, gbc.sp());
        EXPECT(0xa34e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34c));
        EXPECT(0x85, gbc.readMem(0xa34d));
        // CB 85 0147
        gbc.setState(0x2206, 0x4501, 0xaf0, 0xc3fc, 0x34f3, 0xf48b, 0x1, 0x1);
        gbc.writeMem(0x2206, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4501, gbc.sp());
        EXPECT(0x2208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0148
        gbc.setState(0x6e7, 0x899b, 0x1eb0, 0xd524, 0x915, 0xb01e, 0x0, 0x0);
        gbc.writeMem(0x6e7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0x6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0149
        gbc.setState(0xad7d, 0x3297, 0xac0, 0xce58, 0x3070, 0xd342, 0x0, 0x1);
        gbc.writeMem(0xad7d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3297, gbc.sp());
        EXPECT(0xad7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7d));
        EXPECT(0x85, gbc.readMem(0xad7e));
        // CB 85 014A
        gbc.setState(0x3b2a, 0xf0e7, 0x74a0, 0x9598, 0x7df4, 0xc10f, 0x0, 0x1);
        gbc.writeMem(0x3b2a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf0e7, gbc.sp());
        EXPECT(0x3b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 014B
        gbc.setState(0x8a3, 0xfeb1, 0x2230, 0xcdaa, 0x5437, 0xe1d3, 0x0, 0x1);
        gbc.writeMem(0x8a3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfeb1, gbc.sp());
        EXPECT(0x8a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 014C
        gbc.setState(0xaa54, 0xb958, 0x6cd0, 0xfb92, 0x233e, 0x527e, 0x1, 0x1);
        gbc.writeMem(0xaa54, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb958, gbc.sp());
        EXPECT(0xaa56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa54));
        EXPECT(0x85, gbc.readMem(0xaa55));
        // CB 85 014D
        gbc.setState(0x6dd6, 0x603a, 0x9730, 0x70b, 0x79b4, 0x6961, 0x1, 0x0);
        gbc.writeMem(0x6dd6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x603a, gbc.sp());
        EXPECT(0x6dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 014E
        gbc.setState(0x6ae8, 0x12fd, 0x6df0, 0xb52c, 0xcebb, 0xac4c, 0x1, 0x1);
        gbc.writeMem(0x6ae8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x12fd, gbc.sp());
        EXPECT(0x6aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 014F
        gbc.setState(0xfef, 0xa950, 0x1c80, 0xe6b1, 0x9d0e, 0x7f7b, 0x1, 0x0);
        gbc.writeMem(0xfef, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa950, gbc.sp());
        EXPECT(0xff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0150
        gbc.setState(0x33ac, 0xda3, 0xc250, 0x9344, 0x1aad, 0x119c, 0x1, 0x1);
        gbc.writeMem(0x33ac, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xda3, gbc.sp());
        EXPECT(0x33ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0151
        gbc.setState(0x54c1, 0x32b3, 0xcfc0, 0xfd97, 0x9ca3, 0x5c15, 0x0, 0x1);
        gbc.writeMem(0x54c1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x32b3, gbc.sp());
        EXPECT(0x54c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0152
        gbc.setState(0x9d8d, 0x1ce4, 0x79d0, 0x99e, 0x9ef4, 0x5df1, 0x0, 0x0);
        gbc.writeMem(0x9d8d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1ce4, gbc.sp());
        EXPECT(0x9d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8d));
        EXPECT(0x85, gbc.readMem(0x9d8e));
        // CB 85 0153
        gbc.setState(0x8d57, 0xc753, 0x5f20, 0xe654, 0x7511, 0xa309, 0x0, 0x0);
        gbc.writeMem(0x8d57, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc753, gbc.sp());
        EXPECT(0x8d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d57));
        EXPECT(0x85, gbc.readMem(0x8d58));
        // CB 85 0154
        gbc.setState(0xeeac, 0x8d10, 0xd410, 0x1e07, 0x1fb8, 0x7a8d, 0x0, 0x0);
        gbc.writeMem(0xeeac, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8d10, gbc.sp());
        EXPECT(0xeeae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeac));
        EXPECT(0x85, gbc.readMem(0xeead));
        // CB 85 0155
        gbc.setState(0x8307, 0xb141, 0xb850, 0xf34c, 0x3f44, 0x139, 0x1, 0x0);
        gbc.writeMem(0x8307, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb141, gbc.sp());
        EXPECT(0x8309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8307));
        EXPECT(0x85, gbc.readMem(0x8308));
        // CB 85 0156
        gbc.setState(0x390, 0x3aa9, 0x5e20, 0x379, 0x4310, 0x4cfb, 0x1, 0x0);
        gbc.writeMem(0x390, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3aa9, gbc.sp());
        EXPECT(0x392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0157
        gbc.setState(0x722c, 0xcef3, 0xc250, 0x9d5d, 0x33c1, 0xeccc, 0x1, 0x0);
        gbc.writeMem(0x722c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcef3, gbc.sp());
        EXPECT(0x722e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0158
        gbc.setState(0xcadd, 0x9cae, 0x1bd0, 0x11c7, 0x82, 0x18a8, 0x0, 0x1);
        gbc.writeMem(0xcadd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9cae, gbc.sp());
        EXPECT(0xcadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcadd));
        EXPECT(0x85, gbc.readMem(0xcade));
        // CB 85 0159
        gbc.setState(0x7126, 0xf11, 0x2430, 0xd38f, 0x3b4d, 0xfa1, 0x1, 0x0);
        gbc.writeMem(0x7126, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf11, gbc.sp());
        EXPECT(0x7128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 015A
        gbc.setState(0x6b8, 0xf46c, 0xc810, 0x7e55, 0x7ec3, 0x4e26, 0x0, 0x1);
        gbc.writeMem(0x6b8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf46c, gbc.sp());
        EXPECT(0x6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 015B
        gbc.setState(0xc96e, 0x2270, 0xfe40, 0xcc48, 0xfef, 0xe071, 0x1, 0x0);
        gbc.writeMem(0xc96e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2270, gbc.sp());
        EXPECT(0xc970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96e));
        EXPECT(0x85, gbc.readMem(0xc96f));
        // CB 85 015C
        gbc.setState(0xe928, 0xe6b3, 0x940, 0x9abe, 0x2672, 0x932, 0x1, 0x0);
        gbc.writeMem(0xe928, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe6b3, gbc.sp());
        EXPECT(0xe92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe928));
        EXPECT(0x85, gbc.readMem(0xe929));
        // CB 85 015D
        gbc.setState(0x1274, 0x8bc0, 0xa840, 0x7117, 0x8a58, 0x335f, 0x0, 0x1);
        gbc.writeMem(0x1274, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8bc0, gbc.sp());
        EXPECT(0x1276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 015E
        gbc.setState(0xcd1c, 0x471c, 0x6380, 0x8426, 0xc65e, 0x7d7f, 0x1, 0x1);
        gbc.writeMem(0xcd1c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x471c, gbc.sp());
        EXPECT(0xcd1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1c));
        EXPECT(0x85, gbc.readMem(0xcd1d));
        // CB 85 015F
        gbc.setState(0xe7c1, 0x4170, 0x620, 0x465b, 0x6823, 0x6567, 0x0, 0x0);
        gbc.writeMem(0xe7c1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4170, gbc.sp());
        EXPECT(0xe7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c1));
        EXPECT(0x85, gbc.readMem(0xe7c2));
        // CB 85 0160
        gbc.setState(0x15e7, 0x5ada, 0xaf00, 0x23ef, 0x360e, 0xe94f, 0x0, 0x0);
        gbc.writeMem(0x15e7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5ada, gbc.sp());
        EXPECT(0x15e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0161
        gbc.setState(0xbdb3, 0x6c0b, 0xd960, 0x993c, 0xa464, 0xcf57, 0x0, 0x1);
        gbc.writeMem(0xbdb3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6c0b, gbc.sp());
        EXPECT(0xbdb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb3));
        EXPECT(0x85, gbc.readMem(0xbdb4));
        // CB 85 0162
        gbc.setState(0x13ec, 0x87cb, 0xfd70, 0xcc59, 0x2203, 0x9756, 0x1, 0x1);
        gbc.writeMem(0x13ec, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x87cb, gbc.sp());
        EXPECT(0x13ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0163
        gbc.setState(0xe1a6, 0x2b45, 0x1090, 0xaae0, 0x4740, 0xe399, 0x0, 0x0);
        gbc.writeMem(0xe1a6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2b45, gbc.sp());
        EXPECT(0xe1a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a6));
        EXPECT(0x85, gbc.readMem(0xe1a7));
        // CB 85 0164
        gbc.setState(0x63c7, 0x8666, 0x1af0, 0xebc5, 0xc325, 0x5f0a, 0x0, 0x0);
        gbc.writeMem(0x63c7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8666, gbc.sp());
        EXPECT(0x63c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0165
        gbc.setState(0x731a, 0x8797, 0xd2c0, 0xb81a, 0x8df, 0x7096, 0x0, 0x1);
        gbc.writeMem(0x731a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8797, gbc.sp());
        EXPECT(0x731c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0166
        gbc.setState(0xee2e, 0x1a69, 0x4600, 0x130f, 0x5a95, 0xe201, 0x1, 0x1);
        gbc.writeMem(0xee2e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1a69, gbc.sp());
        EXPECT(0xee30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2e));
        EXPECT(0x85, gbc.readMem(0xee2f));
        // CB 85 0167
        gbc.setState(0x39fc, 0x6b48, 0x5530, 0x625f, 0xfab, 0x81d7, 0x1, 0x1);
        gbc.writeMem(0x39fc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6b48, gbc.sp());
        EXPECT(0x39fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0168
        gbc.setState(0x3eef, 0x7d30, 0x4d60, 0xe90, 0xd3ae, 0xf60f, 0x0, 0x0);
        gbc.writeMem(0x3eef, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7d30, gbc.sp());
        EXPECT(0x3ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0169
        gbc.setState(0x2ac0, 0x96a3, 0xfe00, 0xdef9, 0x1bd3, 0x2cb2, 0x1, 0x0);
        gbc.writeMem(0x2ac0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x96a3, gbc.sp());
        EXPECT(0x2ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 016A
        gbc.setState(0x4964, 0xf682, 0xeb10, 0xc684, 0x71ca, 0x4a9f, 0x0, 0x0);
        gbc.writeMem(0x4964, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf682, gbc.sp());
        EXPECT(0x4966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 016B
        gbc.setState(0xa45d, 0xbad9, 0x96a0, 0x3dc5, 0x8740, 0x9d5, 0x1, 0x0);
        gbc.writeMem(0xa45d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbad9, gbc.sp());
        EXPECT(0xa45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45d));
        EXPECT(0x85, gbc.readMem(0xa45e));
        // CB 85 016C
        gbc.setState(0x17bd, 0x4b2b, 0x6220, 0x4026, 0x4bad, 0x28a1, 0x0, 0x1);
        gbc.writeMem(0x17bd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4b2b, gbc.sp());
        EXPECT(0x17bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 016D
        gbc.setState(0xe488, 0x108f, 0xf3c0, 0x4340, 0xc06f, 0xef6c, 0x0, 0x0);
        gbc.writeMem(0xe488, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x108f, gbc.sp());
        EXPECT(0xe48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe488));
        EXPECT(0x85, gbc.readMem(0xe489));
        // CB 85 016E
        gbc.setState(0x6d6a, 0xc2b8, 0x4c40, 0x9b65, 0xcf66, 0x5eb3, 0x1, 0x1);
        gbc.writeMem(0x6d6a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc2b8, gbc.sp());
        EXPECT(0x6d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 016F
        gbc.setState(0xcd64, 0xe99e, 0xb9e0, 0x5560, 0x7e81, 0xe957, 0x1, 0x0);
        gbc.writeMem(0xcd64, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe99e, gbc.sp());
        EXPECT(0xcd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd64));
        EXPECT(0x85, gbc.readMem(0xcd65));
        // CB 85 0170
        gbc.setState(0x6c8e, 0xbf1b, 0xc880, 0x901d, 0xe902, 0x4dea, 0x0, 0x1);
        gbc.writeMem(0x6c8e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbf1b, gbc.sp());
        EXPECT(0x6c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0172
        gbc.setState(0x12cd, 0xd2c, 0x19f0, 0x40d7, 0xba9d, 0x90d4, 0x0, 0x1);
        gbc.writeMem(0x12cd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd2c, gbc.sp());
        EXPECT(0x12cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0173
        gbc.setState(0xc8b8, 0x93bd, 0xf30, 0xef11, 0x160b, 0x6865, 0x1, 0x0);
        gbc.writeMem(0xc8b8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x93bd, gbc.sp());
        EXPECT(0xc8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b8));
        EXPECT(0x85, gbc.readMem(0xc8b9));
        // CB 85 0175
        gbc.setState(0xba1d, 0x6618, 0x1240, 0x58a5, 0xbeff, 0xfd48, 0x0, 0x1);
        gbc.writeMem(0xba1d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6618, gbc.sp());
        EXPECT(0xba1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1d));
        EXPECT(0x85, gbc.readMem(0xba1e));
        // CB 85 0176
        gbc.setState(0xc31a, 0x257f, 0xb530, 0x228c, 0x3968, 0xc9b6, 0x1, 0x0);
        gbc.writeMem(0xc31a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x257f, gbc.sp());
        EXPECT(0xc31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31a));
        EXPECT(0x85, gbc.readMem(0xc31b));
        // CB 85 0177
        gbc.setState(0x58a6, 0x459d, 0xfe10, 0xd5a9, 0xd093, 0x86bc, 0x1, 0x0);
        gbc.writeMem(0x58a6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x459d, gbc.sp());
        EXPECT(0x58a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0178
        gbc.setState(0xcc68, 0x4b19, 0xeaf0, 0x23e4, 0x48a, 0x31aa, 0x0, 0x0);
        gbc.writeMem(0xcc68, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4b19, gbc.sp());
        EXPECT(0xcc6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc68));
        EXPECT(0x85, gbc.readMem(0xcc69));
        // CB 85 0179
        gbc.setState(0x7b2f, 0x93b, 0xd370, 0xba6e, 0x869d, 0x3c23, 0x0, 0x1);
        gbc.writeMem(0x7b2f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x93b, gbc.sp());
        EXPECT(0x7b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 017A
        gbc.setState(0x4bf7, 0x4b3, 0x22a0, 0xd236, 0x97bd, 0xfd38, 0x0, 0x1);
        gbc.writeMem(0x4bf7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4b3, gbc.sp());
        EXPECT(0x4bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 017B
        gbc.setState(0xc0a4, 0x5165, 0x8de0, 0x7a00, 0xbacb, 0x6623, 0x1, 0x1);
        gbc.writeMem(0xc0a4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5165, gbc.sp());
        EXPECT(0xc0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a4));
        EXPECT(0x85, gbc.readMem(0xc0a5));
        // CB 85 017C
        gbc.setState(0x8fa3, 0xebd9, 0x910, 0xe45a, 0xfcd6, 0xd9ef, 0x1, 0x0);
        gbc.writeMem(0x8fa3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xebd9, gbc.sp());
        EXPECT(0x8fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa3));
        EXPECT(0x85, gbc.readMem(0x8fa4));
        // CB 85 017D
        gbc.setState(0x4051, 0x92af, 0x70, 0xd9fc, 0xf88e, 0x6d43, 0x0, 0x1);
        gbc.writeMem(0x4051, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x92af, gbc.sp());
        EXPECT(0x4053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 017E
        gbc.setState(0x5886, 0xa9a2, 0xd020, 0x214f, 0xc79c, 0x6fbd, 0x0, 0x0);
        gbc.writeMem(0x5886, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa9a2, gbc.sp());
        EXPECT(0x5888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 017F
        gbc.setState(0x865e, 0xdc2d, 0x5d70, 0xb84, 0x6d2, 0xcb1f, 0x1, 0x0);
        gbc.writeMem(0x865e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdc2d, gbc.sp());
        EXPECT(0x8660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865e));
        EXPECT(0x85, gbc.readMem(0x865f));
        // CB 85 0180
        gbc.setState(0xe6cb, 0x66c1, 0x5760, 0x90c2, 0x2ddb, 0x99d2, 0x1, 0x1);
        gbc.writeMem(0xe6cb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x66c1, gbc.sp());
        EXPECT(0xe6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6cb));
        EXPECT(0x85, gbc.readMem(0xe6cc));
        // CB 85 0181
        gbc.setState(0x37ff, 0xc877, 0x5800, 0xf0b8, 0x806, 0xccf7, 0x1, 0x1);
        gbc.writeMem(0x37ff, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc877, gbc.sp());
        EXPECT(0x3801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0182
        gbc.setState(0x29af, 0x3f47, 0x5ac0, 0x5155, 0x7360, 0xbacc, 0x1, 0x1);
        gbc.writeMem(0x29af, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3f47, gbc.sp());
        EXPECT(0x29b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0183
        gbc.setState(0xaf63, 0x18e3, 0xa670, 0x554b, 0x1648, 0xce05, 0x0, 0x1);
        gbc.writeMem(0xaf63, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x18e3, gbc.sp());
        EXPECT(0xaf65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf63));
        EXPECT(0x85, gbc.readMem(0xaf64));
        // CB 85 0184
        gbc.setState(0x63df, 0x8523, 0x86b0, 0x13c4, 0xe8e6, 0x3b9, 0x1, 0x1);
        gbc.writeMem(0x63df, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8523, gbc.sp());
        EXPECT(0x63e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0185
        gbc.setState(0xbdcd, 0x5ac3, 0x6f70, 0x12a8, 0x9a25, 0xb82d, 0x1, 0x0);
        gbc.writeMem(0xbdcd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5ac3, gbc.sp());
        EXPECT(0xbdcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdcd));
        EXPECT(0x85, gbc.readMem(0xbdce));
        // CB 85 0187
        gbc.setState(0x4193, 0x891d, 0x2190, 0x66a4, 0x9f82, 0xc344, 0x1, 0x0);
        gbc.writeMem(0x4193, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x891d, gbc.sp());
        EXPECT(0x4195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0188
        gbc.setState(0x9e82, 0x96fb, 0x29f0, 0x9d31, 0xc111, 0xd22a, 0x0, 0x1);
        gbc.writeMem(0x9e82, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x96fb, gbc.sp());
        EXPECT(0x9e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e82));
        EXPECT(0x85, gbc.readMem(0x9e83));
        // CB 85 0189
        gbc.setState(0x8ba4, 0x6495, 0x1a30, 0x2948, 0xe086, 0x5ba, 0x1, 0x0);
        gbc.writeMem(0x8ba4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6495, gbc.sp());
        EXPECT(0x8ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba4));
        EXPECT(0x85, gbc.readMem(0x8ba5));
        // CB 85 018A
        gbc.setState(0x229e, 0x1d13, 0x5160, 0x7596, 0x99fd, 0x18b3, 0x0, 0x1);
        gbc.writeMem(0x229e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1d13, gbc.sp());
        EXPECT(0x22a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 018B
        gbc.setState(0xc4c1, 0x7e32, 0x66c0, 0xe740, 0xe6a7, 0xee6e, 0x0, 0x0);
        gbc.writeMem(0xc4c1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7e32, gbc.sp());
        EXPECT(0xc4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c1));
        EXPECT(0x85, gbc.readMem(0xc4c2));
        // CB 85 018C
        gbc.setState(0x3685, 0x9784, 0x6830, 0xae18, 0xe4ab, 0x6f1, 0x0, 0x1);
        gbc.writeMem(0x3685, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9784, gbc.sp());
        EXPECT(0x3687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 018D
        gbc.setState(0x82ab, 0xa4fc, 0xcd40, 0xefd, 0x2939, 0x340, 0x1, 0x0);
        gbc.writeMem(0x82ab, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa4fc, gbc.sp());
        EXPECT(0x82ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ab));
        EXPECT(0x85, gbc.readMem(0x82ac));
        // CB 85 018E
        gbc.setState(0x5233, 0x325e, 0x56f0, 0x1bab, 0xd7b, 0x95db, 0x0, 0x0);
        gbc.writeMem(0x5233, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x325e, gbc.sp());
        EXPECT(0x5235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 018F
        gbc.setState(0x5d9, 0x1910, 0xc5e0, 0x21a7, 0x6cc8, 0x264b, 0x0, 0x1);
        gbc.writeMem(0x5d9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1910, gbc.sp());
        EXPECT(0x5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0192
        gbc.setState(0x9a2, 0x7fce, 0x1570, 0xdfab, 0xf318, 0x7fc3, 0x0, 0x0);
        gbc.writeMem(0x9a2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7fce, gbc.sp());
        EXPECT(0x9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0193
        gbc.setState(0xa851, 0x315e, 0xa450, 0x8df2, 0x247e, 0xdc27, 0x1, 0x0);
        gbc.writeMem(0xa851, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x315e, gbc.sp());
        EXPECT(0xa853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa851));
        EXPECT(0x85, gbc.readMem(0xa852));
        // CB 85 0194
        gbc.setState(0x4fd5, 0x91db, 0x54d0, 0x91c9, 0xd3f4, 0x4fc0, 0x1, 0x0);
        gbc.writeMem(0x4fd5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x91db, gbc.sp());
        EXPECT(0x4fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0195
        gbc.setState(0xc2f7, 0x51fe, 0xebe0, 0xcce, 0x2f21, 0x469b, 0x0, 0x0);
        gbc.writeMem(0xc2f7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x51fe, gbc.sp());
        EXPECT(0xc2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f7));
        EXPECT(0x85, gbc.readMem(0xc2f8));
        // CB 85 0196
        gbc.setState(0x404c, 0xf5b6, 0xda80, 0x1392, 0x85d0, 0xf309, 0x0, 0x0);
        gbc.writeMem(0x404c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf5b6, gbc.sp());
        EXPECT(0x404e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0197
        gbc.setState(0x1e0b, 0xde6, 0xe9a0, 0x8bb9, 0xcbb6, 0xecc6, 0x1, 0x0);
        gbc.writeMem(0x1e0b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xde6, gbc.sp());
        EXPECT(0x1e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0198
        gbc.setState(0x7ec3, 0x144e, 0x8fb0, 0x7fae, 0xf432, 0x9fc8, 0x1, 0x0);
        gbc.writeMem(0x7ec3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x144e, gbc.sp());
        EXPECT(0x7ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0199
        gbc.setState(0xbf58, 0xa26a, 0xfaf0, 0xe5b0, 0x99c4, 0x6145, 0x0, 0x0);
        gbc.writeMem(0xbf58, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa26a, gbc.sp());
        EXPECT(0xbf5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf58));
        EXPECT(0x85, gbc.readMem(0xbf59));
        // CB 85 019A
        gbc.setState(0xbdc5, 0xdc9, 0xaba0, 0x20b8, 0xb49a, 0xc77c, 0x0, 0x1);
        gbc.writeMem(0xbdc5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdc9, gbc.sp());
        EXPECT(0xbdc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc5));
        EXPECT(0x85, gbc.readMem(0xbdc6));
        // CB 85 019B
        gbc.setState(0xa378, 0x9d2d, 0xf790, 0xfa02, 0xeb0d, 0xcb55, 0x0, 0x1);
        gbc.writeMem(0xa378, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9d2d, gbc.sp());
        EXPECT(0xa37a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa378));
        EXPECT(0x85, gbc.readMem(0xa379));
        // CB 85 019C
        gbc.setState(0x8a01, 0x8c70, 0xeec0, 0xc592, 0xd7e9, 0x9263, 0x0, 0x0);
        gbc.writeMem(0x8a01, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8c70, gbc.sp());
        EXPECT(0x8a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a01));
        EXPECT(0x85, gbc.readMem(0x8a02));
        // CB 85 019D
        gbc.setState(0xa8ff, 0x893f, 0xe740, 0xd0c5, 0x63d4, 0x71b0, 0x1, 0x0);
        gbc.writeMem(0xa8ff, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x893f, gbc.sp());
        EXPECT(0xa901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ff));
        EXPECT(0x85, gbc.readMem(0xa900));
        // CB 85 019E
        gbc.setState(0x68c8, 0xf436, 0x3e30, 0xa6f6, 0x832e, 0xc4b3, 0x0, 0x0);
        gbc.writeMem(0x68c8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf436, gbc.sp());
        EXPECT(0x68ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 019F
        gbc.setState(0x48e4, 0x4c31, 0xb930, 0x4700, 0x41e8, 0xf8c4, 0x0, 0x0);
        gbc.writeMem(0x48e4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4c31, gbc.sp());
        EXPECT(0x48e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01A0
        gbc.setState(0xa659, 0xddac, 0x2030, 0xaddd, 0x1d43, 0x72c6, 0x1, 0x1);
        gbc.writeMem(0xa659, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xddac, gbc.sp());
        EXPECT(0xa65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa659));
        EXPECT(0x85, gbc.readMem(0xa65a));
        // CB 85 01A1
        gbc.setState(0xd8ab, 0xf7bb, 0x2420, 0x754a, 0xb6c1, 0xba12, 0x1, 0x1);
        gbc.writeMem(0xd8ab, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf7bb, gbc.sp());
        EXPECT(0xd8ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ab));
        EXPECT(0x85, gbc.readMem(0xd8ac));
        // CB 85 01A2
        gbc.setState(0x1994, 0x5395, 0x1620, 0x6ff1, 0x112, 0xefda, 0x0, 0x1);
        gbc.writeMem(0x1994, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5395, gbc.sp());
        EXPECT(0x1996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01A3
        gbc.setState(0x36c3, 0x3d41, 0x7f70, 0xab43, 0x2b52, 0x503a, 0x1, 0x1);
        gbc.writeMem(0x36c3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3d41, gbc.sp());
        EXPECT(0x36c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01A5
        gbc.setState(0xc673, 0x7d00, 0x2410, 0x85c6, 0x14b8, 0xfc1f, 0x0, 0x0);
        gbc.writeMem(0xc673, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7d00, gbc.sp());
        EXPECT(0xc675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc673));
        EXPECT(0x85, gbc.readMem(0xc674));
        // CB 85 01A7
        gbc.setState(0x1e13, 0x6285, 0x9780, 0xeafe, 0x8e8a, 0x38f5, 0x1, 0x1);
        gbc.writeMem(0x1e13, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6285, gbc.sp());
        EXPECT(0x1e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01A8
        gbc.setState(0xa32a, 0x225c, 0xea50, 0x17a5, 0xcc89, 0xbc23, 0x1, 0x0);
        gbc.writeMem(0xa32a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x225c, gbc.sp());
        EXPECT(0xa32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa32a));
        EXPECT(0x85, gbc.readMem(0xa32b));
        // CB 85 01A9
        gbc.setState(0x17d5, 0xd80, 0x9d00, 0x6969, 0x3e83, 0xefc0, 0x1, 0x0);
        gbc.writeMem(0x17d5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd80, gbc.sp());
        EXPECT(0x17d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01AA
        gbc.setState(0x2685, 0xc7e5, 0xf590, 0xac18, 0x6a1f, 0x5176, 0x1, 0x1);
        gbc.writeMem(0x2685, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc7e5, gbc.sp());
        EXPECT(0x2687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01AB
        gbc.setState(0x8584, 0xf912, 0xc450, 0x673c, 0x6c90, 0x76fd, 0x1, 0x0);
        gbc.writeMem(0x8584, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf912, gbc.sp());
        EXPECT(0x8586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8584));
        EXPECT(0x85, gbc.readMem(0x8585));
        // CB 85 01AC
        gbc.setState(0xaeaf, 0x4007, 0xa9b0, 0xad84, 0x57e3, 0xcf7a, 0x0, 0x0);
        gbc.writeMem(0xaeaf, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4007, gbc.sp());
        EXPECT(0xaeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeaf));
        EXPECT(0x85, gbc.readMem(0xaeb0));
        // CB 85 01AD
        gbc.setState(0xb0ed, 0x5f91, 0x6260, 0x69b6, 0x4ea2, 0x9d45, 0x1, 0x1);
        gbc.writeMem(0xb0ed, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5f91, gbc.sp());
        EXPECT(0xb0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ed));
        EXPECT(0x85, gbc.readMem(0xb0ee));
        // CB 85 01AE
        gbc.setState(0x56e, 0xb5e3, 0x49b0, 0x50e0, 0x475e, 0xb9b6, 0x1, 0x0);
        gbc.writeMem(0x56e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb5e3, gbc.sp());
        EXPECT(0x570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01AF
        gbc.setState(0xb35, 0x8aa2, 0xf190, 0x7adb, 0xc670, 0xa2e, 0x1, 0x1);
        gbc.writeMem(0xb35, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8aa2, gbc.sp());
        EXPECT(0xb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01B0
        gbc.setState(0x29bd, 0x14c3, 0x30, 0xd2a4, 0x5b2d, 0xbcd9, 0x0, 0x0);
        gbc.writeMem(0x29bd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x14c3, gbc.sp());
        EXPECT(0x29bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01B1
        gbc.setState(0xd179, 0xfd03, 0x88b0, 0xbe22, 0x10d5, 0xd4d6, 0x1, 0x0);
        gbc.writeMem(0xd179, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfd03, gbc.sp());
        EXPECT(0xd17b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd179));
        EXPECT(0x85, gbc.readMem(0xd17a));
        // CB 85 01B2
        gbc.setState(0xedfe, 0xed66, 0x7b10, 0x9d89, 0xbb52, 0x98a1, 0x1, 0x0);
        gbc.writeMem(0xedfe, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xed66, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfe));
        EXPECT(0x85, gbc.readMem(0xedff));
        // CB 85 01B3
        gbc.setState(0x245b, 0xf035, 0x4e80, 0x20fa, 0x7a8c, 0xaede, 0x1, 0x1);
        gbc.writeMem(0x245b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf035, gbc.sp());
        EXPECT(0x245d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01B4
        gbc.setState(0x8ad8, 0x6d62, 0x27f0, 0x9c79, 0xbc94, 0x6ce, 0x1, 0x0);
        gbc.writeMem(0x8ad8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6d62, gbc.sp());
        EXPECT(0x8ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad8));
        EXPECT(0x85, gbc.readMem(0x8ad9));
        // CB 85 01B5
        gbc.setState(0x55dc, 0x7348, 0x6370, 0x3f59, 0xf1d5, 0xdc26, 0x0, 0x0);
        gbc.writeMem(0x55dc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7348, gbc.sp());
        EXPECT(0x55de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01B6
        gbc.setState(0x92ba, 0x16b9, 0x2bc0, 0x50b2, 0x492a, 0xa60c, 0x1, 0x1);
        gbc.writeMem(0x92ba, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x16b9, gbc.sp());
        EXPECT(0x92bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ba));
        EXPECT(0x85, gbc.readMem(0x92bb));
        // CB 85 01B7
        gbc.setState(0x4d4d, 0x1b91, 0x4970, 0xa152, 0x19f5, 0x5dda, 0x0, 0x0);
        gbc.writeMem(0x4d4d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1b91, gbc.sp());
        EXPECT(0x4d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01B8
        gbc.setState(0x85e8, 0x419e, 0x84d0, 0x7445, 0x4f65, 0xe50f, 0x0, 0x0);
        gbc.writeMem(0x85e8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x419e, gbc.sp());
        EXPECT(0x85ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e8));
        EXPECT(0x85, gbc.readMem(0x85e9));
        // CB 85 01B9
        gbc.setState(0xe1b1, 0x630c, 0x50e0, 0x413a, 0x5669, 0x2c6b, 0x1, 0x0);
        gbc.writeMem(0xe1b1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x630c, gbc.sp());
        EXPECT(0xe1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b1));
        EXPECT(0x85, gbc.readMem(0xe1b2));
        // CB 85 01BA
        gbc.setState(0xe8dd, 0x92a0, 0x56b0, 0x3028, 0x4621, 0x1ae1, 0x1, 0x0);
        gbc.writeMem(0xe8dd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x92a0, gbc.sp());
        EXPECT(0xe8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8dd));
        EXPECT(0x85, gbc.readMem(0xe8de));
        // CB 85 01BB
        gbc.setState(0x6cb8, 0xbb38, 0x7740, 0x630f, 0x98eb, 0xeb67, 0x1, 0x0);
        gbc.writeMem(0x6cb8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbb38, gbc.sp());
        EXPECT(0x6cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01BD
        gbc.setState(0xccc8, 0x2fb5, 0x6340, 0x51b4, 0x15c8, 0xb4f3, 0x0, 0x1);
        gbc.writeMem(0xccc8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2fb5, gbc.sp());
        EXPECT(0xccca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc8));
        EXPECT(0x85, gbc.readMem(0xccc9));
        // CB 85 01BE
        gbc.setState(0x440e, 0x7cd2, 0xa9f0, 0xb28d, 0x1430, 0x8b48, 0x0, 0x0);
        gbc.writeMem(0x440e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7cd2, gbc.sp());
        EXPECT(0x4410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01BF
        gbc.setState(0x8706, 0xa6e9, 0x7960, 0xbf8b, 0xce3f, 0x9cf8, 0x1, 0x1);
        gbc.writeMem(0x8706, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa6e9, gbc.sp());
        EXPECT(0x8708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8706));
        EXPECT(0x85, gbc.readMem(0x8707));
        // CB 85 01C0
        gbc.setState(0x3865, 0xb566, 0xfb60, 0x9845, 0x8fcc, 0xd52b, 0x0, 0x0);
        gbc.writeMem(0x3865, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb566, gbc.sp());
        EXPECT(0x3867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01C1
        gbc.setState(0x5889, 0x13a4, 0x6280, 0x21bd, 0xf83c, 0x75d8, 0x0, 0x1);
        gbc.writeMem(0x5889, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x13a4, gbc.sp());
        EXPECT(0x588b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01C2
        gbc.setState(0xb61, 0xcd0d, 0xab70, 0x7c35, 0x84ac, 0xc283, 0x1, 0x1);
        gbc.writeMem(0xb61, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcd0d, gbc.sp());
        EXPECT(0xb63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01C3
        gbc.setState(0xdda9, 0x6a5d, 0xd8a0, 0xe0ef, 0x5169, 0x2152, 0x0, 0x0);
        gbc.writeMem(0xdda9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6a5d, gbc.sp());
        EXPECT(0xddab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda9));
        EXPECT(0x85, gbc.readMem(0xddaa));
        // CB 85 01C4
        gbc.setState(0xb4e7, 0x9323, 0xa100, 0x4caa, 0x1237, 0xd7e2, 0x1, 0x0);
        gbc.writeMem(0xb4e7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9323, gbc.sp());
        EXPECT(0xb4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e7));
        EXPECT(0x85, gbc.readMem(0xb4e8));
        // CB 85 01C6
        gbc.setState(0x5e67, 0x45b8, 0x36e0, 0x9195, 0xb383, 0x3889, 0x0, 0x0);
        gbc.writeMem(0x5e67, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x45b8, gbc.sp());
        EXPECT(0x5e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01C7
        gbc.setState(0x5cb8, 0x2dc2, 0x1b0, 0x328, 0xf6df, 0x5f59, 0x1, 0x0);
        gbc.writeMem(0x5cb8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2dc2, gbc.sp());
        EXPECT(0x5cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01C8
        gbc.setState(0x1e20, 0x9450, 0x6440, 0x2282, 0x2c6f, 0x74fe, 0x0, 0x0);
        gbc.writeMem(0x1e20, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9450, gbc.sp());
        EXPECT(0x1e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01C9
        gbc.setState(0xd99c, 0x4aa9, 0x9230, 0x5eea, 0xb068, 0x4ad5, 0x0, 0x0);
        gbc.writeMem(0xd99c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4aa9, gbc.sp());
        EXPECT(0xd99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99c));
        EXPECT(0x85, gbc.readMem(0xd99d));
        // CB 85 01CA
        gbc.setState(0xb879, 0x83c4, 0xe2c0, 0xcdea, 0xa0bf, 0xd711, 0x0, 0x0);
        gbc.writeMem(0xb879, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x83c4, gbc.sp());
        EXPECT(0xb87b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb879));
        EXPECT(0x85, gbc.readMem(0xb87a));
        // CB 85 01CB
        gbc.setState(0x1f67, 0x67cf, 0x1ce0, 0x30ca, 0x8d63, 0x8333, 0x1, 0x1);
        gbc.writeMem(0x1f67, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x67cf, gbc.sp());
        EXPECT(0x1f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01CC
        gbc.setState(0x8d56, 0x8788, 0x1590, 0xaedc, 0x80b, 0x6a0e, 0x1, 0x1);
        gbc.writeMem(0x8d56, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8788, gbc.sp());
        EXPECT(0x8d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d56));
        EXPECT(0x85, gbc.readMem(0x8d57));
        // CB 85 01CD
        gbc.setState(0x3bda, 0x54c7, 0x70e0, 0x5162, 0x5972, 0xeeb5, 0x1, 0x1);
        gbc.writeMem(0x3bda, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x54c7, gbc.sp());
        EXPECT(0x3bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01CE
        gbc.setState(0x35cd, 0xfaf4, 0x6270, 0x5e19, 0x2f7b, 0x68cb, 0x1, 0x1);
        gbc.writeMem(0x35cd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfaf4, gbc.sp());
        EXPECT(0x35cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01CF
        gbc.setState(0x1738, 0xd0d3, 0xff00, 0xd7e3, 0xe3d7, 0xbb62, 0x1, 0x1);
        gbc.writeMem(0x1738, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd0d3, gbc.sp());
        EXPECT(0x173a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01D0
        gbc.setState(0x46bb, 0x5eed, 0x6250, 0xa32, 0x8009, 0xe6d0, 0x1, 0x0);
        gbc.writeMem(0x46bb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5eed, gbc.sp());
        EXPECT(0x46bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01D1
        gbc.setState(0x3f51, 0x9f9b, 0xb9d0, 0x3f06, 0x8b32, 0xc104, 0x0, 0x1);
        gbc.writeMem(0x3f51, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9f9b, gbc.sp());
        EXPECT(0x3f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01D2
        gbc.setState(0x6ac4, 0xa905, 0x5a90, 0xaf44, 0x99e, 0xe222, 0x1, 0x1);
        gbc.writeMem(0x6ac4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa905, gbc.sp());
        EXPECT(0x6ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01D3
        gbc.setState(0x833f, 0x4216, 0x6650, 0x2ebe, 0x8b7f, 0x7470, 0x0, 0x1);
        gbc.writeMem(0x833f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4216, gbc.sp());
        EXPECT(0x8341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833f));
        EXPECT(0x85, gbc.readMem(0x8340));
        // CB 85 01D4
        gbc.setState(0xcb6f, 0x282a, 0x5870, 0xf53e, 0x59e1, 0xb8be, 0x0, 0x1);
        gbc.writeMem(0xcb6f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x282a, gbc.sp());
        EXPECT(0xcb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6f));
        EXPECT(0x85, gbc.readMem(0xcb70));
        // CB 85 01D5
        gbc.setState(0xe938, 0x9add, 0x7010, 0x8dae, 0x49ea, 0x5c6e, 0x0, 0x1);
        gbc.writeMem(0xe938, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9add, gbc.sp());
        EXPECT(0xe93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe938));
        EXPECT(0x85, gbc.readMem(0xe939));
        // CB 85 01D6
        gbc.setState(0x610e, 0xa59a, 0xed00, 0xdc0a, 0x806e, 0x7018, 0x0, 0x1);
        gbc.writeMem(0x610e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa59a, gbc.sp());
        EXPECT(0x6110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01D7
        gbc.setState(0x6f68, 0x3e91, 0x1d90, 0x55c8, 0xd865, 0x2c8e, 0x1, 0x0);
        gbc.writeMem(0x6f68, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3e91, gbc.sp());
        EXPECT(0x6f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01D8
        gbc.setState(0x8d6e, 0x55ec, 0x4d70, 0x5453, 0x7105, 0xad10, 0x0, 0x1);
        gbc.writeMem(0x8d6e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x55ec, gbc.sp());
        EXPECT(0x8d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d6e));
        EXPECT(0x85, gbc.readMem(0x8d6f));
        // CB 85 01D9
        gbc.setState(0x491e, 0xf68c, 0x5f80, 0x26fa, 0xa939, 0x9bd9, 0x0, 0x1);
        gbc.writeMem(0x491e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf68c, gbc.sp());
        EXPECT(0x4920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01DA
        gbc.setState(0x6423, 0x6035, 0x3860, 0x80f8, 0xa42b, 0x251e, 0x1, 0x0);
        gbc.writeMem(0x6423, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6035, gbc.sp());
        EXPECT(0x6425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01DB
        gbc.setState(0x3e5a, 0x88ba, 0x3420, 0x888a, 0x7c6a, 0xfc1b, 0x1, 0x0);
        gbc.writeMem(0x3e5a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x88ba, gbc.sp());
        EXPECT(0x3e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01DC
        gbc.setState(0x26a9, 0xaec2, 0x9430, 0xaf94, 0xbb7e, 0x9369, 0x0, 0x1);
        gbc.writeMem(0x26a9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xaec2, gbc.sp());
        EXPECT(0x26ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01DD
        gbc.setState(0xe282, 0xc396, 0x7a00, 0x9da3, 0xa810, 0x21fc, 0x0, 0x0);
        gbc.writeMem(0xe282, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc396, gbc.sp());
        EXPECT(0xe284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe282));
        EXPECT(0x85, gbc.readMem(0xe283));
        // CB 85 01DE
        gbc.setState(0xc199, 0x9684, 0x880, 0x80e7, 0x212b, 0x9ae5, 0x1, 0x0);
        gbc.writeMem(0xc199, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9684, gbc.sp());
        EXPECT(0xc19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc199));
        EXPECT(0x85, gbc.readMem(0xc19a));
        // CB 85 01DF
        gbc.setState(0xda70, 0x8e26, 0x3de0, 0x8bfa, 0xa487, 0x879, 0x0, 0x1);
        gbc.writeMem(0xda70, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8e26, gbc.sp());
        EXPECT(0xda72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda70));
        EXPECT(0x85, gbc.readMem(0xda71));
        // CB 85 01E0
        gbc.setState(0xbe9c, 0xff06, 0x22b0, 0x9972, 0xb4d0, 0x45b1, 0x0, 0x0);
        gbc.writeMem(0xbe9c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xff06, gbc.sp());
        EXPECT(0xbe9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9c));
        EXPECT(0x85, gbc.readMem(0xbe9d));
        // CB 85 01E1
        gbc.setState(0xbc0e, 0x2707, 0x93e0, 0x49e1, 0x860c, 0xe0b9, 0x1, 0x1);
        gbc.writeMem(0xbc0e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2707, gbc.sp());
        EXPECT(0xbc10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0e));
        EXPECT(0x85, gbc.readMem(0xbc0f));
        // CB 85 01E2
        gbc.setState(0x7420, 0xf489, 0x8200, 0xf231, 0xf87, 0xc2c5, 0x1, 0x0);
        gbc.writeMem(0x7420, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf489, gbc.sp());
        EXPECT(0x7422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01E3
        gbc.setState(0xd09c, 0x9815, 0x7ea0, 0x3d67, 0x5c5c, 0xc8b0, 0x1, 0x1);
        gbc.writeMem(0xd09c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9815, gbc.sp());
        EXPECT(0xd09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd09c));
        EXPECT(0x85, gbc.readMem(0xd09d));
        // CB 85 01E4
        gbc.setState(0x43d1, 0x3cf9, 0xe450, 0x6f75, 0xcc2, 0x7780, 0x0, 0x1);
        gbc.writeMem(0x43d1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3cf9, gbc.sp());
        EXPECT(0x43d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01E5
        gbc.setState(0x8a77, 0xcab2, 0xc6e0, 0x9e50, 0xdd66, 0xc439, 0x1, 0x0);
        gbc.writeMem(0x8a77, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcab2, gbc.sp());
        EXPECT(0x8a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a77));
        EXPECT(0x85, gbc.readMem(0x8a78));
        // CB 85 01E6
        gbc.setState(0xd04c, 0x9303, 0xbd10, 0xe7ea, 0xe2ae, 0xfc5a, 0x1, 0x1);
        gbc.writeMem(0xd04c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9303, gbc.sp());
        EXPECT(0xd04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04c));
        EXPECT(0x85, gbc.readMem(0xd04d));
        // CB 85 01E7
        gbc.setState(0x5eb9, 0x8d3f, 0xd110, 0x7220, 0xc64e, 0xda6c, 0x0, 0x0);
        gbc.writeMem(0x5eb9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8d3f, gbc.sp());
        EXPECT(0x5ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01E8
        gbc.setState(0x8e5f, 0xc2c5, 0xbef0, 0xcb8f, 0x66e6, 0x449d, 0x0, 0x0);
        gbc.writeMem(0x8e5f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc2c5, gbc.sp());
        EXPECT(0x8e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5f));
        EXPECT(0x85, gbc.readMem(0x8e60));
        // CB 85 01E9
        gbc.setState(0xb42e, 0x3cf4, 0x2c10, 0x59b6, 0x4122, 0xfb1e, 0x1, 0x0);
        gbc.writeMem(0xb42e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3cf4, gbc.sp());
        EXPECT(0xb430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42e));
        EXPECT(0x85, gbc.readMem(0xb42f));
        // CB 85 01EA
        gbc.setState(0xa5d3, 0xc69c, 0x8200, 0x8055, 0x550e, 0x7fc6, 0x1, 0x1);
        gbc.writeMem(0xa5d3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc69c, gbc.sp());
        EXPECT(0xa5d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d3));
        EXPECT(0x85, gbc.readMem(0xa5d4));
        // CB 85 01EB
        gbc.setState(0x65da, 0xaf5b, 0xd740, 0xa83d, 0x2aea, 0x407b, 0x0, 0x1);
        gbc.writeMem(0x65da, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xaf5b, gbc.sp());
        EXPECT(0x65dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01EC
        gbc.setState(0x94a3, 0x663b, 0x83f0, 0x6bfc, 0xc928, 0xe72a, 0x0, 0x0);
        gbc.writeMem(0x94a3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x663b, gbc.sp());
        EXPECT(0x94a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a3));
        EXPECT(0x85, gbc.readMem(0x94a4));
        // CB 85 01ED
        gbc.setState(0x33fb, 0x2f3c, 0xc580, 0x6f82, 0x950, 0x488d, 0x1, 0x1);
        gbc.writeMem(0x33fb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2f3c, gbc.sp());
        EXPECT(0x33fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01EE
        gbc.setState(0xb5f9, 0xe496, 0x2340, 0xe87c, 0xc455, 0x7925, 0x0, 0x1);
        gbc.writeMem(0xb5f9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe496, gbc.sp());
        EXPECT(0xb5fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f9));
        EXPECT(0x85, gbc.readMem(0xb5fa));
        // CB 85 01EF
        gbc.setState(0xe474, 0xa1d5, 0x7430, 0x4599, 0xd023, 0xbf1d, 0x0, 0x1);
        gbc.writeMem(0xe474, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa1d5, gbc.sp());
        EXPECT(0xe476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe474));
        EXPECT(0x85, gbc.readMem(0xe475));
        // CB 85 01F0
        gbc.setState(0x45fb, 0xb7f2, 0xf230, 0x4334, 0xff99, 0x4f92, 0x0, 0x0);
        gbc.writeMem(0x45fb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb7f2, gbc.sp());
        EXPECT(0x45fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01F1
        gbc.setState(0x7090, 0x64df, 0xce50, 0x3698, 0xefa7, 0xd632, 0x0, 0x0);
        gbc.writeMem(0x7090, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x64df, gbc.sp());
        EXPECT(0x7092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01F2
        gbc.setState(0x8ba0, 0x3ab4, 0xbd40, 0x1302, 0x6dc5, 0xb496, 0x0, 0x0);
        gbc.writeMem(0x8ba0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3ab4, gbc.sp());
        EXPECT(0x8ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba0));
        EXPECT(0x85, gbc.readMem(0x8ba1));
        // CB 85 01F3
        gbc.setState(0x6bf4, 0xa1e3, 0x63e0, 0x2d29, 0xea17, 0x3ac5, 0x1, 0x1);
        gbc.writeMem(0x6bf4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa1e3, gbc.sp());
        EXPECT(0x6bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01F4
        gbc.setState(0x40b7, 0x98a7, 0x9230, 0x6f58, 0x6e49, 0x1565, 0x1, 0x0);
        gbc.writeMem(0x40b7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x98a7, gbc.sp());
        EXPECT(0x40b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01F5
        gbc.setState(0x5e75, 0xf34c, 0xa610, 0x5579, 0xca15, 0xb8fe, 0x1, 0x0);
        gbc.writeMem(0x5e75, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf34c, gbc.sp());
        EXPECT(0x5e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01F6
        gbc.setState(0xc359, 0x60fc, 0x4a10, 0x366c, 0x993a, 0xcd2, 0x0, 0x0);
        gbc.writeMem(0xc359, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x60fc, gbc.sp());
        EXPECT(0xc35b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc359));
        EXPECT(0x85, gbc.readMem(0xc35a));
        // CB 85 01F7
        gbc.setState(0xf67, 0xf8dd, 0x6740, 0x2fb6, 0x27f3, 0x6fc7, 0x0, 0x0);
        gbc.writeMem(0xf67, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf8dd, gbc.sp());
        EXPECT(0xf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01F8
        gbc.setState(0xd2d3, 0xc05f, 0xc420, 0x4a53, 0x16e6, 0x8f4b, 0x0, 0x1);
        gbc.writeMem(0xd2d3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc05f, gbc.sp());
        EXPECT(0xd2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d3));
        EXPECT(0x85, gbc.readMem(0xd2d4));
        // CB 85 01F9
        gbc.setState(0x47ce, 0xf8cd, 0x7de0, 0xf844, 0xe585, 0x1693, 0x1, 0x1);
        gbc.writeMem(0x47ce, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf8cd, gbc.sp());
        EXPECT(0x47d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01FA
        gbc.setState(0x1365, 0xc9ba, 0xe850, 0xca5e, 0x40dc, 0xcdca, 0x0, 0x1);
        gbc.writeMem(0x1365, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc9ba, gbc.sp());
        EXPECT(0x1367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 01FB
        gbc.setState(0x35d8, 0x94e1, 0xc20, 0xef91, 0xc2b5, 0x2a6f, 0x0, 0x0);
        gbc.writeMem(0x35d8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x94e1, gbc.sp());
        EXPECT(0x35da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01FD
        gbc.setState(0xc69a, 0xc7a9, 0xd9d0, 0x295d, 0xc4d8, 0xb08e, 0x1, 0x1);
        gbc.writeMem(0xc69a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc7a9, gbc.sp());
        EXPECT(0xc69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc69a));
        EXPECT(0x85, gbc.readMem(0xc69b));
        // CB 85 01FE
        gbc.setState(0x64f0, 0xcf2b, 0x26e0, 0x2a7a, 0x14d0, 0x31c, 0x0, 0x1);
        gbc.writeMem(0x64f0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcf2b, gbc.sp());
        EXPECT(0x64f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 01FF
        gbc.setState(0x6668, 0x8d6b, 0x2ca0, 0x640, 0x5c45, 0x3650, 0x1, 0x0);
        gbc.writeMem(0x6668, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8d6b, gbc.sp());
        EXPECT(0x666a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0200
        gbc.setState(0x39e5, 0xc821, 0x5380, 0x1644, 0x6822, 0xf694, 0x0, 0x0);
        gbc.writeMem(0x39e5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc821, gbc.sp());
        EXPECT(0x39e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0201
        gbc.setState(0x30fe, 0x7880, 0x2900, 0xc662, 0xc4b2, 0x607a, 0x0, 0x1);
        gbc.writeMem(0x30fe, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7880, gbc.sp());
        EXPECT(0x3100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0202
        gbc.setState(0x9d6a, 0x243e, 0x3ee0, 0x7e00, 0x5e40, 0x8cd, 0x1, 0x1);
        gbc.writeMem(0x9d6a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x243e, gbc.sp());
        EXPECT(0x9d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6a));
        EXPECT(0x85, gbc.readMem(0x9d6b));
        // CB 85 0203
        gbc.setState(0x3c4b, 0xbb06, 0x4c90, 0x8379, 0x9291, 0xfe7, 0x1, 0x1);
        gbc.writeMem(0x3c4b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbb06, gbc.sp());
        EXPECT(0x3c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0204
        gbc.setState(0x2e69, 0x7a43, 0x3720, 0xac78, 0x14c5, 0x7dbe, 0x0, 0x0);
        gbc.writeMem(0x2e69, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7a43, gbc.sp());
        EXPECT(0x2e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0205
        gbc.setState(0x756b, 0x1b73, 0x9f10, 0x1793, 0xa6fd, 0x683f, 0x0, 0x0);
        gbc.writeMem(0x756b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1b73, gbc.sp());
        EXPECT(0x756d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0206
        gbc.setState(0x1434, 0x8773, 0xcd20, 0xa221, 0xba10, 0xf1b4, 0x1, 0x0);
        gbc.writeMem(0x1434, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8773, gbc.sp());
        EXPECT(0x1436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0207
        gbc.setState(0x19ab, 0x2274, 0x2a90, 0xbfce, 0xc75e, 0x4c32, 0x0, 0x1);
        gbc.writeMem(0x19ab, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2274, gbc.sp());
        EXPECT(0x19ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0208
        gbc.setState(0x4555, 0x2a76, 0x72f0, 0x1984, 0x363d, 0xcf96, 0x0, 0x0);
        gbc.writeMem(0x4555, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2a76, gbc.sp());
        EXPECT(0x4557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0209
        gbc.setState(0x376e, 0x7db8, 0xd060, 0xc3cb, 0xbf32, 0xd9f7, 0x1, 0x1);
        gbc.writeMem(0x376e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7db8, gbc.sp());
        EXPECT(0x3770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 020A
        gbc.setState(0xa734, 0xecdf, 0xd790, 0xed06, 0x20b5, 0x15df, 0x1, 0x1);
        gbc.writeMem(0xa734, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xecdf, gbc.sp());
        EXPECT(0xa736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa734));
        EXPECT(0x85, gbc.readMem(0xa735));
        // CB 85 020B
        gbc.setState(0xecf7, 0x53ab, 0xb710, 0x1bcf, 0x9458, 0xe63e, 0x0, 0x0);
        gbc.writeMem(0xecf7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x53ab, gbc.sp());
        EXPECT(0xecf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf7));
        EXPECT(0x85, gbc.readMem(0xecf8));
        // CB 85 020C
        gbc.setState(0x3460, 0xba8, 0x91e0, 0x8be, 0xaa01, 0x16a6, 0x0, 0x1);
        gbc.writeMem(0x3460, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xba8, gbc.sp());
        EXPECT(0x3462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 020D
        gbc.setState(0xe920, 0x8550, 0x73c0, 0x570b, 0xdb1e, 0xa3f5, 0x1, 0x0);
        gbc.writeMem(0xe920, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8550, gbc.sp());
        EXPECT(0xe922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe920));
        EXPECT(0x85, gbc.readMem(0xe921));
        // CB 85 020F
        gbc.setState(0xd18a, 0xdef7, 0xa350, 0x369f, 0xadf2, 0xdcff, 0x1, 0x1);
        gbc.writeMem(0xd18a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdef7, gbc.sp());
        EXPECT(0xd18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18a));
        EXPECT(0x85, gbc.readMem(0xd18b));
        // CB 85 0210
        gbc.setState(0xa916, 0x11f2, 0xd240, 0x5700, 0xb384, 0x91ef, 0x0, 0x1);
        gbc.writeMem(0xa916, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x11f2, gbc.sp());
        EXPECT(0xa918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa916));
        EXPECT(0x85, gbc.readMem(0xa917));
        // CB 85 0211
        gbc.setState(0xebf5, 0x4939, 0x7430, 0xb5f9, 0xcc9d, 0x9d3d, 0x0, 0x0);
        gbc.writeMem(0xebf5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4939, gbc.sp());
        EXPECT(0xebf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf5));
        EXPECT(0x85, gbc.readMem(0xebf6));
        // CB 85 0212
        gbc.setState(0xe553, 0xf8d7, 0x1cc0, 0x958a, 0x8a6e, 0xe5af, 0x0, 0x1);
        gbc.writeMem(0xe553, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf8d7, gbc.sp());
        EXPECT(0xe555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe553));
        EXPECT(0x85, gbc.readMem(0xe554));
        // CB 85 0213
        gbc.setState(0x7273, 0x2ddb, 0xf6a0, 0x94c6, 0x245a, 0x4561, 0x1, 0x1);
        gbc.writeMem(0x7273, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2ddb, gbc.sp());
        EXPECT(0x7275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0214
        gbc.setState(0x4efb, 0xa809, 0xfac0, 0x781a, 0x5011, 0xabe, 0x0, 0x1);
        gbc.writeMem(0x4efb, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa809, gbc.sp());
        EXPECT(0x4efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0215
        gbc.setState(0xdaae, 0x520a, 0x8e60, 0xca59, 0xd346, 0x6811, 0x1, 0x1);
        gbc.writeMem(0xdaae, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x520a, gbc.sp());
        EXPECT(0xdab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaae));
        EXPECT(0x85, gbc.readMem(0xdaaf));
        // CB 85 0216
        gbc.setState(0xec4c, 0xe099, 0x480, 0x1ccd, 0xb3d2, 0x1a1c, 0x1, 0x1);
        gbc.writeMem(0xec4c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe099, gbc.sp());
        EXPECT(0xec4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4c));
        EXPECT(0x85, gbc.readMem(0xec4d));
        // CB 85 0217
        gbc.setState(0xed64, 0x953c, 0xce0, 0x6238, 0xfae5, 0x5ba1, 0x0, 0x0);
        gbc.writeMem(0xed64, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x953c, gbc.sp());
        EXPECT(0xed66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed64));
        EXPECT(0x85, gbc.readMem(0xed65));
        // CB 85 0218
        gbc.setState(0xe558, 0x7ceb, 0xe750, 0xe287, 0x6d70, 0x46da, 0x0, 0x0);
        gbc.writeMem(0xe558, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7ceb, gbc.sp());
        EXPECT(0xe55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe558));
        EXPECT(0x85, gbc.readMem(0xe559));
        // CB 85 0219
        gbc.setState(0x502b, 0x6cfd, 0x49b0, 0x3cfc, 0x39e0, 0xb5f3, 0x1, 0x1);
        gbc.writeMem(0x502b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6cfd, gbc.sp());
        EXPECT(0x502d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 021A
        gbc.setState(0x5e6b, 0x6437, 0xecf0, 0x65af, 0x4f, 0x685d, 0x1, 0x1);
        gbc.writeMem(0x5e6b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6437, gbc.sp());
        EXPECT(0x5e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 021B
        gbc.setState(0x39dc, 0x7f59, 0xe0b0, 0xcc3b, 0xc783, 0x74f8, 0x0, 0x1);
        gbc.writeMem(0x39dc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7f59, gbc.sp());
        EXPECT(0x39de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 021C
        gbc.setState(0x7532, 0x5da0, 0x1cc0, 0xdf4e, 0x3b46, 0x95ff, 0x0, 0x0);
        gbc.writeMem(0x7532, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5da0, gbc.sp());
        EXPECT(0x7534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 021D
        gbc.setState(0x7f0, 0x3667, 0x9b50, 0x1145, 0x2c2d, 0xb2a6, 0x0, 0x0);
        gbc.writeMem(0x7f0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3667, gbc.sp());
        EXPECT(0x7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 021E
        gbc.setState(0x122a, 0xa472, 0x81b0, 0x262d, 0xa188, 0x4a5a, 0x0, 0x0);
        gbc.writeMem(0x122a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa472, gbc.sp());
        EXPECT(0x122c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 021F
        gbc.setState(0xd89a, 0xdd0e, 0x4860, 0x2ecb, 0x22ad, 0xd300, 0x0, 0x0);
        gbc.writeMem(0xd89a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdd0e, gbc.sp());
        EXPECT(0xd89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89a));
        EXPECT(0x85, gbc.readMem(0xd89b));
        // CB 85 0220
        gbc.setState(0xede, 0x5251, 0x5840, 0x7b42, 0x9d9d, 0xcd08, 0x1, 0x1);
        gbc.writeMem(0xede, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5251, gbc.sp());
        EXPECT(0xee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0221
        gbc.setState(0x2f7b, 0x63e, 0xeec0, 0x9f4b, 0xef6, 0x684, 0x0, 0x1);
        gbc.writeMem(0x2f7b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x63e, gbc.sp());
        EXPECT(0x2f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0222
        gbc.setState(0x444a, 0xa863, 0x53b0, 0x6a5, 0xf4f0, 0xd3ab, 0x1, 0x0);
        gbc.writeMem(0x444a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa863, gbc.sp());
        EXPECT(0x444c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0223
        gbc.setState(0x7202, 0xdaec, 0x1db0, 0x902a, 0xe066, 0x9d68, 0x0, 0x0);
        gbc.writeMem(0x7202, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdaec, gbc.sp());
        EXPECT(0x7204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0224
        gbc.setState(0x521d, 0x4777, 0x3de0, 0x8fb3, 0xf70d, 0x772f, 0x0, 0x0);
        gbc.writeMem(0x521d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4777, gbc.sp());
        EXPECT(0x521f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0226
        gbc.setState(0x7b53, 0xead8, 0x57e0, 0x2391, 0x52f9, 0xf736, 0x0, 0x1);
        gbc.writeMem(0x7b53, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xead8, gbc.sp());
        EXPECT(0x7b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0227
        gbc.setState(0x3eb7, 0x82dd, 0xe350, 0x888, 0x24d2, 0x1f79, 0x1, 0x1);
        gbc.writeMem(0x3eb7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x82dd, gbc.sp());
        EXPECT(0x3eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0228
        gbc.setState(0x606f, 0xa4c4, 0x760, 0x3716, 0x3f3b, 0x3392, 0x1, 0x0);
        gbc.writeMem(0x606f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa4c4, gbc.sp());
        EXPECT(0x6071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0229
        gbc.setState(0xb912, 0x4ed7, 0x8a80, 0x44a6, 0xade7, 0x51f1, 0x1, 0x0);
        gbc.writeMem(0xb912, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4ed7, gbc.sp());
        EXPECT(0xb914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb912));
        EXPECT(0x85, gbc.readMem(0xb913));
        // CB 85 022A
        gbc.setState(0x5628, 0xfeff, 0xe660, 0x345, 0x7f53, 0x6d42, 0x1, 0x1);
        gbc.writeMem(0x5628, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfeff, gbc.sp());
        EXPECT(0x562a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 022B
        gbc.setState(0x84ff, 0x86bd, 0x5f10, 0xc479, 0x7c91, 0x1ef0, 0x1, 0x1);
        gbc.writeMem(0x84ff, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x86bd, gbc.sp());
        EXPECT(0x8501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ff));
        EXPECT(0x85, gbc.readMem(0x8500));
        // CB 85 022C
        gbc.setState(0x58e2, 0xd585, 0xe1f0, 0xc29, 0x30c1, 0x5279, 0x1, 0x1);
        gbc.writeMem(0x58e2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd585, gbc.sp());
        EXPECT(0x58e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 022D
        gbc.setState(0x84a3, 0x5aac, 0xbd70, 0xb961, 0x817b, 0x54d5, 0x0, 0x1);
        gbc.writeMem(0x84a3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5aac, gbc.sp());
        EXPECT(0x84a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a3));
        EXPECT(0x85, gbc.readMem(0x84a4));
        // CB 85 022E
        gbc.setState(0xd36c, 0xdcf0, 0x33e0, 0xac27, 0x5ad2, 0x22cb, 0x0, 0x0);
        gbc.writeMem(0xd36c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdcf0, gbc.sp());
        EXPECT(0xd36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36c));
        EXPECT(0x85, gbc.readMem(0xd36d));
        // CB 85 022F
        gbc.setState(0x7b9e, 0xaf02, 0x2d50, 0x154e, 0x86c4, 0xe133, 0x0, 0x0);
        gbc.writeMem(0x7b9e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaf02, gbc.sp());
        EXPECT(0x7ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0230
        gbc.setState(0x5c1b, 0x25a4, 0xe800, 0x3361, 0xcf51, 0x2d7d, 0x0, 0x0);
        gbc.writeMem(0x5c1b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x25a4, gbc.sp());
        EXPECT(0x5c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0231
        gbc.setState(0x5905, 0xe356, 0x8460, 0x3877, 0x47, 0xd62e, 0x0, 0x1);
        gbc.writeMem(0x5905, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe356, gbc.sp());
        EXPECT(0x5907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0232
        gbc.setState(0x96f1, 0xf000, 0xf350, 0x2d83, 0x92d7, 0x885, 0x0, 0x0);
        gbc.writeMem(0x96f1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf000, gbc.sp());
        EXPECT(0x96f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f1));
        EXPECT(0x85, gbc.readMem(0x96f2));
        // CB 85 0233
        gbc.setState(0xbafd, 0xaeae, 0x10f0, 0x8c5a, 0xfb54, 0xdd1f, 0x0, 0x0);
        gbc.writeMem(0xbafd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xaeae, gbc.sp());
        EXPECT(0xbaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafd));
        EXPECT(0x85, gbc.readMem(0xbafe));
        // CB 85 0234
        gbc.setState(0xeef5, 0xb9fb, 0xcd30, 0xdc2, 0xa4fa, 0x32e2, 0x0, 0x0);
        gbc.writeMem(0xeef5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb9fb, gbc.sp());
        EXPECT(0xeef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef5));
        EXPECT(0x85, gbc.readMem(0xeef6));
        // CB 85 0235
        gbc.setState(0x8596, 0x3f14, 0xe340, 0x45af, 0xce06, 0xf4d5, 0x1, 0x0);
        gbc.writeMem(0x8596, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3f14, gbc.sp());
        EXPECT(0x8598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8596));
        EXPECT(0x85, gbc.readMem(0x8597));
        // CB 85 0236
        gbc.setState(0x4c16, 0xbac6, 0x360, 0xa41c, 0x69ec, 0x47f0, 0x1, 0x0);
        gbc.writeMem(0x4c16, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbac6, gbc.sp());
        EXPECT(0x4c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0237
        gbc.setState(0xa320, 0xceb8, 0x6290, 0x70b5, 0x3bef, 0x139d, 0x0, 0x1);
        gbc.writeMem(0xa320, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xceb8, gbc.sp());
        EXPECT(0xa322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa320));
        EXPECT(0x85, gbc.readMem(0xa321));
        // CB 85 0238
        gbc.setState(0xc62d, 0xdfe4, 0xefd0, 0x7b04, 0x54f2, 0x641c, 0x0, 0x0);
        gbc.writeMem(0xc62d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdfe4, gbc.sp());
        EXPECT(0xc62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62d));
        EXPECT(0x85, gbc.readMem(0xc62e));
        // CB 85 0239
        gbc.setState(0xc497, 0x570b, 0xb5d0, 0x4fee, 0xf5aa, 0xa6b1, 0x0, 0x0);
        gbc.writeMem(0xc497, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x570b, gbc.sp());
        EXPECT(0xc499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc497));
        EXPECT(0x85, gbc.readMem(0xc498));
        // CB 85 023A
        gbc.setState(0x3e8, 0x2709, 0x3de0, 0xcb06, 0x8e4d, 0x3555, 0x1, 0x0);
        gbc.writeMem(0x3e8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2709, gbc.sp());
        EXPECT(0x3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 023B
        gbc.setState(0xbc38, 0xf2d8, 0xe500, 0x41ea, 0xd5b2, 0xae8, 0x1, 0x1);
        gbc.writeMem(0xbc38, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf2d8, gbc.sp());
        EXPECT(0xbc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc38));
        EXPECT(0x85, gbc.readMem(0xbc39));
        // CB 85 023C
        gbc.setState(0x19fe, 0x3e7e, 0x5990, 0xe941, 0xd887, 0x25a, 0x0, 0x1);
        gbc.writeMem(0x19fe, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3e7e, gbc.sp());
        EXPECT(0x1a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 023D
        gbc.setState(0xe891, 0x1104, 0x1340, 0x1d89, 0xffd5, 0x1280, 0x0, 0x0);
        gbc.writeMem(0xe891, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1104, gbc.sp());
        EXPECT(0xe893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe891));
        EXPECT(0x85, gbc.readMem(0xe892));
        // CB 85 023E
        gbc.setState(0x4d49, 0x450e, 0xd3e0, 0x7196, 0x99d6, 0x612a, 0x1, 0x0);
        gbc.writeMem(0x4d49, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x450e, gbc.sp());
        EXPECT(0x4d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 023F
        gbc.setState(0xd7b3, 0x59f1, 0x26e0, 0xeafa, 0x2337, 0x61f6, 0x1, 0x1);
        gbc.writeMem(0xd7b3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x59f1, gbc.sp());
        EXPECT(0xd7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b3));
        EXPECT(0x85, gbc.readMem(0xd7b4));
        // CB 85 0240
        gbc.setState(0x9343, 0x68e0, 0xb590, 0xc1fe, 0xa90, 0xc2d5, 0x1, 0x0);
        gbc.writeMem(0x9343, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x68e0, gbc.sp());
        EXPECT(0x9345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9343));
        EXPECT(0x85, gbc.readMem(0x9344));
        // CB 85 0241
        gbc.setState(0x3e5d, 0x81ec, 0x5ea0, 0x4dd4, 0xc9da, 0xe3e6, 0x0, 0x1);
        gbc.writeMem(0x3e5d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x81ec, gbc.sp());
        EXPECT(0x3e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0242
        gbc.setState(0x8599, 0x281e, 0x3a10, 0x3ba0, 0x65dd, 0x3f3a, 0x1, 0x0);
        gbc.writeMem(0x8599, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x281e, gbc.sp());
        EXPECT(0x859b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8599));
        EXPECT(0x85, gbc.readMem(0x859a));
        // CB 85 0243
        gbc.setState(0x6ce3, 0x5e7c, 0xdf70, 0x3bb, 0x6546, 0xe52f, 0x1, 0x1);
        gbc.writeMem(0x6ce3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5e7c, gbc.sp());
        EXPECT(0x6ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0244
        gbc.setState(0x9292, 0x3034, 0x9050, 0x43e6, 0x8ebf, 0xc589, 0x0, 0x0);
        gbc.writeMem(0x9292, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3034, gbc.sp());
        EXPECT(0x9294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9292));
        EXPECT(0x85, gbc.readMem(0x9293));
        // CB 85 0245
        gbc.setState(0xb06, 0xb2f7, 0xa3c0, 0x1fd, 0x184b, 0x7491, 0x1, 0x1);
        gbc.writeMem(0xb06, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb2f7, gbc.sp());
        EXPECT(0xb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0246
        gbc.setState(0x623, 0x7991, 0xe4f0, 0x4be5, 0xe932, 0xe048, 0x1, 0x1);
        gbc.writeMem(0x623, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7991, gbc.sp());
        EXPECT(0x625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0247
        gbc.setState(0x694d, 0xa4e8, 0x2e40, 0x8c45, 0xb063, 0xe1d8, 0x0, 0x1);
        gbc.writeMem(0x694d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa4e8, gbc.sp());
        EXPECT(0x694f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0248
        gbc.setState(0x6f7a, 0xd87b, 0x8d80, 0x6604, 0x9a07, 0x5a60, 0x0, 0x0);
        gbc.writeMem(0x6f7a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd87b, gbc.sp());
        EXPECT(0x6f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0249
        gbc.setState(0x5bd, 0xd5a6, 0x76b0, 0xfa69, 0xeda4, 0x3c1f, 0x1, 0x1);
        gbc.writeMem(0x5bd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd5a6, gbc.sp());
        EXPECT(0x5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 024A
        gbc.setState(0x2aa8, 0x3a67, 0xe190, 0x7e2a, 0x91cc, 0xa0dc, 0x0, 0x1);
        gbc.writeMem(0x2aa8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3a67, gbc.sp());
        EXPECT(0x2aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 024B
        gbc.setState(0x6085, 0x1d1f, 0xf310, 0xb3a5, 0x8fc6, 0x8295, 0x0, 0x0);
        gbc.writeMem(0x6085, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1d1f, gbc.sp());
        EXPECT(0x6087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 024D
        gbc.setState(0xe687, 0x6d92, 0xe360, 0xc362, 0x5ea7, 0xd130, 0x0, 0x1);
        gbc.writeMem(0xe687, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6d92, gbc.sp());
        EXPECT(0xe689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe687));
        EXPECT(0x85, gbc.readMem(0xe688));
        // CB 85 024E
        gbc.setState(0x2381, 0xe610, 0x2150, 0xf308, 0x3d0c, 0xba72, 0x1, 0x1);
        gbc.writeMem(0x2381, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe610, gbc.sp());
        EXPECT(0x2383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 024F
        gbc.setState(0xaff7, 0xa01d, 0xed90, 0x5ddc, 0xe495, 0xade7, 0x0, 0x0);
        gbc.writeMem(0xaff7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa01d, gbc.sp());
        EXPECT(0xaff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff7));
        EXPECT(0x85, gbc.readMem(0xaff8));
        // CB 85 0250
        gbc.setState(0x7ef6, 0xa2b1, 0xec80, 0xacf1, 0xeeb1, 0x26ee, 0x0, 0x1);
        gbc.writeMem(0x7ef6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa2b1, gbc.sp());
        EXPECT(0x7ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0251
        gbc.setState(0x847d, 0xadd3, 0x6f80, 0xcc20, 0x51ee, 0x1a59, 0x0, 0x1);
        gbc.writeMem(0x847d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xadd3, gbc.sp());
        EXPECT(0x847f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847d));
        EXPECT(0x85, gbc.readMem(0x847e));
        // CB 85 0252
        gbc.setState(0xc4d8, 0x265d, 0x6f70, 0x1eb5, 0x96ca, 0x3381, 0x1, 0x1);
        gbc.writeMem(0xc4d8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x265d, gbc.sp());
        EXPECT(0xc4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d8));
        EXPECT(0x85, gbc.readMem(0xc4d9));
        // CB 85 0253
        gbc.setState(0x2c1, 0xa1cc, 0xc40, 0xc563, 0x582e, 0xc145, 0x0, 0x0);
        gbc.writeMem(0x2c1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa1cc, gbc.sp());
        EXPECT(0x2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0254
        gbc.setState(0xc23e, 0xdae4, 0xd700, 0x8b60, 0x95be, 0x97aa, 0x0, 0x0);
        gbc.writeMem(0xc23e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdae4, gbc.sp());
        EXPECT(0xc240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23e));
        EXPECT(0x85, gbc.readMem(0xc23f));
        // CB 85 0255
        gbc.setState(0x1ee9, 0xf266, 0xe640, 0xd36b, 0x9069, 0x75ba, 0x1, 0x0);
        gbc.writeMem(0x1ee9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf266, gbc.sp());
        EXPECT(0x1eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0256
        gbc.setState(0x6c70, 0x6be3, 0x8a20, 0x827, 0xacab, 0x9c86, 0x0, 0x1);
        gbc.writeMem(0x6c70, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6be3, gbc.sp());
        EXPECT(0x6c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0257
        gbc.setState(0x775, 0xee6c, 0xf120, 0x1d90, 0x10e, 0xa5cd, 0x1, 0x0);
        gbc.writeMem(0x775, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xee6c, gbc.sp());
        EXPECT(0x777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0259
        gbc.setState(0xcfcc, 0x3964, 0x3b40, 0xff76, 0x84f4, 0x303c, 0x0, 0x0);
        gbc.writeMem(0xcfcc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3964, gbc.sp());
        EXPECT(0xcfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfcc));
        EXPECT(0x85, gbc.readMem(0xcfcd));
        // CB 85 025A
        gbc.setState(0x14bf, 0xeee9, 0x52f0, 0x2a45, 0x70c0, 0xe2c0, 0x0, 0x0);
        gbc.writeMem(0x14bf, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xeee9, gbc.sp());
        EXPECT(0x14c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 025B
        gbc.setState(0x1806, 0x5bc, 0x2670, 0x277f, 0x7ec1, 0xfa2c, 0x0, 0x0);
        gbc.writeMem(0x1806, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5bc, gbc.sp());
        EXPECT(0x1808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 025C
        gbc.setState(0xaf3b, 0x8201, 0x5470, 0xf54f, 0x8bf5, 0xe195, 0x1, 0x1);
        gbc.writeMem(0xaf3b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8201, gbc.sp());
        EXPECT(0xaf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3b));
        EXPECT(0x85, gbc.readMem(0xaf3c));
        // CB 85 025D
        gbc.setState(0x1ea5, 0x26ed, 0x6790, 0x598b, 0x2340, 0xe238, 0x0, 0x1);
        gbc.writeMem(0x1ea5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x26ed, gbc.sp());
        EXPECT(0x1ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 025F
        gbc.setState(0x83e1, 0x92d2, 0xf370, 0x372e, 0x1b30, 0x8cd, 0x1, 0x0);
        gbc.writeMem(0x83e1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x92d2, gbc.sp());
        EXPECT(0x83e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e1));
        EXPECT(0x85, gbc.readMem(0x83e2));
        // CB 85 0260
        gbc.setState(0x6cb9, 0x7edf, 0x4750, 0x90e2, 0x47eb, 0xa5e8, 0x0, 0x1);
        gbc.writeMem(0x6cb9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7edf, gbc.sp());
        EXPECT(0x6cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0261
        gbc.setState(0xd5a0, 0x89f9, 0x5120, 0xf90a, 0xdac2, 0x771f, 0x0, 0x1);
        gbc.writeMem(0xd5a0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x89f9, gbc.sp());
        EXPECT(0xd5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a0));
        EXPECT(0x85, gbc.readMem(0xd5a1));
        // CB 85 0262
        gbc.setState(0x4049, 0xfc70, 0xc6c0, 0x5cc5, 0x76a0, 0x59d9, 0x0, 0x0);
        gbc.writeMem(0x4049, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfc70, gbc.sp());
        EXPECT(0x404b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0263
        gbc.setState(0x1cef, 0x9037, 0xb690, 0xa849, 0xe05b, 0x429e, 0x0, 0x1);
        gbc.writeMem(0x1cef, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9037, gbc.sp());
        EXPECT(0x1cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0264
        gbc.setState(0xd09a, 0xda8a, 0xae50, 0xfe64, 0xb53a, 0xa74d, 0x1, 0x1);
        gbc.writeMem(0xd09a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xda8a, gbc.sp());
        EXPECT(0xd09c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd09a));
        EXPECT(0x85, gbc.readMem(0xd09b));
        // CB 85 0265
        gbc.setState(0x8a32, 0xd4dc, 0xa3f0, 0x4d46, 0xef36, 0x2174, 0x1, 0x0);
        gbc.writeMem(0x8a32, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd4dc, gbc.sp());
        EXPECT(0x8a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a32));
        EXPECT(0x85, gbc.readMem(0x8a33));
        // CB 85 0266
        gbc.setState(0xb90, 0x63e0, 0x4a20, 0xa353, 0x209, 0xb63f, 0x0, 0x0);
        gbc.writeMem(0xb90, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x63e0, gbc.sp());
        EXPECT(0xb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0267
        gbc.setState(0x2b4a, 0x8c6e, 0x9fa0, 0x15d1, 0xcc88, 0x37f2, 0x1, 0x0);
        gbc.writeMem(0x2b4a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8c6e, gbc.sp());
        EXPECT(0x2b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0268
        gbc.setState(0xcad0, 0x18cd, 0xc3f0, 0xbe53, 0xe627, 0x9e9c, 0x1, 0x0);
        gbc.writeMem(0xcad0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x18cd, gbc.sp());
        EXPECT(0xcad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad0));
        EXPECT(0x85, gbc.readMem(0xcad1));
        // CB 85 0269
        gbc.setState(0xc5aa, 0xa4a, 0xe940, 0x54f0, 0xd4a7, 0x8e38, 0x1, 0x0);
        gbc.writeMem(0xc5aa, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa4a, gbc.sp());
        EXPECT(0xc5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5aa));
        EXPECT(0x85, gbc.readMem(0xc5ab));
        // CB 85 026A
        gbc.setState(0x17a5, 0xade5, 0x7610, 0x1bfe, 0x9180, 0x7481, 0x1, 0x1);
        gbc.writeMem(0x17a5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xade5, gbc.sp());
        EXPECT(0x17a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 026B
        gbc.setState(0x6879, 0xc74f, 0xe600, 0xa2e6, 0x5200, 0x5b96, 0x0, 0x1);
        gbc.writeMem(0x6879, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc74f, gbc.sp());
        EXPECT(0x687b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 026C
        gbc.setState(0x49d7, 0x2eec, 0x7b80, 0x7af9, 0x7f9a, 0x2d72, 0x1, 0x1);
        gbc.writeMem(0x49d7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2eec, gbc.sp());
        EXPECT(0x49d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 026D
        gbc.setState(0xa550, 0x3ae8, 0x9f60, 0x5517, 0x9d70, 0xe7a6, 0x1, 0x1);
        gbc.writeMem(0xa550, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3ae8, gbc.sp());
        EXPECT(0xa552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa550));
        EXPECT(0x85, gbc.readMem(0xa551));
        // CB 85 026E
        gbc.setState(0x2c47, 0xca64, 0xc9e0, 0x156b, 0x61c, 0xfeb2, 0x1, 0x0);
        gbc.writeMem(0x2c47, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xca64, gbc.sp());
        EXPECT(0x2c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0270
        gbc.setState(0xa296, 0xa344, 0x5b90, 0x2553, 0xef1f, 0x6eca, 0x0, 0x0);
        gbc.writeMem(0xa296, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa344, gbc.sp());
        EXPECT(0xa298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa296));
        EXPECT(0x85, gbc.readMem(0xa297));
        // CB 85 0271
        gbc.setState(0x30fa, 0x63d1, 0x2f10, 0xd31f, 0xe75b, 0x44ca, 0x0, 0x1);
        gbc.writeMem(0x30fa, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x63d1, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0272
        gbc.setState(0x1f3d, 0x1a60, 0xec30, 0xa255, 0x712b, 0xf962, 0x0, 0x1);
        gbc.writeMem(0x1f3d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1a60, gbc.sp());
        EXPECT(0x1f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0273
        gbc.setState(0x16c4, 0xa52a, 0x7530, 0x4a6f, 0x99c6, 0xe45, 0x0, 0x1);
        gbc.writeMem(0x16c4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa52a, gbc.sp());
        EXPECT(0x16c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0274
        gbc.setState(0x7080, 0xa6c7, 0xd800, 0x96b8, 0x574, 0x1587, 0x0, 0x0);
        gbc.writeMem(0x7080, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa6c7, gbc.sp());
        EXPECT(0x7082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0275
        gbc.setState(0x1ed4, 0xd86f, 0x4830, 0xde1, 0xa4c, 0x58c4, 0x0, 0x1);
        gbc.writeMem(0x1ed4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd86f, gbc.sp());
        EXPECT(0x1ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0276
        gbc.setState(0xba8a, 0x1e8, 0x6fd0, 0x8dd3, 0x65cc, 0xeac2, 0x0, 0x1);
        gbc.writeMem(0xba8a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1e8, gbc.sp());
        EXPECT(0xba8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba8a));
        EXPECT(0x85, gbc.readMem(0xba8b));
        // CB 85 0277
        gbc.setState(0xcf85, 0x13e7, 0x5d0, 0x5c0b, 0xa54d, 0x98c4, 0x0, 0x0);
        gbc.writeMem(0xcf85, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x13e7, gbc.sp());
        EXPECT(0xcf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf85));
        EXPECT(0x85, gbc.readMem(0xcf86));
        // CB 85 0278
        gbc.setState(0x3a5c, 0x4ecb, 0x1bf0, 0xd7b7, 0xf53, 0x6e5b, 0x1, 0x0);
        gbc.writeMem(0x3a5c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4ecb, gbc.sp());
        EXPECT(0x3a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0279
        gbc.setState(0x104, 0x4e76, 0xe750, 0x6f6e, 0xae30, 0x5485, 0x1, 0x0);
        gbc.writeMem(0x104, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4e76, gbc.sp());
        EXPECT(0x106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 027A
        gbc.setState(0xc29a, 0x9a2a, 0xd990, 0x5d0a, 0xf0fd, 0x83a7, 0x1, 0x1);
        gbc.writeMem(0xc29a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9a2a, gbc.sp());
        EXPECT(0xc29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29a));
        EXPECT(0x85, gbc.readMem(0xc29b));
        // CB 85 027C
        gbc.setState(0xb8f6, 0x9f6, 0x4b60, 0x37f6, 0x148a, 0x6156, 0x0, 0x0);
        gbc.writeMem(0xb8f6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9f6, gbc.sp());
        EXPECT(0xb8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f6));
        EXPECT(0x85, gbc.readMem(0xb8f7));
        // CB 85 027D
        gbc.setState(0x57b6, 0x25f2, 0xb910, 0x9af4, 0x1226, 0xf034, 0x0, 0x1);
        gbc.writeMem(0x57b6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x25f2, gbc.sp());
        EXPECT(0x57b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 027E
        gbc.setState(0xee2d, 0xdf3c, 0x4da0, 0x870b, 0xe9b7, 0xe092, 0x0, 0x1);
        gbc.writeMem(0xee2d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdf3c, gbc.sp());
        EXPECT(0xee2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2d));
        EXPECT(0x85, gbc.readMem(0xee2e));
        // CB 85 027F
        gbc.setState(0x9afd, 0x75d7, 0x81d0, 0x283f, 0x6a63, 0xcdd, 0x0, 0x0);
        gbc.writeMem(0x9afd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x75d7, gbc.sp());
        EXPECT(0x9aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afd));
        EXPECT(0x85, gbc.readMem(0x9afe));
        // CB 85 0280
        gbc.setState(0x91f4, 0x7909, 0x2480, 0xed1, 0xd3ce, 0x7ba7, 0x0, 0x1);
        gbc.writeMem(0x91f4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7909, gbc.sp());
        EXPECT(0x91f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f4));
        EXPECT(0x85, gbc.readMem(0x91f5));
        // CB 85 0281
        gbc.setState(0x4609, 0xd8f4, 0xe5d0, 0xf50c, 0x75ba, 0xf9ac, 0x0, 0x1);
        gbc.writeMem(0x4609, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd8f4, gbc.sp());
        EXPECT(0x460b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0283
        gbc.setState(0xd272, 0xc8ae, 0xe850, 0x367c, 0xfd69, 0x6733, 0x0, 0x0);
        gbc.writeMem(0xd272, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc8ae, gbc.sp());
        EXPECT(0xd274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd272));
        EXPECT(0x85, gbc.readMem(0xd273));
        // CB 85 0284
        gbc.setState(0x8039, 0xbf9e, 0x9380, 0x5ed8, 0xb663, 0xd963, 0x1, 0x0);
        gbc.writeMem(0x8039, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbf9e, gbc.sp());
        EXPECT(0x803b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8039));
        EXPECT(0x85, gbc.readMem(0x803a));
        // CB 85 0286
        gbc.setState(0x5698, 0xcb04, 0x4c70, 0x326b, 0xf22e, 0x8d9b, 0x1, 0x0);
        gbc.writeMem(0x5698, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcb04, gbc.sp());
        EXPECT(0x569a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0287
        gbc.setState(0x693d, 0x45bb, 0xa340, 0x2680, 0xca75, 0x75dd, 0x1, 0x1);
        gbc.writeMem(0x693d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x45bb, gbc.sp());
        EXPECT(0x693f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0288
        gbc.setState(0xe9aa, 0x142, 0xd920, 0x3535, 0x1fd, 0x5317, 0x0, 0x1);
        gbc.writeMem(0xe9aa, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x142, gbc.sp());
        EXPECT(0xe9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9aa));
        EXPECT(0x85, gbc.readMem(0xe9ab));
        // CB 85 0289
        gbc.setState(0x6551, 0xe5d3, 0x68b0, 0x442c, 0xfc47, 0x3b74, 0x1, 0x1);
        gbc.writeMem(0x6551, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe5d3, gbc.sp());
        EXPECT(0x6553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 028A
        gbc.setState(0xd78a, 0xc209, 0xe390, 0x2010, 0x8b65, 0x1885, 0x1, 0x1);
        gbc.writeMem(0xd78a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc209, gbc.sp());
        EXPECT(0xd78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78a));
        EXPECT(0x85, gbc.readMem(0xd78b));
        // CB 85 028B
        gbc.setState(0xd77, 0xf90f, 0x6e30, 0x2ba5, 0xfca3, 0x42f1, 0x0, 0x1);
        gbc.writeMem(0xd77, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf90f, gbc.sp());
        EXPECT(0xd79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 028C
        gbc.setState(0xedd7, 0xbae9, 0xf630, 0x226d, 0xc635, 0xa0f4, 0x0, 0x1);
        gbc.writeMem(0xedd7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbae9, gbc.sp());
        EXPECT(0xedd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd7));
        EXPECT(0x85, gbc.readMem(0xedd8));
        // CB 85 028D
        gbc.setState(0xa913, 0x9f3e, 0x3fa0, 0x7fc2, 0xcbf, 0x4454, 0x0, 0x1);
        gbc.writeMem(0xa913, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9f3e, gbc.sp());
        EXPECT(0xa915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa913));
        EXPECT(0x85, gbc.readMem(0xa914));
        // CB 85 028E
        gbc.setState(0xb299, 0xab9a, 0xc4b0, 0x8b82, 0x2742, 0xa639, 0x1, 0x0);
        gbc.writeMem(0xb299, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xab9a, gbc.sp());
        EXPECT(0xb29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb299));
        EXPECT(0x85, gbc.readMem(0xb29a));
        // CB 85 028F
        gbc.setState(0xa333, 0xbcd7, 0x9060, 0xa1f3, 0x409b, 0xb79, 0x1, 0x1);
        gbc.writeMem(0xa333, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbcd7, gbc.sp());
        EXPECT(0xa335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa333));
        EXPECT(0x85, gbc.readMem(0xa334));
        // CB 85 0290
        gbc.setState(0x3c71, 0xa5c2, 0x15a0, 0xc998, 0x60e5, 0x7a06, 0x0, 0x0);
        gbc.writeMem(0x3c71, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa5c2, gbc.sp());
        EXPECT(0x3c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0291
        gbc.setState(0x717d, 0x5a6e, 0x45f0, 0xbb19, 0x91ae, 0x7991, 0x0, 0x0);
        gbc.writeMem(0x717d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5a6e, gbc.sp());
        EXPECT(0x717f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0292
        gbc.setState(0xd0d, 0x1662, 0x5b10, 0xfecc, 0xce93, 0x6aa1, 0x0, 0x1);
        gbc.writeMem(0xd0d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1662, gbc.sp());
        EXPECT(0xd0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0293
        gbc.setState(0x1a07, 0x2157, 0xf870, 0x54a8, 0x402d, 0x7e4c, 0x1, 0x1);
        gbc.writeMem(0x1a07, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2157, gbc.sp());
        EXPECT(0x1a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0294
        gbc.setState(0x243d, 0x1ef4, 0x2650, 0x5cfe, 0xddd1, 0xd07b, 0x0, 0x1);
        gbc.writeMem(0x243d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1ef4, gbc.sp());
        EXPECT(0x243f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0295
        gbc.setState(0x8939, 0xd348, 0xc9b0, 0xfcf6, 0x3ea0, 0x88b5, 0x0, 0x0);
        gbc.writeMem(0x8939, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd348, gbc.sp());
        EXPECT(0x893b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8939));
        EXPECT(0x85, gbc.readMem(0x893a));
        // CB 85 0296
        gbc.setState(0xcc36, 0x6c20, 0xb600, 0xc52c, 0x4496, 0xcb9d, 0x1, 0x0);
        gbc.writeMem(0xcc36, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6c20, gbc.sp());
        EXPECT(0xcc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc36));
        EXPECT(0x85, gbc.readMem(0xcc37));
        // CB 85 0297
        gbc.setState(0xb78a, 0x5e50, 0x9ac0, 0xb6e3, 0xd55f, 0xcc4d, 0x1, 0x0);
        gbc.writeMem(0xb78a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5e50, gbc.sp());
        EXPECT(0xb78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78a));
        EXPECT(0x85, gbc.readMem(0xb78b));
        // CB 85 0298
        gbc.setState(0x7dec, 0xd725, 0x7ec0, 0xed67, 0x9e14, 0xc543, 0x0, 0x1);
        gbc.writeMem(0x7dec, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd725, gbc.sp());
        EXPECT(0x7dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0299
        gbc.setState(0xd36c, 0x3ebf, 0x650, 0x9c45, 0xb9a4, 0xbf60, 0x0, 0x1);
        gbc.writeMem(0xd36c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3ebf, gbc.sp());
        EXPECT(0xd36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36c));
        EXPECT(0x85, gbc.readMem(0xd36d));
        // CB 85 029A
        gbc.setState(0xef72, 0xe540, 0x1370, 0x5e07, 0x813e, 0x1794, 0x1, 0x1);
        gbc.writeMem(0xef72, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe540, gbc.sp());
        EXPECT(0xef74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef72));
        EXPECT(0x85, gbc.readMem(0xef73));
        // CB 85 029B
        gbc.setState(0x6f27, 0x17fc, 0x9fd0, 0x612c, 0xe8db, 0x2b86, 0x0, 0x0);
        gbc.writeMem(0x6f27, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x17fc, gbc.sp());
        EXPECT(0x6f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 029C
        gbc.setState(0x6935, 0x2d53, 0xa920, 0x7af0, 0x3758, 0x4112, 0x0, 0x1);
        gbc.writeMem(0x6935, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2d53, gbc.sp());
        EXPECT(0x6937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 029D
        gbc.setState(0x64de, 0x366c, 0x53c0, 0xebd6, 0x9b17, 0x5c75, 0x1, 0x0);
        gbc.writeMem(0x64de, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x366c, gbc.sp());
        EXPECT(0x64e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 029E
        gbc.setState(0x31ef, 0x91a3, 0xadf0, 0x91c8, 0xcf81, 0xc880, 0x1, 0x1);
        gbc.writeMem(0x31ef, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x91a3, gbc.sp());
        EXPECT(0x31f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 029F
        gbc.setState(0xdd1c, 0xd848, 0x8540, 0xe8b2, 0x39aa, 0xed17, 0x0, 0x1);
        gbc.writeMem(0xdd1c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd848, gbc.sp());
        EXPECT(0xdd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1c));
        EXPECT(0x85, gbc.readMem(0xdd1d));
        // CB 85 02A0
        gbc.setState(0x984e, 0xb686, 0x3260, 0xf278, 0x814, 0x1dd7, 0x1, 0x0);
        gbc.writeMem(0x984e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb686, gbc.sp());
        EXPECT(0x9850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984e));
        EXPECT(0x85, gbc.readMem(0x984f));
        // CB 85 02A1
        gbc.setState(0xaa85, 0xf5ff, 0xd820, 0xdb84, 0x3ef7, 0x3ccb, 0x0, 0x1);
        gbc.writeMem(0xaa85, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf5ff, gbc.sp());
        EXPECT(0xaa87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa85));
        EXPECT(0x85, gbc.readMem(0xaa86));
        // CB 85 02A2
        gbc.setState(0xe6b9, 0xd65b, 0x81e0, 0x790e, 0xe77b, 0x7612, 0x0, 0x1);
        gbc.writeMem(0xe6b9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd65b, gbc.sp());
        EXPECT(0xe6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b9));
        EXPECT(0x85, gbc.readMem(0xe6ba));
        // CB 85 02A3
        gbc.setState(0x9ab0, 0x5d2a, 0xe210, 0xae2e, 0xd0dc, 0x82e0, 0x0, 0x1);
        gbc.writeMem(0x9ab0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5d2a, gbc.sp());
        EXPECT(0x9ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab0));
        EXPECT(0x85, gbc.readMem(0x9ab1));
        // CB 85 02A4
        gbc.setState(0xa863, 0x39c5, 0x18a0, 0x39ff, 0x6960, 0x2ba0, 0x1, 0x0);
        gbc.writeMem(0xa863, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x39c5, gbc.sp());
        EXPECT(0xa865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa863));
        EXPECT(0x85, gbc.readMem(0xa864));
        // CB 85 02A5
        gbc.setState(0x39a0, 0x6132, 0x3140, 0x1fc6, 0xc969, 0x94d2, 0x1, 0x1);
        gbc.writeMem(0x39a0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6132, gbc.sp());
        EXPECT(0x39a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02A6
        gbc.setState(0xaa56, 0xb3fc, 0x54d0, 0x65e6, 0x3692, 0x86a6, 0x1, 0x0);
        gbc.writeMem(0xaa56, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb3fc, gbc.sp());
        EXPECT(0xaa58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa56));
        EXPECT(0x85, gbc.readMem(0xaa57));
        // CB 85 02A7
        gbc.setState(0x5d60, 0x2e4d, 0xaa80, 0x360a, 0x6797, 0xff3c, 0x0, 0x0);
        gbc.writeMem(0x5d60, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2e4d, gbc.sp());
        EXPECT(0x5d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02A8
        gbc.setState(0x9180, 0xe805, 0x8c40, 0x2587, 0x7981, 0xcfae, 0x0, 0x0);
        gbc.writeMem(0x9180, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe805, gbc.sp());
        EXPECT(0x9182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9180));
        EXPECT(0x85, gbc.readMem(0x9181));
        // CB 85 02A9
        gbc.setState(0xdea7, 0xd20c, 0x24f0, 0x33e8, 0x5f65, 0xb21a, 0x1, 0x0);
        gbc.writeMem(0xdea7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd20c, gbc.sp());
        EXPECT(0xdea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea7));
        EXPECT(0x85, gbc.readMem(0xdea8));
        // CB 85 02AA
        gbc.setState(0x14e0, 0x90a8, 0xd530, 0x6d8e, 0x6447, 0x1a02, 0x1, 0x1);
        gbc.writeMem(0x14e0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x90a8, gbc.sp());
        EXPECT(0x14e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02AB
        gbc.setState(0x6f47, 0x2d84, 0x3dd0, 0x8943, 0xd597, 0x2322, 0x1, 0x1);
        gbc.writeMem(0x6f47, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2d84, gbc.sp());
        EXPECT(0x6f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02AC
        gbc.setState(0xad0f, 0x26bd, 0x82d0, 0xd50c, 0x23d8, 0xfb67, 0x1, 0x1);
        gbc.writeMem(0xad0f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x26bd, gbc.sp());
        EXPECT(0xad11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0f));
        EXPECT(0x85, gbc.readMem(0xad10));
        // CB 85 02AD
        gbc.setState(0x7931, 0xf5c0, 0x9210, 0xbb49, 0x843a, 0xf25f, 0x0, 0x1);
        gbc.writeMem(0x7931, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf5c0, gbc.sp());
        EXPECT(0x7933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02AE
        gbc.setState(0x1548, 0xc85d, 0x1010, 0xdbcf, 0x1c44, 0x6f27, 0x0, 0x1);
        gbc.writeMem(0x1548, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc85d, gbc.sp());
        EXPECT(0x154a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02AF
        gbc.setState(0xe20e, 0x93d1, 0x73e0, 0x2df3, 0x1bc7, 0xf771, 0x1, 0x0);
        gbc.writeMem(0xe20e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x93d1, gbc.sp());
        EXPECT(0xe210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20e));
        EXPECT(0x85, gbc.readMem(0xe20f));
        // CB 85 02B0
        gbc.setState(0xd719, 0x7a3b, 0x8b90, 0x8749, 0xa1e1, 0x78eb, 0x1, 0x1);
        gbc.writeMem(0xd719, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7a3b, gbc.sp());
        EXPECT(0xd71b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd719));
        EXPECT(0x85, gbc.readMem(0xd71a));
        // CB 85 02B1
        gbc.setState(0xe721, 0xe29d, 0x16b0, 0x6f6c, 0x5ee3, 0xe9fb, 0x1, 0x0);
        gbc.writeMem(0xe721, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe29d, gbc.sp());
        EXPECT(0xe723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe721));
        EXPECT(0x85, gbc.readMem(0xe722));
        // CB 85 02B2
        gbc.setState(0xefd4, 0x511f, 0xfd80, 0xcbc2, 0xf5f2, 0x4df4, 0x0, 0x0);
        gbc.writeMem(0xefd4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x511f, gbc.sp());
        EXPECT(0xefd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd4));
        EXPECT(0x85, gbc.readMem(0xefd5));
        // CB 85 02B3
        gbc.setState(0xe414, 0xf0dd, 0x9700, 0x2517, 0xb9cc, 0xf2ba, 0x0, 0x0);
        gbc.writeMem(0xe414, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf0dd, gbc.sp());
        EXPECT(0xe416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe414));
        EXPECT(0x85, gbc.readMem(0xe415));
        // CB 85 02B4
        gbc.setState(0x7fd, 0x6cda, 0xf5f0, 0x39ec, 0x49cb, 0xcf75, 0x0, 0x0);
        gbc.writeMem(0x7fd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6cda, gbc.sp());
        EXPECT(0x7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02B5
        gbc.setState(0x4091, 0x405a, 0x6d80, 0xf446, 0xb66c, 0xd785, 0x1, 0x1);
        gbc.writeMem(0x4091, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x405a, gbc.sp());
        EXPECT(0x4093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02B6
        gbc.setState(0xe00e, 0x126f, 0x99a0, 0xf638, 0x655f, 0x6d3, 0x0, 0x1);
        gbc.writeMem(0xe00e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x126f, gbc.sp());
        EXPECT(0xe010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe00e));
        EXPECT(0x85, gbc.readMem(0xe00f));
        // CB 85 02B7
        gbc.setState(0xec94, 0xca81, 0xd2d0, 0x810, 0x2141, 0x93f5, 0x1, 0x0);
        gbc.writeMem(0xec94, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xca81, gbc.sp());
        EXPECT(0xec96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec94));
        EXPECT(0x85, gbc.readMem(0xec95));
        // CB 85 02B8
        gbc.setState(0x185a, 0x7085, 0x8310, 0x8ad, 0x1aa4, 0x8572, 0x0, 0x0);
        gbc.writeMem(0x185a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7085, gbc.sp());
        EXPECT(0x185c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02BA
        gbc.setState(0xa07b, 0xe373, 0x7070, 0xc90c, 0x6799, 0xe514, 0x1, 0x0);
        gbc.writeMem(0xa07b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe373, gbc.sp());
        EXPECT(0xa07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa07b));
        EXPECT(0x85, gbc.readMem(0xa07c));
        // CB 85 02BB
        gbc.setState(0x43cd, 0x955c, 0x65f0, 0x41db, 0x81f1, 0x469e, 0x1, 0x1);
        gbc.writeMem(0x43cd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x955c, gbc.sp());
        EXPECT(0x43cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02BC
        gbc.setState(0xea74, 0x5e45, 0x8010, 0xf065, 0x1e61, 0x9809, 0x0, 0x0);
        gbc.writeMem(0xea74, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5e45, gbc.sp());
        EXPECT(0xea76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea74));
        EXPECT(0x85, gbc.readMem(0xea75));
        // CB 85 02BD
        gbc.setState(0x7332, 0x6d48, 0xfaf0, 0x2daf, 0xacb4, 0x9353, 0x1, 0x1);
        gbc.writeMem(0x7332, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6d48, gbc.sp());
        EXPECT(0x7334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02BE
        gbc.setState(0x6373, 0xc1ce, 0x7010, 0xffd, 0xc43f, 0xc653, 0x0, 0x1);
        gbc.writeMem(0x6373, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc1ce, gbc.sp());
        EXPECT(0x6375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02BF
        gbc.setState(0xe04d, 0x6bf9, 0xeed0, 0xbbcc, 0x8989, 0x9c7e, 0x1, 0x1);
        gbc.writeMem(0xe04d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6bf9, gbc.sp());
        EXPECT(0xe04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04d));
        EXPECT(0x85, gbc.readMem(0xe04e));
        // CB 85 02C0
        gbc.setState(0xd277, 0x6390, 0x2d40, 0x6c83, 0xeafd, 0x64b9, 0x1, 0x0);
        gbc.writeMem(0xd277, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6390, gbc.sp());
        EXPECT(0xd279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd277));
        EXPECT(0x85, gbc.readMem(0xd278));
        // CB 85 02C1
        gbc.setState(0x5d1c, 0x8f14, 0xf920, 0x348, 0x983, 0x8062, 0x1, 0x0);
        gbc.writeMem(0x5d1c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8f14, gbc.sp());
        EXPECT(0x5d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02C2
        gbc.setState(0x4bc6, 0xec96, 0xcca0, 0x851e, 0xc599, 0x1bdc, 0x0, 0x0);
        gbc.writeMem(0x4bc6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xec96, gbc.sp());
        EXPECT(0x4bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02C3
        gbc.setState(0x2085, 0x4b6, 0xc990, 0xfdd5, 0xa855, 0x193c, 0x0, 0x0);
        gbc.writeMem(0x2085, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4b6, gbc.sp());
        EXPECT(0x2087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02C4
        gbc.setState(0x4d8, 0x503b, 0xdbc0, 0x95df, 0x67e4, 0xd5aa, 0x1, 0x0);
        gbc.writeMem(0x4d8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0x4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02C5
        gbc.setState(0x4bc5, 0x221f, 0x1cf0, 0xba2, 0x3bab, 0x8e4e, 0x0, 0x1);
        gbc.writeMem(0x4bc5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x221f, gbc.sp());
        EXPECT(0x4bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02C6
        gbc.setState(0x8f9f, 0xec8b, 0x3ed0, 0x90e6, 0x9aed, 0xbfc6, 0x1, 0x1);
        gbc.writeMem(0x8f9f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xec8b, gbc.sp());
        EXPECT(0x8fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f9f));
        EXPECT(0x85, gbc.readMem(0x8fa0));
        // CB 85 02C7
        gbc.setState(0xd42f, 0xd513, 0x2f10, 0xfa81, 0x2c71, 0xb33d, 0x0, 0x0);
        gbc.writeMem(0xd42f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd513, gbc.sp());
        EXPECT(0xd431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42f));
        EXPECT(0x85, gbc.readMem(0xd430));
        // CB 85 02C8
        gbc.setState(0x52cf, 0x38ad, 0x9740, 0x491f, 0x1064, 0x3763, 0x1, 0x0);
        gbc.writeMem(0x52cf, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x38ad, gbc.sp());
        EXPECT(0x52d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02C9
        gbc.setState(0x5cce, 0xf166, 0xcd30, 0x8880, 0x283a, 0x454, 0x1, 0x0);
        gbc.writeMem(0x5cce, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf166, gbc.sp());
        EXPECT(0x5cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02CA
        gbc.setState(0x2139, 0xb362, 0x7170, 0x7434, 0xf549, 0x6b50, 0x1, 0x0);
        gbc.writeMem(0x2139, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb362, gbc.sp());
        EXPECT(0x213b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02CB
        gbc.setState(0x6f2b, 0x2131, 0xba50, 0x6080, 0x9f71, 0xd487, 0x1, 0x0);
        gbc.writeMem(0x6f2b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2131, gbc.sp());
        EXPECT(0x6f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02CC
        gbc.setState(0xb572, 0xf1bb, 0xecf0, 0x6bb0, 0xac3f, 0x6cfc, 0x1, 0x1);
        gbc.writeMem(0xb572, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf1bb, gbc.sp());
        EXPECT(0xb574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb572));
        EXPECT(0x85, gbc.readMem(0xb573));
        // CB 85 02CD
        gbc.setState(0xee8, 0x9acb, 0x36c0, 0xfc40, 0x2424, 0xb42, 0x1, 0x0);
        gbc.writeMem(0xee8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9acb, gbc.sp());
        EXPECT(0xeea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02CE
        gbc.setState(0x73fe, 0x507b, 0xa620, 0x575e, 0xeaac, 0x7858, 0x0, 0x0);
        gbc.writeMem(0x73fe, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x507b, gbc.sp());
        EXPECT(0x7400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02CF
        gbc.setState(0xc593, 0x2cea, 0x1430, 0xde90, 0x7940, 0x91fb, 0x0, 0x1);
        gbc.writeMem(0xc593, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2cea, gbc.sp());
        EXPECT(0xc595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc593));
        EXPECT(0x85, gbc.readMem(0xc594));
        // CB 85 02D0
        gbc.setState(0x9cc1, 0xc7ce, 0xe990, 0x9c9e, 0xf28a, 0x65da, 0x1, 0x0);
        gbc.writeMem(0x9cc1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc7ce, gbc.sp());
        EXPECT(0x9cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc1));
        EXPECT(0x85, gbc.readMem(0x9cc2));
        // CB 85 02D1
        gbc.setState(0x8315, 0xd4ca, 0x96b0, 0xb63b, 0x286b, 0x43e1, 0x1, 0x0);
        gbc.writeMem(0x8315, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd4ca, gbc.sp());
        EXPECT(0x8317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8315));
        EXPECT(0x85, gbc.readMem(0x8316));
        // CB 85 02D2
        gbc.setState(0x3ac, 0xad5e, 0xe570, 0xce27, 0xd88b, 0xf7e9, 0x1, 0x0);
        gbc.writeMem(0x3ac, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xad5e, gbc.sp());
        EXPECT(0x3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02D3
        gbc.setState(0x9907, 0x2c5, 0x5510, 0x64e4, 0x94d8, 0xc388, 0x1, 0x1);
        gbc.writeMem(0x9907, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2c5, gbc.sp());
        EXPECT(0x9909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9907));
        EXPECT(0x85, gbc.readMem(0x9908));
        // CB 85 02D4
        gbc.setState(0x3ca6, 0x259d, 0xd850, 0x262, 0x553, 0x8f95, 0x0, 0x0);
        gbc.writeMem(0x3ca6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x259d, gbc.sp());
        EXPECT(0x3ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02D5
        gbc.setState(0x3ccd, 0xe27b, 0xf360, 0xd206, 0x42c4, 0xff74, 0x0, 0x1);
        gbc.writeMem(0x3ccd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe27b, gbc.sp());
        EXPECT(0x3ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02D6
        gbc.setState(0xea87, 0x3253, 0xd960, 0xfb67, 0xf035, 0x54ca, 0x1, 0x1);
        gbc.writeMem(0xea87, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3253, gbc.sp());
        EXPECT(0xea89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea87));
        EXPECT(0x85, gbc.readMem(0xea88));
        // CB 85 02D7
        gbc.setState(0xacae, 0xba90, 0x3020, 0x59ac, 0xe93c, 0x2aa4, 0x0, 0x1);
        gbc.writeMem(0xacae, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xba90, gbc.sp());
        EXPECT(0xacb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacae));
        EXPECT(0x85, gbc.readMem(0xacaf));
        // CB 85 02D8
        gbc.setState(0x937a, 0x95d4, 0x3cb0, 0xd142, 0xbee1, 0xbdb2, 0x1, 0x0);
        gbc.writeMem(0x937a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x95d4, gbc.sp());
        EXPECT(0x937c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937a));
        EXPECT(0x85, gbc.readMem(0x937b));
        // CB 85 02D9
        gbc.setState(0xbc9, 0xfbd1, 0x6550, 0xc0db, 0xe1a8, 0x784e, 0x1, 0x1);
        gbc.writeMem(0xbc9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfbd1, gbc.sp());
        EXPECT(0xbcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02DA
        gbc.setState(0x5388, 0x7b67, 0xd850, 0x6108, 0xfbc5, 0x3640, 0x1, 0x0);
        gbc.writeMem(0x5388, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7b67, gbc.sp());
        EXPECT(0x538a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02DB
        gbc.setState(0xe428, 0x6eac, 0xb8d0, 0x2cb8, 0x86d0, 0xc550, 0x0, 0x1);
        gbc.writeMem(0xe428, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6eac, gbc.sp());
        EXPECT(0xe42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe428));
        EXPECT(0x85, gbc.readMem(0xe429));
        // CB 85 02DC
        gbc.setState(0x9c09, 0x2f56, 0x90e0, 0x678a, 0xee9a, 0x182d, 0x1, 0x1);
        gbc.writeMem(0x9c09, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2f56, gbc.sp());
        EXPECT(0x9c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c09));
        EXPECT(0x85, gbc.readMem(0x9c0a));
        // CB 85 02DD
        gbc.setState(0x406c, 0x2c2d, 0xa6f0, 0x3b95, 0x44d2, 0xb1d3, 0x1, 0x1);
        gbc.writeMem(0x406c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2c2d, gbc.sp());
        EXPECT(0x406e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02DE
        gbc.setState(0xdc7f, 0xb3b2, 0x93f0, 0xe9e6, 0xc28, 0xd129, 0x0, 0x1);
        gbc.writeMem(0xdc7f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb3b2, gbc.sp());
        EXPECT(0xdc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7f));
        EXPECT(0x85, gbc.readMem(0xdc80));
        // CB 85 02DF
        gbc.setState(0x6689, 0x676c, 0x58b0, 0x66ab, 0x8016, 0x6e19, 0x0, 0x1);
        gbc.writeMem(0x6689, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x676c, gbc.sp());
        EXPECT(0x668b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02E0
        gbc.setState(0x96ba, 0x9870, 0x90c0, 0x841b, 0x6f4a, 0x7313, 0x0, 0x1);
        gbc.writeMem(0x96ba, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9870, gbc.sp());
        EXPECT(0x96bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ba));
        EXPECT(0x85, gbc.readMem(0x96bb));
        // CB 85 02E1
        gbc.setState(0xd6d8, 0x9a88, 0x3ae0, 0x960c, 0x78e1, 0x12ce, 0x1, 0x1);
        gbc.writeMem(0xd6d8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9a88, gbc.sp());
        EXPECT(0xd6da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d8));
        EXPECT(0x85, gbc.readMem(0xd6d9));
        // CB 85 02E3
        gbc.setState(0x551a, 0xb1ca, 0x7d70, 0x15be, 0x47b0, 0xb9b9, 0x0, 0x1);
        gbc.writeMem(0x551a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb1ca, gbc.sp());
        EXPECT(0x551c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02E4
        gbc.setState(0x6f0a, 0xd579, 0xddb0, 0xd1b8, 0x683, 0x48a8, 0x1, 0x1);
        gbc.writeMem(0x6f0a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd579, gbc.sp());
        EXPECT(0x6f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02E5
        gbc.setState(0x1f4a, 0x69ce, 0xbe90, 0xb13f, 0x4b8f, 0x9a8d, 0x0, 0x0);
        gbc.writeMem(0x1f4a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x69ce, gbc.sp());
        EXPECT(0x1f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02E6
        gbc.setState(0x85f3, 0x7538, 0xd170, 0xa962, 0x6238, 0x7903, 0x1, 0x0);
        gbc.writeMem(0x85f3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7538, gbc.sp());
        EXPECT(0x85f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f3));
        EXPECT(0x85, gbc.readMem(0x85f4));
        // CB 85 02E7
        gbc.setState(0x198e, 0xc43, 0xe8e0, 0x4c75, 0xcf86, 0x88b8, 0x0, 0x1);
        gbc.writeMem(0x198e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc43, gbc.sp());
        EXPECT(0x1990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02E8
        gbc.setState(0xbd12, 0xe6fe, 0x28f0, 0x8a88, 0x5e57, 0x4834, 0x1, 0x1);
        gbc.writeMem(0xbd12, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe6fe, gbc.sp());
        EXPECT(0xbd14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd12));
        EXPECT(0x85, gbc.readMem(0xbd13));
        // CB 85 02E9
        gbc.setState(0xcd14, 0x27fb, 0xc230, 0x5592, 0x3c4c, 0xfad9, 0x0, 0x1);
        gbc.writeMem(0xcd14, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x27fb, gbc.sp());
        EXPECT(0xcd16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd14));
        EXPECT(0x85, gbc.readMem(0xcd15));
        // CB 85 02EA
        gbc.setState(0x315f, 0xf85, 0xccc0, 0xabc4, 0x501e, 0x6b3c, 0x0, 0x1);
        gbc.writeMem(0x315f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf85, gbc.sp());
        EXPECT(0x3161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02EB
        gbc.setState(0x50d2, 0x83ae, 0xfa20, 0x1209, 0x7500, 0xe97e, 0x1, 0x0);
        gbc.writeMem(0x50d2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x83ae, gbc.sp());
        EXPECT(0x50d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02EC
        gbc.setState(0x94c1, 0x59df, 0x8750, 0x563f, 0x360e, 0x3cb, 0x0, 0x0);
        gbc.writeMem(0x94c1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x59df, gbc.sp());
        EXPECT(0x94c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c1));
        EXPECT(0x85, gbc.readMem(0x94c2));
        // CB 85 02EE
        gbc.setState(0xca4b, 0xee9d, 0xd6f0, 0x4d74, 0x29d0, 0x6f99, 0x1, 0x0);
        gbc.writeMem(0xca4b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xee9d, gbc.sp());
        EXPECT(0xca4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4b));
        EXPECT(0x85, gbc.readMem(0xca4c));
        // CB 85 02EF
        gbc.setState(0x57a8, 0x730b, 0xdb00, 0x8d5d, 0xf813, 0xc9ca, 0x0, 0x1);
        gbc.writeMem(0x57a8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x730b, gbc.sp());
        EXPECT(0x57aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02F0
        gbc.setState(0x8f5d, 0xb5b9, 0x8b00, 0xc7ce, 0xe1e2, 0x1686, 0x0, 0x0);
        gbc.writeMem(0x8f5d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb5b9, gbc.sp());
        EXPECT(0x8f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5d));
        EXPECT(0x85, gbc.readMem(0x8f5e));
        // CB 85 02F1
        gbc.setState(0x8571, 0x5122, 0x40, 0xc11a, 0x6ce1, 0x11c9, 0x0, 0x0);
        gbc.writeMem(0x8571, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5122, gbc.sp());
        EXPECT(0x8573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8571));
        EXPECT(0x85, gbc.readMem(0x8572));
        // CB 85 02F2
        gbc.setState(0xe6ce, 0xe50f, 0x2f90, 0x850f, 0x233d, 0xaf24, 0x0, 0x0);
        gbc.writeMem(0xe6ce, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe50f, gbc.sp());
        EXPECT(0xe6d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ce));
        EXPECT(0x85, gbc.readMem(0xe6cf));
        // CB 85 02F3
        gbc.setState(0xc8e7, 0x925c, 0xb3c0, 0x13a, 0x1f79, 0x388e, 0x1, 0x0);
        gbc.writeMem(0xc8e7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x925c, gbc.sp());
        EXPECT(0xc8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e7));
        EXPECT(0x85, gbc.readMem(0xc8e8));
        // CB 85 02F4
        gbc.setState(0x52f0, 0x5eff, 0xbd50, 0x77d7, 0x1403, 0xa480, 0x1, 0x1);
        gbc.writeMem(0x52f0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5eff, gbc.sp());
        EXPECT(0x52f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02F5
        gbc.setState(0xa08c, 0x6341, 0x5040, 0x6446, 0x61bb, 0x210c, 0x1, 0x0);
        gbc.writeMem(0xa08c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6341, gbc.sp());
        EXPECT(0xa08e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa08c));
        EXPECT(0x85, gbc.readMem(0xa08d));
        // CB 85 02F6
        gbc.setState(0x3044, 0xcc9b, 0x1360, 0x5742, 0xab45, 0x1f82, 0x1, 0x1);
        gbc.writeMem(0x3044, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcc9b, gbc.sp());
        EXPECT(0x3046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02F7
        gbc.setState(0xa68b, 0xf659, 0x22e0, 0xbc10, 0x64d1, 0x488d, 0x0, 0x1);
        gbc.writeMem(0xa68b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf659, gbc.sp());
        EXPECT(0xa68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68b));
        EXPECT(0x85, gbc.readMem(0xa68c));
        // CB 85 02F8
        gbc.setState(0x5f42, 0xdae6, 0xbd00, 0x6a5b, 0x92, 0xf836, 0x0, 0x0);
        gbc.writeMem(0x5f42, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdae6, gbc.sp());
        EXPECT(0x5f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02F9
        gbc.setState(0x4d77, 0x8269, 0x3eb0, 0xd089, 0xb0e, 0xf812, 0x1, 0x0);
        gbc.writeMem(0x4d77, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8269, gbc.sp());
        EXPECT(0x4d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 02FA
        gbc.setState(0x89a3, 0x2f81, 0xff70, 0x6b27, 0x1ad5, 0x303e, 0x0, 0x1);
        gbc.writeMem(0x89a3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0x89a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a3));
        EXPECT(0x85, gbc.readMem(0x89a4));
        // CB 85 02FB
        gbc.setState(0xe869, 0x6f50, 0xeab0, 0x3ab1, 0xac3, 0xb699, 0x0, 0x1);
        gbc.writeMem(0xe869, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6f50, gbc.sp());
        EXPECT(0xe86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe869));
        EXPECT(0x85, gbc.readMem(0xe86a));
        // CB 85 02FC
        gbc.setState(0x6333, 0xea63, 0x9780, 0xafde, 0x970d, 0x12db, 0x1, 0x0);
        gbc.writeMem(0x6333, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xea63, gbc.sp());
        EXPECT(0x6335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 02FD
        gbc.setState(0xe600, 0xacda, 0xd520, 0xd8df, 0x31a7, 0x263, 0x0, 0x1);
        gbc.writeMem(0xe600, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xacda, gbc.sp());
        EXPECT(0xe602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe600));
        EXPECT(0x85, gbc.readMem(0xe601));
        // CB 85 02FE
        gbc.setState(0xa30b, 0xba0, 0x8900, 0xd98b, 0x3a03, 0x3eff, 0x1, 0x1);
        gbc.writeMem(0xa30b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xba0, gbc.sp());
        EXPECT(0xa30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30b));
        EXPECT(0x85, gbc.readMem(0xa30c));
        // CB 85 02FF
        gbc.setState(0xbfc, 0xa243, 0xe5e0, 0x8a3f, 0x7578, 0xae72, 0x0, 0x0);
        gbc.writeMem(0xbfc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa243, gbc.sp());
        EXPECT(0xbfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0300
        gbc.setState(0x225b, 0xaea6, 0x4e40, 0x8b2, 0xde3a, 0xf4e2, 0x0, 0x0);
        gbc.writeMem(0x225b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xaea6, gbc.sp());
        EXPECT(0x225d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0301
        gbc.setState(0xadef, 0xc55, 0x2170, 0x9d82, 0x2fd3, 0x2fef, 0x1, 0x0);
        gbc.writeMem(0xadef, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc55, gbc.sp());
        EXPECT(0xadf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadef));
        EXPECT(0x85, gbc.readMem(0xadf0));
        // CB 85 0302
        gbc.setState(0x2db4, 0xf7b9, 0xd880, 0xf51f, 0xa322, 0x16be, 0x0, 0x0);
        gbc.writeMem(0x2db4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf7b9, gbc.sp());
        EXPECT(0x2db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0303
        gbc.setState(0x4bd3, 0xff0, 0xff60, 0x134a, 0x2831, 0xad41, 0x0, 0x1);
        gbc.writeMem(0x4bd3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xff0, gbc.sp());
        EXPECT(0x4bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0305
        gbc.setState(0x86ea, 0xdd4f, 0xaf00, 0x591c, 0x8935, 0x9930, 0x1, 0x0);
        gbc.writeMem(0x86ea, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdd4f, gbc.sp());
        EXPECT(0x86ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ea));
        EXPECT(0x85, gbc.readMem(0x86eb));
        // CB 85 0306
        gbc.setState(0x21dd, 0x4ec, 0xa310, 0xa585, 0x7357, 0x8cd9, 0x0, 0x0);
        gbc.writeMem(0x21dd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4ec, gbc.sp());
        EXPECT(0x21df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0307
        gbc.setState(0x43c7, 0x8d74, 0xeae0, 0x6a63, 0xed9f, 0x158a, 0x1, 0x0);
        gbc.writeMem(0x43c7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8d74, gbc.sp());
        EXPECT(0x43c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0309
        gbc.setState(0x19e7, 0xb178, 0x24a0, 0x62e7, 0x8802, 0xbb47, 0x0, 0x1);
        gbc.writeMem(0x19e7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb178, gbc.sp());
        EXPECT(0x19e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 030A
        gbc.setState(0xabab, 0x2592, 0x2060, 0xc55a, 0xbfb6, 0xd361, 0x0, 0x1);
        gbc.writeMem(0xabab, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2592, gbc.sp());
        EXPECT(0xabad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabab));
        EXPECT(0x85, gbc.readMem(0xabac));
        // CB 85 030B
        gbc.setState(0x3df5, 0x4203, 0xe710, 0x6a4e, 0xa723, 0xe21f, 0x1, 0x0);
        gbc.writeMem(0x3df5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4203, gbc.sp());
        EXPECT(0x3df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 030C
        gbc.setState(0xcdd6, 0x8e3b, 0xf570, 0x7508, 0xcd6b, 0x8197, 0x0, 0x0);
        gbc.writeMem(0xcdd6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8e3b, gbc.sp());
        EXPECT(0xcdd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd6));
        EXPECT(0x85, gbc.readMem(0xcdd7));
        // CB 85 030D
        gbc.setState(0x99b9, 0x523d, 0xb980, 0x2008, 0xd260, 0x8a2b, 0x0, 0x0);
        gbc.writeMem(0x99b9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x523d, gbc.sp());
        EXPECT(0x99bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b9));
        EXPECT(0x85, gbc.readMem(0x99ba));
        // CB 85 030E
        gbc.setState(0xb87e, 0xd5aa, 0x59c0, 0x7cf4, 0x941b, 0x1967, 0x1, 0x0);
        gbc.writeMem(0xb87e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd5aa, gbc.sp());
        EXPECT(0xb880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb87e));
        EXPECT(0x85, gbc.readMem(0xb87f));
        // CB 85 030F
        gbc.setState(0x9e5f, 0x5362, 0x2c90, 0x768e, 0xdd1e, 0x771f, 0x1, 0x0);
        gbc.writeMem(0x9e5f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5362, gbc.sp());
        EXPECT(0x9e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e5f));
        EXPECT(0x85, gbc.readMem(0x9e60));
        // CB 85 0310
        gbc.setState(0x294b, 0xcd64, 0x9480, 0x8d97, 0xca80, 0x310a, 0x1, 0x1);
        gbc.writeMem(0x294b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcd64, gbc.sp());
        EXPECT(0x294d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0311
        gbc.setState(0x7878, 0x36b3, 0x4c30, 0x787b, 0x7211, 0x8e36, 0x1, 0x0);
        gbc.writeMem(0x7878, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x36b3, gbc.sp());
        EXPECT(0x787a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0312
        gbc.setState(0x3b96, 0x8ec4, 0x3000, 0xfb6f, 0xdf7a, 0x439f, 0x1, 0x0);
        gbc.writeMem(0x3b96, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8ec4, gbc.sp());
        EXPECT(0x3b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0313
        gbc.setState(0xa085, 0xd56c, 0xe7e0, 0x53fe, 0x7bdc, 0xd93d, 0x0, 0x0);
        gbc.writeMem(0xa085, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd56c, gbc.sp());
        EXPECT(0xa087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa085));
        EXPECT(0x85, gbc.readMem(0xa086));
        // CB 85 0314
        gbc.setState(0x7da5, 0x238c, 0x8430, 0xd62e, 0x276, 0x28c3, 0x0, 0x1);
        gbc.writeMem(0x7da5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x238c, gbc.sp());
        EXPECT(0x7da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0315
        gbc.setState(0x188, 0xfcf1, 0xf460, 0xb57c, 0x9369, 0x94ef, 0x1, 0x1);
        gbc.writeMem(0x188, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfcf1, gbc.sp());
        EXPECT(0x18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0316
        gbc.setState(0x6cad, 0x4b7c, 0x1530, 0x7ae4, 0x4925, 0xde82, 0x0, 0x1);
        gbc.writeMem(0x6cad, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4b7c, gbc.sp());
        EXPECT(0x6caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0317
        gbc.setState(0x561a, 0x83b0, 0x8800, 0x8605, 0x6f, 0x835d, 0x1, 0x1);
        gbc.writeMem(0x561a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x83b0, gbc.sp());
        EXPECT(0x561c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0318
        gbc.setState(0xc180, 0x2f2a, 0x31b0, 0x9b97, 0x5fef, 0x4198, 0x0, 0x0);
        gbc.writeMem(0xc180, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2f2a, gbc.sp());
        EXPECT(0xc182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc180));
        EXPECT(0x85, gbc.readMem(0xc181));
        // CB 85 0319
        gbc.setState(0x5342, 0x5b04, 0x63c0, 0x25ee, 0x775f, 0x9adc, 0x0, 0x0);
        gbc.writeMem(0x5342, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5b04, gbc.sp());
        EXPECT(0x5344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 031A
        gbc.setState(0x9b99, 0x15f, 0x4e20, 0xa9e4, 0xa1fb, 0xb0d5, 0x0, 0x0);
        gbc.writeMem(0x9b99, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x15f, gbc.sp());
        EXPECT(0x9b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b99));
        EXPECT(0x85, gbc.readMem(0x9b9a));
        // CB 85 031B
        gbc.setState(0x2011, 0x6f14, 0x2b30, 0x43ba, 0x2b8c, 0x2fa6, 0x1, 0x0);
        gbc.writeMem(0x2011, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6f14, gbc.sp());
        EXPECT(0x2013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 031D
        gbc.setState(0x912d, 0x9425, 0xcfa0, 0x381d, 0xf8a2, 0xfe18, 0x1, 0x1);
        gbc.writeMem(0x912d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9425, gbc.sp());
        EXPECT(0x912f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x912d));
        EXPECT(0x85, gbc.readMem(0x912e));
        // CB 85 031E
        gbc.setState(0x1cd6, 0x7ac, 0x9a60, 0x40a3, 0xc246, 0xb864, 0x0, 0x0);
        gbc.writeMem(0x1cd6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7ac, gbc.sp());
        EXPECT(0x1cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 031F
        gbc.setState(0x5064, 0x488d, 0x8c00, 0xbac8, 0x37c4, 0x3cc8, 0x0, 0x0);
        gbc.writeMem(0x5064, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x488d, gbc.sp());
        EXPECT(0x5066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0321
        gbc.setState(0x1f3f, 0x69a4, 0x85b0, 0xcb99, 0xfa4, 0xeff3, 0x1, 0x0);
        gbc.writeMem(0x1f3f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x69a4, gbc.sp());
        EXPECT(0x1f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0322
        gbc.setState(0x6a06, 0x6690, 0xc600, 0xa0a0, 0xbe23, 0x4b2, 0x0, 0x1);
        gbc.writeMem(0x6a06, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6690, gbc.sp());
        EXPECT(0x6a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0323
        gbc.setState(0x8941, 0x38af, 0xa90, 0x6613, 0x7661, 0xaee6, 0x0, 0x1);
        gbc.writeMem(0x8941, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x38af, gbc.sp());
        EXPECT(0x8943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8941));
        EXPECT(0x85, gbc.readMem(0x8942));
        // CB 85 0324
        gbc.setState(0xa5ff, 0xcca2, 0x300, 0x1a33, 0x7bd0, 0x7184, 0x1, 0x1);
        gbc.writeMem(0xa5ff, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcca2, gbc.sp());
        EXPECT(0xa601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ff));
        EXPECT(0x85, gbc.readMem(0xa600));
        // CB 85 0325
        gbc.setState(0x26ad, 0xfcf0, 0xc810, 0x808c, 0xc4c5, 0xc85c, 0x0, 0x1);
        gbc.writeMem(0x26ad, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfcf0, gbc.sp());
        EXPECT(0x26af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0326
        gbc.setState(0x9a82, 0x11f6, 0x2d50, 0x8ad9, 0x5077, 0xa46c, 0x1, 0x0);
        gbc.writeMem(0x9a82, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x11f6, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a82));
        EXPECT(0x85, gbc.readMem(0x9a83));
        // CB 85 0327
        gbc.setState(0x6e1, 0xacae, 0x7190, 0x1e3a, 0xfd27, 0xd842, 0x1, 0x0);
        gbc.writeMem(0x6e1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xacae, gbc.sp());
        EXPECT(0x6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0328
        gbc.setState(0xbeda, 0xd102, 0xdaa0, 0xbbdc, 0x6759, 0x6645, 0x1, 0x0);
        gbc.writeMem(0xbeda, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd102, gbc.sp());
        EXPECT(0xbedc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeda));
        EXPECT(0x85, gbc.readMem(0xbedb));
        // CB 85 0329
        gbc.setState(0x3155, 0x1e80, 0xf520, 0xbb93, 0x7e0f, 0xdce4, 0x1, 0x0);
        gbc.writeMem(0x3155, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1e80, gbc.sp());
        EXPECT(0x3157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 032A
        gbc.setState(0x1528, 0x4576, 0x51d0, 0xde15, 0xb371, 0x82da, 0x0, 0x1);
        gbc.writeMem(0x1528, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4576, gbc.sp());
        EXPECT(0x152a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 032B
        gbc.setState(0x4a9b, 0x8a3a, 0xd500, 0xfdc8, 0x30a9, 0xa374, 0x1, 0x1);
        gbc.writeMem(0x4a9b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8a3a, gbc.sp());
        EXPECT(0x4a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 032C
        gbc.setState(0x548, 0x42b9, 0x5330, 0x79bc, 0x353f, 0x370a, 0x1, 0x1);
        gbc.writeMem(0x548, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x42b9, gbc.sp());
        EXPECT(0x54a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 032D
        gbc.setState(0x2615, 0x5513, 0x42b0, 0xcce5, 0x82f9, 0x4e31, 0x0, 0x1);
        gbc.writeMem(0x2615, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5513, gbc.sp());
        EXPECT(0x2617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 032E
        gbc.setState(0x20da, 0x7ac7, 0xe890, 0x7079, 0xac83, 0xeefe, 0x0, 0x0);
        gbc.writeMem(0x20da, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7ac7, gbc.sp());
        EXPECT(0x20dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 032F
        gbc.setState(0xe5b8, 0x8c96, 0x9ff0, 0x3fcb, 0xeb0e, 0x3ace, 0x1, 0x0);
        gbc.writeMem(0xe5b8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8c96, gbc.sp());
        EXPECT(0xe5ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b8));
        EXPECT(0x85, gbc.readMem(0xe5b9));
        // CB 85 0330
        gbc.setState(0xe823, 0x967a, 0x6160, 0x90d, 0x3a68, 0xeb30, 0x1, 0x0);
        gbc.writeMem(0xe823, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x967a, gbc.sp());
        EXPECT(0xe825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe823));
        EXPECT(0x85, gbc.readMem(0xe824));
        // CB 85 0331
        gbc.setState(0xe49c, 0x54c0, 0x34a0, 0xf865, 0x4818, 0xd326, 0x0, 0x1);
        gbc.writeMem(0xe49c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x54c0, gbc.sp());
        EXPECT(0xe49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49c));
        EXPECT(0x85, gbc.readMem(0xe49d));
        // CB 85 0332
        gbc.setState(0x3f3b, 0x7de8, 0x60, 0xdc64, 0x3453, 0xb72c, 0x1, 0x0);
        gbc.writeMem(0x3f3b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7de8, gbc.sp());
        EXPECT(0x3f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0333
        gbc.setState(0x8c87, 0x6627, 0x7160, 0x8087, 0xdaf5, 0x4e13, 0x1, 0x1);
        gbc.writeMem(0x8c87, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6627, gbc.sp());
        EXPECT(0x8c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c87));
        EXPECT(0x85, gbc.readMem(0x8c88));
        // CB 85 0334
        gbc.setState(0x4408, 0xcb01, 0x80c0, 0x931b, 0x6f9d, 0x6007, 0x0, 0x1);
        gbc.writeMem(0x4408, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcb01, gbc.sp());
        EXPECT(0x440a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0335
        gbc.setState(0x5051, 0x7df9, 0x76d0, 0x878, 0x568d, 0xb9e7, 0x1, 0x0);
        gbc.writeMem(0x5051, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7df9, gbc.sp());
        EXPECT(0x5053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0336
        gbc.setState(0x7bb6, 0xa890, 0x9ca0, 0xeb80, 0x311b, 0xf9ae, 0x0, 0x1);
        gbc.writeMem(0x7bb6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa890, gbc.sp());
        EXPECT(0x7bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0337
        gbc.setState(0x3a71, 0xec6b, 0x4b00, 0x4abd, 0xa8cd, 0xff34, 0x1, 0x0);
        gbc.writeMem(0x3a71, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xec6b, gbc.sp());
        EXPECT(0x3a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0338
        gbc.setState(0x9b35, 0x3c73, 0xaf60, 0x8639, 0x3e51, 0x1dee, 0x1, 0x0);
        gbc.writeMem(0x9b35, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3c73, gbc.sp());
        EXPECT(0x9b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b35));
        EXPECT(0x85, gbc.readMem(0x9b36));
        // CB 85 0339
        gbc.setState(0x8a25, 0xfd78, 0x7eb0, 0x8f20, 0xfdf0, 0x364a, 0x1, 0x0);
        gbc.writeMem(0x8a25, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfd78, gbc.sp());
        EXPECT(0x8a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a25));
        EXPECT(0x85, gbc.readMem(0x8a26));
        // CB 85 033A
        gbc.setState(0x13b8, 0x23de, 0x2030, 0xb92a, 0x1e9a, 0x9f04, 0x1, 0x0);
        gbc.writeMem(0x13b8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x23de, gbc.sp());
        EXPECT(0x13ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 033B
        gbc.setState(0x244e, 0xcdeb, 0xf8d0, 0x3db4, 0xe293, 0x3666, 0x1, 0x0);
        gbc.writeMem(0x244e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcdeb, gbc.sp());
        EXPECT(0x2450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 033C
        gbc.setState(0x77f1, 0xaf08, 0xc880, 0x996a, 0xe183, 0x401, 0x1, 0x1);
        gbc.writeMem(0x77f1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaf08, gbc.sp());
        EXPECT(0x77f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 033D
        gbc.setState(0x5925, 0xa57f, 0x6440, 0x4b9b, 0x3956, 0x7df5, 0x0, 0x1);
        gbc.writeMem(0x5925, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa57f, gbc.sp());
        EXPECT(0x5927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 033F
        gbc.setState(0x29c2, 0x3803, 0x9220, 0x79b9, 0x113, 0x7e01, 0x1, 0x1);
        gbc.writeMem(0x29c2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3803, gbc.sp());
        EXPECT(0x29c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0340
        gbc.setState(0xdbcc, 0xc1d4, 0xed60, 0xc165, 0x4b52, 0x548f, 0x1, 0x1);
        gbc.writeMem(0xdbcc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc1d4, gbc.sp());
        EXPECT(0xdbce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbcc));
        EXPECT(0x85, gbc.readMem(0xdbcd));
        // CB 85 0341
        gbc.setState(0x628a, 0x3bba, 0x66f0, 0x992a, 0xc4c2, 0xfbb9, 0x1, 0x1);
        gbc.writeMem(0x628a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3bba, gbc.sp());
        EXPECT(0x628c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0342
        gbc.setState(0x34ca, 0xf589, 0x9420, 0x8c18, 0xfc2b, 0xd686, 0x0, 0x1);
        gbc.writeMem(0x34ca, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf589, gbc.sp());
        EXPECT(0x34cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0343
        gbc.setState(0x4ae9, 0x511d, 0x9f80, 0x658e, 0x17a8, 0x1c14, 0x0, 0x1);
        gbc.writeMem(0x4ae9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x511d, gbc.sp());
        EXPECT(0x4aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0344
        gbc.setState(0xad76, 0x59fe, 0xf280, 0x16f3, 0xc577, 0x55d5, 0x1, 0x1);
        gbc.writeMem(0xad76, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x59fe, gbc.sp());
        EXPECT(0xad78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad76));
        EXPECT(0x85, gbc.readMem(0xad77));
        // CB 85 0345
        gbc.setState(0x90db, 0xa86d, 0xe100, 0x361e, 0x679a, 0x918a, 0x1, 0x0);
        gbc.writeMem(0x90db, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa86d, gbc.sp());
        EXPECT(0x90dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90db));
        EXPECT(0x85, gbc.readMem(0x90dc));
        // CB 85 0346
        gbc.setState(0x1308, 0x4a35, 0x2190, 0x9ffd, 0x5061, 0xc429, 0x1, 0x1);
        gbc.writeMem(0x1308, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4a35, gbc.sp());
        EXPECT(0x130a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0347
        gbc.setState(0xe402, 0x45ba, 0x7950, 0x8576, 0x331f, 0x29a1, 0x1, 0x0);
        gbc.writeMem(0xe402, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x45ba, gbc.sp());
        EXPECT(0xe404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe402));
        EXPECT(0x85, gbc.readMem(0xe403));
        // CB 85 0348
        gbc.setState(0x6dcc, 0x729a, 0x5600, 0x9e14, 0x9f0b, 0x64a1, 0x1, 0x0);
        gbc.writeMem(0x6dcc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x729a, gbc.sp());
        EXPECT(0x6dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0349
        gbc.setState(0xecf7, 0x9ee0, 0xca00, 0x137d, 0xc626, 0x6cf3, 0x1, 0x1);
        gbc.writeMem(0xecf7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9ee0, gbc.sp());
        EXPECT(0xecf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf7));
        EXPECT(0x85, gbc.readMem(0xecf8));
        // CB 85 034A
        gbc.setState(0xd8d5, 0x4400, 0xf740, 0x3efc, 0xe191, 0xb473, 0x0, 0x1);
        gbc.writeMem(0xd8d5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4400, gbc.sp());
        EXPECT(0xd8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d5));
        EXPECT(0x85, gbc.readMem(0xd8d6));
        // CB 85 034C
        gbc.setState(0x1191, 0x9653, 0x8d80, 0x2cd5, 0x30b0, 0x8dd6, 0x1, 0x1);
        gbc.writeMem(0x1191, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9653, gbc.sp());
        EXPECT(0x1193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 034D
        gbc.setState(0x206d, 0x394a, 0xd960, 0xd017, 0xf2e9, 0xfa9c, 0x0, 0x1);
        gbc.writeMem(0x206d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x394a, gbc.sp());
        EXPECT(0x206f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 034E
        gbc.setState(0x7b0, 0x53ef, 0xa2e0, 0x7ed3, 0xaa5c, 0xcca8, 0x0, 0x1);
        gbc.writeMem(0x7b0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x53ef, gbc.sp());
        EXPECT(0x7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 034F
        gbc.setState(0x5eff, 0xf2e5, 0x6f30, 0x4b74, 0x83de, 0x2309, 0x1, 0x1);
        gbc.writeMem(0x5eff, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf2e5, gbc.sp());
        EXPECT(0x5f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0350
        gbc.setState(0x150, 0x2be, 0xa3f0, 0x221a, 0x2da1, 0x6e97, 0x1, 0x0);
        gbc.writeMem(0x150, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2be, gbc.sp());
        EXPECT(0x152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0351
        gbc.setState(0x6005, 0x43cd, 0x8770, 0x2a2f, 0x62b9, 0x634d, 0x1, 0x0);
        gbc.writeMem(0x6005, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x43cd, gbc.sp());
        EXPECT(0x6007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0352
        gbc.setState(0x551b, 0xf658, 0x15b0, 0xf5a9, 0x9768, 0x1ac9, 0x0, 0x1);
        gbc.writeMem(0x551b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf658, gbc.sp());
        EXPECT(0x551d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0353
        gbc.setState(0xa372, 0xcd7f, 0xeb60, 0x556f, 0x2a69, 0x2231, 0x1, 0x1);
        gbc.writeMem(0xa372, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcd7f, gbc.sp());
        EXPECT(0xa374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa372));
        EXPECT(0x85, gbc.readMem(0xa373));
        // CB 85 0354
        gbc.setState(0x3969, 0x95b7, 0x1a30, 0x8f4, 0x4aa5, 0xd003, 0x0, 0x1);
        gbc.writeMem(0x3969, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x95b7, gbc.sp());
        EXPECT(0x396b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0355
        gbc.setState(0x9ab6, 0x7305, 0x4db0, 0xfe19, 0x33bc, 0xc5d6, 0x1, 0x0);
        gbc.writeMem(0x9ab6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7305, gbc.sp());
        EXPECT(0x9ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab6));
        EXPECT(0x85, gbc.readMem(0x9ab7));
        // CB 85 0356
        gbc.setState(0xdde8, 0x59dd, 0x6330, 0x36cf, 0x31b9, 0xaa2e, 0x0, 0x0);
        gbc.writeMem(0xdde8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x59dd, gbc.sp());
        EXPECT(0xddea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde8));
        EXPECT(0x85, gbc.readMem(0xdde9));
        // CB 85 0357
        gbc.setState(0xd64a, 0x506c, 0xa520, 0x1925, 0x9dc5, 0xf28f, 0x1, 0x1);
        gbc.writeMem(0xd64a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x506c, gbc.sp());
        EXPECT(0xd64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd64a));
        EXPECT(0x85, gbc.readMem(0xd64b));
        // CB 85 0358
        gbc.setState(0x72ff, 0x46ca, 0xc840, 0xf022, 0xb461, 0xfba6, 0x0, 0x1);
        gbc.writeMem(0x72ff, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x46ca, gbc.sp());
        EXPECT(0x7301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0359
        gbc.setState(0xa375, 0x5514, 0xbaf0, 0x4f35, 0x744d, 0x53a4, 0x1, 0x1);
        gbc.writeMem(0xa375, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5514, gbc.sp());
        EXPECT(0xa377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa375));
        EXPECT(0x85, gbc.readMem(0xa376));
        // CB 85 035A
        gbc.setState(0x2988, 0xcca6, 0x25f0, 0x239b, 0x590d, 0xb8a3, 0x0, 0x1);
        gbc.writeMem(0x2988, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcca6, gbc.sp());
        EXPECT(0x298a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 035B
        gbc.setState(0xe7c9, 0xf8ca, 0xaa50, 0x31e3, 0x89c, 0x2a09, 0x0, 0x0);
        gbc.writeMem(0xe7c9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf8ca, gbc.sp());
        EXPECT(0xe7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c9));
        EXPECT(0x85, gbc.readMem(0xe7ca));
        // CB 85 035C
        gbc.setState(0xee1f, 0x1a5, 0x7ec0, 0xd6be, 0xab0f, 0x9e8e, 0x0, 0x0);
        gbc.writeMem(0xee1f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1a5, gbc.sp());
        EXPECT(0xee21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1f));
        EXPECT(0x85, gbc.readMem(0xee20));
        // CB 85 035D
        gbc.setState(0xc141, 0xd5a2, 0x64d0, 0x598a, 0x6bff, 0xba5, 0x1, 0x0);
        gbc.writeMem(0xc141, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd5a2, gbc.sp());
        EXPECT(0xc143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc141));
        EXPECT(0x85, gbc.readMem(0xc142));
        // CB 85 035E
        gbc.setState(0x6acf, 0x59e1, 0x1d80, 0x95b0, 0xf6c5, 0xfd25, 0x0, 0x0);
        gbc.writeMem(0x6acf, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x59e1, gbc.sp());
        EXPECT(0x6ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 035F
        gbc.setState(0x3ce1, 0x6c8e, 0x6880, 0x68ce, 0xca5b, 0x7db6, 0x0, 0x1);
        gbc.writeMem(0x3ce1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6c8e, gbc.sp());
        EXPECT(0x3ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0360
        gbc.setState(0x3555, 0x8e5c, 0x3f70, 0x6fb, 0x3380, 0x4e7f, 0x1, 0x1);
        gbc.writeMem(0x3555, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8e5c, gbc.sp());
        EXPECT(0x3557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0361
        gbc.setState(0x3e03, 0xbf38, 0xb670, 0x55df, 0xeefc, 0xe169, 0x1, 0x1);
        gbc.writeMem(0x3e03, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbf38, gbc.sp());
        EXPECT(0x3e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0362
        gbc.setState(0x51e1, 0x2739, 0x3020, 0xd5e9, 0x8254, 0xd0be, 0x0, 0x0);
        gbc.writeMem(0x51e1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2739, gbc.sp());
        EXPECT(0x51e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0363
        gbc.setState(0x8745, 0x70a2, 0x5e00, 0xea15, 0x265b, 0xe517, 0x1, 0x0);
        gbc.writeMem(0x8745, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x70a2, gbc.sp());
        EXPECT(0x8747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8745));
        EXPECT(0x85, gbc.readMem(0x8746));
        // CB 85 0364
        gbc.setState(0x3898, 0x636b, 0xd120, 0xa24, 0xb457, 0xd573, 0x0, 0x0);
        gbc.writeMem(0x3898, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x636b, gbc.sp());
        EXPECT(0x389a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0365
        gbc.setState(0xe218, 0x1dc5, 0xc490, 0xd97c, 0xfdd, 0x345d, 0x0, 0x0);
        gbc.writeMem(0xe218, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1dc5, gbc.sp());
        EXPECT(0xe21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe218));
        EXPECT(0x85, gbc.readMem(0xe219));
        // CB 85 0367
        gbc.setState(0x99bf, 0x54d1, 0x7670, 0x1bbe, 0xf8fd, 0xf5ee, 0x0, 0x1);
        gbc.writeMem(0x99bf, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x54d1, gbc.sp());
        EXPECT(0x99c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99bf));
        EXPECT(0x85, gbc.readMem(0x99c0));
        // CB 85 0368
        gbc.setState(0x31b6, 0x867f, 0x9a30, 0x386e, 0x8e4, 0x4843, 0x1, 0x0);
        gbc.writeMem(0x31b6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x867f, gbc.sp());
        EXPECT(0x31b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0369
        gbc.setState(0x3ed7, 0x283, 0xb2d0, 0x8223, 0xc6e6, 0x8b8, 0x1, 0x1);
        gbc.writeMem(0x3ed7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x283, gbc.sp());
        EXPECT(0x3ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 036A
        gbc.setState(0xb4ab, 0x2691, 0x4870, 0xf1c0, 0x10f7, 0x9bbe, 0x0, 0x0);
        gbc.writeMem(0xb4ab, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2691, gbc.sp());
        EXPECT(0xb4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ab));
        EXPECT(0x85, gbc.readMem(0xb4ac));
        // CB 85 036B
        gbc.setState(0x5963, 0xf14c, 0x2170, 0x69eb, 0x9a0, 0x169e, 0x0, 0x1);
        gbc.writeMem(0x5963, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf14c, gbc.sp());
        EXPECT(0x5965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 036C
        gbc.setState(0xcaed, 0xf241, 0x4a20, 0xa781, 0x710e, 0x768a, 0x0, 0x0);
        gbc.writeMem(0xcaed, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf241, gbc.sp());
        EXPECT(0xcaef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaed));
        EXPECT(0x85, gbc.readMem(0xcaee));
        // CB 85 036D
        gbc.setState(0x5941, 0x2cd5, 0x2130, 0x6291, 0x7047, 0xb72, 0x1, 0x1);
        gbc.writeMem(0x5941, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2cd5, gbc.sp());
        EXPECT(0x5943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 036E
        gbc.setState(0x38a, 0x72c5, 0x7c80, 0x8f0e, 0x3d8c, 0x52d1, 0x1, 0x0);
        gbc.writeMem(0x38a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x72c5, gbc.sp());
        EXPECT(0x38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 036F
        gbc.setState(0x7be6, 0x569c, 0x3760, 0xa869, 0x3dfb, 0xaa26, 0x1, 0x0);
        gbc.writeMem(0x7be6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x569c, gbc.sp());
        EXPECT(0x7be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0370
        gbc.setState(0x334d, 0x942b, 0x3f40, 0x39d, 0xc4a7, 0xf4e6, 0x1, 0x1);
        gbc.writeMem(0x334d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x942b, gbc.sp());
        EXPECT(0x334f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0371
        gbc.setState(0x9b6f, 0x16f3, 0xeed0, 0x83a3, 0x3908, 0xf7d, 0x0, 0x0);
        gbc.writeMem(0x9b6f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x16f3, gbc.sp());
        EXPECT(0x9b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b6f));
        EXPECT(0x85, gbc.readMem(0x9b70));
        // CB 85 0372
        gbc.setState(0xb73c, 0x2b86, 0x9ad0, 0x8211, 0x5e81, 0xa975, 0x0, 0x1);
        gbc.writeMem(0xb73c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2b86, gbc.sp());
        EXPECT(0xb73e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73c));
        EXPECT(0x85, gbc.readMem(0xb73d));
        // CB 85 0373
        gbc.setState(0x9a9a, 0xd94e, 0xea00, 0xbfdf, 0x9ffb, 0xfd, 0x1, 0x1);
        gbc.writeMem(0x9a9a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd94e, gbc.sp());
        EXPECT(0x9a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a9a));
        EXPECT(0x85, gbc.readMem(0x9a9b));
        // CB 85 0374
        gbc.setState(0xa3fa, 0xb6a3, 0xb710, 0x5975, 0x579b, 0xa196, 0x1, 0x0);
        gbc.writeMem(0xa3fa, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb6a3, gbc.sp());
        EXPECT(0xa3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fa));
        EXPECT(0x85, gbc.readMem(0xa3fb));
        // CB 85 0375
        gbc.setState(0xd29e, 0x41de, 0x3fb0, 0x5a07, 0x3ee7, 0xa1d3, 0x1, 0x1);
        gbc.writeMem(0xd29e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x41de, gbc.sp());
        EXPECT(0xd2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29e));
        EXPECT(0x85, gbc.readMem(0xd29f));
        // CB 85 0376
        gbc.setState(0x109b, 0xa273, 0x5250, 0x5bc9, 0x9fa4, 0x5b3d, 0x1, 0x1);
        gbc.writeMem(0x109b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa273, gbc.sp());
        EXPECT(0x109d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0377
        gbc.setState(0xa108, 0x46d0, 0x7a0, 0x65d8, 0xe699, 0x47af, 0x0, 0x0);
        gbc.writeMem(0xa108, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x46d0, gbc.sp());
        EXPECT(0xa10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa108));
        EXPECT(0x85, gbc.readMem(0xa109));
        // CB 85 0378
        gbc.setState(0x7a8f, 0xaa56, 0x5d0, 0xaa35, 0x1ad8, 0xad8e, 0x0, 0x0);
        gbc.writeMem(0x7a8f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xaa56, gbc.sp());
        EXPECT(0x7a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0379
        gbc.setState(0x7da8, 0xfa09, 0x4390, 0xd04e, 0x1771, 0x6bd6, 0x0, 0x0);
        gbc.writeMem(0x7da8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfa09, gbc.sp());
        EXPECT(0x7daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 037A
        gbc.setState(0xec13, 0x3c99, 0x2600, 0x9bfc, 0x75ce, 0xc65d, 0x0, 0x1);
        gbc.writeMem(0xec13, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3c99, gbc.sp());
        EXPECT(0xec15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec13));
        EXPECT(0x85, gbc.readMem(0xec14));
        // CB 85 037B
        gbc.setState(0xa7c0, 0x5825, 0xc470, 0xaedb, 0xc536, 0x2cff, 0x0, 0x1);
        gbc.writeMem(0xa7c0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5825, gbc.sp());
        EXPECT(0xa7c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c0));
        EXPECT(0x85, gbc.readMem(0xa7c1));
        // CB 85 037C
        gbc.setState(0x202f, 0x248c, 0x9580, 0xcad9, 0x1ace, 0x91e9, 0x1, 0x1);
        gbc.writeMem(0x202f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x248c, gbc.sp());
        EXPECT(0x2031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 037D
        gbc.setState(0x3b4, 0x8a58, 0x47d0, 0x4fb1, 0x2b5d, 0x4ac8, 0x1, 0x0);
        gbc.writeMem(0x3b4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8a58, gbc.sp());
        EXPECT(0x3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 037F
        gbc.setState(0x77b3, 0x2fcb, 0x42f0, 0x5f72, 0x556c, 0xd5c3, 0x0, 0x0);
        gbc.writeMem(0x77b3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2fcb, gbc.sp());
        EXPECT(0x77b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0380
        gbc.setState(0x7ab, 0xfc89, 0x9e30, 0xda73, 0xf9f5, 0x5f3b, 0x1, 0x1);
        gbc.writeMem(0x7ab, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfc89, gbc.sp());
        EXPECT(0x7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0381
        gbc.setState(0x95cd, 0x8714, 0x3010, 0xf371, 0xd292, 0x8b5f, 0x0, 0x0);
        gbc.writeMem(0x95cd, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8714, gbc.sp());
        EXPECT(0x95cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95cd));
        EXPECT(0x85, gbc.readMem(0x95ce));
        // CB 85 0382
        gbc.setState(0x1d33, 0x552, 0x60, 0x4fa5, 0xd65f, 0x466a, 0x1, 0x1);
        gbc.writeMem(0x1d33, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0x1d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0383
        gbc.setState(0x6d47, 0x68ac, 0x3f30, 0xec17, 0x77b7, 0x11ec, 0x0, 0x1);
        gbc.writeMem(0x6d47, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x68ac, gbc.sp());
        EXPECT(0x6d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0384
        gbc.setState(0xe6f3, 0x8d7c, 0x8c0, 0x5e9e, 0xfe11, 0x7401, 0x1, 0x1);
        gbc.writeMem(0xe6f3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8d7c, gbc.sp());
        EXPECT(0xe6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f3));
        EXPECT(0x85, gbc.readMem(0xe6f4));
        // CB 85 0385
        gbc.setState(0x56a, 0xdb1d, 0x5ad0, 0x6e16, 0x3f9d, 0x2230, 0x1, 0x1);
        gbc.writeMem(0x56a, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdb1d, gbc.sp());
        EXPECT(0x56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0386
        gbc.setState(0xd70b, 0x6cc7, 0xc780, 0xe709, 0x34bd, 0xf5e8, 0x1, 0x0);
        gbc.writeMem(0xd70b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6cc7, gbc.sp());
        EXPECT(0xd70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70b));
        EXPECT(0x85, gbc.readMem(0xd70c));
        // CB 85 0387
        gbc.setState(0x235d, 0xcf7c, 0x3320, 0xfd0b, 0x8057, 0x707f, 0x0, 0x1);
        gbc.writeMem(0x235d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcf7c, gbc.sp());
        EXPECT(0x235f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0389
        gbc.setState(0xa695, 0x66d8, 0x93d0, 0xeff0, 0xfec9, 0x33e7, 0x1, 0x1);
        gbc.writeMem(0xa695, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x66d8, gbc.sp());
        EXPECT(0xa697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa695));
        EXPECT(0x85, gbc.readMem(0xa696));
        // CB 85 038A
        gbc.setState(0x7777, 0x6016, 0x3ff0, 0xeb13, 0xec84, 0xb5cb, 0x1, 0x0);
        gbc.writeMem(0x7777, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6016, gbc.sp());
        EXPECT(0x7779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 038D
        gbc.setState(0xacb6, 0x958f, 0x69a0, 0x49e5, 0x6a8c, 0x34b0, 0x0, 0x0);
        gbc.writeMem(0xacb6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x958f, gbc.sp());
        EXPECT(0xacb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb6));
        EXPECT(0x85, gbc.readMem(0xacb7));
        // CB 85 038E
        gbc.setState(0x357b, 0xe20e, 0xda10, 0x13f3, 0x3148, 0x8e02, 0x1, 0x0);
        gbc.writeMem(0x357b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe20e, gbc.sp());
        EXPECT(0x357d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 038F
        gbc.setState(0x1cc6, 0x3918, 0x4a00, 0x57a6, 0xba16, 0xc56a, 0x0, 0x0);
        gbc.writeMem(0x1cc6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3918, gbc.sp());
        EXPECT(0x1cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0390
        gbc.setState(0x248c, 0x1f50, 0x5bd0, 0x13a3, 0x3de6, 0xcd89, 0x0, 0x1);
        gbc.writeMem(0x248c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1f50, gbc.sp());
        EXPECT(0x248e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0391
        gbc.setState(0x73e6, 0x924a, 0x31b0, 0x32ca, 0x8091, 0xa8cb, 0x0, 0x1);
        gbc.writeMem(0x73e6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x924a, gbc.sp());
        EXPECT(0x73e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 0392
        gbc.setState(0x1407, 0xaeea, 0x4f60, 0xa1ff, 0xd5fc, 0xce50, 0x0, 0x0);
        gbc.writeMem(0x1407, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xaeea, gbc.sp());
        EXPECT(0x1409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0393
        gbc.setState(0x77df, 0x4efd, 0x6f20, 0xbac1, 0x32fd, 0xd032, 0x0, 0x0);
        gbc.writeMem(0x77df, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4efd, gbc.sp());
        EXPECT(0x77e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0394
        gbc.setState(0x11d3, 0x3549, 0x34a0, 0x1cd2, 0xb4c, 0xb3d0, 0x0, 0x0);
        gbc.writeMem(0x11d3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3549, gbc.sp());
        EXPECT(0x11d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0395
        gbc.setState(0x2371, 0xa7b9, 0xd60, 0x9685, 0x6350, 0xe0a1, 0x1, 0x1);
        gbc.writeMem(0x2371, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa7b9, gbc.sp());
        EXPECT(0x2373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0396
        gbc.setState(0xbff0, 0x5f71, 0xb710, 0xaebb, 0x5a62, 0xc15, 0x0, 0x0);
        gbc.writeMem(0xbff0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5f71, gbc.sp());
        EXPECT(0xbff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff0));
        EXPECT(0x85, gbc.readMem(0xbff1));
        // CB 85 0397
        gbc.setState(0x640b, 0xd9b4, 0x8e40, 0x70fb, 0x6e1a, 0x2fc3, 0x1, 0x1);
        gbc.writeMem(0x640b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd9b4, gbc.sp());
        EXPECT(0x640d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 0398
        gbc.setState(0xb2b5, 0xccba, 0xae30, 0x7c4c, 0xba95, 0x5143, 0x1, 0x0);
        gbc.writeMem(0xb2b5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xccba, gbc.sp());
        EXPECT(0xb2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b5));
        EXPECT(0x85, gbc.readMem(0xb2b6));
        // CB 85 0399
        gbc.setState(0xc8df, 0x6cc9, 0x70f0, 0xfc2d, 0xfd62, 0xd513, 0x0, 0x1);
        gbc.writeMem(0xc8df, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6cc9, gbc.sp());
        EXPECT(0xc8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8df));
        EXPECT(0x85, gbc.readMem(0xc8e0));
        // CB 85 039A
        gbc.setState(0x368, 0x5848, 0x57a0, 0x99ce, 0x6cea, 0xb455, 0x0, 0x0);
        gbc.writeMem(0x368, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5848, gbc.sp());
        EXPECT(0x36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 039B
        gbc.setState(0x6e48, 0x220e, 0x4cc0, 0x3b50, 0x7a39, 0xb843, 0x0, 0x1);
        gbc.writeMem(0x6e48, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x220e, gbc.sp());
        EXPECT(0x6e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 039C
        gbc.setState(0xa103, 0xca04, 0xcaf0, 0xa7d4, 0x8321, 0x6d71, 0x0, 0x1);
        gbc.writeMem(0xa103, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xca04, gbc.sp());
        EXPECT(0xa105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa103));
        EXPECT(0x85, gbc.readMem(0xa104));
        // CB 85 039D
        gbc.setState(0xaf34, 0xeda4, 0x3ea0, 0x1374, 0x26fb, 0x99e6, 0x0, 0x0);
        gbc.writeMem(0xaf34, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xeda4, gbc.sp());
        EXPECT(0xaf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf34));
        EXPECT(0x85, gbc.readMem(0xaf35));
        // CB 85 039E
        gbc.setState(0x670e, 0x519d, 0xc3a0, 0xb80d, 0xbc9a, 0x2ba5, 0x1, 0x0);
        gbc.writeMem(0x670e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x519d, gbc.sp());
        EXPECT(0x6710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 039F
        gbc.setState(0x5fef, 0xa8ae, 0x5960, 0x6c4d, 0x6b66, 0x4164, 0x1, 0x0);
        gbc.writeMem(0x5fef, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa8ae, gbc.sp());
        EXPECT(0x5ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03A0
        gbc.setState(0x5035, 0x7030, 0xe70, 0xc8f8, 0x9bbe, 0xa5c1, 0x1, 0x0);
        gbc.writeMem(0x5035, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7030, gbc.sp());
        EXPECT(0x5037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03A1
        gbc.setState(0x2c7d, 0xed3b, 0x3710, 0x7ae, 0xd26d, 0x8923, 0x1, 0x0);
        gbc.writeMem(0x2c7d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xed3b, gbc.sp());
        EXPECT(0x2c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03A2
        gbc.setState(0x9a2b, 0x558a, 0x78c0, 0x9506, 0x39d0, 0x5173, 0x1, 0x1);
        gbc.writeMem(0x9a2b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x558a, gbc.sp());
        EXPECT(0x9a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2b));
        EXPECT(0x85, gbc.readMem(0x9a2c));
        // CB 85 03A3
        gbc.setState(0x65f4, 0xbaca, 0x4f30, 0xba4c, 0xe8f0, 0x9c5e, 0x0, 0x0);
        gbc.writeMem(0x65f4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbaca, gbc.sp());
        EXPECT(0x65f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03A5
        gbc.setState(0x28fa, 0x35f4, 0x5ae0, 0x8989, 0xa821, 0x6c1c, 0x0, 0x0);
        gbc.writeMem(0x28fa, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x35f4, gbc.sp());
        EXPECT(0x28fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03A6
        gbc.setState(0x9215, 0x9279, 0x1f20, 0xbd38, 0xc897, 0x19d2, 0x1, 0x0);
        gbc.writeMem(0x9215, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9279, gbc.sp());
        EXPECT(0x9217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9215));
        EXPECT(0x85, gbc.readMem(0x9216));
        // CB 85 03A7
        gbc.setState(0x618b, 0xf262, 0xd120, 0x3acd, 0xd2b6, 0x8688, 0x1, 0x1);
        gbc.writeMem(0x618b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf262, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03A8
        gbc.setState(0x9d16, 0x4505, 0xbb10, 0xbfc6, 0x4f96, 0xcd04, 0x0, 0x1);
        gbc.writeMem(0x9d16, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4505, gbc.sp());
        EXPECT(0x9d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d16));
        EXPECT(0x85, gbc.readMem(0x9d17));
        // CB 85 03A9
        gbc.setState(0x6f3c, 0xa064, 0xc7e0, 0xaf67, 0x15d7, 0xda5f, 0x0, 0x0);
        gbc.writeMem(0x6f3c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa064, gbc.sp());
        EXPECT(0x6f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03AA
        gbc.setState(0x53bc, 0xf678, 0xbdc0, 0xa6e, 0xdff7, 0xe174, 0x1, 0x0);
        gbc.writeMem(0x53bc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf678, gbc.sp());
        EXPECT(0x53be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03AB
        gbc.setState(0x8911, 0x10d1, 0x9b10, 0xa360, 0x34cd, 0xf1f7, 0x1, 0x0);
        gbc.writeMem(0x8911, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x10d1, gbc.sp());
        EXPECT(0x8913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8911));
        EXPECT(0x85, gbc.readMem(0x8912));
        // CB 85 03AC
        gbc.setState(0xefc3, 0x60ab, 0x8ae0, 0x2f58, 0xbf51, 0x1cc4, 0x0, 0x1);
        gbc.writeMem(0xefc3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x60ab, gbc.sp());
        EXPECT(0xefc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc3));
        EXPECT(0x85, gbc.readMem(0xefc4));
        // CB 85 03AD
        gbc.setState(0xdee6, 0xb792, 0x3df0, 0xbb9d, 0xefe4, 0xc8c0, 0x0, 0x1);
        gbc.writeMem(0xdee6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb792, gbc.sp());
        EXPECT(0xdee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee6));
        EXPECT(0x85, gbc.readMem(0xdee7));
        // CB 85 03AE
        gbc.setState(0x4321, 0x65e2, 0x1050, 0xeae, 0xf1df, 0x417f, 0x1, 0x1);
        gbc.writeMem(0x4321, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x65e2, gbc.sp());
        EXPECT(0x4323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03AF
        gbc.setState(0x250b, 0x5837, 0x2d30, 0xbb2b, 0xb74e, 0xd7f3, 0x0, 0x1);
        gbc.writeMem(0x250b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5837, gbc.sp());
        EXPECT(0x250d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03B0
        gbc.setState(0x8a9f, 0xcaee, 0xd480, 0xf86c, 0xa193, 0x80fb, 0x0, 0x0);
        gbc.writeMem(0x8a9f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcaee, gbc.sp());
        EXPECT(0x8aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a9f));
        EXPECT(0x85, gbc.readMem(0x8aa0));
        // CB 85 03B1
        gbc.setState(0x300f, 0xb056, 0x14c0, 0x106f, 0x5483, 0x8613, 0x1, 0x1);
        gbc.writeMem(0x300f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb056, gbc.sp());
        EXPECT(0x3011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03B2
        gbc.setState(0x818b, 0xf8f8, 0x560, 0xb4bb, 0x6c14, 0x1baa, 0x0, 0x1);
        gbc.writeMem(0x818b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf8f8, gbc.sp());
        EXPECT(0x818d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818b));
        EXPECT(0x85, gbc.readMem(0x818c));
        // CB 85 03B3
        gbc.setState(0xdac0, 0x20ed, 0xc880, 0x1e23, 0xf8dd, 0x3119, 0x0, 0x1);
        gbc.writeMem(0xdac0, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x20ed, gbc.sp());
        EXPECT(0xdac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac0));
        EXPECT(0x85, gbc.readMem(0xdac1));
        // CB 85 03B4
        gbc.setState(0x5986, 0x9a2f, 0x5260, 0x731b, 0x72d8, 0x2470, 0x1, 0x1);
        gbc.writeMem(0x5986, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9a2f, gbc.sp());
        EXPECT(0x5988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03B5
        gbc.setState(0x4870, 0x1f9c, 0x31f0, 0xf2ec, 0x40c0, 0xa457, 0x0, 0x0);
        gbc.writeMem(0x4870, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1f9c, gbc.sp());
        EXPECT(0x4872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03B6
        gbc.setState(0xb21b, 0x6875, 0xf720, 0x6480, 0x3163, 0xab18, 0x0, 0x1);
        gbc.writeMem(0xb21b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6875, gbc.sp());
        EXPECT(0xb21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21b));
        EXPECT(0x85, gbc.readMem(0xb21c));
        // CB 85 03B7
        gbc.setState(0x8a17, 0x3a5f, 0x75c0, 0x6c39, 0x6c9c, 0xad0e, 0x1, 0x0);
        gbc.writeMem(0x8a17, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3a5f, gbc.sp());
        EXPECT(0x8a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a17));
        EXPECT(0x85, gbc.readMem(0x8a18));
        // CB 85 03B8
        gbc.setState(0x8750, 0xa77c, 0x4fb0, 0xa606, 0xa194, 0x563c, 0x1, 0x0);
        gbc.writeMem(0x8750, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa77c, gbc.sp());
        EXPECT(0x8752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8750));
        EXPECT(0x85, gbc.readMem(0x8751));
        // CB 85 03BA
        gbc.setState(0x95a2, 0xe650, 0xd760, 0x2add, 0xb1f6, 0xb95b, 0x0, 0x0);
        gbc.writeMem(0x95a2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe650, gbc.sp());
        EXPECT(0x95a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a2));
        EXPECT(0x85, gbc.readMem(0x95a3));
        // CB 85 03BB
        gbc.setState(0x385c, 0x70ca, 0x6e0, 0xdfde, 0x62be, 0x2b95, 0x0, 0x0);
        gbc.writeMem(0x385c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x70ca, gbc.sp());
        EXPECT(0x385e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03BC
        gbc.setState(0xc188, 0x9ee6, 0xd70, 0x569f, 0x14ce, 0xbd54, 0x1, 0x0);
        gbc.writeMem(0xc188, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9ee6, gbc.sp());
        EXPECT(0xc18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc188));
        EXPECT(0x85, gbc.readMem(0xc189));
        // CB 85 03BD
        gbc.setState(0x1d4b, 0x1c20, 0x94a0, 0x6149, 0xb9b8, 0xb8a, 0x0, 0x0);
        gbc.writeMem(0x1d4b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1c20, gbc.sp());
        EXPECT(0x1d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03BE
        gbc.setState(0xb6d6, 0xa43d, 0x5240, 0x7238, 0x9289, 0xce69, 0x0, 0x1);
        gbc.writeMem(0xb6d6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa43d, gbc.sp());
        EXPECT(0xb6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d6));
        EXPECT(0x85, gbc.readMem(0xb6d7));
        // CB 85 03BF
        gbc.setState(0x2001, 0xe975, 0x75e0, 0xb3a7, 0xd283, 0xb94d, 0x1, 0x0);
        gbc.writeMem(0x2001, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe975, gbc.sp());
        EXPECT(0x2003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03C0
        gbc.setState(0x7f32, 0x801b, 0x8640, 0x1f34, 0x216, 0x8706, 0x0, 0x1);
        gbc.writeMem(0x7f32, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x801b, gbc.sp());
        EXPECT(0x7f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03C1
        gbc.setState(0xedc1, 0x55b7, 0xbd0, 0xd3bd, 0x6e56, 0xf3ec, 0x0, 0x0);
        gbc.writeMem(0xedc1, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x55b7, gbc.sp());
        EXPECT(0xedc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc1));
        EXPECT(0x85, gbc.readMem(0xedc2));
        // CB 85 03C2
        gbc.setState(0xa513, 0x49c1, 0x3e10, 0xfc77, 0x9b26, 0x6a55, 0x1, 0x1);
        gbc.writeMem(0xa513, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x49c1, gbc.sp());
        EXPECT(0xa515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa513));
        EXPECT(0x85, gbc.readMem(0xa514));
        // CB 85 03C3
        gbc.setState(0xc47d, 0x506b, 0x340, 0x87a4, 0x66e1, 0x890c, 0x1, 0x1);
        gbc.writeMem(0xc47d, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x506b, gbc.sp());
        EXPECT(0xc47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47d));
        EXPECT(0x85, gbc.readMem(0xc47e));
        // CB 85 03C5
        gbc.setState(0xa012, 0x8ee7, 0x76f0, 0x466, 0xfc71, 0x4202, 0x1, 0x1);
        gbc.writeMem(0xa012, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8ee7, gbc.sp());
        EXPECT(0xa014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa012));
        EXPECT(0x85, gbc.readMem(0xa013));
        // CB 85 03C6
        gbc.setState(0x6a4e, 0x1553, 0x7a0, 0x5ad7, 0xa494, 0x7dce, 0x0, 0x0);
        gbc.writeMem(0x6a4e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1553, gbc.sp());
        EXPECT(0x6a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03C7
        gbc.setState(0x2b7f, 0xa178, 0xb4a0, 0xf583, 0xcc23, 0x6aff, 0x1, 0x0);
        gbc.writeMem(0x2b7f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa178, gbc.sp());
        EXPECT(0x2b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03C8
        gbc.setState(0x5503, 0xdb00, 0xb390, 0xe66a, 0x2c3b, 0xeef9, 0x1, 0x0);
        gbc.writeMem(0x5503, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdb00, gbc.sp());
        EXPECT(0x5505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03C9
        gbc.setState(0x25b9, 0xef17, 0xdd20, 0xaa7c, 0xa4f4, 0xa798, 0x0, 0x0);
        gbc.writeMem(0x25b9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xef17, gbc.sp());
        EXPECT(0x25bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03CA
        gbc.setState(0x29d4, 0xc10b, 0xc600, 0xc27f, 0x6b6a, 0xba47, 0x0, 0x1);
        gbc.writeMem(0x29d4, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc10b, gbc.sp());
        EXPECT(0x29d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03CB
        gbc.setState(0x5e92, 0xd4f8, 0x9420, 0x13f0, 0x74f4, 0xfb05, 0x1, 0x0);
        gbc.writeMem(0x5e92, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd4f8, gbc.sp());
        EXPECT(0x5e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03CC
        gbc.setState(0x91fc, 0xf939, 0x12b0, 0x2a80, 0x749c, 0x7832, 0x0, 0x0);
        gbc.writeMem(0x91fc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf939, gbc.sp());
        EXPECT(0x91fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fc));
        EXPECT(0x85, gbc.readMem(0x91fd));
        // CB 85 03CD
        gbc.setState(0x3bf2, 0xde52, 0x4740, 0x3158, 0xb60e, 0x2ead, 0x0, 0x0);
        gbc.writeMem(0x3bf2, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xde52, gbc.sp());
        EXPECT(0x3bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03CE
        gbc.setState(0xec47, 0x244a, 0x6760, 0xfe1a, 0x3b20, 0x3c17, 0x1, 0x1);
        gbc.writeMem(0xec47, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x244a, gbc.sp());
        EXPECT(0xec49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec47));
        EXPECT(0x85, gbc.readMem(0xec48));
        // CB 85 03CF
        gbc.setState(0x348e, 0x9304, 0x4630, 0x5180, 0x9ea7, 0x58dd, 0x1, 0x1);
        gbc.writeMem(0x348e, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9304, gbc.sp());
        EXPECT(0x3490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03D0
        gbc.setState(0x47ce, 0xef25, 0x2930, 0x6b9d, 0x3670, 0xb2eb, 0x1, 0x1);
        gbc.writeMem(0x47ce, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xef25, gbc.sp());
        EXPECT(0x47d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03D1
        gbc.setState(0xdf03, 0x3feb, 0x3eb0, 0x3c66, 0x47bb, 0x8ba8, 0x0, 0x1);
        gbc.writeMem(0xdf03, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3feb, gbc.sp());
        EXPECT(0xdf05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf03));
        EXPECT(0x85, gbc.readMem(0xdf04));
        // CB 85 03D2
        gbc.setState(0x80a6, 0xc6b1, 0x3690, 0x1dc3, 0xd441, 0x5054, 0x0, 0x0);
        gbc.writeMem(0x80a6, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc6b1, gbc.sp());
        EXPECT(0x80a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a6));
        EXPECT(0x85, gbc.readMem(0x80a7));
        // CB 85 03D3
        gbc.setState(0xb028, 0x391c, 0x6da0, 0x2667, 0x8d8c, 0xd950, 0x0, 0x0);
        gbc.writeMem(0xb028, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x391c, gbc.sp());
        EXPECT(0xb02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb028));
        EXPECT(0x85, gbc.readMem(0xb029));
        // CB 85 03D4
        gbc.setState(0xc047, 0x538a, 0xb020, 0xd2ec, 0x63fd, 0xf024, 0x1, 0x0);
        gbc.writeMem(0xc047, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x538a, gbc.sp());
        EXPECT(0xc049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc047));
        EXPECT(0x85, gbc.readMem(0xc048));
        // CB 85 03D5
        gbc.setState(0xb7a3, 0xfa09, 0x2580, 0xd5f4, 0x68d0, 0x5070, 0x0, 0x0);
        gbc.writeMem(0xb7a3, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfa09, gbc.sp());
        EXPECT(0xb7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a3));
        EXPECT(0x85, gbc.readMem(0xb7a4));
        // CB 85 03D7
        gbc.setState(0x119, 0x7e11, 0x3650, 0x5cfd, 0x3c8, 0xf10b, 0x1, 0x0);
        gbc.writeMem(0x119, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7e11, gbc.sp());
        EXPECT(0x11b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03D8
        gbc.setState(0xc3f9, 0x1eb3, 0xe290, 0xc3e5, 0xb31b, 0xfa4d, 0x1, 0x0);
        gbc.writeMem(0xc3f9, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1eb3, gbc.sp());
        EXPECT(0xc3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f9));
        EXPECT(0x85, gbc.readMem(0xc3fa));
        // CB 85 03D9
        gbc.setState(0xd93b, 0x925, 0xcfe0, 0x82f3, 0x7ddb, 0x9bd4, 0x0, 0x0);
        gbc.writeMem(0xd93b, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x925, gbc.sp());
        EXPECT(0xd93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd93b));
        EXPECT(0x85, gbc.readMem(0xd93c));
        // CB 85 03DA
        gbc.setState(0x78f8, 0x5722, 0xcf40, 0x9d8d, 0xab88, 0xcc6d, 0x0, 0x0);
        gbc.writeMem(0x78f8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5722, gbc.sp());
        EXPECT(0x78fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 85 03DB
        gbc.setState(0xb19c, 0x6a96, 0x3db0, 0xc8d6, 0xce56, 0x221, 0x0, 0x1);
        gbc.writeMem(0xb19c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6a96, gbc.sp());
        EXPECT(0xb19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb19c));
        EXPECT(0x85, gbc.readMem(0xb19d));
        // CB 85 03DC
        gbc.setState(0x4730, 0x2375, 0x71b0, 0x8ef0, 0xe389, 0xc25e, 0x0, 0x1);
        gbc.writeMem(0x4730, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2375, gbc.sp());
        EXPECT(0x4732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03DD
        gbc.setState(0x7e56, 0xb395, 0x2930, 0xdf5f, 0x43f3, 0x8e11, 0x1, 0x1);
        gbc.writeMem(0x7e56, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb395, gbc.sp());
        EXPECT(0x7e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03DE
        gbc.setState(0xe1e8, 0x986a, 0xa190, 0xe17a, 0x1be1, 0x70aa, 0x0, 0x1);
        gbc.writeMem(0xe1e8, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x986a, gbc.sp());
        EXPECT(0xe1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e8));
        EXPECT(0x85, gbc.readMem(0xe1e9));
        // CB 85 03DF
        gbc.setState(0xcacf, 0x78b2, 0xaf30, 0xd237, 0xdf63, 0xf197, 0x1, 0x0);
        gbc.writeMem(0xcacf, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x78b2, gbc.sp());
        EXPECT(0xcad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcacf));
        EXPECT(0x85, gbc.readMem(0xcad0));
        // CB 85 03E0
        gbc.setState(0x1e3f, 0xe3fe, 0x1fd0, 0xae8a, 0x5ce9, 0x5cf0, 0x0, 0x0);
        gbc.writeMem(0x1e3f, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe3fe, gbc.sp());
        EXPECT(0x1e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03E1
        gbc.setState(0xe2fc, 0x3422, 0x7180, 0x22ed, 0xedea, 0x4939, 0x1, 0x1);
        gbc.writeMem(0xe2fc, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3422, gbc.sp());
        EXPECT(0xe2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fc));
        EXPECT(0x85, gbc.readMem(0xe2fd));
        // CB 85 03E2
        gbc.setState(0xa170, 0x96c9, 0x9080, 0x2423, 0xa091, 0x99bb, 0x0, 0x0);
        gbc.writeMem(0xa170, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x96c9, gbc.sp());
        EXPECT(0xa172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa170));
        EXPECT(0x85, gbc.readMem(0xa171));
        // CB 85 03E3
        gbc.setState(0xbe58, 0x3737, 0xcf70, 0xe6ae, 0xb835, 0x38f9, 0x0, 0x0);
        gbc.writeMem(0xbe58, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3737, gbc.sp());
        EXPECT(0xbe5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe58));
        EXPECT(0x85, gbc.readMem(0xbe59));
        // CB 85 03E4
        gbc.setState(0x2bb5, 0xbc08, 0xe150, 0x7a8f, 0x888c, 0x2582, 0x1, 0x1);
        gbc.writeMem(0x2bb5, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbc08, gbc.sp());
        EXPECT(0x2bb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03E5
        gbc.setState(0xad7c, 0x7d64, 0x3c40, 0xdfb1, 0x7496, 0x7e19, 0x1, 0x1);
        gbc.writeMem(0xad7c, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7d64, gbc.sp());
        EXPECT(0xad7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7c));
        EXPECT(0x85, gbc.readMem(0xad7d));
        // CB 85 03E6
        gbc.setState(0x64c7, 0xc0b4, 0xd310, 0x8123, 0xa43a, 0x67c5, 0x1, 0x1);
        gbc.writeMem(0x64c7, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc0b4, gbc.sp());
        EXPECT(0x64c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 85 03E7
        gbc.setState(0x4377, 0xd672, 0x5bd0, 0x1141, 0x31b5, 0x8f0d, 0x0, 0x0);
        gbc.writeMem(0x4377, { 0xcb, 0x85 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd672, gbc.sp());
        EXPECT(0x4379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
