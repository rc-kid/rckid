    TEST(gbcemu, opcode_79) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 79 0000
        gbc.setState(0xafc3, 0x3cb, 0xb6b0, 0x6705, 0x8fc9, 0xd6bd, 0x0, 0x0);
        gbc.writeMem(0xafc3, { 0x79 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3cb, gbc.sp());
        EXPECT(0xafc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xafc3));
        // 79 0001
        gbc.setState(0x45bb, 0x15f, 0xf590, 0x4443, 0x4712, 0x724b, 0x0, 0x1);
        gbc.writeMem(0x45bb, { 0x79 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x15f, gbc.sp());
        EXPECT(0x45bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0002
        gbc.setState(0xa7c5, 0xcf69, 0xd380, 0xe44b, 0x8851, 0x24a7, 0x0, 0x0);
        gbc.writeMem(0xa7c5, { 0x79 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcf69, gbc.sp());
        EXPECT(0xa7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa7c5));
        // 79 0003
        gbc.setState(0xd42f, 0xce7a, 0x1090, 0x4125, 0x29f8, 0xa161, 0x0, 0x1);
        gbc.writeMem(0xd42f, { 0x79 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xce7a, gbc.sp());
        EXPECT(0xd430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd42f));
        // 79 0004
        gbc.setState(0x8acc, 0x3919, 0x1970, 0x1c28, 0x1877, 0x7c5b, 0x0, 0x0);
        gbc.writeMem(0x8acc, { 0x79 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3919, gbc.sp());
        EXPECT(0x8acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8acc));
        // 79 0005
        gbc.setState(0xa82d, 0xe4b6, 0xb0, 0xff29, 0xf143, 0xc113, 0x0, 0x1);
        gbc.writeMem(0xa82d, { 0x79 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe4b6, gbc.sp());
        EXPECT(0xa82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa82d));
        // 79 0006
        gbc.setState(0x5293, 0xc3b1, 0xa560, 0xa0c, 0xa889, 0x358f, 0x1, 0x0);
        gbc.writeMem(0x5293, { 0x79 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc3b1, gbc.sp());
        EXPECT(0x5294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0007
        gbc.setState(0x4a08, 0x42b4, 0xb7f0, 0xe357, 0xc9ce, 0x75f8, 0x1, 0x1);
        gbc.writeMem(0x4a08, { 0x79 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x42b4, gbc.sp());
        EXPECT(0x4a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0008
        gbc.setState(0x14a6, 0xe0de, 0x6c90, 0x8915, 0xa277, 0xd3b2, 0x0, 0x1);
        gbc.writeMem(0x14a6, { 0x79 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe0de, gbc.sp());
        EXPECT(0x14a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0009
        gbc.setState(0x9d88, 0xae07, 0x95a0, 0xbdbc, 0x9c1d, 0xd1cf, 0x1, 0x0);
        gbc.writeMem(0x9d88, { 0x79 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xae07, gbc.sp());
        EXPECT(0x9d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9d88));
        // 79 000A
        gbc.setState(0x90cb, 0xa3c, 0xa30, 0x7c80, 0x41ba, 0x7f45, 0x0, 0x1);
        gbc.writeMem(0x90cb, { 0x79 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa3c, gbc.sp());
        EXPECT(0x90cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x90cb));
        // 79 000B
        gbc.setState(0xbed2, 0xd445, 0xa210, 0xb409, 0xc944, 0xc61f, 0x0, 0x0);
        gbc.writeMem(0xbed2, { 0x79 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd445, gbc.sp());
        EXPECT(0xbed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbed2));
        // 79 000C
        gbc.setState(0xbe1e, 0xf38a, 0xfa10, 0xc7e7, 0x8ec8, 0xd10e, 0x1, 0x0);
        gbc.writeMem(0xbe1e, { 0x79 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf38a, gbc.sp());
        EXPECT(0xbe1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbe1e));
        // 79 000E
        gbc.setState(0xd738, 0x12c, 0x4590, 0xdff3, 0xadc2, 0xf61f, 0x0, 0x0);
        gbc.writeMem(0xd738, { 0x79 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x12c, gbc.sp());
        EXPECT(0xd739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd738));
        // 79 000F
        gbc.setState(0xde77, 0x4318, 0xa7c0, 0xcb94, 0x5120, 0x1a5a, 0x1, 0x1);
        gbc.writeMem(0xde77, { 0x79 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4318, gbc.sp());
        EXPECT(0xde78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xde77));
        // 79 0010
        gbc.setState(0xd7bf, 0x8394, 0x4260, 0xfbbc, 0x87eb, 0x2c37, 0x0, 0x0);
        gbc.writeMem(0xd7bf, { 0x79 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8394, gbc.sp());
        EXPECT(0xd7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd7bf));
        // 79 0011
        gbc.setState(0x9706, 0xb265, 0x3f30, 0xe8ac, 0x3d2c, 0xe175, 0x0, 0x0);
        gbc.writeMem(0x9706, { 0x79 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb265, gbc.sp());
        EXPECT(0x9707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9706));
        // 79 0012
        gbc.setState(0x1315, 0xf2f1, 0x2020, 0x99aa, 0xcde1, 0x878d, 0x1, 0x1);
        gbc.writeMem(0x1315, { 0x79 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf2f1, gbc.sp());
        EXPECT(0x1316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0013
        gbc.setState(0xad7f, 0x526c, 0x76f0, 0x72c7, 0x6928, 0xf2d2, 0x0, 0x1);
        gbc.writeMem(0xad7f, { 0x79 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x526c, gbc.sp());
        EXPECT(0xad80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xad7f));
        // 79 0014
        gbc.setState(0xa6dc, 0xb8d0, 0x89a0, 0x4b92, 0xa278, 0x2895, 0x0, 0x1);
        gbc.writeMem(0xa6dc, { 0x79 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb8d0, gbc.sp());
        EXPECT(0xa6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa6dc));
        // 79 0015
        gbc.setState(0xac07, 0x269e, 0xde60, 0x7bab, 0x190d, 0x953d, 0x1, 0x0);
        gbc.writeMem(0xac07, { 0x79 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x269e, gbc.sp());
        EXPECT(0xac08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xac07));
        // 79 0016
        gbc.setState(0x86c7, 0x6140, 0xf6a0, 0x5dc5, 0x1927, 0xebcd, 0x1, 0x0);
        gbc.writeMem(0x86c7, { 0x79 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6140, gbc.sp());
        EXPECT(0x86c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x86c7));
        // 79 0017
        gbc.setState(0x1323, 0x3126, 0x550, 0xdf47, 0xbaff, 0x1186, 0x1, 0x1);
        gbc.writeMem(0x1323, { 0x79 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3126, gbc.sp());
        EXPECT(0x1324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0018
        gbc.setState(0xe280, 0x7933, 0x7bb0, 0xa0e1, 0x60c6, 0x1ba6, 0x1, 0x0);
        gbc.writeMem(0xe280, { 0x79 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7933, gbc.sp());
        EXPECT(0xe281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe280));
        // 79 001A
        gbc.setState(0x3be0, 0xf454, 0xe5b0, 0x6132, 0xe7fa, 0xd9c, 0x1, 0x1);
        gbc.writeMem(0x3be0, { 0x79 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf454, gbc.sp());
        EXPECT(0x3be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 001B
        gbc.setState(0xb6e8, 0xc687, 0x980, 0x26c4, 0x26ef, 0xa1c8, 0x0, 0x0);
        gbc.writeMem(0xb6e8, { 0x79 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc687, gbc.sp());
        EXPECT(0xb6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb6e8));
        // 79 001C
        gbc.setState(0x3a40, 0x4bda, 0x1ec0, 0xd6cf, 0xd94a, 0xbfa7, 0x0, 0x0);
        gbc.writeMem(0x3a40, { 0x79 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4bda, gbc.sp());
        EXPECT(0x3a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 001D
        gbc.setState(0xadd, 0xadbc, 0x9c60, 0x2136, 0x1846, 0xc658, 0x1, 0x1);
        gbc.writeMem(0xadd, { 0x79 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xadbc, gbc.sp());
        EXPECT(0xade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 001E
        gbc.setState(0xbb4b, 0xdc73, 0x8800, 0x3256, 0x62f, 0xa6c7, 0x1, 0x0);
        gbc.writeMem(0xbb4b, { 0x79 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdc73, gbc.sp());
        EXPECT(0xbb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbb4b));
        // 79 001F
        gbc.setState(0x9964, 0x5747, 0x9070, 0x40bb, 0x29eb, 0x9fc3, 0x1, 0x0);
        gbc.writeMem(0x9964, { 0x79 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5747, gbc.sp());
        EXPECT(0x9965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9964));
        // 79 0020
        gbc.setState(0xb2db, 0x45e9, 0x9ee0, 0xb85e, 0x1474, 0x8ff8, 0x1, 0x1);
        gbc.writeMem(0xb2db, { 0x79 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x45e9, gbc.sp());
        EXPECT(0xb2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb2db));
        // 79 0021
        gbc.setState(0xd13e, 0x3ff6, 0x3740, 0x6d61, 0x1a54, 0xa37c, 0x1, 0x1);
        gbc.writeMem(0xd13e, { 0x79 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3ff6, gbc.sp());
        EXPECT(0xd13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd13e));
        // 79 0022
        gbc.setState(0x8c4b, 0x69b3, 0xdd60, 0xb50a, 0xb76c, 0xbbe3, 0x1, 0x1);
        gbc.writeMem(0x8c4b, { 0x79 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x69b3, gbc.sp());
        EXPECT(0x8c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8c4b));
        // 79 0024
        gbc.setState(0x3433, 0x8d0c, 0xc360, 0xa661, 0xf8fa, 0x8eee, 0x1, 0x1);
        gbc.writeMem(0x3433, { 0x79 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8d0c, gbc.sp());
        EXPECT(0x3434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0025
        gbc.setState(0x6fc2, 0x1dc9, 0x3e20, 0x24ef, 0xa2e7, 0xf228, 0x0, 0x0);
        gbc.writeMem(0x6fc2, { 0x79 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1dc9, gbc.sp());
        EXPECT(0x6fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0026
        gbc.setState(0x4a5c, 0x4c2d, 0x1090, 0xf308, 0xd75c, 0x2b74, 0x0, 0x1);
        gbc.writeMem(0x4a5c, { 0x79 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4c2d, gbc.sp());
        EXPECT(0x4a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0027
        gbc.setState(0xaef6, 0x8c92, 0xc0d0, 0x1133, 0xdc2e, 0x62ea, 0x0, 0x0);
        gbc.writeMem(0xaef6, { 0x79 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8c92, gbc.sp());
        EXPECT(0xaef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xaef6));
        // 79 0028
        gbc.setState(0x3f26, 0x14ac, 0x6e60, 0x4693, 0x7242, 0x2e57, 0x0, 0x0);
        gbc.writeMem(0x3f26, { 0x79 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x14ac, gbc.sp());
        EXPECT(0x3f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0029
        gbc.setState(0x18cc, 0x7e67, 0x8590, 0xb44c, 0xf42b, 0xa54e, 0x1, 0x0);
        gbc.writeMem(0x18cc, { 0x79 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7e67, gbc.sp());
        EXPECT(0x18cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 002A
        gbc.setState(0xcbb4, 0xe22c, 0xb880, 0xe0cc, 0xf6fc, 0xf589, 0x1, 0x1);
        gbc.writeMem(0xcbb4, { 0x79 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe22c, gbc.sp());
        EXPECT(0xcbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcbb4));
        // 79 002B
        gbc.setState(0x752c, 0xf8ff, 0xe0, 0x7c31, 0x20fd, 0xf72e, 0x1, 0x1);
        gbc.writeMem(0x752c, { 0x79 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf8ff, gbc.sp());
        EXPECT(0x752d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 002C
        gbc.setState(0xdaa8, 0x4a83, 0x6340, 0xa323, 0xc1b3, 0xbcb8, 0x0, 0x0);
        gbc.writeMem(0xdaa8, { 0x79 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0xdaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdaa8));
        // 79 002E
        gbc.setState(0x6bd0, 0xbc02, 0x73f0, 0x9bb6, 0x1ab1, 0x2fef, 0x0, 0x0);
        gbc.writeMem(0x6bd0, { 0x79 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbc02, gbc.sp());
        EXPECT(0x6bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 002F
        gbc.setState(0x9e5, 0x36b8, 0xc770, 0xcba6, 0x5049, 0x6174, 0x1, 0x0);
        gbc.writeMem(0x9e5, { 0x79 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x36b8, gbc.sp());
        EXPECT(0x9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0030
        gbc.setState(0x68e3, 0xdd4a, 0xcd0, 0x831c, 0xd42, 0xe00c, 0x0, 0x0);
        gbc.writeMem(0x68e3, { 0x79 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdd4a, gbc.sp());
        EXPECT(0x68e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0031
        gbc.setState(0x4470, 0xd840, 0x6450, 0x161f, 0x99ab, 0x564c, 0x1, 0x1);
        gbc.writeMem(0x4470, { 0x79 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd840, gbc.sp());
        EXPECT(0x4471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0032
        gbc.setState(0xe43a, 0x760c, 0xcd60, 0x2b2, 0x1f1b, 0xe9bd, 0x0, 0x1);
        gbc.writeMem(0xe43a, { 0x79 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x760c, gbc.sp());
        EXPECT(0xe43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe43a));
        // 79 0033
        gbc.setState(0x847f, 0xe6ba, 0x22e0, 0xcad, 0x60fe, 0x8029, 0x1, 0x1);
        gbc.writeMem(0x847f, { 0x79 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe6ba, gbc.sp());
        EXPECT(0x8480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x847f));
        // 79 0034
        gbc.setState(0x279, 0x8eb6, 0xf6e0, 0x79f, 0x6ca5, 0x9300, 0x1, 0x0);
        gbc.writeMem(0x279, { 0x79 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8eb6, gbc.sp());
        EXPECT(0x27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0035
        gbc.setState(0xd4d6, 0xfd3a, 0xed90, 0x3eac, 0x8b20, 0xb9a2, 0x0, 0x0);
        gbc.writeMem(0xd4d6, { 0x79 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfd3a, gbc.sp());
        EXPECT(0xd4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd4d6));
        // 79 0036
        gbc.setState(0x855a, 0xd51, 0x1560, 0x490, 0xd4fa, 0x6c2, 0x1, 0x1);
        gbc.writeMem(0x855a, { 0x79 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd51, gbc.sp());
        EXPECT(0x855b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x855a));
        // 79 0037
        gbc.setState(0x49ac, 0xd3e9, 0x91d0, 0xd99d, 0x400, 0xabfa, 0x0, 0x1);
        gbc.writeMem(0x49ac, { 0x79 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd3e9, gbc.sp());
        EXPECT(0x49ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0038
        gbc.setState(0x5dbb, 0x672e, 0x26d0, 0x31e1, 0x50b0, 0x63f6, 0x0, 0x0);
        gbc.writeMem(0x5dbb, { 0x79 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x672e, gbc.sp());
        EXPECT(0x5dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0039
        gbc.setState(0x6622, 0xcc3, 0x2960, 0x2a7d, 0x750, 0x5847, 0x0, 0x0);
        gbc.writeMem(0x6622, { 0x79 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcc3, gbc.sp());
        EXPECT(0x6623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 003A
        gbc.setState(0x889d, 0x73, 0x9af0, 0xe4ca, 0xbec1, 0x67b9, 0x1, 0x1);
        gbc.writeMem(0x889d, { 0x79 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x73, gbc.sp());
        EXPECT(0x889e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x889d));
        // 79 003B
        gbc.setState(0x214b, 0x2a06, 0xc920, 0xc374, 0x36bb, 0x441c, 0x1, 0x1);
        gbc.writeMem(0x214b, { 0x79 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2a06, gbc.sp());
        EXPECT(0x214c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 003C
        gbc.setState(0x7915, 0xa4f0, 0x32f0, 0x619a, 0x8b8, 0x1169, 0x1, 0x1);
        gbc.writeMem(0x7915, { 0x79 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa4f0, gbc.sp());
        EXPECT(0x7916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 003D
        gbc.setState(0xdfc8, 0x2c44, 0x960, 0x4109, 0xa7be, 0x7cd2, 0x1, 0x0);
        gbc.writeMem(0xdfc8, { 0x79 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2c44, gbc.sp());
        EXPECT(0xdfc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdfc8));
        // 79 003E
        gbc.setState(0x5ea5, 0xe10a, 0x6650, 0xfc06, 0x67e8, 0xa659, 0x1, 0x1);
        gbc.writeMem(0x5ea5, { 0x79 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe10a, gbc.sp());
        EXPECT(0x5ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 003F
        gbc.setState(0xc7e5, 0xdca6, 0x850, 0x1465, 0x3c27, 0x2b46, 0x0, 0x0);
        gbc.writeMem(0xc7e5, { 0x79 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdca6, gbc.sp());
        EXPECT(0xc7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc7e5));
        // 79 0040
        gbc.setState(0x6850, 0xdba4, 0x74d0, 0x1b29, 0xc059, 0x2e20, 0x0, 0x0);
        gbc.writeMem(0x6850, { 0x79 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdba4, gbc.sp());
        EXPECT(0x6851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0041
        gbc.setState(0x4a22, 0x8d85, 0xd090, 0x3e63, 0xf6c8, 0x1d7c, 0x0, 0x1);
        gbc.writeMem(0x4a22, { 0x79 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8d85, gbc.sp());
        EXPECT(0x4a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0042
        gbc.setState(0xb506, 0x4f5c, 0xa5f0, 0xeb3b, 0x32a0, 0xc2e7, 0x1, 0x0);
        gbc.writeMem(0xb506, { 0x79 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4f5c, gbc.sp());
        EXPECT(0xb507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb506));
        // 79 0043
        gbc.setState(0x2878, 0x56d3, 0x3e00, 0x3a04, 0xa1e4, 0x5dcd, 0x1, 0x0);
        gbc.writeMem(0x2878, { 0x79 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x56d3, gbc.sp());
        EXPECT(0x2879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0044
        gbc.setState(0x551b, 0xf6f3, 0x9340, 0xe5d0, 0xa70c, 0x5885, 0x0, 0x1);
        gbc.writeMem(0x551b, { 0x79 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf6f3, gbc.sp());
        EXPECT(0x551c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0046
        gbc.setState(0xc6cd, 0x9da, 0xa2c0, 0x3dff, 0xa828, 0x7108, 0x1, 0x1);
        gbc.writeMem(0xc6cd, { 0x79 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9da, gbc.sp());
        EXPECT(0xc6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc6cd));
        // 79 0047
        gbc.setState(0x6fd, 0xf5ab, 0xcab0, 0x7191, 0xcfc, 0xe9aa, 0x0, 0x1);
        gbc.writeMem(0x6fd, { 0x79 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf5ab, gbc.sp());
        EXPECT(0x6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0048
        gbc.setState(0x1a1c, 0x8f65, 0xe510, 0x531, 0x7e85, 0xbf68, 0x1, 0x0);
        gbc.writeMem(0x1a1c, { 0x79 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8f65, gbc.sp());
        EXPECT(0x1a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0049
        gbc.setState(0x7737, 0xefb6, 0xdea0, 0x5ac9, 0x9f89, 0x413f, 0x0, 0x0);
        gbc.writeMem(0x7737, { 0x79 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xefb6, gbc.sp());
        EXPECT(0x7738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 004A
        gbc.setState(0x7f92, 0x332b, 0xb630, 0x4faa, 0xf2ff, 0xd135, 0x0, 0x0);
        gbc.writeMem(0x7f92, { 0x79 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x332b, gbc.sp());
        EXPECT(0x7f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 004B
        gbc.setState(0xf2f, 0x228a, 0x6800, 0x234e, 0x7f1d, 0x66c5, 0x1, 0x1);
        gbc.writeMem(0xf2f, { 0x79 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x228a, gbc.sp());
        EXPECT(0xf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 004C
        gbc.setState(0x757e, 0xf3a2, 0x3e00, 0xa67b, 0x47d, 0xfc80, 0x1, 0x1);
        gbc.writeMem(0x757e, { 0x79 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf3a2, gbc.sp());
        EXPECT(0x757f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 004D
        gbc.setState(0x14ab, 0xdd51, 0xd800, 0x9da, 0xe641, 0xe495, 0x1, 0x0);
        gbc.writeMem(0x14ab, { 0x79 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdd51, gbc.sp());
        EXPECT(0x14ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 004E
        gbc.setState(0xe88c, 0xffb, 0x58d0, 0xb550, 0x6f33, 0x92a6, 0x0, 0x1);
        gbc.writeMem(0xe88c, { 0x79 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xffb, gbc.sp());
        EXPECT(0xe88d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe88c));
        // 79 0050
        gbc.setState(0x83ea, 0xb7e3, 0xdff0, 0x28c, 0xb1ae, 0xf53c, 0x0, 0x1);
        gbc.writeMem(0x83ea, { 0x79 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb7e3, gbc.sp());
        EXPECT(0x83eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x83ea));
        // 79 0051
        gbc.setState(0x77f4, 0x8aa1, 0x4420, 0x4e4f, 0xda12, 0x9590, 0x0, 0x1);
        gbc.writeMem(0x77f4, { 0x79 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8aa1, gbc.sp());
        EXPECT(0x77f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0052
        gbc.setState(0x3fcd, 0x8b73, 0x9820, 0xdb06, 0xf58, 0x5d91, 0x0, 0x0);
        gbc.writeMem(0x3fcd, { 0x79 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8b73, gbc.sp());
        EXPECT(0x3fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0053
        gbc.setState(0x4203, 0xca71, 0x24e0, 0xb29, 0x21f5, 0xaa7a, 0x0, 0x1);
        gbc.writeMem(0x4203, { 0x79 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xca71, gbc.sp());
        EXPECT(0x4204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0054
        gbc.setState(0xe864, 0xc55f, 0x57c0, 0x55e4, 0xbcb2, 0x40c8, 0x0, 0x0);
        gbc.writeMem(0xe864, { 0x79 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc55f, gbc.sp());
        EXPECT(0xe865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe864));
        // 79 0055
        gbc.setState(0x27, 0xee8d, 0x9980, 0xe263, 0xc430, 0xef8d, 0x0, 0x1);
        gbc.writeMem(0x27, { 0x79 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xee8d, gbc.sp());
        EXPECT(0x28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0056
        gbc.setState(0x82bd, 0xabba, 0x8060, 0xee1, 0x772e, 0x7e6c, 0x1, 0x1);
        gbc.writeMem(0x82bd, { 0x79 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xabba, gbc.sp());
        EXPECT(0x82be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x82bd));
        // 79 0057
        gbc.setState(0xbde7, 0x8d72, 0x9480, 0x6ca6, 0xa211, 0x5761, 0x0, 0x0);
        gbc.writeMem(0xbde7, { 0x79 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8d72, gbc.sp());
        EXPECT(0xbde8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbde7));
        // 79 0059
        gbc.setState(0xe387, 0x4b4e, 0xefe0, 0x3384, 0x3b46, 0x494a, 0x1, 0x0);
        gbc.writeMem(0xe387, { 0x79 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4b4e, gbc.sp());
        EXPECT(0xe388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe387));
        // 79 005A
        gbc.setState(0x5190, 0x50dd, 0x9060, 0x7599, 0xac3d, 0xbd14, 0x1, 0x0);
        gbc.writeMem(0x5190, { 0x79 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x50dd, gbc.sp());
        EXPECT(0x5191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 005B
        gbc.setState(0x744b, 0x4d26, 0xff60, 0xb729, 0x215a, 0x9baa, 0x0, 0x0);
        gbc.writeMem(0x744b, { 0x79 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4d26, gbc.sp());
        EXPECT(0x744c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 005C
        gbc.setState(0x68ed, 0xf33, 0x9940, 0xb74e, 0x747a, 0x11bb, 0x0, 0x1);
        gbc.writeMem(0x68ed, { 0x79 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf33, gbc.sp());
        EXPECT(0x68ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 005D
        gbc.setState(0x9e19, 0xc579, 0x12a0, 0x5e4e, 0x7817, 0x730a, 0x1, 0x0);
        gbc.writeMem(0x9e19, { 0x79 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc579, gbc.sp());
        EXPECT(0x9e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9e19));
        // 79 005E
        gbc.setState(0xc385, 0x2741, 0xd180, 0xb49b, 0xdba4, 0xf1d2, 0x0, 0x1);
        gbc.writeMem(0xc385, { 0x79 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2741, gbc.sp());
        EXPECT(0xc386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc385));
        // 79 005F
        gbc.setState(0x2757, 0xa376, 0x7930, 0x5609, 0xef38, 0xf5f, 0x0, 0x1);
        gbc.writeMem(0x2757, { 0x79 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa376, gbc.sp());
        EXPECT(0x2758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0060
        gbc.setState(0xe94d, 0xff03, 0xb2d0, 0x91f4, 0x1ac6, 0xf03f, 0x0, 0x0);
        gbc.writeMem(0xe94d, { 0x79 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xff03, gbc.sp());
        EXPECT(0xe94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe94d));
        // 79 0061
        gbc.setState(0xed3e, 0xf6dc, 0xa550, 0x223b, 0xc78, 0xf7ca, 0x0, 0x1);
        gbc.writeMem(0xed3e, { 0x79 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf6dc, gbc.sp());
        EXPECT(0xed3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xed3e));
        // 79 0062
        gbc.setState(0x3bdb, 0x66e9, 0x4470, 0x3c3e, 0x39eb, 0xc6ee, 0x0, 0x1);
        gbc.writeMem(0x3bdb, { 0x79 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x66e9, gbc.sp());
        EXPECT(0x3bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0063
        gbc.setState(0x8c90, 0x651b, 0x4610, 0xe253, 0xfd57, 0xeef2, 0x1, 0x1);
        gbc.writeMem(0x8c90, { 0x79 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x651b, gbc.sp());
        EXPECT(0x8c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8c90));
        // 79 0065
        gbc.setState(0x7f25, 0xf1bd, 0xc230, 0xc116, 0x67ba, 0x7f3e, 0x0, 0x1);
        gbc.writeMem(0x7f25, { 0x79 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf1bd, gbc.sp());
        EXPECT(0x7f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0066
        gbc.setState(0x4dbc, 0xec0a, 0x80f0, 0xe4c3, 0xeb8c, 0xcca5, 0x0, 0x0);
        gbc.writeMem(0x4dbc, { 0x79 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xec0a, gbc.sp());
        EXPECT(0x4dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0067
        gbc.setState(0x445a, 0xf5d9, 0xbd0, 0x5668, 0x3834, 0x565e, 0x1, 0x1);
        gbc.writeMem(0x445a, { 0x79 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf5d9, gbc.sp());
        EXPECT(0x445b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0068
        gbc.setState(0x492a, 0xf5e0, 0xaac0, 0x5c3, 0xa4cc, 0x153b, 0x1, 0x0);
        gbc.writeMem(0x492a, { 0x79 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf5e0, gbc.sp());
        EXPECT(0x492b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0069
        gbc.setState(0x3646, 0x546, 0x7e40, 0xd805, 0xc994, 0xddeb, 0x0, 0x1);
        gbc.writeMem(0x3646, { 0x79 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x546, gbc.sp());
        EXPECT(0x3647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 006A
        gbc.setState(0xc4e6, 0xd5c1, 0x4840, 0xb3ed, 0x305b, 0xfd4a, 0x1, 0x1);
        gbc.writeMem(0xc4e6, { 0x79 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd5c1, gbc.sp());
        EXPECT(0xc4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc4e6));
        // 79 006B
        gbc.setState(0xc676, 0xac85, 0x29a0, 0xb3f9, 0xaea0, 0x383e, 0x1, 0x0);
        gbc.writeMem(0xc676, { 0x79 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xac85, gbc.sp());
        EXPECT(0xc677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc676));
        // 79 006C
        gbc.setState(0x35a, 0x13de, 0x6fc0, 0x5ee5, 0x25f1, 0x7d7e, 0x0, 0x1);
        gbc.writeMem(0x35a, { 0x79 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x13de, gbc.sp());
        EXPECT(0x35b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 006D
        gbc.setState(0xc9e9, 0xaef3, 0x5450, 0xf113, 0xc401, 0x5e1e, 0x1, 0x0);
        gbc.writeMem(0xc9e9, { 0x79 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xaef3, gbc.sp());
        EXPECT(0xc9ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc9e9));
        // 79 006E
        gbc.setState(0xb0, 0x3aac, 0x9cb0, 0xa5bc, 0xa098, 0x69f8, 0x0, 0x0);
        gbc.writeMem(0xb0, { 0x79 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3aac, gbc.sp());
        EXPECT(0xb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0070
        gbc.setState(0xa6a0, 0x690e, 0x950, 0xa28, 0x8839, 0xce23, 0x1, 0x0);
        gbc.writeMem(0xa6a0, { 0x79 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x690e, gbc.sp());
        EXPECT(0xa6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa6a0));
        // 79 0072
        gbc.setState(0xae70, 0x4e9b, 0x6700, 0x6cc, 0x27b6, 0xda83, 0x1, 0x1);
        gbc.writeMem(0xae70, { 0x79 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4e9b, gbc.sp());
        EXPECT(0xae71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xae70));
        // 79 0073
        gbc.setState(0x50b7, 0x6dce, 0xafb0, 0xdb59, 0x1fa8, 0x4c4b, 0x0, 0x0);
        gbc.writeMem(0x50b7, { 0x79 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6dce, gbc.sp());
        EXPECT(0x50b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0075
        gbc.setState(0xee9e, 0x59df, 0xf830, 0x189b, 0xa9a2, 0x3a0c, 0x1, 0x0);
        gbc.writeMem(0xee9e, { 0x79 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x59df, gbc.sp());
        EXPECT(0xee9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xee9e));
        // 79 0076
        gbc.setState(0x8c48, 0xfa50, 0x68a0, 0xc4b9, 0x1483, 0x2930, 0x1, 0x1);
        gbc.writeMem(0x8c48, { 0x79 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfa50, gbc.sp());
        EXPECT(0x8c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8c48));
        // 79 0077
        gbc.setState(0xb13a, 0xd896, 0xdc50, 0xf58c, 0x7da0, 0x9f77, 0x1, 0x1);
        gbc.writeMem(0xb13a, { 0x79 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd896, gbc.sp());
        EXPECT(0xb13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb13a));
        // 79 0078
        gbc.setState(0x9601, 0x3f0b, 0x120, 0x903f, 0x45d4, 0x55c5, 0x1, 0x0);
        gbc.writeMem(0x9601, { 0x79 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3f0b, gbc.sp());
        EXPECT(0x9602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9601));
        // 79 0079
        gbc.setState(0xa481, 0x7d5, 0x9920, 0x5860, 0xb375, 0x726e, 0x0, 0x0);
        gbc.writeMem(0xa481, { 0x79 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7d5, gbc.sp());
        EXPECT(0xa482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa481));
        // 79 007A
        gbc.setState(0xe62c, 0xfd5, 0x83a0, 0x1f0e, 0x9a7f, 0x93a5, 0x1, 0x0);
        gbc.writeMem(0xe62c, { 0x79 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfd5, gbc.sp());
        EXPECT(0xe62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe62c));
        // 79 007B
        gbc.setState(0x2b57, 0x65f6, 0xb8a0, 0xb753, 0x8620, 0x2b2e, 0x1, 0x0);
        gbc.writeMem(0x2b57, { 0x79 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x65f6, gbc.sp());
        EXPECT(0x2b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 007C
        gbc.setState(0xd2d1, 0xfb14, 0x350, 0x6aa6, 0xe711, 0x5ad2, 0x0, 0x1);
        gbc.writeMem(0xd2d1, { 0x79 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfb14, gbc.sp());
        EXPECT(0xd2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd2d1));
        // 79 007D
        gbc.setState(0x42c6, 0x1dca, 0x3830, 0x23d3, 0x8b29, 0x5724, 0x0, 0x0);
        gbc.writeMem(0x42c6, { 0x79 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1dca, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 007E
        gbc.setState(0xab55, 0x6c37, 0xb800, 0x3c23, 0xf84d, 0xc8c0, 0x0, 0x1);
        gbc.writeMem(0xab55, { 0x79 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6c37, gbc.sp());
        EXPECT(0xab56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xab55));
        // 79 007F
        gbc.setState(0x6ae1, 0xf09a, 0xded0, 0xf705, 0x247, 0x36ac, 0x0, 0x0);
        gbc.writeMem(0x6ae1, { 0x79 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf09a, gbc.sp());
        EXPECT(0x6ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0080
        gbc.setState(0xacbe, 0x91cf, 0xdcb0, 0xd1ad, 0xf242, 0xdcd9, 0x0, 0x0);
        gbc.writeMem(0xacbe, { 0x79 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x91cf, gbc.sp());
        EXPECT(0xacbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xacbe));
        // 79 0081
        gbc.setState(0x6074, 0xd2ee, 0xf310, 0x3110, 0xc980, 0x2398, 0x0, 0x0);
        gbc.writeMem(0x6074, { 0x79 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd2ee, gbc.sp());
        EXPECT(0x6075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0082
        gbc.setState(0x85e2, 0x5db, 0xeba0, 0x3b51, 0xcb92, 0x1305, 0x1, 0x0);
        gbc.writeMem(0x85e2, { 0x79 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5db, gbc.sp());
        EXPECT(0x85e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x85e2));
        // 79 0083
        gbc.setState(0xe455, 0x57c4, 0x4330, 0x31b0, 0x8265, 0xb27f, 0x1, 0x0);
        gbc.writeMem(0xe455, { 0x79 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x57c4, gbc.sp());
        EXPECT(0xe456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe455));
        // 79 0084
        gbc.setState(0x1612, 0x19c2, 0x2b0, 0x8f22, 0xe1cb, 0x6430, 0x1, 0x1);
        gbc.writeMem(0x1612, { 0x79 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x19c2, gbc.sp());
        EXPECT(0x1613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0085
        gbc.setState(0x8f9e, 0x14f0, 0xc2c0, 0xcd64, 0x50ff, 0x603d, 0x1, 0x1);
        gbc.writeMem(0x8f9e, { 0x79 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x14f0, gbc.sp());
        EXPECT(0x8f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8f9e));
        // 79 0086
        gbc.setState(0xeb0c, 0x46cc, 0x5f60, 0x849a, 0x54cf, 0xdd62, 0x1, 0x0);
        gbc.writeMem(0xeb0c, { 0x79 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x46cc, gbc.sp());
        EXPECT(0xeb0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeb0c));
        // 79 0087
        gbc.setState(0xc70b, 0x783b, 0x5650, 0x9650, 0xf8a9, 0x94cd, 0x1, 0x1);
        gbc.writeMem(0xc70b, { 0x79 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x783b, gbc.sp());
        EXPECT(0xc70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc70b));
        // 79 0088
        gbc.setState(0x339e, 0x539a, 0x8d90, 0xcc49, 0x2dba, 0xeb6b, 0x1, 0x0);
        gbc.writeMem(0x339e, { 0x79 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x539a, gbc.sp());
        EXPECT(0x339f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0089
        gbc.setState(0x9b51, 0x6d30, 0xdf90, 0x6c99, 0x378d, 0x7df4, 0x1, 0x0);
        gbc.writeMem(0x9b51, { 0x79 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6d30, gbc.sp());
        EXPECT(0x9b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9b51));
        // 79 008A
        gbc.setState(0xc455, 0x51c4, 0x99e0, 0x766b, 0xf2b5, 0x5c80, 0x1, 0x1);
        gbc.writeMem(0xc455, { 0x79 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x51c4, gbc.sp());
        EXPECT(0xc456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc455));
        // 79 008B
        gbc.setState(0x4f48, 0xd4cb, 0xf80, 0x3bb4, 0x2770, 0x3496, 0x0, 0x0);
        gbc.writeMem(0x4f48, { 0x79 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd4cb, gbc.sp());
        EXPECT(0x4f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 008C
        gbc.setState(0xcde1, 0x8f40, 0xf7f0, 0xeb36, 0x621f, 0x6f96, 0x0, 0x1);
        gbc.writeMem(0xcde1, { 0x79 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8f40, gbc.sp());
        EXPECT(0xcde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcde1));
        // 79 008D
        gbc.setState(0x6864, 0x8cc9, 0x96f0, 0x33a7, 0x471b, 0xd6bc, 0x0, 0x1);
        gbc.writeMem(0x6864, { 0x79 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8cc9, gbc.sp());
        EXPECT(0x6865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 008E
        gbc.setState(0x6279, 0xd203, 0xd110, 0xd8dd, 0x436e, 0x7c04, 0x1, 0x1);
        gbc.writeMem(0x6279, { 0x79 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd203, gbc.sp());
        EXPECT(0x627a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 008F
        gbc.setState(0x11f9, 0x8744, 0x1ce0, 0x8440, 0x49f2, 0xb0a1, 0x1, 0x0);
        gbc.writeMem(0x11f9, { 0x79 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8744, gbc.sp());
        EXPECT(0x11fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0090
        gbc.setState(0x2907, 0x2161, 0x3cc0, 0xc9a9, 0x723c, 0x3b04, 0x0, 0x0);
        gbc.writeMem(0x2907, { 0x79 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2161, gbc.sp());
        EXPECT(0x2908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0091
        gbc.setState(0x16bf, 0x8b5a, 0x56c0, 0xf2d8, 0xa04a, 0x6385, 0x0, 0x0);
        gbc.writeMem(0x16bf, { 0x79 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8b5a, gbc.sp());
        EXPECT(0x16c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0092
        gbc.setState(0x8bed, 0x8d0c, 0xd7b0, 0xdd21, 0x93ae, 0x5a83, 0x0, 0x0);
        gbc.writeMem(0x8bed, { 0x79 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8d0c, gbc.sp());
        EXPECT(0x8bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8bed));
        // 79 0094
        gbc.setState(0xbc63, 0x3e94, 0xa4c0, 0xd90f, 0x2033, 0x5fe8, 0x1, 0x0);
        gbc.writeMem(0xbc63, { 0x79 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3e94, gbc.sp());
        EXPECT(0xbc64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbc63));
        // 79 0095
        gbc.setState(0xb33b, 0x7096, 0x3a60, 0x4485, 0xa9be, 0xf589, 0x1, 0x1);
        gbc.writeMem(0xb33b, { 0x79 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7096, gbc.sp());
        EXPECT(0xb33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb33b));
        // 79 0096
        gbc.setState(0xa576, 0xe1f6, 0xaf50, 0xb583, 0xa4d8, 0x4745, 0x1, 0x0);
        gbc.writeMem(0xa576, { 0x79 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe1f6, gbc.sp());
        EXPECT(0xa577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa576));
        // 79 0097
        gbc.setState(0x137f, 0x53c5, 0xfaa0, 0x9318, 0x679c, 0xb76b, 0x1, 0x1);
        gbc.writeMem(0x137f, { 0x79 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x53c5, gbc.sp());
        EXPECT(0x1380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0098
        gbc.setState(0xd97a, 0xa98a, 0x9fa0, 0x7772, 0xb62a, 0x7839, 0x0, 0x0);
        gbc.writeMem(0xd97a, { 0x79 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa98a, gbc.sp());
        EXPECT(0xd97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd97a));
        // 79 0099
        gbc.setState(0x2b1e, 0xda1a, 0xd070, 0xae2a, 0xc9f1, 0x3169, 0x1, 0x0);
        gbc.writeMem(0x2b1e, { 0x79 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xda1a, gbc.sp());
        EXPECT(0x2b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 009A
        gbc.setState(0xb3aa, 0x9835, 0xd0e0, 0xe816, 0xe724, 0xc63, 0x1, 0x0);
        gbc.writeMem(0xb3aa, { 0x79 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9835, gbc.sp());
        EXPECT(0xb3ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb3aa));
        // 79 009C
        gbc.setState(0x9ae0, 0x2007, 0x18b0, 0xd5fb, 0x31d5, 0xd503, 0x1, 0x1);
        gbc.writeMem(0x9ae0, { 0x79 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2007, gbc.sp());
        EXPECT(0x9ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9ae0));
        // 79 009D
        gbc.setState(0x4daa, 0xdd1e, 0xc8d0, 0x684f, 0x2225, 0xb748, 0x0, 0x0);
        gbc.writeMem(0x4daa, { 0x79 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdd1e, gbc.sp());
        EXPECT(0x4dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 009E
        gbc.setState(0x83d, 0xebbf, 0x67b0, 0xfddc, 0xca21, 0xf4c3, 0x1, 0x0);
        gbc.writeMem(0x83d, { 0x79 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xebbf, gbc.sp());
        EXPECT(0x83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 009F
        gbc.setState(0x12c7, 0x7c68, 0xf5e0, 0x3737, 0xade, 0xb3b0, 0x1, 0x1);
        gbc.writeMem(0x12c7, { 0x79 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7c68, gbc.sp());
        EXPECT(0x12c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00A0
        gbc.setState(0x5a12, 0xd1d3, 0xfc90, 0x3659, 0x6028, 0xd12f, 0x1, 0x0);
        gbc.writeMem(0x5a12, { 0x79 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd1d3, gbc.sp());
        EXPECT(0x5a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00A1
        gbc.setState(0x8710, 0x1de5, 0xd340, 0xf937, 0x5aee, 0x51c6, 0x0, 0x0);
        gbc.writeMem(0x8710, { 0x79 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1de5, gbc.sp());
        EXPECT(0x8711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8710));
        // 79 00A2
        gbc.setState(0x3f2c, 0x39e1, 0xcd90, 0xf4fc, 0xd264, 0x9f25, 0x0, 0x0);
        gbc.writeMem(0x3f2c, { 0x79 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x39e1, gbc.sp());
        EXPECT(0x3f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00A3
        gbc.setState(0x88b9, 0xa2cc, 0x3440, 0xb01e, 0xcd87, 0x9ae2, 0x1, 0x0);
        gbc.writeMem(0x88b9, { 0x79 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa2cc, gbc.sp());
        EXPECT(0x88ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x88b9));
        // 79 00A4
        gbc.setState(0xe1c8, 0x7ecd, 0x9100, 0xb86c, 0x5746, 0xefd1, 0x0, 0x1);
        gbc.writeMem(0xe1c8, { 0x79 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7ecd, gbc.sp());
        EXPECT(0xe1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe1c8));
        // 79 00A5
        gbc.setState(0x70a9, 0x3407, 0x7dc0, 0x21f7, 0xaed3, 0x40c, 0x1, 0x0);
        gbc.writeMem(0x70a9, { 0x79 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3407, gbc.sp());
        EXPECT(0x70aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00A6
        gbc.setState(0x7025, 0xf50d, 0x3bf0, 0xc865, 0x15d3, 0xb64b, 0x0, 0x0);
        gbc.writeMem(0x7025, { 0x79 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf50d, gbc.sp());
        EXPECT(0x7026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00A7
        gbc.setState(0xab02, 0x303d, 0x8bf0, 0x6da8, 0xad6f, 0xf2c8, 0x0, 0x1);
        gbc.writeMem(0xab02, { 0x79 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x303d, gbc.sp());
        EXPECT(0xab03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xab02));
        // 79 00A8
        gbc.setState(0x2c6a, 0x352b, 0xedb0, 0xbb78, 0xa806, 0xf11d, 0x1, 0x0);
        gbc.writeMem(0x2c6a, { 0x79 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x352b, gbc.sp());
        EXPECT(0x2c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00A9
        gbc.setState(0xaa7d, 0xdb6a, 0x4800, 0xad, 0x4cc0, 0xaab5, 0x1, 0x0);
        gbc.writeMem(0xaa7d, { 0x79 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdb6a, gbc.sp());
        EXPECT(0xaa7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xaa7d));
        // 79 00AA
        gbc.setState(0x8475, 0xa0d4, 0xb750, 0xa53a, 0x4954, 0xed1a, 0x1, 0x1);
        gbc.writeMem(0x8475, { 0x79 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa0d4, gbc.sp());
        EXPECT(0x8476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8475));
        // 79 00AB
        gbc.setState(0xcaf7, 0xdcfc, 0x5ba0, 0x665e, 0x3d1c, 0x2b04, 0x1, 0x0);
        gbc.writeMem(0xcaf7, { 0x79 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdcfc, gbc.sp());
        EXPECT(0xcaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcaf7));
        // 79 00AC
        gbc.setState(0x44de, 0xab86, 0xcfe0, 0x45d4, 0xd519, 0xee9d, 0x1, 0x0);
        gbc.writeMem(0x44de, { 0x79 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xab86, gbc.sp());
        EXPECT(0x44df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00AD
        gbc.setState(0x789c, 0xd70a, 0x95f0, 0x3cb4, 0x1f6, 0x7f89, 0x0, 0x1);
        gbc.writeMem(0x789c, { 0x79 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd70a, gbc.sp());
        EXPECT(0x789d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00AE
        gbc.setState(0xc70, 0x5752, 0xbb60, 0x32, 0x8ecb, 0x19fe, 0x0, 0x0);
        gbc.writeMem(0xc70, { 0x79 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5752, gbc.sp());
        EXPECT(0xc71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00AF
        gbc.setState(0x947, 0xd90f, 0xebd0, 0xf6b4, 0x5a70, 0x1212, 0x0, 0x1);
        gbc.writeMem(0x947, { 0x79 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd90f, gbc.sp());
        EXPECT(0x948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00B0
        gbc.setState(0x5557, 0x323e, 0x76c0, 0xef3d, 0xaa60, 0x7ec1, 0x0, 0x1);
        gbc.writeMem(0x5557, { 0x79 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x323e, gbc.sp());
        EXPECT(0x5558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00B1
        gbc.setState(0x2425, 0x8526, 0xdc50, 0xddd2, 0x6cdb, 0xd562, 0x0, 0x0);
        gbc.writeMem(0x2425, { 0x79 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8526, gbc.sp());
        EXPECT(0x2426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00B2
        gbc.setState(0x9388, 0x6aa8, 0xbc10, 0xb926, 0x57aa, 0x320d, 0x1, 0x0);
        gbc.writeMem(0x9388, { 0x79 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6aa8, gbc.sp());
        EXPECT(0x9389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9388));
        // 79 00B3
        gbc.setState(0x8b63, 0x3d16, 0x8f90, 0xc256, 0x19f6, 0x435b, 0x1, 0x1);
        gbc.writeMem(0x8b63, { 0x79 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3d16, gbc.sp());
        EXPECT(0x8b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8b63));
        // 79 00B4
        gbc.setState(0xd7ca, 0xca77, 0xd4f0, 0xbdc2, 0xefa8, 0xb6af, 0x1, 0x0);
        gbc.writeMem(0xd7ca, { 0x79 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xca77, gbc.sp());
        EXPECT(0xd7cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd7ca));
        // 79 00B5
        gbc.setState(0x13b0, 0xbe16, 0x9b00, 0x246d, 0x24d9, 0x64c9, 0x1, 0x1);
        gbc.writeMem(0x13b0, { 0x79 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbe16, gbc.sp());
        EXPECT(0x13b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00B6
        gbc.setState(0x28d0, 0xd825, 0xb730, 0x2607, 0x968d, 0xe00f, 0x0, 0x0);
        gbc.writeMem(0x28d0, { 0x79 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd825, gbc.sp());
        EXPECT(0x28d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00B7
        gbc.setState(0x98cd, 0x860f, 0xa3e0, 0xb195, 0x4ea3, 0x88be, 0x0, 0x0);
        gbc.writeMem(0x98cd, { 0x79 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x860f, gbc.sp());
        EXPECT(0x98ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x98cd));
        // 79 00B8
        gbc.setState(0xb130, 0xfa9d, 0x8ec0, 0x7ea5, 0x6084, 0x729e, 0x1, 0x0);
        gbc.writeMem(0xb130, { 0x79 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0xb131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb130));
        // 79 00B9
        gbc.setState(0xb58a, 0xd34d, 0x7e60, 0xa04b, 0x16e4, 0x2e44, 0x0, 0x1);
        gbc.writeMem(0xb58a, { 0x79 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd34d, gbc.sp());
        EXPECT(0xb58b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb58a));
        // 79 00BA
        gbc.setState(0xd360, 0xff2b, 0x9e0, 0x6b0c, 0xa356, 0x6d5a, 0x0, 0x1);
        gbc.writeMem(0xd360, { 0x79 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xff2b, gbc.sp());
        EXPECT(0xd361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd360));
        // 79 00BB
        gbc.setState(0x487, 0x52eb, 0x6d20, 0xa552, 0xfbd3, 0xa97d, 0x1, 0x0);
        gbc.writeMem(0x487, { 0x79 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x52eb, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00BC
        gbc.setState(0xc8ad, 0x8798, 0xb400, 0xd978, 0x6396, 0xb6f9, 0x0, 0x1);
        gbc.writeMem(0xc8ad, { 0x79 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8798, gbc.sp());
        EXPECT(0xc8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc8ad));
        // 79 00BD
        gbc.setState(0xa157, 0xcb70, 0xb800, 0x5cb6, 0xda4c, 0xf798, 0x1, 0x0);
        gbc.writeMem(0xa157, { 0x79 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcb70, gbc.sp());
        EXPECT(0xa158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa157));
        // 79 00BE
        gbc.setState(0x157d, 0xf0be, 0xf50, 0x507a, 0x4ce1, 0xc83a, 0x0, 0x1);
        gbc.writeMem(0x157d, { 0x79 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf0be, gbc.sp());
        EXPECT(0x157e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00BF
        gbc.setState(0xcd5e, 0xe1d3, 0x4330, 0xd9d4, 0xa637, 0x29d, 0x0, 0x0);
        gbc.writeMem(0xcd5e, { 0x79 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe1d3, gbc.sp());
        EXPECT(0xcd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcd5e));
        // 79 00C1
        gbc.setState(0x6a93, 0x1263, 0x2110, 0xbe26, 0xb04b, 0x312f, 0x0, 0x1);
        gbc.writeMem(0x6a93, { 0x79 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1263, gbc.sp());
        EXPECT(0x6a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00C2
        gbc.setState(0x9144, 0x8014, 0xed60, 0xd18d, 0xa1c1, 0x58d6, 0x1, 0x0);
        gbc.writeMem(0x9144, { 0x79 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8014, gbc.sp());
        EXPECT(0x9145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9144));
        // 79 00C3
        gbc.setState(0x19aa, 0x6494, 0xf030, 0xa759, 0x8677, 0x18ce, 0x1, 0x1);
        gbc.writeMem(0x19aa, { 0x79 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6494, gbc.sp());
        EXPECT(0x19ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00C5
        gbc.setState(0x322e, 0xb80b, 0x6810, 0x22bd, 0xf012, 0xcd1, 0x1, 0x1);
        gbc.writeMem(0x322e, { 0x79 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb80b, gbc.sp());
        EXPECT(0x322f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00C6
        gbc.setState(0x2132, 0x1660, 0xc590, 0x62c3, 0xeb83, 0x86d8, 0x1, 0x1);
        gbc.writeMem(0x2132, { 0x79 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1660, gbc.sp());
        EXPECT(0x2133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00C7
        gbc.setState(0x53cc, 0x494c, 0x7250, 0xa4f1, 0x8bad, 0xc9b2, 0x0, 0x0);
        gbc.writeMem(0x53cc, { 0x79 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x494c, gbc.sp());
        EXPECT(0x53cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00C8
        gbc.setState(0x20b4, 0xe1f, 0x4840, 0xc9f1, 0xda86, 0x4dd2, 0x1, 0x0);
        gbc.writeMem(0x20b4, { 0x79 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe1f, gbc.sp());
        EXPECT(0x20b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00C9
        gbc.setState(0xc7da, 0x43b1, 0x6860, 0x8a5e, 0x7f33, 0x9254, 0x1, 0x1);
        gbc.writeMem(0xc7da, { 0x79 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x43b1, gbc.sp());
        EXPECT(0xc7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc7da));
        // 79 00CA
        gbc.setState(0xeb95, 0xac10, 0xd920, 0xbc32, 0xfa80, 0x93f5, 0x0, 0x1);
        gbc.writeMem(0xeb95, { 0x79 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xac10, gbc.sp());
        EXPECT(0xeb96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeb95));
        // 79 00CB
        gbc.setState(0xe39f, 0x7b92, 0x3fa0, 0x1152, 0xb3f0, 0x622f, 0x1, 0x0);
        gbc.writeMem(0xe39f, { 0x79 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7b92, gbc.sp());
        EXPECT(0xe3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe39f));
        // 79 00CC
        gbc.setState(0x2360, 0x5f20, 0xb5b0, 0x9dc5, 0xbbe2, 0x3522, 0x0, 0x0);
        gbc.writeMem(0x2360, { 0x79 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5f20, gbc.sp());
        EXPECT(0x2361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00CD
        gbc.setState(0x53b5, 0xa46c, 0x5780, 0xb7e9, 0x1407, 0xa189, 0x0, 0x0);
        gbc.writeMem(0x53b5, { 0x79 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa46c, gbc.sp());
        EXPECT(0x53b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00CE
        gbc.setState(0x5b51, 0x710b, 0xe5e0, 0xd82b, 0x9bc9, 0x23a5, 0x1, 0x0);
        gbc.writeMem(0x5b51, { 0x79 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x710b, gbc.sp());
        EXPECT(0x5b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00CF
        gbc.setState(0x8693, 0x26ea, 0x7e0, 0x5cad, 0x33b8, 0x5a9d, 0x1, 0x1);
        gbc.writeMem(0x8693, { 0x79 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x26ea, gbc.sp());
        EXPECT(0x8694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8693));
        // 79 00D0
        gbc.setState(0x68a, 0xc9d5, 0xe620, 0xe0e7, 0x737b, 0xfb74, 0x0, 0x1);
        gbc.writeMem(0x68a, { 0x79 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc9d5, gbc.sp());
        EXPECT(0x68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00D1
        gbc.setState(0x43f0, 0xf757, 0xfb0, 0x7612, 0xc5a, 0x66a9, 0x0, 0x1);
        gbc.writeMem(0x43f0, { 0x79 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf757, gbc.sp());
        EXPECT(0x43f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00D2
        gbc.setState(0xd77b, 0xf474, 0xc970, 0xddd4, 0x3a4b, 0xadd9, 0x0, 0x0);
        gbc.writeMem(0xd77b, { 0x79 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf474, gbc.sp());
        EXPECT(0xd77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd77b));
        // 79 00D3
        gbc.setState(0xa2fb, 0xf911, 0x8ff0, 0x6aaf, 0x6d77, 0x89d3, 0x0, 0x1);
        gbc.writeMem(0xa2fb, { 0x79 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf911, gbc.sp());
        EXPECT(0xa2fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa2fb));
        // 79 00D4
        gbc.setState(0x101, 0xf671, 0xb000, 0xef8, 0x39b1, 0x825e, 0x0, 0x0);
        gbc.writeMem(0x101, { 0x79 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf671, gbc.sp());
        EXPECT(0x102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00D5
        gbc.setState(0x37d2, 0x1a96, 0x16a0, 0x5be8, 0x6811, 0xf03d, 0x0, 0x0);
        gbc.writeMem(0x37d2, { 0x79 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1a96, gbc.sp());
        EXPECT(0x37d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00D6
        gbc.setState(0x46a2, 0x56bb, 0xb050, 0x24b6, 0x3a78, 0x9483, 0x0, 0x1);
        gbc.writeMem(0x46a2, { 0x79 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x56bb, gbc.sp());
        EXPECT(0x46a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00D7
        gbc.setState(0x9e4f, 0x620c, 0x88c0, 0x818d, 0xff49, 0xac0a, 0x0, 0x1);
        gbc.writeMem(0x9e4f, { 0x79 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x620c, gbc.sp());
        EXPECT(0x9e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9e4f));
        // 79 00D8
        gbc.setState(0x4fbc, 0x9019, 0xcd0, 0x68b7, 0x45b, 0x31de, 0x0, 0x0);
        gbc.writeMem(0x4fbc, { 0x79 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9019, gbc.sp());
        EXPECT(0x4fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00D9
        gbc.setState(0xb256, 0xffe0, 0xe060, 0x794d, 0xb1f3, 0x2bf8, 0x1, 0x0);
        gbc.writeMem(0xb256, { 0x79 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xffe0, gbc.sp());
        EXPECT(0xb257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb256));
        // 79 00DA
        gbc.setState(0x439b, 0x82a4, 0xc000, 0x737a, 0xca6, 0xd019, 0x1, 0x1);
        gbc.writeMem(0x439b, { 0x79 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x82a4, gbc.sp());
        EXPECT(0x439c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00DB
        gbc.setState(0x4058, 0x3653, 0x18b0, 0x24e3, 0x8d80, 0x9d45, 0x0, 0x1);
        gbc.writeMem(0x4058, { 0x79 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3653, gbc.sp());
        EXPECT(0x4059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00DC
        gbc.setState(0x4f85, 0xd2e8, 0x8c10, 0x66f1, 0x68dc, 0x4b53, 0x0, 0x0);
        gbc.writeMem(0x4f85, { 0x79 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd2e8, gbc.sp());
        EXPECT(0x4f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00DD
        gbc.setState(0x4c69, 0x9b63, 0xa7f0, 0x231d, 0xf88e, 0x1951, 0x1, 0x0);
        gbc.writeMem(0x4c69, { 0x79 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9b63, gbc.sp());
        EXPECT(0x4c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00DE
        gbc.setState(0xdb51, 0x609d, 0xeae0, 0x3dd5, 0x95bf, 0x64c3, 0x0, 0x0);
        gbc.writeMem(0xdb51, { 0x79 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x609d, gbc.sp());
        EXPECT(0xdb52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdb51));
        // 79 00DF
        gbc.setState(0x4bb5, 0x518c, 0x6540, 0x5d3e, 0x1777, 0x213b, 0x0, 0x1);
        gbc.writeMem(0x4bb5, { 0x79 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x518c, gbc.sp());
        EXPECT(0x4bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00E0
        gbc.setState(0xd081, 0x9201, 0x9880, 0x4459, 0x531c, 0x2046, 0x1, 0x1);
        gbc.writeMem(0xd081, { 0x79 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9201, gbc.sp());
        EXPECT(0xd082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd081));
        // 79 00E1
        gbc.setState(0x60e, 0x23f0, 0x6200, 0x9885, 0x64c6, 0xd586, 0x0, 0x0);
        gbc.writeMem(0x60e, { 0x79 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x23f0, gbc.sp());
        EXPECT(0x60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00E2
        gbc.setState(0xefd7, 0x8ba6, 0xe380, 0x16e, 0x4293, 0x2916, 0x1, 0x0);
        gbc.writeMem(0xefd7, { 0x79 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8ba6, gbc.sp());
        EXPECT(0xefd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xefd7));
        // 79 00E3
        gbc.setState(0x2d13, 0x1026, 0x7210, 0x6327, 0x6ab, 0x1f04, 0x0, 0x0);
        gbc.writeMem(0x2d13, { 0x79 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1026, gbc.sp());
        EXPECT(0x2d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00E4
        gbc.setState(0x8a33, 0x25e, 0x1d70, 0x4dbd, 0xa844, 0x9475, 0x0, 0x1);
        gbc.writeMem(0x8a33, { 0x79 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x25e, gbc.sp());
        EXPECT(0x8a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8a33));
        // 79 00E5
        gbc.setState(0xb079, 0xe0af, 0xf7e0, 0x38f9, 0x958d, 0x1641, 0x0, 0x0);
        gbc.writeMem(0xb079, { 0x79 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe0af, gbc.sp());
        EXPECT(0xb07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb079));
        // 79 00E7
        gbc.setState(0x1875, 0xd834, 0x6290, 0x317e, 0x8c80, 0xd85e, 0x0, 0x1);
        gbc.writeMem(0x1875, { 0x79 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd834, gbc.sp());
        EXPECT(0x1876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00E8
        gbc.setState(0x7d2c, 0xd531, 0x5650, 0x252a, 0xcaf7, 0x7402, 0x1, 0x1);
        gbc.writeMem(0x7d2c, { 0x79 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd531, gbc.sp());
        EXPECT(0x7d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00E9
        gbc.setState(0xe177, 0xdda1, 0x87c0, 0x53f, 0xc95d, 0x5b79, 0x0, 0x1);
        gbc.writeMem(0xe177, { 0x79 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdda1, gbc.sp());
        EXPECT(0xe178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe177));
        // 79 00EA
        gbc.setState(0x38bd, 0x2a82, 0x79c0, 0x9ccd, 0x5d31, 0xc6d5, 0x1, 0x0);
        gbc.writeMem(0x38bd, { 0x79 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2a82, gbc.sp());
        EXPECT(0x38be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00EC
        gbc.setState(0x5356, 0x4a7d, 0x61e0, 0x2ccf, 0xe884, 0x80b0, 0x0, 0x1);
        gbc.writeMem(0x5356, { 0x79 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4a7d, gbc.sp());
        EXPECT(0x5357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00ED
        gbc.setState(0x8aaa, 0x5f78, 0xa260, 0xaae, 0x23f0, 0x1051, 0x0, 0x0);
        gbc.writeMem(0x8aaa, { 0x79 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5f78, gbc.sp());
        EXPECT(0x8aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8aaa));
        // 79 00EE
        gbc.setState(0x3167, 0xd03f, 0xca20, 0xe48f, 0x679a, 0xece2, 0x0, 0x1);
        gbc.writeMem(0x3167, { 0x79 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd03f, gbc.sp());
        EXPECT(0x3168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00EF
        gbc.setState(0x5388, 0x399f, 0x1900, 0x4505, 0xe5ca, 0xa0a3, 0x1, 0x1);
        gbc.writeMem(0x5388, { 0x79 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x399f, gbc.sp());
        EXPECT(0x5389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00F0
        gbc.setState(0xa64e, 0xd781, 0xd260, 0xad4d, 0xd1a8, 0x76b2, 0x0, 0x1);
        gbc.writeMem(0xa64e, { 0x79 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd781, gbc.sp());
        EXPECT(0xa64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa64e));
        // 79 00F1
        gbc.setState(0xd497, 0xa04a, 0x9760, 0x6f24, 0x4aa9, 0x983d, 0x1, 0x1);
        gbc.writeMem(0xd497, { 0x79 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa04a, gbc.sp());
        EXPECT(0xd498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd497));
        // 79 00F2
        gbc.setState(0x21a5, 0x1eab, 0xef0, 0x4d45, 0x8ae2, 0x22f3, 0x1, 0x0);
        gbc.writeMem(0x21a5, { 0x79 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1eab, gbc.sp());
        EXPECT(0x21a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00F3
        gbc.setState(0xd02d, 0x4c82, 0xa60, 0x8b93, 0xa900, 0xd345, 0x1, 0x0);
        gbc.writeMem(0xd02d, { 0x79 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4c82, gbc.sp());
        EXPECT(0xd02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd02d));
        // 79 00F4
        gbc.setState(0xda00, 0x9062, 0x7090, 0x95d4, 0xfc3e, 0x5a6d, 0x0, 0x0);
        gbc.writeMem(0xda00, { 0x79 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9062, gbc.sp());
        EXPECT(0xda01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xda00));
        // 79 00F5
        gbc.setState(0xd792, 0xecb9, 0x5760, 0x3c5, 0x1b7d, 0x1f60, 0x0, 0x1);
        gbc.writeMem(0xd792, { 0x79 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xecb9, gbc.sp());
        EXPECT(0xd793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd792));
        // 79 00F6
        gbc.setState(0x93e8, 0xb842, 0x77a0, 0x8701, 0x495d, 0xf35a, 0x1, 0x1);
        gbc.writeMem(0x93e8, { 0x79 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb842, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x93e8));
        // 79 00F7
        gbc.setState(0xebf4, 0xc907, 0x58c0, 0xf438, 0x4446, 0xb52a, 0x1, 0x1);
        gbc.writeMem(0xebf4, { 0x79 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc907, gbc.sp());
        EXPECT(0xebf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xebf4));
        // 79 00F8
        gbc.setState(0x47b9, 0x308b, 0xe340, 0xe08a, 0x44ea, 0x2ed7, 0x1, 0x1);
        gbc.writeMem(0x47b9, { 0x79 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x308b, gbc.sp());
        EXPECT(0x47ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00F9
        gbc.setState(0x434f, 0xe859, 0xd1a0, 0xf13a, 0xca49, 0x4d68, 0x1, 0x1);
        gbc.writeMem(0x434f, { 0x79 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe859, gbc.sp());
        EXPECT(0x4350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00FA
        gbc.setState(0x67fe, 0xb565, 0x7760, 0x8684, 0xbebc, 0x1228, 0x1, 0x1);
        gbc.writeMem(0x67fe, { 0x79 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb565, gbc.sp());
        EXPECT(0x67ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00FB
        gbc.setState(0x4535, 0x321f, 0xef70, 0x919d, 0x892e, 0xbf1e, 0x1, 0x0);
        gbc.writeMem(0x4535, { 0x79 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x321f, gbc.sp());
        EXPECT(0x4536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00FC
        gbc.setState(0x54c9, 0x30dc, 0x75e0, 0x6450, 0xc800, 0x3e4f, 0x0, 0x1);
        gbc.writeMem(0x54c9, { 0x79 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x30dc, gbc.sp());
        EXPECT(0x54ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 00FD
        gbc.setState(0x2bff, 0x5fe9, 0x41d0, 0x60b8, 0xef09, 0xd402, 0x0, 0x0);
        gbc.writeMem(0x2bff, { 0x79 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5fe9, gbc.sp());
        EXPECT(0x2c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 00FE
        gbc.setState(0xbeb8, 0x3e0a, 0xe9c0, 0x69b9, 0x199d, 0x52e8, 0x1, 0x0);
        gbc.writeMem(0xbeb8, { 0x79 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3e0a, gbc.sp());
        EXPECT(0xbeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbeb8));
        // 79 00FF
        gbc.setState(0x208, 0xc163, 0x1270, 0xccfb, 0x2f98, 0x99af, 0x1, 0x0);
        gbc.writeMem(0x208, { 0x79 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc163, gbc.sp());
        EXPECT(0x209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0100
        gbc.setState(0x41d6, 0x675b, 0x6b10, 0x5b31, 0x13e6, 0xa71, 0x1, 0x0);
        gbc.writeMem(0x41d6, { 0x79 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x675b, gbc.sp());
        EXPECT(0x41d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0101
        gbc.setState(0x3512, 0x84cc, 0x6aa0, 0x6e85, 0xb011, 0xc88f, 0x1, 0x0);
        gbc.writeMem(0x3512, { 0x79 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x84cc, gbc.sp());
        EXPECT(0x3513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0102
        gbc.setState(0x6ec9, 0x679f, 0x5570, 0x6305, 0x10ac, 0x82db, 0x0, 0x1);
        gbc.writeMem(0x6ec9, { 0x79 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x679f, gbc.sp());
        EXPECT(0x6eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0103
        gbc.setState(0x32c5, 0x11ed, 0x6040, 0x5494, 0xb014, 0x7e4b, 0x1, 0x0);
        gbc.writeMem(0x32c5, { 0x79 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x11ed, gbc.sp());
        EXPECT(0x32c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0104
        gbc.setState(0xeb76, 0xf839, 0x6a90, 0x481b, 0xf5b5, 0x8bee, 0x0, 0x1);
        gbc.writeMem(0xeb76, { 0x79 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf839, gbc.sp());
        EXPECT(0xeb77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeb76));
        // 79 0105
        gbc.setState(0xecaf, 0xda32, 0xba70, 0xa01e, 0x7f78, 0x5b88, 0x0, 0x1);
        gbc.writeMem(0xecaf, { 0x79 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xda32, gbc.sp());
        EXPECT(0xecb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xecaf));
        // 79 0106
        gbc.setState(0xdda0, 0x5b6e, 0x5b80, 0xd047, 0x5b52, 0xebd6, 0x1, 0x0);
        gbc.writeMem(0xdda0, { 0x79 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5b6e, gbc.sp());
        EXPECT(0xdda1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdda0));
        // 79 0107
        gbc.setState(0x2af2, 0xa902, 0x9bd0, 0x728, 0x1ee3, 0x7321, 0x1, 0x0);
        gbc.writeMem(0x2af2, { 0x79 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa902, gbc.sp());
        EXPECT(0x2af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0108
        gbc.setState(0x9f46, 0x8939, 0xfca0, 0x9d2, 0x4688, 0x1b85, 0x1, 0x1);
        gbc.writeMem(0x9f46, { 0x79 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8939, gbc.sp());
        EXPECT(0x9f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9f46));
        // 79 0109
        gbc.setState(0xcc12, 0x9d97, 0xd0c0, 0xb9d1, 0x92ab, 0xfefc, 0x0, 0x0);
        gbc.writeMem(0xcc12, { 0x79 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9d97, gbc.sp());
        EXPECT(0xcc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcc12));
        // 79 010A
        gbc.setState(0x5137, 0x3318, 0x3b20, 0xf584, 0x17e4, 0x3991, 0x1, 0x1);
        gbc.writeMem(0x5137, { 0x79 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3318, gbc.sp());
        EXPECT(0x5138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 010B
        gbc.setState(0xcdac, 0xc463, 0xec50, 0xc588, 0xe35a, 0x9d7e, 0x1, 0x0);
        gbc.writeMem(0xcdac, { 0x79 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc463, gbc.sp());
        EXPECT(0xcdad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcdac));
        // 79 010C
        gbc.setState(0xcdcb, 0xd31e, 0x4530, 0xd2e9, 0xd50d, 0xb5a8, 0x1, 0x0);
        gbc.writeMem(0xcdcb, { 0x79 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd31e, gbc.sp());
        EXPECT(0xcdcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcdcb));
        // 79 010D
        gbc.setState(0x2a80, 0xafcd, 0x57a0, 0x813f, 0x2f1d, 0xf32, 0x1, 0x1);
        gbc.writeMem(0x2a80, { 0x79 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xafcd, gbc.sp());
        EXPECT(0x2a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 010E
        gbc.setState(0x1402, 0xce52, 0x4be0, 0xac0e, 0xad2, 0xfa0, 0x0, 0x0);
        gbc.writeMem(0x1402, { 0x79 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xce52, gbc.sp());
        EXPECT(0x1403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 010F
        gbc.setState(0x7775, 0x6d4, 0x82b0, 0xdac5, 0xec9f, 0xa9e0, 0x1, 0x0);
        gbc.writeMem(0x7775, { 0x79 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6d4, gbc.sp());
        EXPECT(0x7776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0110
        gbc.setState(0xd65a, 0xeff6, 0x460, 0x49da, 0x6169, 0xab8e, 0x0, 0x1);
        gbc.writeMem(0xd65a, { 0x79 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xeff6, gbc.sp());
        EXPECT(0xd65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd65a));
        // 79 0111
        gbc.setState(0x56a5, 0xa247, 0xae60, 0x6952, 0xf218, 0x9d5d, 0x1, 0x1);
        gbc.writeMem(0x56a5, { 0x79 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa247, gbc.sp());
        EXPECT(0x56a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0112
        gbc.setState(0x7839, 0x5950, 0x1ab0, 0xad5d, 0xd40e, 0xd21, 0x1, 0x1);
        gbc.writeMem(0x7839, { 0x79 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5950, gbc.sp());
        EXPECT(0x783a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0113
        gbc.setState(0xd854, 0xd6c8, 0xa210, 0x70d4, 0x19a6, 0x3c69, 0x0, 0x1);
        gbc.writeMem(0xd854, { 0x79 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd6c8, gbc.sp());
        EXPECT(0xd855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd854));
        // 79 0115
        gbc.setState(0xa79b, 0xebfe, 0x8560, 0xaf2a, 0xf7f9, 0xa247, 0x1, 0x0);
        gbc.writeMem(0xa79b, { 0x79 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xebfe, gbc.sp());
        EXPECT(0xa79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa79b));
        // 79 0116
        gbc.setState(0x3659, 0x8582, 0x9d90, 0xcd16, 0x1e8f, 0x5041, 0x1, 0x0);
        gbc.writeMem(0x3659, { 0x79 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8582, gbc.sp());
        EXPECT(0x365a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0117
        gbc.setState(0x31ce, 0xc29a, 0x8bc0, 0x4207, 0xf5c4, 0x7f5b, 0x1, 0x1);
        gbc.writeMem(0x31ce, { 0x79 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc29a, gbc.sp());
        EXPECT(0x31cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0118
        gbc.setState(0xc9b7, 0x1ce0, 0x1fc0, 0x27c6, 0x546a, 0x68ce, 0x1, 0x0);
        gbc.writeMem(0xc9b7, { 0x79 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1ce0, gbc.sp());
        EXPECT(0xc9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc9b7));
        // 79 0119
        gbc.setState(0xe1f4, 0x754e, 0xb590, 0xe6b6, 0xc401, 0xdda, 0x0, 0x1);
        gbc.writeMem(0xe1f4, { 0x79 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x754e, gbc.sp());
        EXPECT(0xe1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe1f4));
        // 79 011A
        gbc.setState(0x12f2, 0xc933, 0x6ec0, 0x60eb, 0xdc7, 0x288b, 0x0, 0x0);
        gbc.writeMem(0x12f2, { 0x79 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc933, gbc.sp());
        EXPECT(0x12f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 011B
        gbc.setState(0x68d1, 0x7831, 0x7a50, 0xa081, 0x7a80, 0xc544, 0x0, 0x0);
        gbc.writeMem(0x68d1, { 0x79 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7831, gbc.sp());
        EXPECT(0x68d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 011C
        gbc.setState(0x103e, 0x5cc3, 0xf910, 0xba06, 0xa0f7, 0x9386, 0x0, 0x1);
        gbc.writeMem(0x103e, { 0x79 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5cc3, gbc.sp());
        EXPECT(0x103f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 011D
        gbc.setState(0x3358, 0xb349, 0xc690, 0x8cf6, 0x164c, 0x3db0, 0x1, 0x0);
        gbc.writeMem(0x3358, { 0x79 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb349, gbc.sp());
        EXPECT(0x3359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 011E
        gbc.setState(0x99f9, 0xea85, 0x8a70, 0xb00e, 0xbeb6, 0x610d, 0x0, 0x0);
        gbc.writeMem(0x99f9, { 0x79 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xea85, gbc.sp());
        EXPECT(0x99fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x99f9));
        // 79 011F
        gbc.setState(0x42f5, 0x3d6d, 0x3bb0, 0x664e, 0x321d, 0x8882, 0x1, 0x0);
        gbc.writeMem(0x42f5, { 0x79 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3d6d, gbc.sp());
        EXPECT(0x42f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0120
        gbc.setState(0xbae5, 0xa3e8, 0xcd80, 0x23e8, 0x8fec, 0x845a, 0x1, 0x1);
        gbc.writeMem(0xbae5, { 0x79 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa3e8, gbc.sp());
        EXPECT(0xbae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbae5));
        // 79 0121
        gbc.setState(0x3ca5, 0x26e1, 0x6c50, 0xa964, 0x37e0, 0xc503, 0x0, 0x1);
        gbc.writeMem(0x3ca5, { 0x79 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x26e1, gbc.sp());
        EXPECT(0x3ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0122
        gbc.setState(0x8fcb, 0x7c13, 0x7630, 0xb16e, 0x75da, 0x1567, 0x1, 0x0);
        gbc.writeMem(0x8fcb, { 0x79 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7c13, gbc.sp());
        EXPECT(0x8fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8fcb));
        // 79 0123
        gbc.setState(0xb959, 0x60c9, 0xc010, 0xb1ea, 0x911e, 0x3c9a, 0x0, 0x1);
        gbc.writeMem(0xb959, { 0x79 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x60c9, gbc.sp());
        EXPECT(0xb95a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb959));
        // 79 0124
        gbc.setState(0x43c3, 0x80e0, 0xd720, 0x4144, 0x40ee, 0x9180, 0x0, 0x1);
        gbc.writeMem(0x43c3, { 0x79 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x80e0, gbc.sp());
        EXPECT(0x43c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0125
        gbc.setState(0x58bd, 0x173e, 0x92e0, 0x8870, 0x9067, 0xc833, 0x1, 0x1);
        gbc.writeMem(0x58bd, { 0x79 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x173e, gbc.sp());
        EXPECT(0x58be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0126
        gbc.setState(0x9c71, 0x48de, 0x2f80, 0x153c, 0xf4d8, 0xc759, 0x0, 0x0);
        gbc.writeMem(0x9c71, { 0x79 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x48de, gbc.sp());
        EXPECT(0x9c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9c71));
        // 79 0127
        gbc.setState(0x98d, 0x5eac, 0xf2f0, 0xda38, 0xae98, 0x268a, 0x1, 0x1);
        gbc.writeMem(0x98d, { 0x79 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5eac, gbc.sp());
        EXPECT(0x98e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0129
        gbc.setState(0x167, 0x1ace, 0xdda0, 0xad22, 0x8433, 0x3903, 0x1, 0x0);
        gbc.writeMem(0x167, { 0x79 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1ace, gbc.sp());
        EXPECT(0x168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 012A
        gbc.setState(0xcb68, 0x6997, 0x13c0, 0xac26, 0xaced, 0x81c1, 0x1, 0x1);
        gbc.writeMem(0xcb68, { 0x79 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6997, gbc.sp());
        EXPECT(0xcb69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcb68));
        // 79 012B
        gbc.setState(0x7e36, 0xd5d7, 0xa330, 0x8271, 0xad39, 0xa2b1, 0x1, 0x0);
        gbc.writeMem(0x7e36, { 0x79 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd5d7, gbc.sp());
        EXPECT(0x7e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 012D
        gbc.setState(0x5028, 0x5207, 0x45f0, 0xde52, 0xaa6e, 0xc150, 0x0, 0x1);
        gbc.writeMem(0x5028, { 0x79 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5207, gbc.sp());
        EXPECT(0x5029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 012E
        gbc.setState(0xb8a9, 0xd49e, 0xb2b0, 0xb5f8, 0x61d1, 0xe504, 0x0, 0x0);
        gbc.writeMem(0xb8a9, { 0x79 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd49e, gbc.sp());
        EXPECT(0xb8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb8a9));
        // 79 012F
        gbc.setState(0xb4c8, 0x435a, 0x9510, 0xb7c6, 0x629b, 0x4785, 0x0, 0x0);
        gbc.writeMem(0xb4c8, { 0x79 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x435a, gbc.sp());
        EXPECT(0xb4c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb4c8));
        // 79 0130
        gbc.setState(0x22a4, 0x4d13, 0xbce0, 0x9266, 0xddb2, 0x60bb, 0x0, 0x0);
        gbc.writeMem(0x22a4, { 0x79 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4d13, gbc.sp());
        EXPECT(0x22a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0131
        gbc.setState(0x20f8, 0x9379, 0x5b30, 0x8afc, 0xf218, 0x6837, 0x1, 0x1);
        gbc.writeMem(0x20f8, { 0x79 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9379, gbc.sp());
        EXPECT(0x20f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0132
        gbc.setState(0x2b4c, 0x8f28, 0x88b0, 0x2329, 0x1723, 0x818, 0x1, 0x0);
        gbc.writeMem(0x2b4c, { 0x79 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8f28, gbc.sp());
        EXPECT(0x2b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0133
        gbc.setState(0x33d6, 0x5ee3, 0x86c0, 0x44e, 0xf514, 0xa922, 0x0, 0x0);
        gbc.writeMem(0x33d6, { 0x79 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5ee3, gbc.sp());
        EXPECT(0x33d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0134
        gbc.setState(0xd8d0, 0x8c3d, 0xf3f0, 0xc2a6, 0x6191, 0x5dbc, 0x1, 0x1);
        gbc.writeMem(0xd8d0, { 0x79 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8c3d, gbc.sp());
        EXPECT(0xd8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd8d0));
        // 79 0135
        gbc.setState(0x130c, 0x6d06, 0xfce0, 0xb8a7, 0x3e0f, 0xace0, 0x1, 0x0);
        gbc.writeMem(0x130c, { 0x79 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6d06, gbc.sp());
        EXPECT(0x130d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0136
        gbc.setState(0x6428, 0x7cab, 0x9a70, 0xf1bd, 0xceb2, 0x74df, 0x0, 0x1);
        gbc.writeMem(0x6428, { 0x79 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7cab, gbc.sp());
        EXPECT(0x6429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0137
        gbc.setState(0xf93, 0x96d1, 0xb6d0, 0xaefa, 0x5a5a, 0x8821, 0x1, 0x0);
        gbc.writeMem(0xf93, { 0x79 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x96d1, gbc.sp());
        EXPECT(0xf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0138
        gbc.setState(0x4efc, 0xcc33, 0x6430, 0xb21d, 0xe472, 0x4da7, 0x0, 0x0);
        gbc.writeMem(0x4efc, { 0x79 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcc33, gbc.sp());
        EXPECT(0x4efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0139
        gbc.setState(0x76f6, 0x895c, 0xd60, 0x812a, 0x4cc3, 0x85ec, 0x0, 0x0);
        gbc.writeMem(0x76f6, { 0x79 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x895c, gbc.sp());
        EXPECT(0x76f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 013A
        gbc.setState(0x92f2, 0x2af5, 0x4810, 0x8df7, 0xdd60, 0xd35a, 0x0, 0x1);
        gbc.writeMem(0x92f2, { 0x79 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2af5, gbc.sp());
        EXPECT(0x92f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x92f2));
        // 79 013B
        gbc.setState(0x975d, 0xfbba, 0xea00, 0xf48d, 0x2cd9, 0x4ea0, 0x0, 0x1);
        gbc.writeMem(0x975d, { 0x79 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfbba, gbc.sp());
        EXPECT(0x975e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x975d));
        // 79 013C
        gbc.setState(0x17e1, 0x263a, 0xac90, 0xc05d, 0x5530, 0x18ef, 0x1, 0x0);
        gbc.writeMem(0x17e1, { 0x79 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x263a, gbc.sp());
        EXPECT(0x17e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 013D
        gbc.setState(0xdb72, 0x74a0, 0x1160, 0xc398, 0x8824, 0x55b0, 0x1, 0x1);
        gbc.writeMem(0xdb72, { 0x79 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x74a0, gbc.sp());
        EXPECT(0xdb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdb72));
        // 79 013E
        gbc.setState(0x661c, 0xff7, 0x8c90, 0x5041, 0xcb87, 0xb212, 0x0, 0x0);
        gbc.writeMem(0x661c, { 0x79 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xff7, gbc.sp());
        EXPECT(0x661d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 013F
        gbc.setState(0xcf5c, 0x7f3d, 0xa30, 0xf506, 0xce32, 0xca05, 0x1, 0x0);
        gbc.writeMem(0xcf5c, { 0x79 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7f3d, gbc.sp());
        EXPECT(0xcf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcf5c));
        // 79 0140
        gbc.setState(0x74e2, 0x1060, 0xe220, 0xa452, 0x6cbe, 0xe71c, 0x0, 0x1);
        gbc.writeMem(0x74e2, { 0x79 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1060, gbc.sp());
        EXPECT(0x74e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0141
        gbc.setState(0x6695, 0x5798, 0x7670, 0x628d, 0x56fb, 0x674f, 0x0, 0x0);
        gbc.writeMem(0x6695, { 0x79 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5798, gbc.sp());
        EXPECT(0x6696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0143
        gbc.setState(0x14ce, 0x5cf3, 0x4b0, 0x17f4, 0xfda9, 0xcb7d, 0x0, 0x0);
        gbc.writeMem(0x14ce, { 0x79 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5cf3, gbc.sp());
        EXPECT(0x14cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0144
        gbc.setState(0x4438, 0xd663, 0x5cb0, 0x5d40, 0x8479, 0xd4a9, 0x0, 0x0);
        gbc.writeMem(0x4438, { 0x79 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd663, gbc.sp());
        EXPECT(0x4439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0145
        gbc.setState(0x9dac, 0xb4ca, 0xb4a0, 0xce09, 0xd547, 0xa1, 0x1, 0x1);
        gbc.writeMem(0x9dac, { 0x79 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb4ca, gbc.sp());
        EXPECT(0x9dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9dac));
        // 79 0146
        gbc.setState(0x2a3e, 0x7b21, 0xbca0, 0xb08d, 0x55dc, 0xb0b2, 0x0, 0x0);
        gbc.writeMem(0x2a3e, { 0x79 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7b21, gbc.sp());
        EXPECT(0x2a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0148
        gbc.setState(0x9dd7, 0x351e, 0xb930, 0xbc8e, 0xf961, 0x5d82, 0x1, 0x1);
        gbc.writeMem(0x9dd7, { 0x79 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x351e, gbc.sp());
        EXPECT(0x9dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9dd7));
        // 79 0149
        gbc.setState(0x290b, 0x3b15, 0x3790, 0xb94a, 0xd9e9, 0xbbc3, 0x0, 0x1);
        gbc.writeMem(0x290b, { 0x79 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3b15, gbc.sp());
        EXPECT(0x290c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 014A
        gbc.setState(0x7792, 0x2fb0, 0x3ee0, 0x8c3e, 0xfc51, 0x38c3, 0x1, 0x0);
        gbc.writeMem(0x7792, { 0x79 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2fb0, gbc.sp());
        EXPECT(0x7793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 014B
        gbc.setState(0x8a32, 0x3ba7, 0x7020, 0x1236, 0x6bec, 0xdaa6, 0x1, 0x1);
        gbc.writeMem(0x8a32, { 0x79 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3ba7, gbc.sp());
        EXPECT(0x8a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8a32));
        // 79 014C
        gbc.setState(0x66c2, 0xf431, 0xa740, 0xf638, 0xf37e, 0xe427, 0x0, 0x0);
        gbc.writeMem(0x66c2, { 0x79 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf431, gbc.sp());
        EXPECT(0x66c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 014D
        gbc.setState(0x369b, 0xc4fa, 0x9d0, 0x7814, 0xe620, 0x7c7, 0x0, 0x1);
        gbc.writeMem(0x369b, { 0x79 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc4fa, gbc.sp());
        EXPECT(0x369c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 014E
        gbc.setState(0x52a4, 0xd9de, 0x8d30, 0xfd9a, 0xe51, 0x9fbc, 0x0, 0x0);
        gbc.writeMem(0x52a4, { 0x79 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd9de, gbc.sp());
        EXPECT(0x52a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0150
        gbc.setState(0xc8bf, 0xc1f3, 0x46e0, 0x6099, 0x6a94, 0xddf7, 0x1, 0x0);
        gbc.writeMem(0xc8bf, { 0x79 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc1f3, gbc.sp());
        EXPECT(0xc8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc8bf));
        // 79 0151
        gbc.setState(0x4612, 0x3b97, 0x3cb0, 0x92e6, 0xd0a3, 0x27d7, 0x1, 0x1);
        gbc.writeMem(0x4612, { 0x79 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3b97, gbc.sp());
        EXPECT(0x4613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0152
        gbc.setState(0xcd22, 0x11f4, 0x2ab0, 0x9764, 0xfc28, 0x555e, 0x0, 0x1);
        gbc.writeMem(0xcd22, { 0x79 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x11f4, gbc.sp());
        EXPECT(0xcd23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcd22));
        // 79 0153
        gbc.setState(0x6d3d, 0x22db, 0x9a60, 0x1ddd, 0x6692, 0x4534, 0x1, 0x0);
        gbc.writeMem(0x6d3d, { 0x79 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x22db, gbc.sp());
        EXPECT(0x6d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0154
        gbc.setState(0x231d, 0x9049, 0xbfe0, 0xfd57, 0x8e49, 0x9c11, 0x1, 0x0);
        gbc.writeMem(0x231d, { 0x79 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9049, gbc.sp());
        EXPECT(0x231e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0155
        gbc.setState(0xb6aa, 0x4a4d, 0x5390, 0x8f7e, 0x7fda, 0xd65a, 0x1, 0x0);
        gbc.writeMem(0xb6aa, { 0x79 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4a4d, gbc.sp());
        EXPECT(0xb6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb6aa));
        // 79 0156
        gbc.setState(0xa, 0xadf9, 0x8e30, 0x99ed, 0x60a1, 0xd6c1, 0x1, 0x1);
        gbc.writeMem(0xa, { 0x79 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xadf9, gbc.sp());
        EXPECT(0xb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0157
        gbc.setState(0x6d8, 0x481b, 0x23f0, 0x4517, 0xc0fd, 0x8211, 0x1, 0x0);
        gbc.writeMem(0x6d8, { 0x79 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x481b, gbc.sp());
        EXPECT(0x6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0158
        gbc.setState(0x35c, 0x8d3a, 0xae20, 0x3538, 0x98f8, 0x1b41, 0x0, 0x0);
        gbc.writeMem(0x35c, { 0x79 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8d3a, gbc.sp());
        EXPECT(0x35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0159
        gbc.setState(0x7a08, 0x59aa, 0x1b20, 0xcb8c, 0x84e1, 0x9174, 0x0, 0x0);
        gbc.writeMem(0x7a08, { 0x79 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x59aa, gbc.sp());
        EXPECT(0x7a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 015A
        gbc.setState(0x4ea2, 0x9747, 0x860, 0x6e20, 0xf0f4, 0xea7c, 0x1, 0x1);
        gbc.writeMem(0x4ea2, { 0x79 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9747, gbc.sp());
        EXPECT(0x4ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 015B
        gbc.setState(0xd56f, 0xfc6b, 0x84a0, 0x4180, 0xa960, 0x3720, 0x0, 0x1);
        gbc.writeMem(0xd56f, { 0x79 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfc6b, gbc.sp());
        EXPECT(0xd570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd56f));
        // 79 015C
        gbc.setState(0x77b2, 0x3bcb, 0x7550, 0xe780, 0x4bc5, 0xabe7, 0x1, 0x1);
        gbc.writeMem(0x77b2, { 0x79 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3bcb, gbc.sp());
        EXPECT(0x77b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 015D
        gbc.setState(0xb25d, 0xb465, 0xb620, 0xa48f, 0xa093, 0xd50f, 0x0, 0x0);
        gbc.writeMem(0xb25d, { 0x79 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb465, gbc.sp());
        EXPECT(0xb25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb25d));
        // 79 015E
        gbc.setState(0xadcd, 0xb4e1, 0xd940, 0x5f59, 0xcec1, 0xc038, 0x0, 0x0);
        gbc.writeMem(0xadcd, { 0x79 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb4e1, gbc.sp());
        EXPECT(0xadce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xadcd));
        // 79 015F
        gbc.setState(0x9787, 0x755b, 0x7870, 0x71ae, 0xa298, 0xf1d2, 0x1, 0x0);
        gbc.writeMem(0x9787, { 0x79 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x755b, gbc.sp());
        EXPECT(0x9788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9787));
        // 79 0160
        gbc.setState(0xcf89, 0xe720, 0x6b70, 0x4c78, 0x59a2, 0xd4e4, 0x0, 0x0);
        gbc.writeMem(0xcf89, { 0x79 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe720, gbc.sp());
        EXPECT(0xcf8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcf89));
        // 79 0161
        gbc.setState(0x8197, 0xaef2, 0x930, 0xea60, 0x898e, 0x71e8, 0x0, 0x0);
        gbc.writeMem(0x8197, { 0x79 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xaef2, gbc.sp());
        EXPECT(0x8198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8197));
        // 79 0162
        gbc.setState(0x7259, 0xadb6, 0xcc60, 0xc47f, 0xc769, 0xaf98, 0x0, 0x0);
        gbc.writeMem(0x7259, { 0x79 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xadb6, gbc.sp());
        EXPECT(0x725a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0163
        gbc.setState(0x8d49, 0x3df7, 0x4ad0, 0x39e4, 0xf3ea, 0x60fd, 0x1, 0x0);
        gbc.writeMem(0x8d49, { 0x79 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3df7, gbc.sp());
        EXPECT(0x8d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8d49));
        // 79 0164
        gbc.setState(0xc4, 0xb87f, 0xb520, 0x2047, 0xc03, 0xf454, 0x1, 0x0);
        gbc.writeMem(0xc4, { 0x79 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb87f, gbc.sp());
        EXPECT(0xc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0165
        gbc.setState(0x9c6b, 0x3aa, 0xa9f0, 0xee90, 0x3c2d, 0xcacb, 0x1, 0x0);
        gbc.writeMem(0x9c6b, { 0x79 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3aa, gbc.sp());
        EXPECT(0x9c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9c6b));
        // 79 0166
        gbc.setState(0x8d80, 0x768f, 0x9830, 0xa271, 0xf313, 0x17c5, 0x0, 0x0);
        gbc.writeMem(0x8d80, { 0x79 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x768f, gbc.sp());
        EXPECT(0x8d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8d80));
        // 79 0167
        gbc.setState(0x1469, 0xd121, 0x8440, 0xbcc9, 0xb2ed, 0x900b, 0x0, 0x1);
        gbc.writeMem(0x1469, { 0x79 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd121, gbc.sp());
        EXPECT(0x146a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0168
        gbc.setState(0xe902, 0x7da5, 0x1670, 0xe9c, 0x3750, 0xe079, 0x0, 0x0);
        gbc.writeMem(0xe902, { 0x79 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7da5, gbc.sp());
        EXPECT(0xe903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe902));
        // 79 0169
        gbc.setState(0xcda0, 0x16be, 0x4350, 0x823f, 0x50b3, 0x5384, 0x1, 0x0);
        gbc.writeMem(0xcda0, { 0x79 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x16be, gbc.sp());
        EXPECT(0xcda1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcda0));
        // 79 016B
        gbc.setState(0xa031, 0x90fd, 0x2a80, 0x5dd, 0x884c, 0x35fc, 0x0, 0x0);
        gbc.writeMem(0xa031, { 0x79 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x90fd, gbc.sp());
        EXPECT(0xa032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa031));
        // 79 016C
        gbc.setState(0xbbd5, 0x50e7, 0x5580, 0x9f05, 0x9e7, 0x50aa, 0x0, 0x0);
        gbc.writeMem(0xbbd5, { 0x79 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x50e7, gbc.sp());
        EXPECT(0xbbd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbbd5));
        // 79 016D
        gbc.setState(0x32e3, 0x891c, 0x4e50, 0x61ca, 0x9f27, 0xfefc, 0x0, 0x0);
        gbc.writeMem(0x32e3, { 0x79 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x891c, gbc.sp());
        EXPECT(0x32e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 016E
        gbc.setState(0x9255, 0x8c61, 0x9190, 0x9bf9, 0xb8f9, 0x93f, 0x1, 0x0);
        gbc.writeMem(0x9255, { 0x79 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8c61, gbc.sp());
        EXPECT(0x9256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9255));
        // 79 016F
        gbc.setState(0x5703, 0x6515, 0x8ee0, 0xe96d, 0xb550, 0x7ac8, 0x1, 0x1);
        gbc.writeMem(0x5703, { 0x79 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6515, gbc.sp());
        EXPECT(0x5704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0170
        gbc.setState(0x32ea, 0xcf01, 0xe330, 0xe65c, 0x52aa, 0x21d0, 0x0, 0x1);
        gbc.writeMem(0x32ea, { 0x79 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcf01, gbc.sp());
        EXPECT(0x32eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0171
        gbc.setState(0x66c6, 0x948d, 0x1390, 0xffeb, 0xdad4, 0x5e0d, 0x0, 0x1);
        gbc.writeMem(0x66c6, { 0x79 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x948d, gbc.sp());
        EXPECT(0x66c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0172
        gbc.setState(0xacbd, 0xfe6d, 0x8110, 0x290, 0xfa4b, 0x8810, 0x1, 0x0);
        gbc.writeMem(0xacbd, { 0x79 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfe6d, gbc.sp());
        EXPECT(0xacbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xacbd));
        // 79 0173
        gbc.setState(0xc488, 0x698a, 0x3cc0, 0x6230, 0xb675, 0x962c, 0x1, 0x1);
        gbc.writeMem(0xc488, { 0x79 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x698a, gbc.sp());
        EXPECT(0xc489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc488));
        // 79 0174
        gbc.setState(0x7d7, 0x9348, 0xb380, 0xad79, 0xe730, 0x4ce, 0x1, 0x1);
        gbc.writeMem(0x7d7, { 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9348, gbc.sp());
        EXPECT(0x7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0175
        gbc.setState(0xe5f6, 0xb864, 0xf990, 0x455e, 0xf69e, 0xc37e, 0x1, 0x0);
        gbc.writeMem(0xe5f6, { 0x79 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb864, gbc.sp());
        EXPECT(0xe5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe5f6));
        // 79 0176
        gbc.setState(0x1b6a, 0x3b6, 0x9e20, 0xd9bf, 0x2948, 0xb8d7, 0x1, 0x0);
        gbc.writeMem(0x1b6a, { 0x79 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3b6, gbc.sp());
        EXPECT(0x1b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0177
        gbc.setState(0x909e, 0x9714, 0x2b80, 0xcadd, 0xeed4, 0x17e7, 0x0, 0x1);
        gbc.writeMem(0x909e, { 0x79 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9714, gbc.sp());
        EXPECT(0x909f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x909e));
        // 79 0178
        gbc.setState(0x19b2, 0x407, 0x6500, 0x9b2b, 0x244, 0xb027, 0x0, 0x0);
        gbc.writeMem(0x19b2, { 0x79 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x407, gbc.sp());
        EXPECT(0x19b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0179
        gbc.setState(0xc707, 0x7eb4, 0x82c0, 0xb23b, 0x1eb6, 0xadd2, 0x1, 0x0);
        gbc.writeMem(0xc707, { 0x79 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7eb4, gbc.sp());
        EXPECT(0xc708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc707));
        // 79 017A
        gbc.setState(0x6259, 0xce32, 0x25e0, 0xfa8, 0xeb95, 0x6527, 0x0, 0x1);
        gbc.writeMem(0x6259, { 0x79 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xce32, gbc.sp());
        EXPECT(0x625a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 017B
        gbc.setState(0xdd7a, 0x7451, 0x4440, 0xd8e, 0xc7ef, 0x397a, 0x1, 0x1);
        gbc.writeMem(0xdd7a, { 0x79 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7451, gbc.sp());
        EXPECT(0xdd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdd7a));
        // 79 017C
        gbc.setState(0xe059, 0xa997, 0x40d0, 0x7577, 0xc80, 0x5c07, 0x1, 0x0);
        gbc.writeMem(0xe059, { 0x79 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa997, gbc.sp());
        EXPECT(0xe05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe059));
        // 79 017D
        gbc.setState(0xeb86, 0xdc12, 0x1930, 0xf5b3, 0x4884, 0xc450, 0x1, 0x0);
        gbc.writeMem(0xeb86, { 0x79 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdc12, gbc.sp());
        EXPECT(0xeb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeb86));
        // 79 017E
        gbc.setState(0xa032, 0x8b3b, 0x78a0, 0xce1b, 0x6d88, 0xe4a5, 0x1, 0x1);
        gbc.writeMem(0xa032, { 0x79 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8b3b, gbc.sp());
        EXPECT(0xa033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa032));
        // 79 017F
        gbc.setState(0x463d, 0x4540, 0x30a0, 0x707b, 0x8259, 0x5c03, 0x0, 0x1);
        gbc.writeMem(0x463d, { 0x79 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4540, gbc.sp());
        EXPECT(0x463e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0180
        gbc.setState(0x9322, 0xb207, 0xe10, 0xa63d, 0x76ac, 0x6c81, 0x1, 0x0);
        gbc.writeMem(0x9322, { 0x79 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb207, gbc.sp());
        EXPECT(0x9323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9322));
        // 79 0182
        gbc.setState(0x8ba0, 0x7fe4, 0x4b60, 0x554e, 0xd273, 0x8726, 0x1, 0x0);
        gbc.writeMem(0x8ba0, { 0x79 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7fe4, gbc.sp());
        EXPECT(0x8ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8ba0));
        // 79 0183
        gbc.setState(0xb19d, 0xf79f, 0x6c90, 0x1473, 0x947b, 0xf973, 0x0, 0x0);
        gbc.writeMem(0xb19d, { 0x79 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf79f, gbc.sp());
        EXPECT(0xb19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb19d));
        // 79 0184
        gbc.setState(0xbac9, 0x6735, 0x17d0, 0xbd11, 0x700, 0x6ee9, 0x1, 0x1);
        gbc.writeMem(0xbac9, { 0x79 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6735, gbc.sp());
        EXPECT(0xbaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbac9));
        // 79 0185
        gbc.setState(0xb20, 0x563b, 0x5310, 0xa60e, 0xebc1, 0xe5e0, 0x0, 0x1);
        gbc.writeMem(0xb20, { 0x79 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x563b, gbc.sp());
        EXPECT(0xb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0186
        gbc.setState(0x5d02, 0x4ad7, 0x2910, 0x7e69, 0xddd7, 0xadd0, 0x0, 0x0);
        gbc.writeMem(0x5d02, { 0x79 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4ad7, gbc.sp());
        EXPECT(0x5d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0187
        gbc.setState(0x96fc, 0x9774, 0x9440, 0xe42b, 0xc968, 0x47e2, 0x0, 0x1);
        gbc.writeMem(0x96fc, { 0x79 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9774, gbc.sp());
        EXPECT(0x96fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x96fc));
        // 79 0188
        gbc.setState(0xae57, 0x7540, 0x5a00, 0xbe9a, 0x224f, 0xb6a1, 0x0, 0x0);
        gbc.writeMem(0xae57, { 0x79 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7540, gbc.sp());
        EXPECT(0xae58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xae57));
        // 79 0189
        gbc.setState(0x422a, 0x7f38, 0xbe00, 0x81b5, 0x2894, 0x1bac, 0x0, 0x1);
        gbc.writeMem(0x422a, { 0x79 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7f38, gbc.sp());
        EXPECT(0x422b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 018A
        gbc.setState(0x6b20, 0x472e, 0x6520, 0x77e, 0x92f1, 0xd2b, 0x0, 0x1);
        gbc.writeMem(0x6b20, { 0x79 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x472e, gbc.sp());
        EXPECT(0x6b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 018B
        gbc.setState(0x2303, 0xdfe8, 0x4f0, 0x902d, 0x9baf, 0xbbcc, 0x1, 0x1);
        gbc.writeMem(0x2303, { 0x79 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdfe8, gbc.sp());
        EXPECT(0x2304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 018C
        gbc.setState(0xc8b2, 0x9714, 0x3d20, 0x3d46, 0x775e, 0xbeb5, 0x1, 0x0);
        gbc.writeMem(0xc8b2, { 0x79 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9714, gbc.sp());
        EXPECT(0xc8b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc8b2));
        // 79 018D
        gbc.setState(0x7c36, 0x4545, 0x3cf0, 0x760, 0x7406, 0x5c0f, 0x0, 0x0);
        gbc.writeMem(0x7c36, { 0x79 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4545, gbc.sp());
        EXPECT(0x7c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 018E
        gbc.setState(0x1b7, 0x8364, 0xd2b0, 0x514c, 0x86, 0x3c66, 0x1, 0x1);
        gbc.writeMem(0x1b7, { 0x79 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8364, gbc.sp());
        EXPECT(0x1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 018F
        gbc.setState(0xb18b, 0xe70a, 0xa070, 0xc2b, 0xc05d, 0x19e6, 0x0, 0x0);
        gbc.writeMem(0xb18b, { 0x79 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe70a, gbc.sp());
        EXPECT(0xb18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb18b));
        // 79 0191
        gbc.setState(0x7923, 0x9d4f, 0x510, 0x3956, 0x8f06, 0xe95b, 0x0, 0x0);
        gbc.writeMem(0x7923, { 0x79 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9d4f, gbc.sp());
        EXPECT(0x7924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0192
        gbc.setState(0x85a, 0xccc5, 0x6830, 0x845b, 0x236, 0x25ea, 0x1, 0x0);
        gbc.writeMem(0x85a, { 0x79 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xccc5, gbc.sp());
        EXPECT(0x85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0193
        gbc.setState(0x1e0e, 0x50de, 0x6470, 0xf454, 0x509a, 0x156c, 0x1, 0x1);
        gbc.writeMem(0x1e0e, { 0x79 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x50de, gbc.sp());
        EXPECT(0x1e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0195
        gbc.setState(0xc727, 0x77dc, 0x89b0, 0x904b, 0x4e01, 0x283f, 0x0, 0x0);
        gbc.writeMem(0xc727, { 0x79 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x77dc, gbc.sp());
        EXPECT(0xc728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc727));
        // 79 0197
        gbc.setState(0x638e, 0xdf53, 0x76a0, 0xef21, 0x5d15, 0x78f4, 0x1, 0x1);
        gbc.writeMem(0x638e, { 0x79 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdf53, gbc.sp());
        EXPECT(0x638f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0198
        gbc.setState(0xb262, 0xc4bd, 0x26a0, 0xd7c7, 0x7789, 0x54d7, 0x0, 0x0);
        gbc.writeMem(0xb262, { 0x79 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc4bd, gbc.sp());
        EXPECT(0xb263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb262));
        // 79 0199
        gbc.setState(0x113a, 0x8725, 0x5d70, 0xac37, 0x9ffb, 0x651e, 0x1, 0x1);
        gbc.writeMem(0x113a, { 0x79 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8725, gbc.sp());
        EXPECT(0x113b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 019A
        gbc.setState(0xce9b, 0xdb50, 0xe5a0, 0x3, 0x5a1b, 0xf2b3, 0x1, 0x0);
        gbc.writeMem(0xce9b, { 0x79 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdb50, gbc.sp());
        EXPECT(0xce9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xce9b));
        // 79 019C
        gbc.setState(0xef4, 0x47ad, 0xb050, 0xdced, 0x60fe, 0xc317, 0x0, 0x1);
        gbc.writeMem(0xef4, { 0x79 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x47ad, gbc.sp());
        EXPECT(0xef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 019D
        gbc.setState(0xbc88, 0x9635, 0xf520, 0xc2dd, 0xcfa4, 0x5fd2, 0x1, 0x0);
        gbc.writeMem(0xbc88, { 0x79 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9635, gbc.sp());
        EXPECT(0xbc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbc88));
        // 79 019E
        gbc.setState(0x39cb, 0x860e, 0xfb0, 0x1b9d, 0xe6ca, 0x506d, 0x1, 0x0);
        gbc.writeMem(0x39cb, { 0x79 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x860e, gbc.sp());
        EXPECT(0x39cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 019F
        gbc.setState(0xa252, 0xa6d7, 0xd690, 0x8e18, 0x5933, 0x2215, 0x0, 0x0);
        gbc.writeMem(0xa252, { 0x79 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa6d7, gbc.sp());
        EXPECT(0xa253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa252));
        // 79 01A0
        gbc.setState(0x25bd, 0xbf09, 0xe060, 0x7999, 0xa2c1, 0x9b50, 0x1, 0x1);
        gbc.writeMem(0x25bd, { 0x79 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbf09, gbc.sp());
        EXPECT(0x25be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01A1
        gbc.setState(0x2b4e, 0x3b01, 0xf660, 0xf0b2, 0x48b1, 0xc92e, 0x0, 0x0);
        gbc.writeMem(0x2b4e, { 0x79 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3b01, gbc.sp());
        EXPECT(0x2b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01A2
        gbc.setState(0x4887, 0x48a2, 0xb520, 0xfd96, 0x7155, 0x5b97, 0x0, 0x1);
        gbc.writeMem(0x4887, { 0x79 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x48a2, gbc.sp());
        EXPECT(0x4888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01A3
        gbc.setState(0x9d99, 0x6d90, 0x1400, 0xd907, 0xc047, 0xac75, 0x1, 0x1);
        gbc.writeMem(0x9d99, { 0x79 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6d90, gbc.sp());
        EXPECT(0x9d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9d99));
        // 79 01A4
        gbc.setState(0x7b91, 0xbff1, 0x3190, 0x2507, 0x6709, 0x5ce1, 0x1, 0x1);
        gbc.writeMem(0x7b91, { 0x79 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbff1, gbc.sp());
        EXPECT(0x7b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01A5
        gbc.setState(0xc4d, 0xa3b0, 0xa030, 0x647c, 0xf830, 0x7be7, 0x1, 0x1);
        gbc.writeMem(0xc4d, { 0x79 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa3b0, gbc.sp());
        EXPECT(0xc4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01A6
        gbc.setState(0x2f5b, 0x306f, 0x7ab0, 0x50ee, 0xa322, 0x86ac, 0x0, 0x0);
        gbc.writeMem(0x2f5b, { 0x79 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x306f, gbc.sp());
        EXPECT(0x2f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01A7
        gbc.setState(0xaf23, 0xc90, 0x7b10, 0xe2da, 0x7f5b, 0xfbd5, 0x1, 0x1);
        gbc.writeMem(0xaf23, { 0x79 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc90, gbc.sp());
        EXPECT(0xaf24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xaf23));
        // 79 01A9
        gbc.setState(0x7a87, 0x6d50, 0xa6b0, 0x4290, 0xe1e2, 0x8b9f, 0x1, 0x1);
        gbc.writeMem(0x7a87, { 0x79 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6d50, gbc.sp());
        EXPECT(0x7a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01AA
        gbc.setState(0x4b82, 0x61d9, 0x44e0, 0xd132, 0xea26, 0xbe39, 0x0, 0x1);
        gbc.writeMem(0x4b82, { 0x79 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x61d9, gbc.sp());
        EXPECT(0x4b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01AB
        gbc.setState(0x9207, 0x867f, 0x1c70, 0x2caa, 0xbe9, 0xfdae, 0x0, 0x1);
        gbc.writeMem(0x9207, { 0x79 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x867f, gbc.sp());
        EXPECT(0x9208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9207));
        // 79 01AC
        gbc.setState(0x7e78, 0x9967, 0x6490, 0xba8f, 0xb227, 0xc464, 0x1, 0x0);
        gbc.writeMem(0x7e78, { 0x79 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9967, gbc.sp());
        EXPECT(0x7e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01AD
        gbc.setState(0xc656, 0x36a5, 0xb30, 0x224, 0x75af, 0xd90f, 0x0, 0x0);
        gbc.writeMem(0xc656, { 0x79 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x36a5, gbc.sp());
        EXPECT(0xc657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc656));
        // 79 01AE
        gbc.setState(0x124b, 0xc0b, 0xa480, 0xd7fa, 0x9168, 0x3883, 0x1, 0x1);
        gbc.writeMem(0x124b, { 0x79 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc0b, gbc.sp());
        EXPECT(0x124c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01AF
        gbc.setState(0xbd18, 0xf630, 0xd2f0, 0x727e, 0x3dd2, 0x9629, 0x0, 0x1);
        gbc.writeMem(0xbd18, { 0x79 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf630, gbc.sp());
        EXPECT(0xbd19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbd18));
        // 79 01B0
        gbc.setState(0x469f, 0xbb0b, 0x6a70, 0x9c6e, 0x42fe, 0x7e2b, 0x1, 0x0);
        gbc.writeMem(0x469f, { 0x79 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbb0b, gbc.sp());
        EXPECT(0x46a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01B1
        gbc.setState(0xd8dd, 0xce32, 0x6170, 0x33c, 0xe0e2, 0xe9f3, 0x0, 0x1);
        gbc.writeMem(0xd8dd, { 0x79 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xce32, gbc.sp());
        EXPECT(0xd8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd8dd));
        // 79 01B3
        gbc.setState(0xb422, 0xc732, 0x7790, 0x10b3, 0x12bd, 0xecfa, 0x0, 0x1);
        gbc.writeMem(0xb422, { 0x79 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc732, gbc.sp());
        EXPECT(0xb423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb422));
        // 79 01B4
        gbc.setState(0x55e, 0x9c75, 0x5010, 0x6804, 0x44a4, 0xadaf, 0x0, 0x1);
        gbc.writeMem(0x55e, { 0x79 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9c75, gbc.sp());
        EXPECT(0x55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01B5
        gbc.setState(0x850f, 0xd6f6, 0xd70, 0xd363, 0xd569, 0xfcc3, 0x1, 0x1);
        gbc.writeMem(0x850f, { 0x79 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd6f6, gbc.sp());
        EXPECT(0x8510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x850f));
        // 79 01B6
        gbc.setState(0xc40, 0xc977, 0xd810, 0xd9d, 0x1871, 0x8a85, 0x0, 0x1);
        gbc.writeMem(0xc40, { 0x79 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc977, gbc.sp());
        EXPECT(0xc41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01B7
        gbc.setState(0x3e2d, 0xd981, 0x7a60, 0xdbc, 0x14f5, 0xd5c4, 0x1, 0x0);
        gbc.writeMem(0x3e2d, { 0x79 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd981, gbc.sp());
        EXPECT(0x3e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01B8
        gbc.setState(0xb328, 0xc483, 0x39d0, 0xbb9a, 0x944d, 0x4d96, 0x0, 0x1);
        gbc.writeMem(0xb328, { 0x79 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc483, gbc.sp());
        EXPECT(0xb329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb328));
        // 79 01B9
        gbc.setState(0x1922, 0xe70b, 0xa040, 0xe402, 0x918d, 0xddf9, 0x1, 0x0);
        gbc.writeMem(0x1922, { 0x79 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe70b, gbc.sp());
        EXPECT(0x1923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01BA
        gbc.setState(0x9880, 0xd317, 0xb4c0, 0xfd47, 0x1d74, 0x9b65, 0x1, 0x0);
        gbc.writeMem(0x9880, { 0x79 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd317, gbc.sp());
        EXPECT(0x9881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9880));
        // 79 01BB
        gbc.setState(0xcd2f, 0xcecb, 0xee80, 0xaea, 0x5d0e, 0x29a5, 0x0, 0x1);
        gbc.writeMem(0xcd2f, { 0x79 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcecb, gbc.sp());
        EXPECT(0xcd30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcd2f));
        // 79 01BC
        gbc.setState(0x9015, 0x1af4, 0x46d0, 0x2385, 0x16be, 0x25cc, 0x0, 0x0);
        gbc.writeMem(0x9015, { 0x79 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1af4, gbc.sp());
        EXPECT(0x9016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9015));
        // 79 01BD
        gbc.setState(0x3660, 0x1296, 0x8150, 0x70f8, 0x888c, 0xa16, 0x1, 0x0);
        gbc.writeMem(0x3660, { 0x79 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1296, gbc.sp());
        EXPECT(0x3661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01BE
        gbc.setState(0xbdf1, 0x528c, 0xa9f0, 0x20a7, 0xbab5, 0xbf, 0x1, 0x1);
        gbc.writeMem(0xbdf1, { 0x79 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x528c, gbc.sp());
        EXPECT(0xbdf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbdf1));
        // 79 01BF
        gbc.setState(0x9820, 0xbe02, 0x1610, 0xc8d9, 0x20fb, 0x5c2a, 0x0, 0x1);
        gbc.writeMem(0x9820, { 0x79 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbe02, gbc.sp());
        EXPECT(0x9821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9820));
        // 79 01C0
        gbc.setState(0x35f, 0xf535, 0x9af0, 0xd78d, 0xa053, 0xad8a, 0x1, 0x0);
        gbc.writeMem(0x35f, { 0x79 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf535, gbc.sp());
        EXPECT(0x360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01C2
        gbc.setState(0xafbd, 0x277f, 0x3b40, 0x4d57, 0x375d, 0xc2b2, 0x1, 0x1);
        gbc.writeMem(0xafbd, { 0x79 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x277f, gbc.sp());
        EXPECT(0xafbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xafbd));
        // 79 01C3
        gbc.setState(0xe8ee, 0x4bb2, 0x160, 0x1c2d, 0xee67, 0xac98, 0x1, 0x0);
        gbc.writeMem(0xe8ee, { 0x79 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4bb2, gbc.sp());
        EXPECT(0xe8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe8ee));
        // 79 01C4
        gbc.setState(0x2310, 0x31d7, 0xacd0, 0xfb61, 0xe085, 0xd643, 0x1, 0x0);
        gbc.writeMem(0x2310, { 0x79 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x31d7, gbc.sp());
        EXPECT(0x2311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01C5
        gbc.setState(0xe9af, 0xa360, 0x8180, 0x281b, 0xd6ad, 0xe739, 0x0, 0x0);
        gbc.writeMem(0xe9af, { 0x79 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa360, gbc.sp());
        EXPECT(0xe9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe9af));
        // 79 01C6
        gbc.setState(0x69be, 0xa23d, 0xa730, 0xdc92, 0xe492, 0xdc55, 0x0, 0x1);
        gbc.writeMem(0x69be, { 0x79 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa23d, gbc.sp());
        EXPECT(0x69bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01C7
        gbc.setState(0x78ab, 0xe5dc, 0xffb0, 0xf27e, 0x6fa5, 0xe60f, 0x1, 0x1);
        gbc.writeMem(0x78ab, { 0x79 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe5dc, gbc.sp());
        EXPECT(0x78ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01C8
        gbc.setState(0xe7bc, 0x3170, 0xd870, 0x1361, 0x895d, 0x4aae, 0x0, 0x0);
        gbc.writeMem(0xe7bc, { 0x79 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3170, gbc.sp());
        EXPECT(0xe7bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe7bc));
        // 79 01C9
        gbc.setState(0xc9ad, 0xa6f3, 0xc5f0, 0x8cf3, 0xa20b, 0x2ca2, 0x1, 0x1);
        gbc.writeMem(0xc9ad, { 0x79 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa6f3, gbc.sp());
        EXPECT(0xc9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc9ad));
        // 79 01CA
        gbc.setState(0x6886, 0xc4ed, 0x62e0, 0x5e6f, 0x6847, 0x1362, 0x1, 0x1);
        gbc.writeMem(0x6886, { 0x79 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc4ed, gbc.sp());
        EXPECT(0x6887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01CB
        gbc.setState(0xc7b2, 0xf990, 0x4f70, 0xc6c5, 0xe777, 0x25d3, 0x1, 0x1);
        gbc.writeMem(0xc7b2, { 0x79 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf990, gbc.sp());
        EXPECT(0xc7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc7b2));
        // 79 01CC
        gbc.setState(0x2393, 0x66cc, 0xe9d0, 0x45ea, 0x17d9, 0xb764, 0x1, 0x0);
        gbc.writeMem(0x2393, { 0x79 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x66cc, gbc.sp());
        EXPECT(0x2394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01CD
        gbc.setState(0xb794, 0xbd73, 0x6d90, 0x4df7, 0xd5c8, 0xb410, 0x1, 0x0);
        gbc.writeMem(0xb794, { 0x79 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbd73, gbc.sp());
        EXPECT(0xb795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb794));
        // 79 01CE
        gbc.setState(0x19c4, 0x50ce, 0xd990, 0xe27d, 0xeebf, 0xa313, 0x1, 0x0);
        gbc.writeMem(0x19c4, { 0x79 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x50ce, gbc.sp());
        EXPECT(0x19c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01CF
        gbc.setState(0x2964, 0xced2, 0x5ab0, 0x1bf3, 0x71c, 0xbe40, 0x1, 0x0);
        gbc.writeMem(0x2964, { 0x79 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xced2, gbc.sp());
        EXPECT(0x2965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01D0
        gbc.setState(0x90, 0x485d, 0x26c0, 0x307a, 0x1ab4, 0xccd4, 0x0, 0x1);
        gbc.writeMem(0x90, { 0x79 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x485d, gbc.sp());
        EXPECT(0x91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01D1
        gbc.setState(0x1da7, 0x97b5, 0xf6d0, 0xef6b, 0x26db, 0x8fa3, 0x1, 0x1);
        gbc.writeMem(0x1da7, { 0x79 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x97b5, gbc.sp());
        EXPECT(0x1da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01D2
        gbc.setState(0x1865, 0x9508, 0xf660, 0xe56c, 0xa112, 0x4985, 0x1, 0x1);
        gbc.writeMem(0x1865, { 0x79 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9508, gbc.sp());
        EXPECT(0x1866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01D3
        gbc.setState(0x87b2, 0x1838, 0xb720, 0x6282, 0xef8e, 0xaa0d, 0x0, 0x1);
        gbc.writeMem(0x87b2, { 0x79 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1838, gbc.sp());
        EXPECT(0x87b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x87b2));
        // 79 01D4
        gbc.setState(0xda74, 0xe09, 0x42a0, 0x6a25, 0xae29, 0xb526, 0x0, 0x0);
        gbc.writeMem(0xda74, { 0x79 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe09, gbc.sp());
        EXPECT(0xda75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xda74));
        // 79 01D5
        gbc.setState(0x9109, 0x48de, 0x2b40, 0xc493, 0xbcaa, 0xdee1, 0x1, 0x0);
        gbc.writeMem(0x9109, { 0x79 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x48de, gbc.sp());
        EXPECT(0x910a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9109));
        // 79 01D7
        gbc.setState(0x8584, 0xa030, 0x1a30, 0x49af, 0xaf3e, 0xbbb6, 0x0, 0x1);
        gbc.writeMem(0x8584, { 0x79 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa030, gbc.sp());
        EXPECT(0x8585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8584));
        // 79 01D8
        gbc.setState(0xd966, 0xf21, 0x3f80, 0x953d, 0xe6c8, 0xb203, 0x0, 0x1);
        gbc.writeMem(0xd966, { 0x79 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf21, gbc.sp());
        EXPECT(0xd967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd966));
        // 79 01D9
        gbc.setState(0xd931, 0x8769, 0xa480, 0x4aa9, 0xf86c, 0xb51a, 0x0, 0x0);
        gbc.writeMem(0xd931, { 0x79 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8769, gbc.sp());
        EXPECT(0xd932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd931));
        // 79 01DA
        gbc.setState(0x1f0e, 0xab88, 0xb280, 0xb2af, 0xed1b, 0x9f88, 0x0, 0x1);
        gbc.writeMem(0x1f0e, { 0x79 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xab88, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01DB
        gbc.setState(0x4754, 0x603c, 0x47d0, 0x85c0, 0xf1e9, 0x3c4d, 0x1, 0x1);
        gbc.writeMem(0x4754, { 0x79 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x603c, gbc.sp());
        EXPECT(0x4755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01DC
        gbc.setState(0x8b53, 0xf20a, 0x8190, 0x8026, 0xa0dd, 0x354d, 0x1, 0x1);
        gbc.writeMem(0x8b53, { 0x79 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf20a, gbc.sp());
        EXPECT(0x8b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8b53));
        // 79 01DD
        gbc.setState(0x3d24, 0x85d1, 0x12a0, 0xe714, 0xbf9c, 0x67a0, 0x1, 0x1);
        gbc.writeMem(0x3d24, { 0x79 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x85d1, gbc.sp());
        EXPECT(0x3d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01DE
        gbc.setState(0xb551, 0x4809, 0x2780, 0xccf7, 0xdd0d, 0x9937, 0x1, 0x0);
        gbc.writeMem(0xb551, { 0x79 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4809, gbc.sp());
        EXPECT(0xb552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb551));
        // 79 01DF
        gbc.setState(0x637a, 0x784b, 0xf2d0, 0xcc4f, 0x3b0d, 0xcd4, 0x0, 0x1);
        gbc.writeMem(0x637a, { 0x79 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x784b, gbc.sp());
        EXPECT(0x637b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01E0
        gbc.setState(0xe463, 0xdfa3, 0x7a90, 0xb34e, 0x4d4e, 0x3f70, 0x0, 0x0);
        gbc.writeMem(0xe463, { 0x79 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdfa3, gbc.sp());
        EXPECT(0xe464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe463));
        // 79 01E1
        gbc.setState(0xeba3, 0xde45, 0xb550, 0x4921, 0xae32, 0xdba5, 0x1, 0x1);
        gbc.writeMem(0xeba3, { 0x79 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xde45, gbc.sp());
        EXPECT(0xeba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeba3));
        // 79 01E3
        gbc.setState(0x7644, 0xe7ec, 0x4dc0, 0xe551, 0xa67, 0x4be1, 0x1, 0x0);
        gbc.writeMem(0x7644, { 0x79 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe7ec, gbc.sp());
        EXPECT(0x7645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01E4
        gbc.setState(0x1758, 0x887b, 0x32d0, 0xc380, 0xdd7b, 0x29f1, 0x0, 0x1);
        gbc.writeMem(0x1758, { 0x79 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x887b, gbc.sp());
        EXPECT(0x1759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01E5
        gbc.setState(0x3f08, 0xffbe, 0x290, 0xcf9f, 0xe493, 0x65f1, 0x1, 0x0);
        gbc.writeMem(0x3f08, { 0x79 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xffbe, gbc.sp());
        EXPECT(0x3f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01E6
        gbc.setState(0x157e, 0xc07b, 0x2b40, 0x9e7e, 0x22dc, 0x643c, 0x1, 0x1);
        gbc.writeMem(0x157e, { 0x79 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc07b, gbc.sp());
        EXPECT(0x157f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01E7
        gbc.setState(0x9bfe, 0x941, 0x63c0, 0x881, 0x82a6, 0xd903, 0x1, 0x1);
        gbc.writeMem(0x9bfe, { 0x79 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x941, gbc.sp());
        EXPECT(0x9bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9bfe));
        // 79 01E8
        gbc.setState(0xde9a, 0x11f8, 0x4b70, 0x3bfe, 0x9a3c, 0x8e55, 0x0, 0x1);
        gbc.writeMem(0xde9a, { 0x79 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x11f8, gbc.sp());
        EXPECT(0xde9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xde9a));
        // 79 01EA
        gbc.setState(0x61e2, 0x956c, 0x34f0, 0x253c, 0xb01d, 0x4a69, 0x1, 0x1);
        gbc.writeMem(0x61e2, { 0x79 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x956c, gbc.sp());
        EXPECT(0x61e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01EB
        gbc.setState(0x394c, 0xb4dc, 0x55b0, 0x6b78, 0x6873, 0x9503, 0x0, 0x0);
        gbc.writeMem(0x394c, { 0x79 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb4dc, gbc.sp());
        EXPECT(0x394d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01EC
        gbc.setState(0xafe3, 0x5b85, 0xc8d0, 0xdd84, 0x3cb3, 0xb684, 0x0, 0x0);
        gbc.writeMem(0xafe3, { 0x79 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5b85, gbc.sp());
        EXPECT(0xafe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xafe3));
        // 79 01ED
        gbc.setState(0x375b, 0x41c4, 0x5710, 0xcbf0, 0xda43, 0xf821, 0x1, 0x1);
        gbc.writeMem(0x375b, { 0x79 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x41c4, gbc.sp());
        EXPECT(0x375c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01EE
        gbc.setState(0x6913, 0xb12, 0x3cd0, 0x342, 0xa350, 0x2e05, 0x1, 0x0);
        gbc.writeMem(0x6913, { 0x79 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb12, gbc.sp());
        EXPECT(0x6914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 01EF
        gbc.setState(0x793d, 0x433, 0xde40, 0x79ce, 0xfa18, 0x1e37, 0x1, 0x0);
        gbc.writeMem(0x793d, { 0x79 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x433, gbc.sp());
        EXPECT(0x793e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01F0
        gbc.setState(0x52a5, 0x89b1, 0x3b40, 0xc78b, 0x4341, 0x8a0c, 0x1, 0x1);
        gbc.writeMem(0x52a5, { 0x79 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x89b1, gbc.sp());
        EXPECT(0x52a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01F1
        gbc.setState(0x4591, 0xd114, 0xcac0, 0x14b9, 0x76cc, 0x45e4, 0x1, 0x0);
        gbc.writeMem(0x4591, { 0x79 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd114, gbc.sp());
        EXPECT(0x4592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01F2
        gbc.setState(0x9be0, 0xd977, 0xb000, 0x9084, 0xe4f2, 0x1b30, 0x1, 0x1);
        gbc.writeMem(0x9be0, { 0x79 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd977, gbc.sp());
        EXPECT(0x9be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9be0));
        // 79 01F3
        gbc.setState(0xefec, 0xfe6a, 0x5770, 0x85f7, 0x7e78, 0x816d, 0x1, 0x1);
        gbc.writeMem(0xefec, { 0x79 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfe6a, gbc.sp());
        EXPECT(0xefed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xefec));
        // 79 01F4
        gbc.setState(0x5d49, 0xcf11, 0xeb20, 0xd1f, 0xf50c, 0x99fc, 0x1, 0x1);
        gbc.writeMem(0x5d49, { 0x79 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcf11, gbc.sp());
        EXPECT(0x5d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01F5
        gbc.setState(0xb2ca, 0xc3be, 0x1fb0, 0xf0f3, 0x5db7, 0x3457, 0x1, 0x1);
        gbc.writeMem(0xb2ca, { 0x79 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc3be, gbc.sp());
        EXPECT(0xb2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb2ca));
        // 79 01F6
        gbc.setState(0x7b4d, 0x50fe, 0xd040, 0x3415, 0x5433, 0x9095, 0x1, 0x0);
        gbc.writeMem(0x7b4d, { 0x79 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x50fe, gbc.sp());
        EXPECT(0x7b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 01F7
        gbc.setState(0xa03a, 0x265d, 0x5a80, 0xd518, 0xf594, 0xa91f, 0x1, 0x0);
        gbc.writeMem(0xa03a, { 0x79 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x265d, gbc.sp());
        EXPECT(0xa03b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa03a));
        // 79 01F8
        gbc.setState(0x9801, 0x6eee, 0xbe70, 0x2117, 0xddf6, 0x6d10, 0x0, 0x0);
        gbc.writeMem(0x9801, { 0x79 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6eee, gbc.sp());
        EXPECT(0x9802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9801));
        // 79 01F9
        gbc.setState(0xb31f, 0x6588, 0x3cd0, 0x61b1, 0xa32f, 0xed8, 0x1, 0x0);
        gbc.writeMem(0xb31f, { 0x79 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6588, gbc.sp());
        EXPECT(0xb320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb31f));
        // 79 01FA
        gbc.setState(0xdf88, 0xd07e, 0x9260, 0x89fd, 0x9db6, 0xcc1e, 0x1, 0x1);
        gbc.writeMem(0xdf88, { 0x79 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd07e, gbc.sp());
        EXPECT(0xdf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdf88));
        // 79 01FC
        gbc.setState(0xbb4d, 0xf257, 0xf130, 0x9168, 0x562b, 0x4ec2, 0x0, 0x1);
        gbc.writeMem(0xbb4d, { 0x79 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf257, gbc.sp());
        EXPECT(0xbb4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbb4d));
        // 79 01FD
        gbc.setState(0xbe51, 0x90aa, 0xcd70, 0xed64, 0x481c, 0x4b65, 0x0, 0x1);
        gbc.writeMem(0xbe51, { 0x79 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x90aa, gbc.sp());
        EXPECT(0xbe52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbe51));
        // 79 01FF
        gbc.setState(0x3262, 0x248d, 0x7830, 0x37b2, 0x6382, 0x799f, 0x1, 0x0);
        gbc.writeMem(0x3262, { 0x79 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x248d, gbc.sp());
        EXPECT(0x3263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0200
        gbc.setState(0xc3d1, 0xb7f7, 0x12b0, 0xd3f5, 0x776a, 0x97b5, 0x0, 0x0);
        gbc.writeMem(0xc3d1, { 0x79 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb7f7, gbc.sp());
        EXPECT(0xc3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc3d1));
        // 79 0201
        gbc.setState(0x548b, 0xcb24, 0x39a0, 0x7ee, 0x7038, 0xe69, 0x0, 0x1);
        gbc.writeMem(0x548b, { 0x79 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcb24, gbc.sp());
        EXPECT(0x548c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0202
        gbc.setState(0xd96d, 0xb4d0, 0x2870, 0x415, 0x692c, 0xbf19, 0x1, 0x0);
        gbc.writeMem(0xd96d, { 0x79 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb4d0, gbc.sp());
        EXPECT(0xd96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd96d));
        // 79 0203
        gbc.setState(0xe8cb, 0xcba9, 0x9210, 0xfeab, 0x27d4, 0xa5c4, 0x1, 0x1);
        gbc.writeMem(0xe8cb, { 0x79 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcba9, gbc.sp());
        EXPECT(0xe8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe8cb));
        // 79 0204
        gbc.setState(0x5c10, 0x4f9a, 0x8a70, 0x1375, 0x1ab2, 0xbc11, 0x0, 0x1);
        gbc.writeMem(0x5c10, { 0x79 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4f9a, gbc.sp());
        EXPECT(0x5c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0205
        gbc.setState(0x4293, 0xadf3, 0x2d00, 0x407, 0x90de, 0x8803, 0x0, 0x1);
        gbc.writeMem(0x4293, { 0x79 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xadf3, gbc.sp());
        EXPECT(0x4294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0206
        gbc.setState(0x9e3c, 0x3016, 0x9960, 0xd07b, 0x9bd, 0xfbfb, 0x0, 0x1);
        gbc.writeMem(0x9e3c, { 0x79 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3016, gbc.sp());
        EXPECT(0x9e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9e3c));
        // 79 0207
        gbc.setState(0x5006, 0x3a06, 0x4790, 0xad30, 0xb41e, 0x759d, 0x0, 0x1);
        gbc.writeMem(0x5006, { 0x79 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3a06, gbc.sp());
        EXPECT(0x5007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0209
        gbc.setState(0x9bae, 0x82d5, 0x4250, 0xf4a5, 0x306f, 0xb929, 0x0, 0x1);
        gbc.writeMem(0x9bae, { 0x79 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x82d5, gbc.sp());
        EXPECT(0x9baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9bae));
        // 79 020A
        gbc.setState(0xd586, 0x9460, 0x6840, 0x4b46, 0xf859, 0x8f18, 0x1, 0x0);
        gbc.writeMem(0xd586, { 0x79 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9460, gbc.sp());
        EXPECT(0xd587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd586));
        // 79 020B
        gbc.setState(0xba31, 0x9903, 0x16c0, 0xb3a9, 0x15ae, 0xc03c, 0x1, 0x1);
        gbc.writeMem(0xba31, { 0x79 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9903, gbc.sp());
        EXPECT(0xba32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xba31));
        // 79 020C
        gbc.setState(0x9146, 0x4017, 0x19d0, 0x1b3f, 0x8da1, 0x60ec, 0x0, 0x1);
        gbc.writeMem(0x9146, { 0x79 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4017, gbc.sp());
        EXPECT(0x9147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9146));
        // 79 020D
        gbc.setState(0xa1e1, 0x64ad, 0xd4b0, 0xf777, 0x4d90, 0xe933, 0x1, 0x1);
        gbc.writeMem(0xa1e1, { 0x79 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x64ad, gbc.sp());
        EXPECT(0xa1e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa1e1));
        // 79 020E
        gbc.setState(0x2cd3, 0x87ea, 0x6f10, 0x8bcf, 0x79de, 0x40f9, 0x1, 0x0);
        gbc.writeMem(0x2cd3, { 0x79 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x87ea, gbc.sp());
        EXPECT(0x2cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 020F
        gbc.setState(0x157c, 0xac7d, 0x3030, 0xbccb, 0x3c37, 0x1fb0, 0x1, 0x0);
        gbc.writeMem(0x157c, { 0x79 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xac7d, gbc.sp());
        EXPECT(0x157d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0210
        gbc.setState(0x48a6, 0x4fe3, 0x6d70, 0xcda9, 0x1f37, 0xf4b, 0x0, 0x0);
        gbc.writeMem(0x48a6, { 0x79 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4fe3, gbc.sp());
        EXPECT(0x48a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0211
        gbc.setState(0x7904, 0xcfa9, 0x83c0, 0xc00d, 0x37a3, 0xac9d, 0x0, 0x0);
        gbc.writeMem(0x7904, { 0x79 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcfa9, gbc.sp());
        EXPECT(0x7905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0212
        gbc.setState(0xad5e, 0xee36, 0x2ea0, 0x285b, 0xeced, 0x4491, 0x0, 0x1);
        gbc.writeMem(0xad5e, { 0x79 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xee36, gbc.sp());
        EXPECT(0xad5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xad5e));
        // 79 0213
        gbc.setState(0xeeb9, 0x40d7, 0xe840, 0x28ac, 0xd06a, 0x6a0f, 0x1, 0x1);
        gbc.writeMem(0xeeb9, { 0x79 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x40d7, gbc.sp());
        EXPECT(0xeeba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeeb9));
        // 79 0214
        gbc.setState(0x404f, 0x94fb, 0xba0, 0x618c, 0xd514, 0xa47a, 0x1, 0x0);
        gbc.writeMem(0x404f, { 0x79 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x94fb, gbc.sp());
        EXPECT(0x4050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0215
        gbc.setState(0x5ea, 0x25c3, 0x3150, 0x7151, 0x9863, 0xf65a, 0x1, 0x0);
        gbc.writeMem(0x5ea, { 0x79 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x25c3, gbc.sp());
        EXPECT(0x5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0216
        gbc.setState(0x7a2f, 0xec55, 0x37b0, 0x9d59, 0xc423, 0x5e47, 0x1, 0x1);
        gbc.writeMem(0x7a2f, { 0x79 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xec55, gbc.sp());
        EXPECT(0x7a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0217
        gbc.setState(0xb73c, 0x72e, 0x9c20, 0xdc04, 0x7733, 0xe8bb, 0x0, 0x0);
        gbc.writeMem(0xb73c, { 0x79 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x72e, gbc.sp());
        EXPECT(0xb73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb73c));
        // 79 0219
        gbc.setState(0xcbec, 0x125, 0xc4a0, 0x8b21, 0xaa4b, 0x89c6, 0x0, 0x1);
        gbc.writeMem(0xcbec, { 0x79 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x125, gbc.sp());
        EXPECT(0xcbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcbec));
        // 79 021A
        gbc.setState(0x2b5, 0xb2a0, 0xef00, 0xa01e, 0x5806, 0xdb83, 0x0, 0x1);
        gbc.writeMem(0x2b5, { 0x79 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb2a0, gbc.sp());
        EXPECT(0x2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 021B
        gbc.setState(0x90f4, 0x79af, 0x7910, 0x171b, 0x680d, 0x6986, 0x0, 0x1);
        gbc.writeMem(0x90f4, { 0x79 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x79af, gbc.sp());
        EXPECT(0x90f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x90f4));
        // 79 021D
        gbc.setState(0x7bf6, 0x3d5a, 0x3b10, 0xe7f0, 0xa40d, 0x926b, 0x0, 0x0);
        gbc.writeMem(0x7bf6, { 0x79 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3d5a, gbc.sp());
        EXPECT(0x7bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 021E
        gbc.setState(0xa405, 0x6899, 0xe4d0, 0x99a5, 0xbcb7, 0x7ec7, 0x0, 0x1);
        gbc.writeMem(0xa405, { 0x79 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6899, gbc.sp());
        EXPECT(0xa406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa405));
        // 79 021F
        gbc.setState(0x8459, 0x4da, 0xfff0, 0xd4f0, 0x76f, 0x71ee, 0x0, 0x1);
        gbc.writeMem(0x8459, { 0x79 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4da, gbc.sp());
        EXPECT(0x845a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8459));
        // 79 0220
        gbc.setState(0xd201, 0xc216, 0xd40, 0x61cd, 0xd716, 0xb673, 0x0, 0x0);
        gbc.writeMem(0xd201, { 0x79 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc216, gbc.sp());
        EXPECT(0xd202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd201));
        // 79 0221
        gbc.setState(0x167c, 0x6081, 0x37c0, 0x31ba, 0xf0c8, 0xa7e7, 0x0, 0x1);
        gbc.writeMem(0x167c, { 0x79 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6081, gbc.sp());
        EXPECT(0x167d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0222
        gbc.setState(0x3cb, 0x44d3, 0x76d0, 0xd4d7, 0x7154, 0xbbbc, 0x1, 0x1);
        gbc.writeMem(0x3cb, { 0x79 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x44d3, gbc.sp());
        EXPECT(0x3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0223
        gbc.setState(0xc736, 0x91a, 0x46b0, 0x242d, 0xf8fe, 0x51bb, 0x0, 0x1);
        gbc.writeMem(0xc736, { 0x79 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x91a, gbc.sp());
        EXPECT(0xc737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc736));
        // 79 0224
        gbc.setState(0x76da, 0x9c61, 0x2b00, 0x6684, 0x3d05, 0xa4fd, 0x0, 0x1);
        gbc.writeMem(0x76da, { 0x79 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9c61, gbc.sp());
        EXPECT(0x76db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0225
        gbc.setState(0xa36d, 0x5e18, 0x3170, 0xacee, 0x1857, 0xbab5, 0x0, 0x0);
        gbc.writeMem(0xa36d, { 0x79 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5e18, gbc.sp());
        EXPECT(0xa36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa36d));
        // 79 0226
        gbc.setState(0x30a7, 0x5fe0, 0x3c80, 0xf56b, 0xcb50, 0xb8ab, 0x0, 0x1);
        gbc.writeMem(0x30a7, { 0x79 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5fe0, gbc.sp());
        EXPECT(0x30a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0227
        gbc.setState(0x7a8a, 0xf92b, 0x3050, 0xb0b8, 0xcad6, 0x6bf, 0x1, 0x0);
        gbc.writeMem(0x7a8a, { 0x79 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf92b, gbc.sp());
        EXPECT(0x7a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0229
        gbc.setState(0xd1ee, 0xdbb6, 0x6030, 0x5dcf, 0x2364, 0xcfe1, 0x0, 0x1);
        gbc.writeMem(0xd1ee, { 0x79 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdbb6, gbc.sp());
        EXPECT(0xd1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd1ee));
        // 79 022A
        gbc.setState(0x2f60, 0xa65f, 0xd2d0, 0x4b83, 0xe75f, 0x2ecd, 0x0, 0x1);
        gbc.writeMem(0x2f60, { 0x79 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa65f, gbc.sp());
        EXPECT(0x2f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 022B
        gbc.setState(0xe6c0, 0x66ce, 0xd300, 0x7e55, 0x69e8, 0xd818, 0x1, 0x1);
        gbc.writeMem(0xe6c0, { 0x79 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x66ce, gbc.sp());
        EXPECT(0xe6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe6c0));
        // 79 022C
        gbc.setState(0x716d, 0x9fcc, 0x1410, 0x4ae6, 0x750c, 0x5cfb, 0x0, 0x1);
        gbc.writeMem(0x716d, { 0x79 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9fcc, gbc.sp());
        EXPECT(0x716e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 022D
        gbc.setState(0xd9b3, 0x164c, 0x7da0, 0x4086, 0xb0c3, 0xc298, 0x0, 0x0);
        gbc.writeMem(0xd9b3, { 0x79 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x164c, gbc.sp());
        EXPECT(0xd9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd9b3));
        // 79 022E
        gbc.setState(0xce32, 0x57c8, 0x1320, 0xa6ff, 0xc781, 0x38de, 0x1, 0x1);
        gbc.writeMem(0xce32, { 0x79 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x57c8, gbc.sp());
        EXPECT(0xce33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xce32));
        // 79 022F
        gbc.setState(0x185d, 0x4d7f, 0xd4d0, 0xfed8, 0x41c7, 0x84cc, 0x1, 0x1);
        gbc.writeMem(0x185d, { 0x79 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4d7f, gbc.sp());
        EXPECT(0x185e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0230
        gbc.setState(0xbc98, 0x12ea, 0xf360, 0xfe4b, 0x62de, 0xdce8, 0x0, 0x1);
        gbc.writeMem(0xbc98, { 0x79 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0xbc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbc98));
        // 79 0231
        gbc.setState(0xa1d8, 0x1aa1, 0xc840, 0xe55b, 0x6cc5, 0x4eb1, 0x0, 0x1);
        gbc.writeMem(0xa1d8, { 0x79 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1aa1, gbc.sp());
        EXPECT(0xa1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa1d8));
        // 79 0233
        gbc.setState(0x3813, 0x7dd0, 0xd290, 0xfcf0, 0x71ca, 0xd68b, 0x1, 0x1);
        gbc.writeMem(0x3813, { 0x79 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7dd0, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0234
        gbc.setState(0x2108, 0xed41, 0xdf0, 0xa471, 0x1c20, 0x94cd, 0x0, 0x0);
        gbc.writeMem(0x2108, { 0x79 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xed41, gbc.sp());
        EXPECT(0x2109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0235
        gbc.setState(0xb742, 0xc5b0, 0xe5d0, 0x8987, 0xf7a, 0xeec8, 0x1, 0x0);
        gbc.writeMem(0xb742, { 0x79 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc5b0, gbc.sp());
        EXPECT(0xb743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb742));
        // 79 0236
        gbc.setState(0xc13e, 0x3b1c, 0x95b0, 0xf794, 0xf501, 0x50c0, 0x1, 0x0);
        gbc.writeMem(0xc13e, { 0x79 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3b1c, gbc.sp());
        EXPECT(0xc13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc13e));
        // 79 0237
        gbc.setState(0xbf58, 0xf1a8, 0xfc60, 0xe2a4, 0xa720, 0x4c5d, 0x1, 0x0);
        gbc.writeMem(0xbf58, { 0x79 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf1a8, gbc.sp());
        EXPECT(0xbf59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbf58));
        // 79 0238
        gbc.setState(0x4bf7, 0x8137, 0x54a0, 0x7e57, 0xf940, 0xb7fa, 0x1, 0x1);
        gbc.writeMem(0x4bf7, { 0x79 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8137, gbc.sp());
        EXPECT(0x4bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0239
        gbc.setState(0x1763, 0x7599, 0x4bc0, 0x20ee, 0x2c47, 0xdb65, 0x0, 0x0);
        gbc.writeMem(0x1763, { 0x79 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7599, gbc.sp());
        EXPECT(0x1764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 023A
        gbc.setState(0x3707, 0xc4b3, 0xc290, 0x9f35, 0x30cd, 0x1d69, 0x0, 0x1);
        gbc.writeMem(0x3707, { 0x79 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc4b3, gbc.sp());
        EXPECT(0x3708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 023B
        gbc.setState(0x64da, 0x2c2a, 0x6ee0, 0xd171, 0xefcf, 0x4415, 0x1, 0x1);
        gbc.writeMem(0x64da, { 0x79 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2c2a, gbc.sp());
        EXPECT(0x64db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 023C
        gbc.setState(0xbaf8, 0xff00, 0xe2d0, 0x765, 0x6de4, 0xfb8a, 0x0, 0x0);
        gbc.writeMem(0xbaf8, { 0x79 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xff00, gbc.sp());
        EXPECT(0xbaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbaf8));
        // 79 023D
        gbc.setState(0xac55, 0x4606, 0x42a0, 0x64d0, 0x3aa3, 0xe07f, 0x1, 0x0);
        gbc.writeMem(0xac55, { 0x79 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4606, gbc.sp());
        EXPECT(0xac56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xac55));
        // 79 023E
        gbc.setState(0xc9ba, 0x955b, 0xe6d0, 0x3240, 0x79dd, 0xc46b, 0x1, 0x1);
        gbc.writeMem(0xc9ba, { 0x79 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x955b, gbc.sp());
        EXPECT(0xc9bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc9ba));
        // 79 023F
        gbc.setState(0x14cb, 0xdfd9, 0x4c20, 0x99c7, 0x1ab6, 0x60ab, 0x0, 0x0);
        gbc.writeMem(0x14cb, { 0x79 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdfd9, gbc.sp());
        EXPECT(0x14cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0240
        gbc.setState(0x21a2, 0xeda1, 0xe7b0, 0xfe93, 0xd030, 0xb02f, 0x1, 0x0);
        gbc.writeMem(0x21a2, { 0x79 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xeda1, gbc.sp());
        EXPECT(0x21a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0241
        gbc.setState(0x8765, 0x3b86, 0x84b0, 0x4a8a, 0x99fa, 0xe9c2, 0x0, 0x0);
        gbc.writeMem(0x8765, { 0x79 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3b86, gbc.sp());
        EXPECT(0x8766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8765));
        // 79 0242
        gbc.setState(0xd71b, 0xb92c, 0x5cf0, 0x4191, 0x2aa8, 0x7b83, 0x1, 0x1);
        gbc.writeMem(0xd71b, { 0x79 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb92c, gbc.sp());
        EXPECT(0xd71c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd71b));
        // 79 0243
        gbc.setState(0x7db0, 0x6fcc, 0xf720, 0x6e84, 0x7c02, 0xfee4, 0x1, 0x0);
        gbc.writeMem(0x7db0, { 0x79 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6fcc, gbc.sp());
        EXPECT(0x7db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0244
        gbc.setState(0x2b70, 0x1bea, 0xeac0, 0x378a, 0x6137, 0x25e4, 0x0, 0x1);
        gbc.writeMem(0x2b70, { 0x79 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1bea, gbc.sp());
        EXPECT(0x2b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0245
        gbc.setState(0x80b2, 0xa1ab, 0x9eb0, 0x792c, 0x4dc7, 0x8866, 0x1, 0x1);
        gbc.writeMem(0x80b2, { 0x79 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa1ab, gbc.sp());
        EXPECT(0x80b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x80b2));
        // 79 0246
        gbc.setState(0x2ebe, 0xaaf1, 0x2630, 0x1c1e, 0x710, 0x580f, 0x1, 0x1);
        gbc.writeMem(0x2ebe, { 0x79 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaaf1, gbc.sp());
        EXPECT(0x2ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0247
        gbc.setState(0xeb49, 0xebba, 0xa5a0, 0x1b27, 0xc738, 0x78e7, 0x1, 0x0);
        gbc.writeMem(0xeb49, { 0x79 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xebba, gbc.sp());
        EXPECT(0xeb4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeb49));
        // 79 0248
        gbc.setState(0x4142, 0x708c, 0x41e0, 0x5aa4, 0x3445, 0x5cba, 0x0, 0x0);
        gbc.writeMem(0x4142, { 0x79 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x708c, gbc.sp());
        EXPECT(0x4143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0249
        gbc.setState(0x430e, 0x5504, 0xd850, 0x1ec4, 0xa7ad, 0x34d2, 0x1, 0x0);
        gbc.writeMem(0x430e, { 0x79 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5504, gbc.sp());
        EXPECT(0x430f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 024A
        gbc.setState(0x57e7, 0x25df, 0x7e70, 0xa26, 0x39b6, 0x6228, 0x1, 0x1);
        gbc.writeMem(0x57e7, { 0x79 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x25df, gbc.sp());
        EXPECT(0x57e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 024B
        gbc.setState(0xacf7, 0xe0dd, 0xf90, 0xee1e, 0x8016, 0xb796, 0x1, 0x0);
        gbc.writeMem(0xacf7, { 0x79 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe0dd, gbc.sp());
        EXPECT(0xacf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xacf7));
        // 79 024C
        gbc.setState(0x293b, 0x8639, 0xba30, 0x6186, 0xc4ba, 0x9570, 0x0, 0x1);
        gbc.writeMem(0x293b, { 0x79 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8639, gbc.sp());
        EXPECT(0x293c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 024D
        gbc.setState(0x781a, 0x8129, 0x8f0, 0xa8c9, 0x6ee5, 0x6a1b, 0x0, 0x0);
        gbc.writeMem(0x781a, { 0x79 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8129, gbc.sp());
        EXPECT(0x781b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 024E
        gbc.setState(0x722f, 0x616a, 0xab40, 0x5bbb, 0x50b8, 0x99a4, 0x1, 0x0);
        gbc.writeMem(0x722f, { 0x79 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x616a, gbc.sp());
        EXPECT(0x7230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 024F
        gbc.setState(0x4b97, 0xa0b, 0x7f70, 0xfbb4, 0x9432, 0x20c1, 0x1, 0x0);
        gbc.writeMem(0x4b97, { 0x79 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa0b, gbc.sp());
        EXPECT(0x4b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0250
        gbc.setState(0x976c, 0xbad0, 0xb160, 0x3da0, 0x2dfb, 0x57d, 0x1, 0x0);
        gbc.writeMem(0x976c, { 0x79 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbad0, gbc.sp());
        EXPECT(0x976d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x976c));
        // 79 0251
        gbc.setState(0x38b5, 0x5c87, 0x8570, 0xedf5, 0x8d1b, 0x9185, 0x0, 0x0);
        gbc.writeMem(0x38b5, { 0x79 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5c87, gbc.sp());
        EXPECT(0x38b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0252
        gbc.setState(0x400, 0x6fe5, 0xbe40, 0x33d7, 0x2df2, 0xad52, 0x0, 0x1);
        gbc.writeMem(0x400, { 0x79 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6fe5, gbc.sp());
        EXPECT(0x401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0253
        gbc.setState(0xdb21, 0x605a, 0xe5f0, 0x7f3c, 0xf045, 0x8227, 0x1, 0x0);
        gbc.writeMem(0xdb21, { 0x79 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x605a, gbc.sp());
        EXPECT(0xdb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdb21));
        // 79 0254
        gbc.setState(0x4c4e, 0xcfa9, 0x41a0, 0xa01f, 0x6f3b, 0xac78, 0x0, 0x1);
        gbc.writeMem(0x4c4e, { 0x79 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcfa9, gbc.sp());
        EXPECT(0x4c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0255
        gbc.setState(0x3967, 0xde4f, 0x92a0, 0x30b5, 0xf27, 0x79a4, 0x1, 0x0);
        gbc.writeMem(0x3967, { 0x79 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xde4f, gbc.sp());
        EXPECT(0x3968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0256
        gbc.setState(0xa44f, 0x757c, 0x84f0, 0x7822, 0xa7a9, 0x88ec, 0x0, 0x1);
        gbc.writeMem(0xa44f, { 0x79 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x757c, gbc.sp());
        EXPECT(0xa450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa44f));
        // 79 0257
        gbc.setState(0x654a, 0x41bf, 0xe2b0, 0x2f94, 0xe1d2, 0x9d79, 0x0, 0x1);
        gbc.writeMem(0x654a, { 0x79 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x41bf, gbc.sp());
        EXPECT(0x654b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0258
        gbc.setState(0x8f4d, 0xdc14, 0xcb0, 0x141b, 0xcbc5, 0x5356, 0x0, 0x1);
        gbc.writeMem(0x8f4d, { 0x79 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdc14, gbc.sp());
        EXPECT(0x8f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8f4d));
        // 79 0259
        gbc.setState(0x5cc6, 0xd954, 0xa6b0, 0xf8ff, 0xbbb5, 0x2866, 0x1, 0x0);
        gbc.writeMem(0x5cc6, { 0x79 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd954, gbc.sp());
        EXPECT(0x5cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 025A
        gbc.setState(0x4840, 0x2e5c, 0x5d30, 0xcef0, 0x8e1a, 0x8dd5, 0x0, 0x1);
        gbc.writeMem(0x4840, { 0x79 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2e5c, gbc.sp());
        EXPECT(0x4841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 025B
        gbc.setState(0x2b41, 0x125d, 0xed20, 0xebda, 0x914c, 0xc42, 0x0, 0x0);
        gbc.writeMem(0x2b41, { 0x79 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x125d, gbc.sp());
        EXPECT(0x2b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 025C
        gbc.setState(0xc9ea, 0xefc0, 0x1790, 0xb633, 0x79e9, 0xd370, 0x0, 0x1);
        gbc.writeMem(0xc9ea, { 0x79 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xefc0, gbc.sp());
        EXPECT(0xc9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc9ea));
        // 79 025D
        gbc.setState(0xb068, 0x8a8e, 0x65d0, 0x9f62, 0xe02e, 0x8eb6, 0x0, 0x1);
        gbc.writeMem(0xb068, { 0x79 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8a8e, gbc.sp());
        EXPECT(0xb069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb068));
        // 79 025E
        gbc.setState(0x3ed6, 0x10f0, 0xa7d0, 0xf1a3, 0xd, 0xb575, 0x0, 0x0);
        gbc.writeMem(0x3ed6, { 0x79 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x10f0, gbc.sp());
        EXPECT(0x3ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 025F
        gbc.setState(0xe83b, 0x70e6, 0x27e0, 0xc42, 0x7e58, 0x1e7, 0x0, 0x1);
        gbc.writeMem(0xe83b, { 0x79 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x70e6, gbc.sp());
        EXPECT(0xe83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe83b));
        // 79 0260
        gbc.setState(0x1ba4, 0x4fb5, 0xdb30, 0xc546, 0xdc25, 0x6d54, 0x0, 0x0);
        gbc.writeMem(0x1ba4, { 0x79 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4fb5, gbc.sp());
        EXPECT(0x1ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0261
        gbc.setState(0x5658, 0xb182, 0x78b0, 0x5f4d, 0xebc8, 0x6fa9, 0x0, 0x0);
        gbc.writeMem(0x5658, { 0x79 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb182, gbc.sp());
        EXPECT(0x5659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0262
        gbc.setState(0xa83f, 0xd944, 0xfc60, 0x273c, 0xe1c8, 0x7faf, 0x1, 0x0);
        gbc.writeMem(0xa83f, { 0x79 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd944, gbc.sp());
        EXPECT(0xa840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa83f));
        // 79 0263
        gbc.setState(0x18ef, 0xc56f, 0xd4a0, 0x6abd, 0xe106, 0xd676, 0x0, 0x1);
        gbc.writeMem(0x18ef, { 0x79 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc56f, gbc.sp());
        EXPECT(0x18f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0264
        gbc.setState(0xbdeb, 0x5cd0, 0xa910, 0x2fc5, 0xcd7b, 0x43dd, 0x1, 0x0);
        gbc.writeMem(0xbdeb, { 0x79 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5cd0, gbc.sp());
        EXPECT(0xbdec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbdeb));
        // 79 0265
        gbc.setState(0x4048, 0xc9df, 0x9aa0, 0x2f2b, 0x733d, 0x6561, 0x1, 0x0);
        gbc.writeMem(0x4048, { 0x79 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc9df, gbc.sp());
        EXPECT(0x4049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0266
        gbc.setState(0x5cac, 0x4ba9, 0x8e40, 0xda78, 0x274b, 0xe6e9, 0x1, 0x1);
        gbc.writeMem(0x5cac, { 0x79 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4ba9, gbc.sp());
        EXPECT(0x5cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0267
        gbc.setState(0xcd29, 0x173a, 0x3cd0, 0xbc60, 0xd5b8, 0xfcc0, 0x1, 0x1);
        gbc.writeMem(0xcd29, { 0x79 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x173a, gbc.sp());
        EXPECT(0xcd2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcd29));
        // 79 0269
        gbc.setState(0x795d, 0x6f21, 0x8d60, 0x6a8, 0xff89, 0x12fe, 0x1, 0x0);
        gbc.writeMem(0x795d, { 0x79 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6f21, gbc.sp());
        EXPECT(0x795e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 026A
        gbc.setState(0x4c3f, 0xf49d, 0xf160, 0x58d5, 0xb8f0, 0x1ec5, 0x0, 0x0);
        gbc.writeMem(0x4c3f, { 0x79 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf49d, gbc.sp());
        EXPECT(0x4c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 026B
        gbc.setState(0x6851, 0xe92e, 0x69d0, 0x771c, 0xda68, 0x3d16, 0x0, 0x0);
        gbc.writeMem(0x6851, { 0x79 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe92e, gbc.sp());
        EXPECT(0x6852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 026C
        gbc.setState(0xde1d, 0xf858, 0xf4a0, 0xb738, 0xaf98, 0xca5f, 0x0, 0x1);
        gbc.writeMem(0xde1d, { 0x79 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf858, gbc.sp());
        EXPECT(0xde1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xde1d));
        // 79 026D
        gbc.setState(0x8ac9, 0x3538, 0x8980, 0x752c, 0x78da, 0x9194, 0x1, 0x1);
        gbc.writeMem(0x8ac9, { 0x79 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3538, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8ac9));
        // 79 026E
        gbc.setState(0x527, 0x7882, 0x9930, 0x7a70, 0x338e, 0x209a, 0x0, 0x0);
        gbc.writeMem(0x527, { 0x79 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7882, gbc.sp());
        EXPECT(0x528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 026F
        gbc.setState(0xdb8f, 0x7ec5, 0x2690, 0x1aa8, 0x9bfe, 0x74f6, 0x0, 0x1);
        gbc.writeMem(0xdb8f, { 0x79 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7ec5, gbc.sp());
        EXPECT(0xdb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdb8f));
        // 79 0270
        gbc.setState(0x59cd, 0x345b, 0x4e60, 0x3e44, 0xe27d, 0x6882, 0x0, 0x0);
        gbc.writeMem(0x59cd, { 0x79 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x345b, gbc.sp());
        EXPECT(0x59ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0271
        gbc.setState(0xef55, 0xf5df, 0xc1a0, 0x998d, 0xf9f2, 0xc4af, 0x0, 0x1);
        gbc.writeMem(0xef55, { 0x79 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf5df, gbc.sp());
        EXPECT(0xef56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xef55));
        // 79 0272
        gbc.setState(0x78f7, 0x88cd, 0x5e60, 0x605d, 0x6d1d, 0xa978, 0x0, 0x1);
        gbc.writeMem(0x78f7, { 0x79 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x88cd, gbc.sp());
        EXPECT(0x78f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0273
        gbc.setState(0x3aae, 0x7436, 0xa9f0, 0x8cbf, 0x5958, 0xa63f, 0x1, 0x0);
        gbc.writeMem(0x3aae, { 0x79 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7436, gbc.sp());
        EXPECT(0x3aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0274
        gbc.setState(0x19f2, 0x55ef, 0x95f0, 0xd423, 0xcf91, 0x5f82, 0x1, 0x1);
        gbc.writeMem(0x19f2, { 0x79 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x55ef, gbc.sp());
        EXPECT(0x19f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0275
        gbc.setState(0xb949, 0x453d, 0x3f10, 0xb98, 0xff82, 0xe4f4, 0x1, 0x0);
        gbc.writeMem(0xb949, { 0x79 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x453d, gbc.sp());
        EXPECT(0xb94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb949));
        // 79 0276
        gbc.setState(0xe1ed, 0x4182, 0xaee0, 0xbc18, 0xaff4, 0x1c66, 0x0, 0x1);
        gbc.writeMem(0xe1ed, { 0x79 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4182, gbc.sp());
        EXPECT(0xe1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe1ed));
        // 79 0277
        gbc.setState(0xe4d2, 0x4317, 0x76f0, 0xaaa8, 0xe1b5, 0x9428, 0x1, 0x1);
        gbc.writeMem(0xe4d2, { 0x79 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4317, gbc.sp());
        EXPECT(0xe4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe4d2));
        // 79 0278
        gbc.setState(0x8f7d, 0x2df8, 0x46a0, 0xe888, 0x4e41, 0x353a, 0x1, 0x0);
        gbc.writeMem(0x8f7d, { 0x79 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2df8, gbc.sp());
        EXPECT(0x8f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8f7d));
        // 79 0279
        gbc.setState(0x3eab, 0x4dca, 0x5090, 0xe00b, 0x91e3, 0xc959, 0x0, 0x0);
        gbc.writeMem(0x3eab, { 0x79 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4dca, gbc.sp());
        EXPECT(0x3eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 027A
        gbc.setState(0xaa68, 0xdc47, 0x4780, 0x36e6, 0x4fa4, 0x9875, 0x0, 0x0);
        gbc.writeMem(0xaa68, { 0x79 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdc47, gbc.sp());
        EXPECT(0xaa69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xaa68));
        // 79 027B
        gbc.setState(0xc6c6, 0x450c, 0x2e50, 0x207d, 0x7b66, 0x2d13, 0x0, 0x0);
        gbc.writeMem(0xc6c6, { 0x79 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x450c, gbc.sp());
        EXPECT(0xc6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc6c6));
        // 79 027C
        gbc.setState(0x8020, 0x6cb2, 0x29f0, 0x3463, 0xb6d8, 0x68f0, 0x0, 0x0);
        gbc.writeMem(0x8020, { 0x79 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6cb2, gbc.sp());
        EXPECT(0x8021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8020));
        // 79 027D
        gbc.setState(0x9f21, 0xae2c, 0x7940, 0x795f, 0x7afe, 0x14de, 0x1, 0x0);
        gbc.writeMem(0x9f21, { 0x79 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xae2c, gbc.sp());
        EXPECT(0x9f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9f21));
        // 79 027E
        gbc.setState(0xa4b6, 0xf131, 0x7880, 0x927, 0xcbd6, 0x2bf1, 0x0, 0x0);
        gbc.writeMem(0xa4b6, { 0x79 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf131, gbc.sp());
        EXPECT(0xa4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa4b6));
        // 79 0280
        gbc.setState(0xe319, 0x3445, 0xf0b0, 0xe161, 0x5905, 0x4f22, 0x0, 0x1);
        gbc.writeMem(0xe319, { 0x79 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3445, gbc.sp());
        EXPECT(0xe31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe319));
        // 79 0281
        gbc.setState(0xe24a, 0xf82f, 0x8fb0, 0xced, 0xa8bf, 0x1eab, 0x0, 0x1);
        gbc.writeMem(0xe24a, { 0x79 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf82f, gbc.sp());
        EXPECT(0xe24b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe24a));
        // 79 0282
        gbc.setState(0x4df1, 0x4989, 0x7f10, 0xac56, 0x58f1, 0x57b8, 0x0, 0x0);
        gbc.writeMem(0x4df1, { 0x79 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4989, gbc.sp());
        EXPECT(0x4df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0283
        gbc.setState(0x8e49, 0x85bd, 0x4250, 0x5aa, 0x658c, 0xe099, 0x0, 0x0);
        gbc.writeMem(0x8e49, { 0x79 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x85bd, gbc.sp());
        EXPECT(0x8e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8e49));
        // 79 0285
        gbc.setState(0x9c15, 0x6a06, 0xd010, 0x84a6, 0xa52b, 0xd265, 0x1, 0x0);
        gbc.writeMem(0x9c15, { 0x79 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6a06, gbc.sp());
        EXPECT(0x9c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9c15));
        // 79 0286
        gbc.setState(0xecd, 0xd710, 0x63a0, 0x4495, 0x6bd2, 0xa3a, 0x0, 0x1);
        gbc.writeMem(0xecd, { 0x79 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd710, gbc.sp());
        EXPECT(0xece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0287
        gbc.setState(0x660, 0xa571, 0x5840, 0x2b22, 0xf5bf, 0x4c87, 0x0, 0x0);
        gbc.writeMem(0x660, { 0x79 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa571, gbc.sp());
        EXPECT(0x661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0288
        gbc.setState(0x2dff, 0x1864, 0xa400, 0xace5, 0x79b1, 0xfb34, 0x0, 0x1);
        gbc.writeMem(0x2dff, { 0x79 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1864, gbc.sp());
        EXPECT(0x2e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0289
        gbc.setState(0x8330, 0x4391, 0x1680, 0xead3, 0x380, 0x88d3, 0x1, 0x1);
        gbc.writeMem(0x8330, { 0x79 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4391, gbc.sp());
        EXPECT(0x8331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8330));
        // 79 028A
        gbc.setState(0x1cf, 0xf989, 0x350, 0x15ce, 0xb4d2, 0x608e, 0x1, 0x0);
        gbc.writeMem(0x1cf, { 0x79 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf989, gbc.sp());
        EXPECT(0x1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 028B
        gbc.setState(0x6218, 0x7617, 0x60c0, 0xffcc, 0x806f, 0x7f51, 0x1, 0x1);
        gbc.writeMem(0x6218, { 0x79 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7617, gbc.sp());
        EXPECT(0x6219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 028C
        gbc.setState(0xdcf6, 0x6126, 0xd4a0, 0x2f39, 0x122c, 0x44c0, 0x0, 0x0);
        gbc.writeMem(0xdcf6, { 0x79 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6126, gbc.sp());
        EXPECT(0xdcf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdcf6));
        // 79 028D
        gbc.setState(0x44, 0x7995, 0x9220, 0xcf8b, 0x64be, 0x77bd, 0x1, 0x0);
        gbc.writeMem(0x44, { 0x79 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7995, gbc.sp());
        EXPECT(0x45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 028E
        gbc.setState(0xe904, 0x112e, 0xbf40, 0x55b5, 0x89d7, 0x6405, 0x1, 0x1);
        gbc.writeMem(0xe904, { 0x79 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x112e, gbc.sp());
        EXPECT(0xe905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe904));
        // 79 028F
        gbc.setState(0x55be, 0xae78, 0xd020, 0xbb6c, 0x1a5, 0x5023, 0x1, 0x1);
        gbc.writeMem(0x55be, { 0x79 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xae78, gbc.sp());
        EXPECT(0x55bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0290
        gbc.setState(0xb740, 0xc93, 0x8a20, 0xd8e8, 0x72fa, 0x1c6, 0x0, 0x1);
        gbc.writeMem(0xb740, { 0x79 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc93, gbc.sp());
        EXPECT(0xb741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb740));
        // 79 0291
        gbc.setState(0x943c, 0x4ab5, 0x3610, 0x20a5, 0x4edc, 0xb942, 0x0, 0x0);
        gbc.writeMem(0x943c, { 0x79 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4ab5, gbc.sp());
        EXPECT(0x943d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x943c));
        // 79 0292
        gbc.setState(0xba7b, 0xb220, 0xeef0, 0xbfb3, 0xd703, 0xaae8, 0x0, 0x1);
        gbc.writeMem(0xba7b, { 0x79 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb220, gbc.sp());
        EXPECT(0xba7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xba7b));
        // 79 0295
        gbc.setState(0xdef8, 0x313, 0xf580, 0x2b76, 0x2494, 0x7455, 0x0, 0x0);
        gbc.writeMem(0xdef8, { 0x79 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x313, gbc.sp());
        EXPECT(0xdef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdef8));
        // 79 0296
        gbc.setState(0x6093, 0x537a, 0x48f0, 0xf4cc, 0x1d04, 0x6745, 0x0, 0x0);
        gbc.writeMem(0x6093, { 0x79 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x537a, gbc.sp());
        EXPECT(0x6094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0297
        gbc.setState(0x6ba1, 0x1c, 0x84b0, 0x35f2, 0x3427, 0x23dc, 0x0, 0x0);
        gbc.writeMem(0x6ba1, { 0x79 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1c, gbc.sp());
        EXPECT(0x6ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0298
        gbc.setState(0xc434, 0xcc53, 0x1990, 0xd775, 0x88a2, 0xddb3, 0x1, 0x0);
        gbc.writeMem(0xc434, { 0x79 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcc53, gbc.sp());
        EXPECT(0xc435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc434));
        // 79 0299
        gbc.setState(0x84b0, 0x8974, 0x4610, 0xe389, 0xda39, 0xb109, 0x0, 0x0);
        gbc.writeMem(0x84b0, { 0x79 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8974, gbc.sp());
        EXPECT(0x84b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x84b0));
        // 79 029A
        gbc.setState(0x9ba1, 0x3566, 0x3280, 0x28fe, 0x6d8, 0x1fed, 0x0, 0x1);
        gbc.writeMem(0x9ba1, { 0x79 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3566, gbc.sp());
        EXPECT(0x9ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9ba1));
        // 79 029B
        gbc.setState(0x90c5, 0xace5, 0x42c0, 0x1e54, 0xe3a5, 0xd053, 0x0, 0x1);
        gbc.writeMem(0x90c5, { 0x79 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xace5, gbc.sp());
        EXPECT(0x90c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x90c5));
        // 79 029C
        gbc.setState(0x8b65, 0x59c, 0x7100, 0x9310, 0xb2b6, 0xcf02, 0x1, 0x0);
        gbc.writeMem(0x8b65, { 0x79 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x59c, gbc.sp());
        EXPECT(0x8b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8b65));
        // 79 029D
        gbc.setState(0x4a22, 0x734c, 0xf290, 0xd4e0, 0xb378, 0x89ce, 0x0, 0x0);
        gbc.writeMem(0x4a22, { 0x79 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x734c, gbc.sp());
        EXPECT(0x4a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 029E
        gbc.setState(0x9fa7, 0x705f, 0x7740, 0xb1d4, 0xcbaf, 0xddb1, 0x0, 0x1);
        gbc.writeMem(0x9fa7, { 0x79 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x705f, gbc.sp());
        EXPECT(0x9fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9fa7));
        // 79 029F
        gbc.setState(0xb361, 0x7bab, 0x7ff0, 0x7f8d, 0x2e8c, 0x94bd, 0x0, 0x0);
        gbc.writeMem(0xb361, { 0x79 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7bab, gbc.sp());
        EXPECT(0xb362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb361));
        // 79 02A0
        gbc.setState(0xbbb5, 0x9539, 0x7ca0, 0x9e07, 0xc8c6, 0x487a, 0x0, 0x0);
        gbc.writeMem(0xbbb5, { 0x79 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9539, gbc.sp());
        EXPECT(0xbbb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbbb5));
        // 79 02A1
        gbc.setState(0xa794, 0x131b, 0xb6d0, 0x76bf, 0x8966, 0x3b9a, 0x0, 0x0);
        gbc.writeMem(0xa794, { 0x79 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x131b, gbc.sp());
        EXPECT(0xa795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa794));
        // 79 02A2
        gbc.setState(0xdf28, 0xa23c, 0xfd90, 0xf1e9, 0x556a, 0xf940, 0x0, 0x0);
        gbc.writeMem(0xdf28, { 0x79 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa23c, gbc.sp());
        EXPECT(0xdf29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdf28));
        // 79 02A3
        gbc.setState(0x11d7, 0xaabe, 0xffa0, 0xec9b, 0xc17e, 0x4d86, 0x1, 0x1);
        gbc.writeMem(0x11d7, { 0x79 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xaabe, gbc.sp());
        EXPECT(0x11d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02A4
        gbc.setState(0x6b84, 0xf1af, 0xc7e0, 0xd882, 0xf5ce, 0x9cc1, 0x0, 0x0);
        gbc.writeMem(0x6b84, { 0x79 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf1af, gbc.sp());
        EXPECT(0x6b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02A5
        gbc.setState(0x7f4a, 0x6d8, 0x1120, 0x3a6b, 0x72ad, 0xc23, 0x0, 0x0);
        gbc.writeMem(0x7f4a, { 0x79 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6d8, gbc.sp());
        EXPECT(0x7f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02A6
        gbc.setState(0x26f4, 0x3b89, 0x3ef0, 0x95dc, 0x1ce1, 0x5e53, 0x0, 0x1);
        gbc.writeMem(0x26f4, { 0x79 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3b89, gbc.sp());
        EXPECT(0x26f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02A7
        gbc.setState(0xa55a, 0xfd5d, 0xf7f0, 0x34b0, 0x31c1, 0x6570, 0x1, 0x0);
        gbc.writeMem(0xa55a, { 0x79 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfd5d, gbc.sp());
        EXPECT(0xa55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa55a));
        // 79 02A8
        gbc.setState(0x1d0c, 0x6961, 0x1af0, 0xba34, 0x639, 0x26d4, 0x0, 0x0);
        gbc.writeMem(0x1d0c, { 0x79 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6961, gbc.sp());
        EXPECT(0x1d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02A9
        gbc.setState(0x3e39, 0x809d, 0x2740, 0xef1c, 0x675f, 0x337d, 0x0, 0x1);
        gbc.writeMem(0x3e39, { 0x79 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x809d, gbc.sp());
        EXPECT(0x3e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02AA
        gbc.setState(0xaa4d, 0x8381, 0x52c0, 0xb133, 0xcba7, 0xe2b3, 0x1, 0x1);
        gbc.writeMem(0xaa4d, { 0x79 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8381, gbc.sp());
        EXPECT(0xaa4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xaa4d));
        // 79 02AB
        gbc.setState(0xb021, 0x6937, 0x1ee0, 0xe2df, 0x330c, 0xb9, 0x0, 0x1);
        gbc.writeMem(0xb021, { 0x79 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6937, gbc.sp());
        EXPECT(0xb022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb021));
        // 79 02AC
        gbc.setState(0xc549, 0xc60d, 0x38a0, 0x3a57, 0xee15, 0x5620, 0x1, 0x0);
        gbc.writeMem(0xc549, { 0x79 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc60d, gbc.sp());
        EXPECT(0xc54a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc549));
        // 79 02AD
        gbc.setState(0xab06, 0x4c3b, 0x8e30, 0x4b8a, 0x9499, 0x4d9f, 0x1, 0x1);
        gbc.writeMem(0xab06, { 0x79 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4c3b, gbc.sp());
        EXPECT(0xab07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xab06));
        // 79 02AE
        gbc.setState(0x42da, 0x7dd1, 0xed50, 0xbfe5, 0xebac, 0x86c1, 0x1, 0x1);
        gbc.writeMem(0x42da, { 0x79 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7dd1, gbc.sp());
        EXPECT(0x42db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02AF
        gbc.setState(0x2ce0, 0x9d95, 0xc210, 0xa5e2, 0xfab4, 0x5941, 0x0, 0x0);
        gbc.writeMem(0x2ce0, { 0x79 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9d95, gbc.sp());
        EXPECT(0x2ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02B0
        gbc.setState(0xedaa, 0x6cab, 0x1b50, 0xb108, 0x7e90, 0x39ab, 0x0, 0x1);
        gbc.writeMem(0xedaa, { 0x79 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6cab, gbc.sp());
        EXPECT(0xedab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xedaa));
        // 79 02B1
        gbc.setState(0x927, 0xa4d1, 0x3e70, 0x781, 0xa813, 0x517e, 0x0, 0x1);
        gbc.writeMem(0x927, { 0x79 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa4d1, gbc.sp());
        EXPECT(0x928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02B2
        gbc.setState(0x688b, 0x3add, 0x0, 0x4749, 0xed59, 0x5a9e, 0x0, 0x0);
        gbc.writeMem(0x688b, { 0x79 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3add, gbc.sp());
        EXPECT(0x688c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02B3
        gbc.setState(0x1108, 0x1312, 0x22c0, 0x316e, 0x904c, 0x5f46, 0x0, 0x1);
        gbc.writeMem(0x1108, { 0x79 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1312, gbc.sp());
        EXPECT(0x1109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02B4
        gbc.setState(0x43c6, 0x2883, 0x3830, 0x83c6, 0xbb88, 0x76bc, 0x0, 0x1);
        gbc.writeMem(0x43c6, { 0x79 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2883, gbc.sp());
        EXPECT(0x43c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02B5
        gbc.setState(0xb63e, 0x5a61, 0x7880, 0xefdc, 0x4571, 0xf2d5, 0x0, 0x0);
        gbc.writeMem(0xb63e, { 0x79 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5a61, gbc.sp());
        EXPECT(0xb63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb63e));
        // 79 02B6
        gbc.setState(0x7929, 0x92ee, 0xa030, 0xff9e, 0xb567, 0x7b30, 0x1, 0x0);
        gbc.writeMem(0x7929, { 0x79 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x92ee, gbc.sp());
        EXPECT(0x792a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02B7
        gbc.setState(0xaf87, 0xbe7, 0xc160, 0x51c9, 0x9727, 0xad58, 0x0, 0x1);
        gbc.writeMem(0xaf87, { 0x79 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbe7, gbc.sp());
        EXPECT(0xaf88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xaf87));
        // 79 02B8
        gbc.setState(0x22fd, 0x2585, 0x1f00, 0x878d, 0x75ca, 0xcadd, 0x0, 0x1);
        gbc.writeMem(0x22fd, { 0x79 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2585, gbc.sp());
        EXPECT(0x22fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02B9
        gbc.setState(0x6a8f, 0xe21c, 0x73e0, 0x57f8, 0xcf67, 0x2682, 0x0, 0x0);
        gbc.writeMem(0x6a8f, { 0x79 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe21c, gbc.sp());
        EXPECT(0x6a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02BA
        gbc.setState(0x9561, 0x48eb, 0xc470, 0x77cb, 0x78eb, 0x65bf, 0x0, 0x1);
        gbc.writeMem(0x9561, { 0x79 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x48eb, gbc.sp());
        EXPECT(0x9562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9561));
        // 79 02BB
        gbc.setState(0xa7ac, 0x1fdb, 0x7c30, 0xaade, 0xbd9e, 0x12f8, 0x1, 0x1);
        gbc.writeMem(0xa7ac, { 0x79 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1fdb, gbc.sp());
        EXPECT(0xa7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa7ac));
        // 79 02BC
        gbc.setState(0x620a, 0x15dc, 0x2bf0, 0x5235, 0xe520, 0xef10, 0x1, 0x0);
        gbc.writeMem(0x620a, { 0x79 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x15dc, gbc.sp());
        EXPECT(0x620b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02BD
        gbc.setState(0x5784, 0x9550, 0xba60, 0x82ff, 0x56fa, 0x2493, 0x0, 0x1);
        gbc.writeMem(0x5784, { 0x79 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9550, gbc.sp());
        EXPECT(0x5785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02BE
        gbc.setState(0xdc76, 0x5e46, 0x36c0, 0xbca, 0x54f7, 0x219, 0x0, 0x0);
        gbc.writeMem(0xdc76, { 0x79 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5e46, gbc.sp());
        EXPECT(0xdc77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdc76));
        // 79 02BF
        gbc.setState(0x9468, 0xad99, 0xa320, 0xb574, 0x8ac4, 0x636c, 0x0, 0x0);
        gbc.writeMem(0x9468, { 0x79 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xad99, gbc.sp());
        EXPECT(0x9469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9468));
        // 79 02C0
        gbc.setState(0x3023, 0x21d5, 0x87a0, 0x17e8, 0xd7e8, 0x4ec8, 0x0, 0x0);
        gbc.writeMem(0x3023, { 0x79 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x21d5, gbc.sp());
        EXPECT(0x3024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02C1
        gbc.setState(0x5afe, 0xfdbb, 0x8450, 0x9245, 0x2a8c, 0xd80c, 0x1, 0x0);
        gbc.writeMem(0x5afe, { 0x79 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfdbb, gbc.sp());
        EXPECT(0x5aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02C2
        gbc.setState(0xc882, 0x2dda, 0x8d0, 0xc804, 0xc169, 0xb313, 0x0, 0x1);
        gbc.writeMem(0xc882, { 0x79 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2dda, gbc.sp());
        EXPECT(0xc883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc882));
        // 79 02C3
        gbc.setState(0xdbec, 0x52b, 0x5ee0, 0x5e23, 0x8c14, 0xea66, 0x0, 0x0);
        gbc.writeMem(0xdbec, { 0x79 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x52b, gbc.sp());
        EXPECT(0xdbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdbec));
        // 79 02C4
        gbc.setState(0x43, 0x4f07, 0x3ca0, 0x9b41, 0xaaf5, 0xf5be, 0x0, 0x1);
        gbc.writeMem(0x43, { 0x79 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4f07, gbc.sp());
        EXPECT(0x44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02C5
        gbc.setState(0xb8d5, 0x844e, 0x3d0, 0x7f31, 0x9605, 0x3f91, 0x1, 0x1);
        gbc.writeMem(0xb8d5, { 0x79 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x844e, gbc.sp());
        EXPECT(0xb8d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb8d5));
        // 79 02C6
        gbc.setState(0x5e48, 0x9195, 0x12c0, 0x43ff, 0x5c9e, 0xc37, 0x1, 0x1);
        gbc.writeMem(0x5e48, { 0x79 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9195, gbc.sp());
        EXPECT(0x5e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02C7
        gbc.setState(0xa815, 0x2694, 0x94b0, 0x7f4f, 0xebd5, 0x99fa, 0x0, 0x1);
        gbc.writeMem(0xa815, { 0x79 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2694, gbc.sp());
        EXPECT(0xa816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa815));
        // 79 02C8
        gbc.setState(0xbe1c, 0x5c42, 0x7870, 0x3eb, 0x9cf, 0x3f04, 0x0, 0x1);
        gbc.writeMem(0xbe1c, { 0x79 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5c42, gbc.sp());
        EXPECT(0xbe1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbe1c));
        // 79 02C9
        gbc.setState(0x82e9, 0x6ce, 0xae90, 0x69fc, 0x14c4, 0x55aa, 0x1, 0x0);
        gbc.writeMem(0x82e9, { 0x79 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6ce, gbc.sp());
        EXPECT(0x82ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x82e9));
        // 79 02CA
        gbc.setState(0x5eb2, 0x9432, 0x9c10, 0x1f64, 0x1408, 0x3dc1, 0x1, 0x1);
        gbc.writeMem(0x5eb2, { 0x79 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9432, gbc.sp());
        EXPECT(0x5eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02CB
        gbc.setState(0x80cd, 0x282a, 0xc6d0, 0x9b13, 0xd99f, 0xcacc, 0x0, 0x1);
        gbc.writeMem(0x80cd, { 0x79 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x282a, gbc.sp());
        EXPECT(0x80ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x80cd));
        // 79 02CC
        gbc.setState(0xc837, 0xec24, 0x6520, 0xef17, 0xb1b4, 0x6074, 0x1, 0x1);
        gbc.writeMem(0xc837, { 0x79 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xec24, gbc.sp());
        EXPECT(0xc838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc837));
        // 79 02CD
        gbc.setState(0x83e9, 0x10f8, 0x980, 0x4e4d, 0x5612, 0xd295, 0x0, 0x0);
        gbc.writeMem(0x83e9, { 0x79 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x10f8, gbc.sp());
        EXPECT(0x83ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x83e9));
        // 79 02CE
        gbc.setState(0xca8a, 0xf6bb, 0x9f30, 0x3275, 0xa7b3, 0x4670, 0x1, 0x1);
        gbc.writeMem(0xca8a, { 0x79 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf6bb, gbc.sp());
        EXPECT(0xca8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xca8a));
        // 79 02CF
        gbc.setState(0xbe0, 0xda33, 0xf240, 0x4a4d, 0x11eb, 0xa76e, 0x0, 0x1);
        gbc.writeMem(0xbe0, { 0x79 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xda33, gbc.sp());
        EXPECT(0xbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02D0
        gbc.setState(0x92f3, 0xb7a7, 0xfcf0, 0x20b6, 0x1993, 0x7e7f, 0x0, 0x1);
        gbc.writeMem(0x92f3, { 0x79 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb7a7, gbc.sp());
        EXPECT(0x92f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x92f3));
        // 79 02D1
        gbc.setState(0x1c4b, 0xa066, 0x85b0, 0x24a8, 0x382a, 0x5cc, 0x0, 0x0);
        gbc.writeMem(0x1c4b, { 0x79 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa066, gbc.sp());
        EXPECT(0x1c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02D2
        gbc.setState(0x5886, 0x8804, 0x8250, 0x934d, 0x3de6, 0x271a, 0x0, 0x1);
        gbc.writeMem(0x5886, { 0x79 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8804, gbc.sp());
        EXPECT(0x5887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02D3
        gbc.setState(0x74e8, 0xb27e, 0xac30, 0x7e59, 0xe542, 0x8f8c, 0x1, 0x0);
        gbc.writeMem(0x74e8, { 0x79 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb27e, gbc.sp());
        EXPECT(0x74e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02D4
        gbc.setState(0x109d, 0x62a4, 0xb140, 0xbfc1, 0x442f, 0xad41, 0x1, 0x1);
        gbc.writeMem(0x109d, { 0x79 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x62a4, gbc.sp());
        EXPECT(0x109e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02D5
        gbc.setState(0x6aa0, 0x7fa0, 0xd130, 0x87c0, 0x2c1d, 0x1762, 0x1, 0x1);
        gbc.writeMem(0x6aa0, { 0x79 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7fa0, gbc.sp());
        EXPECT(0x6aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02D6
        gbc.setState(0x94d7, 0xaf91, 0x9820, 0xc3b3, 0x5e27, 0x224f, 0x1, 0x0);
        gbc.writeMem(0x94d7, { 0x79 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xaf91, gbc.sp());
        EXPECT(0x94d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x94d7));
        // 79 02D7
        gbc.setState(0x9311, 0x1dc1, 0xe1a0, 0x7cca, 0xab4a, 0x8329, 0x0, 0x1);
        gbc.writeMem(0x9311, { 0x79 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1dc1, gbc.sp());
        EXPECT(0x9312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9311));
        // 79 02D8
        gbc.setState(0x32a5, 0x69b2, 0xb540, 0x2fc0, 0x7085, 0xfe1f, 0x1, 0x0);
        gbc.writeMem(0x32a5, { 0x79 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x69b2, gbc.sp());
        EXPECT(0x32a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02D9
        gbc.setState(0x783f, 0x1278, 0x4230, 0xc253, 0xa4db, 0xaad0, 0x0, 0x1);
        gbc.writeMem(0x783f, { 0x79 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1278, gbc.sp());
        EXPECT(0x7840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02DA
        gbc.setState(0x695d, 0xd112, 0x1e00, 0xae59, 0xa78b, 0x54d5, 0x0, 0x0);
        gbc.writeMem(0x695d, { 0x79 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd112, gbc.sp());
        EXPECT(0x695e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02DB
        gbc.setState(0x97c1, 0xe29e, 0x58e0, 0xa14d, 0x4fe, 0x2386, 0x1, 0x1);
        gbc.writeMem(0x97c1, { 0x79 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe29e, gbc.sp());
        EXPECT(0x97c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x97c1));
        // 79 02DC
        gbc.setState(0x1613, 0x37a3, 0xe890, 0xf7cf, 0xcf1f, 0x20e1, 0x1, 0x1);
        gbc.writeMem(0x1613, { 0x79 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x37a3, gbc.sp());
        EXPECT(0x1614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02DD
        gbc.setState(0xeef0, 0x4ab4, 0xab20, 0x2424, 0xf1fe, 0xc0ab, 0x1, 0x0);
        gbc.writeMem(0xeef0, { 0x79 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4ab4, gbc.sp());
        EXPECT(0xeef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeef0));
        // 79 02DF
        gbc.setState(0xe754, 0x560, 0x7bc0, 0x222e, 0xd542, 0x6b2d, 0x0, 0x0);
        gbc.writeMem(0xe754, { 0x79 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x560, gbc.sp());
        EXPECT(0xe755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe754));
        // 79 02E0
        gbc.setState(0x1c8e, 0x9cdf, 0x2ac0, 0x60db, 0xad84, 0xa765, 0x0, 0x1);
        gbc.writeMem(0x1c8e, { 0x79 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9cdf, gbc.sp());
        EXPECT(0x1c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02E1
        gbc.setState(0x8b8d, 0x2f6d, 0x3660, 0xcafb, 0xa2f4, 0x51e5, 0x1, 0x0);
        gbc.writeMem(0x8b8d, { 0x79 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2f6d, gbc.sp());
        EXPECT(0x8b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8b8d));
        // 79 02E2
        gbc.setState(0x88dc, 0x231a, 0x250, 0xd283, 0xbcbe, 0x92a7, 0x1, 0x1);
        gbc.writeMem(0x88dc, { 0x79 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x231a, gbc.sp());
        EXPECT(0x88dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x88dc));
        // 79 02E3
        gbc.setState(0x30b, 0xcfd, 0x4860, 0xdb16, 0xb48e, 0xcab7, 0x0, 0x1);
        gbc.writeMem(0x30b, { 0x79 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcfd, gbc.sp());
        EXPECT(0x30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02E4
        gbc.setState(0xbfb0, 0xc9e6, 0x8750, 0x6510, 0xc830, 0x38eb, 0x1, 0x0);
        gbc.writeMem(0xbfb0, { 0x79 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc9e6, gbc.sp());
        EXPECT(0xbfb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbfb0));
        // 79 02E5
        gbc.setState(0xb939, 0xdaaa, 0x86f0, 0xa92b, 0x987b, 0xa002, 0x1, 0x0);
        gbc.writeMem(0xb939, { 0x79 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdaaa, gbc.sp());
        EXPECT(0xb93a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb939));
        // 79 02E6
        gbc.setState(0xc3f4, 0xf209, 0x5bb0, 0x84c4, 0xb76f, 0x921, 0x1, 0x1);
        gbc.writeMem(0xc3f4, { 0x79 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf209, gbc.sp());
        EXPECT(0xc3f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc3f4));
        // 79 02E7
        gbc.setState(0x2a39, 0xbcd1, 0xf140, 0x5f38, 0x3e52, 0xad33, 0x1, 0x0);
        gbc.writeMem(0x2a39, { 0x79 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbcd1, gbc.sp());
        EXPECT(0x2a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02E8
        gbc.setState(0x2a9f, 0xd0c1, 0xaa0, 0xda17, 0x1535, 0x3a1b, 0x1, 0x1);
        gbc.writeMem(0x2a9f, { 0x79 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd0c1, gbc.sp());
        EXPECT(0x2aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02E9
        gbc.setState(0x6fed, 0x9867, 0xaec0, 0x909e, 0xa5c3, 0x3b38, 0x1, 0x1);
        gbc.writeMem(0x6fed, { 0x79 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9867, gbc.sp());
        EXPECT(0x6fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02EA
        gbc.setState(0xc7f7, 0x61d7, 0x3790, 0x2f92, 0xce6b, 0xcfac, 0x0, 0x1);
        gbc.writeMem(0xc7f7, { 0x79 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0xc7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc7f7));
        // 79 02EB
        gbc.setState(0x4b87, 0x278e, 0x4f30, 0xd997, 0xbd07, 0x3a06, 0x1, 0x1);
        gbc.writeMem(0x4b87, { 0x79 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x278e, gbc.sp());
        EXPECT(0x4b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02EC
        gbc.setState(0x571, 0x27c5, 0xa780, 0xb6f4, 0xd1f5, 0xc94a, 0x1, 0x1);
        gbc.writeMem(0x571, { 0x79 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x27c5, gbc.sp());
        EXPECT(0x572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02ED
        gbc.setState(0xccbb, 0xd444, 0xcd10, 0x3e99, 0x664e, 0x44a6, 0x1, 0x0);
        gbc.writeMem(0xccbb, { 0x79 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd444, gbc.sp());
        EXPECT(0xccbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xccbb));
        // 79 02EF
        gbc.setState(0x7441, 0x5a6, 0x7c00, 0xaacb, 0x7ea7, 0x3401, 0x1, 0x1);
        gbc.writeMem(0x7441, { 0x79 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5a6, gbc.sp());
        EXPECT(0x7442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02F0
        gbc.setState(0x64c3, 0x5445, 0x7580, 0x9ab7, 0x6c56, 0x26c5, 0x1, 0x0);
        gbc.writeMem(0x64c3, { 0x79 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5445, gbc.sp());
        EXPECT(0x64c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02F1
        gbc.setState(0xb061, 0xe3c2, 0xa6d0, 0xb4a9, 0xd5f8, 0x7a2f, 0x1, 0x1);
        gbc.writeMem(0xb061, { 0x79 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe3c2, gbc.sp());
        EXPECT(0xb062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb061));
        // 79 02F2
        gbc.setState(0xe182, 0xd0b0, 0x6750, 0xa9e2, 0xef61, 0x5723, 0x1, 0x1);
        gbc.writeMem(0xe182, { 0x79 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd0b0, gbc.sp());
        EXPECT(0xe183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe182));
        // 79 02F3
        gbc.setState(0xf50, 0xac99, 0x4b30, 0x5c1a, 0xa235, 0x9845, 0x1, 0x1);
        gbc.writeMem(0xf50, { 0x79 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xac99, gbc.sp());
        EXPECT(0xf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02F4
        gbc.setState(0x1251, 0xdd86, 0x63a0, 0xf0bb, 0xb9d1, 0xf321, 0x1, 0x0);
        gbc.writeMem(0x1251, { 0x79 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdd86, gbc.sp());
        EXPECT(0x1252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02F5
        gbc.setState(0x5c05, 0xcac3, 0x6c00, 0xe2cd, 0xb386, 0xe67c, 0x1, 0x0);
        gbc.writeMem(0x5c05, { 0x79 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcac3, gbc.sp());
        EXPECT(0x5c06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02F7
        gbc.setState(0xccbf, 0xa9a2, 0x7af0, 0xee0c, 0xf17e, 0xe530, 0x1, 0x1);
        gbc.writeMem(0xccbf, { 0x79 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa9a2, gbc.sp());
        EXPECT(0xccc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xccbf));
        // 79 02F8
        gbc.setState(0x2594, 0x5ef3, 0x3790, 0xa542, 0x4abc, 0xb6f8, 0x1, 0x1);
        gbc.writeMem(0x2594, { 0x79 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5ef3, gbc.sp());
        EXPECT(0x2595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02F9
        gbc.setState(0x1d34, 0x5611, 0x5160, 0x4642, 0x8717, 0xd9e7, 0x0, 0x0);
        gbc.writeMem(0x1d34, { 0x79 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5611, gbc.sp());
        EXPECT(0x1d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 02FA
        gbc.setState(0xdf77, 0xbc91, 0x4130, 0x13c4, 0x9fcb, 0x901d, 0x0, 0x0);
        gbc.writeMem(0xdf77, { 0x79 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbc91, gbc.sp());
        EXPECT(0xdf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdf77));
        // 79 02FB
        gbc.setState(0xb325, 0x721e, 0x6d70, 0x98c1, 0xf755, 0x10a0, 0x1, 0x0);
        gbc.writeMem(0xb325, { 0x79 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x721e, gbc.sp());
        EXPECT(0xb326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb325));
        // 79 02FC
        gbc.setState(0x6345, 0x68f1, 0xb610, 0x3519, 0x997, 0x49e6, 0x1, 0x1);
        gbc.writeMem(0x6345, { 0x79 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x68f1, gbc.sp());
        EXPECT(0x6346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02FD
        gbc.setState(0xee3, 0x6506, 0x710, 0xc218, 0x4ba6, 0x3149, 0x0, 0x0);
        gbc.writeMem(0xee3, { 0x79 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6506, gbc.sp());
        EXPECT(0xee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 02FE
        gbc.setState(0xc983, 0xc447, 0x4ed0, 0xe05a, 0x12cb, 0xfb09, 0x0, 0x0);
        gbc.writeMem(0xc983, { 0x79 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc447, gbc.sp());
        EXPECT(0xc984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc983));
        // 79 02FF
        gbc.setState(0xb62a, 0xf69c, 0xeb60, 0x40f6, 0xab37, 0xfa36, 0x1, 0x0);
        gbc.writeMem(0xb62a, { 0x79 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf69c, gbc.sp());
        EXPECT(0xb62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb62a));
        // 79 0300
        gbc.setState(0x1a1c, 0x1ad5, 0xd4a0, 0x4a04, 0xf77a, 0x372, 0x1, 0x0);
        gbc.writeMem(0x1a1c, { 0x79 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1ad5, gbc.sp());
        EXPECT(0x1a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0301
        gbc.setState(0x2ad4, 0xfbfd, 0x11c0, 0xe926, 0xb502, 0xb075, 0x1, 0x0);
        gbc.writeMem(0x2ad4, { 0x79 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfbfd, gbc.sp());
        EXPECT(0x2ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0302
        gbc.setState(0x7a97, 0xd984, 0x1200, 0x69b6, 0x4ee, 0x829a, 0x0, 0x0);
        gbc.writeMem(0x7a97, { 0x79 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd984, gbc.sp());
        EXPECT(0x7a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0303
        gbc.setState(0x9b6a, 0xf981, 0x87b0, 0x42c1, 0xf7d3, 0x1f24, 0x1, 0x0);
        gbc.writeMem(0x9b6a, { 0x79 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf981, gbc.sp());
        EXPECT(0x9b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9b6a));
        // 79 0304
        gbc.setState(0x1ec5, 0x7ad5, 0xb5f0, 0xc623, 0xa755, 0x470f, 0x1, 0x1);
        gbc.writeMem(0x1ec5, { 0x79 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7ad5, gbc.sp());
        EXPECT(0x1ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0305
        gbc.setState(0x7a7b, 0x1a90, 0x4dd0, 0xc573, 0x763d, 0x2150, 0x0, 0x0);
        gbc.writeMem(0x7a7b, { 0x79 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1a90, gbc.sp());
        EXPECT(0x7a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0306
        gbc.setState(0xcdc0, 0x8b54, 0xcf30, 0x3759, 0xc6f8, 0x2ac8, 0x0, 0x1);
        gbc.writeMem(0xcdc0, { 0x79 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8b54, gbc.sp());
        EXPECT(0xcdc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcdc0));
        // 79 0307
        gbc.setState(0x4a9c, 0x6ace, 0x47d0, 0xb64a, 0x3a05, 0x2ac7, 0x0, 0x1);
        gbc.writeMem(0x4a9c, { 0x79 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6ace, gbc.sp());
        EXPECT(0x4a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0308
        gbc.setState(0xc1d3, 0x81eb, 0xc2b0, 0x8ddc, 0x96e8, 0x2f67, 0x0, 0x0);
        gbc.writeMem(0xc1d3, { 0x79 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x81eb, gbc.sp());
        EXPECT(0xc1d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc1d3));
        // 79 0309
        gbc.setState(0x5227, 0x4daf, 0x2ef0, 0x16d6, 0xc41f, 0xb8a0, 0x1, 0x1);
        gbc.writeMem(0x5227, { 0x79 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4daf, gbc.sp());
        EXPECT(0x5228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 030A
        gbc.setState(0xb1fb, 0xa737, 0xbd40, 0xe190, 0xc918, 0xfcbe, 0x0, 0x1);
        gbc.writeMem(0xb1fb, { 0x79 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa737, gbc.sp());
        EXPECT(0xb1fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb1fb));
        // 79 030B
        gbc.setState(0x949f, 0x9ec3, 0x1250, 0x3c43, 0xfca2, 0x60d5, 0x1, 0x0);
        gbc.writeMem(0x949f, { 0x79 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9ec3, gbc.sp());
        EXPECT(0x94a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x949f));
        // 79 030C
        gbc.setState(0x2fb3, 0x6709, 0x4b60, 0xe8b2, 0x80be, 0x69d6, 0x1, 0x1);
        gbc.writeMem(0x2fb3, { 0x79 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6709, gbc.sp());
        EXPECT(0x2fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 030D
        gbc.setState(0x4c40, 0x6ee8, 0xdcb0, 0x60af, 0x2ee, 0xbd5e, 0x1, 0x0);
        gbc.writeMem(0x4c40, { 0x79 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6ee8, gbc.sp());
        EXPECT(0x4c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 030E
        gbc.setState(0x9744, 0x8a6d, 0x50e0, 0xa64d, 0x6faa, 0x9178, 0x1, 0x1);
        gbc.writeMem(0x9744, { 0x79 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8a6d, gbc.sp());
        EXPECT(0x9745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9744));
        // 79 030F
        gbc.setState(0xbc28, 0xbfa5, 0xff10, 0x63bb, 0xe77a, 0x1745, 0x0, 0x0);
        gbc.writeMem(0xbc28, { 0x79 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbfa5, gbc.sp());
        EXPECT(0xbc29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbc28));
        // 79 0311
        gbc.setState(0x4a1f, 0x7156, 0xc620, 0x3310, 0x7a59, 0x9748, 0x1, 0x0);
        gbc.writeMem(0x4a1f, { 0x79 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7156, gbc.sp());
        EXPECT(0x4a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0313
        gbc.setState(0x2504, 0x7462, 0xb690, 0x58eb, 0x1040, 0x1707, 0x0, 0x0);
        gbc.writeMem(0x2504, { 0x79 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7462, gbc.sp());
        EXPECT(0x2505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0314
        gbc.setState(0x2d06, 0xeec, 0xb400, 0x4188, 0x1976, 0x5af9, 0x0, 0x1);
        gbc.writeMem(0x2d06, { 0x79 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xeec, gbc.sp());
        EXPECT(0x2d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0315
        gbc.setState(0x2c99, 0x2be6, 0x67c0, 0xbd13, 0xa0c5, 0x198e, 0x1, 0x1);
        gbc.writeMem(0x2c99, { 0x79 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2be6, gbc.sp());
        EXPECT(0x2c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0316
        gbc.setState(0x24e1, 0xbfe2, 0xf400, 0x4c1d, 0x1838, 0xdf40, 0x1, 0x1);
        gbc.writeMem(0x24e1, { 0x79 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbfe2, gbc.sp());
        EXPECT(0x24e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0317
        gbc.setState(0x7246, 0x38c0, 0xc860, 0x7d47, 0xf39d, 0x7199, 0x0, 0x0);
        gbc.writeMem(0x7246, { 0x79 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x38c0, gbc.sp());
        EXPECT(0x7247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0318
        gbc.setState(0xb8d5, 0xad7f, 0x3070, 0xf847, 0xbf72, 0x3a3a, 0x1, 0x0);
        gbc.writeMem(0xb8d5, { 0x79 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xad7f, gbc.sp());
        EXPECT(0xb8d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb8d5));
        // 79 0319
        gbc.setState(0xbeeb, 0xf582, 0x1590, 0x90f9, 0xda6c, 0xbb5e, 0x0, 0x0);
        gbc.writeMem(0xbeeb, { 0x79 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf582, gbc.sp());
        EXPECT(0xbeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbeeb));
        // 79 031A
        gbc.setState(0x5353, 0x8f6f, 0x4eb0, 0xc36, 0xd50c, 0x5c3a, 0x0, 0x1);
        gbc.writeMem(0x5353, { 0x79 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8f6f, gbc.sp());
        EXPECT(0x5354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 031B
        gbc.setState(0xd9d, 0xbef8, 0x2870, 0xf123, 0xad0e, 0xc0f2, 0x1, 0x1);
        gbc.writeMem(0xd9d, { 0x79 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbef8, gbc.sp());
        EXPECT(0xd9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 031C
        gbc.setState(0x4963, 0xfd04, 0xa1a0, 0x3dc6, 0x6558, 0x95cb, 0x0, 0x1);
        gbc.writeMem(0x4963, { 0x79 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfd04, gbc.sp());
        EXPECT(0x4964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 031D
        gbc.setState(0xc9c5, 0x3cb0, 0xaa0, 0x246, 0xe85f, 0xbcaf, 0x0, 0x0);
        gbc.writeMem(0xc9c5, { 0x79 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3cb0, gbc.sp());
        EXPECT(0xc9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc9c5));
        // 79 031E
        gbc.setState(0xcae1, 0x2aa2, 0x74c0, 0x1107, 0xbb53, 0xe0b3, 0x0, 0x1);
        gbc.writeMem(0xcae1, { 0x79 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2aa2, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcae1));
        // 79 031F
        gbc.setState(0x2c6f, 0x9714, 0x4d20, 0x85b1, 0x2e50, 0xb525, 0x1, 0x0);
        gbc.writeMem(0x2c6f, { 0x79 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9714, gbc.sp());
        EXPECT(0x2c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0320
        gbc.setState(0x45a0, 0xe322, 0xa370, 0xffe4, 0xce50, 0x3b2b, 0x1, 0x1);
        gbc.writeMem(0x45a0, { 0x79 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe322, gbc.sp());
        EXPECT(0x45a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0321
        gbc.setState(0x3c10, 0x549d, 0xb8a0, 0x4850, 0x1510, 0xe16c, 0x1, 0x1);
        gbc.writeMem(0x3c10, { 0x79 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x549d, gbc.sp());
        EXPECT(0x3c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0322
        gbc.setState(0x47f7, 0x68b6, 0x5490, 0x7b94, 0xef3, 0xa167, 0x0, 0x1);
        gbc.writeMem(0x47f7, { 0x79 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x68b6, gbc.sp());
        EXPECT(0x47f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0323
        gbc.setState(0x2a32, 0xd0ca, 0xcaa0, 0x7cac, 0x6234, 0x8d0f, 0x0, 0x0);
        gbc.writeMem(0x2a32, { 0x79 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd0ca, gbc.sp());
        EXPECT(0x2a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0324
        gbc.setState(0x3e5f, 0xbe63, 0xfb60, 0x382b, 0xc0c3, 0xc02d, 0x1, 0x0);
        gbc.writeMem(0x3e5f, { 0x79 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbe63, gbc.sp());
        EXPECT(0x3e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0325
        gbc.setState(0x4370, 0x879d, 0x3b60, 0xbef8, 0x2eef, 0x1c5f, 0x1, 0x1);
        gbc.writeMem(0x4370, { 0x79 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x879d, gbc.sp());
        EXPECT(0x4371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0326
        gbc.setState(0x581e, 0x74ec, 0x4ef0, 0x8faf, 0xe7e4, 0xfe85, 0x1, 0x0);
        gbc.writeMem(0x581e, { 0x79 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x74ec, gbc.sp());
        EXPECT(0x581f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0327
        gbc.setState(0x27d9, 0xa882, 0x86b0, 0x52a7, 0x4ebd, 0xe29e, 0x0, 0x1);
        gbc.writeMem(0x27d9, { 0x79 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa882, gbc.sp());
        EXPECT(0x27da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0328
        gbc.setState(0xcc96, 0x7d01, 0x3d30, 0x70c9, 0xe51f, 0x4373, 0x1, 0x1);
        gbc.writeMem(0xcc96, { 0x79 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7d01, gbc.sp());
        EXPECT(0xcc97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcc96));
        // 79 0329
        gbc.setState(0x4ef3, 0xc54d, 0x4b90, 0x349e, 0x6847, 0x18d2, 0x1, 0x0);
        gbc.writeMem(0x4ef3, { 0x79 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc54d, gbc.sp());
        EXPECT(0x4ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 032A
        gbc.setState(0x8201, 0x8b59, 0x8880, 0x1b6c, 0x382d, 0x92a3, 0x1, 0x0);
        gbc.writeMem(0x8201, { 0x79 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8b59, gbc.sp());
        EXPECT(0x8202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8201));
        // 79 032B
        gbc.setState(0x1240, 0xccb3, 0x3420, 0xe6f7, 0x66c5, 0xfcb7, 0x1, 0x0);
        gbc.writeMem(0x1240, { 0x79 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xccb3, gbc.sp());
        EXPECT(0x1241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 032C
        gbc.setState(0xd53c, 0xf4ef, 0xc780, 0x8449, 0x40ad, 0x20ce, 0x0, 0x0);
        gbc.writeMem(0xd53c, { 0x79 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf4ef, gbc.sp());
        EXPECT(0xd53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd53c));
        // 79 032D
        gbc.setState(0xe739, 0x60b4, 0x7af0, 0x8451, 0xb3c9, 0x760c, 0x0, 0x1);
        gbc.writeMem(0xe739, { 0x79 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x60b4, gbc.sp());
        EXPECT(0xe73a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe739));
        // 79 032E
        gbc.setState(0x3e40, 0x16d6, 0x4450, 0x1a6a, 0xb599, 0x8d0a, 0x0, 0x1);
        gbc.writeMem(0x3e40, { 0x79 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x16d6, gbc.sp());
        EXPECT(0x3e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 032F
        gbc.setState(0xdf47, 0x4f78, 0x6280, 0x793d, 0xea11, 0xf6b8, 0x1, 0x1);
        gbc.writeMem(0xdf47, { 0x79 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4f78, gbc.sp());
        EXPECT(0xdf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdf47));
        // 79 0330
        gbc.setState(0x3df8, 0xc622, 0x730, 0xc5ad, 0xfb9c, 0x6bc8, 0x0, 0x0);
        gbc.writeMem(0x3df8, { 0x79 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc622, gbc.sp());
        EXPECT(0x3df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0331
        gbc.setState(0x3cbb, 0xeea9, 0x7580, 0x5576, 0x9d06, 0xb23d, 0x0, 0x0);
        gbc.writeMem(0x3cbb, { 0x79 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xeea9, gbc.sp());
        EXPECT(0x3cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0332
        gbc.setState(0x48af, 0xb7a3, 0x3270, 0xb712, 0x3470, 0xc6fd, 0x0, 0x1);
        gbc.writeMem(0x48af, { 0x79 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb7a3, gbc.sp());
        EXPECT(0x48b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0333
        gbc.setState(0xbe29, 0x4e01, 0xff80, 0x40ea, 0xf7ae, 0x9cf0, 0x1, 0x0);
        gbc.writeMem(0xbe29, { 0x79 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4e01, gbc.sp());
        EXPECT(0xbe2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbe29));
        // 79 0334
        gbc.setState(0x131, 0x2be2, 0x95a0, 0x517c, 0xb5f0, 0x2723, 0x0, 0x0);
        gbc.writeMem(0x131, { 0x79 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2be2, gbc.sp());
        EXPECT(0x132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0335
        gbc.setState(0x636a, 0x223f, 0x20b0, 0x91a3, 0xc880, 0x8e4d, 0x0, 0x0);
        gbc.writeMem(0x636a, { 0x79 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x223f, gbc.sp());
        EXPECT(0x636b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0336
        gbc.setState(0x3c7a, 0x9402, 0xc80, 0x6f1d, 0x3179, 0x46d6, 0x0, 0x1);
        gbc.writeMem(0x3c7a, { 0x79 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9402, gbc.sp());
        EXPECT(0x3c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0337
        gbc.setState(0x7df0, 0xefc4, 0x92c0, 0x9b16, 0x13c9, 0x1e54, 0x1, 0x0);
        gbc.writeMem(0x7df0, { 0x79 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xefc4, gbc.sp());
        EXPECT(0x7df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0338
        gbc.setState(0x89fc, 0xdb3e, 0xa680, 0xd815, 0x5cf3, 0x2c5f, 0x0, 0x0);
        gbc.writeMem(0x89fc, { 0x79 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdb3e, gbc.sp());
        EXPECT(0x89fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x89fc));
        // 79 0339
        gbc.setState(0x274d, 0x6b14, 0x4850, 0xbbcc, 0x64ef, 0xd206, 0x1, 0x0);
        gbc.writeMem(0x274d, { 0x79 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6b14, gbc.sp());
        EXPECT(0x274e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 033A
        gbc.setState(0xc702, 0xee2a, 0x1cd0, 0x7700, 0x990a, 0x19f1, 0x1, 0x0);
        gbc.writeMem(0xc702, { 0x79 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xee2a, gbc.sp());
        EXPECT(0xc703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc702));
        // 79 033B
        gbc.setState(0x289f, 0x209e, 0xb340, 0xb87, 0x257b, 0x50b3, 0x1, 0x0);
        gbc.writeMem(0x289f, { 0x79 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x209e, gbc.sp());
        EXPECT(0x28a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 033C
        gbc.setState(0xb0a8, 0xfa3d, 0xc0a0, 0xdcf, 0xc1fb, 0x2fd2, 0x1, 0x1);
        gbc.writeMem(0xb0a8, { 0x79 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfa3d, gbc.sp());
        EXPECT(0xb0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb0a8));
        // 79 033D
        gbc.setState(0x9fd4, 0xc1be, 0x2830, 0xb883, 0x87af, 0x5d1c, 0x0, 0x0);
        gbc.writeMem(0x9fd4, { 0x79 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc1be, gbc.sp());
        EXPECT(0x9fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9fd4));
        // 79 033F
        gbc.setState(0x6e0, 0xe403, 0xcfa0, 0x5032, 0x4ba, 0x573, 0x0, 0x0);
        gbc.writeMem(0x6e0, { 0x79 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe403, gbc.sp());
        EXPECT(0x6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0340
        gbc.setState(0xf93, 0x292c, 0xaf70, 0xfefd, 0xbac, 0x7c11, 0x1, 0x0);
        gbc.writeMem(0xf93, { 0x79 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x292c, gbc.sp());
        EXPECT(0xf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0342
        gbc.setState(0xb77a, 0xa75f, 0xc770, 0xb83b, 0x7892, 0xb90c, 0x0, 0x1);
        gbc.writeMem(0xb77a, { 0x79 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa75f, gbc.sp());
        EXPECT(0xb77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb77a));
        // 79 0343
        gbc.setState(0xcd3c, 0xf1e9, 0x69e0, 0x100a, 0x82b6, 0x7412, 0x0, 0x1);
        gbc.writeMem(0xcd3c, { 0x79 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf1e9, gbc.sp());
        EXPECT(0xcd3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcd3c));
        // 79 0344
        gbc.setState(0xb8cf, 0x9a10, 0x5cc0, 0xb173, 0xd26f, 0x23dd, 0x0, 0x0);
        gbc.writeMem(0xb8cf, { 0x79 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9a10, gbc.sp());
        EXPECT(0xb8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb8cf));
        // 79 0345
        gbc.setState(0x3c8d, 0x77bd, 0x4e90, 0x7395, 0xb07c, 0x6e56, 0x1, 0x0);
        gbc.writeMem(0x3c8d, { 0x79 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x77bd, gbc.sp());
        EXPECT(0x3c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0346
        gbc.setState(0x382, 0xcd09, 0x3d30, 0xb58, 0x1f1a, 0xde7d, 0x1, 0x0);
        gbc.writeMem(0x382, { 0x79 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcd09, gbc.sp());
        EXPECT(0x383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0347
        gbc.setState(0x9a7d, 0xbfb4, 0x4760, 0x6841, 0x2c80, 0x56f0, 0x1, 0x1);
        gbc.writeMem(0x9a7d, { 0x79 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbfb4, gbc.sp());
        EXPECT(0x9a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9a7d));
        // 79 0348
        gbc.setState(0x5f3e, 0x71f3, 0xb840, 0x6e5, 0x145c, 0x4d66, 0x1, 0x0);
        gbc.writeMem(0x5f3e, { 0x79 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x71f3, gbc.sp());
        EXPECT(0x5f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0349
        gbc.setState(0x810d, 0x1ea9, 0xcc60, 0xc726, 0x9b28, 0xa3b8, 0x0, 0x1);
        gbc.writeMem(0x810d, { 0x79 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1ea9, gbc.sp());
        EXPECT(0x810e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x810d));
        // 79 034A
        gbc.setState(0x5894, 0x32f9, 0x9380, 0xf55e, 0x9f13, 0x6e46, 0x0, 0x0);
        gbc.writeMem(0x5894, { 0x79 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x32f9, gbc.sp());
        EXPECT(0x5895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 034B
        gbc.setState(0x90d8, 0x1466, 0x98b0, 0xc65, 0x7e9, 0x6239, 0x0, 0x1);
        gbc.writeMem(0x90d8, { 0x79 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1466, gbc.sp());
        EXPECT(0x90d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x90d8));
        // 79 034C
        gbc.setState(0xc8bd, 0x358e, 0x82a0, 0x95bd, 0x9470, 0xe058, 0x1, 0x1);
        gbc.writeMem(0xc8bd, { 0x79 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x358e, gbc.sp());
        EXPECT(0xc8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc8bd));
        // 79 034D
        gbc.setState(0x814a, 0x9040, 0x6a50, 0x723d, 0xcb4c, 0x6354, 0x0, 0x0);
        gbc.writeMem(0x814a, { 0x79 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9040, gbc.sp());
        EXPECT(0x814b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x814a));
        // 79 034E
        gbc.setState(0xdbf4, 0x51ec, 0x60f0, 0x2d04, 0x1f1c, 0xd04e, 0x1, 0x0);
        gbc.writeMem(0xdbf4, { 0x79 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x51ec, gbc.sp());
        EXPECT(0xdbf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdbf4));
        // 79 034F
        gbc.setState(0x5b8f, 0x73a4, 0xa9b0, 0xc6f2, 0x407c, 0x782d, 0x0, 0x0);
        gbc.writeMem(0x5b8f, { 0x79 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x73a4, gbc.sp());
        EXPECT(0x5b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0350
        gbc.setState(0x2196, 0x3b67, 0x2aa0, 0x595d, 0x8289, 0x9792, 0x0, 0x0);
        gbc.writeMem(0x2196, { 0x79 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3b67, gbc.sp());
        EXPECT(0x2197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0351
        gbc.setState(0x6f90, 0x4be8, 0xe560, 0xea8f, 0xe4a4, 0x77c8, 0x0, 0x0);
        gbc.writeMem(0x6f90, { 0x79 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4be8, gbc.sp());
        EXPECT(0x6f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0352
        gbc.setState(0x63d6, 0xf26, 0x870, 0xee05, 0x6e47, 0x7890, 0x1, 0x1);
        gbc.writeMem(0x63d6, { 0x79 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf26, gbc.sp());
        EXPECT(0x63d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0353
        gbc.setState(0x1c2b, 0x89c5, 0x5770, 0xbfe5, 0x53a9, 0x96a2, 0x0, 0x1);
        gbc.writeMem(0x1c2b, { 0x79 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x89c5, gbc.sp());
        EXPECT(0x1c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0355
        gbc.setState(0xdda8, 0x1e0, 0x62b0, 0x930b, 0xd825, 0x11a5, 0x1, 0x0);
        gbc.writeMem(0xdda8, { 0x79 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1e0, gbc.sp());
        EXPECT(0xdda9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdda8));
        // 79 0356
        gbc.setState(0xdc68, 0x502a, 0x1f30, 0x8204, 0x5e44, 0xb264, 0x1, 0x0);
        gbc.writeMem(0xdc68, { 0x79 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x502a, gbc.sp());
        EXPECT(0xdc69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdc68));
        // 79 0357
        gbc.setState(0x84d0, 0x23d6, 0x9160, 0xf9e4, 0xe8d5, 0x6783, 0x1, 0x0);
        gbc.writeMem(0x84d0, { 0x79 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x23d6, gbc.sp());
        EXPECT(0x84d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x84d0));
        // 79 0358
        gbc.setState(0x1f6d, 0xcf82, 0x1400, 0x59dc, 0xd4da, 0xdf14, 0x0, 0x0);
        gbc.writeMem(0x1f6d, { 0x79 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcf82, gbc.sp());
        EXPECT(0x1f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0359
        gbc.setState(0x1014, 0xba43, 0xb440, 0x2604, 0x3330, 0xbb64, 0x0, 0x0);
        gbc.writeMem(0x1014, { 0x79 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xba43, gbc.sp());
        EXPECT(0x1015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 035A
        gbc.setState(0x1810, 0xf90f, 0x6400, 0x3d1, 0x3682, 0x7010, 0x0, 0x1);
        gbc.writeMem(0x1810, { 0x79 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf90f, gbc.sp());
        EXPECT(0x1811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 035B
        gbc.setState(0xd340, 0x8f37, 0x46f0, 0xa24c, 0xb87f, 0x6fea, 0x1, 0x0);
        gbc.writeMem(0xd340, { 0x79 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8f37, gbc.sp());
        EXPECT(0xd341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd340));
        // 79 035C
        gbc.setState(0xd7f3, 0xa6dd, 0xadc0, 0x4b28, 0x41be, 0xf5ec, 0x0, 0x0);
        gbc.writeMem(0xd7f3, { 0x79 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa6dd, gbc.sp());
        EXPECT(0xd7f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd7f3));
        // 79 035D
        gbc.setState(0xab77, 0xcb43, 0x2560, 0xab64, 0x5fb3, 0x7134, 0x1, 0x1);
        gbc.writeMem(0xab77, { 0x79 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcb43, gbc.sp());
        EXPECT(0xab78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xab77));
        // 79 035E
        gbc.setState(0x6cc3, 0x4dd9, 0xe150, 0xf976, 0x59ec, 0x7216, 0x1, 0x1);
        gbc.writeMem(0x6cc3, { 0x79 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4dd9, gbc.sp());
        EXPECT(0x6cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 035F
        gbc.setState(0xb75e, 0x8bfc, 0x4d70, 0xf49d, 0xf601, 0xd29f, 0x1, 0x0);
        gbc.writeMem(0xb75e, { 0x79 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8bfc, gbc.sp());
        EXPECT(0xb75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb75e));
        // 79 0360
        gbc.setState(0x94ed, 0x3dbe, 0x80, 0xd109, 0xae4d, 0xc8d6, 0x1, 0x0);
        gbc.writeMem(0x94ed, { 0x79 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3dbe, gbc.sp());
        EXPECT(0x94ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x94ed));
        // 79 0361
        gbc.setState(0x658b, 0x2d5d, 0x2de0, 0x192d, 0x10bd, 0x1b28, 0x1, 0x1);
        gbc.writeMem(0x658b, { 0x79 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2d5d, gbc.sp());
        EXPECT(0x658c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0362
        gbc.setState(0xddb1, 0x1366, 0x1290, 0xabf0, 0x9aeb, 0xe26d, 0x0, 0x1);
        gbc.writeMem(0xddb1, { 0x79 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1366, gbc.sp());
        EXPECT(0xddb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xddb1));
        // 79 0363
        gbc.setState(0xdf75, 0x1858, 0xbb80, 0xa318, 0xdaec, 0x636a, 0x1, 0x1);
        gbc.writeMem(0xdf75, { 0x79 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1858, gbc.sp());
        EXPECT(0xdf76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdf75));
        // 79 0364
        gbc.setState(0xd940, 0x2df8, 0x6e40, 0x6824, 0xf58e, 0xad5f, 0x0, 0x1);
        gbc.writeMem(0xd940, { 0x79 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2df8, gbc.sp());
        EXPECT(0xd941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd940));
        // 79 0365
        gbc.setState(0xeb18, 0x18db, 0x5b40, 0xe8d4, 0x779e, 0xa5e, 0x1, 0x0);
        gbc.writeMem(0xeb18, { 0x79 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x18db, gbc.sp());
        EXPECT(0xeb19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeb18));
        // 79 0366
        gbc.setState(0x49f3, 0x7a5b, 0x2fe0, 0x1aee, 0x9183, 0x1e0a, 0x1, 0x1);
        gbc.writeMem(0x49f3, { 0x79 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7a5b, gbc.sp());
        EXPECT(0x49f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0367
        gbc.setState(0x24f1, 0xde4c, 0x3b60, 0x8284, 0x3b69, 0x777c, 0x1, 0x0);
        gbc.writeMem(0x24f1, { 0x79 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xde4c, gbc.sp());
        EXPECT(0x24f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0369
        gbc.setState(0xedd0, 0x723f, 0x4980, 0x63f3, 0xdcae, 0x7a0, 0x1, 0x1);
        gbc.writeMem(0xedd0, { 0x79 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x723f, gbc.sp());
        EXPECT(0xedd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xedd0));
        // 79 036A
        gbc.setState(0x927d, 0xb45a, 0x9340, 0x2db2, 0xaaa0, 0xe855, 0x0, 0x1);
        gbc.writeMem(0x927d, { 0x79 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb45a, gbc.sp());
        EXPECT(0x927e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x927d));
        // 79 036B
        gbc.setState(0x7042, 0xcc28, 0x3480, 0x7006, 0xb70, 0xb357, 0x0, 0x0);
        gbc.writeMem(0x7042, { 0x79 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcc28, gbc.sp());
        EXPECT(0x7043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 036C
        gbc.setState(0x851c, 0x9ed7, 0xfac0, 0xe125, 0x5449, 0x4735, 0x1, 0x0);
        gbc.writeMem(0x851c, { 0x79 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9ed7, gbc.sp());
        EXPECT(0x851d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x851c));
        // 79 036D
        gbc.setState(0xd405, 0xe3c6, 0x8140, 0xb0e6, 0x5017, 0x6ab9, 0x0, 0x0);
        gbc.writeMem(0xd405, { 0x79 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe3c6, gbc.sp());
        EXPECT(0xd406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd405));
        // 79 036E
        gbc.setState(0xa527, 0xfb26, 0xbd90, 0xa9a7, 0x9c34, 0xe79b, 0x0, 0x1);
        gbc.writeMem(0xa527, { 0x79 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfb26, gbc.sp());
        EXPECT(0xa528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa527));
        // 79 036F
        gbc.setState(0x2f51, 0xd671, 0x5ee0, 0x5035, 0xfd98, 0x48ab, 0x0, 0x0);
        gbc.writeMem(0x2f51, { 0x79 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd671, gbc.sp());
        EXPECT(0x2f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0370
        gbc.setState(0xad0c, 0x7c9b, 0x92e0, 0x8c04, 0xb1c0, 0x2577, 0x0, 0x0);
        gbc.writeMem(0xad0c, { 0x79 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7c9b, gbc.sp());
        EXPECT(0xad0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xad0c));
        // 79 0371
        gbc.setState(0x6ed1, 0xf36f, 0xc640, 0x2bfc, 0x7302, 0xd00a, 0x1, 0x0);
        gbc.writeMem(0x6ed1, { 0x79 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf36f, gbc.sp());
        EXPECT(0x6ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0372
        gbc.setState(0x884, 0x7472, 0x8310, 0x3760, 0x82af, 0x7a60, 0x1, 0x1);
        gbc.writeMem(0x884, { 0x79 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7472, gbc.sp());
        EXPECT(0x885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0373
        gbc.setState(0xa0e0, 0x4644, 0xd030, 0x6abf, 0x8d79, 0xe588, 0x0, 0x0);
        gbc.writeMem(0xa0e0, { 0x79 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4644, gbc.sp());
        EXPECT(0xa0e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa0e0));
        // 79 0374
        gbc.setState(0xa5f3, 0x2c41, 0xab30, 0xdd98, 0x6469, 0xcc4a, 0x1, 0x0);
        gbc.writeMem(0xa5f3, { 0x79 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2c41, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa5f3));
        // 79 0375
        gbc.setState(0xb9bd, 0xb5c0, 0x9b90, 0xfa3c, 0x4254, 0x2f08, 0x1, 0x1);
        gbc.writeMem(0xb9bd, { 0x79 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb5c0, gbc.sp());
        EXPECT(0xb9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb9bd));
        // 79 0376
        gbc.setState(0x7798, 0x9266, 0x6ef0, 0xcbb0, 0xac57, 0x801a, 0x1, 0x0);
        gbc.writeMem(0x7798, { 0x79 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9266, gbc.sp());
        EXPECT(0x7799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0377
        gbc.setState(0xe3cc, 0x4c7c, 0x4b20, 0xda61, 0xe4, 0x7055, 0x0, 0x0);
        gbc.writeMem(0xe3cc, { 0x79 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4c7c, gbc.sp());
        EXPECT(0xe3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe3cc));
        // 79 0378
        gbc.setState(0x2dd9, 0xfd49, 0x79b0, 0x3bb, 0x1031, 0x60ae, 0x0, 0x1);
        gbc.writeMem(0x2dd9, { 0x79 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfd49, gbc.sp());
        EXPECT(0x2dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0379
        gbc.setState(0xd40e, 0x3647, 0xf560, 0x30eb, 0x5cfe, 0x27f6, 0x1, 0x0);
        gbc.writeMem(0xd40e, { 0x79 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3647, gbc.sp());
        EXPECT(0xd40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd40e));
        // 79 037A
        gbc.setState(0xca21, 0x8fda, 0x44c0, 0x1c6d, 0x1ae8, 0xf886, 0x0, 0x1);
        gbc.writeMem(0xca21, { 0x79 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8fda, gbc.sp());
        EXPECT(0xca22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xca21));
        // 79 037B
        gbc.setState(0xe6e7, 0xa606, 0x8b20, 0x7f0, 0xfe11, 0x5baa, 0x0, 0x1);
        gbc.writeMem(0xe6e7, { 0x79 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa606, gbc.sp());
        EXPECT(0xe6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe6e7));
        // 79 037C
        gbc.setState(0x4416, 0x56fe, 0xed40, 0x3649, 0x90f, 0x765f, 0x0, 0x1);
        gbc.writeMem(0x4416, { 0x79 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x56fe, gbc.sp());
        EXPECT(0x4417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 037D
        gbc.setState(0xe671, 0x6a5, 0xc110, 0x22ae, 0x4e21, 0xceaa, 0x1, 0x1);
        gbc.writeMem(0xe671, { 0x79 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6a5, gbc.sp());
        EXPECT(0xe672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe671));
        // 79 037E
        gbc.setState(0x2b31, 0xe414, 0x3ae0, 0x62e1, 0x385f, 0x86c1, 0x0, 0x0);
        gbc.writeMem(0x2b31, { 0x79 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe414, gbc.sp());
        EXPECT(0x2b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 037F
        gbc.setState(0x3c88, 0x3783, 0x20d0, 0x3061, 0x8ed0, 0x6263, 0x1, 0x0);
        gbc.writeMem(0x3c88, { 0x79 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3783, gbc.sp());
        EXPECT(0x3c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0380
        gbc.setState(0x3a89, 0x304e, 0x2ec0, 0x2914, 0x4618, 0x5b49, 0x0, 0x0);
        gbc.writeMem(0x3a89, { 0x79 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x304e, gbc.sp());
        EXPECT(0x3a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0381
        gbc.setState(0xd092, 0x1a20, 0x9830, 0x7e20, 0x5e2a, 0x55f6, 0x0, 0x1);
        gbc.writeMem(0xd092, { 0x79 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1a20, gbc.sp());
        EXPECT(0xd093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd092));
        // 79 0383
        gbc.setState(0x4b13, 0x3d3b, 0x9410, 0xa2c8, 0xbafe, 0x9797, 0x0, 0x1);
        gbc.writeMem(0x4b13, { 0x79 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3d3b, gbc.sp());
        EXPECT(0x4b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0384
        gbc.setState(0x9e82, 0x476a, 0x3c30, 0x6400, 0x10f2, 0xd749, 0x1, 0x0);
        gbc.writeMem(0x9e82, { 0x79 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x476a, gbc.sp());
        EXPECT(0x9e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9e82));
        // 79 0385
        gbc.setState(0x7e3b, 0x3c30, 0x8d70, 0x86cf, 0xc0b6, 0x3c53, 0x1, 0x1);
        gbc.writeMem(0x7e3b, { 0x79 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3c30, gbc.sp());
        EXPECT(0x7e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0386
        gbc.setState(0xa05e, 0x9418, 0x7870, 0xe9f5, 0x9fdd, 0x4090, 0x1, 0x0);
        gbc.writeMem(0xa05e, { 0x79 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9418, gbc.sp());
        EXPECT(0xa05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa05e));
        // 79 0387
        gbc.setState(0x8abd, 0xb4d, 0xbf20, 0x2787, 0x9d9, 0xeb1b, 0x0, 0x1);
        gbc.writeMem(0x8abd, { 0x79 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb4d, gbc.sp());
        EXPECT(0x8abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8abd));
        // 79 0388
        gbc.setState(0x891c, 0x61c8, 0xd0b0, 0x79a4, 0xb354, 0x5708, 0x1, 0x1);
        gbc.writeMem(0x891c, { 0x79 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x61c8, gbc.sp());
        EXPECT(0x891d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x891c));
        // 79 0389
        gbc.setState(0xafb3, 0xa17, 0xa320, 0xf8e1, 0xc6f3, 0x9731, 0x1, 0x1);
        gbc.writeMem(0xafb3, { 0x79 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa17, gbc.sp());
        EXPECT(0xafb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xafb3));
        // 79 038A
        gbc.setState(0x2f3e, 0xfee4, 0x4540, 0xd4dd, 0xa037, 0xac1d, 0x0, 0x1);
        gbc.writeMem(0x2f3e, { 0x79 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfee4, gbc.sp());
        EXPECT(0x2f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 038B
        gbc.setState(0x2249, 0x4e65, 0x0, 0xd4e2, 0x9fcb, 0x46c5, 0x1, 0x0);
        gbc.writeMem(0x2249, { 0x79 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4e65, gbc.sp());
        EXPECT(0x224a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 038C
        gbc.setState(0x4643, 0x6089, 0xb7c0, 0xdf47, 0x7145, 0xc929, 0x1, 0x1);
        gbc.writeMem(0x4643, { 0x79 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6089, gbc.sp());
        EXPECT(0x4644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 038D
        gbc.setState(0x98c3, 0xc547, 0xf9c0, 0xb2c5, 0x6bef, 0x1647, 0x1, 0x0);
        gbc.writeMem(0x98c3, { 0x79 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc547, gbc.sp());
        EXPECT(0x98c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x98c3));
        // 79 038E
        gbc.setState(0x8da1, 0x9574, 0x1780, 0x8121, 0xfac3, 0xa123, 0x1, 0x1);
        gbc.writeMem(0x8da1, { 0x79 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9574, gbc.sp());
        EXPECT(0x8da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8da1));
        // 79 0390
        gbc.setState(0x506b, 0x52bd, 0xb520, 0xe13c, 0x2030, 0xe46b, 0x1, 0x1);
        gbc.writeMem(0x506b, { 0x79 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x52bd, gbc.sp());
        EXPECT(0x506c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0391
        gbc.setState(0x82b3, 0x6aa6, 0x26b0, 0x44dd, 0x55c5, 0xc2af, 0x1, 0x0);
        gbc.writeMem(0x82b3, { 0x79 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6aa6, gbc.sp());
        EXPECT(0x82b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x82b3));
        // 79 0392
        gbc.setState(0x4fe5, 0x9293, 0xf890, 0x218, 0xd5a, 0x1b99, 0x0, 0x1);
        gbc.writeMem(0x4fe5, { 0x79 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9293, gbc.sp());
        EXPECT(0x4fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0393
        gbc.setState(0x22e0, 0xbb17, 0xcc10, 0x9e32, 0xdc1d, 0x44dd, 0x1, 0x0);
        gbc.writeMem(0x22e0, { 0x79 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbb17, gbc.sp());
        EXPECT(0x22e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0394
        gbc.setState(0xcb2b, 0x5afb, 0x4990, 0xf27d, 0x1a87, 0x9e36, 0x1, 0x1);
        gbc.writeMem(0xcb2b, { 0x79 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5afb, gbc.sp());
        EXPECT(0xcb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcb2b));
        // 79 0395
        gbc.setState(0x2827, 0xb994, 0x980, 0xecd0, 0xbb49, 0xa41d, 0x1, 0x1);
        gbc.writeMem(0x2827, { 0x79 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb994, gbc.sp());
        EXPECT(0x2828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 0396
        gbc.setState(0x11ba, 0xa6d2, 0x1170, 0x85dc, 0x47ec, 0x378e, 0x0, 0x1);
        gbc.writeMem(0x11ba, { 0x79 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa6d2, gbc.sp());
        EXPECT(0x11bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0397
        gbc.setState(0x3ac7, 0xb399, 0x3c70, 0x72d5, 0xb7e5, 0xea48, 0x0, 0x0);
        gbc.writeMem(0x3ac7, { 0x79 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb399, gbc.sp());
        EXPECT(0x3ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0398
        gbc.setState(0x1ee8, 0x95ef, 0x9990, 0xd021, 0x3985, 0x1b2d, 0x0, 0x1);
        gbc.writeMem(0x1ee8, { 0x79 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x95ef, gbc.sp());
        EXPECT(0x1ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 0399
        gbc.setState(0xaff1, 0x18d2, 0xbc30, 0xc5db, 0x3214, 0xe79f, 0x1, 0x0);
        gbc.writeMem(0xaff1, { 0x79 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x18d2, gbc.sp());
        EXPECT(0xaff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xaff1));
        // 79 039A
        gbc.setState(0xbb29, 0xff5a, 0x34e0, 0x2802, 0x81fd, 0x159a, 0x0, 0x1);
        gbc.writeMem(0xbb29, { 0x79 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xff5a, gbc.sp());
        EXPECT(0xbb2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbb29));
        // 79 039B
        gbc.setState(0xb920, 0xa6f1, 0x9430, 0x1395, 0x85eb, 0xcc6a, 0x0, 0x1);
        gbc.writeMem(0xb920, { 0x79 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa6f1, gbc.sp());
        EXPECT(0xb921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb920));
        // 79 039C
        gbc.setState(0x5ccd, 0x8bf4, 0xb90, 0x9edc, 0x9563, 0xeaa5, 0x1, 0x1);
        gbc.writeMem(0x5ccd, { 0x79 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8bf4, gbc.sp());
        EXPECT(0x5cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 039D
        gbc.setState(0x424b, 0xe3d0, 0x9c20, 0x9381, 0x152e, 0x15f1, 0x1, 0x1);
        gbc.writeMem(0x424b, { 0x79 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe3d0, gbc.sp());
        EXPECT(0x424c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 039F
        gbc.setState(0xd54a, 0xcb9, 0x90e0, 0xc128, 0xc1e1, 0xc28, 0x1, 0x1);
        gbc.writeMem(0xd54a, { 0x79 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcb9, gbc.sp());
        EXPECT(0xd54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd54a));
        // 79 03A0
        gbc.setState(0xb6a6, 0xe49e, 0x15a0, 0xe903, 0xff77, 0xf9f4, 0x1, 0x0);
        gbc.writeMem(0xb6a6, { 0x79 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe49e, gbc.sp());
        EXPECT(0xb6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb6a6));
        // 79 03A1
        gbc.setState(0xa6ad, 0xea60, 0x9d00, 0x506e, 0x182c, 0xca93, 0x1, 0x1);
        gbc.writeMem(0xa6ad, { 0x79 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xea60, gbc.sp());
        EXPECT(0xa6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa6ad));
        // 79 03A2
        gbc.setState(0xee16, 0x84d5, 0x3f20, 0xc5c3, 0xa97e, 0xbfba, 0x1, 0x1);
        gbc.writeMem(0xee16, { 0x79 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x84d5, gbc.sp());
        EXPECT(0xee17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xee16));
        // 79 03A3
        gbc.setState(0xc8b0, 0x614, 0x81c0, 0xbafc, 0x5cb4, 0x1817, 0x0, 0x1);
        gbc.writeMem(0xc8b0, { 0x79 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x614, gbc.sp());
        EXPECT(0xc8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc8b0));
        // 79 03A4
        gbc.setState(0x16ff, 0x6c20, 0x5aa0, 0xf4ad, 0xd849, 0x6ba, 0x0, 0x1);
        gbc.writeMem(0x16ff, { 0x79 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6c20, gbc.sp());
        EXPECT(0x1700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03A5
        gbc.setState(0xab12, 0x7116, 0xf630, 0xa71, 0x2dde, 0x5ca, 0x0, 0x0);
        gbc.writeMem(0xab12, { 0x79 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7116, gbc.sp());
        EXPECT(0xab13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xab12));
        // 79 03A6
        gbc.setState(0xc451, 0xf12a, 0x5ee0, 0x308a, 0x1c78, 0x448c, 0x0, 0x0);
        gbc.writeMem(0xc451, { 0x79 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf12a, gbc.sp());
        EXPECT(0xc452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc451));
        // 79 03A7
        gbc.setState(0x9aca, 0x5175, 0xdd10, 0xf684, 0x583f, 0x11a, 0x1, 0x0);
        gbc.writeMem(0x9aca, { 0x79 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5175, gbc.sp());
        EXPECT(0x9acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9aca));
        // 79 03A8
        gbc.setState(0xe7e2, 0x84c8, 0xd450, 0xa26b, 0x5b3a, 0x4ace, 0x1, 0x0);
        gbc.writeMem(0xe7e2, { 0x79 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x84c8, gbc.sp());
        EXPECT(0xe7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe7e2));
        // 79 03A9
        gbc.setState(0xe243, 0xf539, 0x1b90, 0x3d98, 0xaca1, 0x23a2, 0x0, 0x1);
        gbc.writeMem(0xe243, { 0x79 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf539, gbc.sp());
        EXPECT(0xe244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe243));
        // 79 03AA
        gbc.setState(0xcf0, 0xabf4, 0x9650, 0xcad, 0x448f, 0xcf90, 0x0, 0x0);
        gbc.writeMem(0xcf0, { 0x79 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xabf4, gbc.sp());
        EXPECT(0xcf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03AB
        gbc.setState(0x13de, 0x2a71, 0xf6f0, 0x5396, 0x8e, 0xc4f8, 0x0, 0x0);
        gbc.writeMem(0x13de, { 0x79 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2a71, gbc.sp());
        EXPECT(0x13df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03AC
        gbc.setState(0x7246, 0x8820, 0x7ca0, 0xf6c7, 0x78bd, 0x8abf, 0x0, 0x0);
        gbc.writeMem(0x7246, { 0x79 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8820, gbc.sp());
        EXPECT(0x7247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03AD
        gbc.setState(0x1e65, 0xadd5, 0x27e0, 0x5308, 0x41d0, 0xce4b, 0x0, 0x1);
        gbc.writeMem(0x1e65, { 0x79 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xadd5, gbc.sp());
        EXPECT(0x1e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03AE
        gbc.setState(0x3f8a, 0x942c, 0x460, 0x2440, 0x7c85, 0x6512, 0x0, 0x1);
        gbc.writeMem(0x3f8a, { 0x79 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x942c, gbc.sp());
        EXPECT(0x3f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03AF
        gbc.setState(0xba6e, 0x2102, 0x3d80, 0x10f3, 0x4b31, 0xfcad, 0x1, 0x0);
        gbc.writeMem(0xba6e, { 0x79 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2102, gbc.sp());
        EXPECT(0xba6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xba6e));
        // 79 03B0
        gbc.setState(0x87ed, 0xeb92, 0xfac0, 0x8d84, 0x8a11, 0x2534, 0x1, 0x0);
        gbc.writeMem(0x87ed, { 0x79 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xeb92, gbc.sp());
        EXPECT(0x87ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x87ed));
        // 79 03B2
        gbc.setState(0x8df8, 0xcfed, 0x7740, 0x8d2e, 0xa01b, 0xe549, 0x0, 0x1);
        gbc.writeMem(0x8df8, { 0x79 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcfed, gbc.sp());
        EXPECT(0x8df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8df8));
        // 79 03B3
        gbc.setState(0x154f, 0x1966, 0x9a40, 0xe564, 0xa015, 0x9df7, 0x0, 0x1);
        gbc.writeMem(0x154f, { 0x79 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1966, gbc.sp());
        EXPECT(0x1550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03B4
        gbc.setState(0x68f7, 0x498f, 0x60d0, 0xb816, 0x3ae4, 0xb73b, 0x1, 0x0);
        gbc.writeMem(0x68f7, { 0x79 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x498f, gbc.sp());
        EXPECT(0x68f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03B5
        gbc.setState(0x54e4, 0xbc05, 0x35a0, 0xf8ba, 0xeb72, 0x6717, 0x1, 0x1);
        gbc.writeMem(0x54e4, { 0x79 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbc05, gbc.sp());
        EXPECT(0x54e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03B6
        gbc.setState(0xa2c2, 0x57b, 0x3550, 0xcb43, 0xf102, 0x98e3, 0x1, 0x0);
        gbc.writeMem(0xa2c2, { 0x79 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x57b, gbc.sp());
        EXPECT(0xa2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa2c2));
        // 79 03B7
        gbc.setState(0xde80, 0x34ee, 0x9b50, 0xbf47, 0x9363, 0xb5a3, 0x0, 0x0);
        gbc.writeMem(0xde80, { 0x79 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x34ee, gbc.sp());
        EXPECT(0xde81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xde80));
        // 79 03B8
        gbc.setState(0x9aff, 0x537, 0xec50, 0x9ec7, 0x8db4, 0xe5af, 0x1, 0x1);
        gbc.writeMem(0x9aff, { 0x79 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x537, gbc.sp());
        EXPECT(0x9b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9aff));
        // 79 03BA
        gbc.setState(0x2a4e, 0x61c8, 0x5970, 0x9634, 0x5172, 0x1515, 0x0, 0x0);
        gbc.writeMem(0x2a4e, { 0x79 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x61c8, gbc.sp());
        EXPECT(0x2a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03BB
        gbc.setState(0xa986, 0x9d0e, 0xc610, 0x6956, 0x5602, 0xd640, 0x0, 0x1);
        gbc.writeMem(0xa986, { 0x79 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9d0e, gbc.sp());
        EXPECT(0xa987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa986));
        // 79 03BC
        gbc.setState(0x1c4d, 0xdf2, 0x53e0, 0x8a86, 0xc626, 0x9191, 0x0, 0x1);
        gbc.writeMem(0x1c4d, { 0x79 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdf2, gbc.sp());
        EXPECT(0x1c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03BD
        gbc.setState(0xba00, 0xd5d5, 0x1540, 0xbad3, 0x1f84, 0x872a, 0x0, 0x1);
        gbc.writeMem(0xba00, { 0x79 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd5d5, gbc.sp());
        EXPECT(0xba01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xba00));
        // 79 03BE
        gbc.setState(0x5372, 0xb844, 0x6e20, 0x4124, 0x486, 0xd80f, 0x0, 0x1);
        gbc.writeMem(0x5372, { 0x79 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb844, gbc.sp());
        EXPECT(0x5373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03BF
        gbc.setState(0x96a, 0x7122, 0xf930, 0xe899, 0x641e, 0xc396, 0x0, 0x1);
        gbc.writeMem(0x96a, { 0x79 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7122, gbc.sp());
        EXPECT(0x96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03C0
        gbc.setState(0xd597, 0x2556, 0x360, 0x2b95, 0x8a6e, 0x2248, 0x1, 0x1);
        gbc.writeMem(0xd597, { 0x79 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2556, gbc.sp());
        EXPECT(0xd598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd597));
        // 79 03C1
        gbc.setState(0x9123, 0x7f5e, 0x6130, 0xc60e, 0x1a1, 0x8e40, 0x0, 0x1);
        gbc.writeMem(0x9123, { 0x79 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7f5e, gbc.sp());
        EXPECT(0x9124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9123));
        // 79 03C2
        gbc.setState(0x18b6, 0x172a, 0xe7d0, 0xa384, 0x84c2, 0x10e7, 0x1, 0x0);
        gbc.writeMem(0x18b6, { 0x79 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x172a, gbc.sp());
        EXPECT(0x18b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03C3
        gbc.setState(0x4774, 0xc2ea, 0xd670, 0xb1e0, 0x7103, 0xc426, 0x1, 0x0);
        gbc.writeMem(0x4774, { 0x79 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc2ea, gbc.sp());
        EXPECT(0x4775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03C4
        gbc.setState(0x298, 0x1665, 0xee20, 0xb604, 0x5157, 0xe810, 0x0, 0x1);
        gbc.writeMem(0x298, { 0x79 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1665, gbc.sp());
        EXPECT(0x299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03C5
        gbc.setState(0xe700, 0xfa06, 0x4450, 0x239a, 0xdaef, 0x6577, 0x1, 0x1);
        gbc.writeMem(0xe700, { 0x79 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfa06, gbc.sp());
        EXPECT(0xe701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe700));
        // 79 03C6
        gbc.setState(0x5085, 0xf501, 0x73d0, 0x2aa9, 0x29f9, 0xfe8b, 0x1, 0x1);
        gbc.writeMem(0x5085, { 0x79 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf501, gbc.sp());
        EXPECT(0x5086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03C7
        gbc.setState(0x3c33, 0x528, 0xbfb0, 0x2f4, 0xb7d7, 0x423e, 0x0, 0x0);
        gbc.writeMem(0x3c33, { 0x79 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x528, gbc.sp());
        EXPECT(0x3c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03C8
        gbc.setState(0xd2a9, 0xc88e, 0xf400, 0x82d2, 0xc235, 0x2c8c, 0x1, 0x0);
        gbc.writeMem(0xd2a9, { 0x79 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc88e, gbc.sp());
        EXPECT(0xd2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd2a9));
        // 79 03C9
        gbc.setState(0x65ea, 0xc968, 0xaf00, 0x2e0c, 0xa8a0, 0x283e, 0x1, 0x0);
        gbc.writeMem(0x65ea, { 0x79 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc968, gbc.sp());
        EXPECT(0x65eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03CA
        gbc.setState(0xb50a, 0xc958, 0x2d00, 0x601e, 0x9d3, 0x7784, 0x1, 0x1);
        gbc.writeMem(0xb50a, { 0x79 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc958, gbc.sp());
        EXPECT(0xb50b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb50a));
        // 79 03CB
        gbc.setState(0x9b93, 0xfdb6, 0xea30, 0xbe6c, 0xc5da, 0x7f9, 0x1, 0x0);
        gbc.writeMem(0x9b93, { 0x79 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfdb6, gbc.sp());
        EXPECT(0x9b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9b93));
        // 79 03CC
        gbc.setState(0x635b, 0xccb4, 0x4df0, 0xc42b, 0xef79, 0x442e, 0x1, 0x0);
        gbc.writeMem(0x635b, { 0x79 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xccb4, gbc.sp());
        EXPECT(0x635c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03CD
        gbc.setState(0x448e, 0xf5c7, 0xf2d0, 0x69e1, 0x5968, 0x9753, 0x1, 0x1);
        gbc.writeMem(0x448e, { 0x79 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf5c7, gbc.sp());
        EXPECT(0x448f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03CE
        gbc.setState(0x8853, 0x151d, 0x7a90, 0x5710, 0x4fa7, 0xf1dd, 0x0, 0x0);
        gbc.writeMem(0x8853, { 0x79 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x151d, gbc.sp());
        EXPECT(0x8854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8853));
        // 79 03CF
        gbc.setState(0x704a, 0xbee7, 0xe0, 0x6b2f, 0x6438, 0x5301, 0x1, 0x1);
        gbc.writeMem(0x704a, { 0x79 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbee7, gbc.sp());
        EXPECT(0x704b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03D0
        gbc.setState(0xa7f9, 0xf96f, 0x5c20, 0x1a9d, 0x2868, 0xd1f5, 0x1, 0x1);
        gbc.writeMem(0xa7f9, { 0x79 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf96f, gbc.sp());
        EXPECT(0xa7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa7f9));
        // 79 03D1
        gbc.setState(0xade0, 0x8984, 0x7230, 0xe75d, 0x8d2c, 0x3591, 0x1, 0x1);
        gbc.writeMem(0xade0, { 0x79 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8984, gbc.sp());
        EXPECT(0xade1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xade0));
        // 79 03D2
        gbc.setState(0x605a, 0xc3ea, 0xa020, 0x5d3f, 0xd2, 0xb9a3, 0x0, 0x1);
        gbc.writeMem(0x605a, { 0x79 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc3ea, gbc.sp());
        EXPECT(0x605b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03D4
        gbc.setState(0xc4ac, 0xcad0, 0x430, 0x854a, 0xee2f, 0xbb5, 0x1, 0x0);
        gbc.writeMem(0xc4ac, { 0x79 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcad0, gbc.sp());
        EXPECT(0xc4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc4ac));
        // 79 03D5
        gbc.setState(0xeb58, 0x8f9b, 0x7800, 0x76cc, 0x8e6a, 0x96ab, 0x0, 0x0);
        gbc.writeMem(0xeb58, { 0x79 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8f9b, gbc.sp());
        EXPECT(0xeb59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeb58));
        // 79 03D6
        gbc.setState(0xde43, 0xf1f5, 0xca60, 0x2eac, 0x76ea, 0xf56f, 0x0, 0x1);
        gbc.writeMem(0xde43, { 0x79 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf1f5, gbc.sp());
        EXPECT(0xde44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xde43));
        // 79 03D7
        gbc.setState(0x2bb7, 0x641c, 0xaf70, 0xdfb9, 0xbbdf, 0x2b4d, 0x1, 0x0);
        gbc.writeMem(0x2bb7, { 0x79 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x641c, gbc.sp());
        EXPECT(0x2bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03D8
        gbc.setState(0xa927, 0x17d4, 0xaaf0, 0xb9f7, 0x83f5, 0xe8c2, 0x1, 0x1);
        gbc.writeMem(0xa927, { 0x79 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x17d4, gbc.sp());
        EXPECT(0xa928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa927));
        // 79 03D9
        gbc.setState(0xb4f0, 0x7c76, 0x2c40, 0x41a9, 0xb20d, 0x3c52, 0x1, 0x0);
        gbc.writeMem(0xb4f0, { 0x79 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7c76, gbc.sp());
        EXPECT(0xb4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb4f0));
        // 79 03DA
        gbc.setState(0x7a97, 0xe8ec, 0x8490, 0xecf8, 0xff40, 0x6c45, 0x0, 0x0);
        gbc.writeMem(0x7a97, { 0x79 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe8ec, gbc.sp());
        EXPECT(0x7a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03DB
        gbc.setState(0xee05, 0x8bfa, 0xaf00, 0x21c2, 0x3e77, 0x12da, 0x1, 0x1);
        gbc.writeMem(0xee05, { 0x79 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8bfa, gbc.sp());
        EXPECT(0xee06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xee05));
        // 79 03DC
        gbc.setState(0x907a, 0xd29d, 0x9db0, 0x7467, 0x95f1, 0x3b3f, 0x0, 0x1);
        gbc.writeMem(0x907a, { 0x79 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd29d, gbc.sp());
        EXPECT(0x907b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x907a));
        // 79 03DD
        gbc.setState(0x40ab, 0x9038, 0xe3d0, 0x695f, 0x2f87, 0x2d08, 0x1, 0x1);
        gbc.writeMem(0x40ab, { 0x79 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9038, gbc.sp());
        EXPECT(0x40ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03DE
        gbc.setState(0x59a4, 0x8fae, 0x3e30, 0xdc19, 0x6830, 0xcd76, 0x1, 0x0);
        gbc.writeMem(0x59a4, { 0x79 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8fae, gbc.sp());
        EXPECT(0x59a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03DF
        gbc.setState(0xd82, 0x46f, 0xe0a0, 0xd058, 0xb7ab, 0xdf0c, 0x0, 0x0);
        gbc.writeMem(0xd82, { 0x79 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x46f, gbc.sp());
        EXPECT(0xd83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03E1
        gbc.setState(0xceb9, 0x2d7b, 0x6750, 0x980f, 0x3b09, 0x641a, 0x0, 0x1);
        gbc.writeMem(0xceb9, { 0x79 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2d7b, gbc.sp());
        EXPECT(0xceba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xceb9));
        // 79 03E2
        gbc.setState(0x917e, 0xbed4, 0x48a0, 0xd27a, 0xa764, 0xa48d, 0x1, 0x1);
        gbc.writeMem(0x917e, { 0x79 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbed4, gbc.sp());
        EXPECT(0x917f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x917e));
        // 79 03E3
        gbc.setState(0x38c5, 0xd4fc, 0xcb70, 0xccc7, 0x535f, 0xcaab, 0x1, 0x1);
        gbc.writeMem(0x38c5, { 0x79 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd4fc, gbc.sp());
        EXPECT(0x38c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03E4
        gbc.setState(0x3e36, 0x6b2a, 0x6330, 0x9d14, 0xa75e, 0x56e9, 0x0, 0x0);
        gbc.writeMem(0x3e36, { 0x79 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6b2a, gbc.sp());
        EXPECT(0x3e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 79 03E5
        gbc.setState(0x5224, 0xa35a, 0xffc0, 0x11a8, 0x4079, 0xc19b, 0x0, 0x0);
        gbc.writeMem(0x5224, { 0x79 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa35a, gbc.sp());
        EXPECT(0x5225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03E6
        gbc.setState(0x40ea, 0xeca7, 0xdd60, 0xd0a3, 0x7fd7, 0xaa9b, 0x0, 0x0);
        gbc.writeMem(0x40ea, { 0x79 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeca7, gbc.sp());
        EXPECT(0x40eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 79 03E7
        gbc.setState(0x903c, 0xf0b2, 0x5490, 0x9bf4, 0xb16, 0xa7bc, 0x1, 0x0);
        gbc.writeMem(0x903c, { 0x79 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf0b2, gbc.sp());
        EXPECT(0x903d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x903c));
    }
